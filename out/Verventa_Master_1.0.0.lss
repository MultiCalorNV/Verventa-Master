
out/Verventa_Master_1.0.0.elf:     file format elf32-littlearm


Disassembly of section .text:

08000188 <memcpy>:
 8000188:	4684      	mov	ip, r0
 800018a:	ea41 0300 	orr.w	r3, r1, r0
 800018e:	f013 0303 	ands.w	r3, r3, #3
 8000192:	d16d      	bne.n	8000270 <memcpy+0xe8>
 8000194:	3a40      	subs	r2, #64	; 0x40
 8000196:	d341      	bcc.n	800021c <memcpy+0x94>
 8000198:	f851 3b04 	ldr.w	r3, [r1], #4
 800019c:	f840 3b04 	str.w	r3, [r0], #4
 80001a0:	f851 3b04 	ldr.w	r3, [r1], #4
 80001a4:	f840 3b04 	str.w	r3, [r0], #4
 80001a8:	f851 3b04 	ldr.w	r3, [r1], #4
 80001ac:	f840 3b04 	str.w	r3, [r0], #4
 80001b0:	f851 3b04 	ldr.w	r3, [r1], #4
 80001b4:	f840 3b04 	str.w	r3, [r0], #4
 80001b8:	f851 3b04 	ldr.w	r3, [r1], #4
 80001bc:	f840 3b04 	str.w	r3, [r0], #4
 80001c0:	f851 3b04 	ldr.w	r3, [r1], #4
 80001c4:	f840 3b04 	str.w	r3, [r0], #4
 80001c8:	f851 3b04 	ldr.w	r3, [r1], #4
 80001cc:	f840 3b04 	str.w	r3, [r0], #4
 80001d0:	f851 3b04 	ldr.w	r3, [r1], #4
 80001d4:	f840 3b04 	str.w	r3, [r0], #4
 80001d8:	f851 3b04 	ldr.w	r3, [r1], #4
 80001dc:	f840 3b04 	str.w	r3, [r0], #4
 80001e0:	f851 3b04 	ldr.w	r3, [r1], #4
 80001e4:	f840 3b04 	str.w	r3, [r0], #4
 80001e8:	f851 3b04 	ldr.w	r3, [r1], #4
 80001ec:	f840 3b04 	str.w	r3, [r0], #4
 80001f0:	f851 3b04 	ldr.w	r3, [r1], #4
 80001f4:	f840 3b04 	str.w	r3, [r0], #4
 80001f8:	f851 3b04 	ldr.w	r3, [r1], #4
 80001fc:	f840 3b04 	str.w	r3, [r0], #4
 8000200:	f851 3b04 	ldr.w	r3, [r1], #4
 8000204:	f840 3b04 	str.w	r3, [r0], #4
 8000208:	f851 3b04 	ldr.w	r3, [r1], #4
 800020c:	f840 3b04 	str.w	r3, [r0], #4
 8000210:	f851 3b04 	ldr.w	r3, [r1], #4
 8000214:	f840 3b04 	str.w	r3, [r0], #4
 8000218:	3a40      	subs	r2, #64	; 0x40
 800021a:	d2bd      	bcs.n	8000198 <memcpy+0x10>
 800021c:	3230      	adds	r2, #48	; 0x30
 800021e:	d311      	bcc.n	8000244 <memcpy+0xbc>
 8000220:	f851 3b04 	ldr.w	r3, [r1], #4
 8000224:	f840 3b04 	str.w	r3, [r0], #4
 8000228:	f851 3b04 	ldr.w	r3, [r1], #4
 800022c:	f840 3b04 	str.w	r3, [r0], #4
 8000230:	f851 3b04 	ldr.w	r3, [r1], #4
 8000234:	f840 3b04 	str.w	r3, [r0], #4
 8000238:	f851 3b04 	ldr.w	r3, [r1], #4
 800023c:	f840 3b04 	str.w	r3, [r0], #4
 8000240:	3a10      	subs	r2, #16
 8000242:	d2ed      	bcs.n	8000220 <memcpy+0x98>
 8000244:	320c      	adds	r2, #12
 8000246:	d305      	bcc.n	8000254 <memcpy+0xcc>
 8000248:	f851 3b04 	ldr.w	r3, [r1], #4
 800024c:	f840 3b04 	str.w	r3, [r0], #4
 8000250:	3a04      	subs	r2, #4
 8000252:	d2f9      	bcs.n	8000248 <memcpy+0xc0>
 8000254:	3204      	adds	r2, #4
 8000256:	d008      	beq.n	800026a <memcpy+0xe2>
 8000258:	07d2      	lsls	r2, r2, #31
 800025a:	bf1c      	itt	ne
 800025c:	f811 3b01 	ldrbne.w	r3, [r1], #1
 8000260:	f800 3b01 	strbne.w	r3, [r0], #1
 8000264:	d301      	bcc.n	800026a <memcpy+0xe2>
 8000266:	880b      	ldrh	r3, [r1, #0]
 8000268:	8003      	strh	r3, [r0, #0]
 800026a:	4660      	mov	r0, ip
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop
 8000270:	2a08      	cmp	r2, #8
 8000272:	d313      	bcc.n	800029c <memcpy+0x114>
 8000274:	078b      	lsls	r3, r1, #30
 8000276:	d08d      	beq.n	8000194 <memcpy+0xc>
 8000278:	f010 0303 	ands.w	r3, r0, #3
 800027c:	d08a      	beq.n	8000194 <memcpy+0xc>
 800027e:	f1c3 0304 	rsb	r3, r3, #4
 8000282:	1ad2      	subs	r2, r2, r3
 8000284:	07db      	lsls	r3, r3, #31
 8000286:	bf1c      	itt	ne
 8000288:	f811 3b01 	ldrbne.w	r3, [r1], #1
 800028c:	f800 3b01 	strbne.w	r3, [r0], #1
 8000290:	d380      	bcc.n	8000194 <memcpy+0xc>
 8000292:	f831 3b02 	ldrh.w	r3, [r1], #2
 8000296:	f820 3b02 	strh.w	r3, [r0], #2
 800029a:	e77b      	b.n	8000194 <memcpy+0xc>
 800029c:	3a04      	subs	r2, #4
 800029e:	d3d9      	bcc.n	8000254 <memcpy+0xcc>
 80002a0:	3a01      	subs	r2, #1
 80002a2:	f811 3b01 	ldrb.w	r3, [r1], #1
 80002a6:	f800 3b01 	strb.w	r3, [r0], #1
 80002aa:	d2f9      	bcs.n	80002a0 <memcpy+0x118>
 80002ac:	780b      	ldrb	r3, [r1, #0]
 80002ae:	7003      	strb	r3, [r0, #0]
 80002b0:	784b      	ldrb	r3, [r1, #1]
 80002b2:	7043      	strb	r3, [r0, #1]
 80002b4:	788b      	ldrb	r3, [r1, #2]
 80002b6:	7083      	strb	r3, [r0, #2]
 80002b8:	4660      	mov	r0, ip
 80002ba:	4770      	bx	lr

080002bc <__aeabi_drsub>:
 80002bc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c0:	e002      	b.n	80002c8 <__adddf3>
 80002c2:	bf00      	nop

080002c4 <__aeabi_dsub>:
 80002c4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002c8 <__adddf3>:
 80002c8:	b530      	push	{r4, r5, lr}
 80002ca:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002ce:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d2:	ea94 0f05 	teq	r4, r5
 80002d6:	bf08      	it	eq
 80002d8:	ea90 0f02 	teqeq	r0, r2
 80002dc:	bf1f      	itttt	ne
 80002de:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e2:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002e6:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ea:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002ee:	f000 80e2 	beq.w	80004b6 <__adddf3+0x1ee>
 80002f2:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002f6:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fa:	bfb8      	it	lt
 80002fc:	426d      	neglt	r5, r5
 80002fe:	dd0c      	ble.n	800031a <__adddf3+0x52>
 8000300:	442c      	add	r4, r5
 8000302:	ea80 0202 	eor.w	r2, r0, r2
 8000306:	ea81 0303 	eor.w	r3, r1, r3
 800030a:	ea82 0000 	eor.w	r0, r2, r0
 800030e:	ea83 0101 	eor.w	r1, r3, r1
 8000312:	ea80 0202 	eor.w	r2, r0, r2
 8000316:	ea81 0303 	eor.w	r3, r1, r3
 800031a:	2d36      	cmp	r5, #54	; 0x36
 800031c:	bf88      	it	hi
 800031e:	bd30      	pophi	{r4, r5, pc}
 8000320:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000324:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000328:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 800032c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000330:	d002      	beq.n	8000338 <__adddf3+0x70>
 8000332:	4240      	negs	r0, r0
 8000334:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000338:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 800033c:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000340:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000344:	d002      	beq.n	800034c <__adddf3+0x84>
 8000346:	4252      	negs	r2, r2
 8000348:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800034c:	ea94 0f05 	teq	r4, r5
 8000350:	f000 80a7 	beq.w	80004a2 <__adddf3+0x1da>
 8000354:	f1a4 0401 	sub.w	r4, r4, #1
 8000358:	f1d5 0e20 	rsbs	lr, r5, #32
 800035c:	db0d      	blt.n	800037a <__adddf3+0xb2>
 800035e:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000362:	fa22 f205 	lsr.w	r2, r2, r5
 8000366:	1880      	adds	r0, r0, r2
 8000368:	f141 0100 	adc.w	r1, r1, #0
 800036c:	fa03 f20e 	lsl.w	r2, r3, lr
 8000370:	1880      	adds	r0, r0, r2
 8000372:	fa43 f305 	asr.w	r3, r3, r5
 8000376:	4159      	adcs	r1, r3
 8000378:	e00e      	b.n	8000398 <__adddf3+0xd0>
 800037a:	f1a5 0520 	sub.w	r5, r5, #32
 800037e:	f10e 0e20 	add.w	lr, lr, #32
 8000382:	2a01      	cmp	r2, #1
 8000384:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000388:	bf28      	it	cs
 800038a:	f04c 0c02 	orrcs.w	ip, ip, #2
 800038e:	fa43 f305 	asr.w	r3, r3, r5
 8000392:	18c0      	adds	r0, r0, r3
 8000394:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000398:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800039c:	d507      	bpl.n	80003ae <__adddf3+0xe6>
 800039e:	f04f 0e00 	mov.w	lr, #0
 80003a2:	f1dc 0c00 	rsbs	ip, ip, #0
 80003a6:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003aa:	eb6e 0101 	sbc.w	r1, lr, r1
 80003ae:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b2:	d31b      	bcc.n	80003ec <__adddf3+0x124>
 80003b4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003b8:	d30c      	bcc.n	80003d4 <__adddf3+0x10c>
 80003ba:	0849      	lsrs	r1, r1, #1
 80003bc:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c0:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c4:	f104 0401 	add.w	r4, r4, #1
 80003c8:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003cc:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d0:	f080 809a 	bcs.w	8000508 <__adddf3+0x240>
 80003d4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003d8:	bf08      	it	eq
 80003da:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003de:	f150 0000 	adcs.w	r0, r0, #0
 80003e2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003e6:	ea41 0105 	orr.w	r1, r1, r5
 80003ea:	bd30      	pop	{r4, r5, pc}
 80003ec:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f0:	4140      	adcs	r0, r0
 80003f2:	eb41 0101 	adc.w	r1, r1, r1
 80003f6:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003fa:	f1a4 0401 	sub.w	r4, r4, #1
 80003fe:	d1e9      	bne.n	80003d4 <__adddf3+0x10c>
 8000400:	f091 0f00 	teq	r1, #0
 8000404:	bf04      	itt	eq
 8000406:	4601      	moveq	r1, r0
 8000408:	2000      	moveq	r0, #0
 800040a:	fab1 f381 	clz	r3, r1
 800040e:	bf08      	it	eq
 8000410:	3320      	addeq	r3, #32
 8000412:	f1a3 030b 	sub.w	r3, r3, #11
 8000416:	f1b3 0220 	subs.w	r2, r3, #32
 800041a:	da0c      	bge.n	8000436 <__adddf3+0x16e>
 800041c:	320c      	adds	r2, #12
 800041e:	dd08      	ble.n	8000432 <__adddf3+0x16a>
 8000420:	f102 0c14 	add.w	ip, r2, #20
 8000424:	f1c2 020c 	rsb	r2, r2, #12
 8000428:	fa01 f00c 	lsl.w	r0, r1, ip
 800042c:	fa21 f102 	lsr.w	r1, r1, r2
 8000430:	e00c      	b.n	800044c <__adddf3+0x184>
 8000432:	f102 0214 	add.w	r2, r2, #20
 8000436:	bfd8      	it	le
 8000438:	f1c2 0c20 	rsble	ip, r2, #32
 800043c:	fa01 f102 	lsl.w	r1, r1, r2
 8000440:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000444:	bfdc      	itt	le
 8000446:	ea41 010c 	orrle.w	r1, r1, ip
 800044a:	4090      	lslle	r0, r2
 800044c:	1ae4      	subs	r4, r4, r3
 800044e:	bfa2      	ittt	ge
 8000450:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000454:	4329      	orrge	r1, r5
 8000456:	bd30      	popge	{r4, r5, pc}
 8000458:	ea6f 0404 	mvn.w	r4, r4
 800045c:	3c1f      	subs	r4, #31
 800045e:	da1c      	bge.n	800049a <__adddf3+0x1d2>
 8000460:	340c      	adds	r4, #12
 8000462:	dc0e      	bgt.n	8000482 <__adddf3+0x1ba>
 8000464:	f104 0414 	add.w	r4, r4, #20
 8000468:	f1c4 0220 	rsb	r2, r4, #32
 800046c:	fa20 f004 	lsr.w	r0, r0, r4
 8000470:	fa01 f302 	lsl.w	r3, r1, r2
 8000474:	ea40 0003 	orr.w	r0, r0, r3
 8000478:	fa21 f304 	lsr.w	r3, r1, r4
 800047c:	ea45 0103 	orr.w	r1, r5, r3
 8000480:	bd30      	pop	{r4, r5, pc}
 8000482:	f1c4 040c 	rsb	r4, r4, #12
 8000486:	f1c4 0220 	rsb	r2, r4, #32
 800048a:	fa20 f002 	lsr.w	r0, r0, r2
 800048e:	fa01 f304 	lsl.w	r3, r1, r4
 8000492:	ea40 0003 	orr.w	r0, r0, r3
 8000496:	4629      	mov	r1, r5
 8000498:	bd30      	pop	{r4, r5, pc}
 800049a:	fa21 f004 	lsr.w	r0, r1, r4
 800049e:	4629      	mov	r1, r5
 80004a0:	bd30      	pop	{r4, r5, pc}
 80004a2:	f094 0f00 	teq	r4, #0
 80004a6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004aa:	bf06      	itte	eq
 80004ac:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b0:	3401      	addeq	r4, #1
 80004b2:	3d01      	subne	r5, #1
 80004b4:	e74e      	b.n	8000354 <__adddf3+0x8c>
 80004b6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ba:	bf18      	it	ne
 80004bc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c0:	d029      	beq.n	8000516 <__adddf3+0x24e>
 80004c2:	ea94 0f05 	teq	r4, r5
 80004c6:	bf08      	it	eq
 80004c8:	ea90 0f02 	teqeq	r0, r2
 80004cc:	d005      	beq.n	80004da <__adddf3+0x212>
 80004ce:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d2:	bf04      	itt	eq
 80004d4:	4619      	moveq	r1, r3
 80004d6:	4610      	moveq	r0, r2
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea91 0f03 	teq	r1, r3
 80004de:	bf1e      	ittt	ne
 80004e0:	2100      	movne	r1, #0
 80004e2:	2000      	movne	r0, #0
 80004e4:	bd30      	popne	{r4, r5, pc}
 80004e6:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ea:	d105      	bne.n	80004f8 <__adddf3+0x230>
 80004ec:	0040      	lsls	r0, r0, #1
 80004ee:	4149      	adcs	r1, r1
 80004f0:	bf28      	it	cs
 80004f2:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004f6:	bd30      	pop	{r4, r5, pc}
 80004f8:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004fc:	bf3c      	itt	cc
 80004fe:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000502:	bd30      	popcc	{r4, r5, pc}
 8000504:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000508:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 800050c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000510:	f04f 0000 	mov.w	r0, #0
 8000514:	bd30      	pop	{r4, r5, pc}
 8000516:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051a:	bf1a      	itte	ne
 800051c:	4619      	movne	r1, r3
 800051e:	4610      	movne	r0, r2
 8000520:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000524:	bf1c      	itt	ne
 8000526:	460b      	movne	r3, r1
 8000528:	4602      	movne	r2, r0
 800052a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800052e:	bf06      	itte	eq
 8000530:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000534:	ea91 0f03 	teqeq	r1, r3
 8000538:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 800053c:	bd30      	pop	{r4, r5, pc}
 800053e:	bf00      	nop

08000540 <__aeabi_ui2d>:
 8000540:	f090 0f00 	teq	r0, #0
 8000544:	bf04      	itt	eq
 8000546:	2100      	moveq	r1, #0
 8000548:	4770      	bxeq	lr
 800054a:	b530      	push	{r4, r5, lr}
 800054c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000550:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000554:	f04f 0500 	mov.w	r5, #0
 8000558:	f04f 0100 	mov.w	r1, #0
 800055c:	e750      	b.n	8000400 <__adddf3+0x138>
 800055e:	bf00      	nop

08000560 <__aeabi_i2d>:
 8000560:	f090 0f00 	teq	r0, #0
 8000564:	bf04      	itt	eq
 8000566:	2100      	moveq	r1, #0
 8000568:	4770      	bxeq	lr
 800056a:	b530      	push	{r4, r5, lr}
 800056c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000570:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000574:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000578:	bf48      	it	mi
 800057a:	4240      	negmi	r0, r0
 800057c:	f04f 0100 	mov.w	r1, #0
 8000580:	e73e      	b.n	8000400 <__adddf3+0x138>
 8000582:	bf00      	nop

08000584 <__aeabi_f2d>:
 8000584:	0042      	lsls	r2, r0, #1
 8000586:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058a:	ea4f 0131 	mov.w	r1, r1, rrx
 800058e:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000592:	bf1f      	itttt	ne
 8000594:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000598:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 800059c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a0:	4770      	bxne	lr
 80005a2:	f092 0f00 	teq	r2, #0
 80005a6:	bf14      	ite	ne
 80005a8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005ac:	4770      	bxeq	lr
 80005ae:	b530      	push	{r4, r5, lr}
 80005b0:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005b4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005b8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005bc:	e720      	b.n	8000400 <__adddf3+0x138>
 80005be:	bf00      	nop

080005c0 <__aeabi_ul2d>:
 80005c0:	ea50 0201 	orrs.w	r2, r0, r1
 80005c4:	bf08      	it	eq
 80005c6:	4770      	bxeq	lr
 80005c8:	b530      	push	{r4, r5, lr}
 80005ca:	f04f 0500 	mov.w	r5, #0
 80005ce:	e00a      	b.n	80005e6 <__aeabi_l2d+0x16>

080005d0 <__aeabi_l2d>:
 80005d0:	ea50 0201 	orrs.w	r2, r0, r1
 80005d4:	bf08      	it	eq
 80005d6:	4770      	bxeq	lr
 80005d8:	b530      	push	{r4, r5, lr}
 80005da:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005de:	d502      	bpl.n	80005e6 <__aeabi_l2d+0x16>
 80005e0:	4240      	negs	r0, r0
 80005e2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005e6:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005ea:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ee:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005f2:	f43f aedc 	beq.w	80003ae <__adddf3+0xe6>
 80005f6:	f04f 0203 	mov.w	r2, #3
 80005fa:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005fe:	bf18      	it	ne
 8000600:	3203      	addne	r2, #3
 8000602:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000606:	bf18      	it	ne
 8000608:	3203      	addne	r2, #3
 800060a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800060e:	f1c2 0320 	rsb	r3, r2, #32
 8000612:	fa00 fc03 	lsl.w	ip, r0, r3
 8000616:	fa20 f002 	lsr.w	r0, r0, r2
 800061a:	fa01 fe03 	lsl.w	lr, r1, r3
 800061e:	ea40 000e 	orr.w	r0, r0, lr
 8000622:	fa21 f102 	lsr.w	r1, r1, r2
 8000626:	4414      	add	r4, r2
 8000628:	e6c1      	b.n	80003ae <__adddf3+0xe6>
 800062a:	bf00      	nop

0800062c <__aeabi_dmul>:
 800062c:	b570      	push	{r4, r5, r6, lr}
 800062e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000632:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000636:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800063a:	bf1d      	ittte	ne
 800063c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000640:	ea94 0f0c 	teqne	r4, ip
 8000644:	ea95 0f0c 	teqne	r5, ip
 8000648:	f000 f8de 	bleq	8000808 <__aeabi_dmul+0x1dc>
 800064c:	442c      	add	r4, r5
 800064e:	ea81 0603 	eor.w	r6, r1, r3
 8000652:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000656:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800065a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800065e:	bf18      	it	ne
 8000660:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000664:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000668:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800066c:	d038      	beq.n	80006e0 <__aeabi_dmul+0xb4>
 800066e:	fba0 ce02 	umull	ip, lr, r0, r2
 8000672:	f04f 0500 	mov.w	r5, #0
 8000676:	fbe1 e502 	umlal	lr, r5, r1, r2
 800067a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800067e:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000682:	f04f 0600 	mov.w	r6, #0
 8000686:	fbe1 5603 	umlal	r5, r6, r1, r3
 800068a:	f09c 0f00 	teq	ip, #0
 800068e:	bf18      	it	ne
 8000690:	f04e 0e01 	orrne.w	lr, lr, #1
 8000694:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000698:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 800069c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006a0:	d204      	bcs.n	80006ac <__aeabi_dmul+0x80>
 80006a2:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006a6:	416d      	adcs	r5, r5
 80006a8:	eb46 0606 	adc.w	r6, r6, r6
 80006ac:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006b0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006b4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006b8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006bc:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006c0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006c4:	bf88      	it	hi
 80006c6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006ca:	d81e      	bhi.n	800070a <__aeabi_dmul+0xde>
 80006cc:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006d0:	bf08      	it	eq
 80006d2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006d6:	f150 0000 	adcs.w	r0, r0, #0
 80006da:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006de:	bd70      	pop	{r4, r5, r6, pc}
 80006e0:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006e4:	ea46 0101 	orr.w	r1, r6, r1
 80006e8:	ea40 0002 	orr.w	r0, r0, r2
 80006ec:	ea81 0103 	eor.w	r1, r1, r3
 80006f0:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006f4:	bfc2      	ittt	gt
 80006f6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006fa:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006fe:	bd70      	popgt	{r4, r5, r6, pc}
 8000700:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000704:	f04f 0e00 	mov.w	lr, #0
 8000708:	3c01      	subs	r4, #1
 800070a:	f300 80ab 	bgt.w	8000864 <__aeabi_dmul+0x238>
 800070e:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000712:	bfde      	ittt	le
 8000714:	2000      	movle	r0, #0
 8000716:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800071a:	bd70      	pople	{r4, r5, r6, pc}
 800071c:	f1c4 0400 	rsb	r4, r4, #0
 8000720:	3c20      	subs	r4, #32
 8000722:	da35      	bge.n	8000790 <__aeabi_dmul+0x164>
 8000724:	340c      	adds	r4, #12
 8000726:	dc1b      	bgt.n	8000760 <__aeabi_dmul+0x134>
 8000728:	f104 0414 	add.w	r4, r4, #20
 800072c:	f1c4 0520 	rsb	r5, r4, #32
 8000730:	fa00 f305 	lsl.w	r3, r0, r5
 8000734:	fa20 f004 	lsr.w	r0, r0, r4
 8000738:	fa01 f205 	lsl.w	r2, r1, r5
 800073c:	ea40 0002 	orr.w	r0, r0, r2
 8000740:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000744:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	fa21 f604 	lsr.w	r6, r1, r4
 8000750:	eb42 0106 	adc.w	r1, r2, r6
 8000754:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000758:	bf08      	it	eq
 800075a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075e:	bd70      	pop	{r4, r5, r6, pc}
 8000760:	f1c4 040c 	rsb	r4, r4, #12
 8000764:	f1c4 0520 	rsb	r5, r4, #32
 8000768:	fa00 f304 	lsl.w	r3, r0, r4
 800076c:	fa20 f005 	lsr.w	r0, r0, r5
 8000770:	fa01 f204 	lsl.w	r2, r1, r4
 8000774:	ea40 0002 	orr.w	r0, r0, r2
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000780:	f141 0100 	adc.w	r1, r1, #0
 8000784:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000788:	bf08      	it	eq
 800078a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800078e:	bd70      	pop	{r4, r5, r6, pc}
 8000790:	f1c4 0520 	rsb	r5, r4, #32
 8000794:	fa00 f205 	lsl.w	r2, r0, r5
 8000798:	ea4e 0e02 	orr.w	lr, lr, r2
 800079c:	fa20 f304 	lsr.w	r3, r0, r4
 80007a0:	fa01 f205 	lsl.w	r2, r1, r5
 80007a4:	ea43 0302 	orr.w	r3, r3, r2
 80007a8:	fa21 f004 	lsr.w	r0, r1, r4
 80007ac:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007b0:	fa21 f204 	lsr.w	r2, r1, r4
 80007b4:	ea20 0002 	bic.w	r0, r0, r2
 80007b8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007bc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007c0:	bf08      	it	eq
 80007c2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007c6:	bd70      	pop	{r4, r5, r6, pc}
 80007c8:	f094 0f00 	teq	r4, #0
 80007cc:	d10f      	bne.n	80007ee <__aeabi_dmul+0x1c2>
 80007ce:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007d2:	0040      	lsls	r0, r0, #1
 80007d4:	eb41 0101 	adc.w	r1, r1, r1
 80007d8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007dc:	bf08      	it	eq
 80007de:	3c01      	subeq	r4, #1
 80007e0:	d0f7      	beq.n	80007d2 <__aeabi_dmul+0x1a6>
 80007e2:	ea41 0106 	orr.w	r1, r1, r6
 80007e6:	f095 0f00 	teq	r5, #0
 80007ea:	bf18      	it	ne
 80007ec:	4770      	bxne	lr
 80007ee:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007f2:	0052      	lsls	r2, r2, #1
 80007f4:	eb43 0303 	adc.w	r3, r3, r3
 80007f8:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007fc:	bf08      	it	eq
 80007fe:	3d01      	subeq	r5, #1
 8000800:	d0f7      	beq.n	80007f2 <__aeabi_dmul+0x1c6>
 8000802:	ea43 0306 	orr.w	r3, r3, r6
 8000806:	4770      	bx	lr
 8000808:	ea94 0f0c 	teq	r4, ip
 800080c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000810:	bf18      	it	ne
 8000812:	ea95 0f0c 	teqne	r5, ip
 8000816:	d00c      	beq.n	8000832 <__aeabi_dmul+0x206>
 8000818:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800081c:	bf18      	it	ne
 800081e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000822:	d1d1      	bne.n	80007c8 <__aeabi_dmul+0x19c>
 8000824:	ea81 0103 	eor.w	r1, r1, r3
 8000828:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800082c:	f04f 0000 	mov.w	r0, #0
 8000830:	bd70      	pop	{r4, r5, r6, pc}
 8000832:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000836:	bf06      	itte	eq
 8000838:	4610      	moveq	r0, r2
 800083a:	4619      	moveq	r1, r3
 800083c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000840:	d019      	beq.n	8000876 <__aeabi_dmul+0x24a>
 8000842:	ea94 0f0c 	teq	r4, ip
 8000846:	d102      	bne.n	800084e <__aeabi_dmul+0x222>
 8000848:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 800084c:	d113      	bne.n	8000876 <__aeabi_dmul+0x24a>
 800084e:	ea95 0f0c 	teq	r5, ip
 8000852:	d105      	bne.n	8000860 <__aeabi_dmul+0x234>
 8000854:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000858:	bf1c      	itt	ne
 800085a:	4610      	movne	r0, r2
 800085c:	4619      	movne	r1, r3
 800085e:	d10a      	bne.n	8000876 <__aeabi_dmul+0x24a>
 8000860:	ea81 0103 	eor.w	r1, r1, r3
 8000864:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000868:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800086c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000870:	f04f 0000 	mov.w	r0, #0
 8000874:	bd70      	pop	{r4, r5, r6, pc}
 8000876:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800087a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800087e:	bd70      	pop	{r4, r5, r6, pc}

08000880 <__aeabi_ddiv>:
 8000880:	b570      	push	{r4, r5, r6, lr}
 8000882:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000886:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800088a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800088e:	bf1d      	ittte	ne
 8000890:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000894:	ea94 0f0c 	teqne	r4, ip
 8000898:	ea95 0f0c 	teqne	r5, ip
 800089c:	f000 f8a7 	bleq	80009ee <__aeabi_ddiv+0x16e>
 80008a0:	eba4 0405 	sub.w	r4, r4, r5
 80008a4:	ea81 0e03 	eor.w	lr, r1, r3
 80008a8:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008ac:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008b0:	f000 8088 	beq.w	80009c4 <__aeabi_ddiv+0x144>
 80008b4:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008b8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008bc:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008c0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008c4:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008c8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008cc:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008d0:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008d4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008d8:	429d      	cmp	r5, r3
 80008da:	bf08      	it	eq
 80008dc:	4296      	cmpeq	r6, r2
 80008de:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008e2:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008e6:	d202      	bcs.n	80008ee <__aeabi_ddiv+0x6e>
 80008e8:	085b      	lsrs	r3, r3, #1
 80008ea:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ee:	1ab6      	subs	r6, r6, r2
 80008f0:	eb65 0503 	sbc.w	r5, r5, r3
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008fe:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000902:	ebb6 0e02 	subs.w	lr, r6, r2
 8000906:	eb75 0e03 	sbcs.w	lr, r5, r3
 800090a:	bf22      	ittt	cs
 800090c:	1ab6      	subcs	r6, r6, r2
 800090e:	4675      	movcs	r5, lr
 8000910:	ea40 000c 	orrcs.w	r0, r0, ip
 8000914:	085b      	lsrs	r3, r3, #1
 8000916:	ea4f 0232 	mov.w	r2, r2, rrx
 800091a:	ebb6 0e02 	subs.w	lr, r6, r2
 800091e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000922:	bf22      	ittt	cs
 8000924:	1ab6      	subcs	r6, r6, r2
 8000926:	4675      	movcs	r5, lr
 8000928:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 800092c:	085b      	lsrs	r3, r3, #1
 800092e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000932:	ebb6 0e02 	subs.w	lr, r6, r2
 8000936:	eb75 0e03 	sbcs.w	lr, r5, r3
 800093a:	bf22      	ittt	cs
 800093c:	1ab6      	subcs	r6, r6, r2
 800093e:	4675      	movcs	r5, lr
 8000940:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000944:	085b      	lsrs	r3, r3, #1
 8000946:	ea4f 0232 	mov.w	r2, r2, rrx
 800094a:	ebb6 0e02 	subs.w	lr, r6, r2
 800094e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000952:	bf22      	ittt	cs
 8000954:	1ab6      	subcs	r6, r6, r2
 8000956:	4675      	movcs	r5, lr
 8000958:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 800095c:	ea55 0e06 	orrs.w	lr, r5, r6
 8000960:	d018      	beq.n	8000994 <__aeabi_ddiv+0x114>
 8000962:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000966:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800096a:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800096e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000972:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000976:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800097a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800097e:	d1c0      	bne.n	8000902 <__aeabi_ddiv+0x82>
 8000980:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000984:	d10b      	bne.n	800099e <__aeabi_ddiv+0x11e>
 8000986:	ea41 0100 	orr.w	r1, r1, r0
 800098a:	f04f 0000 	mov.w	r0, #0
 800098e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000992:	e7b6      	b.n	8000902 <__aeabi_ddiv+0x82>
 8000994:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000998:	bf04      	itt	eq
 800099a:	4301      	orreq	r1, r0
 800099c:	2000      	moveq	r0, #0
 800099e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009a2:	bf88      	it	hi
 80009a4:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009a8:	f63f aeaf 	bhi.w	800070a <__aeabi_dmul+0xde>
 80009ac:	ebb5 0c03 	subs.w	ip, r5, r3
 80009b0:	bf04      	itt	eq
 80009b2:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009b6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009ba:	f150 0000 	adcs.w	r0, r0, #0
 80009be:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009c2:	bd70      	pop	{r4, r5, r6, pc}
 80009c4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009c8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009cc:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009d0:	bfc2      	ittt	gt
 80009d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009da:	bd70      	popgt	{r4, r5, r6, pc}
 80009dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009e0:	f04f 0e00 	mov.w	lr, #0
 80009e4:	3c01      	subs	r4, #1
 80009e6:	e690      	b.n	800070a <__aeabi_dmul+0xde>
 80009e8:	ea45 0e06 	orr.w	lr, r5, r6
 80009ec:	e68d      	b.n	800070a <__aeabi_dmul+0xde>
 80009ee:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009f2:	ea94 0f0c 	teq	r4, ip
 80009f6:	bf08      	it	eq
 80009f8:	ea95 0f0c 	teqeq	r5, ip
 80009fc:	f43f af3b 	beq.w	8000876 <__aeabi_dmul+0x24a>
 8000a00:	ea94 0f0c 	teq	r4, ip
 8000a04:	d10a      	bne.n	8000a1c <__aeabi_ddiv+0x19c>
 8000a06:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a0a:	f47f af34 	bne.w	8000876 <__aeabi_dmul+0x24a>
 8000a0e:	ea95 0f0c 	teq	r5, ip
 8000a12:	f47f af25 	bne.w	8000860 <__aeabi_dmul+0x234>
 8000a16:	4610      	mov	r0, r2
 8000a18:	4619      	mov	r1, r3
 8000a1a:	e72c      	b.n	8000876 <__aeabi_dmul+0x24a>
 8000a1c:	ea95 0f0c 	teq	r5, ip
 8000a20:	d106      	bne.n	8000a30 <__aeabi_ddiv+0x1b0>
 8000a22:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a26:	f43f aefd 	beq.w	8000824 <__aeabi_dmul+0x1f8>
 8000a2a:	4610      	mov	r0, r2
 8000a2c:	4619      	mov	r1, r3
 8000a2e:	e722      	b.n	8000876 <__aeabi_dmul+0x24a>
 8000a30:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a34:	bf18      	it	ne
 8000a36:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a3a:	f47f aec5 	bne.w	80007c8 <__aeabi_dmul+0x19c>
 8000a3e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a42:	f47f af0d 	bne.w	8000860 <__aeabi_dmul+0x234>
 8000a46:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a4a:	f47f aeeb 	bne.w	8000824 <__aeabi_dmul+0x1f8>
 8000a4e:	e712      	b.n	8000876 <__aeabi_dmul+0x24a>

08000a50 <__gedf2>:
 8000a50:	f04f 3cff 	mov.w	ip, #4294967295
 8000a54:	e006      	b.n	8000a64 <__cmpdf2+0x4>
 8000a56:	bf00      	nop

08000a58 <__ledf2>:
 8000a58:	f04f 0c01 	mov.w	ip, #1
 8000a5c:	e002      	b.n	8000a64 <__cmpdf2+0x4>
 8000a5e:	bf00      	nop

08000a60 <__cmpdf2>:
 8000a60:	f04f 0c01 	mov.w	ip, #1
 8000a64:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a68:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a6c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a70:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a74:	bf18      	it	ne
 8000a76:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a7a:	d01b      	beq.n	8000ab4 <__cmpdf2+0x54>
 8000a7c:	b001      	add	sp, #4
 8000a7e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a82:	bf0c      	ite	eq
 8000a84:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a88:	ea91 0f03 	teqne	r1, r3
 8000a8c:	bf02      	ittt	eq
 8000a8e:	ea90 0f02 	teqeq	r0, r2
 8000a92:	2000      	moveq	r0, #0
 8000a94:	4770      	bxeq	lr
 8000a96:	f110 0f00 	cmn.w	r0, #0
 8000a9a:	ea91 0f03 	teq	r1, r3
 8000a9e:	bf58      	it	pl
 8000aa0:	4299      	cmppl	r1, r3
 8000aa2:	bf08      	it	eq
 8000aa4:	4290      	cmpeq	r0, r2
 8000aa6:	bf2c      	ite	cs
 8000aa8:	17d8      	asrcs	r0, r3, #31
 8000aaa:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aae:	f040 0001 	orr.w	r0, r0, #1
 8000ab2:	4770      	bx	lr
 8000ab4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ab8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000abc:	d102      	bne.n	8000ac4 <__cmpdf2+0x64>
 8000abe:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ac2:	d107      	bne.n	8000ad4 <__cmpdf2+0x74>
 8000ac4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ac8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000acc:	d1d6      	bne.n	8000a7c <__cmpdf2+0x1c>
 8000ace:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ad2:	d0d3      	beq.n	8000a7c <__cmpdf2+0x1c>
 8000ad4:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ad8:	4770      	bx	lr
 8000ada:	bf00      	nop

08000adc <__aeabi_cdrcmple>:
 8000adc:	4684      	mov	ip, r0
 8000ade:	4610      	mov	r0, r2
 8000ae0:	4662      	mov	r2, ip
 8000ae2:	468c      	mov	ip, r1
 8000ae4:	4619      	mov	r1, r3
 8000ae6:	4663      	mov	r3, ip
 8000ae8:	e000      	b.n	8000aec <__aeabi_cdcmpeq>
 8000aea:	bf00      	nop

08000aec <__aeabi_cdcmpeq>:
 8000aec:	b501      	push	{r0, lr}
 8000aee:	f7ff ffb7 	bl	8000a60 <__cmpdf2>
 8000af2:	2800      	cmp	r0, #0
 8000af4:	bf48      	it	mi
 8000af6:	f110 0f00 	cmnmi.w	r0, #0
 8000afa:	bd01      	pop	{r0, pc}

08000afc <__aeabi_dcmpeq>:
 8000afc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b00:	f7ff fff4 	bl	8000aec <__aeabi_cdcmpeq>
 8000b04:	bf0c      	ite	eq
 8000b06:	2001      	moveq	r0, #1
 8000b08:	2000      	movne	r0, #0
 8000b0a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0e:	bf00      	nop

08000b10 <__aeabi_dcmplt>:
 8000b10:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b14:	f7ff ffea 	bl	8000aec <__aeabi_cdcmpeq>
 8000b18:	bf34      	ite	cc
 8000b1a:	2001      	movcc	r0, #1
 8000b1c:	2000      	movcs	r0, #0
 8000b1e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b22:	bf00      	nop

08000b24 <__aeabi_dcmple>:
 8000b24:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b28:	f7ff ffe0 	bl	8000aec <__aeabi_cdcmpeq>
 8000b2c:	bf94      	ite	ls
 8000b2e:	2001      	movls	r0, #1
 8000b30:	2000      	movhi	r0, #0
 8000b32:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b36:	bf00      	nop

08000b38 <__aeabi_dcmpge>:
 8000b38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b3c:	f7ff ffce 	bl	8000adc <__aeabi_cdrcmple>
 8000b40:	bf94      	ite	ls
 8000b42:	2001      	movls	r0, #1
 8000b44:	2000      	movhi	r0, #0
 8000b46:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b4a:	bf00      	nop

08000b4c <__aeabi_dcmpgt>:
 8000b4c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b50:	f7ff ffc4 	bl	8000adc <__aeabi_cdrcmple>
 8000b54:	bf34      	ite	cc
 8000b56:	2001      	movcc	r0, #1
 8000b58:	2000      	movcs	r0, #0
 8000b5a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b5e:	bf00      	nop

08000b60 <__aeabi_d2iz>:
 8000b60:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b64:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b68:	d215      	bcs.n	8000b96 <__aeabi_d2iz+0x36>
 8000b6a:	d511      	bpl.n	8000b90 <__aeabi_d2iz+0x30>
 8000b6c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b70:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b74:	d912      	bls.n	8000b9c <__aeabi_d2iz+0x3c>
 8000b76:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b7a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b7e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b82:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b86:	fa23 f002 	lsr.w	r0, r3, r2
 8000b8a:	bf18      	it	ne
 8000b8c:	4240      	negne	r0, r0
 8000b8e:	4770      	bx	lr
 8000b90:	f04f 0000 	mov.w	r0, #0
 8000b94:	4770      	bx	lr
 8000b96:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b9a:	d105      	bne.n	8000ba8 <__aeabi_d2iz+0x48>
 8000b9c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ba0:	bf08      	it	eq
 8000ba2:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000ba6:	4770      	bx	lr
 8000ba8:	f04f 0000 	mov.w	r0, #0
 8000bac:	4770      	bx	lr
 8000bae:	bf00      	nop

08000bb0 <__aeabi_uldivmod>:
 8000bb0:	b94b      	cbnz	r3, 8000bc6 <__aeabi_uldivmod+0x16>
 8000bb2:	b942      	cbnz	r2, 8000bc6 <__aeabi_uldivmod+0x16>
 8000bb4:	2900      	cmp	r1, #0
 8000bb6:	bf08      	it	eq
 8000bb8:	2800      	cmpeq	r0, #0
 8000bba:	d002      	beq.n	8000bc2 <__aeabi_uldivmod+0x12>
 8000bbc:	f04f 31ff 	mov.w	r1, #4294967295
 8000bc0:	4608      	mov	r0, r1
 8000bc2:	f000 b83b 	b.w	8000c3c <__aeabi_idiv0>
 8000bc6:	b082      	sub	sp, #8
 8000bc8:	46ec      	mov	ip, sp
 8000bca:	e92d 5000 	stmdb	sp!, {ip, lr}
 8000bce:	f000 f81d 	bl	8000c0c <__gnu_uldivmod_helper>
 8000bd2:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bd6:	b002      	add	sp, #8
 8000bd8:	bc0c      	pop	{r2, r3}
 8000bda:	4770      	bx	lr

08000bdc <__gnu_ldivmod_helper>:
 8000bdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000be0:	9c06      	ldr	r4, [sp, #24]
 8000be2:	4615      	mov	r5, r2
 8000be4:	4606      	mov	r6, r0
 8000be6:	460f      	mov	r7, r1
 8000be8:	4698      	mov	r8, r3
 8000bea:	f000 f829 	bl	8000c40 <__divdi3>
 8000bee:	fb05 f301 	mul.w	r3, r5, r1
 8000bf2:	fb00 3808 	mla	r8, r0, r8, r3
 8000bf6:	fba5 2300 	umull	r2, r3, r5, r0
 8000bfa:	1ab2      	subs	r2, r6, r2
 8000bfc:	4443      	add	r3, r8
 8000bfe:	eb67 0303 	sbc.w	r3, r7, r3
 8000c02:	e9c4 2300 	strd	r2, r3, [r4]
 8000c06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000c0a:	bf00      	nop

08000c0c <__gnu_uldivmod_helper>:
 8000c0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000c10:	9c06      	ldr	r4, [sp, #24]
 8000c12:	4690      	mov	r8, r2
 8000c14:	4606      	mov	r6, r0
 8000c16:	460f      	mov	r7, r1
 8000c18:	461d      	mov	r5, r3
 8000c1a:	f000 f95f 	bl	8000edc <__udivdi3>
 8000c1e:	fb00 f505 	mul.w	r5, r0, r5
 8000c22:	fba0 2308 	umull	r2, r3, r0, r8
 8000c26:	fb08 5501 	mla	r5, r8, r1, r5
 8000c2a:	1ab2      	subs	r2, r6, r2
 8000c2c:	442b      	add	r3, r5
 8000c2e:	eb67 0303 	sbc.w	r3, r7, r3
 8000c32:	e9c4 2300 	strd	r2, r3, [r4]
 8000c36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000c3a:	bf00      	nop

08000c3c <__aeabi_idiv0>:
 8000c3c:	4770      	bx	lr
 8000c3e:	bf00      	nop

08000c40 <__divdi3>:
 8000c40:	2900      	cmp	r1, #0
 8000c42:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000c46:	f2c0 80a6 	blt.w	8000d96 <__divdi3+0x156>
 8000c4a:	2600      	movs	r6, #0
 8000c4c:	2b00      	cmp	r3, #0
 8000c4e:	f2c0 809c 	blt.w	8000d8a <__divdi3+0x14a>
 8000c52:	4688      	mov	r8, r1
 8000c54:	4694      	mov	ip, r2
 8000c56:	469e      	mov	lr, r3
 8000c58:	4615      	mov	r5, r2
 8000c5a:	4604      	mov	r4, r0
 8000c5c:	460f      	mov	r7, r1
 8000c5e:	2b00      	cmp	r3, #0
 8000c60:	d13d      	bne.n	8000cde <__divdi3+0x9e>
 8000c62:	428a      	cmp	r2, r1
 8000c64:	d959      	bls.n	8000d1a <__divdi3+0xda>
 8000c66:	fab2 f382 	clz	r3, r2
 8000c6a:	b13b      	cbz	r3, 8000c7c <__divdi3+0x3c>
 8000c6c:	f1c3 0220 	rsb	r2, r3, #32
 8000c70:	409f      	lsls	r7, r3
 8000c72:	fa20 f202 	lsr.w	r2, r0, r2
 8000c76:	409d      	lsls	r5, r3
 8000c78:	4317      	orrs	r7, r2
 8000c7a:	409c      	lsls	r4, r3
 8000c7c:	0c29      	lsrs	r1, r5, #16
 8000c7e:	0c22      	lsrs	r2, r4, #16
 8000c80:	fbb7 fef1 	udiv	lr, r7, r1
 8000c84:	b2a8      	uxth	r0, r5
 8000c86:	fb01 771e 	mls	r7, r1, lr, r7
 8000c8a:	ea42 4707 	orr.w	r7, r2, r7, lsl #16
 8000c8e:	fb00 f30e 	mul.w	r3, r0, lr
 8000c92:	42bb      	cmp	r3, r7
 8000c94:	d90a      	bls.n	8000cac <__divdi3+0x6c>
 8000c96:	197f      	adds	r7, r7, r5
 8000c98:	f10e 32ff 	add.w	r2, lr, #4294967295
 8000c9c:	f080 8105 	bcs.w	8000eaa <__divdi3+0x26a>
 8000ca0:	42bb      	cmp	r3, r7
 8000ca2:	f240 8102 	bls.w	8000eaa <__divdi3+0x26a>
 8000ca6:	f1ae 0e02 	sub.w	lr, lr, #2
 8000caa:	442f      	add	r7, r5
 8000cac:	1aff      	subs	r7, r7, r3
 8000cae:	b2a4      	uxth	r4, r4
 8000cb0:	fbb7 f3f1 	udiv	r3, r7, r1
 8000cb4:	fb01 7713 	mls	r7, r1, r3, r7
 8000cb8:	ea44 4707 	orr.w	r7, r4, r7, lsl #16
 8000cbc:	fb00 f003 	mul.w	r0, r0, r3
 8000cc0:	42b8      	cmp	r0, r7
 8000cc2:	d908      	bls.n	8000cd6 <__divdi3+0x96>
 8000cc4:	197f      	adds	r7, r7, r5
 8000cc6:	f103 32ff 	add.w	r2, r3, #4294967295
 8000cca:	f080 80f0 	bcs.w	8000eae <__divdi3+0x26e>
 8000cce:	42b8      	cmp	r0, r7
 8000cd0:	f240 80ed 	bls.w	8000eae <__divdi3+0x26e>
 8000cd4:	3b02      	subs	r3, #2
 8000cd6:	ea43 430e 	orr.w	r3, r3, lr, lsl #16
 8000cda:	2200      	movs	r2, #0
 8000cdc:	e003      	b.n	8000ce6 <__divdi3+0xa6>
 8000cde:	428b      	cmp	r3, r1
 8000ce0:	d90f      	bls.n	8000d02 <__divdi3+0xc2>
 8000ce2:	2200      	movs	r2, #0
 8000ce4:	4613      	mov	r3, r2
 8000ce6:	1c34      	adds	r4, r6, #0
 8000ce8:	bf18      	it	ne
 8000cea:	2401      	movne	r4, #1
 8000cec:	4260      	negs	r0, r4
 8000cee:	f04f 0500 	mov.w	r5, #0
 8000cf2:	eb65 0145 	sbc.w	r1, r5, r5, lsl #1
 8000cf6:	4058      	eors	r0, r3
 8000cf8:	4051      	eors	r1, r2
 8000cfa:	1900      	adds	r0, r0, r4
 8000cfc:	4169      	adcs	r1, r5
 8000cfe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000d02:	fab3 f283 	clz	r2, r3
 8000d06:	2a00      	cmp	r2, #0
 8000d08:	f040 8086 	bne.w	8000e18 <__divdi3+0x1d8>
 8000d0c:	428b      	cmp	r3, r1
 8000d0e:	d302      	bcc.n	8000d16 <__divdi3+0xd6>
 8000d10:	4584      	cmp	ip, r0
 8000d12:	f200 80db 	bhi.w	8000ecc <__divdi3+0x28c>
 8000d16:	2301      	movs	r3, #1
 8000d18:	e7e5      	b.n	8000ce6 <__divdi3+0xa6>
 8000d1a:	b912      	cbnz	r2, 8000d22 <__divdi3+0xe2>
 8000d1c:	2301      	movs	r3, #1
 8000d1e:	fbb3 f5f2 	udiv	r5, r3, r2
 8000d22:	fab5 f085 	clz	r0, r5
 8000d26:	2800      	cmp	r0, #0
 8000d28:	d13b      	bne.n	8000da2 <__divdi3+0x162>
 8000d2a:	1b78      	subs	r0, r7, r5
 8000d2c:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000d30:	fa1f fc85 	uxth.w	ip, r5
 8000d34:	2201      	movs	r2, #1
 8000d36:	fbb0 f8fe 	udiv	r8, r0, lr
 8000d3a:	0c21      	lsrs	r1, r4, #16
 8000d3c:	fb0e 0718 	mls	r7, lr, r8, r0
 8000d40:	ea41 4707 	orr.w	r7, r1, r7, lsl #16
 8000d44:	fb0c f308 	mul.w	r3, ip, r8
 8000d48:	42bb      	cmp	r3, r7
 8000d4a:	d907      	bls.n	8000d5c <__divdi3+0x11c>
 8000d4c:	197f      	adds	r7, r7, r5
 8000d4e:	f108 31ff 	add.w	r1, r8, #4294967295
 8000d52:	d202      	bcs.n	8000d5a <__divdi3+0x11a>
 8000d54:	42bb      	cmp	r3, r7
 8000d56:	f200 80bd 	bhi.w	8000ed4 <__divdi3+0x294>
 8000d5a:	4688      	mov	r8, r1
 8000d5c:	1aff      	subs	r7, r7, r3
 8000d5e:	b2a4      	uxth	r4, r4
 8000d60:	fbb7 f3fe 	udiv	r3, r7, lr
 8000d64:	fb0e 7713 	mls	r7, lr, r3, r7
 8000d68:	ea44 4707 	orr.w	r7, r4, r7, lsl #16
 8000d6c:	fb0c fc03 	mul.w	ip, ip, r3
 8000d70:	45bc      	cmp	ip, r7
 8000d72:	d907      	bls.n	8000d84 <__divdi3+0x144>
 8000d74:	197f      	adds	r7, r7, r5
 8000d76:	f103 31ff 	add.w	r1, r3, #4294967295
 8000d7a:	d202      	bcs.n	8000d82 <__divdi3+0x142>
 8000d7c:	45bc      	cmp	ip, r7
 8000d7e:	f200 80a7 	bhi.w	8000ed0 <__divdi3+0x290>
 8000d82:	460b      	mov	r3, r1
 8000d84:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000d88:	e7ad      	b.n	8000ce6 <__divdi3+0xa6>
 8000d8a:	4252      	negs	r2, r2
 8000d8c:	ea6f 0606 	mvn.w	r6, r6
 8000d90:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000d94:	e75d      	b.n	8000c52 <__divdi3+0x12>
 8000d96:	4240      	negs	r0, r0
 8000d98:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d9c:	f04f 36ff 	mov.w	r6, #4294967295
 8000da0:	e754      	b.n	8000c4c <__divdi3+0xc>
 8000da2:	f1c0 0220 	rsb	r2, r0, #32
 8000da6:	fa24 f102 	lsr.w	r1, r4, r2
 8000daa:	fa07 f300 	lsl.w	r3, r7, r0
 8000dae:	4085      	lsls	r5, r0
 8000db0:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000db4:	40d7      	lsrs	r7, r2
 8000db6:	4319      	orrs	r1, r3
 8000db8:	fbb7 f2fe 	udiv	r2, r7, lr
 8000dbc:	0c0b      	lsrs	r3, r1, #16
 8000dbe:	fb0e 7712 	mls	r7, lr, r2, r7
 8000dc2:	fa1f fc85 	uxth.w	ip, r5
 8000dc6:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8000dca:	fb0c f702 	mul.w	r7, ip, r2
 8000dce:	429f      	cmp	r7, r3
 8000dd0:	fa04 f400 	lsl.w	r4, r4, r0
 8000dd4:	d907      	bls.n	8000de6 <__divdi3+0x1a6>
 8000dd6:	195b      	adds	r3, r3, r5
 8000dd8:	f102 30ff 	add.w	r0, r2, #4294967295
 8000ddc:	d274      	bcs.n	8000ec8 <__divdi3+0x288>
 8000dde:	429f      	cmp	r7, r3
 8000de0:	d972      	bls.n	8000ec8 <__divdi3+0x288>
 8000de2:	3a02      	subs	r2, #2
 8000de4:	442b      	add	r3, r5
 8000de6:	1bdf      	subs	r7, r3, r7
 8000de8:	b289      	uxth	r1, r1
 8000dea:	fbb7 f8fe 	udiv	r8, r7, lr
 8000dee:	fb0e 7318 	mls	r3, lr, r8, r7
 8000df2:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000df6:	fb0c f708 	mul.w	r7, ip, r8
 8000dfa:	429f      	cmp	r7, r3
 8000dfc:	d908      	bls.n	8000e10 <__divdi3+0x1d0>
 8000dfe:	195b      	adds	r3, r3, r5
 8000e00:	f108 31ff 	add.w	r1, r8, #4294967295
 8000e04:	d25c      	bcs.n	8000ec0 <__divdi3+0x280>
 8000e06:	429f      	cmp	r7, r3
 8000e08:	d95a      	bls.n	8000ec0 <__divdi3+0x280>
 8000e0a:	f1a8 0802 	sub.w	r8, r8, #2
 8000e0e:	442b      	add	r3, r5
 8000e10:	1bd8      	subs	r0, r3, r7
 8000e12:	ea48 4202 	orr.w	r2, r8, r2, lsl #16
 8000e16:	e78e      	b.n	8000d36 <__divdi3+0xf6>
 8000e18:	f1c2 0320 	rsb	r3, r2, #32
 8000e1c:	fa2c f103 	lsr.w	r1, ip, r3
 8000e20:	fa0e fe02 	lsl.w	lr, lr, r2
 8000e24:	fa20 f703 	lsr.w	r7, r0, r3
 8000e28:	ea41 0e0e 	orr.w	lr, r1, lr
 8000e2c:	fa08 f002 	lsl.w	r0, r8, r2
 8000e30:	fa28 f103 	lsr.w	r1, r8, r3
 8000e34:	ea4f 451e 	mov.w	r5, lr, lsr #16
 8000e38:	4338      	orrs	r0, r7
 8000e3a:	fbb1 f8f5 	udiv	r8, r1, r5
 8000e3e:	0c03      	lsrs	r3, r0, #16
 8000e40:	fb05 1118 	mls	r1, r5, r8, r1
 8000e44:	fa1f f78e 	uxth.w	r7, lr
 8000e48:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8000e4c:	fb07 f308 	mul.w	r3, r7, r8
 8000e50:	428b      	cmp	r3, r1
 8000e52:	fa0c fc02 	lsl.w	ip, ip, r2
 8000e56:	d909      	bls.n	8000e6c <__divdi3+0x22c>
 8000e58:	eb11 010e 	adds.w	r1, r1, lr
 8000e5c:	f108 39ff 	add.w	r9, r8, #4294967295
 8000e60:	d230      	bcs.n	8000ec4 <__divdi3+0x284>
 8000e62:	428b      	cmp	r3, r1
 8000e64:	d92e      	bls.n	8000ec4 <__divdi3+0x284>
 8000e66:	f1a8 0802 	sub.w	r8, r8, #2
 8000e6a:	4471      	add	r1, lr
 8000e6c:	1ac9      	subs	r1, r1, r3
 8000e6e:	b280      	uxth	r0, r0
 8000e70:	fbb1 f3f5 	udiv	r3, r1, r5
 8000e74:	fb05 1113 	mls	r1, r5, r3, r1
 8000e78:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000e7c:	fb07 f703 	mul.w	r7, r7, r3
 8000e80:	428f      	cmp	r7, r1
 8000e82:	d908      	bls.n	8000e96 <__divdi3+0x256>
 8000e84:	eb11 010e 	adds.w	r1, r1, lr
 8000e88:	f103 30ff 	add.w	r0, r3, #4294967295
 8000e8c:	d216      	bcs.n	8000ebc <__divdi3+0x27c>
 8000e8e:	428f      	cmp	r7, r1
 8000e90:	d914      	bls.n	8000ebc <__divdi3+0x27c>
 8000e92:	3b02      	subs	r3, #2
 8000e94:	4471      	add	r1, lr
 8000e96:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000e9a:	1bc9      	subs	r1, r1, r7
 8000e9c:	fba3 890c 	umull	r8, r9, r3, ip
 8000ea0:	4549      	cmp	r1, r9
 8000ea2:	d309      	bcc.n	8000eb8 <__divdi3+0x278>
 8000ea4:	d005      	beq.n	8000eb2 <__divdi3+0x272>
 8000ea6:	2200      	movs	r2, #0
 8000ea8:	e71d      	b.n	8000ce6 <__divdi3+0xa6>
 8000eaa:	4696      	mov	lr, r2
 8000eac:	e6fe      	b.n	8000cac <__divdi3+0x6c>
 8000eae:	4613      	mov	r3, r2
 8000eb0:	e711      	b.n	8000cd6 <__divdi3+0x96>
 8000eb2:	4094      	lsls	r4, r2
 8000eb4:	4544      	cmp	r4, r8
 8000eb6:	d2f6      	bcs.n	8000ea6 <__divdi3+0x266>
 8000eb8:	3b01      	subs	r3, #1
 8000eba:	e7f4      	b.n	8000ea6 <__divdi3+0x266>
 8000ebc:	4603      	mov	r3, r0
 8000ebe:	e7ea      	b.n	8000e96 <__divdi3+0x256>
 8000ec0:	4688      	mov	r8, r1
 8000ec2:	e7a5      	b.n	8000e10 <__divdi3+0x1d0>
 8000ec4:	46c8      	mov	r8, r9
 8000ec6:	e7d1      	b.n	8000e6c <__divdi3+0x22c>
 8000ec8:	4602      	mov	r2, r0
 8000eca:	e78c      	b.n	8000de6 <__divdi3+0x1a6>
 8000ecc:	4613      	mov	r3, r2
 8000ece:	e70a      	b.n	8000ce6 <__divdi3+0xa6>
 8000ed0:	3b02      	subs	r3, #2
 8000ed2:	e757      	b.n	8000d84 <__divdi3+0x144>
 8000ed4:	f1a8 0802 	sub.w	r8, r8, #2
 8000ed8:	442f      	add	r7, r5
 8000eda:	e73f      	b.n	8000d5c <__divdi3+0x11c>

08000edc <__udivdi3>:
 8000edc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ee0:	2b00      	cmp	r3, #0
 8000ee2:	d144      	bne.n	8000f6e <__udivdi3+0x92>
 8000ee4:	428a      	cmp	r2, r1
 8000ee6:	4615      	mov	r5, r2
 8000ee8:	4604      	mov	r4, r0
 8000eea:	d94f      	bls.n	8000f8c <__udivdi3+0xb0>
 8000eec:	fab2 f782 	clz	r7, r2
 8000ef0:	460e      	mov	r6, r1
 8000ef2:	b14f      	cbz	r7, 8000f08 <__udivdi3+0x2c>
 8000ef4:	f1c7 0320 	rsb	r3, r7, #32
 8000ef8:	40b9      	lsls	r1, r7
 8000efa:	fa20 f603 	lsr.w	r6, r0, r3
 8000efe:	fa02 f507 	lsl.w	r5, r2, r7
 8000f02:	430e      	orrs	r6, r1
 8000f04:	fa00 f407 	lsl.w	r4, r0, r7
 8000f08:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000f0c:	0c23      	lsrs	r3, r4, #16
 8000f0e:	fbb6 f0fe 	udiv	r0, r6, lr
 8000f12:	b2af      	uxth	r7, r5
 8000f14:	fb0e 6110 	mls	r1, lr, r0, r6
 8000f18:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000f1c:	fb07 f100 	mul.w	r1, r7, r0
 8000f20:	4299      	cmp	r1, r3
 8000f22:	d909      	bls.n	8000f38 <__udivdi3+0x5c>
 8000f24:	195b      	adds	r3, r3, r5
 8000f26:	f100 32ff 	add.w	r2, r0, #4294967295
 8000f2a:	f080 80ec 	bcs.w	8001106 <__udivdi3+0x22a>
 8000f2e:	4299      	cmp	r1, r3
 8000f30:	f240 80e9 	bls.w	8001106 <__udivdi3+0x22a>
 8000f34:	3802      	subs	r0, #2
 8000f36:	442b      	add	r3, r5
 8000f38:	1a5a      	subs	r2, r3, r1
 8000f3a:	b2a4      	uxth	r4, r4
 8000f3c:	fbb2 f3fe 	udiv	r3, r2, lr
 8000f40:	fb0e 2213 	mls	r2, lr, r3, r2
 8000f44:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
 8000f48:	fb07 f703 	mul.w	r7, r7, r3
 8000f4c:	4297      	cmp	r7, r2
 8000f4e:	d908      	bls.n	8000f62 <__udivdi3+0x86>
 8000f50:	1952      	adds	r2, r2, r5
 8000f52:	f103 31ff 	add.w	r1, r3, #4294967295
 8000f56:	f080 80d8 	bcs.w	800110a <__udivdi3+0x22e>
 8000f5a:	4297      	cmp	r7, r2
 8000f5c:	f240 80d5 	bls.w	800110a <__udivdi3+0x22e>
 8000f60:	3b02      	subs	r3, #2
 8000f62:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000f66:	2600      	movs	r6, #0
 8000f68:	4631      	mov	r1, r6
 8000f6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000f6e:	428b      	cmp	r3, r1
 8000f70:	d847      	bhi.n	8001002 <__udivdi3+0x126>
 8000f72:	fab3 f683 	clz	r6, r3
 8000f76:	2e00      	cmp	r6, #0
 8000f78:	d148      	bne.n	800100c <__udivdi3+0x130>
 8000f7a:	428b      	cmp	r3, r1
 8000f7c:	d302      	bcc.n	8000f84 <__udivdi3+0xa8>
 8000f7e:	4282      	cmp	r2, r0
 8000f80:	f200 80cd 	bhi.w	800111e <__udivdi3+0x242>
 8000f84:	2001      	movs	r0, #1
 8000f86:	4631      	mov	r1, r6
 8000f88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000f8c:	b912      	cbnz	r2, 8000f94 <__udivdi3+0xb8>
 8000f8e:	2501      	movs	r5, #1
 8000f90:	fbb5 f5f2 	udiv	r5, r5, r2
 8000f94:	fab5 f885 	clz	r8, r5
 8000f98:	f1b8 0f00 	cmp.w	r8, #0
 8000f9c:	d177      	bne.n	800108e <__udivdi3+0x1b2>
 8000f9e:	1b4a      	subs	r2, r1, r5
 8000fa0:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000fa4:	b2af      	uxth	r7, r5
 8000fa6:	2601      	movs	r6, #1
 8000fa8:	fbb2 f0fe 	udiv	r0, r2, lr
 8000fac:	0c23      	lsrs	r3, r4, #16
 8000fae:	fb0e 2110 	mls	r1, lr, r0, r2
 8000fb2:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8000fb6:	fb07 f300 	mul.w	r3, r7, r0
 8000fba:	428b      	cmp	r3, r1
 8000fbc:	d907      	bls.n	8000fce <__udivdi3+0xf2>
 8000fbe:	1949      	adds	r1, r1, r5
 8000fc0:	f100 32ff 	add.w	r2, r0, #4294967295
 8000fc4:	d202      	bcs.n	8000fcc <__udivdi3+0xf0>
 8000fc6:	428b      	cmp	r3, r1
 8000fc8:	f200 80ba 	bhi.w	8001140 <__udivdi3+0x264>
 8000fcc:	4610      	mov	r0, r2
 8000fce:	1ac9      	subs	r1, r1, r3
 8000fd0:	b2a4      	uxth	r4, r4
 8000fd2:	fbb1 f3fe 	udiv	r3, r1, lr
 8000fd6:	fb0e 1113 	mls	r1, lr, r3, r1
 8000fda:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000fde:	fb07 f703 	mul.w	r7, r7, r3
 8000fe2:	42a7      	cmp	r7, r4
 8000fe4:	d908      	bls.n	8000ff8 <__udivdi3+0x11c>
 8000fe6:	1964      	adds	r4, r4, r5
 8000fe8:	f103 32ff 	add.w	r2, r3, #4294967295
 8000fec:	f080 808f 	bcs.w	800110e <__udivdi3+0x232>
 8000ff0:	42a7      	cmp	r7, r4
 8000ff2:	f240 808c 	bls.w	800110e <__udivdi3+0x232>
 8000ff6:	3b02      	subs	r3, #2
 8000ff8:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000ffc:	4631      	mov	r1, r6
 8000ffe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001002:	2600      	movs	r6, #0
 8001004:	4630      	mov	r0, r6
 8001006:	4631      	mov	r1, r6
 8001008:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800100c:	f1c6 0420 	rsb	r4, r6, #32
 8001010:	fa22 f504 	lsr.w	r5, r2, r4
 8001014:	40b3      	lsls	r3, r6
 8001016:	432b      	orrs	r3, r5
 8001018:	fa20 fc04 	lsr.w	ip, r0, r4
 800101c:	fa01 f706 	lsl.w	r7, r1, r6
 8001020:	fa21 f504 	lsr.w	r5, r1, r4
 8001024:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 8001028:	ea4c 0707 	orr.w	r7, ip, r7
 800102c:	fbb5 f8fe 	udiv	r8, r5, lr
 8001030:	0c39      	lsrs	r1, r7, #16
 8001032:	fb0e 5518 	mls	r5, lr, r8, r5
 8001036:	fa1f fc83 	uxth.w	ip, r3
 800103a:	ea41 4505 	orr.w	r5, r1, r5, lsl #16
 800103e:	fb0c f108 	mul.w	r1, ip, r8
 8001042:	42a9      	cmp	r1, r5
 8001044:	fa02 f206 	lsl.w	r2, r2, r6
 8001048:	d904      	bls.n	8001054 <__udivdi3+0x178>
 800104a:	18ed      	adds	r5, r5, r3
 800104c:	f108 34ff 	add.w	r4, r8, #4294967295
 8001050:	d367      	bcc.n	8001122 <__udivdi3+0x246>
 8001052:	46a0      	mov	r8, r4
 8001054:	1a6d      	subs	r5, r5, r1
 8001056:	b2bf      	uxth	r7, r7
 8001058:	fbb5 f4fe 	udiv	r4, r5, lr
 800105c:	fb0e 5514 	mls	r5, lr, r4, r5
 8001060:	ea47 4105 	orr.w	r1, r7, r5, lsl #16
 8001064:	fb0c fc04 	mul.w	ip, ip, r4
 8001068:	458c      	cmp	ip, r1
 800106a:	d904      	bls.n	8001076 <__udivdi3+0x19a>
 800106c:	18c9      	adds	r1, r1, r3
 800106e:	f104 35ff 	add.w	r5, r4, #4294967295
 8001072:	d35c      	bcc.n	800112e <__udivdi3+0x252>
 8001074:	462c      	mov	r4, r5
 8001076:	ea44 4408 	orr.w	r4, r4, r8, lsl #16
 800107a:	ebcc 0101 	rsb	r1, ip, r1
 800107e:	fba4 2302 	umull	r2, r3, r4, r2
 8001082:	4299      	cmp	r1, r3
 8001084:	d348      	bcc.n	8001118 <__udivdi3+0x23c>
 8001086:	d044      	beq.n	8001112 <__udivdi3+0x236>
 8001088:	4620      	mov	r0, r4
 800108a:	2600      	movs	r6, #0
 800108c:	e76c      	b.n	8000f68 <__udivdi3+0x8c>
 800108e:	f1c8 0420 	rsb	r4, r8, #32
 8001092:	fa01 f308 	lsl.w	r3, r1, r8
 8001096:	fa05 f508 	lsl.w	r5, r5, r8
 800109a:	fa20 f704 	lsr.w	r7, r0, r4
 800109e:	40e1      	lsrs	r1, r4
 80010a0:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80010a4:	431f      	orrs	r7, r3
 80010a6:	fbb1 f6fe 	udiv	r6, r1, lr
 80010aa:	0c3a      	lsrs	r2, r7, #16
 80010ac:	fb0e 1116 	mls	r1, lr, r6, r1
 80010b0:	fa1f fc85 	uxth.w	ip, r5
 80010b4:	ea42 4301 	orr.w	r3, r2, r1, lsl #16
 80010b8:	fb0c f206 	mul.w	r2, ip, r6
 80010bc:	429a      	cmp	r2, r3
 80010be:	fa00 f408 	lsl.w	r4, r0, r8
 80010c2:	d907      	bls.n	80010d4 <__udivdi3+0x1f8>
 80010c4:	195b      	adds	r3, r3, r5
 80010c6:	f106 31ff 	add.w	r1, r6, #4294967295
 80010ca:	d237      	bcs.n	800113c <__udivdi3+0x260>
 80010cc:	429a      	cmp	r2, r3
 80010ce:	d935      	bls.n	800113c <__udivdi3+0x260>
 80010d0:	3e02      	subs	r6, #2
 80010d2:	442b      	add	r3, r5
 80010d4:	1a9b      	subs	r3, r3, r2
 80010d6:	b2bf      	uxth	r7, r7
 80010d8:	fbb3 f0fe 	udiv	r0, r3, lr
 80010dc:	fb0e 3310 	mls	r3, lr, r0, r3
 80010e0:	ea47 4303 	orr.w	r3, r7, r3, lsl #16
 80010e4:	fb0c f100 	mul.w	r1, ip, r0
 80010e8:	4299      	cmp	r1, r3
 80010ea:	d907      	bls.n	80010fc <__udivdi3+0x220>
 80010ec:	195b      	adds	r3, r3, r5
 80010ee:	f100 32ff 	add.w	r2, r0, #4294967295
 80010f2:	d221      	bcs.n	8001138 <__udivdi3+0x25c>
 80010f4:	4299      	cmp	r1, r3
 80010f6:	d91f      	bls.n	8001138 <__udivdi3+0x25c>
 80010f8:	3802      	subs	r0, #2
 80010fa:	442b      	add	r3, r5
 80010fc:	1a5a      	subs	r2, r3, r1
 80010fe:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 8001102:	4667      	mov	r7, ip
 8001104:	e750      	b.n	8000fa8 <__udivdi3+0xcc>
 8001106:	4610      	mov	r0, r2
 8001108:	e716      	b.n	8000f38 <__udivdi3+0x5c>
 800110a:	460b      	mov	r3, r1
 800110c:	e729      	b.n	8000f62 <__udivdi3+0x86>
 800110e:	4613      	mov	r3, r2
 8001110:	e772      	b.n	8000ff8 <__udivdi3+0x11c>
 8001112:	40b0      	lsls	r0, r6
 8001114:	4290      	cmp	r0, r2
 8001116:	d2b7      	bcs.n	8001088 <__udivdi3+0x1ac>
 8001118:	1e60      	subs	r0, r4, #1
 800111a:	2600      	movs	r6, #0
 800111c:	e724      	b.n	8000f68 <__udivdi3+0x8c>
 800111e:	4630      	mov	r0, r6
 8001120:	e722      	b.n	8000f68 <__udivdi3+0x8c>
 8001122:	42a9      	cmp	r1, r5
 8001124:	d995      	bls.n	8001052 <__udivdi3+0x176>
 8001126:	f1a8 0802 	sub.w	r8, r8, #2
 800112a:	441d      	add	r5, r3
 800112c:	e792      	b.n	8001054 <__udivdi3+0x178>
 800112e:	458c      	cmp	ip, r1
 8001130:	d9a0      	bls.n	8001074 <__udivdi3+0x198>
 8001132:	3c02      	subs	r4, #2
 8001134:	4419      	add	r1, r3
 8001136:	e79e      	b.n	8001076 <__udivdi3+0x19a>
 8001138:	4610      	mov	r0, r2
 800113a:	e7df      	b.n	80010fc <__udivdi3+0x220>
 800113c:	460e      	mov	r6, r1
 800113e:	e7c9      	b.n	80010d4 <__udivdi3+0x1f8>
 8001140:	3802      	subs	r0, #2
 8001142:	4429      	add	r1, r5
 8001144:	e743      	b.n	8000fce <__udivdi3+0xf2>
 8001146:	bf00      	nop

08001148 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8001148:	f8df d030 	ldr.w	sp, [pc, #48]	; 800117c <LoopFillZerobss+0x10>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 800114c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800114e:	e003      	b.n	8001158 <LoopCopyDataInit>

08001150 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8001150:	4b0b      	ldr	r3, [pc, #44]	; (8001180 <LoopFillZerobss+0x14>)
  ldr  r3, [r3, r1]
 8001152:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8001154:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8001156:	3104      	adds	r1, #4

08001158 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8001158:	480a      	ldr	r0, [pc, #40]	; (8001184 <LoopFillZerobss+0x18>)
  ldr  r3, =_edata
 800115a:	4b0b      	ldr	r3, [pc, #44]	; (8001188 <LoopFillZerobss+0x1c>)
  adds  r2, r0, r1
 800115c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 800115e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8001160:	d3f6      	bcc.n	8001150 <CopyDataInit>
  ldr  r2, =_sbss
 8001162:	4a0a      	ldr	r2, [pc, #40]	; (800118c <LoopFillZerobss+0x20>)
  b  LoopFillZerobss
 8001164:	e002      	b.n	800116c <LoopFillZerobss>

08001166 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8001166:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8001168:	f842 3b04 	str.w	r3, [r2], #4

0800116c <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 800116c:	4b08      	ldr	r3, [pc, #32]	; (8001190 <LoopFillZerobss+0x24>)
  cmp  r2, r3
 800116e:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8001170:	d3f9      	bcc.n	8001166 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8001172:	f000 f811 	bl	8001198 <SystemInit>
/* Call static constructors */
   /* bl __libc_init_array */
/* Call the application's entry point.*/
  bl  main
 8001176:	f000 f8c9 	bl	800130c <main>
  bx  lr    
 800117a:	4770      	bx	lr

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 800117c:	2001ffff 	.word	0x2001ffff
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
  b  LoopCopyDataInit

CopyDataInit:
  ldr  r3, =_sidata
 8001180:	0802e61c 	.word	0x0802e61c
  ldr  r3, [r3, r1]
  str  r3, [r0, r1]
  adds  r1, r1, #4
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8001184:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8001188:	20000b74 	.word	0x20000b74
  adds  r2, r0, r1
  cmp  r2, r3
  bcc  CopyDataInit
  ldr  r2, =_sbss
 800118c:	2000d374 	.word	0x2000d374
FillZerobss:
  movs  r3, #0
  str  r3, [r2], #4
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8001190:	2000dee4 	.word	0x2000dee4

08001194 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001194:	e7fe      	b.n	8001194 <ADC_IRQHandler>
	...

08001198 <SystemInit>:
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 8001198:	4b0c      	ldr	r3, [pc, #48]	; (80011cc <SystemInit+0x34>)
 800119a:	681a      	ldr	r2, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 800119c:	2100      	movs	r1, #0
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 800119e:	f042 0201 	orr.w	r2, r2, #1
 80011a2:	601a      	str	r2, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 80011a4:	6099      	str	r1, [r3, #8]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 80011a6:	681a      	ldr	r2, [r3, #0]
 80011a8:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 80011ac:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80011b0:	601a      	str	r2, [r3, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x24003010;
 80011b2:	4a07      	ldr	r2, [pc, #28]	; (80011d0 <SystemInit+0x38>)
 80011b4:	605a      	str	r2, [r3, #4]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 80011b6:	681a      	ldr	r2, [r3, #0]
 80011b8:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80011bc:	601a      	str	r2, [r3, #0]

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 80011be:	60d9      	str	r1, [r3, #12]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80011c0:	4b04      	ldr	r3, [pc, #16]	; (80011d4 <SystemInit+0x3c>)
 80011c2:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80011c6:	609a      	str	r2, [r3, #8]
 80011c8:	4770      	bx	lr
 80011ca:	bf00      	nop
 80011cc:	40023800 	.word	0x40023800
 80011d0:	24003010 	.word	0x24003010
 80011d4:	e000ed00 	.word	0xe000ed00

080011d8 <delay_msec>:
  * @retval	None
  */
void delay_msec(uint32_t msec){
  uint32_t target;
  
  target = msec_counter + msec;
 80011d8:	4b03      	ldr	r3, [pc, #12]	; (80011e8 <delay_msec+0x10>)
 80011da:	681a      	ldr	r2, [r3, #0]
 80011dc:	4410      	add	r0, r2
  while(msec_counter < target){
 80011de:	681a      	ldr	r2, [r3, #0]
 80011e0:	4282      	cmp	r2, r0
 80011e2:	d3fc      	bcc.n	80011de <delay_msec+0x6>
  	;
  }
}
 80011e4:	4770      	bx	lr
 80011e6:	bf00      	nop
 80011e8:	2000d37c 	.word	0x2000d37c

080011ec <timeout_timer>:
  * @retval	time
  */
uint32_t timeout_timer(void){
	uint32_t time, prev_time;
	
	time = Timeout_Timer_0;
 80011ec:	4b01      	ldr	r3, [pc, #4]	; (80011f4 <timeout_timer+0x8>)
 80011ee:	6818      	ldr	r0, [r3, #0]
	
	return time;
}
 80011f0:	4770      	bx	lr
 80011f2:	bf00      	nop
 80011f4:	2000d374 	.word	0x2000d374

080011f8 <NMI_Handler>:
  * @brief  This function handles NMI exception.
  * @param  None
  * @retval None
  */
void NMI_Handler(void)
{
 80011f8:	4770      	bx	lr

080011fa <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* Go to infinite loop when Hard Fault exception occurs */
  while (1)
  {
  }
 80011fa:	e7fe      	b.n	80011fa <HardFault_Handler>

080011fc <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* Go to infinite loop when Memory Manage exception occurs */
  while (1)
  {
  }
 80011fc:	e7fe      	b.n	80011fc <MemManage_Handler>

080011fe <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* Go to infinite loop when Bus Fault exception occurs */
  while (1)
  {
  }
 80011fe:	e7fe      	b.n	80011fe <BusFault_Handler>

08001200 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* Go to infinite loop when Usage Fault exception occurs */
  while (1)
  {
  }
 8001200:	e7fe      	b.n	8001200 <UsageFault_Handler>

08001202 <SVC_Handler>:
  * @brief  This function handles SVCall exception.
  * @param  None
  * @retval None
  */
void SVC_Handler(void)
{
 8001202:	4770      	bx	lr

08001204 <DebugMon_Handler>:
  * @brief  This function handles Debug Monitor exception.
  * @param  None
  * @retval None
  */
void DebugMon_Handler(void)
{
 8001204:	4770      	bx	lr

08001206 <PendSV_Handler>:
  * @brief  This function handles PendSVC exception.
  * @param  None
  * @retval None
  */
void PendSV_Handler(void)
{
 8001206:	4770      	bx	lr

08001208 <SysTick_Handler>:
  * @brief  This function handles SysTick Handler.
  * @param  None
  * @retval None
  */
void SysTick_Handler(void)
{
 8001208:	b508      	push	{r3, lr}
	HAL_IncTick();
 800120a:	f003 fd27 	bl	8004c5c <HAL_IncTick>
	
	Timeout_Timer_0++;
 800120e:	4a0d      	ldr	r2, [pc, #52]	; (8001244 <SysTick_Handler+0x3c>)
 8001210:	6813      	ldr	r3, [r2, #0]
 8001212:	3301      	adds	r3, #1
 8001214:	6013      	str	r3, [r2, #0]
  
	//---------------------------
	// msec counter
	//---------------------------
	msec_counter++;
 8001216:	4b0c      	ldr	r3, [pc, #48]	; (8001248 <SysTick_Handler+0x40>)
 8001218:	681a      	ldr	r2, [r3, #0]
 800121a:	3201      	adds	r2, #1
 800121c:	601a      	str	r2, [r3, #0]
	switch(msec_counter % 10){
 800121e:	6819      	ldr	r1, [r3, #0]
 8001220:	230a      	movs	r3, #10
 8001222:	fbb1 f2f3 	udiv	r2, r1, r3
 8001226:	fb03 1312 	mls	r3, r3, r2, r1
 800122a:	b913      	cbnz	r3, 8001232 <SysTick_Handler+0x2a>
		case 0:
			gui_Exec = true;
 800122c:	4b07      	ldr	r3, [pc, #28]	; (800124c <SysTick_Handler+0x44>)
 800122e:	2201      	movs	r2, #1
 8001230:	701a      	strb	r2, [r3, #0]
	}

	//---------------------------
	// Touch-Timer
	//---------------------------
	touch_timer++;
 8001232:	4b07      	ldr	r3, [pc, #28]	; (8001250 <SysTick_Handler+0x48>)
 8001234:	681a      	ldr	r2, [r3, #0]
 8001236:	3201      	adds	r2, #1
 8001238:	601a      	str	r2, [r3, #0]
	switch(touch_timer % 1){
 800123a:	681b      	ldr	r3, [r3, #0]
		case 0:
			Touch_Flagged = true;
 800123c:	4b05      	ldr	r3, [pc, #20]	; (8001254 <SysTick_Handler+0x4c>)
 800123e:	2201      	movs	r2, #1
 8001240:	701a      	strb	r2, [r3, #0]
 8001242:	bd08      	pop	{r3, pc}
 8001244:	2000d374 	.word	0x2000d374
 8001248:	2000d37c 	.word	0x2000d37c
 800124c:	2000d380 	.word	0x2000d380
 8001250:	2000d378 	.word	0x2000d378
 8001254:	2000d381 	.word	0x2000d381

08001258 <DMA1_Stream5_IRQHandler>:
  * @param  None
  * @retval None   
  */
void USARTx_DMA_RX_IRQHandler(void)
{
  HAL_DMA_IRQHandler(UartHandle.hdmarx);
 8001258:	4b01      	ldr	r3, [pc, #4]	; (8001260 <DMA1_Stream5_IRQHandler+0x8>)
 800125a:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800125c:	f002 be70 	b.w	8003f40 <HAL_DMA_IRQHandler>
 8001260:	2000da50 	.word	0x2000da50

08001264 <DMA1_Stream6_IRQHandler>:
  * @param  None
  * @retval None   
  */
void USARTx_DMA_TX_IRQHandler(void)
{
  HAL_DMA_IRQHandler(UartHandle.hdmatx);
 8001264:	4b01      	ldr	r3, [pc, #4]	; (800126c <DMA1_Stream6_IRQHandler+0x8>)
 8001266:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8001268:	f002 be6a 	b.w	8003f40 <HAL_DMA_IRQHandler>
 800126c:	2000da50 	.word	0x2000da50

08001270 <USART2_IRQHandler>:
  * @param  None
  * @retval None
  */
void USARTx_IRQHandler(void)
{
  HAL_UART_IRQHandler(&UartHandle);
 8001270:	4801      	ldr	r0, [pc, #4]	; (8001278 <USART2_IRQHandler+0x8>)
 8001272:	f002 badf 	b.w	8003834 <HAL_UART_IRQHandler>
 8001276:	bf00      	nop
 8001278:	2000da50 	.word	0x2000da50

0800127c <Error_Handler>:
/**
  * @brief	Handles general errors.
  * @param	None
  * @retval	None
  */
static void Error_Handler(void){
 800127c:	b508      	push	{r3, lr}
	
	while(1){
		/* Put error on LED3 */
		HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_13);
 800127e:	4804      	ldr	r0, [pc, #16]	; (8001290 <Error_Handler+0x14>)
 8001280:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001284:	f003 fcb2 	bl	8004bec <HAL_GPIO_TogglePin>
		printf("Peripheral config error\n");
 8001288:	4802      	ldr	r0, [pc, #8]	; (8001294 <Error_Handler+0x18>)
 800128a:	f012 fc5d 	bl	8013b48 <puts>
	}
 800128e:	e7f6      	b.n	800127e <Error_Handler+0x2>
 8001290:	40020c00 	.word	0x40020c00
 8001294:	08019590 	.word	0x08019590

08001298 <Debug_ITMDebugEnable>:
void Debug_ITMDebugEnable(void){
	volatile unsigned int *ITM_TER      = (volatile unsigned int *)0xE0000E00;
	volatile unsigned int *SCB_DHCSR 		= (volatile unsigned int *)0xE000EDF0;
	volatile unsigned int *DBGMCU_CR 		= (volatile unsigned int *)0xE0042004;

	*DBGMCU_CR |= 0x27; // DBGMCU_CR
 8001298:	4a08      	ldr	r2, [pc, #32]	; (80012bc <Debug_ITMDebugEnable+0x24>)
 800129a:	6813      	ldr	r3, [r2, #0]
 800129c:	f043 0327 	orr.w	r3, r3, #39	; 0x27
 80012a0:	6013      	str	r3, [r2, #0]

  if ((*SCB_DHCSR & 1) && (*ITM_TER & 1)) // Enabled?
 80012a2:	4b07      	ldr	r3, [pc, #28]	; (80012c0 <Debug_ITMDebugEnable+0x28>)
 80012a4:	681b      	ldr	r3, [r3, #0]
 80012a6:	07da      	lsls	r2, r3, #31
 80012a8:	d506      	bpl.n	80012b8 <Debug_ITMDebugEnable+0x20>
 80012aa:	4b06      	ldr	r3, [pc, #24]	; (80012c4 <Debug_ITMDebugEnable+0x2c>)
 80012ac:	681b      	ldr	r3, [r3, #0]
 80012ae:	07db      	lsls	r3, r3, #31
    Debug_ITMDebug = 1;
 80012b0:	bf42      	ittt	mi
 80012b2:	4b05      	ldrmi	r3, [pc, #20]	; (80012c8 <Debug_ITMDebugEnable+0x30>)
 80012b4:	2201      	movmi	r2, #1
 80012b6:	601a      	strmi	r2, [r3, #0]
 80012b8:	4770      	bx	lr
 80012ba:	bf00      	nop
 80012bc:	e0042004 	.word	0xe0042004
 80012c0:	e000edf0 	.word	0xe000edf0
 80012c4:	e0000e00 	.word	0xe0000e00
 80012c8:	2000d384 	.word	0x2000d384

080012cc <Debug_ITMDebugOutputChar>:

void Debug_ITMDebugOutputChar(char ch){
	static volatile unsigned int *ITM_STIM0 = (volatile unsigned int *)0xE0000000; // ITM Port 0
	static volatile unsigned int *SCB_DEMCR = (volatile unsigned int *)0xE000EDFC;

	if (Debug_ITMDebug && (*SCB_DEMCR & 0x01000000))
 80012cc:	4b06      	ldr	r3, [pc, #24]	; (80012e8 <Debug_ITMDebugOutputChar+0x1c>)
 80012ce:	681b      	ldr	r3, [r3, #0]
 80012d0:	b14b      	cbz	r3, 80012e6 <Debug_ITMDebugOutputChar+0x1a>
 80012d2:	4b06      	ldr	r3, [pc, #24]	; (80012ec <Debug_ITMDebugOutputChar+0x20>)
 80012d4:	681b      	ldr	r3, [r3, #0]
 80012d6:	01db      	lsls	r3, r3, #7
 80012d8:	d505      	bpl.n	80012e6 <Debug_ITMDebugOutputChar+0x1a>
	{
		while(*ITM_STIM0 == 0);
 80012da:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80012de:	681a      	ldr	r2, [r3, #0]
 80012e0:	2a00      	cmp	r2, #0
 80012e2:	d0fa      	beq.n	80012da <Debug_ITMDebugOutputChar+0xe>
  	*((volatile char *)ITM_STIM0) = ch;
 80012e4:	7018      	strb	r0, [r3, #0]
 80012e6:	4770      	bx	lr
 80012e8:	2000d384 	.word	0x2000d384
 80012ec:	e000edfc 	.word	0xe000edfc

080012f0 <Debug_ITMDebugOutputString>:
}

//****************************************************************************

void Debug_ITMDebugOutputString(char *Buffer){
	if (Debug_ITMDebug)
 80012f0:	4b05      	ldr	r3, [pc, #20]	; (8001308 <Debug_ITMDebugOutputString+0x18>)
 80012f2:	681b      	ldr	r3, [r3, #0]
	}
}

//****************************************************************************

void Debug_ITMDebugOutputString(char *Buffer){
 80012f4:	b510      	push	{r4, lr}
	if (Debug_ITMDebug)
 80012f6:	b133      	cbz	r3, 8001306 <Debug_ITMDebugOutputString+0x16>
 80012f8:	1e44      	subs	r4, r0, #1
		while(*Buffer)
 80012fa:	f814 0f01 	ldrb.w	r0, [r4, #1]!
 80012fe:	b110      	cbz	r0, 8001306 <Debug_ITMDebugOutputString+0x16>
			Debug_ITMDebugOutputChar(*Buffer++);
 8001300:	f7ff ffe4 	bl	80012cc <Debug_ITMDebugOutputChar>
 8001304:	e7f9      	b.n	80012fa <Debug_ITMDebugOutputString+0xa>
 8001306:	bd10      	pop	{r4, pc}
 8001308:	2000d384 	.word	0x2000d384

0800130c <main>:
  * 		Update GUI every 10ms.
  * 		Update Touch every 1ms.
  * 		return here after a call.
  *	@retval	None
  */
int main(void){
 800130c:	b500      	push	{lr}
 800130e:	b093      	sub	sp, #76	; 0x4c
	/* STM32f4xx HAL library initialization:
	 - Cofigure Flash prefetch, flash preread and Buffer caches
	 - Systick timer config
	 - Low level init
	 */
	HAL_Init();
 8001310:	f003 fc8e 	bl	8004c30 <HAL_Init>
static void SystemClock_Config(void){
	RCC_ClkInitTypeDef RCC_ClkInitStruct;
	RCC_OscInitTypeDef RCC_OscInitStruct;

	/* Enable Power control clock */
	__HAL_RCC_PWR_CLK_ENABLE();
 8001314:	4a5f      	ldr	r2, [pc, #380]	; (8001494 <main+0x188>)
 8001316:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001318:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800131c:	6413      	str	r3, [r2, #64]	; 0x40

	/* The voltage scaling allows optimizing the power consumption when the
	   device is clocked below the maximum system frequency, to update the
	   voltage scaling value regarding system frequency refer to product
	   datasheet. */
	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800131e:	f5a2 32e4 	sub.w	r2, r2, #116736	; 0x1c800

	/* Enable HSE Oscillator and activate PLL with HSE as source */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001322:	2402      	movs	r4, #2

	/* The voltage scaling allows optimizing the power consumption when the
	   device is clocked below the maximum system frequency, to update the
	   voltage scaling value regarding system frequency refer to product
	   datasheet. */
	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001324:	6813      	ldr	r3, [r2, #0]
 8001326:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800132a:	6013      	str	r3, [r2, #0]

	/* Enable HSE Oscillator and activate PLL with HSE as source */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800132c:	2301      	movs	r3, #1
 800132e:	9306      	str	r3, [sp, #24]
	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001330:	9307      	str	r3, [sp, #28]
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001332:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001336:	930d      	str	r3, [sp, #52]	; 0x34
	RCC_OscInitStruct.PLL.PLLM = 8;
 8001338:	2308      	movs	r3, #8
 800133a:	930e      	str	r3, [sp, #56]	; 0x38
	RCC_OscInitStruct.PLL.PLLN = 336;
 800133c:	f44f 73a8 	mov.w	r3, #336	; 0x150
 8001340:	930f      	str	r3, [sp, #60]	; 0x3c
	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
	RCC_OscInitStruct.PLL.PLLQ = 7;
	if(HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK){
 8001342:	a806      	add	r0, sp, #24
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
	RCC_OscInitStruct.PLL.PLLM = 8;
	RCC_OscInitStruct.PLL.PLLN = 336;
	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
	RCC_OscInitStruct.PLL.PLLQ = 7;
 8001344:	2307      	movs	r3, #7
	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);

	/* Enable HSE Oscillator and activate PLL with HSE as source */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001346:	940c      	str	r4, [sp, #48]	; 0x30
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
	RCC_OscInitStruct.PLL.PLLM = 8;
	RCC_OscInitStruct.PLL.PLLN = 336;
	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001348:	9410      	str	r4, [sp, #64]	; 0x40
	RCC_OscInitStruct.PLL.PLLQ = 7;
 800134a:	9311      	str	r3, [sp, #68]	; 0x44
	if(HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK){
 800134c:	f001 f8b2 	bl	80024b4 <HAL_RCC_OscConfig>
 8001350:	b108      	cbz	r0, 8001356 <main+0x4a>
		/* Initialization Error */
		Error_Handler();
 8001352:	f7ff ff93 	bl	800127c <Error_Handler>
	}
	/* Select PLL as system clock source and configure the HCLK, PCLK1
	   and PCLK2 clocks dividers */
	RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK	| RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2);
 8001356:	230f      	movs	r3, #15
 8001358:	9301      	str	r3, [sp, #4]
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800135a:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
	}
	/* Select PLL as system clock source and configure the HCLK, PCLK1
	   and PCLK2 clocks dividers */
	RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK	| RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2);
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800135e:	9003      	str	r0, [sp, #12]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001360:	9304      	str	r3, [sp, #16]
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
	if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK){
 8001362:	a801      	add	r0, sp, #4
	   and PCLK2 clocks dividers */
	RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK	| RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2);
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001364:	f44f 5380 	mov.w	r3, #4096	; 0x1000
	if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK){
 8001368:	2105      	movs	r1, #5
		Error_Handler();
	}
	/* Select PLL as system clock source and configure the HCLK, PCLK1
	   and PCLK2 clocks dividers */
	RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK	| RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2);
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800136a:	9402      	str	r4, [sp, #8]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800136c:	9305      	str	r3, [sp, #20]
	if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK){
 800136e:	f001 faa3 	bl	80028b8 <HAL_RCC_ClockConfig>
 8001372:	2800      	cmp	r0, #0
 8001374:	d1ed      	bne.n	8001352 <main+0x46>
		/* Initialization Error */
		Error_Handler();
	}

	/* STM32F407x Revision Z devices: prefetch is supported */
	if(HAL_GetREVID() == 0x1001){
 8001376:	f003 fc8d 	bl	8004c94 <HAL_GetREVID>
 800137a:	f241 0301 	movw	r3, #4097	; 0x1001
 800137e:	4298      	cmp	r0, r3
		/* Enable the Flash prefetch */
		__HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8001380:	bf01      	itttt	eq
 8001382:	4a45      	ldreq	r2, [pc, #276]	; (8001498 <main+0x18c>)
 8001384:	6813      	ldreq	r3, [r2, #0]
 8001386:	f443 7380 	orreq.w	r3, r3, #256	; 0x100
 800138a:	6013      	streq	r3, [r2, #0]

	/* configure the system clock to 168 MHz */
	SystemClock_Config();

	/* Enable TRACE debug -----------------------------------------------*/
	Debug_ITMDebugEnable();
 800138c:	f7ff ff84 	bl	8001298 <Debug_ITMDebugEnable>
 	Debug_ITMDebugOutputString("SWV Enabled\n");
 8001390:	4842      	ldr	r0, [pc, #264]	; (800149c <main+0x190>)
 8001392:	f7ff ffad 	bl	80012f0 <Debug_ITMDebugOutputString>
	SRAM_Timing.BusTurnAroundDuration = 1;
	SRAM_Timing.CLKDivision = 1;
	SRAM_Timing.DataLatency = 1;
	SRAM_Timing.AccessMode = FSMC_ACCESS_MODE_A;

	hsram.Init.NSBank = FSMC_NORSRAM_BANK1;
 8001396:	4842      	ldr	r0, [pc, #264]	; (80014a0 <main+0x194>)
  * @param None
  * @retval None
  */
static void sram_init(void){
	/*	Configure the FSCM bus ---------------------------*/
	SRAM_Timing.AddressSetupTime = LCD_ILI9341_FSMC_AST;
 8001398:	4942      	ldr	r1, [pc, #264]	; (80014a4 <main+0x198>)
	SRAM_Timing.AddressHoldTime = 1;
 800139a:	2401      	movs	r4, #1
 800139c:	2302      	movs	r3, #2
	SRAM_Timing.AccessMode = FSMC_ACCESS_MODE_A;

	hsram.Init.NSBank = FSMC_NORSRAM_BANK1;
	hsram.Init.DataAddressMux = FSMC_DATA_ADDRESS_MUX_DISABLE;
	hsram.Init.MemoryType = FSMC_MEMORY_TYPE_SRAM;
	hsram.Init.MemoryDataWidth = FSMC_NORSRAM_MEM_BUS_WIDTH_16;
 800139e:	2210      	movs	r2, #16
  * @retval None
  */
static void sram_init(void){
	/*	Configure the FSCM bus ---------------------------*/
	SRAM_Timing.AddressSetupTime = LCD_ILI9341_FSMC_AST;
	SRAM_Timing.AddressHoldTime = 1;
 80013a0:	e881 0018 	stmia.w	r1, {r3, r4}
	SRAM_Timing.AccessMode = FSMC_ACCESS_MODE_A;

	hsram.Init.NSBank = FSMC_NORSRAM_BANK1;
	hsram.Init.DataAddressMux = FSMC_DATA_ADDRESS_MUX_DISABLE;
	hsram.Init.MemoryType = FSMC_MEMORY_TYPE_SRAM;
	hsram.Init.MemoryDataWidth = FSMC_NORSRAM_MEM_BUS_WIDTH_16;
 80013a4:	6142      	str	r2, [r0, #20]
  */
static void sram_init(void){
	/*	Configure the FSCM bus ---------------------------*/
	SRAM_Timing.AddressSetupTime = LCD_ILI9341_FSMC_AST;
	SRAM_Timing.AddressHoldTime = 1;
	SRAM_Timing.DataSetupTime = LCD_ILI9341_FSMC_DST;
 80013a6:	2305      	movs	r3, #5
	hsram.Init.MemoryDataWidth = FSMC_NORSRAM_MEM_BUS_WIDTH_16;
	hsram.Init.BurstAccessMode = FSMC_BURST_ACCESS_MODE_DISABLE;
	hsram.Init.WaitSignalPolarity = FSMC_WAIT_SIGNAL_POLARITY_LOW;
	hsram.Init.WrapMode = FSMC_WRAP_MODE_DISABLE;
	hsram.Init.WaitSignalActive = FSMC_WAIT_TIMING_BEFORE_WS;
	hsram.Init.WriteOperation = FSMC_WRITE_OPERATION_ENABLE;
 80013a8:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  */
static void sram_init(void){
	/*	Configure the FSCM bus ---------------------------*/
	SRAM_Timing.AddressSetupTime = LCD_ILI9341_FSMC_AST;
	SRAM_Timing.AddressHoldTime = 1;
	SRAM_Timing.DataSetupTime = LCD_ILI9341_FSMC_DST;
 80013ac:	608b      	str	r3, [r1, #8]
	hsram.Init.MemoryDataWidth = FSMC_NORSRAM_MEM_BUS_WIDTH_16;
	hsram.Init.BurstAccessMode = FSMC_BURST_ACCESS_MODE_DISABLE;
	hsram.Init.WaitSignalPolarity = FSMC_WAIT_SIGNAL_POLARITY_LOW;
	hsram.Init.WrapMode = FSMC_WRAP_MODE_DISABLE;
	hsram.Init.WaitSignalActive = FSMC_WAIT_TIMING_BEFORE_WS;
	hsram.Init.WriteOperation = FSMC_WRITE_OPERATION_ENABLE;
 80013ae:	6282      	str	r2, [r0, #40]	; 0x28
	SRAM_Timing.AddressHoldTime = 1;
	SRAM_Timing.DataSetupTime = LCD_ILI9341_FSMC_DST;
	SRAM_Timing.BusTurnAroundDuration = 1;
	SRAM_Timing.CLKDivision = 1;
	SRAM_Timing.DataLatency = 1;
	SRAM_Timing.AccessMode = FSMC_ACCESS_MODE_A;
 80013b0:	2300      	movs	r3, #0
	hsram.Init.ExtendedMode = FSMC_EXTENDED_MODE_DISABLE;
	hsram.Init.AsynchronousWait = FSMC_ASYNCHRONOUS_WAIT_DISABLE;
	hsram.Init.WriteBurst = FSMC_WRITE_BURST_DISABLE;

	/* Initialize the SRAM controller ----------------------------*/
	if(HAL_SRAM_Init(&hsram, &SRAM_Timing, &SRAM_Timing) != HAL_OK){
 80013b2:	460a      	mov	r2, r1
static void sram_init(void){
	/*	Configure the FSCM bus ---------------------------*/
	SRAM_Timing.AddressSetupTime = LCD_ILI9341_FSMC_AST;
	SRAM_Timing.AddressHoldTime = 1;
	SRAM_Timing.DataSetupTime = LCD_ILI9341_FSMC_DST;
	SRAM_Timing.BusTurnAroundDuration = 1;
 80013b4:	60cc      	str	r4, [r1, #12]
	SRAM_Timing.CLKDivision = 1;
 80013b6:	610c      	str	r4, [r1, #16]
	SRAM_Timing.DataLatency = 1;
 80013b8:	614c      	str	r4, [r1, #20]
	SRAM_Timing.AccessMode = FSMC_ACCESS_MODE_A;
 80013ba:	618b      	str	r3, [r1, #24]

	hsram.Init.NSBank = FSMC_NORSRAM_BANK1;
 80013bc:	6083      	str	r3, [r0, #8]
	hsram.Init.DataAddressMux = FSMC_DATA_ADDRESS_MUX_DISABLE;
 80013be:	60c3      	str	r3, [r0, #12]
	hsram.Init.MemoryType = FSMC_MEMORY_TYPE_SRAM;
 80013c0:	6103      	str	r3, [r0, #16]
	hsram.Init.MemoryDataWidth = FSMC_NORSRAM_MEM_BUS_WIDTH_16;
	hsram.Init.BurstAccessMode = FSMC_BURST_ACCESS_MODE_DISABLE;
 80013c2:	6183      	str	r3, [r0, #24]
	hsram.Init.WaitSignalPolarity = FSMC_WAIT_SIGNAL_POLARITY_LOW;
 80013c4:	61c3      	str	r3, [r0, #28]
	hsram.Init.WrapMode = FSMC_WRAP_MODE_DISABLE;
 80013c6:	6203      	str	r3, [r0, #32]
	hsram.Init.WaitSignalActive = FSMC_WAIT_TIMING_BEFORE_WS;
 80013c8:	6243      	str	r3, [r0, #36]	; 0x24
	hsram.Init.WriteOperation = FSMC_WRITE_OPERATION_ENABLE;
	hsram.Init.WaitSignal = FSMC_WAIT_SIGNAL_DISABLE;
 80013ca:	62c3      	str	r3, [r0, #44]	; 0x2c
	hsram.Init.ExtendedMode = FSMC_EXTENDED_MODE_DISABLE;
 80013cc:	6303      	str	r3, [r0, #48]	; 0x30
	hsram.Init.AsynchronousWait = FSMC_ASYNCHRONOUS_WAIT_DISABLE;
 80013ce:	6343      	str	r3, [r0, #52]	; 0x34
	hsram.Init.WriteBurst = FSMC_WRITE_BURST_DISABLE;
 80013d0:	6383      	str	r3, [r0, #56]	; 0x38

	/* Initialize the SRAM controller ----------------------------*/
	if(HAL_SRAM_Init(&hsram, &SRAM_Timing, &SRAM_Timing) != HAL_OK){
 80013d2:	f002 fc65 	bl	8003ca0 <HAL_SRAM_Init>
 80013d6:	2800      	cmp	r0, #0
 80013d8:	d1bb      	bne.n	8001352 <main+0x46>
  * @param None
  * @retval None
  */
static void I2C_init(void){
	/*	Configure the I2C peripheral ---------------------------*/
  I2cHandle.Instance             = I2Cx;
 80013da:	4b33      	ldr	r3, [pc, #204]	; (80014a8 <main+0x19c>)
 80013dc:	4a33      	ldr	r2, [pc, #204]	; (80014ac <main+0x1a0>)
 80013de:	601a      	str	r2, [r3, #0]

  I2cHandle.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
 80013e0:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 80013e4:	611a      	str	r2, [r3, #16]
  I2cHandle.Init.ClockSpeed      = 400000;
 80013e6:	4a32      	ldr	r2, [pc, #200]	; (80014b0 <main+0x1a4>)
 80013e8:	605a      	str	r2, [r3, #4]
  I2cHandle.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
  I2cHandle.Init.DutyCycle       = I2C_DUTYCYCLE_2;
  I2cHandle.Init.GeneralCallMode = I2C_GENERALCALL_ENABLE;
 80013ea:	2240      	movs	r2, #64	; 0x40
	/*	Configure the I2C peripheral ---------------------------*/
  I2cHandle.Instance             = I2Cx;

  I2cHandle.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
  I2cHandle.Init.ClockSpeed      = 400000;
  I2cHandle.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80013ec:	6158      	str	r0, [r3, #20]
  I2cHandle.Init.DutyCycle       = I2C_DUTYCYCLE_2;
 80013ee:	6098      	str	r0, [r3, #8]
  I2cHandle.Init.GeneralCallMode = I2C_GENERALCALL_ENABLE;
 80013f0:	61da      	str	r2, [r3, #28]
  I2cHandle.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
 80013f2:	6218      	str	r0, [r3, #32]
  I2cHandle.Init.OwnAddress1     = I2C_ADDRESS;
 80013f4:	22fe      	movs	r2, #254	; 0xfe
  I2cHandle.Init.OwnAddress2	 = I2C_ADDRESS;

  if(HAL_I2C_Init(&I2cHandle) != HAL_OK)
 80013f6:	4618      	mov	r0, r3
  I2cHandle.Init.ClockSpeed      = 400000;
  I2cHandle.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
  I2cHandle.Init.DutyCycle       = I2C_DUTYCYCLE_2;
  I2cHandle.Init.GeneralCallMode = I2C_GENERALCALL_ENABLE;
  I2cHandle.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
  I2cHandle.Init.OwnAddress1     = I2C_ADDRESS;
 80013f8:	60da      	str	r2, [r3, #12]
  I2cHandle.Init.OwnAddress2	 = I2C_ADDRESS;
 80013fa:	619a      	str	r2, [r3, #24]

  if(HAL_I2C_Init(&I2cHandle) != HAL_OK)
 80013fc:	f001 fd68 	bl	8002ed0 <HAL_I2C_Init>
 8001400:	2800      	cmp	r0, #0
 8001402:	d1a6      	bne.n	8001352 <main+0x46>
      - Word Length = 8 Bits
      - Stop Bit = One Stop bit
      - Parity = None
      - BaudRate = 9600 baud
      - Hardware flow control disabled (RTS and CTS signals) */
	UartHandle.Instance          = USARTx;
 8001404:	4b2b      	ldr	r3, [pc, #172]	; (80014b4 <main+0x1a8>)
  
	UartHandle.Init.BaudRate     = 115200;
 8001406:	492c      	ldr	r1, [pc, #176]	; (80014b8 <main+0x1ac>)
	UartHandle.Init.WordLength   = UART_WORDLENGTH_8B;
 8001408:	6098      	str	r0, [r3, #8]
      - Parity = None
      - BaudRate = 9600 baud
      - Hardware flow control disabled (RTS and CTS signals) */
	UartHandle.Instance          = USARTx;
  
	UartHandle.Init.BaudRate     = 115200;
 800140a:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 800140e:	e883 0006 	stmia.w	r3, {r1, r2}
	UartHandle.Init.WordLength   = UART_WORDLENGTH_8B;
	UartHandle.Init.StopBits     = UART_STOPBITS_1;
 8001412:	60d8      	str	r0, [r3, #12]
	UartHandle.Init.Parity       = UART_PARITY_NONE;
 8001414:	6118      	str	r0, [r3, #16]
	UartHandle.Init.HwFlowCtl    = UART_HWCONTROL_NONE;
 8001416:	6198      	str	r0, [r3, #24]
	UartHandle.Init.Mode         = UART_MODE_TX_RX;
 8001418:	220c      	movs	r2, #12
	UartHandle.Init.OverSampling = UART_OVERSAMPLING_16;
 800141a:	61d8      	str	r0, [r3, #28]
    
	if(HAL_UART_Init(&UartHandle) != HAL_OK)
 800141c:	4618      	mov	r0, r3
	UartHandle.Init.BaudRate     = 115200;
	UartHandle.Init.WordLength   = UART_WORDLENGTH_8B;
	UartHandle.Init.StopBits     = UART_STOPBITS_1;
	UartHandle.Init.Parity       = UART_PARITY_NONE;
	UartHandle.Init.HwFlowCtl    = UART_HWCONTROL_NONE;
	UartHandle.Init.Mode         = UART_MODE_TX_RX;
 800141e:	615a      	str	r2, [r3, #20]
	UartHandle.Init.OverSampling = UART_OVERSAMPLING_16;
    
	if(HAL_UART_Init(&UartHandle) != HAL_OK)
 8001420:	f002 f8c2 	bl	80035a8 <HAL_UART_Init>
 8001424:	2800      	cmp	r0, #0
 8001426:	d194      	bne.n	8001352 <main+0x46>
	I2C_init();
	USART_init();
	/*********************************************************************/
	
	/* Configure Modbus packets -----------------------------------------*/
	modbus_Setup();
 8001428:	f003 fc3a 	bl	8004ca0 <modbus_Setup>
  */
static void init_leds(void){
	GPIO_InitTypeDef GPIO_InitStructure;

	// Enable AHB1per Clock
	__GPIOD_CLK_ENABLE();
 800142c:	4a19      	ldr	r2, [pc, #100]	; (8001494 <main+0x188>)
	//Config pins
	GPIO_InitStructure.Pin = GPIO_PIN_12 | GPIO_PIN_13;
	GPIO_InitStructure.Mode = GPIO_MODE_OUTPUT_PP;
	GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
	GPIO_InitStructure.Pull = GPIO_PULLUP;
	HAL_GPIO_Init(GPIOD, &GPIO_InitStructure);
 800142e:	4823      	ldr	r0, [pc, #140]	; (80014bc <main+0x1b0>)
  */
static void init_leds(void){
	GPIO_InitTypeDef GPIO_InitStructure;

	// Enable AHB1per Clock
	__GPIOD_CLK_ENABLE();
 8001430:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8001432:	f043 0308 	orr.w	r3, r3, #8
 8001436:	6313      	str	r3, [r2, #48]	; 0x30

	//Config pins
	GPIO_InitStructure.Pin = GPIO_PIN_12 | GPIO_PIN_13;
 8001438:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 800143c:	9306      	str	r3, [sp, #24]
	GPIO_InitStructure.Mode = GPIO_MODE_OUTPUT_PP;
	GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
	GPIO_InitStructure.Pull = GPIO_PULLUP;
	HAL_GPIO_Init(GPIOD, &GPIO_InitStructure);
 800143e:	a906      	add	r1, sp, #24
	__GPIOD_CLK_ENABLE();

	//Config pins
	GPIO_InitStructure.Pin = GPIO_PIN_12 | GPIO_PIN_13;
	GPIO_InitStructure.Mode = GPIO_MODE_OUTPUT_PP;
	GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
 8001440:	2303      	movs	r3, #3
 8001442:	9309      	str	r3, [sp, #36]	; 0x24
	// Enable AHB1per Clock
	__GPIOD_CLK_ENABLE();

	//Config pins
	GPIO_InitStructure.Pin = GPIO_PIN_12 | GPIO_PIN_13;
	GPIO_InitStructure.Mode = GPIO_MODE_OUTPUT_PP;
 8001444:	9407      	str	r4, [sp, #28]
	GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
	GPIO_InitStructure.Pull = GPIO_PULLUP;
 8001446:	9408      	str	r4, [sp, #32]
	HAL_GPIO_Init(GPIOD, &GPIO_InitStructure);
 8001448:	f003 fa86 	bl	8004958 <HAL_GPIO_Init>
	
	/*	Show us some status leds ----------------------------------------*/
	init_leds();
	
	/*	Init STemWin V5.2.6 and GUI -------------------------------------*/
	if((UB_STemWIN_init()) != SUCCESS){
 800144c:	f000 ff5a 	bl	8002304 <UB_STemWIN_init>
 8001450:	42a0      	cmp	r0, r4
 8001452:	d002      	beq.n	800145a <main+0x14e>
		printf("emWin INIT error...");
 8001454:	481a      	ldr	r0, [pc, #104]	; (80014c0 <main+0x1b4>)
 8001456:	f012 fb35 	bl	8013ac4 <printf>
	}
	
	/*	Init Verventa GUI -----------------------------------------------*/
	if(( Init_GUI_verventa()) != SUCCESS){
 800145a:	f000 fd17 	bl	8001e8c <Init_GUI_verventa>
 800145e:	2801      	cmp	r0, #1
 8001460:	d002      	beq.n	8001468 <main+0x15c>
		printf("can't INIT verventa GUI...");
 8001462:	4818      	ldr	r0, [pc, #96]	; (80014c4 <main+0x1b8>)
 8001464:	f012 fb2e 	bl	8013ac4 <printf>
	//	printf("Compiled HAL\n");
		
				
	//	test_Cplusplus();
		
		if(gui_Exec == true){
 8001468:	4c17      	ldr	r4, [pc, #92]	; (80014c8 <main+0x1bc>)
 800146a:	7823      	ldrb	r3, [r4, #0]
 800146c:	b13b      	cbz	r3, 800147e <main+0x172>
			WM_InvalidateWindow(hWinFanImg);
 800146e:	4b17      	ldr	r3, [pc, #92]	; (80014cc <main+0x1c0>)
 8001470:	6818      	ldr	r0, [r3, #0]
 8001472:	f007 fe93 	bl	800919c <WM_InvalidateWindow>
			GUI_Exec();
 8001476:	f00c f863 	bl	800d540 <GUI_Exec>
			//modbus_update();
			
			/*Clear Flag*/
			gui_Exec = false;
 800147a:	2300      	movs	r3, #0
 800147c:	7023      	strb	r3, [r4, #0]
		}
		
		if(Touch_Flagged == true){
 800147e:	4c14      	ldr	r4, [pc, #80]	; (80014d0 <main+0x1c4>)
 8001480:	7823      	ldrb	r3, [r4, #0]
 8001482:	2b00      	cmp	r3, #0
 8001484:	d0f0      	beq.n	8001468 <main+0x15c>
			UB_STemWIN_updateTouch();
 8001486:	f000 ff55 	bl	8002334 <UB_STemWIN_updateTouch>
			modbus_update();
 800148a:	f003 fe47 	bl	800511c <modbus_update>

			Touch_Flagged = false;
 800148e:	2300      	movs	r3, #0
 8001490:	7023      	strb	r3, [r4, #0]
 8001492:	e7e9      	b.n	8001468 <main+0x15c>
 8001494:	40023800 	.word	0x40023800
 8001498:	40023c00 	.word	0x40023c00
 800149c:	080195a8 	.word	0x080195a8
 80014a0:	2000daac 	.word	0x2000daac
 80014a4:	2000da90 	.word	0x2000da90
 80014a8:	2000daf0 	.word	0x2000daf0
 80014ac:	40005400 	.word	0x40005400
 80014b0:	00061a80 	.word	0x00061a80
 80014b4:	2000da50 	.word	0x2000da50
 80014b8:	40004400 	.word	0x40004400
 80014bc:	40020c00 	.word	0x40020c00
 80014c0:	080195b5 	.word	0x080195b5
 80014c4:	080195c9 	.word	0x080195c9
 80014c8:	2000d380 	.word	0x2000d380
 80014cc:	2000db44 	.word	0x2000db44
 80014d0:	2000d381 	.word	0x2000d381

080014d4 <__io_putchar>:
/**
  * @brief  Retargets the C library printf function to the USART (GNU)
  * @param  None
  * @retval None
  */
int __io_putchar(int ch){
 80014d4:	b510      	push	{r4, lr}
 80014d6:	4604      	mov	r4, r0
  /* Place your implementation of fputc here */
  /* e.g. write a character to the USART */

	Debug_ITMDebugOutputChar(ch); // SWV
 80014d8:	b2c0      	uxtb	r0, r0
 80014da:	f7ff fef7 	bl	80012cc <Debug_ITMDebugOutputChar>

  return(ch);
}
 80014de:	4620      	mov	r0, r4
 80014e0:	bd10      	pop	{r4, pc}

080014e2 <__io_getchar>:
int __io_getchar(void){
  /* Place your implementation of fgetc here */
  /* e.g. read a character from the USART */

  return((int)-1);
}
 80014e2:	f04f 30ff 	mov.w	r0, #4294967295
 80014e6:	4770      	bx	lr

080014e8 <assert_failed>:
  *         where the assert_param error has occurred.
  * @param  file: pointer to the source file name
  * @param  line: assert_param error line source number
  * @retval None
  */
void assert_failed(uint8_t* file, uint32_t line){
 80014e8:	b508      	push	{r3, lr}
 80014ea:	4603      	mov	r3, r0
 80014ec:	460a      	mov	r2, r1
  printf("Wrong parameters value: file %s on line %d\r\n", file, line);
 80014ee:	4802      	ldr	r0, [pc, #8]	; (80014f8 <assert_failed+0x10>)
 80014f0:	4619      	mov	r1, r3
 80014f2:	f012 fae7 	bl	8013ac4 <printf>

  while(1); /* Infinite loop */
 80014f6:	e7fe      	b.n	80014f6 <assert_failed+0xe>
 80014f8:	080195e4 	.word	0x080195e4

080014fc <HAL_UART_MspInit>:
  
  GPIO_InitTypeDef  GPIO_InitStruct;
  
  /*##-1- Enable peripherals and GPIO Clocks #################################*/
  /* Enable GPIO TX/RX clock */
  USARTx_TX_GPIO_CLK_ENABLE();
 80014fc:	4b43      	ldr	r3, [pc, #268]	; (800160c <HAL_UART_MspInit+0x110>)
 80014fe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001500:	f042 0201 	orr.w	r2, r2, #1
  *           - NVIC configuration for DMA interrupt request enable
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef *huart)
{
 8001504:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  
  GPIO_InitTypeDef  GPIO_InitStruct;
  
  /*##-1- Enable peripherals and GPIO Clocks #################################*/
  /* Enable GPIO TX/RX clock */
  USARTx_TX_GPIO_CLK_ENABLE();
 8001508:	631a      	str	r2, [r3, #48]	; 0x30
  USARTx_RX_GPIO_CLK_ENABLE();
 800150a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
  GPIO_InitStruct.Pull      = GPIO_NOPULL;
  GPIO_InitStruct.Speed     = GPIO_SPEED_FAST;
  GPIO_InitStruct.Alternate = USARTx_TX_AF;
  
  HAL_GPIO_Init(USARTx_TX_GPIO_PORT, &GPIO_InitStruct);
 800150c:	4c40      	ldr	r4, [pc, #256]	; (8001610 <HAL_UART_MspInit+0x114>)
  GPIO_InitTypeDef  GPIO_InitStruct;
  
  /*##-1- Enable peripherals and GPIO Clocks #################################*/
  /* Enable GPIO TX/RX clock */
  USARTx_TX_GPIO_CLK_ENABLE();
  USARTx_RX_GPIO_CLK_ENABLE();
 800150e:	f042 0201 	orr.w	r2, r2, #1
 8001512:	631a      	str	r2, [r3, #48]	; 0x30
  /* Enable USART2 clock */
  USARTx_CLK_ENABLE(); 
 8001514:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001516:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800151a:	641a      	str	r2, [r3, #64]	; 0x40
  /* Enable DMA1 clock */
  DMAx_CLK_ENABLE();   
 800151c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  *           - NVIC configuration for DMA interrupt request enable
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef *huart)
{
 800151e:	b089      	sub	sp, #36	; 0x24
  USARTx_TX_GPIO_CLK_ENABLE();
  USARTx_RX_GPIO_CLK_ENABLE();
  /* Enable USART2 clock */
  USARTx_CLK_ENABLE(); 
  /* Enable DMA1 clock */
  DMAx_CLK_ENABLE();   
 8001520:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
  
  /*##-2- Configure peripheral GPIO ##########################################*/  
  /* UART TX GPIO pin configuration  */
  GPIO_InitStruct.Pin       = USARTx_TX_PIN;
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
  GPIO_InitStruct.Pull      = GPIO_NOPULL;
 8001524:	2500      	movs	r5, #0
  USARTx_TX_GPIO_CLK_ENABLE();
  USARTx_RX_GPIO_CLK_ENABLE();
  /* Enable USART2 clock */
  USARTx_CLK_ENABLE(); 
  /* Enable DMA1 clock */
  DMAx_CLK_ENABLE();   
 8001526:	631a      	str	r2, [r3, #48]	; 0x30
  *           - NVIC configuration for DMA interrupt request enable
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef *huart)
{
 8001528:	4607      	mov	r7, r0
  DMAx_CLK_ENABLE();   
  
  /*##-2- Configure peripheral GPIO ##########################################*/  
  /* UART TX GPIO pin configuration  */
  GPIO_InitStruct.Pin       = USARTx_TX_PIN;
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
 800152a:	2602      	movs	r6, #2
  /* Enable DMA1 clock */
  DMAx_CLK_ENABLE();   
  
  /*##-2- Configure peripheral GPIO ##########################################*/  
  /* UART TX GPIO pin configuration  */
  GPIO_InitStruct.Pin       = USARTx_TX_PIN;
 800152c:	2304      	movs	r3, #4
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
  GPIO_InitStruct.Pull      = GPIO_NOPULL;
  GPIO_InitStruct.Speed     = GPIO_SPEED_FAST;
  GPIO_InitStruct.Alternate = USARTx_TX_AF;
 800152e:	f04f 0807 	mov.w	r8, #7
  
  HAL_GPIO_Init(USARTx_TX_GPIO_PORT, &GPIO_InitStruct);
 8001532:	4620      	mov	r0, r4
 8001534:	a903      	add	r1, sp, #12
  /* Enable DMA1 clock */
  DMAx_CLK_ENABLE();   
  
  /*##-2- Configure peripheral GPIO ##########################################*/  
  /* UART TX GPIO pin configuration  */
  GPIO_InitStruct.Pin       = USARTx_TX_PIN;
 8001536:	9303      	str	r3, [sp, #12]
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
  GPIO_InitStruct.Pull      = GPIO_NOPULL;
  GPIO_InitStruct.Speed     = GPIO_SPEED_FAST;
  GPIO_InitStruct.Alternate = USARTx_TX_AF;
 8001538:	f8cd 801c 	str.w	r8, [sp, #28]
  DMAx_CLK_ENABLE();   
  
  /*##-2- Configure peripheral GPIO ##########################################*/  
  /* UART TX GPIO pin configuration  */
  GPIO_InitStruct.Pin       = USARTx_TX_PIN;
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
 800153c:	9604      	str	r6, [sp, #16]
  GPIO_InitStruct.Pull      = GPIO_NOPULL;
 800153e:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Speed     = GPIO_SPEED_FAST;
 8001540:	9606      	str	r6, [sp, #24]
  GPIO_InitStruct.Alternate = USARTx_TX_AF;
  
  HAL_GPIO_Init(USARTx_TX_GPIO_PORT, &GPIO_InitStruct);
 8001542:	f003 fa09 	bl	8004958 <HAL_GPIO_Init>
    
  /* UART RX GPIO pin configuration  */
  GPIO_InitStruct.Pin = USARTx_RX_PIN;
  GPIO_InitStruct.Alternate = USARTx_RX_AF;
    
  HAL_GPIO_Init(USARTx_RX_GPIO_PORT, &GPIO_InitStruct);
 8001546:	a903      	add	r1, sp, #12
  GPIO_InitStruct.Alternate = USARTx_TX_AF;
  
  HAL_GPIO_Init(USARTx_TX_GPIO_PORT, &GPIO_InitStruct);
    
  /* UART RX GPIO pin configuration  */
  GPIO_InitStruct.Pin = USARTx_RX_PIN;
 8001548:	2308      	movs	r3, #8
  GPIO_InitStruct.Alternate = USARTx_RX_AF;
    
  HAL_GPIO_Init(USARTx_RX_GPIO_PORT, &GPIO_InitStruct);
 800154a:	4620      	mov	r0, r4
    
  /*##-3- Configure the DMA streams ##########################################*/
  /* Configure the DMA handler for Transmission process */
  hdma_tx.Instance                 = USARTx_TX_DMA_STREAM;
 800154c:	4c31      	ldr	r4, [pc, #196]	; (8001614 <HAL_UART_MspInit+0x118>)
  GPIO_InitStruct.Alternate = USARTx_TX_AF;
  
  HAL_GPIO_Init(USARTx_TX_GPIO_PORT, &GPIO_InitStruct);
    
  /* UART RX GPIO pin configuration  */
  GPIO_InitStruct.Pin = USARTx_RX_PIN;
 800154e:	9303      	str	r3, [sp, #12]
  GPIO_InitStruct.Alternate = USARTx_RX_AF;
 8001550:	f8cd 801c 	str.w	r8, [sp, #28]
    
  HAL_GPIO_Init(USARTx_RX_GPIO_PORT, &GPIO_InitStruct);
 8001554:	f003 fa00 	bl	8004958 <HAL_GPIO_Init>
    
  /*##-3- Configure the DMA streams ##########################################*/
  /* Configure the DMA handler for Transmission process */
  hdma_tx.Instance                 = USARTx_TX_DMA_STREAM;
 8001558:	4b2f      	ldr	r3, [pc, #188]	; (8001618 <HAL_UART_MspInit+0x11c>)
 800155a:	6023      	str	r3, [r4, #0]
  
  hdma_tx.Init.Channel             = USARTx_TX_DMA_CHANNEL;
  hdma_tx.Init.Direction           = DMA_MEMORY_TO_PERIPH;
 800155c:	2240      	movs	r2, #64	; 0x40
    
  /*##-3- Configure the DMA streams ##########################################*/
  /* Configure the DMA handler for Transmission process */
  hdma_tx.Instance                 = USARTx_TX_DMA_STREAM;
  
  hdma_tx.Init.Channel             = USARTx_TX_DMA_CHANNEL;
 800155e:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
  hdma_tx.Init.Direction           = DMA_MEMORY_TO_PERIPH;
  hdma_tx.Init.PeriphInc           = DMA_PINC_DISABLE;
  hdma_tx.Init.MemInc              = DMA_MINC_ENABLE;
 8001562:	f44f 6b80 	mov.w	fp, #1024	; 0x400
  hdma_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
  hdma_tx.Init.MemDataAlignment    = DMA_MDATAALIGN_BYTE;
  hdma_tx.Init.Mode                = DMA_NORMAL;
  hdma_tx.Init.Priority            = DMA_PRIORITY_LOW;
  hdma_tx.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
  hdma_tx.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 8001566:	f04f 0a03 	mov.w	sl, #3
  hdma_tx.Init.MemBurst            = DMA_MBURST_INC4;
 800156a:	f44f 0900 	mov.w	r9, #8388608	; 0x800000
  hdma_tx.Init.PeriphBurst         = DMA_PBURST_INC4;
 800156e:	f44f 1800 	mov.w	r8, #2097152	; 0x200000
  
  HAL_DMA_Init(&hdma_tx);   
 8001572:	4620      	mov	r0, r4
    
  /*##-3- Configure the DMA streams ##########################################*/
  /* Configure the DMA handler for Transmission process */
  hdma_tx.Instance                 = USARTx_TX_DMA_STREAM;
  
  hdma_tx.Init.Channel             = USARTx_TX_DMA_CHANNEL;
 8001574:	6063      	str	r3, [r4, #4]
 8001576:	9301      	str	r3, [sp, #4]
  hdma_tx.Init.Direction           = DMA_MEMORY_TO_PERIPH;
 8001578:	60a2      	str	r2, [r4, #8]
  hdma_tx.Init.PeriphInc           = DMA_PINC_DISABLE;
 800157a:	60e5      	str	r5, [r4, #12]
  hdma_tx.Init.MemInc              = DMA_MINC_ENABLE;
 800157c:	f8c4 b010 	str.w	fp, [r4, #16]
  hdma_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8001580:	6165      	str	r5, [r4, #20]
  hdma_tx.Init.MemDataAlignment    = DMA_MDATAALIGN_BYTE;
 8001582:	61a5      	str	r5, [r4, #24]
  hdma_tx.Init.Mode                = DMA_NORMAL;
 8001584:	61e5      	str	r5, [r4, #28]
  hdma_tx.Init.Priority            = DMA_PRIORITY_LOW;
 8001586:	6225      	str	r5, [r4, #32]
  hdma_tx.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 8001588:	6265      	str	r5, [r4, #36]	; 0x24
  hdma_tx.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 800158a:	f8c4 a028 	str.w	sl, [r4, #40]	; 0x28
  hdma_tx.Init.MemBurst            = DMA_MBURST_INC4;
 800158e:	f8c4 902c 	str.w	r9, [r4, #44]	; 0x2c
  hdma_tx.Init.PeriphBurst         = DMA_PBURST_INC4;
 8001592:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  
  HAL_DMA_Init(&hdma_tx);   
 8001596:	f002 fba9 	bl	8003cec <HAL_DMA_Init>
  
  /* Associate the initialized DMA handle to the the UART handle */
  __HAL_LINKDMA(huart, hdmatx, hdma_tx);
 800159a:	633c      	str	r4, [r7, #48]	; 0x30
 800159c:	63a7      	str	r7, [r4, #56]	; 0x38
    
  /* Configure the DMA handler for Transmission process */
  hdma_rx.Instance                 = USARTx_RX_DMA_STREAM;
 800159e:	4c1f      	ldr	r4, [pc, #124]	; (800161c <HAL_UART_MspInit+0x120>)
  
  hdma_rx.Init.Channel             = USARTx_RX_DMA_CHANNEL;
 80015a0:	9b01      	ldr	r3, [sp, #4]
  
  /* Associate the initialized DMA handle to the the UART handle */
  __HAL_LINKDMA(huart, hdmatx, hdma_tx);
    
  /* Configure the DMA handler for Transmission process */
  hdma_rx.Instance                 = USARTx_RX_DMA_STREAM;
 80015a2:	4a1f      	ldr	r2, [pc, #124]	; (8001620 <HAL_UART_MspInit+0x124>)
  
  hdma_rx.Init.Channel             = USARTx_RX_DMA_CHANNEL;
 80015a4:	6063      	str	r3, [r4, #4]
  hdma_rx.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;         
  hdma_rx.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
  hdma_rx.Init.MemBurst            = DMA_MBURST_INC4;
  hdma_rx.Init.PeriphBurst         = DMA_PBURST_INC4; 

  HAL_DMA_Init(&hdma_rx);
 80015a6:	4620      	mov	r0, r4
  hdma_rx.Init.PeriphInc           = DMA_PINC_DISABLE;
  hdma_rx.Init.MemInc              = DMA_MINC_ENABLE;
  hdma_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
  hdma_rx.Init.MemDataAlignment    = DMA_MDATAALIGN_BYTE;
  hdma_rx.Init.Mode                = DMA_NORMAL;
  hdma_rx.Init.Priority            = DMA_PRIORITY_HIGH;
 80015a8:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80015ac:	6223      	str	r3, [r4, #32]
  
  /* Associate the initialized DMA handle to the the UART handle */
  __HAL_LINKDMA(huart, hdmatx, hdma_tx);
    
  /* Configure the DMA handler for Transmission process */
  hdma_rx.Instance                 = USARTx_RX_DMA_STREAM;
 80015ae:	6022      	str	r2, [r4, #0]
  
  hdma_rx.Init.Channel             = USARTx_RX_DMA_CHANNEL;
  hdma_rx.Init.Direction           = DMA_PERIPH_TO_MEMORY;
 80015b0:	60a5      	str	r5, [r4, #8]
  hdma_rx.Init.PeriphInc           = DMA_PINC_DISABLE;
 80015b2:	60e5      	str	r5, [r4, #12]
  hdma_rx.Init.MemInc              = DMA_MINC_ENABLE;
 80015b4:	f8c4 b010 	str.w	fp, [r4, #16]
  hdma_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 80015b8:	6165      	str	r5, [r4, #20]
  hdma_rx.Init.MemDataAlignment    = DMA_MDATAALIGN_BYTE;
 80015ba:	61a5      	str	r5, [r4, #24]
  hdma_rx.Init.Mode                = DMA_NORMAL;
 80015bc:	61e5      	str	r5, [r4, #28]
  hdma_rx.Init.Priority            = DMA_PRIORITY_HIGH;
  hdma_rx.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;         
 80015be:	6265      	str	r5, [r4, #36]	; 0x24
  hdma_rx.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 80015c0:	f8c4 a028 	str.w	sl, [r4, #40]	; 0x28
  hdma_rx.Init.MemBurst            = DMA_MBURST_INC4;
 80015c4:	f8c4 902c 	str.w	r9, [r4, #44]	; 0x2c
  hdma_rx.Init.PeriphBurst         = DMA_PBURST_INC4; 
 80015c8:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30

  HAL_DMA_Init(&hdma_rx);
 80015cc:	f002 fb8e 	bl	8003cec <HAL_DMA_Init>
  /* Associate the initialized DMA handle to the the UART handle */
  __HAL_LINKDMA(huart, hdmarx, hdma_rx);
    
  /*##-4- Configure the NVIC for DMA #########################################*/
  /* NVIC configuration for DMA transfer complete interrupt (USARTx_TX) */
  HAL_NVIC_SetPriority(USARTx_DMA_TX_IRQn, 2, 1);
 80015d0:	4631      	mov	r1, r6
  hdma_rx.Init.PeriphBurst         = DMA_PBURST_INC4; 

  HAL_DMA_Init(&hdma_rx);
    
  /* Associate the initialized DMA handle to the the UART handle */
  __HAL_LINKDMA(huart, hdmarx, hdma_rx);
 80015d2:	637c      	str	r4, [r7, #52]	; 0x34
    
  /*##-4- Configure the NVIC for DMA #########################################*/
  /* NVIC configuration for DMA transfer complete interrupt (USARTx_TX) */
  HAL_NVIC_SetPriority(USARTx_DMA_TX_IRQn, 2, 1);
 80015d4:	2201      	movs	r2, #1
 80015d6:	2011      	movs	r0, #17
  hdma_rx.Init.PeriphBurst         = DMA_PBURST_INC4; 

  HAL_DMA_Init(&hdma_rx);
    
  /* Associate the initialized DMA handle to the the UART handle */
  __HAL_LINKDMA(huart, hdmarx, hdma_rx);
 80015d8:	63a7      	str	r7, [r4, #56]	; 0x38
    
  /*##-4- Configure the NVIC for DMA #########################################*/
  /* NVIC configuration for DMA transfer complete interrupt (USARTx_TX) */
  HAL_NVIC_SetPriority(USARTx_DMA_TX_IRQn, 2, 1);
 80015da:	f001 fea9 	bl	8003330 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(USARTx_DMA_TX_IRQn);
 80015de:	2011      	movs	r0, #17
 80015e0:	f001 fee8 	bl	80033b4 <HAL_NVIC_EnableIRQ>
    
  /* NVIC configuration for DMA transfer complete interrupt (USARTx_RX) */
  HAL_NVIC_SetPriority(USARTx_DMA_RX_IRQn, 2, 0);   
 80015e4:	4631      	mov	r1, r6
 80015e6:	462a      	mov	r2, r5
 80015e8:	2010      	movs	r0, #16
 80015ea:	f001 fea1 	bl	8003330 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(USARTx_DMA_RX_IRQn);
 80015ee:	2010      	movs	r0, #16
 80015f0:	f001 fee0 	bl	80033b4 <HAL_NVIC_EnableIRQ>
  
  /* NVIC configuration for USART TC interrupt */
  HAL_NVIC_SetPriority(USARTx_IRQn, 0, 0);
 80015f4:	4629      	mov	r1, r5
 80015f6:	462a      	mov	r2, r5
 80015f8:	2026      	movs	r0, #38	; 0x26
 80015fa:	f001 fe99 	bl	8003330 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(USARTx_IRQn);
 80015fe:	2026      	movs	r0, #38	; 0x26
 8001600:	f001 fed8 	bl	80033b4 <HAL_NVIC_EnableIRQ>
}
 8001604:	b009      	add	sp, #36	; 0x24
 8001606:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800160a:	bf00      	nop
 800160c:	40023800 	.word	0x40023800
 8001610:	40020000 	.word	0x40020000
 8001614:	2000d388 	.word	0x2000d388
 8001618:	400260a0 	.word	0x400260a0
 800161c:	2000d3d8 	.word	0x2000d3d8
 8001620:	40026088 	.word	0x40026088

08001624 <HAL_I2C_MspInit>:
  *           - DMA configuration for transmission request by peripheral 
  *           - NVIC configuration for DMA interrupt request enable
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspInit(I2C_HandleTypeDef *hi2c){
 8001624:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  
  GPIO_InitTypeDef  GPIO_InitStruct;
  
  /*##-1- Enable GPIO Clocks #################################################*/
  /* Enable GPIO TX/RX clock */
  I2Cx_SCL_GPIO_CLK_ENABLE();
 8001628:	4c26      	ldr	r4, [pc, #152]	; (80016c4 <HAL_I2C_MspInit+0xa0>)
  GPIO_InitStruct.Pin       = I2Cx_SCL_PIN;
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_OD;
  GPIO_InitStruct.Pull      = GPIO_PULLUP;
  GPIO_InitStruct.Speed     = GPIO_SPEED_FAST;
  GPIO_InitStruct.Alternate = I2Cx_SCL_AF;
  HAL_GPIO_Init(I2Cx_SCL_GPIO_PORT, &GPIO_InitStruct);
 800162a:	4e27      	ldr	r6, [pc, #156]	; (80016c8 <HAL_I2C_MspInit+0xa4>)
  
  GPIO_InitTypeDef  GPIO_InitStruct;
  
  /*##-1- Enable GPIO Clocks #################################################*/
  /* Enable GPIO TX/RX clock */
  I2Cx_SCL_GPIO_CLK_ENABLE();
 800162c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800162e:	f043 0302 	orr.w	r3, r3, #2
 8001632:	6323      	str	r3, [r4, #48]	; 0x30
  I2Cx_SDA_GPIO_CLK_ENABLE();
 8001634:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001636:	f043 0302 	orr.w	r3, r3, #2
 800163a:	6323      	str	r3, [r4, #48]	; 0x30
  /* PORTC-Reset pin bus enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800163c:	6b23      	ldr	r3, [r4, #48]	; 0x30
  *           - DMA configuration for transmission request by peripheral 
  *           - NVIC configuration for DMA interrupt request enable
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspInit(I2C_HandleTypeDef *hi2c){
 800163e:	b087      	sub	sp, #28
  /* I2C TX GPIO pin configuration  */
  GPIO_InitStruct.Pin       = I2Cx_SCL_PIN;
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_OD;
  GPIO_InitStruct.Pull      = GPIO_PULLUP;
  GPIO_InitStruct.Speed     = GPIO_SPEED_FAST;
  GPIO_InitStruct.Alternate = I2Cx_SCL_AF;
 8001640:	f04f 0904 	mov.w	r9, #4
  /*##-1- Enable GPIO Clocks #################################################*/
  /* Enable GPIO TX/RX clock */
  I2Cx_SCL_GPIO_CLK_ENABLE();
  I2Cx_SDA_GPIO_CLK_ENABLE();
  /* PORTC-Reset pin bus enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001644:	f043 0304 	orr.w	r3, r3, #4
 8001648:	6323      	str	r3, [r4, #48]	; 0x30

  /*##-2- Configure peripheral GPIO ##########################################*/
  /* I2C TX GPIO pin configuration  */
  GPIO_InitStruct.Pin       = I2Cx_SCL_PIN;
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_OD;
  GPIO_InitStruct.Pull      = GPIO_PULLUP;
 800164a:	2501      	movs	r5, #1


  /*##-2- Configure peripheral GPIO ##########################################*/
  /* I2C TX GPIO pin configuration  */
  GPIO_InitStruct.Pin       = I2Cx_SCL_PIN;
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_OD;
 800164c:	2312      	movs	r3, #18
  __HAL_RCC_GPIOC_CLK_ENABLE();


  /*##-2- Configure peripheral GPIO ##########################################*/
  /* I2C TX GPIO pin configuration  */
  GPIO_InitStruct.Pin       = I2Cx_SCL_PIN;
 800164e:	f04f 0840 	mov.w	r8, #64	; 0x40
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_OD;
  GPIO_InitStruct.Pull      = GPIO_PULLUP;
  GPIO_InitStruct.Speed     = GPIO_SPEED_FAST;
 8001652:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = I2Cx_SCL_AF;
  HAL_GPIO_Init(I2Cx_SCL_GPIO_PORT, &GPIO_InitStruct);
 8001654:	4630      	mov	r0, r6
 8001656:	eb0d 0109 	add.w	r1, sp, r9


  /*##-2- Configure peripheral GPIO ##########################################*/
  /* I2C TX GPIO pin configuration  */
  GPIO_InitStruct.Pin       = I2Cx_SCL_PIN;
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_OD;
 800165a:	9302      	str	r3, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();


  /*##-2- Configure peripheral GPIO ##########################################*/
  /* I2C TX GPIO pin configuration  */
  GPIO_InitStruct.Pin       = I2Cx_SCL_PIN;
 800165c:	f8cd 8004 	str.w	r8, [sp, #4]
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_OD;
  GPIO_InitStruct.Pull      = GPIO_PULLUP;
  GPIO_InitStruct.Speed     = GPIO_SPEED_FAST;
 8001660:	9704      	str	r7, [sp, #16]

  /*##-2- Configure peripheral GPIO ##########################################*/
  /* I2C TX GPIO pin configuration  */
  GPIO_InitStruct.Pin       = I2Cx_SCL_PIN;
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_OD;
  GPIO_InitStruct.Pull      = GPIO_PULLUP;
 8001662:	9503      	str	r5, [sp, #12]
  GPIO_InitStruct.Speed     = GPIO_SPEED_FAST;
  GPIO_InitStruct.Alternate = I2Cx_SCL_AF;
 8001664:	f8cd 9014 	str.w	r9, [sp, #20]
  HAL_GPIO_Init(I2Cx_SCL_GPIO_PORT, &GPIO_InitStruct);
 8001668:	f003 f976 	bl	8004958 <HAL_GPIO_Init>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6, GPIO_PIN_SET);
 800166c:	462a      	mov	r2, r5
 800166e:	4630      	mov	r0, r6
 8001670:	4641      	mov	r1, r8
 8001672:	f003 faa3 	bl	8004bbc <HAL_GPIO_WritePin>

  /* I2C RX GPIO pin configuration  */
  GPIO_InitStruct.Pin = I2Cx_SDA_PIN;
 8001676:	f44f 7800 	mov.w	r8, #512	; 0x200
  GPIO_InitStruct.Alternate = I2Cx_SDA_AF;
  HAL_GPIO_Init(I2Cx_SDA_GPIO_PORT, &GPIO_InitStruct);
 800167a:	4630      	mov	r0, r6
 800167c:	eb0d 0109 	add.w	r1, sp, r9
  GPIO_InitStruct.Alternate = I2Cx_SCL_AF;
  HAL_GPIO_Init(I2Cx_SCL_GPIO_PORT, &GPIO_InitStruct);
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6, GPIO_PIN_SET);

  /* I2C RX GPIO pin configuration  */
  GPIO_InitStruct.Pin = I2Cx_SDA_PIN;
 8001680:	f8cd 8004 	str.w	r8, [sp, #4]
  GPIO_InitStruct.Alternate = I2Cx_SDA_AF;
 8001684:	f8cd 9014 	str.w	r9, [sp, #20]
  HAL_GPIO_Init(I2Cx_SDA_GPIO_PORT, &GPIO_InitStruct);
 8001688:	f003 f966 	bl	8004958 <HAL_GPIO_Init>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_9, GPIO_PIN_SET);
 800168c:	462a      	mov	r2, r5
 800168e:	4630      	mov	r0, r6
 8001690:	4641      	mov	r1, r8
 8001692:	f003 fa93 	bl	8004bbc <HAL_GPIO_WritePin>
  
  /* Init Reset Pin Touch */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Speed = GPIO_SPEED_FAST;
 8001696:	9704      	str	r7, [sp, #16]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001698:	4f0c      	ldr	r7, [pc, #48]	; (80016cc <HAL_I2C_MspInit+0xa8>)
  HAL_GPIO_Init(I2Cx_SDA_GPIO_PORT, &GPIO_InitStruct);
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_9, GPIO_PIN_SET);
  
  /* Init Reset Pin Touch */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800169a:	9502      	str	r5, [sp, #8]
  GPIO_InitStruct.Alternate = I2Cx_SDA_AF;
  HAL_GPIO_Init(I2Cx_SDA_GPIO_PORT, &GPIO_InitStruct);
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_9, GPIO_PIN_SET);
  
  /* Init Reset Pin Touch */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 800169c:	2608      	movs	r6, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Speed = GPIO_SPEED_FAST;
  GPIO_InitStruct.Pull = GPIO_PULLUP;
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800169e:	4638      	mov	r0, r7
 80016a0:	eb0d 0109 	add.w	r1, sp, r9
  GPIO_InitStruct.Alternate = I2Cx_SDA_AF;
  HAL_GPIO_Init(I2Cx_SDA_GPIO_PORT, &GPIO_InitStruct);
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_9, GPIO_PIN_SET);
  
  /* Init Reset Pin Touch */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 80016a4:	9601      	str	r6, [sp, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Speed = GPIO_SPEED_FAST;
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80016a6:	9503      	str	r5, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80016a8:	f003 f956 	bl	8004958 <HAL_GPIO_Init>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3, GPIO_PIN_SET);
 80016ac:	4638      	mov	r0, r7
 80016ae:	4631      	mov	r1, r6
 80016b0:	462a      	mov	r2, r5
 80016b2:	f003 fa83 	bl	8004bbc <HAL_GPIO_WritePin>
 
  /*##-3- Enable peripheral Clock ############################################*/
  /* Enable I2C1 clock */
  I2Cx_CLK_ENABLE();
 80016b6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80016b8:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80016bc:	6423      	str	r3, [r4, #64]	; 0x40
  
}
 80016be:	b007      	add	sp, #28
 80016c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80016c4:	40023800 	.word	0x40023800
 80016c8:	40020400 	.word	0x40020400
 80016cc:	40020800 	.word	0x40020800

080016d0 <HAL_SRAM_MspInit>:
	// TODO -> PUT RESET ON GPIO PIN SO WE CAN RESET DISPLAY
	// now reset is on NRST pin on the STM32F4 discovery
	GPIO_InitTypeDef GPIO_InitStructure;

	// Clock Enable FSMC
	__HAL_RCC_FSMC_CLK_ENABLE();
 80016d0:	4b20      	ldr	r3, [pc, #128]	; (8001754 <HAL_SRAM_MspInit+0x84>)
	GPIO_InitStructure.Pin = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_14 | GPIO_PIN_15;
	GPIO_InitStructure.Mode = GPIO_MODE_AF_PP;
	GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
	GPIO_InitStructure.Pull = GPIO_NOPULL;
	GPIO_InitStructure.Alternate = GPIO_AF12_FSMC;
	HAL_GPIO_Init(GPIOD, &GPIO_InitStructure);
 80016d2:	4821      	ldr	r0, [pc, #132]	; (8001758 <HAL_SRAM_MspInit+0x88>)
	// TODO -> PUT RESET ON GPIO PIN SO WE CAN RESET DISPLAY
	// now reset is on NRST pin on the STM32F4 discovery
	GPIO_InitTypeDef GPIO_InitStructure;

	// Clock Enable FSMC
	__HAL_RCC_FSMC_CLK_ENABLE();
 80016d4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80016d6:	f042 0201 	orr.w	r2, r2, #1
/**
  * @brief SRAM init
  * param  handle to sram
  * retval None
  */
void HAL_SRAM_MspInit(SRAM_HandleTypeDef * hsram){
 80016da:	b5f0      	push	{r4, r5, r6, r7, lr}
	// TODO -> PUT RESET ON GPIO PIN SO WE CAN RESET DISPLAY
	// now reset is on NRST pin on the STM32F4 discovery
	GPIO_InitTypeDef GPIO_InitStructure;

	// Clock Enable FSMC
	__HAL_RCC_FSMC_CLK_ENABLE();
 80016dc:	639a      	str	r2, [r3, #56]	; 0x38

	// Clock Enable Port-D and Port-E
	__HAL_RCC_GPIOD_CLK_ENABLE();
 80016de:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80016e0:	f042 0208 	orr.w	r2, r2, #8
 80016e4:	631a      	str	r2, [r3, #48]	; 0x30
	__HAL_RCC_GPIOE_CLK_ENABLE();
 80016e6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80016e8:	f042 0210 	orr.w	r2, r2, #16
 80016ec:	631a      	str	r2, [r3, #48]	; 0x30
	__HAL_RCC_GPIOB_CLK_ENABLE();
 80016ee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
/**
  * @brief SRAM init
  * param  handle to sram
  * retval None
  */
void HAL_SRAM_MspInit(SRAM_HandleTypeDef * hsram){
 80016f0:	b087      	sub	sp, #28
	__HAL_RCC_FSMC_CLK_ENABLE();

	// Clock Enable Port-D and Port-E
	__HAL_RCC_GPIOD_CLK_ENABLE();
	__HAL_RCC_GPIOE_CLK_ENABLE();
	__HAL_RCC_GPIOB_CLK_ENABLE();
 80016f2:	f042 0202 	orr.w	r2, r2, #2
 80016f6:	631a      	str	r2, [r3, #48]	; 0x30
	// PD10=FSMC_D15->DB17
	// PD11=FSMC_A16->RS
	// PD14=FSMC_D0->DB0
	// PD15=FSMC_D1->DB1
	GPIO_InitStructure.Pin = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_14 | GPIO_PIN_15;
	GPIO_InitStructure.Mode = GPIO_MODE_AF_PP;
 80016f8:	2402      	movs	r4, #2
	// PD9=FSMC_D14->DB16
	// PD10=FSMC_D15->DB17
	// PD11=FSMC_A16->RS
	// PD14=FSMC_D0->DB0
	// PD15=FSMC_D1->DB1
	GPIO_InitStructure.Pin = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_14 | GPIO_PIN_15;
 80016fa:	f64c 73b3 	movw	r3, #53171	; 0xcfb3
	GPIO_InitStructure.Mode = GPIO_MODE_AF_PP;
	GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
 80016fe:	2703      	movs	r7, #3
	GPIO_InitStructure.Pull = GPIO_NOPULL;
 8001700:	2600      	movs	r6, #0
	GPIO_InitStructure.Alternate = GPIO_AF12_FSMC;
 8001702:	250c      	movs	r5, #12
	HAL_GPIO_Init(GPIOD, &GPIO_InitStructure);
 8001704:	a901      	add	r1, sp, #4
	// PD9=FSMC_D14->DB16
	// PD10=FSMC_D15->DB17
	// PD11=FSMC_A16->RS
	// PD14=FSMC_D0->DB0
	// PD15=FSMC_D1->DB1
	GPIO_InitStructure.Pin = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_14 | GPIO_PIN_15;
 8001706:	9301      	str	r3, [sp, #4]
	GPIO_InitStructure.Mode = GPIO_MODE_AF_PP;
	GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
	GPIO_InitStructure.Pull = GPIO_NOPULL;
 8001708:	9603      	str	r6, [sp, #12]
	GPIO_InitStructure.Alternate = GPIO_AF12_FSMC;
 800170a:	9505      	str	r5, [sp, #20]
	// PD10=FSMC_D15->DB17
	// PD11=FSMC_A16->RS
	// PD14=FSMC_D0->DB0
	// PD15=FSMC_D1->DB1
	GPIO_InitStructure.Pin = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_14 | GPIO_PIN_15;
	GPIO_InitStructure.Mode = GPIO_MODE_AF_PP;
 800170c:	9402      	str	r4, [sp, #8]
	GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
 800170e:	9704      	str	r7, [sp, #16]
	GPIO_InitStructure.Pull = GPIO_NOPULL;
	GPIO_InitStructure.Alternate = GPIO_AF12_FSMC;
	HAL_GPIO_Init(GPIOD, &GPIO_InitStructure);
 8001710:	f003 f922 	bl	8004958 <HAL_GPIO_Init>
	// PE14=FSMC_D11->DB13
	// PE15=FSMC_D12->DB14
	GPIO_InitStructure.Pin = GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12 | GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
	GPIO_InitStructure.Mode = GPIO_MODE_AF_PP;
	GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
	GPIO_InitStructure.Pull = GPIO_NOPULL;
 8001714:	9603      	str	r6, [sp, #12]
	/* Init Reset Pin Display */
	GPIO_InitStructure.Pin = GPIO_PIN_1;
	GPIO_InitStructure.Mode = GPIO_MODE_OUTPUT_PP;
	GPIO_InitStructure.Speed = GPIO_SPEED_FAST;
	GPIO_InitStructure.Pull = GPIO_PULLUP;
	HAL_GPIO_Init(GPIOB, &GPIO_InitStructure);
 8001716:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
	// PE11=FSMC_D8->DB10
	// PE12=FSMC_D9->DB11
	// PE13=FSMC_D10->DB12
	// PE14=FSMC_D11->DB13
	// PE15=FSMC_D12->DB14
	GPIO_InitStructure.Pin = GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12 | GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
 800171a:	f64f 7380 	movw	r3, #65408	; 0xff80
	GPIO_InitStructure.Mode = GPIO_MODE_AF_PP;
	GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
	GPIO_InitStructure.Pull = GPIO_NOPULL;
	GPIO_InitStructure.Alternate = GPIO_AF12_FSMC;
	HAL_GPIO_Init(GPIOE, &GPIO_InitStructure);
 800171e:	a901      	add	r1, sp, #4
	/* Init Reset Pin Display */
	GPIO_InitStructure.Pin = GPIO_PIN_1;
	GPIO_InitStructure.Mode = GPIO_MODE_OUTPUT_PP;
	GPIO_InitStructure.Speed = GPIO_SPEED_FAST;
	GPIO_InitStructure.Pull = GPIO_PULLUP;
	HAL_GPIO_Init(GPIOB, &GPIO_InitStructure);
 8001720:	f506 3601 	add.w	r6, r6, #132096	; 0x20400
	GPIO_InitStructure.Pin = GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12 | GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
	GPIO_InitStructure.Mode = GPIO_MODE_AF_PP;
	GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
	GPIO_InitStructure.Pull = GPIO_NOPULL;
	GPIO_InitStructure.Alternate = GPIO_AF12_FSMC;
	HAL_GPIO_Init(GPIOE, &GPIO_InitStructure);
 8001724:	480d      	ldr	r0, [pc, #52]	; (800175c <HAL_SRAM_MspInit+0x8c>)
	// PE11=FSMC_D8->DB10
	// PE12=FSMC_D9->DB11
	// PE13=FSMC_D10->DB12
	// PE14=FSMC_D11->DB13
	// PE15=FSMC_D12->DB14
	GPIO_InitStructure.Pin = GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12 | GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
 8001726:	9301      	str	r3, [sp, #4]
	GPIO_InitStructure.Mode = GPIO_MODE_AF_PP;
	GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
	GPIO_InitStructure.Pull = GPIO_NOPULL;
	GPIO_InitStructure.Alternate = GPIO_AF12_FSMC;
 8001728:	9505      	str	r5, [sp, #20]
	// PE12=FSMC_D9->DB11
	// PE13=FSMC_D10->DB12
	// PE14=FSMC_D11->DB13
	// PE15=FSMC_D12->DB14
	GPIO_InitStructure.Pin = GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12 | GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
	GPIO_InitStructure.Mode = GPIO_MODE_AF_PP;
 800172a:	9402      	str	r4, [sp, #8]
	GPIO_InitStructure.Alternate = GPIO_AF12_FSMC;
	HAL_GPIO_Init(GPIOE, &GPIO_InitStructure);

	/* Init Reset Pin Display */
	GPIO_InitStructure.Pin = GPIO_PIN_1;
	GPIO_InitStructure.Mode = GPIO_MODE_OUTPUT_PP;
 800172c:	2501      	movs	r5, #1
	// PE13=FSMC_D10->DB12
	// PE14=FSMC_D11->DB13
	// PE15=FSMC_D12->DB14
	GPIO_InitStructure.Pin = GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12 | GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
	GPIO_InitStructure.Mode = GPIO_MODE_AF_PP;
	GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
 800172e:	9704      	str	r7, [sp, #16]
	GPIO_InitStructure.Pull = GPIO_NOPULL;
	GPIO_InitStructure.Alternate = GPIO_AF12_FSMC;
	HAL_GPIO_Init(GPIOE, &GPIO_InitStructure);
 8001730:	f003 f912 	bl	8004958 <HAL_GPIO_Init>
	/* Init Reset Pin Display */
	GPIO_InitStructure.Pin = GPIO_PIN_1;
	GPIO_InitStructure.Mode = GPIO_MODE_OUTPUT_PP;
	GPIO_InitStructure.Speed = GPIO_SPEED_FAST;
	GPIO_InitStructure.Pull = GPIO_PULLUP;
	HAL_GPIO_Init(GPIOB, &GPIO_InitStructure);
 8001734:	4630      	mov	r0, r6
 8001736:	a901      	add	r1, sp, #4
	GPIO_InitStructure.Pull = GPIO_NOPULL;
	GPIO_InitStructure.Alternate = GPIO_AF12_FSMC;
	HAL_GPIO_Init(GPIOE, &GPIO_InitStructure);

	/* Init Reset Pin Display */
	GPIO_InitStructure.Pin = GPIO_PIN_1;
 8001738:	9401      	str	r4, [sp, #4]
	GPIO_InitStructure.Mode = GPIO_MODE_OUTPUT_PP;
 800173a:	9502      	str	r5, [sp, #8]
	GPIO_InitStructure.Speed = GPIO_SPEED_FAST;
 800173c:	9404      	str	r4, [sp, #16]
	GPIO_InitStructure.Pull = GPIO_PULLUP;
 800173e:	9503      	str	r5, [sp, #12]
	HAL_GPIO_Init(GPIOB, &GPIO_InitStructure);
 8001740:	f003 f90a 	bl	8004958 <HAL_GPIO_Init>
	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 8001744:	4630      	mov	r0, r6
 8001746:	4621      	mov	r1, r4
 8001748:	462a      	mov	r2, r5
 800174a:	f003 fa37 	bl	8004bbc <HAL_GPIO_WritePin>
 
}
 800174e:	b007      	add	sp, #28
 8001750:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001752:	bf00      	nop
 8001754:	40023800 	.word	0x40023800
 8001758:	40020c00 	.word	0x40020c00
 800175c:	40021000 	.word	0x40021000

08001760 <HAL_MspInit>:
  * @brief  Initializes the Global MSP.
  * @param  None
  * @retval None
  */
void HAL_MspInit(void)
{
 8001760:	4770      	bx	lr

08001762 <_close>:
    }
}

int _close(int file) {
    return -1;
}
 8001762:	f04f 30ff 	mov.w	r0, #4294967295
 8001766:	4770      	bx	lr

08001768 <_fstat>:
 Status of an open file. For consistency with other minimal implementations in these examples,
 all files are regarded as character special devices.
 The `sys/stat.h' header file required is distributed in the `include' subdirectory for this C library.
 */
int _fstat(int file, struct stat *st) {
    st->st_mode = S_IFCHR;
 8001768:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800176c:	604b      	str	r3, [r1, #4]
    return 0;
}
 800176e:	2000      	movs	r0, #0
 8001770:	4770      	bx	lr
	...

08001774 <_isatty>:
/*
 isatty
 Query whether output stream is a terminal. For consistency with the other minimal implementations,
 */
int _isatty(int file) {
    switch (file){
 8001774:	2802      	cmp	r0, #2
    case STDERR_FILENO:
    case STDIN_FILENO:
        return 1;
    default:
        //errno = ENOTTY;
        errno = EBADF;
 8001776:	bf81      	itttt	hi
 8001778:	4b03      	ldrhi	r3, [pc, #12]	; (8001788 <_isatty+0x14>)
 800177a:	2209      	movhi	r2, #9
        return 0;
 800177c:	2000      	movhi	r0, #0
    case STDERR_FILENO:
    case STDIN_FILENO:
        return 1;
    default:
        //errno = ENOTTY;
        errno = EBADF;
 800177e:	601a      	strhi	r2, [r3, #0]
int _isatty(int file) {
    switch (file){
    case STDOUT_FILENO:
    case STDERR_FILENO:
    case STDIN_FILENO:
        return 1;
 8001780:	bf98      	it	ls
 8001782:	2001      	movls	r0, #1
    default:
        //errno = ENOTTY;
        errno = EBADF;
        return 0;
    }
}
 8001784:	4770      	bx	lr
 8001786:	bf00      	nop
 8001788:	2000dee0 	.word	0x2000dee0

0800178c <_lseek>:
 lseek
 Set position in a file. Minimal implementation:
 */
int _lseek(int file, int ptr, int dir) {
    return 0;
}
 800178c:	2000      	movs	r0, #0
 800178e:	4770      	bx	lr

08001790 <_read>:
 Read a character to a file. `libc' subroutines will use this system routine for input from all files, including stdin
 Returns -1 on error or blocks until the number of characters have been read.
 */


int _read(int file, char *ptr, int len) {
 8001790:	b570      	push	{r4, r5, r6, lr}
 8001792:	460e      	mov	r6, r1
 8001794:	4614      	mov	r4, r2
    int n;
    int num = 0;
    switch (file) {
 8001796:	b940      	cbnz	r0, 80017aa <_read+0x1a>
 8001798:	460d      	mov	r5, r1
 800179a:	1bab      	subs	r3, r5, r6
    case STDIN_FILENO:
        for (n = 0; n < len; n++) {
 800179c:	42a3      	cmp	r3, r4
 800179e:	da0a      	bge.n	80017b6 <_read+0x26>
            *ptr++ = __io_getchar();
 80017a0:	f7ff fe9f 	bl	80014e2 <__io_getchar>
 80017a4:	f805 0b01 	strb.w	r0, [r5], #1
 80017a8:	e7f7      	b.n	800179a <_read+0xa>
            num++;
        }
        break;
    default:
        errno = EBADF;
 80017aa:	4b04      	ldr	r3, [pc, #16]	; (80017bc <_read+0x2c>)
 80017ac:	2209      	movs	r2, #9
 80017ae:	601a      	str	r2, [r3, #0]
        return -1;
 80017b0:	f04f 30ff 	mov.w	r0, #4294967295
 80017b4:	bd70      	pop	{r4, r5, r6, pc}
 80017b6:	ea24 70e4 	bic.w	r0, r4, r4, asr #31
    }
    return num;
}
 80017ba:	bd70      	pop	{r4, r5, r6, pc}
 80017bc:	2000dee0 	.word	0x2000dee0

080017c0 <_write>:
 Write a character to a file. `libc' subroutines will use this system routine for output to all files, including stdout
 Returns -1 on error or number of bytes sent
 */
int _write(int file, char *ptr, int len) {
    int n;
    switch (file) {
 80017c0:	3801      	subs	r0, #1
 80017c2:	2801      	cmp	r0, #1
/*
 write
 Write a character to a file. `libc' subroutines will use this system routine for output to all files, including stdout
 Returns -1 on error or number of bytes sent
 */
int _write(int file, char *ptr, int len) {
 80017c4:	b570      	push	{r4, r5, r6, lr}
 80017c6:	460e      	mov	r6, r1
 80017c8:	4614      	mov	r4, r2
    int n;
    switch (file) {
 80017ca:	d80a      	bhi.n	80017e2 <_write+0x22>
 80017cc:	460d      	mov	r5, r1
 80017ce:	1bab      	subs	r3, r5, r6
    case STDOUT_FILENO: /*stdout*/
    case STDERR_FILENO: /* stderr */
        for (n = 0; n < len; n++) {
 80017d0:	42a3      	cmp	r3, r4
 80017d2:	da04      	bge.n	80017de <_write+0x1e>
					__io_putchar(*ptr++);
 80017d4:	f815 0b01 	ldrb.w	r0, [r5], #1
 80017d8:	f7ff fe7c 	bl	80014d4 <__io_putchar>
 80017dc:	e7f7      	b.n	80017ce <_write+0xe>
 80017de:	4620      	mov	r0, r4
 80017e0:	bd70      	pop	{r4, r5, r6, pc}
        }
        break;
    default:
        errno = EBADF;
 80017e2:	4b03      	ldr	r3, [pc, #12]	; (80017f0 <_write+0x30>)
 80017e4:	2209      	movs	r2, #9
 80017e6:	601a      	str	r2, [r3, #0]
        return -1;
 80017e8:	f04f 30ff 	mov.w	r0, #4294967295
    }
    return len;
}
 80017ec:	bd70      	pop	{r4, r5, r6, pc}
 80017ee:	bf00      	nop
 80017f0:	2000dee0 	.word	0x2000dee0

080017f4 <_sbrk>:
/*
 sbrk
 Increase program data space.
 Malloc and related functions depend on this
 */
caddr_t _sbrk(int incr) {
 80017f4:	b508      	push	{r3, lr}

    extern char _ebss; // Defined by the linker
    static char *heap_end;
    char *prev_heap_end;

    if (heap_end == 0) {
 80017f6:	4b0d      	ldr	r3, [pc, #52]	; (800182c <_sbrk+0x38>)
 80017f8:	681a      	ldr	r2, [r3, #0]
 80017fa:	b90a      	cbnz	r2, 8001800 <_sbrk+0xc>
        heap_end = &_ebss;
 80017fc:	4a0c      	ldr	r2, [pc, #48]	; (8001830 <_sbrk+0x3c>)
 80017fe:	601a      	str	r2, [r3, #0]
    }
    prev_heap_end = heap_end;
 8001800:	681b      	ldr	r3, [r3, #0]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
{
  register uint32_t result;

  __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 8001802:	f3ef 8208 	mrs	r2, MSP

char * stack = (char*) __get_MSP();

     if (heap_end + incr >  stack)
 8001806:	4418      	add	r0, r3
 8001808:	4290      	cmp	r0, r2
 800180a:	d90a      	bls.n	8001822 <_sbrk+0x2e>
     {
         _write (STDERR_FILENO, "Heap and stack collision\n", 25);
 800180c:	4909      	ldr	r1, [pc, #36]	; (8001834 <_sbrk+0x40>)
 800180e:	2219      	movs	r2, #25
 8001810:	2002      	movs	r0, #2
 8001812:	f7ff ffd5 	bl	80017c0 <_write>
         errno = ENOMEM;
 8001816:	4b08      	ldr	r3, [pc, #32]	; (8001838 <_sbrk+0x44>)
 8001818:	220c      	movs	r2, #12
 800181a:	601a      	str	r2, [r3, #0]
         return  (caddr_t) -1;
 800181c:	f04f 30ff 	mov.w	r0, #4294967295
 8001820:	bd08      	pop	{r3, pc}
         //abort ();
     }

    heap_end += incr;
 8001822:	4a02      	ldr	r2, [pc, #8]	; (800182c <_sbrk+0x38>)
 8001824:	6010      	str	r0, [r2, #0]
    return (caddr_t) prev_heap_end;
 8001826:	4618      	mov	r0, r3

}
 8001828:	bd08      	pop	{r3, pc}
 800182a:	bf00      	nop
 800182c:	2000d428 	.word	0x2000d428
 8001830:	2000dee4 	.word	0x2000dee4
 8001834:	08019616 	.word	0x08019616
 8001838:	2000dee0 	.word	0x2000dee0

0800183c <_cbFanImg>:
	GUI_DrawRect(0, 0, 62, 62);
	GUI_DrawRect(1, 1, 61, 61);
}

void _cbFanImg(WM_MESSAGE *pMsg){
	switch (pMsg->MsgId){
 800183c:	6803      	ldr	r3, [r0, #0]
 800183e:	2b0f      	cmp	r3, #15
	}	
	GUI_DrawRect(0, 0, 62, 62);
	GUI_DrawRect(1, 1, 61, 61);
}

void _cbFanImg(WM_MESSAGE *pMsg){
 8001840:	b510      	push	{r4, lr}
	switch (pMsg->MsgId){
 8001842:	d139      	bne.n	80018b8 <_cbFanImg+0x7c>
*/
#ifdef SHOW_FAN
static void _prv_AppDrawFun(void){
	static int idx;
	
	if (g_fanCtlVal == fanctl_off)
 8001844:	4b1e      	ldr	r3, [pc, #120]	; (80018c0 <_cbFanImg+0x84>)
 8001846:	4c1f      	ldr	r4, [pc, #124]	; (80018c4 <_cbFanImg+0x88>)
 8001848:	7819      	ldrb	r1, [r3, #0]
 800184a:	2902      	cmp	r1, #2
 800184c:	d101      	bne.n	8001852 <_cbFanImg+0x16>
	{
		GUI_DrawBitmap(&bmfan_Stop0, 2, 2);
 800184e:	481e      	ldr	r0, [pc, #120]	; (80018c8 <_cbFanImg+0x8c>)
 8001850:	e014      	b.n	800187c <_cbFanImg+0x40>
		idx = 0;
	}
	else
	{	
		switch(idx++)
 8001852:	6823      	ldr	r3, [r4, #0]
 8001854:	1c5a      	adds	r2, r3, #1
 8001856:	6022      	str	r2, [r4, #0]
 8001858:	2b03      	cmp	r3, #3
 800185a:	d812      	bhi.n	8001882 <_cbFanImg+0x46>
 800185c:	e8df f003 	tbb	[pc, r3]
 8001860:	0c060402 	.word	0x0c060402
		{
		case 0:
			GUI_DrawBitmap(&bmfan_Rot0, 2, 2);
 8001864:	4819      	ldr	r0, [pc, #100]	; (80018cc <_cbFanImg+0x90>)
 8001866:	e002      	b.n	800186e <_cbFanImg+0x32>
			break;
		case 1:
			GUI_DrawBitmap(&bmfan_Rot1, 2, 2);
 8001868:	4819      	ldr	r0, [pc, #100]	; (80018d0 <_cbFanImg+0x94>)
 800186a:	e000      	b.n	800186e <_cbFanImg+0x32>
			break;
		case 2:
			GUI_DrawBitmap(&bmfan_Rot2, 2, 2);
 800186c:	4819      	ldr	r0, [pc, #100]	; (80018d4 <_cbFanImg+0x98>)
 800186e:	2102      	movs	r1, #2
 8001870:	460a      	mov	r2, r1
 8001872:	f00c f88b 	bl	800d98c <GUI_DrawBitmap>
 8001876:	e006      	b.n	8001886 <_cbFanImg+0x4a>
			break;		
		case 3:
			GUI_DrawBitmap(&bmfan_Rot3, 2, 2);
 8001878:	4817      	ldr	r0, [pc, #92]	; (80018d8 <_cbFanImg+0x9c>)
 800187a:	2102      	movs	r1, #2
 800187c:	460a      	mov	r2, r1
 800187e:	f00c f885 	bl	800d98c <GUI_DrawBitmap>
			idx = 0;
			break;		
		default:
			idx = 0;
 8001882:	2300      	movs	r3, #0
 8001884:	6023      	str	r3, [r4, #0]
		}
	}
	switch (g_airCtlVal)
 8001886:	4b15      	ldr	r3, [pc, #84]	; (80018dc <_cbFanImg+0xa0>)
 8001888:	781b      	ldrb	r3, [r3, #0]
 800188a:	2b01      	cmp	r3, #1
 800188c:	d003      	beq.n	8001896 <_cbFanImg+0x5a>
 800188e:	2b02      	cmp	r3, #2
 8001890:	d101      	bne.n	8001896 <_cbFanImg+0x5a>
	{
	case airctl_cooler:
		GUI_SetColor(0x00DFA000);
		break;
	case airctl_heater:
		GUI_SetColor(GUI_LIGHTRED);
 8001892:	4813      	ldr	r0, [pc, #76]	; (80018e0 <_cbFanImg+0xa4>)
 8001894:	e000      	b.n	8001898 <_cbFanImg+0x5c>
		break;
	default:
		GUI_SetColor(0x00DFA000);
 8001896:	4813      	ldr	r0, [pc, #76]	; (80018e4 <_cbFanImg+0xa8>)
 8001898:	f00b fc54 	bl	800d144 <GUI_SetColor>
		break;
	}	
	GUI_DrawRect(0, 0, 62, 62);
 800189c:	2000      	movs	r0, #0
 800189e:	223e      	movs	r2, #62	; 0x3e
 80018a0:	4601      	mov	r1, r0
 80018a2:	4613      	mov	r3, r2
 80018a4:	f00d fab8 	bl	800ee18 <GUI_DrawRect>
	GUI_DrawRect(1, 1, 61, 61);
 80018a8:	2001      	movs	r0, #1
 80018aa:	223d      	movs	r2, #61	; 0x3d
 80018ac:	4601      	mov	r1, r0
 80018ae:	4613      	mov	r3, r2
			_prv_AppDrawFun();
			break;
		default:
			WM_DefaultProc(pMsg);
	}
}
 80018b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	default:
		GUI_SetColor(0x00DFA000);
		break;
	}	
	GUI_DrawRect(0, 0, 62, 62);
	GUI_DrawRect(1, 1, 61, 61);
 80018b4:	f00d bab0 	b.w	800ee18 <GUI_DrawRect>
			_prv_AppDrawFun();
			break;
		default:
			WM_DefaultProc(pMsg);
	}
}
 80018b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	switch (pMsg->MsgId){
		case WM_PAINT:
			_prv_AppDrawFun();
			break;
		default:
			WM_DefaultProc(pMsg);
 80018bc:	f008 b898 	b.w	80099f0 <WM_DefaultProc>
 80018c0:	2000db34 	.word	0x2000db34
 80018c4:	2000d42c 	.word	0x2000d42c
 80018c8:	0801b524 	.word	0x0801b524
 80018cc:	0801b4d4 	.word	0x0801b4d4
 80018d0:	0801b4e8 	.word	0x0801b4e8
 80018d4:	0801b4fc 	.word	0x0801b4fc
 80018d8:	0801b510 	.word	0x0801b510
 80018dc:	2000db5c 	.word	0x2000db5c
 80018e0:	008080ff 	.word	0x008080ff
 80018e4:	00dfa000 	.word	0x00dfa000

080018e8 <UpdateSetToTemperature>:
*/

void UpdateSetToTemperature(){
	char buf[8];
	WM_HWIN h;
	h = WM_GetDialogItem(hWinThermostat, ID_TEXT_1);	
 80018e8:	4b09      	ldr	r3, [pc, #36]	; (8001910 <UpdateSetToTemperature+0x28>)
*       Static code
*
**********************************************************************
*/

void UpdateSetToTemperature(){
 80018ea:	b513      	push	{r0, r1, r4, lr}
	char buf[8];
	WM_HWIN h;
	h = WM_GetDialogItem(hWinThermostat, ID_TEXT_1);	
 80018ec:	6818      	ldr	r0, [r3, #0]
 80018ee:	f640 0109 	movw	r1, #2057	; 0x809
 80018f2:	f006 ff33 	bl	800875c <WM_GetDialogItem>
	sprintf(buf,"%2d",g_manSetTmp);
 80018f6:	4b07      	ldr	r3, [pc, #28]	; (8001914 <UpdateSetToTemperature+0x2c>)
 80018f8:	4907      	ldr	r1, [pc, #28]	; (8001918 <UpdateSetToTemperature+0x30>)
 80018fa:	681a      	ldr	r2, [r3, #0]
*/

void UpdateSetToTemperature(){
	char buf[8];
	WM_HWIN h;
	h = WM_GetDialogItem(hWinThermostat, ID_TEXT_1);	
 80018fc:	4604      	mov	r4, r0
	sprintf(buf,"%2d",g_manSetTmp);
 80018fe:	4668      	mov	r0, sp
 8001900:	f012 f92a 	bl	8013b58 <sprintf>
	TEXT_SetText(h, buf);
 8001904:	4620      	mov	r0, r4
 8001906:	4669      	mov	r1, sp
 8001908:	f003 fe4c 	bl	80055a4 <TEXT_SetText>
}
 800190c:	b002      	add	sp, #8
 800190e:	bd10      	pop	{r4, pc}
 8001910:	2000db58 	.word	0x2000db58
 8001914:	2000db4c 	.word	0x2000db4c
 8001918:	08019630 	.word	0x08019630

0800191c <_cbDialog>:

/*********************************************************************
*
*       _cbDialog
*/
static void _cbDialog(WM_MESSAGE * pMsg){
 800191c:	b538      	push	{r3, r4, r5, lr}
  WM_HWIN hItem;
  int Id, NCode, t1;

  switch (pMsg->MsgId) {
 800191e:	6803      	ldr	r3, [r0, #0]
 8001920:	2b26      	cmp	r3, #38	; 0x26

/*********************************************************************
*
*       _cbDialog
*/
static void _cbDialog(WM_MESSAGE * pMsg){
 8001922:	4604      	mov	r4, r0
  WM_HWIN hItem;
  int Id, NCode, t1;

  switch (pMsg->MsgId) {
 8001924:	f000 812a 	beq.w	8001b7c <_cbDialog+0x260>
 8001928:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 800192c:	f000 8170 	beq.w	8001c10 <_cbDialog+0x2f4>
 8001930:	2b1d      	cmp	r3, #29
 8001932:	f040 8169 	bne.w	8001c08 <_cbDialog+0x2ec>
	  case WM_INIT_DIALOG:
		// Initialization of 'Thermostat'
		hItem = pMsg->hWin;
 8001936:	6845      	ldr	r5, [r0, #4]
		FRAMEWIN_SetFont(hItem, &GUI_Font8x16);
 8001938:	49b6      	ldr	r1, [pc, #728]	; (8001c14 <_cbDialog+0x2f8>)
 800193a:	4628      	mov	r0, r5
 800193c:	f005 f9ae 	bl	8006c9c <FRAMEWIN_SetFont>
		FRAMEWIN_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
 8001940:	4628      	mov	r0, r5
 8001942:	210e      	movs	r1, #14
 8001944:	f005 fc6a 	bl	800721c <FRAMEWIN_SetTextAlign>
		FRAMEWIN_SetTextColor(hItem, 0x00000000);
 8001948:	4628      	mov	r0, r5
 800194a:	2100      	movs	r1, #0
 800194c:	f005 f9d8 	bl	8006d00 <FRAMEWIN_SetTextColor>
		// Initialization of 'txtCurRTC'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_0);
 8001950:	f640 0108 	movw	r1, #2056	; 0x808
 8001954:	6860      	ldr	r0, [r4, #4]
 8001956:	f006 ff01 	bl	800875c <WM_GetDialogItem>
		TEXT_SetText(hItem, "72");
 800195a:	49af      	ldr	r1, [pc, #700]	; (8001c18 <_cbDialog+0x2fc>)
		hItem = pMsg->hWin;
		FRAMEWIN_SetFont(hItem, &GUI_Font8x16);
		FRAMEWIN_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
		FRAMEWIN_SetTextColor(hItem, 0x00000000);
		// Initialization of 'txtCurRTC'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_0);
 800195c:	4605      	mov	r5, r0
		TEXT_SetText(hItem, "72");
 800195e:	f003 fe21 	bl	80055a4 <TEXT_SetText>
		TEXT_SetFont(hItem, GUI_FONT_D64);
 8001962:	4628      	mov	r0, r5
 8001964:	49ad      	ldr	r1, [pc, #692]	; (8001c1c <_cbDialog+0x300>)
 8001966:	f003 fe45 	bl	80055f4 <TEXT_SetFont>
		TEXT_SetTextAlign(hItem, GUI_TA_LEFT | GUI_TA_VCENTER);
 800196a:	4628      	mov	r0, r5
 800196c:	210c      	movs	r1, #12
 800196e:	f003 fe07 	bl	8005580 <TEXT_SetTextAlign>
		TEXT_SetTextColor(hItem, 0x00258D52);
 8001972:	4628      	mov	r0, r5
 8001974:	49aa      	ldr	r1, [pc, #680]	; (8001c20 <_cbDialog+0x304>)
 8001976:	f003 fdf1 	bl	800555c <TEXT_SetTextColor>
		// Initialization of 'SetToTmprt'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_1);
 800197a:	f640 0109 	movw	r1, #2057	; 0x809
 800197e:	6860      	ldr	r0, [r4, #4]
 8001980:	f006 feec 	bl	800875c <WM_GetDialogItem>
		TEXT_SetFont(hItem, GUI_FONT_32B_ASCII);
 8001984:	49a7      	ldr	r1, [pc, #668]	; (8001c24 <_cbDialog+0x308>)
		TEXT_SetText(hItem, "72");
		TEXT_SetFont(hItem, GUI_FONT_D64);
		TEXT_SetTextAlign(hItem, GUI_TA_LEFT | GUI_TA_VCENTER);
		TEXT_SetTextColor(hItem, 0x00258D52);
		// Initialization of 'SetToTmprt'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_1);
 8001986:	4605      	mov	r5, r0
		TEXT_SetFont(hItem, GUI_FONT_32B_ASCII);
 8001988:	f003 fe34 	bl	80055f4 <TEXT_SetFont>
		TEXT_SetText(hItem, "75");
 800198c:	4628      	mov	r0, r5
 800198e:	49a6      	ldr	r1, [pc, #664]	; (8001c28 <_cbDialog+0x30c>)
 8001990:	f003 fe08 	bl	80055a4 <TEXT_SetText>
		TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
 8001994:	4628      	mov	r0, r5
 8001996:	210e      	movs	r1, #14
 8001998:	f003 fdf2 	bl	8005580 <TEXT_SetTextAlign>
		// Initialization of 'txtEffSetToTmprt'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_1B);
 800199c:	f641 0109 	movw	r1, #6153	; 0x1809
 80019a0:	6860      	ldr	r0, [r4, #4]
 80019a2:	f006 fedb 	bl	800875c <WM_GetDialogItem>
		TEXT_SetText(hItem, "81");
 80019a6:	49a1      	ldr	r1, [pc, #644]	; (8001c2c <_cbDialog+0x310>)
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_1);
		TEXT_SetFont(hItem, GUI_FONT_32B_ASCII);
		TEXT_SetText(hItem, "75");
		TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
		// Initialization of 'txtEffSetToTmprt'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_1B);
 80019a8:	4605      	mov	r5, r0
		TEXT_SetText(hItem, "81");
 80019aa:	f003 fdfb 	bl	80055a4 <TEXT_SetText>
		TEXT_SetFont(hItem, GUI_FONT_D48);
 80019ae:	4628      	mov	r0, r5
 80019b0:	499f      	ldr	r1, [pc, #636]	; (8001c30 <_cbDialog+0x314>)
 80019b2:	f003 fe1f 	bl	80055f4 <TEXT_SetFont>
		TEXT_SetTextAlign(hItem, GUI_TA_LEFT | GUI_TA_VCENTER);
 80019b6:	4628      	mov	r0, r5
 80019b8:	210c      	movs	r1, #12
 80019ba:	f003 fde1 	bl	8005580 <TEXT_SetTextAlign>
		TEXT_SetTextColor(hItem, 0x008D2552);
 80019be:	4628      	mov	r0, r5
 80019c0:	499c      	ldr	r1, [pc, #624]	; (8001c34 <_cbDialog+0x318>)
 80019c2:	f003 fdcb 	bl	800555c <TEXT_SetTextColor>
		// Initialization of 'txtFanCtl'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_2);
 80019c6:	f640 010c 	movw	r1, #2060	; 0x80c
 80019ca:	6860      	ldr	r0, [r4, #4]
 80019cc:	f006 fec6 	bl	800875c <WM_GetDialogItem>
		TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_TOP);
 80019d0:	2102      	movs	r1, #2
		TEXT_SetText(hItem, "81");
		TEXT_SetFont(hItem, GUI_FONT_D48);
		TEXT_SetTextAlign(hItem, GUI_TA_LEFT | GUI_TA_VCENTER);
		TEXT_SetTextColor(hItem, 0x008D2552);
		// Initialization of 'txtFanCtl'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_2);
 80019d2:	4605      	mov	r5, r0
		TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_TOP);
 80019d4:	f003 fdd4 	bl	8005580 <TEXT_SetTextAlign>
		TEXT_SetText(hItem, "Fan");
 80019d8:	4628      	mov	r0, r5
 80019da:	4997      	ldr	r1, [pc, #604]	; (8001c38 <_cbDialog+0x31c>)
 80019dc:	f003 fde2 	bl	80055a4 <TEXT_SetText>
		TEXT_SetFont(hItem, GUI_FONT_20B_ASCII);
 80019e0:	4628      	mov	r0, r5
 80019e2:	4996      	ldr	r1, [pc, #600]	; (8001c3c <_cbDialog+0x320>)
 80019e4:	f003 fe06 	bl	80055f4 <TEXT_SetFont>
		// Initialization of 'FanControl'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_RADIO_0);
 80019e8:	f640 010d 	movw	r1, #2061	; 0x80d
 80019ec:	6860      	ldr	r0, [r4, #4]
 80019ee:	f006 feb5 	bl	800875c <WM_GetDialogItem>
		RADIO_SetText(hItem, "Auto", 0);
 80019f2:	4993      	ldr	r1, [pc, #588]	; (8001c40 <_cbDialog+0x324>)
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_2);
		TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_TOP);
		TEXT_SetText(hItem, "Fan");
		TEXT_SetFont(hItem, GUI_FONT_20B_ASCII);
		// Initialization of 'FanControl'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_RADIO_0);
 80019f4:	4605      	mov	r5, r0
		RADIO_SetText(hItem, "Auto", 0);
 80019f6:	2200      	movs	r2, #0
 80019f8:	f004 f889 	bl	8005b0e <RADIO_SetText>
		RADIO_SetText(hItem, "On", 1);
 80019fc:	4628      	mov	r0, r5
 80019fe:	2201      	movs	r2, #1
 8001a00:	4990      	ldr	r1, [pc, #576]	; (8001c44 <_cbDialog+0x328>)
 8001a02:	f004 f884 	bl	8005b0e <RADIO_SetText>
		RADIO_SetFont(hItem, GUI_FONT_16B_ASCII);
 8001a06:	4628      	mov	r0, r5
 8001a08:	498f      	ldr	r1, [pc, #572]	; (8001c48 <_cbDialog+0x32c>)
 8001a0a:	f004 f8a5 	bl	8005b58 <RADIO_SetFont>
		RADIO_SetText(hItem, "Off", 2);
 8001a0e:	4628      	mov	r0, r5
 8001a10:	2202      	movs	r2, #2
 8001a12:	498e      	ldr	r1, [pc, #568]	; (8001c4c <_cbDialog+0x330>)
 8001a14:	f004 f87b 	bl	8005b0e <RADIO_SetText>
		// Initialization of 'rdo_Cndtnr'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_RADIO_1);
 8001a18:	f44f 6101 	mov.w	r1, #2064	; 0x810
 8001a1c:	6860      	ldr	r0, [r4, #4]
 8001a1e:	f006 fe9d 	bl	800875c <WM_GetDialogItem>
		RADIO_SetText(hItem, "Auto", 0);
 8001a22:	4987      	ldr	r1, [pc, #540]	; (8001c40 <_cbDialog+0x324>)
		RADIO_SetText(hItem, "Auto", 0);
		RADIO_SetText(hItem, "On", 1);
		RADIO_SetFont(hItem, GUI_FONT_16B_ASCII);
		RADIO_SetText(hItem, "Off", 2);
		// Initialization of 'rdo_Cndtnr'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_RADIO_1);
 8001a24:	4605      	mov	r5, r0
		RADIO_SetText(hItem, "Auto", 0);
 8001a26:	2200      	movs	r2, #0
 8001a28:	f004 f871 	bl	8005b0e <RADIO_SetText>
		RADIO_SetText(hItem, "Cooler", 1);
 8001a2c:	4628      	mov	r0, r5
 8001a2e:	2201      	movs	r2, #1
 8001a30:	4987      	ldr	r1, [pc, #540]	; (8001c50 <_cbDialog+0x334>)
 8001a32:	f004 f86c 	bl	8005b0e <RADIO_SetText>
		RADIO_SetFont(hItem, GUI_FONT_16B_ASCII);
 8001a36:	4628      	mov	r0, r5
 8001a38:	4983      	ldr	r1, [pc, #524]	; (8001c48 <_cbDialog+0x32c>)
 8001a3a:	f004 f88d 	bl	8005b58 <RADIO_SetFont>
		RADIO_SetText(hItem, "Heater", 2);
 8001a3e:	4628      	mov	r0, r5
 8001a40:	4984      	ldr	r1, [pc, #528]	; (8001c54 <_cbDialog+0x338>)
 8001a42:	2202      	movs	r2, #2
 8001a44:	f004 f863 	bl	8005b0e <RADIO_SetText>
		RADIO_SetText(hItem, "Off", 3);
 8001a48:	2203      	movs	r2, #3
 8001a4a:	4628      	mov	r0, r5
 8001a4c:	497f      	ldr	r1, [pc, #508]	; (8001c4c <_cbDialog+0x330>)
 8001a4e:	f004 f85e 	bl	8005b0e <RADIO_SetText>
		// Initialization of 'txtRTCH'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_4);
 8001a52:	f640 0112 	movw	r1, #2066	; 0x812
 8001a56:	6860      	ldr	r0, [r4, #4]
 8001a58:	f006 fe80 	bl	800875c <WM_GetDialogItem>
		TEXT_SetText(hItem, "12");
 8001a5c:	497e      	ldr	r1, [pc, #504]	; (8001c58 <_cbDialog+0x33c>)
		RADIO_SetText(hItem, "Cooler", 1);
		RADIO_SetFont(hItem, GUI_FONT_16B_ASCII);
		RADIO_SetText(hItem, "Heater", 2);
		RADIO_SetText(hItem, "Off", 3);
		// Initialization of 'txtRTCH'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_4);
 8001a5e:	4605      	mov	r5, r0
		TEXT_SetText(hItem, "12");
 8001a60:	f003 fda0 	bl	80055a4 <TEXT_SetText>
		TEXT_SetFont(hItem, GUI_FONT_D24X32);
 8001a64:	4628      	mov	r0, r5
 8001a66:	497d      	ldr	r1, [pc, #500]	; (8001c5c <_cbDialog+0x340>)
 8001a68:	f003 fdc4 	bl	80055f4 <TEXT_SetFont>
		// Initialization of 'txtRTCMH'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_4MH);
 8001a6c:	f44f 612a 	mov.w	r1, #2720	; 0xaa0
 8001a70:	6860      	ldr	r0, [r4, #4]
 8001a72:	f006 fe73 	bl	800875c <WM_GetDialogItem>
		TEXT_SetText(hItem, ":");
 8001a76:	497a      	ldr	r1, [pc, #488]	; (8001c60 <_cbDialog+0x344>)
		// Initialization of 'txtRTCH'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_4);
		TEXT_SetText(hItem, "12");
		TEXT_SetFont(hItem, GUI_FONT_D24X32);
		// Initialization of 'txtRTCMH'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_4MH);
 8001a78:	4605      	mov	r5, r0
		TEXT_SetText(hItem, ":");
 8001a7a:	f003 fd93 	bl	80055a4 <TEXT_SetText>
		TEXT_SetFont(hItem, GUI_FONT_D24X32);
 8001a7e:	4628      	mov	r0, r5
 8001a80:	4976      	ldr	r1, [pc, #472]	; (8001c5c <_cbDialog+0x340>)
 8001a82:	f003 fdb7 	bl	80055f4 <TEXT_SetFont>
		// Initialization of 'txtRTCM'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_4M);
 8001a86:	f640 21a1 	movw	r1, #2721	; 0xaa1
 8001a8a:	6860      	ldr	r0, [r4, #4]
 8001a8c:	f006 fe66 	bl	800875c <WM_GetDialogItem>
		TEXT_SetText(hItem, "00");
 8001a90:	4974      	ldr	r1, [pc, #464]	; (8001c64 <_cbDialog+0x348>)
		// Initialization of 'txtRTCMH'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_4MH);
		TEXT_SetText(hItem, ":");
		TEXT_SetFont(hItem, GUI_FONT_D24X32);
		// Initialization of 'txtRTCM'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_4M);
 8001a92:	4605      	mov	r5, r0
		TEXT_SetText(hItem, "00");
 8001a94:	f003 fd86 	bl	80055a4 <TEXT_SetText>
		TEXT_SetFont(hItem, GUI_FONT_D24X32);
 8001a98:	4628      	mov	r0, r5
 8001a9a:	4970      	ldr	r1, [pc, #448]	; (8001c5c <_cbDialog+0x340>)
 8001a9c:	f003 fdaa 	bl	80055f4 <TEXT_SetFont>
		// Initialization of 'btnSetup'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_9);
 8001aa0:	f640 011f 	movw	r1, #2079	; 0x81f
 8001aa4:	6860      	ldr	r0, [r4, #4]
 8001aa6:	f006 fe59 	bl	800875c <WM_GetDialogItem>
		BUTTON_SetText(hItem, "Setup");
 8001aaa:	496f      	ldr	r1, [pc, #444]	; (8001c68 <_cbDialog+0x34c>)
		// Initialization of 'txtRTCM'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_4M);
		TEXT_SetText(hItem, "00");
		TEXT_SetFont(hItem, GUI_FONT_D24X32);
		// Initialization of 'btnSetup'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_9);
 8001aac:	4605      	mov	r5, r0
		BUTTON_SetText(hItem, "Setup");
 8001aae:	f006 f9ab 	bl	8007e08 <BUTTON_SetText>
		BUTTON_SetFont(hItem, GUI_FONT_16B_ASCII);
 8001ab2:	4628      	mov	r0, r5
 8001ab4:	4964      	ldr	r1, [pc, #400]	; (8001c48 <_cbDialog+0x32c>)
 8001ab6:	f006 f9cf 	bl	8007e58 <BUTTON_SetFont>
		// Initialization of 'txtPM'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_5);
 8001aba:	f44f 6102 	mov.w	r1, #2080	; 0x820
 8001abe:	6860      	ldr	r0, [r4, #4]
 8001ac0:	f006 fe4c 	bl	800875c <WM_GetDialogItem>
		TEXT_SetText(hItem, "PM");
 8001ac4:	4969      	ldr	r1, [pc, #420]	; (8001c6c <_cbDialog+0x350>)
		// Initialization of 'btnSetup'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_9);
		BUTTON_SetText(hItem, "Setup");
		BUTTON_SetFont(hItem, GUI_FONT_16B_ASCII);
		// Initialization of 'txtPM'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_5);
 8001ac6:	4605      	mov	r5, r0
		TEXT_SetText(hItem, "PM");
 8001ac8:	f003 fd6c 	bl	80055a4 <TEXT_SetText>
		TEXT_SetFont(hItem, GUI_FONT_24B_ASCII);
 8001acc:	4628      	mov	r0, r5
 8001ace:	4968      	ldr	r1, [pc, #416]	; (8001c70 <_cbDialog+0x354>)
 8001ad0:	f003 fd90 	bl	80055f4 <TEXT_SetFont>
		// Initialization of 'chkManual'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_CHECKBOX_0);
 8001ad4:	f640 0121 	movw	r1, #2081	; 0x821
 8001ad8:	6860      	ldr	r0, [r4, #4]
 8001ada:	f006 fe3f 	bl	800875c <WM_GetDialogItem>
		CHECKBOX_SetText(hItem, "Manual control");
 8001ade:	4965      	ldr	r1, [pc, #404]	; (8001c74 <_cbDialog+0x358>)
		// Initialization of 'txtPM'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_5);
		TEXT_SetText(hItem, "PM");
		TEXT_SetFont(hItem, GUI_FONT_24B_ASCII);
		// Initialization of 'chkManual'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_CHECKBOX_0);
 8001ae0:	4605      	mov	r5, r0
		CHECKBOX_SetText(hItem, "Manual control");
 8001ae2:	f005 fd44 	bl	800756e <CHECKBOX_SetText>
		CHECKBOX_SetFont(hItem, GUI_FONT_16B_ASCII);
 8001ae6:	4628      	mov	r0, r5
 8001ae8:	4957      	ldr	r1, [pc, #348]	; (8001c48 <_cbDialog+0x32c>)
 8001aea:	f005 fd7f 	bl	80075ec <CHECKBOX_SetFont>
		CHECKBOX_SetState(hItem, 1);
 8001aee:	4628      	mov	r0, r5
 8001af0:	2101      	movs	r1, #1
 8001af2:	f005 fd5e 	bl	80075b2 <CHECKBOX_SetState>
		g_manCtl.isEn = true;
 8001af6:	4b60      	ldr	r3, [pc, #384]	; (8001c78 <_cbDialog+0x35c>)
		// Initialization of 'txtWeekday'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_6);
 8001af8:	6860      	ldr	r0, [r4, #4]
		// Initialization of 'chkManual'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_CHECKBOX_0);
		CHECKBOX_SetText(hItem, "Manual control");
		CHECKBOX_SetFont(hItem, GUI_FONT_16B_ASCII);
		CHECKBOX_SetState(hItem, 1);
		g_manCtl.isEn = true;
 8001afa:	2201      	movs	r2, #1
		// Initialization of 'txtWeekday'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_6);
 8001afc:	f640 0124 	movw	r1, #2084	; 0x824
		// Initialization of 'chkManual'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_CHECKBOX_0);
		CHECKBOX_SetText(hItem, "Manual control");
		CHECKBOX_SetFont(hItem, GUI_FONT_16B_ASCII);
		CHECKBOX_SetState(hItem, 1);
		g_manCtl.isEn = true;
 8001b00:	701a      	strb	r2, [r3, #0]
		// Initialization of 'txtWeekday'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_6);
 8001b02:	f006 fe2b 	bl	800875c <WM_GetDialogItem>
		TEXT_SetFont(hItem, GUI_FONT_24B_ASCII);
 8001b06:	495a      	ldr	r1, [pc, #360]	; (8001c70 <_cbDialog+0x354>)
		CHECKBOX_SetText(hItem, "Manual control");
		CHECKBOX_SetFont(hItem, GUI_FONT_16B_ASCII);
		CHECKBOX_SetState(hItem, 1);
		g_manCtl.isEn = true;
		// Initialization of 'txtWeekday'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_6);
 8001b08:	4605      	mov	r5, r0
		TEXT_SetFont(hItem, GUI_FONT_24B_ASCII);
 8001b0a:	f003 fd73 	bl	80055f4 <TEXT_SetFont>
		TEXT_SetText(hItem, "Wed");
 8001b0e:	4628      	mov	r0, r5
 8001b10:	495a      	ldr	r1, [pc, #360]	; (8001c7c <_cbDialog+0x360>)
 8001b12:	f003 fd47 	bl	80055a4 <TEXT_SetText>
		// Initialization of 'Text'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_7);
 8001b16:	f640 0126 	movw	r1, #2086	; 0x826
 8001b1a:	6860      	ldr	r0, [r4, #4]
 8001b1c:	f006 fe1e 	bl	800875c <WM_GetDialogItem>
		TEXT_SetText(hItem, "Adjust");
 8001b20:	4957      	ldr	r1, [pc, #348]	; (8001c80 <_cbDialog+0x364>)
		// Initialization of 'txtWeekday'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_6);
		TEXT_SetFont(hItem, GUI_FONT_24B_ASCII);
		TEXT_SetText(hItem, "Wed");
		// Initialization of 'Text'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_7);
 8001b22:	4605      	mov	r5, r0
		TEXT_SetText(hItem, "Adjust");
 8001b24:	f003 fd3e 	bl	80055a4 <TEXT_SetText>
		TEXT_SetFont(hItem, GUI_FONT_20B_ASCII);
 8001b28:	4628      	mov	r0, r5
 8001b2a:	4944      	ldr	r1, [pc, #272]	; (8001c3c <_cbDialog+0x320>)
 8001b2c:	f003 fd62 	bl	80055f4 <TEXT_SetFont>
		// Initialization of 'txtAM'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_8);
 8001b30:	f640 0128 	movw	r1, #2088	; 0x828
 8001b34:	6860      	ldr	r0, [r4, #4]
 8001b36:	f006 fe11 	bl	800875c <WM_GetDialogItem>
		TEXT_SetText(hItem, "AM");
 8001b3a:	4952      	ldr	r1, [pc, #328]	; (8001c84 <_cbDialog+0x368>)
		// Initialization of 'Text'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_7);
		TEXT_SetText(hItem, "Adjust");
		TEXT_SetFont(hItem, GUI_FONT_20B_ASCII);
		// Initialization of 'txtAM'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_8);
 8001b3c:	4605      	mov	r5, r0
		TEXT_SetText(hItem, "AM");
 8001b3e:	f003 fd31 	bl	80055a4 <TEXT_SetText>
		TEXT_SetFont(hItem, GUI_FONT_24B_ASCII);
 8001b42:	4628      	mov	r0, r5
 8001b44:	494a      	ldr	r1, [pc, #296]	; (8001c70 <_cbDialog+0x354>)
 8001b46:	f003 fd55 	bl	80055f4 <TEXT_SetFont>
		// Slider Init
		hItem = WM_GetDialogItem(pMsg->hWin, ID_SLIDER_0);
 8001b4a:	f640 010e 	movw	r1, #2062	; 0x80e
 8001b4e:	6860      	ldr	r0, [r4, #4]
 8001b50:	f006 fe04 	bl	800875c <WM_GetDialogItem>
		SLIDER_SetRange(hItem, 0, TEMP_MAX - TEMP_MIN);
 8001b54:	221e      	movs	r2, #30
 8001b56:	2100      	movs	r1, #0
		// Initialization of 'txtAM'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_8);
		TEXT_SetText(hItem, "AM");
		TEXT_SetFont(hItem, GUI_FONT_24B_ASCII);
		// Slider Init
		hItem = WM_GetDialogItem(pMsg->hWin, ID_SLIDER_0);
 8001b58:	4605      	mov	r5, r0
		SLIDER_SetRange(hItem, 0, TEMP_MAX - TEMP_MIN);
 8001b5a:	f003 ffad 	bl	8005ab8 <SLIDER_SetRange>
		SLIDER_SetValue(hItem, TEMP_MAX - g_manSetTmp);
 8001b5e:	4b4a      	ldr	r3, [pc, #296]	; (8001c88 <_cbDialog+0x36c>)
 8001b60:	6819      	ldr	r1, [r3, #0]
 8001b62:	4628      	mov	r0, r5
 8001b64:	f1c1 015f 	rsb	r1, r1, #95	; 0x5f
 8001b68:	f003 fed0 	bl	800590c <SLIDER_SetValue>
		
		s_hCurTemp = WM_GetDialogItem(pMsg->hWin, ID_TEXT_0);
 8001b6c:	6860      	ldr	r0, [r4, #4]
 8001b6e:	f640 0108 	movw	r1, #2056	; 0x808
 8001b72:	f006 fdf3 	bl	800875c <WM_GetDialogItem>
 8001b76:	4b45      	ldr	r3, [pc, #276]	; (8001c8c <_cbDialog+0x370>)
 8001b78:	6018      	str	r0, [r3, #0]
 8001b7a:	e02d      	b.n	8001bd8 <_cbDialog+0x2bc>
	  
	  case WM_TOUCH:
		break;
		
	  case WM_NOTIFY_PARENT:
		Id    = WM_GetId(pMsg->hWinSrc);
 8001b7c:	6880      	ldr	r0, [r0, #8]
 8001b7e:	f006 fdac 	bl	80086da <WM_GetId>
		NCode = pMsg->Data.v;
		switch(Id) {
 8001b82:	f640 020e 	movw	r2, #2062	; 0x80e
 8001b86:	4290      	cmp	r0, r2
	  
	  case WM_TOUCH:
		break;
		
	  case WM_NOTIFY_PARENT:
		Id    = WM_GetId(pMsg->hWinSrc);
 8001b88:	4601      	mov	r1, r0
		NCode = pMsg->Data.v;
 8001b8a:	68e3      	ldr	r3, [r4, #12]
		switch(Id) {
 8001b8c:	d017      	beq.n	8001bbe <_cbDialog+0x2a2>
 8001b8e:	dc04      	bgt.n	8001b9a <_cbDialog+0x27e>
 8001b90:	f640 020d 	movw	r2, #2061	; 0x80d
 8001b94:	4290      	cmp	r0, r2
 8001b96:	d008      	beq.n	8001baa <_cbDialog+0x28e>
 8001b98:	bd38      	pop	{r3, r4, r5, pc}
 8001b9a:	f5b0 6f01 	cmp.w	r0, #2064	; 0x810
 8001b9e:	d01f      	beq.n	8001be0 <_cbDialog+0x2c4>
 8001ba0:	f640 021f 	movw	r2, #2079	; 0x81f
 8001ba4:	4290      	cmp	r0, r2
 8001ba6:	d025      	beq.n	8001bf4 <_cbDialog+0x2d8>
 8001ba8:	bd38      	pop	{r3, r4, r5, pc}
			case ID_RADIO_0: // Notifications sent by 'FanControl'
			  switch(NCode) {
 8001baa:	2b05      	cmp	r3, #5
 8001bac:	d130      	bne.n	8001c10 <_cbDialog+0x2f4>
				  case WM_NOTIFICATION_CLICKED:
					break;
				  case WM_NOTIFICATION_RELEASED:
					break;
				  case WM_NOTIFICATION_VALUE_CHANGED:
					hItem = WM_GetDialogItem(pMsg->hWin, ID_RADIO_0);
 8001bae:	6860      	ldr	r0, [r4, #4]
 8001bb0:	f006 fdd4 	bl	800875c <WM_GetDialogItem>
					t1 = RADIO_GetValue(hItem);
 8001bb4:	f004 f993 	bl	8005ede <RADIO_GetValue>
					g_manCtl.fanCtl = (enm_FanCtl) t1;        
 8001bb8:	4b2f      	ldr	r3, [pc, #188]	; (8001c78 <_cbDialog+0x35c>)
 8001bba:	7098      	strb	r0, [r3, #2]
					break;
 8001bbc:	bd38      	pop	{r3, r4, r5, pc}
				  }
			break;
			case ID_SLIDER_0: // Notifications sent by 'SetToSlider'
			  switch(NCode) {
 8001bbe:	2b05      	cmp	r3, #5
 8001bc0:	d126      	bne.n	8001c10 <_cbDialog+0x2f4>
				  case WM_NOTIFICATION_CLICKED:
					break;
				  case WM_NOTIFICATION_RELEASED:
					break;
				  case WM_NOTIFICATION_VALUE_CHANGED:
					hItem = WM_GetDialogItem(pMsg->hWin, ID_SLIDER_0);
 8001bc2:	6860      	ldr	r0, [r4, #4]
 8001bc4:	f006 fdca 	bl	800875c <WM_GetDialogItem>
					g_manSetTmp = TEMP_MAX - SLIDER_GetValue(hItem);
 8001bc8:	f003 ff93 	bl	8005af2 <SLIDER_GetValue>
 8001bcc:	4b2e      	ldr	r3, [pc, #184]	; (8001c88 <_cbDialog+0x36c>)
 8001bce:	f1c0 005f 	rsb	r0, r0, #95	; 0x5f
 8001bd2:	6018      	str	r0, [r3, #0]
					g_manCtl.cx16setTmp = g_manSetTmp;
 8001bd4:	4b28      	ldr	r3, [pc, #160]	; (8001c78 <_cbDialog+0x35c>)
 8001bd6:	6058      	str	r0, [r3, #4]
	  break;
	  default:
		WM_DefaultProc(pMsg);
		break;
	}
}
 8001bd8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
					break;
				  case WM_NOTIFICATION_VALUE_CHANGED:
					hItem = WM_GetDialogItem(pMsg->hWin, ID_SLIDER_0);
					g_manSetTmp = TEMP_MAX - SLIDER_GetValue(hItem);
					g_manCtl.cx16setTmp = g_manSetTmp;
					UpdateSetToTemperature();
 8001bdc:	f7ff be84 	b.w	80018e8 <UpdateSetToTemperature>
					break;
			  }
			break;
			case ID_RADIO_1: // Notifications sent by 'rdo_Cndtnr'
			  switch(NCode) {
 8001be0:	2b05      	cmp	r3, #5
 8001be2:	d115      	bne.n	8001c10 <_cbDialog+0x2f4>
				  case WM_NOTIFICATION_CLICKED:
					break;
				  case WM_NOTIFICATION_RELEASED:
					break;
				  case WM_NOTIFICATION_VALUE_CHANGED:
					hItem = WM_GetDialogItem(pMsg->hWin, ID_RADIO_1);
 8001be4:	6860      	ldr	r0, [r4, #4]
 8001be6:	f006 fdb9 	bl	800875c <WM_GetDialogItem>
					t1 = RADIO_GetValue(hItem);
 8001bea:	f004 f978 	bl	8005ede <RADIO_GetValue>
					g_manCtl.airCtl = (enm_AirCtl) t1;
 8001bee:	4b22      	ldr	r3, [pc, #136]	; (8001c78 <_cbDialog+0x35c>)
 8001bf0:	7058      	strb	r0, [r3, #1]
					break;
 8001bf2:	bd38      	pop	{r3, r4, r5, pc}
			  }
			break;
			case ID_BUTTON_9: // Notifications sent by 'btnSetup'
			  switch(NCode) {
 8001bf4:	2b02      	cmp	r3, #2
 8001bf6:	d10b      	bne.n	8001c10 <_cbDialog+0x2f4>
				  case WM_NOTIFICATION_CLICKED:
					break;
				  case WM_NOTIFICATION_RELEASED:
					ShowWindow(_hWindow4);
 8001bf8:	4b25      	ldr	r3, [pc, #148]	; (8001c90 <_cbDialog+0x374>)
 8001bfa:	6818      	ldr	r0, [r3, #0]
 8001bfc:	f000 f89c 	bl	8001d38 <ShowWindow>
					Touch_thermo = true;
 8001c00:	4b24      	ldr	r3, [pc, #144]	; (8001c94 <_cbDialog+0x378>)
 8001c02:	2201      	movs	r2, #1
 8001c04:	701a      	strb	r2, [r3, #0]
					break;
 8001c06:	bd38      	pop	{r3, r4, r5, pc}
	  break;
	  default:
		WM_DefaultProc(pMsg);
		break;
	}
}
 8001c08:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
			  }
			break;*/
		}
	  break;
	  default:
		WM_DefaultProc(pMsg);
 8001c0c:	f007 bef0 	b.w	80099f0 <WM_DefaultProc>
 8001c10:	bd38      	pop	{r3, r4, r5, pc}
 8001c12:	bf00      	nop
 8001c14:	08025920 	.word	0x08025920
 8001c18:	08019634 	.word	0x08019634
 8001c1c:	08023944 	.word	0x08023944
 8001c20:	00258d52 	.word	0x00258d52
 8001c24:	080279fc 	.word	0x080279fc
 8001c28:	08019637 	.word	0x08019637
 8001c2c:	0801963a 	.word	0x0801963a
 8001c30:	08024700 	.word	0x08024700
 8001c34:	008d2552 	.word	0x008d2552
 8001c38:	0801963d 	.word	0x0801963d
 8001c3c:	0802aa58 	.word	0x0802aa58
 8001c40:	08019641 	.word	0x08019641
 8001c44:	08019646 	.word	0x08019646
 8001c48:	0802b780 	.word	0x0802b780
 8001c4c:	08019649 	.word	0x08019649
 8001c50:	0801964d 	.word	0x0801964d
 8001c54:	08019654 	.word	0x08019654
 8001c58:	0801965b 	.word	0x0801965b
 8001c5c:	08024ecc 	.word	0x08024ecc
 8001c60:	0801965e 	.word	0x0801965e
 8001c64:	08019660 	.word	0x08019660
 8001c68:	08019711 	.word	0x08019711
 8001c6c:	0801973f 	.word	0x0801973f
 8001c70:	08029b18 	.word	0x08029b18
 8001c74:	08019663 	.word	0x08019663
 8001c78:	2000db38 	.word	0x2000db38
 8001c7c:	08019672 	.word	0x08019672
 8001c80:	08019676 	.word	0x08019676
 8001c84:	08019739 	.word	0x08019739
 8001c88:	2000db4c 	.word	0x2000db4c
 8001c8c:	2000d430 	.word	0x2000d430
 8001c90:	2000db78 	.word	0x2000db78
 8001c94:	2000d434 	.word	0x2000d434

08001c98 <CreateThermostat>:
*
*       CreateThermostat
**********************************************************************
*/

WM_HWIN CreateThermostat(void) {
 8001c98:	b530      	push	{r4, r5, lr}
  WM_HWIN hWin;
  
  FRAMEWIN_SetDefaultSkin(FRAMEWIN_SKIN_FLEX);
 8001c9a:	4813      	ldr	r0, [pc, #76]	; (8001ce8 <CreateThermostat+0x50>)
*
*       CreateThermostat
**********************************************************************
*/

WM_HWIN CreateThermostat(void) {
 8001c9c:	b085      	sub	sp, #20
  WM_HWIN hWin;
  
  FRAMEWIN_SetDefaultSkin(FRAMEWIN_SKIN_FLEX);
 8001c9e:	f004 ffe7 	bl	8006c70 <FRAMEWIN_SetDefaultSkin>
  BUTTON_SetDefaultSkin(BUTTON_SKIN_FLEX);
 8001ca2:	4812      	ldr	r0, [pc, #72]	; (8001cec <CreateThermostat+0x54>)
 8001ca4:	f005 ff68 	bl	8007b78 <BUTTON_SetDefaultSkin>

  hWin = GUI_CreateDialogBox(_aDialogCreate, GUI_COUNTOF(_aDialogCreate), &_cbDialog, WM_HBKWIN, 0, 0);
 8001ca8:	f006 fd5c 	bl	8008764 <WM_GetDesktopWindow>
 8001cac:	2500      	movs	r5, #0
 8001cae:	4603      	mov	r3, r0
 8001cb0:	9500      	str	r5, [sp, #0]
 8001cb2:	9501      	str	r5, [sp, #4]
 8001cb4:	2111      	movs	r1, #17
 8001cb6:	4a0e      	ldr	r2, [pc, #56]	; (8001cf0 <CreateThermostat+0x58>)
 8001cb8:	480e      	ldr	r0, [pc, #56]	; (8001cf4 <CreateThermostat+0x5c>)
 8001cba:	f005 fc09 	bl	80074d0 <GUI_CreateDialogBox>
  #ifdef SHOW_FAN
	hWinFanImg = WM_CreateWindowAsChild(114, 104, 63, 63, 
 8001cbe:	2306      	movs	r3, #6
 8001cc0:	223f      	movs	r2, #63	; 0x3f
 8001cc2:	9301      	str	r3, [sp, #4]
 8001cc4:	4b0c      	ldr	r3, [pc, #48]	; (8001cf8 <CreateThermostat+0x60>)
 8001cc6:	9000      	str	r0, [sp, #0]
  WM_HWIN hWin;
  
  FRAMEWIN_SetDefaultSkin(FRAMEWIN_SKIN_FLEX);
  BUTTON_SetDefaultSkin(BUTTON_SKIN_FLEX);

  hWin = GUI_CreateDialogBox(_aDialogCreate, GUI_COUNTOF(_aDialogCreate), &_cbDialog, WM_HBKWIN, 0, 0);
 8001cc8:	4604      	mov	r4, r0
  #ifdef SHOW_FAN
	hWinFanImg = WM_CreateWindowAsChild(114, 104, 63, 63, 
 8001cca:	9302      	str	r3, [sp, #8]
 8001ccc:	2168      	movs	r1, #104	; 0x68
 8001cce:	4613      	mov	r3, r2
 8001cd0:	9503      	str	r5, [sp, #12]
 8001cd2:	2072      	movs	r0, #114	; 0x72
 8001cd4:	f007 fb1e 	bl	8009314 <WM_CreateWindowAsChild>
 8001cd8:	4b08      	ldr	r3, [pc, #32]	; (8001cfc <CreateThermostat+0x64>)
 8001cda:	6018      	str	r0, [r3, #0]
		hWin,
		WM_CF_FGND | WM_CF_MEMDEV | WM_CF_SHOW,
		_cbFanImg, 0
	);
  #endif
  WM_HideWindow(hWin);
 8001cdc:	4620      	mov	r0, r4
 8001cde:	f006 fc7a 	bl	80085d6 <WM_HideWindow>
  
  return hWin;
}
 8001ce2:	4620      	mov	r0, r4
 8001ce4:	b005      	add	sp, #20
 8001ce6:	bd30      	pop	{r4, r5, pc}
 8001ce8:	080067a1 	.word	0x080067a1
 8001cec:	08007859 	.word	0x08007859
 8001cf0:	0800191d 	.word	0x0800191d
 8001cf4:	08019744 	.word	0x08019744
 8001cf8:	0800183d 	.word	0x0800183d
 8001cfc:	2000db44 	.word	0x2000db44

08001d00 <_cbButton>:
				if(UnPressed_Flag == true){
				}
			}
			break;*/		
		default:
			BUTTON_Callback(pMsg);
 8001d00:	f005 bfce 	b.w	8007ca0 <BUTTON_Callback>

08001d04 <_cbBkWindow>:
/*********************************************************************
*	_cbBkWindow
*		:CallBack for BkWindow
**********************************************************************
*/
static void _cbBkWindow(WM_MESSAGE *pMsg){
 8001d04:	b508      	push	{r3, lr}
	switch(pMsg->MsgId){
 8001d06:	6803      	ldr	r3, [r0, #0]
 8001d08:	2b0f      	cmp	r3, #15
 8001d0a:	d10d      	bne.n	8001d28 <_cbBkWindow+0x24>
	case WM_PAINT:
		GUI_SetColor(GUI_WHITE);
 8001d0c:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8001d10:	f00b fa18 	bl	800d144 <GUI_SetColor>
		GUI_SetFont(&GUI_Font24_ASCII);
 8001d14:	4806      	ldr	r0, [pc, #24]	; (8001d30 <_cbBkWindow+0x2c>)
 8001d16:	f00b f9e7 	bl	800d0e8 <GUI_SetFont>
		GUI_DispStringAt(_acInfoText, 5, 40);
 8001d1a:	4806      	ldr	r0, [pc, #24]	; (8001d34 <_cbBkWindow+0x30>)
 8001d1c:	2105      	movs	r1, #5
 8001d1e:	2228      	movs	r2, #40	; 0x28
		break;
	default:
		WM_DefaultProc(pMsg);
		break;
	}
}
 8001d20:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
static void _cbBkWindow(WM_MESSAGE *pMsg){
	switch(pMsg->MsgId){
	case WM_PAINT:
		GUI_SetColor(GUI_WHITE);
		GUI_SetFont(&GUI_Font24_ASCII);
		GUI_DispStringAt(_acInfoText, 5, 40);
 8001d24:	f00b bff2 	b.w	800dd0c <GUI_DispStringAt>
		break;
	default:
		WM_DefaultProc(pMsg);
		break;
	}
}
 8001d28:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
		GUI_SetColor(GUI_WHITE);
		GUI_SetFont(&GUI_Font24_ASCII);
		GUI_DispStringAt(_acInfoText, 5, 40);
		break;
	default:
		WM_DefaultProc(pMsg);
 8001d2c:	f007 be60 	b.w	80099f0 <WM_DefaultProc>
 8001d30:	080289bc 	.word	0x080289bc
 8001d34:	2000d440 	.word	0x2000d440

08001d38 <ShowWindow>:
*		:Hide all windows and then show 'Window'
**********************************************************************
*/
void ShowWindow(WM_HWIN window)
{
	WM_HideWindow(hWinThermostat);
 8001d38:	4b0c      	ldr	r3, [pc, #48]	; (8001d6c <ShowWindow+0x34>)
*	ShowWindow
*		:Hide all windows and then show 'Window'
**********************************************************************
*/
void ShowWindow(WM_HWIN window)
{
 8001d3a:	b510      	push	{r4, lr}
 8001d3c:	4604      	mov	r4, r0
	WM_HideWindow(hWinThermostat);
 8001d3e:	6818      	ldr	r0, [r3, #0]
 8001d40:	f006 fc49 	bl	80085d6 <WM_HideWindow>
	WM_HideWindow(_hWindow4);
 8001d44:	4b0a      	ldr	r3, [pc, #40]	; (8001d70 <ShowWindow+0x38>)
 8001d46:	6818      	ldr	r0, [r3, #0]
 8001d48:	f006 fc45 	bl	80085d6 <WM_HideWindow>
	WM_HideWindow(_hWindow5);
 8001d4c:	4b09      	ldr	r3, [pc, #36]	; (8001d74 <ShowWindow+0x3c>)
 8001d4e:	6818      	ldr	r0, [r3, #0]
 8001d50:	f006 fc41 	bl	80085d6 <WM_HideWindow>
	WM_HideWindow(_hWindow6);
 8001d54:	4b08      	ldr	r3, [pc, #32]	; (8001d78 <ShowWindow+0x40>)
 8001d56:	6818      	ldr	r0, [r3, #0]
 8001d58:	f006 fc3d 	bl	80085d6 <WM_HideWindow>
	//WM_HideWindow(hWinProgramTime);
	WM_ShowWindow(window);
 8001d5c:	4620      	mov	r0, r4
 8001d5e:	f006 f904 	bl	8007f6a <WM_ShowWindow>
	GUI_Exec();
}
 8001d62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	WM_HideWindow(_hWindow4);
	WM_HideWindow(_hWindow5);
	WM_HideWindow(_hWindow6);
	//WM_HideWindow(hWinProgramTime);
	WM_ShowWindow(window);
	GUI_Exec();
 8001d66:	f00b bbeb 	b.w	800d540 <GUI_Exec>
 8001d6a:	bf00      	nop
 8001d6c:	2000db58 	.word	0x2000db58
 8001d70:	2000db78 	.word	0x2000db78
 8001d74:	2000db64 	.word	0x2000db64
 8001d78:	2000db74 	.word	0x2000db74

08001d7c <_cbWindow2>:
**********************************************************************
*/
static void _cbWindow2(WM_MESSAGE *pMsg){
	GUI_COLOR Color;
	int Id, NCode;
	switch(pMsg->MsgId){
 8001d7c:	6803      	ldr	r3, [r0, #0]
 8001d7e:	2b0f      	cmp	r3, #15
/*********************************************************************
*	_cbWindow2
*		:CallBack for BkWindow
**********************************************************************
*/
static void _cbWindow2(WM_MESSAGE *pMsg){
 8001d80:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001d82:	4604      	mov	r4, r0
	GUI_COLOR Color;
	int Id, NCode;
	switch(pMsg->MsgId){
 8001d84:	d02a      	beq.n	8001ddc <_cbWindow2+0x60>
 8001d86:	2b26      	cmp	r3, #38	; 0x26
 8001d88:	d133      	bne.n	8001df2 <_cbWindow2+0x76>
		case WM_NOTIFY_PARENT:
			Id    = WM_GetId(pMsg->hWinSrc);
 8001d8a:	6880      	ldr	r0, [r0, #8]
 8001d8c:	f006 fca5 	bl	80086da <WM_GetId>
			NCode = pMsg->Data.v;
			switch(Id) {
 8001d90:	f640 0211 	movw	r2, #2065	; 0x811
 8001d94:	4290      	cmp	r0, r2
	GUI_COLOR Color;
	int Id, NCode;
	switch(pMsg->MsgId){
		case WM_NOTIFY_PARENT:
			Id    = WM_GetId(pMsg->hWinSrc);
			NCode = pMsg->Data.v;
 8001d96:	68e3      	ldr	r3, [r4, #12]
			switch(Id) {
 8001d98:	d004      	beq.n	8001da4 <_cbWindow2+0x28>
 8001d9a:	f640 0212 	movw	r2, #2066	; 0x812
 8001d9e:	4290      	cmp	r0, r2
 8001da0:	d00c      	beq.n	8001dbc <_cbWindow2+0x40>
 8001da2:	e028      	b.n	8001df6 <_cbWindow2+0x7a>
				case ID_BUTTON_6: // Notifications sent by 'btnSetup'
					switch(NCode) {
 8001da4:	2b02      	cmp	r3, #2
 8001da6:	d126      	bne.n	8001df6 <_cbWindow2+0x7a>
					  case WM_NOTIFICATION_CLICKED:
						break;
					  case WM_NOTIFICATION_RELEASED:
						ShowWindow(_hWindow4);
 8001da8:	4b14      	ldr	r3, [pc, #80]	; (8001dfc <_cbWindow2+0x80>)
 8001daa:	6818      	ldr	r0, [r3, #0]
 8001dac:	f7ff ffc4 	bl	8001d38 <ShowWindow>
						PROGBAR_SetValue(_hProgBar_1, 0);
 8001db0:	4b13      	ldr	r3, [pc, #76]	; (8001e00 <_cbWindow2+0x84>)
 8001db2:	2100      	movs	r1, #0
 8001db4:	6818      	ldr	r0, [r3, #0]
 8001db6:	f004 fb43 	bl	8006440 <PROGBAR_SetValue>
 8001dba:	e00b      	b.n	8001dd4 <_cbWindow2+0x58>
						Touch_thermo = true;
						break;
					}
				break;
				case ID_BUTTON_7: // Notifications sent by 'btnSetup'
					switch(NCode) {
 8001dbc:	2b02      	cmp	r3, #2
 8001dbe:	d11a      	bne.n	8001df6 <_cbWindow2+0x7a>
					  case WM_NOTIFICATION_CLICKED:
						break;
					  case WM_NOTIFICATION_RELEASED:
						_ProgBarStat(_hProgBar_1);
 8001dc0:	4b0f      	ldr	r3, [pc, #60]	; (8001e00 <_cbWindow2+0x84>)
 8001dc2:	681d      	ldr	r5, [r3, #0]
*/
static void _ProgBarStat(PROGBAR_Handle _hProgBar){
	int n;
	
	//PROGBAR_SetValue(_hProgBar, -16383);
	for(n=0; n <= 100; n++){
 8001dc4:	2400      	movs	r4, #0
		PROGBAR_SetValue(_hProgBar, n);
 8001dc6:	4621      	mov	r1, r4
 8001dc8:	4628      	mov	r0, r5
*/
static void _ProgBarStat(PROGBAR_Handle _hProgBar){
	int n;
	
	//PROGBAR_SetValue(_hProgBar, -16383);
	for(n=0; n <= 100; n++){
 8001dca:	3401      	adds	r4, #1
		PROGBAR_SetValue(_hProgBar, n);
 8001dcc:	f004 fb38 	bl	8006440 <PROGBAR_SetValue>
*/
static void _ProgBarStat(PROGBAR_Handle _hProgBar){
	int n;
	
	//PROGBAR_SetValue(_hProgBar, -16383);
	for(n=0; n <= 100; n++){
 8001dd0:	2c65      	cmp	r4, #101	; 0x65
 8001dd2:	d1f8      	bne.n	8001dc6 <_cbWindow2+0x4a>
					switch(NCode) {
					  case WM_NOTIFICATION_CLICKED:
						break;
					  case WM_NOTIFICATION_RELEASED:
						_ProgBarStat(_hProgBar_1);
						Touch_thermo = true;
 8001dd4:	4b0b      	ldr	r3, [pc, #44]	; (8001e04 <_cbWindow2+0x88>)
 8001dd6:	2201      	movs	r2, #1
 8001dd8:	701a      	strb	r2, [r3, #0]
 8001dda:	e00c      	b.n	8001df6 <_cbWindow2+0x7a>
					}
				break;
			}
			break;
		case WM_PAINT:
			WM_GetUserData(pMsg->hWin, &Color, 4);
 8001ddc:	a901      	add	r1, sp, #4
 8001dde:	2204      	movs	r2, #4
 8001de0:	6840      	ldr	r0, [r0, #4]
 8001de2:	f006 f8ac 	bl	8007f3e <WM_GetUserData>
			GUI_SetBkColor(Color);
 8001de6:	9801      	ldr	r0, [sp, #4]
 8001de8:	f00b f9aa 	bl	800d140 <GUI_SetBkColor>
			GUI_Clear();
 8001dec:	f00c f95e 	bl	800e0ac <GUI_Clear>
			break;
 8001df0:	e001      	b.n	8001df6 <_cbWindow2+0x7a>
		default:
			WM_DefaultProc(pMsg);
 8001df2:	f007 fdfd 	bl	80099f0 <WM_DefaultProc>
			break;
		}
}
 8001df6:	b003      	add	sp, #12
 8001df8:	bd30      	pop	{r4, r5, pc}
 8001dfa:	bf00      	nop
 8001dfc:	2000db78 	.word	0x2000db78
 8001e00:	2000d47c 	.word	0x2000d47c
 8001e04:	2000d434 	.word	0x2000d434

08001e08 <_cbWindow1>:
**********************************************************************
*/
void _cbWindow1(WM_MESSAGE *pMsg){
	GUI_COLOR Color;
	int Id, NCode;
	switch(pMsg->MsgId){
 8001e08:	6803      	ldr	r3, [r0, #0]
 8001e0a:	2b0f      	cmp	r3, #15
/*********************************************************************
*	_cbWindow1
*		:CallBack for BkWindow
**********************************************************************
*/
void _cbWindow1(WM_MESSAGE *pMsg){
 8001e0c:	b513      	push	{r0, r1, r4, lr}
 8001e0e:	4604      	mov	r4, r0
	GUI_COLOR Color;
	int Id, NCode;
	switch(pMsg->MsgId){
 8001e10:	d024      	beq.n	8001e5c <_cbWindow1+0x54>
 8001e12:	2b26      	cmp	r3, #38	; 0x26
 8001e14:	d12d      	bne.n	8001e72 <_cbWindow1+0x6a>
		case WM_NOTIFY_PARENT:
			Id    = WM_GetId(pMsg->hWinSrc);
 8001e16:	6880      	ldr	r0, [r0, #8]
 8001e18:	f006 fc5f 	bl	80086da <WM_GetId>
			NCode = pMsg->Data.v;
			switch(Id) {
 8001e1c:	f640 020b 	movw	r2, #2059	; 0x80b
 8001e20:	4290      	cmp	r0, r2
	GUI_COLOR Color;
	int Id, NCode;
	switch(pMsg->MsgId){
		case WM_NOTIFY_PARENT:
			Id    = WM_GetId(pMsg->hWinSrc);
			NCode = pMsg->Data.v;
 8001e22:	68e3      	ldr	r3, [r4, #12]
			switch(Id) {
 8001e24:	d004      	beq.n	8001e30 <_cbWindow1+0x28>
 8001e26:	f640 020e 	movw	r2, #2062	; 0x80e
 8001e2a:	4290      	cmp	r0, r2
 8001e2c:	d00c      	beq.n	8001e48 <_cbWindow1+0x40>
 8001e2e:	e022      	b.n	8001e76 <_cbWindow1+0x6e>
				case ID_BUTTON_0: // Notifications sent by 'btnSetup'
					Touched_Button2 = true;
 8001e30:	4a12      	ldr	r2, [pc, #72]	; (8001e7c <_cbWindow1+0x74>)
 8001e32:	2401      	movs	r4, #1
					switch(NCode) {
 8001e34:	2b02      	cmp	r3, #2
		case WM_NOTIFY_PARENT:
			Id    = WM_GetId(pMsg->hWinSrc);
			NCode = pMsg->Data.v;
			switch(Id) {
				case ID_BUTTON_0: // Notifications sent by 'btnSetup'
					Touched_Button2 = true;
 8001e36:	7014      	strb	r4, [r2, #0]
					switch(NCode) {
 8001e38:	d11d      	bne.n	8001e76 <_cbWindow1+0x6e>
					  case WM_NOTIFICATION_CLICKED:
						//ShowWindow(_hWindow5);
						break;
					  case WM_NOTIFICATION_RELEASED:
						ShowWindow(_hWindow5);
 8001e3a:	4b11      	ldr	r3, [pc, #68]	; (8001e80 <_cbWindow1+0x78>)
 8001e3c:	6818      	ldr	r0, [r3, #0]
 8001e3e:	f7ff ff7b 	bl	8001d38 <ShowWindow>
						Touch_thermo = true;
 8001e42:	4b10      	ldr	r3, [pc, #64]	; (8001e84 <_cbWindow1+0x7c>)
 8001e44:	701c      	strb	r4, [r3, #0]
 8001e46:	e016      	b.n	8001e76 <_cbWindow1+0x6e>
						break;
					}
				break;
				case ID_BUTTON_3: // Notifications sent by 'btnSetup'
					switch(NCode) {
 8001e48:	2b02      	cmp	r3, #2
 8001e4a:	d114      	bne.n	8001e76 <_cbWindow1+0x6e>
					  case WM_NOTIFICATION_CLICKED:
						break;
					  case WM_NOTIFICATION_RELEASED:
						ShowWindow(hWinThermostat);
 8001e4c:	4b0e      	ldr	r3, [pc, #56]	; (8001e88 <_cbWindow1+0x80>)
 8001e4e:	6818      	ldr	r0, [r3, #0]
 8001e50:	f7ff ff72 	bl	8001d38 <ShowWindow>
						Touch_thermo = true;
 8001e54:	4b0b      	ldr	r3, [pc, #44]	; (8001e84 <_cbWindow1+0x7c>)
 8001e56:	2201      	movs	r2, #1
 8001e58:	701a      	strb	r2, [r3, #0]
 8001e5a:	e00c      	b.n	8001e76 <_cbWindow1+0x6e>
					}
				break;
			}
			break;
		case WM_PAINT:
			WM_GetUserData(pMsg->hWin, &Color, 4);
 8001e5c:	a901      	add	r1, sp, #4
 8001e5e:	2204      	movs	r2, #4
 8001e60:	6840      	ldr	r0, [r0, #4]
 8001e62:	f006 f86c 	bl	8007f3e <WM_GetUserData>
			GUI_SetBkColor(Color);
 8001e66:	9801      	ldr	r0, [sp, #4]
 8001e68:	f00b f96a 	bl	800d140 <GUI_SetBkColor>
			GUI_Clear();
 8001e6c:	f00c f91e 	bl	800e0ac <GUI_Clear>
			break;
 8001e70:	e001      	b.n	8001e76 <_cbWindow1+0x6e>
		default:
			WM_DefaultProc(pMsg);
 8001e72:	f007 fdbd 	bl	80099f0 <WM_DefaultProc>
			break;
		}
}
 8001e76:	b002      	add	sp, #8
 8001e78:	bd10      	pop	{r4, pc}
 8001e7a:	bf00      	nop
 8001e7c:	2000d488 	.word	0x2000d488
 8001e80:	2000db64 	.word	0x2000db64
 8001e84:	2000d434 	.word	0x2000d434
 8001e88:	2000db58 	.word	0x2000db58

08001e8c <Init_GUI_verventa>:
/*********************************************************************
*	Init_GUI_calor
*		:Init all windows and callbacks for the GUI
**********************************************************************
*/
ErrorStatus Init_GUI_verventa(void){
 8001e8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
*	_SetDesktopColor
*		:Set Color for desktop Black
**********************************************************************
*/
static void _SetDesktopColor(void){
	GUI_SetBkColor(GUI_BLUE);
 8001e90:	f44f 007f 	mov.w	r0, #16711680	; 0xff0000
/*********************************************************************
*	Init_GUI_calor
*		:Init all windows and callbacks for the GUI
**********************************************************************
*/
ErrorStatus Init_GUI_verventa(void){
 8001e94:	b087      	sub	sp, #28
*	_SetDesktopColor
*		:Set Color for desktop Black
**********************************************************************
*/
static void _SetDesktopColor(void){
	GUI_SetBkColor(GUI_BLUE);
 8001e96:	f00b f953 	bl	800d140 <GUI_SetBkColor>
	GUI_Clear();
 8001e9a:	f00c f907 	bl	800e0ac <GUI_Clear>
*	_DrawInfoText
*		:Drawes the info text directly on the display
**********************************************************************
*/
static void _DrawInfoText(char *pStr){
	GUI_SetColor(GUI_WHITE);
 8001e9e:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8001ea2:	f00b f94f 	bl	800d144 <GUI_SetColor>
	GUI_SetFont(&GUI_Font24_ASCII);
	GUI_DispStringHCenterAt("WindowManager - MultiCalor", 160, 5);
	GUI_SetFont(&GUI_Font8x16);
 8001ea6:	f8df 83a4 	ldr.w	r8, [pc, #932]	; 800224c <Init_GUI_verventa+0x3c0>
*		:Drawes the info text directly on the display
**********************************************************************
*/
static void _DrawInfoText(char *pStr){
	GUI_SetColor(GUI_WHITE);
	GUI_SetFont(&GUI_Font24_ASCII);
 8001eaa:	48d4      	ldr	r0, [pc, #848]	; (80021fc <Init_GUI_verventa+0x370>)
*	_CreateWindow
*		:Create all windows
**********************************************************************
*/
static void _CreateWindow(void){
	_cbBkWindowOld = WM_SetCallback(WM_HBKWIN, _cbBkWindow);
 8001eac:	f8df 93a0 	ldr.w	r9, [pc, #928]	; 8002250 <Init_GUI_verventa+0x3c4>
 8001eb0:	4fd3      	ldr	r7, [pc, #844]	; (8002200 <Init_GUI_verventa+0x374>)
	
	_hWindow4 = WM_CreateWindow(0, 0, 320, 240, WM_CF_SHOW | WM_CF_MEMDEV, _cbWindow1, 0);
 8001eb2:	4ed4      	ldr	r6, [pc, #848]	; (8002204 <Init_GUI_verventa+0x378>)
	//GUI_Delay(SPEED/3);
	_hWindow5 = WM_CreateWindow(0, 0, 320, 240, WM_CF_SHOW | WM_CF_MEMDEV, _cbWindow2, 0);
 8001eb4:	f8df b39c 	ldr.w	fp, [pc, #924]	; 8002254 <Init_GUI_verventa+0x3c8>
 8001eb8:	f8df a39c 	ldr.w	sl, [pc, #924]	; 8002258 <Init_GUI_verventa+0x3cc>
*		:Drawes the info text directly on the display
**********************************************************************
*/
static void _DrawInfoText(char *pStr){
	GUI_SetColor(GUI_WHITE);
	GUI_SetFont(&GUI_Font24_ASCII);
 8001ebc:	f00b f914 	bl	800d0e8 <GUI_SetFont>
	GUI_DispStringHCenterAt("WindowManager - MultiCalor", 160, 5);
 8001ec0:	21a0      	movs	r1, #160	; 0xa0
 8001ec2:	2205      	movs	r2, #5
 8001ec4:	48d0      	ldr	r0, [pc, #832]	; (8002208 <Init_GUI_verventa+0x37c>)
 8001ec6:	f00b feff 	bl	800dcc8 <GUI_DispStringHCenterAt>
	GUI_SetFont(&GUI_Font8x16);
 8001eca:	4640      	mov	r0, r8
 8001ecc:	f00b f90c 	bl	800d0e8 <GUI_SetFont>
	GUI_DispStringAtCEOL(pStr, 5, 40);
 8001ed0:	2228      	movs	r2, #40	; 0x28
 8001ed2:	2105      	movs	r1, #5
 8001ed4:	48cd      	ldr	r0, [pc, #820]	; (800220c <Init_GUI_verventa+0x380>)
 8001ed6:	f00b ff11 	bl	800dcfc <GUI_DispStringAtCEOL>
*/
static void _SetDesktopColor(void){
	GUI_SetBkColor(GUI_BLUE);
	GUI_Clear();
	_DrawInfoText("WM_SetDesktopColor()");
	GUI_Exec();
 8001eda:	f00b fb31 	bl	800d540 <GUI_Exec>
	//GUI_Delay(SPEED/2);
	WM_SetDesktopColor(GUI_BLACK);
 8001ede:	2000      	movs	r0, #0
 8001ee0:	f006 f982 	bl	80081e8 <WM_SetDesktopColor>
	GUI_Exec();
 8001ee4:	f00b fb2c 	bl	800d540 <GUI_Exec>
	//GUI_Delay(SPEED/2);
	GUI_SetBkColor(GUI_BLACK);
 8001ee8:	2000      	movs	r0, #0
 8001eea:	f00b f929 	bl	800d140 <GUI_SetBkColor>
	WM_SetDesktopColor(GUI_INVALID_COLOR);
 8001eee:	f06f 4070 	mvn.w	r0, #4026531840	; 0xf0000000
 8001ef2:	f006 f979 	bl	80081e8 <WM_SetDesktopColor>
*	_CreateWindow
*		:Create all windows
**********************************************************************
*/
static void _CreateWindow(void){
	_cbBkWindowOld = WM_SetCallback(WM_HBKWIN, _cbBkWindow);
 8001ef6:	f006 fc35 	bl	8008764 <WM_GetDesktopWindow>
 8001efa:	4649      	mov	r1, r9
 8001efc:	f006 fa00 	bl	8008300 <WM_SetCallback>
	
	_hWindow4 = WM_CreateWindow(0, 0, 320, 240, WM_CF_SHOW | WM_CF_MEMDEV, _cbWindow1, 0);
 8001f00:	2400      	movs	r4, #0
 8001f02:	2506      	movs	r5, #6
 8001f04:	4bc2      	ldr	r3, [pc, #776]	; (8002210 <Init_GUI_verventa+0x384>)
*	_CreateWindow
*		:Create all windows
**********************************************************************
*/
static void _CreateWindow(void){
	_cbBkWindowOld = WM_SetCallback(WM_HBKWIN, _cbBkWindow);
 8001f06:	6038      	str	r0, [r7, #0]
	
	_hWindow4 = WM_CreateWindow(0, 0, 320, 240, WM_CF_SHOW | WM_CF_MEMDEV, _cbWindow1, 0);
 8001f08:	4621      	mov	r1, r4
 8001f0a:	9301      	str	r3, [sp, #4]
 8001f0c:	9402      	str	r4, [sp, #8]
 8001f0e:	9500      	str	r5, [sp, #0]
 8001f10:	4620      	mov	r0, r4
 8001f12:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8001f16:	23f0      	movs	r3, #240	; 0xf0
 8001f18:	f007 faac 	bl	8009474 <WM_CreateWindow>
	//GUI_Delay(SPEED/3);
	_hWindow5 = WM_CreateWindow(0, 0, 320, 240, WM_CF_SHOW | WM_CF_MEMDEV, _cbWindow2, 0);
 8001f1c:	f8cd b004 	str.w	fp, [sp, #4]
**********************************************************************
*/
static void _CreateWindow(void){
	_cbBkWindowOld = WM_SetCallback(WM_HBKWIN, _cbBkWindow);
	
	_hWindow4 = WM_CreateWindow(0, 0, 320, 240, WM_CF_SHOW | WM_CF_MEMDEV, _cbWindow1, 0);
 8001f20:	6030      	str	r0, [r6, #0]
	//GUI_Delay(SPEED/3);
	_hWindow5 = WM_CreateWindow(0, 0, 320, 240, WM_CF_SHOW | WM_CF_MEMDEV, _cbWindow2, 0);
 8001f22:	9402      	str	r4, [sp, #8]
 8001f24:	4621      	mov	r1, r4
 8001f26:	9500      	str	r5, [sp, #0]
 8001f28:	4620      	mov	r0, r4
 8001f2a:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8001f2e:	23f0      	movs	r3, #240	; 0xf0
 8001f30:	f007 faa0 	bl	8009474 <WM_CreateWindow>
	//GUI_Delay(SPEED/3);
	_hWindow6 = WM_CreateWindow(0, 0, 320, 240, WM_CF_SHOW | WM_CF_MEMDEV, _cbWindow2, 0);
 8001f34:	4621      	mov	r1, r4
 8001f36:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8001f3a:	23f0      	movs	r3, #240	; 0xf0
static void _CreateWindow(void){
	_cbBkWindowOld = WM_SetCallback(WM_HBKWIN, _cbBkWindow);
	
	_hWindow4 = WM_CreateWindow(0, 0, 320, 240, WM_CF_SHOW | WM_CF_MEMDEV, _cbWindow1, 0);
	//GUI_Delay(SPEED/3);
	_hWindow5 = WM_CreateWindow(0, 0, 320, 240, WM_CF_SHOW | WM_CF_MEMDEV, _cbWindow2, 0);
 8001f3c:	f8ca 0000 	str.w	r0, [sl]
	//GUI_Delay(SPEED/3);
	_hWindow6 = WM_CreateWindow(0, 0, 320, 240, WM_CF_SHOW | WM_CF_MEMDEV, _cbWindow2, 0);
 8001f40:	e88d 0820 	stmia.w	sp, {r5, fp}
 8001f44:	9402      	str	r4, [sp, #8]
 8001f46:	4620      	mov	r0, r4
 8001f48:	f007 fa94 	bl	8009474 <WM_CreateWindow>
 8001f4c:	f8df c30c 	ldr.w	ip, [pc, #780]	; 800225c <Init_GUI_verventa+0x3d0>
 8001f50:	f8cd c014 	str.w	ip, [sp, #20]
 8001f54:	f8cc 0000 	str.w	r0, [ip]
	//GUI_Delay(SPEED/3);
	
	ShowWindow(_hWindow4);
 8001f58:	6830      	ldr	r0, [r6, #0]
	BUTTON_SetText(_hButton_button1, "Menu C °");
	BUTTON_SetFocussable(_hButton_button1, 1);
	BUTTON_SetSkin(_hButton_button1, BUTTON_SKIN_FLEX);
	

	_hButton_button2 = BUTTON_CreateAsChild(0, 60, 150, 50, _hWindow4, ID_BUTTON_1, WM_CF_SHOW | WM_CF_MEMDEV);
 8001f5a:	f8df b304 	ldr.w	fp, [pc, #772]	; 8002260 <Init_GUI_verventa+0x3d4>
	_hWindow5 = WM_CreateWindow(0, 0, 320, 240, WM_CF_SHOW | WM_CF_MEMDEV, _cbWindow2, 0);
	//GUI_Delay(SPEED/3);
	_hWindow6 = WM_CreateWindow(0, 0, 320, 240, WM_CF_SHOW | WM_CF_MEMDEV, _cbWindow2, 0);
	//GUI_Delay(SPEED/3);
	
	ShowWindow(_hWindow4);
 8001f5e:	f7ff feeb 	bl	8001d38 <ShowWindow>
*	_CreateWindowAsChild
*		:Create all child windows
**********************************************************************
*/
static void _CreateWindowAsChild(void){
	_cbBkWindowOld = WM_SetCallback(WM_HBKWIN, _cbBkWindow);
 8001f62:	f006 fbff 	bl	8008764 <WM_GetDesktopWindow>
 8001f66:	4649      	mov	r1, r9
 8001f68:	f006 f9ca 	bl	8008300 <WM_SetCallback>
	
	_hButton_button1 = BUTTON_CreateAsChild(0, 0, 150, 50, _hWindow4, ID_BUTTON_0, WM_CF_SHOW | WM_CF_MEMDEV);
 8001f6c:	6833      	ldr	r3, [r6, #0]
*	_CreateWindowAsChild
*		:Create all child windows
**********************************************************************
*/
static void _CreateWindowAsChild(void){
	_cbBkWindowOld = WM_SetCallback(WM_HBKWIN, _cbBkWindow);
 8001f6e:	6038      	str	r0, [r7, #0]
	
	_hButton_button1 = BUTTON_CreateAsChild(0, 0, 150, 50, _hWindow4, ID_BUTTON_0, WM_CF_SHOW | WM_CF_MEMDEV);
 8001f70:	9300      	str	r3, [sp, #0]
 8001f72:	f640 030b 	movw	r3, #2059	; 0x80b
 8001f76:	2296      	movs	r2, #150	; 0x96
 8001f78:	9301      	str	r3, [sp, #4]
 8001f7a:	4621      	mov	r1, r4
 8001f7c:	2332      	movs	r3, #50	; 0x32
 8001f7e:	9502      	str	r5, [sp, #8]
 8001f80:	4620      	mov	r0, r4
 8001f82:	f005 fe2a 	bl	8007bda <BUTTON_CreateAsChild>
 8001f86:	f8df 92dc 	ldr.w	r9, [pc, #732]	; 8002264 <Init_GUI_verventa+0x3d8>
	BUTTON_SetFont(_hButton_button1, &GUI_Font8x16);
	BUTTON_SetText(_hButton_button1, "Menu C °");
	BUTTON_SetFocussable(_hButton_button1, 1);
	BUTTON_SetSkin(_hButton_button1, BUTTON_SKIN_FLEX);
 8001f8a:	4fa2      	ldr	r7, [pc, #648]	; (8002214 <Init_GUI_verventa+0x388>)
**********************************************************************
*/
static void _CreateWindowAsChild(void){
	_cbBkWindowOld = WM_SetCallback(WM_HBKWIN, _cbBkWindow);
	
	_hButton_button1 = BUTTON_CreateAsChild(0, 0, 150, 50, _hWindow4, ID_BUTTON_0, WM_CF_SHOW | WM_CF_MEMDEV);
 8001f8c:	f8c9 0000 	str.w	r0, [r9]
	BUTTON_SetFont(_hButton_button1, &GUI_Font8x16);
 8001f90:	4641      	mov	r1, r8
 8001f92:	f005 ff61 	bl	8007e58 <BUTTON_SetFont>
	BUTTON_SetText(_hButton_button1, "Menu C °");
 8001f96:	f8d9 0000 	ldr.w	r0, [r9]
 8001f9a:	499f      	ldr	r1, [pc, #636]	; (8002218 <Init_GUI_verventa+0x38c>)
 8001f9c:	f005 ff34 	bl	8007e08 <BUTTON_SetText>
	BUTTON_SetFocussable(_hButton_button1, 1);
 8001fa0:	f8d9 0000 	ldr.w	r0, [r9]
 8001fa4:	2101      	movs	r1, #1
 8001fa6:	f005 ff68 	bl	8007e7a <BUTTON_SetFocussable>
	BUTTON_SetSkin(_hButton_button1, BUTTON_SKIN_FLEX);
 8001faa:	f8d9 0000 	ldr.w	r0, [r9]
 8001fae:	4639      	mov	r1, r7
 8001fb0:	f005 fdce 	bl	8007b50 <BUTTON_SetSkin>
	

	_hButton_button2 = BUTTON_CreateAsChild(0, 60, 150, 50, _hWindow4, ID_BUTTON_1, WM_CF_SHOW | WM_CF_MEMDEV);
 8001fb4:	6833      	ldr	r3, [r6, #0]
 8001fb6:	9300      	str	r3, [sp, #0]
 8001fb8:	f640 030c 	movw	r3, #2060	; 0x80c
 8001fbc:	2296      	movs	r2, #150	; 0x96
 8001fbe:	9301      	str	r3, [sp, #4]
 8001fc0:	9502      	str	r5, [sp, #8]
 8001fc2:	2332      	movs	r3, #50	; 0x32
 8001fc4:	4620      	mov	r0, r4
 8001fc6:	213c      	movs	r1, #60	; 0x3c
 8001fc8:	f005 fe07 	bl	8007bda <BUTTON_CreateAsChild>
	BUTTON_SetFont(_hButton_button2, &GUI_Font8x16);
 8001fcc:	4641      	mov	r1, r8
	BUTTON_SetText(_hButton_button1, "Menu C °");
	BUTTON_SetFocussable(_hButton_button1, 1);
	BUTTON_SetSkin(_hButton_button1, BUTTON_SKIN_FLEX);
	

	_hButton_button2 = BUTTON_CreateAsChild(0, 60, 150, 50, _hWindow4, ID_BUTTON_1, WM_CF_SHOW | WM_CF_MEMDEV);
 8001fce:	f8cb 0000 	str.w	r0, [fp]
	BUTTON_SetFont(_hButton_button2, &GUI_Font8x16);
 8001fd2:	f005 ff41 	bl	8007e58 <BUTTON_SetFont>
	BUTTON_SetText(_hButton_button2, "Menu T °");
 8001fd6:	f8db 0000 	ldr.w	r0, [fp]
 8001fda:	4990      	ldr	r1, [pc, #576]	; (800221c <Init_GUI_verventa+0x390>)
 8001fdc:	f005 ff14 	bl	8007e08 <BUTTON_SetText>
	BUTTON_SetFocussable(_hButton_button2, 1);
 8001fe0:	f8db 0000 	ldr.w	r0, [fp]
 8001fe4:	2101      	movs	r1, #1
 8001fe6:	f005 ff48 	bl	8007e7a <BUTTON_SetFocussable>
	BUTTON_SetSkin(_hButton_button2, BUTTON_SKIN_FLEX);
 8001fea:	f8db 0000 	ldr.w	r0, [fp]
	

	_hButton_button3 = BUTTON_CreateAsChild(0, 120, 150, 50, _hWindow4, ID_BUTTON_2, WM_CF_SHOW | WM_CF_MEMDEV);
 8001fee:	f8df b278 	ldr.w	fp, [pc, #632]	; 8002268 <Init_GUI_verventa+0x3dc>

	_hButton_button2 = BUTTON_CreateAsChild(0, 60, 150, 50, _hWindow4, ID_BUTTON_1, WM_CF_SHOW | WM_CF_MEMDEV);
	BUTTON_SetFont(_hButton_button2, &GUI_Font8x16);
	BUTTON_SetText(_hButton_button2, "Menu T °");
	BUTTON_SetFocussable(_hButton_button2, 1);
	BUTTON_SetSkin(_hButton_button2, BUTTON_SKIN_FLEX);
 8001ff2:	4639      	mov	r1, r7
 8001ff4:	f005 fdac 	bl	8007b50 <BUTTON_SetSkin>
	

	_hButton_button3 = BUTTON_CreateAsChild(0, 120, 150, 50, _hWindow4, ID_BUTTON_2, WM_CF_SHOW | WM_CF_MEMDEV);
 8001ff8:	6833      	ldr	r3, [r6, #0]
 8001ffa:	9300      	str	r3, [sp, #0]
 8001ffc:	f640 030d 	movw	r3, #2061	; 0x80d
 8002000:	2296      	movs	r2, #150	; 0x96
 8002002:	9301      	str	r3, [sp, #4]
 8002004:	9502      	str	r5, [sp, #8]
 8002006:	2332      	movs	r3, #50	; 0x32
 8002008:	4620      	mov	r0, r4
 800200a:	2178      	movs	r1, #120	; 0x78
 800200c:	f005 fde5 	bl	8007bda <BUTTON_CreateAsChild>
	BUTTON_SetFont(_hButton_button3, &GUI_Font8x16);
 8002010:	4641      	mov	r1, r8
	BUTTON_SetText(_hButton_button2, "Menu T °");
	BUTTON_SetFocussable(_hButton_button2, 1);
	BUTTON_SetSkin(_hButton_button2, BUTTON_SKIN_FLEX);
	

	_hButton_button3 = BUTTON_CreateAsChild(0, 120, 150, 50, _hWindow4, ID_BUTTON_2, WM_CF_SHOW | WM_CF_MEMDEV);
 8002012:	f8cb 0000 	str.w	r0, [fp]
	BUTTON_SetFont(_hButton_button3, &GUI_Font8x16);
 8002016:	f005 ff1f 	bl	8007e58 <BUTTON_SetFont>
	BUTTON_SetText(_hButton_button3, "Menu Settings");
 800201a:	f8db 0000 	ldr.w	r0, [fp]
 800201e:	4980      	ldr	r1, [pc, #512]	; (8002220 <Init_GUI_verventa+0x394>)
 8002020:	f005 fef2 	bl	8007e08 <BUTTON_SetText>
	BUTTON_SetFocussable(_hButton_button3, 1);
 8002024:	f8db 0000 	ldr.w	r0, [fp]
 8002028:	2101      	movs	r1, #1
 800202a:	f005 ff26 	bl	8007e7a <BUTTON_SetFocussable>
	BUTTON_SetSkin(_hButton_button3, BUTTON_SKIN_FLEX);
 800202e:	f8db 0000 	ldr.w	r0, [fp]
	BUTTON_SetText(_hButton_button4, "Menu Vent");
	BUTTON_SetFocussable(_hButton_button4, 1);
	BUTTON_SetSkin(_hButton_button4, BUTTON_SKIN_FLEX);
	

	_hButton_button5 = BUTTON_CreateAsChild(160, 60, 150, 50, _hWindow4, ID_BUTTON_4, WM_CF_SHOW | WM_CF_MEMDEV);
 8002032:	f8df b238 	ldr.w	fp, [pc, #568]	; 800226c <Init_GUI_verventa+0x3e0>

	_hButton_button3 = BUTTON_CreateAsChild(0, 120, 150, 50, _hWindow4, ID_BUTTON_2, WM_CF_SHOW | WM_CF_MEMDEV);
	BUTTON_SetFont(_hButton_button3, &GUI_Font8x16);
	BUTTON_SetText(_hButton_button3, "Menu Settings");
	BUTTON_SetFocussable(_hButton_button3, 1);
	BUTTON_SetSkin(_hButton_button3, BUTTON_SKIN_FLEX);
 8002036:	4639      	mov	r1, r7
 8002038:	f005 fd8a 	bl	8007b50 <BUTTON_SetSkin>
	

	_hButton_button4 = BUTTON_CreateAsChild(160, 0, 150, 50, _hWindow4, ID_BUTTON_3, WM_CF_SHOW | WM_CF_MEMDEV);
 800203c:	6833      	ldr	r3, [r6, #0]
 800203e:	9300      	str	r3, [sp, #0]
 8002040:	f640 030e 	movw	r3, #2062	; 0x80e
 8002044:	2296      	movs	r2, #150	; 0x96
 8002046:	9301      	str	r3, [sp, #4]
 8002048:	4621      	mov	r1, r4
 800204a:	9502      	str	r5, [sp, #8]
 800204c:	2332      	movs	r3, #50	; 0x32
 800204e:	20a0      	movs	r0, #160	; 0xa0
 8002050:	f005 fdc3 	bl	8007bda <BUTTON_CreateAsChild>
 8002054:	4b73      	ldr	r3, [pc, #460]	; (8002224 <Init_GUI_verventa+0x398>)
	BUTTON_SetFont(_hButton_button4, &GUI_Font8x16);
 8002056:	4641      	mov	r1, r8
	BUTTON_SetText(_hButton_button3, "Menu Settings");
	BUTTON_SetFocussable(_hButton_button3, 1);
	BUTTON_SetSkin(_hButton_button3, BUTTON_SKIN_FLEX);
	

	_hButton_button4 = BUTTON_CreateAsChild(160, 0, 150, 50, _hWindow4, ID_BUTTON_3, WM_CF_SHOW | WM_CF_MEMDEV);
 8002058:	6018      	str	r0, [r3, #0]
	BUTTON_SetFont(_hButton_button4, &GUI_Font8x16);
 800205a:	f005 fefd 	bl	8007e58 <BUTTON_SetFont>
	BUTTON_SetText(_hButton_button4, "Menu Vent");
 800205e:	4b71      	ldr	r3, [pc, #452]	; (8002224 <Init_GUI_verventa+0x398>)
 8002060:	4971      	ldr	r1, [pc, #452]	; (8002228 <Init_GUI_verventa+0x39c>)
 8002062:	6818      	ldr	r0, [r3, #0]
 8002064:	f005 fed0 	bl	8007e08 <BUTTON_SetText>
	BUTTON_SetFocussable(_hButton_button4, 1);
 8002068:	4b6e      	ldr	r3, [pc, #440]	; (8002224 <Init_GUI_verventa+0x398>)
 800206a:	2101      	movs	r1, #1
 800206c:	6818      	ldr	r0, [r3, #0]
 800206e:	f005 ff04 	bl	8007e7a <BUTTON_SetFocussable>
	BUTTON_SetSkin(_hButton_button4, BUTTON_SKIN_FLEX);
 8002072:	4b6c      	ldr	r3, [pc, #432]	; (8002224 <Init_GUI_verventa+0x398>)
 8002074:	4639      	mov	r1, r7
 8002076:	6818      	ldr	r0, [r3, #0]
 8002078:	f005 fd6a 	bl	8007b50 <BUTTON_SetSkin>
	

	_hButton_button5 = BUTTON_CreateAsChild(160, 60, 150, 50, _hWindow4, ID_BUTTON_4, WM_CF_SHOW | WM_CF_MEMDEV);
 800207c:	6833      	ldr	r3, [r6, #0]
 800207e:	9300      	str	r3, [sp, #0]
 8002080:	f640 030f 	movw	r3, #2063	; 0x80f
 8002084:	2296      	movs	r2, #150	; 0x96
 8002086:	9301      	str	r3, [sp, #4]
 8002088:	9502      	str	r5, [sp, #8]
 800208a:	2332      	movs	r3, #50	; 0x32
 800208c:	213c      	movs	r1, #60	; 0x3c
 800208e:	20a0      	movs	r0, #160	; 0xa0
 8002090:	f005 fda3 	bl	8007bda <BUTTON_CreateAsChild>
	BUTTON_SetFont(_hButton_button5, &GUI_Font8x16);
 8002094:	4641      	mov	r1, r8
	BUTTON_SetText(_hButton_button4, "Menu Vent");
	BUTTON_SetFocussable(_hButton_button4, 1);
	BUTTON_SetSkin(_hButton_button4, BUTTON_SKIN_FLEX);
	

	_hButton_button5 = BUTTON_CreateAsChild(160, 60, 150, 50, _hWindow4, ID_BUTTON_4, WM_CF_SHOW | WM_CF_MEMDEV);
 8002096:	f8cb 0000 	str.w	r0, [fp]
	BUTTON_SetFont(_hButton_button5, &GUI_Font8x16);
 800209a:	f005 fedd 	bl	8007e58 <BUTTON_SetFont>
	BUTTON_SetText(_hButton_button5, "Touch Up");
 800209e:	f8db 0000 	ldr.w	r0, [fp]
 80020a2:	4962      	ldr	r1, [pc, #392]	; (800222c <Init_GUI_verventa+0x3a0>)
 80020a4:	f005 feb0 	bl	8007e08 <BUTTON_SetText>
	BUTTON_SetFocussable(_hButton_button5, 1);
 80020a8:	f8db 0000 	ldr.w	r0, [fp]
 80020ac:	2101      	movs	r1, #1
 80020ae:	f005 fee4 	bl	8007e7a <BUTTON_SetFocussable>
	BUTTON_SetSkin(_hButton_button5, BUTTON_SKIN_FLEX);
 80020b2:	f8db 0000 	ldr.w	r0, [fp]
	

	_hButton_button6 = BUTTON_CreateAsChild(160, 120, 150, 50, _hWindow4, ID_BUTTON_5, WM_CF_SHOW | WM_CF_MEMDEV);
 80020b6:	f8df b1b8 	ldr.w	fp, [pc, #440]	; 8002270 <Init_GUI_verventa+0x3e4>

	_hButton_button5 = BUTTON_CreateAsChild(160, 60, 150, 50, _hWindow4, ID_BUTTON_4, WM_CF_SHOW | WM_CF_MEMDEV);
	BUTTON_SetFont(_hButton_button5, &GUI_Font8x16);
	BUTTON_SetText(_hButton_button5, "Touch Up");
	BUTTON_SetFocussable(_hButton_button5, 1);
	BUTTON_SetSkin(_hButton_button5, BUTTON_SKIN_FLEX);
 80020ba:	4639      	mov	r1, r7
 80020bc:	f005 fd48 	bl	8007b50 <BUTTON_SetSkin>
	

	_hButton_button6 = BUTTON_CreateAsChild(160, 120, 150, 50, _hWindow4, ID_BUTTON_5, WM_CF_SHOW | WM_CF_MEMDEV);
 80020c0:	6833      	ldr	r3, [r6, #0]
 80020c2:	9300      	str	r3, [sp, #0]
 80020c4:	f44f 6301 	mov.w	r3, #2064	; 0x810
 80020c8:	2296      	movs	r2, #150	; 0x96
 80020ca:	9301      	str	r3, [sp, #4]
 80020cc:	9502      	str	r5, [sp, #8]
 80020ce:	2332      	movs	r3, #50	; 0x32
 80020d0:	2178      	movs	r1, #120	; 0x78
 80020d2:	20a0      	movs	r0, #160	; 0xa0
 80020d4:	f005 fd81 	bl	8007bda <BUTTON_CreateAsChild>
	BUTTON_SetFont(_hButton_button6, &GUI_Font8x16);
 80020d8:	4641      	mov	r1, r8
	BUTTON_SetText(_hButton_button5, "Touch Up");
	BUTTON_SetFocussable(_hButton_button5, 1);
	BUTTON_SetSkin(_hButton_button5, BUTTON_SKIN_FLEX);
	

	_hButton_button6 = BUTTON_CreateAsChild(160, 120, 150, 50, _hWindow4, ID_BUTTON_5, WM_CF_SHOW | WM_CF_MEMDEV);
 80020da:	f8cb 0000 	str.w	r0, [fp]
	BUTTON_SetFont(_hButton_button6, &GUI_Font8x16);
 80020de:	f005 febb 	bl	8007e58 <BUTTON_SetFont>
	BUTTON_SetText(_hButton_button6, "Touch Down");
 80020e2:	f8db 0000 	ldr.w	r0, [fp]
 80020e6:	4952      	ldr	r1, [pc, #328]	; (8002230 <Init_GUI_verventa+0x3a4>)
	BUTTON_SetFont(_hButton_button7, &GUI_Font24B_ASCII);
	BUTTON_SetText(_hButton_button7, "MAIN");
	BUTTON_SetFocussable(_hButton_button7, 1);
	

	_hButton_button8 = BUTTON_CreateAsChild(0, 110, 320, 50, _hWindow5, ID_BUTTON_7, WM_CF_SHOW | WM_CF_MEMDEV);
 80020e8:	f8df 8188 	ldr.w	r8, [pc, #392]	; 8002274 <Init_GUI_verventa+0x3e8>
	BUTTON_SetSkin(_hButton_button5, BUTTON_SKIN_FLEX);
	

	_hButton_button6 = BUTTON_CreateAsChild(160, 120, 150, 50, _hWindow4, ID_BUTTON_5, WM_CF_SHOW | WM_CF_MEMDEV);
	BUTTON_SetFont(_hButton_button6, &GUI_Font8x16);
	BUTTON_SetText(_hButton_button6, "Touch Down");
 80020ec:	f005 fe8c 	bl	8007e08 <BUTTON_SetText>
	BUTTON_SetFocussable(_hButton_button6, 1);
 80020f0:	f8db 0000 	ldr.w	r0, [fp]
 80020f4:	2101      	movs	r1, #1
 80020f6:	f005 fec0 	bl	8007e7a <BUTTON_SetFocussable>
	BUTTON_SetSkin(_hButton_button6, BUTTON_SKIN_FLEX);
 80020fa:	f8db 0000 	ldr.w	r0, [fp]
	

	
	_hButton_button7 = BUTTON_CreateAsChild(0, 50, 320, 50, _hWindow5, ID_BUTTON_6, WM_CF_SHOW | WM_CF_MEMDEV);
 80020fe:	f8df b178 	ldr.w	fp, [pc, #376]	; 8002278 <Init_GUI_verventa+0x3ec>

	_hButton_button6 = BUTTON_CreateAsChild(160, 120, 150, 50, _hWindow4, ID_BUTTON_5, WM_CF_SHOW | WM_CF_MEMDEV);
	BUTTON_SetFont(_hButton_button6, &GUI_Font8x16);
	BUTTON_SetText(_hButton_button6, "Touch Down");
	BUTTON_SetFocussable(_hButton_button6, 1);
	BUTTON_SetSkin(_hButton_button6, BUTTON_SKIN_FLEX);
 8002102:	4639      	mov	r1, r7
 8002104:	f005 fd24 	bl	8007b50 <BUTTON_SetSkin>
	

	
	_hButton_button7 = BUTTON_CreateAsChild(0, 50, 320, 50, _hWindow5, ID_BUTTON_6, WM_CF_SHOW | WM_CF_MEMDEV);
 8002108:	f8da 3000 	ldr.w	r3, [sl]
 800210c:	9300      	str	r3, [sp, #0]
 800210e:	2132      	movs	r1, #50	; 0x32
 8002110:	f640 0311 	movw	r3, #2065	; 0x811
 8002114:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8002118:	9301      	str	r3, [sp, #4]
 800211a:	9502      	str	r5, [sp, #8]
 800211c:	460b      	mov	r3, r1
 800211e:	4620      	mov	r0, r4
 8002120:	f005 fd5b 	bl	8007bda <BUTTON_CreateAsChild>
	BUTTON_SetFont(_hButton_button7, &GUI_Font24B_ASCII);
 8002124:	4943      	ldr	r1, [pc, #268]	; (8002234 <Init_GUI_verventa+0x3a8>)
	BUTTON_SetFocussable(_hButton_button6, 1);
	BUTTON_SetSkin(_hButton_button6, BUTTON_SKIN_FLEX);
	

	
	_hButton_button7 = BUTTON_CreateAsChild(0, 50, 320, 50, _hWindow5, ID_BUTTON_6, WM_CF_SHOW | WM_CF_MEMDEV);
 8002126:	f8cb 0000 	str.w	r0, [fp]
	BUTTON_SetFont(_hButton_button7, &GUI_Font24B_ASCII);
 800212a:	f005 fe95 	bl	8007e58 <BUTTON_SetFont>
	BUTTON_SetText(_hButton_button7, "MAIN");
 800212e:	f8db 0000 	ldr.w	r0, [fp]
 8002132:	4941      	ldr	r1, [pc, #260]	; (8002238 <Init_GUI_verventa+0x3ac>)
 8002134:	f005 fe68 	bl	8007e08 <BUTTON_SetText>
	BUTTON_SetFocussable(_hButton_button7, 1);
 8002138:	f8db 0000 	ldr.w	r0, [fp]
 800213c:	2101      	movs	r1, #1
 800213e:	f005 fe9c 	bl	8007e7a <BUTTON_SetFocussable>
	

	_hButton_button8 = BUTTON_CreateAsChild(0, 110, 320, 50, _hWindow5, ID_BUTTON_7, WM_CF_SHOW | WM_CF_MEMDEV);
 8002142:	f8da 3000 	ldr.w	r3, [sl]
 8002146:	9300      	str	r3, [sp, #0]
 8002148:	f640 0312 	movw	r3, #2066	; 0x812
 800214c:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8002150:	9301      	str	r3, [sp, #4]
 8002152:	9502      	str	r5, [sp, #8]
 8002154:	2332      	movs	r3, #50	; 0x32
 8002156:	4620      	mov	r0, r4
 8002158:	216e      	movs	r1, #110	; 0x6e
 800215a:	f005 fd3e 	bl	8007bda <BUTTON_CreateAsChild>
	BUTTON_SetFont(_hButton_button8, &GUI_Font24B_ASCII);
 800215e:	4935      	ldr	r1, [pc, #212]	; (8002234 <Init_GUI_verventa+0x3a8>)
	BUTTON_SetFont(_hButton_button7, &GUI_Font24B_ASCII);
	BUTTON_SetText(_hButton_button7, "MAIN");
	BUTTON_SetFocussable(_hButton_button7, 1);
	

	_hButton_button8 = BUTTON_CreateAsChild(0, 110, 320, 50, _hWindow5, ID_BUTTON_7, WM_CF_SHOW | WM_CF_MEMDEV);
 8002160:	f8c8 0000 	str.w	r0, [r8]
	BUTTON_SetFont(_hButton_button8, &GUI_Font24B_ASCII);
 8002164:	f005 fe78 	bl	8007e58 <BUTTON_SetFont>
	BUTTON_SetText(_hButton_button8, "Load Temp");
 8002168:	f8d8 0000 	ldr.w	r0, [r8]
 800216c:	4933      	ldr	r1, [pc, #204]	; (800223c <Init_GUI_verventa+0x3b0>)
 800216e:	f005 fe4b 	bl	8007e08 <BUTTON_SetText>
	BUTTON_SetFocussable(_hButton_button8, 1);
 8002172:	f8d8 0000 	ldr.w	r0, [r8]
 8002176:	2101      	movs	r1, #1
 8002178:	f005 fe7f 	bl	8007e7a <BUTTON_SetFocussable>
	BUTTON_SetSkin(_hButton_button8, BUTTON_SKIN_FLEX);
 800217c:	f8d8 0000 	ldr.w	r0, [r8]
 8002180:	4639      	mov	r1, r7
 8002182:	f005 fce5 	bl	8007b50 <BUTTON_SetSkin>
	

	_hProgBar_1 = PROGBAR_CreateAsChild(20, 200, 200, 25, _hWindow5, ID_PROGBAR_1, WM_CF_SHOW | WM_CF_MEMDEV);
 8002186:	f8da 3000 	ldr.w	r3, [sl]
 800218a:	9300      	str	r3, [sp, #0]
 800218c:	21c8      	movs	r1, #200	; 0xc8
 800218e:	f640 0314 	movw	r3, #2068	; 0x814
 8002192:	460a      	mov	r2, r1
 8002194:	9301      	str	r3, [sp, #4]
 8002196:	9502      	str	r5, [sp, #8]
 8002198:	2319      	movs	r3, #25
 800219a:	2014      	movs	r0, #20
 800219c:	f004 f826 	bl	80061ec <PROGBAR_CreateAsChild>
 80021a0:	4b27      	ldr	r3, [pc, #156]	; (8002240 <Init_GUI_verventa+0x3b4>)
	//PROGBAR_SetMinMax(_hProgBar_1, -16383, 16383);
	//PROGBAR_SetText(_hProgBar_1, "Load in temp...");
	PROGBAR_SetSkin(_hProgBar_1, PROGBAR_SKIN_FLEX);
 80021a2:	4928      	ldr	r1, [pc, #160]	; (8002244 <Init_GUI_verventa+0x3b8>)
	BUTTON_SetText(_hButton_button8, "Load Temp");
	BUTTON_SetFocussable(_hButton_button8, 1);
	BUTTON_SetSkin(_hButton_button8, BUTTON_SKIN_FLEX);
	

	_hProgBar_1 = PROGBAR_CreateAsChild(20, 200, 200, 25, _hWindow5, ID_PROGBAR_1, WM_CF_SHOW | WM_CF_MEMDEV);
 80021a4:	6018      	str	r0, [r3, #0]
	//PROGBAR_SetMinMax(_hProgBar_1, -16383, 16383);
	//PROGBAR_SetText(_hProgBar_1, "Load in temp...");
	PROGBAR_SetSkin(_hProgBar_1, PROGBAR_SKIN_FLEX);
 80021a6:	f004 f80d 	bl	80061c4 <PROGBAR_SetSkin>
	//PROGBAR_SetValue(_hProgBar_1, 50);
	
	_hButton_button9 = BUTTON_CreateAsChild(0, 50, 320, 50, _hWindow6, ID_BUTTON_8, WM_CF_SHOW | WM_CF_MEMDEV);
 80021aa:	f8dd c014 	ldr.w	ip, [sp, #20]
 80021ae:	4f26      	ldr	r7, [pc, #152]	; (8002248 <Init_GUI_verventa+0x3bc>)
 80021b0:	f8dc 3000 	ldr.w	r3, [ip]
 80021b4:	9300      	str	r3, [sp, #0]
 80021b6:	2132      	movs	r1, #50	; 0x32
 80021b8:	f640 0313 	movw	r3, #2067	; 0x813
 80021bc:	f44f 72a0 	mov.w	r2, #320	; 0x140
 80021c0:	9301      	str	r3, [sp, #4]
 80021c2:	9502      	str	r5, [sp, #8]
 80021c4:	460b      	mov	r3, r1
 80021c6:	4620      	mov	r0, r4
 80021c8:	f005 fd07 	bl	8007bda <BUTTON_CreateAsChild>
	BUTTON_SetFont(_hButton_button9, &GUI_Font24B_ASCII);
 80021cc:	4919      	ldr	r1, [pc, #100]	; (8002234 <Init_GUI_verventa+0x3a8>)
	//PROGBAR_SetMinMax(_hProgBar_1, -16383, 16383);
	//PROGBAR_SetText(_hProgBar_1, "Load in temp...");
	PROGBAR_SetSkin(_hProgBar_1, PROGBAR_SKIN_FLEX);
	//PROGBAR_SetValue(_hProgBar_1, 50);
	
	_hButton_button9 = BUTTON_CreateAsChild(0, 50, 320, 50, _hWindow6, ID_BUTTON_8, WM_CF_SHOW | WM_CF_MEMDEV);
 80021ce:	6038      	str	r0, [r7, #0]
	BUTTON_SetFont(_hButton_button9, &GUI_Font24B_ASCII);
 80021d0:	f005 fe42 	bl	8007e58 <BUTTON_SetFont>
	BUTTON_SetText(_hButton_button9, "MAIN");
 80021d4:	6838      	ldr	r0, [r7, #0]
 80021d6:	4918      	ldr	r1, [pc, #96]	; (8002238 <Init_GUI_verventa+0x3ac>)
 80021d8:	f005 fe16 	bl	8007e08 <BUTTON_SetText>
	BUTTON_SetFocussable(_hButton_button9, 1);
 80021dc:	6838      	ldr	r0, [r7, #0]
 80021de:	2101      	movs	r1, #1
 80021e0:	f005 fe4b 	bl	8007e7a <BUTTON_SetFocussable>
	
	_hSlider_1 = SLIDER_CreateEx(20, 180, 150, 35, _hWindow4, WM_CF_SHOW | WM_CF_MEMDEV, 0, ID_SLIDER_1);
 80021e4:	6833      	ldr	r3, [r6, #0]
 80021e6:	9402      	str	r4, [sp, #8]
 80021e8:	e88d 0028 	stmia.w	sp, {r3, r5}
 80021ec:	f640 0315 	movw	r3, #2069	; 0x815
 80021f0:	2296      	movs	r2, #150	; 0x96
 80021f2:	9303      	str	r3, [sp, #12]
 80021f4:	21b4      	movs	r1, #180	; 0xb4
 80021f6:	2323      	movs	r3, #35	; 0x23
 80021f8:	2014      	movs	r0, #20
 80021fa:	e03f      	b.n	800227c <Init_GUI_verventa+0x3f0>
 80021fc:	080289bc 	.word	0x080289bc
 8002200:	2000d484 	.word	0x2000d484
 8002204:	2000db78 	.word	0x2000db78
 8002208:	08019920 	.word	0x08019920
 800220c:	0801993b 	.word	0x0801993b
 8002210:	08001e09 	.word	0x08001e09
 8002214:	08007859 	.word	0x08007859
 8002218:	08019950 	.word	0x08019950
 800221c:	0801995a 	.word	0x0801995a
 8002220:	08019964 	.word	0x08019964
 8002224:	2000d46c 	.word	0x2000d46c
 8002228:	08019972 	.word	0x08019972
 800222c:	0801997c 	.word	0x0801997c
 8002230:	08019985 	.word	0x08019985
 8002234:	08029b18 	.word	0x08029b18
 8002238:	08019990 	.word	0x08019990
 800223c:	08019995 	.word	0x08019995
 8002240:	2000d47c 	.word	0x2000d47c
 8002244:	08005efd 	.word	0x08005efd
 8002248:	2000d478 	.word	0x2000d478
 800224c:	08025920 	.word	0x08025920
 8002250:	08001d05 	.word	0x08001d05
 8002254:	08001d7d 	.word	0x08001d7d
 8002258:	2000db64 	.word	0x2000db64
 800225c:	2000db74 	.word	0x2000db74
 8002260:	2000d480 	.word	0x2000d480
 8002264:	2000d43c 	.word	0x2000d43c
 8002268:	2000d468 	.word	0x2000d468
 800226c:	2000d48c 	.word	0x2000d48c
 8002270:	2000d490 	.word	0x2000d490
 8002274:	2000d474 	.word	0x2000d474
 8002278:	2000d470 	.word	0x2000d470
 800227c:	f003 fafc 	bl	8005878 <SLIDER_CreateEx>
	
	GUI_Exec();
	

	
	cbButton0 = WM_SetCallback(_hButton_button1, _cbButton);
 8002280:	4c17      	ldr	r4, [pc, #92]	; (80022e0 <Init_GUI_verventa+0x454>)
	_hButton_button9 = BUTTON_CreateAsChild(0, 50, 320, 50, _hWindow6, ID_BUTTON_8, WM_CF_SHOW | WM_CF_MEMDEV);
	BUTTON_SetFont(_hButton_button9, &GUI_Font24B_ASCII);
	BUTTON_SetText(_hButton_button9, "MAIN");
	BUTTON_SetFocussable(_hButton_button9, 1);
	
	_hSlider_1 = SLIDER_CreateEx(20, 180, 150, 35, _hWindow4, WM_CF_SHOW | WM_CF_MEMDEV, 0, ID_SLIDER_1);
 8002282:	4b18      	ldr	r3, [pc, #96]	; (80022e4 <Init_GUI_verventa+0x458>)
 8002284:	6018      	str	r0, [r3, #0]
	
	GUI_Exec();
 8002286:	f00b f95b 	bl	800d540 <GUI_Exec>
	

	
	cbButton0 = WM_SetCallback(_hButton_button1, _cbButton);
 800228a:	4621      	mov	r1, r4
 800228c:	f8d9 0000 	ldr.w	r0, [r9]
 8002290:	f006 f836 	bl	8008300 <WM_SetCallback>
 8002294:	4b14      	ldr	r3, [pc, #80]	; (80022e8 <Init_GUI_verventa+0x45c>)
 8002296:	6018      	str	r0, [r3, #0]
	cbButton3 = WM_SetCallback(_hButton_button4, _cbButton);
 8002298:	4b14      	ldr	r3, [pc, #80]	; (80022ec <Init_GUI_verventa+0x460>)
 800229a:	4621      	mov	r1, r4
 800229c:	6818      	ldr	r0, [r3, #0]
 800229e:	f006 f82f 	bl	8008300 <WM_SetCallback>
 80022a2:	4b13      	ldr	r3, [pc, #76]	; (80022f0 <Init_GUI_verventa+0x464>)
	cbButton1 = WM_SetCallback(_hButton_button7, _cbButton);
 80022a4:	4621      	mov	r1, r4
	GUI_Exec();
	

	
	cbButton0 = WM_SetCallback(_hButton_button1, _cbButton);
	cbButton3 = WM_SetCallback(_hButton_button4, _cbButton);
 80022a6:	6018      	str	r0, [r3, #0]
	cbButton1 = WM_SetCallback(_hButton_button7, _cbButton);
 80022a8:	f8db 0000 	ldr.w	r0, [fp]
 80022ac:	f006 f828 	bl	8008300 <WM_SetCallback>
 80022b0:	4b10      	ldr	r3, [pc, #64]	; (80022f4 <Init_GUI_verventa+0x468>)
	cbButton2 = WM_SetCallback(_hButton_button8, _cbButton);
 80022b2:	4621      	mov	r1, r4
	

	
	cbButton0 = WM_SetCallback(_hButton_button1, _cbButton);
	cbButton3 = WM_SetCallback(_hButton_button4, _cbButton);
	cbButton1 = WM_SetCallback(_hButton_button7, _cbButton);
 80022b4:	6018      	str	r0, [r3, #0]
	cbButton2 = WM_SetCallback(_hButton_button8, _cbButton);
 80022b6:	f8d8 0000 	ldr.w	r0, [r8]
 80022ba:	f006 f821 	bl	8008300 <WM_SetCallback>
 80022be:	4b0e      	ldr	r3, [pc, #56]	; (80022f8 <Init_GUI_verventa+0x46c>)
	cbButton4 = WM_SetCallback(_hButton_button9, _cbButton);
 80022c0:	4621      	mov	r1, r4

	
	cbButton0 = WM_SetCallback(_hButton_button1, _cbButton);
	cbButton3 = WM_SetCallback(_hButton_button4, _cbButton);
	cbButton1 = WM_SetCallback(_hButton_button7, _cbButton);
	cbButton2 = WM_SetCallback(_hButton_button8, _cbButton);
 80022c2:	6018      	str	r0, [r3, #0]
	cbButton4 = WM_SetCallback(_hButton_button9, _cbButton);
 80022c4:	6838      	ldr	r0, [r7, #0]
 80022c6:	f006 f81b 	bl	8008300 <WM_SetCallback>
 80022ca:	4b0c      	ldr	r3, [pc, #48]	; (80022fc <Init_GUI_verventa+0x470>)
 80022cc:	6018      	str	r0, [r3, #0]
*/
ErrorStatus Init_GUI_verventa(void){
	_SetDesktopColor();
	_CreateWindow();
	_CreateWindowAsChild();
	hWinThermostat = CreateThermostat();
 80022ce:	f7ff fce3 	bl	8001c98 <CreateThermostat>
 80022d2:	4b0b      	ldr	r3, [pc, #44]	; (8002300 <Init_GUI_verventa+0x474>)
 80022d4:	6018      	str	r0, [r3, #0]
	
	return(SUCCESS);
 80022d6:	2001      	movs	r0, #1
 80022d8:	b007      	add	sp, #28
 80022da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80022de:	bf00      	nop
 80022e0:	08001d01 	.word	0x08001d01
 80022e4:	2000d438 	.word	0x2000d438
 80022e8:	2000db70 	.word	0x2000db70
 80022ec:	2000d46c 	.word	0x2000d46c
 80022f0:	2000db7c 	.word	0x2000db7c
 80022f4:	2000db6c 	.word	0x2000db6c
 80022f8:	2000db80 	.word	0x2000db80
 80022fc:	2000db68 	.word	0x2000db68
 8002300:	2000db58 	.word	0x2000db58

08002304 <UB_STemWIN_init>:
/**
  * @brief  This function Init STemWin Display Touchpanel.
  * @param  None
  * @retval ErrorStatus
  */
ErrorStatus UB_STemWIN_init(void){
 8002304:	b508      	push	{r3, lr}
  int16_t error_stat;
  uint8_t threshhold = 0;
  RCC_ClocksTypeDef RCC_Clocks;

  RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_CRC, ENABLE); // Don't forget!!
 8002306:	2101      	movs	r1, #1
 8002308:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800230c:	f000 f8a4 	bl	8002458 <RCC_AHB1PeriphClockCmd>
  
  /*	Display Init	*/
  init_ili9341();
 8002310:	f002 fd02 	bl	8004d18 <init_ili9341>
  HAL_Delay(2);
 8002314:	2002      	movs	r0, #2
 8002316:	f002 fcaf 	bl	8004c78 <HAL_Delay>

  /*	Touch Init	*/
  FT6206_begin(threshhold);
 800231a:	2000      	movs	r0, #0
 800231c:	f002 fe1e 	bl	8004f5c <FT6206_begin>
  HAL_Delay(5);
 8002320:	2005      	movs	r0, #5
 8002322:	f002 fca9 	bl	8004c78 <HAL_Delay>

  /*	STemWin-GUI Init	*/
  if(GUI_Init()!=0) {
 8002326:	f00b feff 	bl	800e128 <GUI_Init>
    return(ERROR);
  }
  
  return(SUCCESS);
}
 800232a:	fab0 f080 	clz	r0, r0
 800232e:	0940      	lsrs	r0, r0, #5
 8002330:	bd08      	pop	{r3, pc}
	...

08002334 <UB_STemWIN_updateTouch>:
/**
  * @brief  This function updates Touch every 3ms.
  * @param  None
  * @retval None
  */
void UB_STemWIN_updateTouch(void){
 8002334:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  GUI_PID_STATE TS_State;
  static uint8_t prev_state = 0;
  uint32_t TS_Orientation = 1;  // LandScape Mode
  
  /*	Call Touches	*/
  FT6206_read_data();
 8002336:	f002 fe61 	bl	8004ffc <FT6206_read_data>
    if(TS_Orientation == 0){
		TS_State.x = FT6206.touch_01_xpos;
		TS_State.y = FT6206.touch_01_ypos;
	}
	else{
		TS_State.y = 240 - FT6206.touch_01_xpos;
 800233a:	4b0e      	ldr	r3, [pc, #56]	; (8002374 <UB_STemWIN_updateTouch+0x40>)
 800233c:	889a      	ldrh	r2, [r3, #4]
 800233e:	f1c2 02f0 	rsb	r2, r2, #240	; 0xf0
 8002342:	9202      	str	r2, [sp, #8]
		TS_State.x = FT6206.touch_01_ypos;
 8002344:	891a      	ldrh	r2, [r3, #8]
	}
	
	if((FT6206.touch_points) != 0){
 8002346:	785b      	ldrb	r3, [r3, #1]
		TS_State.x = FT6206.touch_01_xpos;
		TS_State.y = FT6206.touch_01_ypos;
	}
	else{
		TS_State.y = 240 - FT6206.touch_01_xpos;
		TS_State.x = FT6206.touch_01_ypos;
 8002348:	9201      	str	r2, [sp, #4]
	}
	
	if((FT6206.touch_points) != 0){
 800234a:	b103      	cbz	r3, 800234e <UB_STemWIN_updateTouch+0x1a>
		TS_State.Pressed = 1;
 800234c:	2301      	movs	r3, #1
	}
	else{
		TS_State.Pressed = 0;
 800234e:	f88d 300c 	strb.w	r3, [sp, #12]
	}

	if(prev_state != TS_State.Pressed ){
 8002352:	4b09      	ldr	r3, [pc, #36]	; (8002378 <UB_STemWIN_updateTouch+0x44>)
 8002354:	f89d 200c 	ldrb.w	r2, [sp, #12]
 8002358:	7819      	ldrb	r1, [r3, #0]
 800235a:	4291      	cmp	r1, r2
 800235c:	d006      	beq.n	800236c <UB_STemWIN_updateTouch+0x38>
		prev_state = TS_State.Pressed;
 800235e:	701a      	strb	r2, [r3, #0]
		TS_State.Layer = 0;
		GUI_TOUCH_StoreStateEx(&TS_State);
 8002360:	a801      	add	r0, sp, #4
		TS_State.Pressed = 0;
	}

	if(prev_state != TS_State.Pressed ){
		prev_state = TS_State.Pressed;
		TS_State.Layer = 0;
 8002362:	2300      	movs	r3, #0
 8002364:	f88d 300d 	strb.w	r3, [sp, #13]
		GUI_TOUCH_StoreStateEx(&TS_State);
 8002368:	f00a fea0 	bl	800d0ac <GUI_TOUCH_StoreStateEx>
	}
	
}
 800236c:	b005      	add	sp, #20
 800236e:	f85d fb04 	ldr.w	pc, [sp], #4
 8002372:	bf00      	nop
 8002374:	2000dd46 	.word	0x2000dd46
 8002378:	2000d494 	.word	0x2000d494

0800237c <LcdWriteReg>:
*
* Function description:
*   Sets display register
*/
static void LcdWriteReg(U16 Data) {
  LCD_REG_ADDRESS = Data;
 800237c:	f04f 43c0 	mov.w	r3, #1610612736	; 0x60000000
 8002380:	8018      	strh	r0, [r3, #0]
 8002382:	4770      	bx	lr

08002384 <LcdWriteData>:
*
* Function description:
*   Writes a value to a display register
*/
static void LcdWriteData(U16 Data) {
  LCD_DATA_ADDRESS = Data;
 8002384:	4b01      	ldr	r3, [pc, #4]	; (800238c <LcdWriteData+0x8>)
 8002386:	8018      	strh	r0, [r3, #0]
 8002388:	4770      	bx	lr
 800238a:	bf00      	nop
 800238c:	60020000 	.word	0x60020000

08002390 <LcdWriteDataMultiple>:
*       LcdWriteDataMultiple
*
* Function description:
*   Writes multiple values to a display register.
*/
static void LcdWriteDataMultiple(U16 * pData, int NumItems) {
 8002390:	eb00 0141 	add.w	r1, r0, r1, lsl #1
  while (NumItems--) {
 8002394:	4288      	cmp	r0, r1
 8002396:	d004      	beq.n	80023a2 <LcdWriteDataMultiple+0x12>
    LCD_DATA_ADDRESS = *pData++;
 8002398:	4b02      	ldr	r3, [pc, #8]	; (80023a4 <LcdWriteDataMultiple+0x14>)
 800239a:	f830 2b02 	ldrh.w	r2, [r0], #2
 800239e:	801a      	strh	r2, [r3, #0]
 80023a0:	e7f8      	b.n	8002394 <LcdWriteDataMultiple+0x4>
  }
}
 80023a2:	4770      	bx	lr
 80023a4:	60020000 	.word	0x60020000

080023a8 <LcdReadDataMultiple>:
*       LcdReadDataMultiple
*
* Function description:
*   Reads multiple values from a display register.
*/
static void LcdReadDataMultiple(U16 * pData, int NumItems) {
 80023a8:	eb00 0141 	add.w	r1, r0, r1, lsl #1
  while (NumItems--) {
 80023ac:	4288      	cmp	r0, r1
 80023ae:	d004      	beq.n	80023ba <LcdReadDataMultiple+0x12>
    *pData++ = LCD_DATA_ADDRESS;
 80023b0:	4b02      	ldr	r3, [pc, #8]	; (80023bc <LcdReadDataMultiple+0x14>)
 80023b2:	881b      	ldrh	r3, [r3, #0]
 80023b4:	f820 3b02 	strh.w	r3, [r0], #2
 80023b8:	e7f8      	b.n	80023ac <LcdReadDataMultiple+0x4>
  }
}
 80023ba:	4770      	bx	lr
 80023bc:	60020000 	.word	0x60020000

080023c0 <LCD_X_Config>:
*   Called during the initialization process in order to set up the
*   display driver configuration.
*
*/

void LCD_X_Config(void) {
 80023c0:	b510      	push	{r4, lr}
 80023c2:	b0a0      	sub	sp, #128	; 0x80
  GUI_DEVICE * pDevice;
  CONFIG_FLEXCOLOR Config = {0};
 80023c4:	a801      	add	r0, sp, #4
 80023c6:	2100      	movs	r1, #0
 80023c8:	2214      	movs	r2, #20
 80023ca:	f011 fb2d 	bl	8013a28 <memset>
  GUI_PORT_API PortAPI = {0};
 80023ce:	a806      	add	r0, sp, #24
 80023d0:	2100      	movs	r1, #0
 80023d2:	2268      	movs	r2, #104	; 0x68
 80023d4:	f011 fb28 	bl	8013a28 <memset>
  //
  // Set display driver and color conversion
  //
  pDevice = GUI_DEVICE_CreateAndLink(GUIDRV_FLEXCOLOR, GUICC_565, 0, 0);
 80023d8:	2200      	movs	r2, #0
 80023da:	4613      	mov	r3, r2
 80023dc:	4913      	ldr	r1, [pc, #76]	; (800242c <LCD_X_Config+0x6c>)
 80023de:	4814      	ldr	r0, [pc, #80]	; (8002430 <LCD_X_Config+0x70>)
 80023e0:	f00b fdc6 	bl	800df70 <GUI_DEVICE_CreateAndLink>
  //
  // Display driver configuration, required for Lin-driver
  //
  LCD_SetSizeEx (0, XSIZE_PHYS , YSIZE_PHYS);
 80023e4:	21f0      	movs	r1, #240	; 0xf0
  CONFIG_FLEXCOLOR Config = {0};
  GUI_PORT_API PortAPI = {0};
  //
  // Set display driver and color conversion
  //
  pDevice = GUI_DEVICE_CreateAndLink(GUIDRV_FLEXCOLOR, GUICC_565, 0, 0);
 80023e6:	4604      	mov	r4, r0
  //
  // Display driver configuration, required for Lin-driver
  //
  LCD_SetSizeEx (0, XSIZE_PHYS , YSIZE_PHYS);
 80023e8:	f44f 72a0 	mov.w	r2, #320	; 0x140
 80023ec:	2000      	movs	r0, #0
 80023ee:	f009 fc4a 	bl	800bc86 <LCD_SetSizeEx>
  LCD_SetVSizeEx(0, VXSIZE_PHYS, VYSIZE_PHYS);
 80023f2:	f44f 72a0 	mov.w	r2, #320	; 0x140
 80023f6:	21f0      	movs	r1, #240	; 0xf0
 80023f8:	2000      	movs	r0, #0
 80023fa:	f009 fc2d 	bl	800bc58 <LCD_SetVSizeEx>

  //
  // Orientation
  //
  Config.Orientation = GUI_SWAP_XY | GUI_MIRROR_Y; // Landscape
 80023fe:	2306      	movs	r3, #6

  GUIDRV_FlexColor_Config(pDevice, &Config);
 8002400:	4620      	mov	r0, r4
 8002402:	a901      	add	r1, sp, #4
  LCD_SetVSizeEx(0, VXSIZE_PHYS, VYSIZE_PHYS);

  //
  // Orientation
  //
  Config.Orientation = GUI_SWAP_XY | GUI_MIRROR_Y; // Landscape
 8002404:	9303      	str	r3, [sp, #12]

  GUIDRV_FlexColor_Config(pDevice, &Config);
 8002406:	f009 fbc6 	bl	800bb96 <GUIDRV_FlexColor_Config>
  //
  // Set controller and operation mode
  //
  PortAPI.pfWrite16_A0  = LcdWriteReg;
 800240a:	4b0a      	ldr	r3, [pc, #40]	; (8002434 <LCD_X_Config+0x74>)
 800240c:	930e      	str	r3, [sp, #56]	; 0x38
  PortAPI.pfWrite16_A1  = LcdWriteData;
 800240e:	4b0a      	ldr	r3, [pc, #40]	; (8002438 <LCD_X_Config+0x78>)
 8002410:	930f      	str	r3, [sp, #60]	; 0x3c
  PortAPI.pfWriteM16_A1 = LcdWriteDataMultiple;
 8002412:	4b0a      	ldr	r3, [pc, #40]	; (800243c <LCD_X_Config+0x7c>)
 8002414:	9311      	str	r3, [sp, #68]	; 0x44
  PortAPI.pfReadM16_A1  = LcdReadDataMultiple;
 8002416:	4b0a      	ldr	r3, [pc, #40]	; (8002440 <LCD_X_Config+0x80>)
 8002418:	9315      	str	r3, [sp, #84]	; 0x54
  GUIDRV_FlexColor_SetFunc(pDevice, &PortAPI, GUIDRV_FLEXCOLOR_F66709, GUIDRV_FLEXCOLOR_M16C0B16);
 800241a:	4620      	mov	r0, r4
 800241c:	a906      	add	r1, sp, #24
 800241e:	4a09      	ldr	r2, [pc, #36]	; (8002444 <LCD_X_Config+0x84>)
 8002420:	4b09      	ldr	r3, [pc, #36]	; (8002448 <LCD_X_Config+0x88>)
 8002422:	f009 fbd6 	bl	800bbd2 <GUIDRV_FlexColor_SetFunc>
}
 8002426:	b020      	add	sp, #128	; 0x80
 8002428:	bd10      	pop	{r4, pc}
 800242a:	bf00      	nop
 800242c:	0802d180 	.word	0x0802d180
 8002430:	0802d010 	.word	0x0802d010
 8002434:	0800237d 	.word	0x0800237d
 8002438:	08002385 	.word	0x08002385
 800243c:	08002391 	.word	0x08002391
 8002440:	080023a9 	.word	0x080023a9
 8002444:	0800aefd 	.word	0x0800aefd
 8002448:	0800b599 	.word	0x0800b599

0800244c <LCD_X_DisplayDriver>:
int LCD_X_DisplayDriver(unsigned LayerIndex, unsigned Cmd, void * pData) {
  int r;
  (void) LayerIndex;
  (void) pData;

  switch (Cmd) {
 800244c:	2901      	cmp	r1, #1
  }
  default:
    r = -1;
  }
  return r;
}
 800244e:	bf14      	ite	ne
 8002450:	f04f 30ff 	movne.w	r0, #4294967295
 8002454:	2000      	moveq	r0, #0
 8002456:	4770      	bx	lr

08002458 <RCC_AHB1PeriphClockCmd>:
  * @retval None
  */
void RCC_AHB1PeriphClockCmd(uint32_t RCC_AHB1Periph, FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_RCC_AHB1_CLOCK_PERIPH(RCC_AHB1Periph));
 8002458:	4b0e      	ldr	r3, [pc, #56]	; (8002494 <RCC_AHB1PeriphClockCmd+0x3c>)
 800245a:	4003      	ands	r3, r0
  * @param  NewState: new state of the specified peripheral clock.
  *          This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_AHB1PeriphClockCmd(uint32_t RCC_AHB1Periph, FunctionalState NewState)
{
 800245c:	b570      	push	{r4, r5, r6, lr}
 800245e:	4605      	mov	r5, r0
 8002460:	460e      	mov	r6, r1
  /* Check the parameters */
  assert_param(IS_RCC_AHB1_CLOCK_PERIPH(RCC_AHB1Periph));
 8002462:	b903      	cbnz	r3, 8002466 <RCC_AHB1PeriphClockCmd+0xe>
 8002464:	b920      	cbnz	r0, 8002470 <RCC_AHB1PeriphClockCmd+0x18>
 8002466:	480c      	ldr	r0, [pc, #48]	; (8002498 <RCC_AHB1PeriphClockCmd+0x40>)
 8002468:	f44f 6188 	mov.w	r1, #1088	; 0x440
 800246c:	f7ff f83c 	bl	80014e8 <assert_failed>

  assert_param(IS_FUNCTIONAL_STATE(NewState));
 8002470:	2e01      	cmp	r6, #1
 8002472:	4c0a      	ldr	r4, [pc, #40]	; (800249c <RCC_AHB1PeriphClockCmd+0x44>)
 8002474:	d905      	bls.n	8002482 <RCC_AHB1PeriphClockCmd+0x2a>
 8002476:	4808      	ldr	r0, [pc, #32]	; (8002498 <RCC_AHB1PeriphClockCmd+0x40>)
 8002478:	f240 4142 	movw	r1, #1090	; 0x442
 800247c:	f7ff f834 	bl	80014e8 <assert_failed>
 8002480:	e000      	b.n	8002484 <RCC_AHB1PeriphClockCmd+0x2c>
  if (NewState != DISABLE)
 8002482:	b116      	cbz	r6, 800248a <RCC_AHB1PeriphClockCmd+0x32>
  {
    RCC->AHB1ENR |= RCC_AHB1Periph;
 8002484:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002486:	431d      	orrs	r5, r3
 8002488:	e002      	b.n	8002490 <RCC_AHB1PeriphClockCmd+0x38>
  }
  else
  {
    RCC->AHB1ENR &= ~RCC_AHB1Periph;
 800248a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800248c:	ea23 0505 	bic.w	r5, r3, r5
 8002490:	6325      	str	r5, [r4, #48]	; 0x30
 8002492:	bd70      	pop	{r4, r5, r6, pc}
 8002494:	818bee00 	.word	0x818bee00
 8002498:	08022200 	.word	0x08022200
 800249c:	40023800 	.word	0x40023800

080024a0 <GUI_X_Config>:
*   Called during the initialization process in order to set up the
*   available memory for the GUI.
*/
void GUI_X_Config(void)
{
  GUI_ALLOC_AssignMemory(extMem, GUI_NUMBYTES);
 80024a0:	4802      	ldr	r0, [pc, #8]	; (80024ac <GUI_X_Config+0xc>)
 80024a2:	f44f 4148 	mov.w	r1, #51200	; 0xc800
 80024a6:	f00c ba39 	b.w	800e91c <GUI_ALLOC_AssignMemory>
 80024aa:	bf00      	nop
 80024ac:	20000b74 	.word	0x20000b74

080024b0 <GUI_X_Init>:
*     GUI_X_Init() is called from GUI_Init is a possibility to init
*     some hardware which needs to be up and running before the GUI.
*     If not required, leave this routine blank.
*/

void GUI_X_Init(void) {}
 80024b0:	4770      	bx	lr
	...

080024b4 <HAL_RCC_OscConfig>:
  *         contains the configuration information for the RCC Oscillators.
  * @note   The PLL is not disabled when used as system clock.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80024b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  uint32_t tickstart = 0;  
 
  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 80024b6:	6803      	ldr	r3, [r0, #0]
 80024b8:	2b0f      	cmp	r3, #15
  *         contains the configuration information for the RCC Oscillators.
  * @note   The PLL is not disabled when used as system clock.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80024ba:	4604      	mov	r4, r0
  uint32_t tickstart = 0;  
 
  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 80024bc:	d904      	bls.n	80024c8 <HAL_RCC_OscConfig+0x14>
 80024be:	48a2      	ldr	r0, [pc, #648]	; (8002748 <HAL_RCC_OscConfig+0x294>)
 80024c0:	f240 1115 	movw	r1, #277	; 0x115
 80024c4:	f7ff f810 	bl	80014e8 <assert_failed>
  /*------------------------------- HSE Configuration ------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80024c8:	6823      	ldr	r3, [r4, #0]
 80024ca:	07d8      	lsls	r0, r3, #31
 80024cc:	d403      	bmi.n	80024d6 <HAL_RCC_OscConfig+0x22>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80024ce:	6823      	ldr	r3, [r4, #0]
 80024d0:	0799      	lsls	r1, r3, #30
 80024d2:	d456      	bmi.n	8002582 <HAL_RCC_OscConfig+0xce>
 80024d4:	e0b7      	b.n	8002646 <HAL_RCC_OscConfig+0x192>
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 80024d6:	6863      	ldr	r3, [r4, #4]
 80024d8:	2b01      	cmp	r3, #1
 80024da:	d906      	bls.n	80024ea <HAL_RCC_OscConfig+0x36>
 80024dc:	2b05      	cmp	r3, #5
 80024de:	d004      	beq.n	80024ea <HAL_RCC_OscConfig+0x36>
 80024e0:	4899      	ldr	r0, [pc, #612]	; (8002748 <HAL_RCC_OscConfig+0x294>)
 80024e2:	f44f 718d 	mov.w	r1, #282	; 0x11a
 80024e6:	f7fe ffff 	bl	80014e8 <assert_failed>
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80024ea:	4b98      	ldr	r3, [pc, #608]	; (800274c <HAL_RCC_OscConfig+0x298>)
 80024ec:	689a      	ldr	r2, [r3, #8]
 80024ee:	f002 020c 	and.w	r2, r2, #12
 80024f2:	2a04      	cmp	r2, #4
 80024f4:	d007      	beq.n	8002506 <HAL_RCC_OscConfig+0x52>
 80024f6:	689a      	ldr	r2, [r3, #8]
 80024f8:	f002 020c 	and.w	r2, r2, #12
 80024fc:	2a08      	cmp	r2, #8
 80024fe:	d10b      	bne.n	8002518 <HAL_RCC_OscConfig+0x64>
 8002500:	685b      	ldr	r3, [r3, #4]
 8002502:	025a      	lsls	r2, r3, #9
 8002504:	d508      	bpl.n	8002518 <HAL_RCC_OscConfig+0x64>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8002506:	4b91      	ldr	r3, [pc, #580]	; (800274c <HAL_RCC_OscConfig+0x298>)
 8002508:	681b      	ldr	r3, [r3, #0]
 800250a:	039b      	lsls	r3, r3, #14
 800250c:	d5df      	bpl.n	80024ce <HAL_RCC_OscConfig+0x1a>
 800250e:	6863      	ldr	r3, [r4, #4]
 8002510:	2b00      	cmp	r3, #0
 8002512:	d1dc      	bne.n	80024ce <HAL_RCC_OscConfig+0x1a>
      {
        return HAL_ERROR;
 8002514:	2001      	movs	r0, #1
 8002516:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      }
    }
    else
    {
      /* Reset HSEON and HSEBYP bits before configuring the HSE --------------*/
      __HAL_RCC_HSE_CONFIG(RCC_HSE_OFF);
 8002518:	4d8d      	ldr	r5, [pc, #564]	; (8002750 <HAL_RCC_OscConfig+0x29c>)
 800251a:	2300      	movs	r3, #0
 800251c:	702b      	strb	r3, [r5, #0]
      
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800251e:	f002 fba5 	bl	8004c6c <HAL_GetTick>
 8002522:	4606      	mov	r6, r0
      
      /* Wait till HSE is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8002524:	4b89      	ldr	r3, [pc, #548]	; (800274c <HAL_RCC_OscConfig+0x298>)
 8002526:	681b      	ldr	r3, [r3, #0]
 8002528:	039f      	lsls	r7, r3, #14
 800252a:	d508      	bpl.n	800253e <HAL_RCC_OscConfig+0x8a>
      {
        if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800252c:	f002 fb9e 	bl	8004c6c <HAL_GetTick>
 8002530:	f241 3388 	movw	r3, #5000	; 0x1388
 8002534:	1b80      	subs	r0, r0, r6
 8002536:	4298      	cmp	r0, r3
 8002538:	d9f4      	bls.n	8002524 <HAL_RCC_OscConfig+0x70>
        {
          return HAL_TIMEOUT;
 800253a:	2003      	movs	r0, #3
 800253c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        }       
      }
      
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800253e:	7923      	ldrb	r3, [r4, #4]
 8002540:	702b      	strb	r3, [r5, #0]
      
      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8002542:	6863      	ldr	r3, [r4, #4]
 8002544:	b173      	cbz	r3, 8002564 <HAL_RCC_OscConfig+0xb0>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002546:	f002 fb91 	bl	8004c6c <HAL_GetTick>
 800254a:	4605      	mov	r5, r0
      
        /* Wait till HSE is ready */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800254c:	4b7f      	ldr	r3, [pc, #508]	; (800274c <HAL_RCC_OscConfig+0x298>)
 800254e:	681b      	ldr	r3, [r3, #0]
 8002550:	0398      	lsls	r0, r3, #14
 8002552:	d4bc      	bmi.n	80024ce <HAL_RCC_OscConfig+0x1a>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8002554:	f002 fb8a 	bl	8004c6c <HAL_GetTick>
 8002558:	f241 3388 	movw	r3, #5000	; 0x1388
 800255c:	1b40      	subs	r0, r0, r5
 800255e:	4298      	cmp	r0, r3
 8002560:	d9f4      	bls.n	800254c <HAL_RCC_OscConfig+0x98>
 8002562:	e7ea      	b.n	800253a <HAL_RCC_OscConfig+0x86>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002564:	f002 fb82 	bl	8004c6c <HAL_GetTick>
 8002568:	4605      	mov	r5, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800256a:	4b78      	ldr	r3, [pc, #480]	; (800274c <HAL_RCC_OscConfig+0x298>)
 800256c:	681b      	ldr	r3, [r3, #0]
 800256e:	0399      	lsls	r1, r3, #14
 8002570:	d5ad      	bpl.n	80024ce <HAL_RCC_OscConfig+0x1a>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8002572:	f002 fb7b 	bl	8004c6c <HAL_GetTick>
 8002576:	f241 3388 	movw	r3, #5000	; 0x1388
 800257a:	1b40      	subs	r0, r0, r5
 800257c:	4298      	cmp	r0, r3
 800257e:	d9f4      	bls.n	800256a <HAL_RCC_OscConfig+0xb6>
 8002580:	e7db      	b.n	800253a <HAL_RCC_OscConfig+0x86>
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 8002582:	68e3      	ldr	r3, [r4, #12]
 8002584:	2b01      	cmp	r3, #1
 8002586:	d904      	bls.n	8002592 <HAL_RCC_OscConfig+0xde>
 8002588:	486f      	ldr	r0, [pc, #444]	; (8002748 <HAL_RCC_OscConfig+0x294>)
 800258a:	f44f 71ad 	mov.w	r1, #346	; 0x15a
 800258e:	f7fe ffab 	bl	80014e8 <assert_failed>
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 8002592:	6923      	ldr	r3, [r4, #16]
 8002594:	2b1f      	cmp	r3, #31
 8002596:	d904      	bls.n	80025a2 <HAL_RCC_OscConfig+0xee>
 8002598:	486b      	ldr	r0, [pc, #428]	; (8002748 <HAL_RCC_OscConfig+0x294>)
 800259a:	f240 115b 	movw	r1, #347	; 0x15b
 800259e:	f7fe ffa3 	bl	80014e8 <assert_failed>
    
    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */ 
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80025a2:	4b6a      	ldr	r3, [pc, #424]	; (800274c <HAL_RCC_OscConfig+0x298>)
 80025a4:	689a      	ldr	r2, [r3, #8]
 80025a6:	f012 0f0c 	tst.w	r2, #12
 80025aa:	d007      	beq.n	80025bc <HAL_RCC_OscConfig+0x108>
 80025ac:	689a      	ldr	r2, [r3, #8]
 80025ae:	f002 020c 	and.w	r2, r2, #12
 80025b2:	2a08      	cmp	r2, #8
 80025b4:	d118      	bne.n	80025e8 <HAL_RCC_OscConfig+0x134>
 80025b6:	685b      	ldr	r3, [r3, #4]
 80025b8:	025a      	lsls	r2, r3, #9
 80025ba:	d415      	bmi.n	80025e8 <HAL_RCC_OscConfig+0x134>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80025bc:	4a63      	ldr	r2, [pc, #396]	; (800274c <HAL_RCC_OscConfig+0x298>)
 80025be:	6813      	ldr	r3, [r2, #0]
 80025c0:	079b      	lsls	r3, r3, #30
 80025c2:	d502      	bpl.n	80025ca <HAL_RCC_OscConfig+0x116>
 80025c4:	68e3      	ldr	r3, [r4, #12]
 80025c6:	2b01      	cmp	r3, #1
 80025c8:	d1a4      	bne.n	8002514 <HAL_RCC_OscConfig+0x60>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80025ca:	6811      	ldr	r1, [r2, #0]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
{
  uint32_t result;

   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80025cc:	23f8      	movs	r3, #248	; 0xf8
 80025ce:	fa93 f3a3 	rbit	r3, r3
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 80025d2:	fab3 f383 	clz	r3, r3
 80025d6:	6920      	ldr	r0, [r4, #16]
 80025d8:	b2db      	uxtb	r3, r3
 80025da:	4098      	lsls	r0, r3
 80025dc:	f021 01f8 	bic.w	r1, r1, #248	; 0xf8
 80025e0:	ea40 0301 	orr.w	r3, r0, r1
 80025e4:	6013      	str	r3, [r2, #0]
    
    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */ 
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80025e6:	e02e      	b.n	8002646 <HAL_RCC_OscConfig+0x192>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 80025e8:	68e2      	ldr	r2, [r4, #12]
 80025ea:	4b5a      	ldr	r3, [pc, #360]	; (8002754 <HAL_RCC_OscConfig+0x2a0>)
 80025ec:	b1ea      	cbz	r2, 800262a <HAL_RCC_OscConfig+0x176>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 80025ee:	2201      	movs	r2, #1
 80025f0:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80025f2:	f002 fb3b 	bl	8004c6c <HAL_GetTick>
 80025f6:	4605      	mov	r5, r0

        /* Wait till HSI is ready */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80025f8:	4954      	ldr	r1, [pc, #336]	; (800274c <HAL_RCC_OscConfig+0x298>)
 80025fa:	680b      	ldr	r3, [r1, #0]
 80025fc:	079f      	lsls	r7, r3, #30
 80025fe:	d405      	bmi.n	800260c <HAL_RCC_OscConfig+0x158>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002600:	f002 fb34 	bl	8004c6c <HAL_GetTick>
 8002604:	1b40      	subs	r0, r0, r5
 8002606:	2864      	cmp	r0, #100	; 0x64
 8002608:	d9f6      	bls.n	80025f8 <HAL_RCC_OscConfig+0x144>
 800260a:	e796      	b.n	800253a <HAL_RCC_OscConfig+0x86>
            return HAL_TIMEOUT;
          }       
        } 
                
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800260c:	680a      	ldr	r2, [r1, #0]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
{
  uint32_t result;

   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800260e:	23f8      	movs	r3, #248	; 0xf8
 8002610:	fa93 f3a3 	rbit	r3, r3
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 8002614:	fab3 f383 	clz	r3, r3
 8002618:	6920      	ldr	r0, [r4, #16]
 800261a:	b2db      	uxtb	r3, r3
 800261c:	4098      	lsls	r0, r3
 800261e:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 8002622:	ea40 0302 	orr.w	r3, r0, r2
 8002626:	600b      	str	r3, [r1, #0]
 8002628:	e00d      	b.n	8002646 <HAL_RCC_OscConfig+0x192>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 800262a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800262c:	f002 fb1e 	bl	8004c6c <HAL_GetTick>
 8002630:	4605      	mov	r5, r0
      
        /* Wait till HSI is ready */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8002632:	4b46      	ldr	r3, [pc, #280]	; (800274c <HAL_RCC_OscConfig+0x298>)
 8002634:	681b      	ldr	r3, [r3, #0]
 8002636:	079e      	lsls	r6, r3, #30
 8002638:	d505      	bpl.n	8002646 <HAL_RCC_OscConfig+0x192>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800263a:	f002 fb17 	bl	8004c6c <HAL_GetTick>
 800263e:	1b40      	subs	r0, r0, r5
 8002640:	2864      	cmp	r0, #100	; 0x64
 8002642:	d9f6      	bls.n	8002632 <HAL_RCC_OscConfig+0x17e>
 8002644:	e779      	b.n	800253a <HAL_RCC_OscConfig+0x86>
        } 
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8002646:	6823      	ldr	r3, [r4, #0]
 8002648:	071d      	lsls	r5, r3, #28
 800264a:	d403      	bmi.n	8002654 <HAL_RCC_OscConfig+0x1a0>
        }       
      } 
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800264c:	6823      	ldr	r3, [r4, #0]
 800264e:	0758      	lsls	r0, r3, #29
 8002650:	d428      	bmi.n	80026a4 <HAL_RCC_OscConfig+0x1f0>
 8002652:	e052      	b.n	80026fa <HAL_RCC_OscConfig+0x246>
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 8002654:	6963      	ldr	r3, [r4, #20]
 8002656:	2b01      	cmp	r3, #1
 8002658:	d904      	bls.n	8002664 <HAL_RCC_OscConfig+0x1b0>
 800265a:	483b      	ldr	r0, [pc, #236]	; (8002748 <HAL_RCC_OscConfig+0x294>)
 800265c:	f44f 71cd 	mov.w	r1, #410	; 0x19a
 8002660:	f7fe ff42 	bl	80014e8 <assert_failed>

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8002664:	6962      	ldr	r2, [r4, #20]
 8002666:	4b3c      	ldr	r3, [pc, #240]	; (8002758 <HAL_RCC_OscConfig+0x2a4>)
 8002668:	b172      	cbz	r2, 8002688 <HAL_RCC_OscConfig+0x1d4>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 800266a:	2201      	movs	r2, #1
 800266c:	601a      	str	r2, [r3, #0]
      
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800266e:	f002 fafd 	bl	8004c6c <HAL_GetTick>
 8002672:	4605      	mov	r5, r0
      
      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8002674:	4b35      	ldr	r3, [pc, #212]	; (800274c <HAL_RCC_OscConfig+0x298>)
 8002676:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8002678:	0799      	lsls	r1, r3, #30
 800267a:	d4e7      	bmi.n	800264c <HAL_RCC_OscConfig+0x198>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800267c:	f002 faf6 	bl	8004c6c <HAL_GetTick>
 8002680:	1b40      	subs	r0, r0, r5
 8002682:	2864      	cmp	r0, #100	; 0x64
 8002684:	d9f6      	bls.n	8002674 <HAL_RCC_OscConfig+0x1c0>
 8002686:	e758      	b.n	800253a <HAL_RCC_OscConfig+0x86>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8002688:	601a      	str	r2, [r3, #0]
      
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800268a:	f002 faef 	bl	8004c6c <HAL_GetTick>
 800268e:	4605      	mov	r5, r0
      
      /* Wait till LSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8002690:	4b2e      	ldr	r3, [pc, #184]	; (800274c <HAL_RCC_OscConfig+0x298>)
 8002692:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8002694:	079a      	lsls	r2, r3, #30
 8002696:	d5d9      	bpl.n	800264c <HAL_RCC_OscConfig+0x198>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8002698:	f002 fae8 	bl	8004c6c <HAL_GetTick>
 800269c:	1b40      	subs	r0, r0, r5
 800269e:	2864      	cmp	r0, #100	; 0x64
 80026a0:	d9f6      	bls.n	8002690 <HAL_RCC_OscConfig+0x1dc>
 80026a2:	e74a      	b.n	800253a <HAL_RCC_OscConfig+0x86>
  }
  /*------------------------------ LSE Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 80026a4:	68a3      	ldr	r3, [r4, #8]
 80026a6:	2b01      	cmp	r3, #1
 80026a8:	d830      	bhi.n	800270c <HAL_RCC_OscConfig+0x258>
    
    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 80026aa:	4a28      	ldr	r2, [pc, #160]	; (800274c <HAL_RCC_OscConfig+0x298>)
 80026ac:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80026ae:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80026b2:	6413      	str	r3, [r2, #64]	; 0x40
    
    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 80026b4:	f5a2 32e4 	sub.w	r2, r2, #116736	; 0x1c800
 80026b8:	6813      	ldr	r3, [r2, #0]
 80026ba:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80026be:	6013      	str	r3, [r2, #0]
    
    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
 80026c0:	f002 fad4 	bl	8004c6c <HAL_GetTick>
 80026c4:	4605      	mov	r5, r0
    
    while((PWR->CR & PWR_CR_DBP) == RESET)
 80026c6:	4b25      	ldr	r3, [pc, #148]	; (800275c <HAL_RCC_OscConfig+0x2a8>)
 80026c8:	681b      	ldr	r3, [r3, #0]
 80026ca:	05db      	lsls	r3, r3, #23
 80026cc:	d526      	bpl.n	800271c <HAL_RCC_OscConfig+0x268>
        return HAL_TIMEOUT;
      }      
    }
    
    /* Reset LSEON and LSEBYP bits before configuring the LSE ----------------*/
    __HAL_RCC_LSE_CONFIG(RCC_LSE_OFF);
 80026ce:	4d24      	ldr	r5, [pc, #144]	; (8002760 <HAL_RCC_OscConfig+0x2ac>)
 80026d0:	2300      	movs	r3, #0
 80026d2:	702b      	strb	r3, [r5, #0]
    
    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80026d4:	f002 faca 	bl	8004c6c <HAL_GetTick>
 80026d8:	4606      	mov	r6, r0
    
    /* Wait till LSE is ready */  
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80026da:	4b1c      	ldr	r3, [pc, #112]	; (800274c <HAL_RCC_OscConfig+0x298>)
 80026dc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80026de:	079f      	lsls	r7, r3, #30
 80026e0:	d422      	bmi.n	8002728 <HAL_RCC_OscConfig+0x274>
        return HAL_TIMEOUT;
      }    
    } 
    
    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80026e2:	7a23      	ldrb	r3, [r4, #8]
 80026e4:	702b      	strb	r3, [r5, #0]
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) == RCC_LSE_ON)
 80026e6:	68a3      	ldr	r3, [r4, #8]
 80026e8:	2b01      	cmp	r3, #1
 80026ea:	d13b      	bne.n	8002764 <HAL_RCC_OscConfig+0x2b0>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80026ec:	f002 fabe 	bl	8004c6c <HAL_GetTick>
 80026f0:	4605      	mov	r5, r0
      
      /* Wait till LSE is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80026f2:	4b16      	ldr	r3, [pc, #88]	; (800274c <HAL_RCC_OscConfig+0x298>)
 80026f4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80026f6:	079e      	lsls	r6, r3, #30
 80026f8:	d51e      	bpl.n	8002738 <HAL_RCC_OscConfig+0x284>
      }
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 80026fa:	69a3      	ldr	r3, [r4, #24]
 80026fc:	2b02      	cmp	r3, #2
 80026fe:	d940      	bls.n	8002782 <HAL_RCC_OscConfig+0x2ce>
 8002700:	4811      	ldr	r0, [pc, #68]	; (8002748 <HAL_RCC_OscConfig+0x294>)
 8002702:	f44f 7102 	mov.w	r1, #520	; 0x208
 8002706:	f7fe feef 	bl	80014e8 <assert_failed>
 800270a:	e03a      	b.n	8002782 <HAL_RCC_OscConfig+0x2ce>
  }
  /*------------------------------ LSE Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 800270c:	2b05      	cmp	r3, #5
 800270e:	d0cc      	beq.n	80026aa <HAL_RCC_OscConfig+0x1f6>
 8002710:	480d      	ldr	r0, [pc, #52]	; (8002748 <HAL_RCC_OscConfig+0x294>)
 8002712:	f44f 71e2 	mov.w	r1, #452	; 0x1c4
 8002716:	f7fe fee7 	bl	80014e8 <assert_failed>
 800271a:	e7c6      	b.n	80026aa <HAL_RCC_OscConfig+0x1f6>
    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
    
    while((PWR->CR & PWR_CR_DBP) == RESET)
    {
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800271c:	f002 faa6 	bl	8004c6c <HAL_GetTick>
 8002720:	1b40      	subs	r0, r0, r5
 8002722:	2864      	cmp	r0, #100	; 0x64
 8002724:	d9cf      	bls.n	80026c6 <HAL_RCC_OscConfig+0x212>
 8002726:	e708      	b.n	800253a <HAL_RCC_OscConfig+0x86>
    tickstart = HAL_GetTick();
    
    /* Wait till LSE is ready */  
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
    {
      if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002728:	f002 faa0 	bl	8004c6c <HAL_GetTick>
 800272c:	f241 3388 	movw	r3, #5000	; 0x1388
 8002730:	1b80      	subs	r0, r0, r6
 8002732:	4298      	cmp	r0, r3
 8002734:	d9d1      	bls.n	80026da <HAL_RCC_OscConfig+0x226>
 8002736:	e700      	b.n	800253a <HAL_RCC_OscConfig+0x86>
      tickstart = HAL_GetTick();
      
      /* Wait till LSE is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002738:	f002 fa98 	bl	8004c6c <HAL_GetTick>
 800273c:	f241 3388 	movw	r3, #5000	; 0x1388
 8002740:	1b40      	subs	r0, r0, r5
 8002742:	4298      	cmp	r0, r3
 8002744:	d9d5      	bls.n	80026f2 <HAL_RCC_OscConfig+0x23e>
 8002746:	e6f8      	b.n	800253a <HAL_RCC_OscConfig+0x86>
 8002748:	0802222d 	.word	0x0802222d
 800274c:	40023800 	.word	0x40023800
 8002750:	40023802 	.word	0x40023802
 8002754:	42470000 	.word	0x42470000
 8002758:	42470e80 	.word	0x42470e80
 800275c:	40007000 	.word	0x40007000
 8002760:	40023870 	.word	0x40023870
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8002764:	f002 fa82 	bl	8004c6c <HAL_GetTick>
 8002768:	4605      	mov	r5, r0
      
      /* Wait till LSE is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800276a:	4b50      	ldr	r3, [pc, #320]	; (80028ac <HAL_RCC_OscConfig+0x3f8>)
 800276c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800276e:	0798      	lsls	r0, r3, #30
 8002770:	d5c3      	bpl.n	80026fa <HAL_RCC_OscConfig+0x246>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002772:	f002 fa7b 	bl	8004c6c <HAL_GetTick>
 8002776:	f241 3388 	movw	r3, #5000	; 0x1388
 800277a:	1b40      	subs	r0, r0, r5
 800277c:	4298      	cmp	r0, r3
 800277e:	d9f4      	bls.n	800276a <HAL_RCC_OscConfig+0x2b6>
 8002780:	e6db      	b.n	800253a <HAL_RCC_OscConfig+0x86>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8002782:	69a2      	ldr	r2, [r4, #24]
 8002784:	b90a      	cbnz	r2, 800278a <HAL_RCC_OscConfig+0x2d6>
    else
    {
      return HAL_ERROR;
    }
  }
  return HAL_OK;
 8002786:	2000      	movs	r0, #0
 8002788:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800278a:	4b48      	ldr	r3, [pc, #288]	; (80028ac <HAL_RCC_OscConfig+0x3f8>)
 800278c:	689b      	ldr	r3, [r3, #8]
 800278e:	f003 030c 	and.w	r3, r3, #12
 8002792:	2b08      	cmp	r3, #8
 8002794:	f43f aebe 	beq.w	8002514 <HAL_RCC_OscConfig+0x60>
    { 
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8002798:	2a02      	cmp	r2, #2
 800279a:	4d45      	ldr	r5, [pc, #276]	; (80028b0 <HAL_RCC_OscConfig+0x3fc>)
 800279c:	d175      	bne.n	800288a <HAL_RCC_OscConfig+0x3d6>
      {
        /* Check the parameters */
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 800279e:	69e3      	ldr	r3, [r4, #28]
 80027a0:	f433 0380 	bics.w	r3, r3, #4194304	; 0x400000
 80027a4:	d004      	beq.n	80027b0 <HAL_RCC_OscConfig+0x2fc>
 80027a6:	4843      	ldr	r0, [pc, #268]	; (80028b4 <HAL_RCC_OscConfig+0x400>)
 80027a8:	f240 2111 	movw	r1, #529	; 0x211
 80027ac:	f7fe fe9c 	bl	80014e8 <assert_failed>
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 80027b0:	6a23      	ldr	r3, [r4, #32]
 80027b2:	2b3f      	cmp	r3, #63	; 0x3f
 80027b4:	d904      	bls.n	80027c0 <HAL_RCC_OscConfig+0x30c>
 80027b6:	483f      	ldr	r0, [pc, #252]	; (80028b4 <HAL_RCC_OscConfig+0x400>)
 80027b8:	f240 2112 	movw	r1, #530	; 0x212
 80027bc:	f7fe fe94 	bl	80014e8 <assert_failed>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 80027c0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80027c2:	3bc0      	subs	r3, #192	; 0xc0
 80027c4:	2bf0      	cmp	r3, #240	; 0xf0
 80027c6:	d904      	bls.n	80027d2 <HAL_RCC_OscConfig+0x31e>
 80027c8:	483a      	ldr	r0, [pc, #232]	; (80028b4 <HAL_RCC_OscConfig+0x400>)
 80027ca:	f240 2113 	movw	r1, #531	; 0x213
 80027ce:	f7fe fe8b 	bl	80014e8 <assert_failed>
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 80027d2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80027d4:	f023 0204 	bic.w	r2, r3, #4
 80027d8:	2a02      	cmp	r2, #2
 80027da:	d008      	beq.n	80027ee <HAL_RCC_OscConfig+0x33a>
 80027dc:	2b04      	cmp	r3, #4
 80027de:	d006      	beq.n	80027ee <HAL_RCC_OscConfig+0x33a>
 80027e0:	2b08      	cmp	r3, #8
 80027e2:	d004      	beq.n	80027ee <HAL_RCC_OscConfig+0x33a>
 80027e4:	4833      	ldr	r0, [pc, #204]	; (80028b4 <HAL_RCC_OscConfig+0x400>)
 80027e6:	f44f 7105 	mov.w	r1, #532	; 0x214
 80027ea:	f7fe fe7d 	bl	80014e8 <assert_failed>
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 80027ee:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80027f0:	3b04      	subs	r3, #4
 80027f2:	2b0b      	cmp	r3, #11
 80027f4:	d904      	bls.n	8002800 <HAL_RCC_OscConfig+0x34c>
 80027f6:	482f      	ldr	r0, [pc, #188]	; (80028b4 <HAL_RCC_OscConfig+0x400>)
 80027f8:	f240 2115 	movw	r1, #533	; 0x215
 80027fc:	f7fe fe74 	bl	80014e8 <assert_failed>
        
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8002800:	2300      	movs	r3, #0
 8002802:	602b      	str	r3, [r5, #0]
        
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002804:	f002 fa32 	bl	8004c6c <HAL_GetTick>
 8002808:	4607      	mov	r7, r0
        
        /* Wait till PLL is ready */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800280a:	4e28      	ldr	r6, [pc, #160]	; (80028ac <HAL_RCC_OscConfig+0x3f8>)
 800280c:	6833      	ldr	r3, [r6, #0]
 800280e:	0199      	lsls	r1, r3, #6
 8002810:	d505      	bpl.n	800281e <HAL_RCC_OscConfig+0x36a>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8002812:	f002 fa2b 	bl	8004c6c <HAL_GetTick>
 8002816:	1bc0      	subs	r0, r0, r7
 8002818:	2864      	cmp	r0, #100	; 0x64
 800281a:	d9f6      	bls.n	800280a <HAL_RCC_OscConfig+0x356>
 800281c:	e68d      	b.n	800253a <HAL_RCC_OscConfig+0x86>
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
{
  uint32_t result;

   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800281e:	f647 70c0 	movw	r0, #32704	; 0x7fc0
 8002822:	fa90 f0a0 	rbit	r0, r0
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 8002826:	fab0 f080 	clz	r0, r0
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
{
  uint32_t result;

   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800282a:	f44f 3140 	mov.w	r1, #196608	; 0x30000
 800282e:	fa91 f1a1 	rbit	r1, r1
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 8002832:	fab1 f181 	clz	r1, r1
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
{
  uint32_t result;

   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002836:	f04f 6270 	mov.w	r2, #251658240	; 0xf000000
 800283a:	fa92 f2a2 	rbit	r2, r2
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 800283e:	fab2 f282 	clz	r2, r2
 8002842:	6a27      	ldr	r7, [r4, #32]
 8002844:	69e3      	ldr	r3, [r4, #28]
 8002846:	433b      	orrs	r3, r7
 8002848:	f043 5700 	orr.w	r7, r3, #536870912	; 0x20000000
            return HAL_TIMEOUT;
          }
        }        

        /* Configure the main PLL clock source, multiplication and division factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 800284c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800284e:	b2c0      	uxtb	r0, r0
 8002850:	4083      	lsls	r3, r0
 8002852:	ea47 0003 	orr.w	r0, r7, r3
 8002856:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8002858:	085b      	lsrs	r3, r3, #1
 800285a:	b2c9      	uxtb	r1, r1
 800285c:	3b01      	subs	r3, #1
 800285e:	408b      	lsls	r3, r1
 8002860:	b2d1      	uxtb	r1, r2
 8002862:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8002864:	4303      	orrs	r3, r0
 8002866:	408a      	lsls	r2, r1
 8002868:	4313      	orrs	r3, r2
 800286a:	6073      	str	r3, [r6, #4]
                             RCC_OscInitStruct->PLL.PLLM,
                             RCC_OscInitStruct->PLL.PLLN,
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 800286c:	2301      	movs	r3, #1
 800286e:	602b      	str	r3, [r5, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002870:	f002 f9fc 	bl	8004c6c <HAL_GetTick>
 8002874:	4604      	mov	r4, r0
        
        /* Wait till PLL is ready */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8002876:	4b0d      	ldr	r3, [pc, #52]	; (80028ac <HAL_RCC_OscConfig+0x3f8>)
 8002878:	681b      	ldr	r3, [r3, #0]
 800287a:	019a      	lsls	r2, r3, #6
 800287c:	d483      	bmi.n	8002786 <HAL_RCC_OscConfig+0x2d2>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800287e:	f002 f9f5 	bl	8004c6c <HAL_GetTick>
 8002882:	1b00      	subs	r0, r0, r4
 8002884:	2864      	cmp	r0, #100	; 0x64
 8002886:	d9f6      	bls.n	8002876 <HAL_RCC_OscConfig+0x3c2>
 8002888:	e657      	b.n	800253a <HAL_RCC_OscConfig+0x86>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800288a:	2300      	movs	r3, #0
 800288c:	602b      	str	r3, [r5, #0]
 
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800288e:	f002 f9ed 	bl	8004c6c <HAL_GetTick>
 8002892:	4604      	mov	r4, r0
        
        /* Wait till PLL is ready */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8002894:	4b05      	ldr	r3, [pc, #20]	; (80028ac <HAL_RCC_OscConfig+0x3f8>)
 8002896:	681b      	ldr	r3, [r3, #0]
 8002898:	019b      	lsls	r3, r3, #6
 800289a:	f57f af74 	bpl.w	8002786 <HAL_RCC_OscConfig+0x2d2>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800289e:	f002 f9e5 	bl	8004c6c <HAL_GetTick>
 80028a2:	1b00      	subs	r0, r0, r4
 80028a4:	2864      	cmp	r0, #100	; 0x64
 80028a6:	d9f5      	bls.n	8002894 <HAL_RCC_OscConfig+0x3e0>
 80028a8:	e647      	b.n	800253a <HAL_RCC_OscConfig+0x86>
 80028aa:	bf00      	nop
 80028ac:	40023800 	.word	0x40023800
 80028b0:	42470060 	.word	0x42470060
 80028b4:	0802222d 	.word	0x0802222d

080028b8 <HAL_RCC_ClockConfig>:
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
  uint32_t tickstart = 0;   
 
  /* Check the parameters */
  assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 80028b8:	6803      	ldr	r3, [r0, #0]
 80028ba:	3b01      	subs	r3, #1
 80028bc:	2b0e      	cmp	r3, #14
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 80028be:	b570      	push	{r4, r5, r6, lr}
 80028c0:	4604      	mov	r4, r0
 80028c2:	460d      	mov	r5, r1
  uint32_t tickstart = 0;   
 
  /* Check the parameters */
  assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 80028c4:	d904      	bls.n	80028d0 <HAL_RCC_ClockConfig+0x18>
 80028c6:	48a5      	ldr	r0, [pc, #660]	; (8002b5c <HAL_RCC_ClockConfig+0x2a4>)
 80028c8:	f240 2173 	movw	r1, #627	; 0x273
 80028cc:	f7fe fe0c 	bl	80014e8 <assert_failed>
  assert_param(IS_FLASH_LATENCY(FLatency));
 80028d0:	2d07      	cmp	r5, #7
 80028d2:	d904      	bls.n	80028de <HAL_RCC_ClockConfig+0x26>
 80028d4:	48a1      	ldr	r0, [pc, #644]	; (8002b5c <HAL_RCC_ClockConfig+0x2a4>)
 80028d6:	f44f 711d 	mov.w	r1, #628	; 0x274
 80028da:	f7fe fe05 	bl	80014e8 <assert_failed>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
    must be correctly programmed according to the frequency of the CPU clock 
    (HCLK) and the supply voltage of the device. */
  
  /* Increasing the CPU frequency */
  if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 80028de:	4ba0      	ldr	r3, [pc, #640]	; (8002b60 <HAL_RCC_ClockConfig+0x2a8>)
 80028e0:	681a      	ldr	r2, [r3, #0]
 80028e2:	f002 020f 	and.w	r2, r2, #15
 80028e6:	4295      	cmp	r5, r2
 80028e8:	f240 8081 	bls.w	80029ee <HAL_RCC_ClockConfig+0x136>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80028ec:	b2ea      	uxtb	r2, r5
 80028ee:	701a      	strb	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 80028f0:	681b      	ldr	r3, [r3, #0]
 80028f2:	f003 030f 	and.w	r3, r3, #15
 80028f6:	42ab      	cmp	r3, r5
 80028f8:	d001      	beq.n	80028fe <HAL_RCC_ClockConfig+0x46>
    {
      return HAL_ERROR;
 80028fa:	2001      	movs	r0, #1
 80028fc:	bd70      	pop	{r4, r5, r6, pc}
    }

    /*-------------------------- HCLK Configuration --------------------------*/
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80028fe:	6823      	ldr	r3, [r4, #0]
 8002900:	079e      	lsls	r6, r3, #30
 8002902:	d51d      	bpl.n	8002940 <HAL_RCC_ClockConfig+0x88>
    {
      assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 8002904:	68a3      	ldr	r3, [r4, #8]
 8002906:	f033 0280 	bics.w	r2, r3, #128	; 0x80
 800290a:	d012      	beq.n	8002932 <HAL_RCC_ClockConfig+0x7a>
 800290c:	f023 0220 	bic.w	r2, r3, #32
 8002910:	2a90      	cmp	r2, #144	; 0x90
 8002912:	d00e      	beq.n	8002932 <HAL_RCC_ClockConfig+0x7a>
 8002914:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 8002918:	2aa0      	cmp	r2, #160	; 0xa0
 800291a:	d00a      	beq.n	8002932 <HAL_RCC_ClockConfig+0x7a>
 800291c:	f023 0210 	bic.w	r2, r3, #16
 8002920:	2ac0      	cmp	r2, #192	; 0xc0
 8002922:	d006      	beq.n	8002932 <HAL_RCC_ClockConfig+0x7a>
 8002924:	2bf0      	cmp	r3, #240	; 0xf0
 8002926:	d004      	beq.n	8002932 <HAL_RCC_ClockConfig+0x7a>
 8002928:	488c      	ldr	r0, [pc, #560]	; (8002b5c <HAL_RCC_ClockConfig+0x2a4>)
 800292a:	f240 218a 	movw	r1, #650	; 0x28a
 800292e:	f7fe fddb 	bl	80014e8 <assert_failed>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8002932:	498c      	ldr	r1, [pc, #560]	; (8002b64 <HAL_RCC_ClockConfig+0x2ac>)
 8002934:	688b      	ldr	r3, [r1, #8]
 8002936:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800293a:	68a3      	ldr	r3, [r4, #8]
 800293c:	4313      	orrs	r3, r2
 800293e:	608b      	str	r3, [r1, #8]
    }

    /*------------------------- SYSCLK Configuration ---------------------------*/ 
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8002940:	6823      	ldr	r3, [r4, #0]
 8002942:	07dd      	lsls	r5, r3, #31
 8002944:	d404      	bmi.n	8002950 <HAL_RCC_ClockConfig+0x98>
      return HAL_ERROR;
    }
 }

  /*-------------------------- PCLK1 Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8002946:	6823      	ldr	r3, [r4, #0]
 8002948:	0758      	lsls	r0, r3, #29
 800294a:	f100 80ce 	bmi.w	8002aea <HAL_RCC_ClockConfig+0x232>
 800294e:	e0e4      	b.n	8002b1a <HAL_RCC_ClockConfig+0x262>
    }

    /*------------------------- SYSCLK Configuration ---------------------------*/ 
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
    {    
      assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 8002950:	6863      	ldr	r3, [r4, #4]
 8002952:	2b02      	cmp	r3, #2
 8002954:	d904      	bls.n	8002960 <HAL_RCC_ClockConfig+0xa8>
 8002956:	4881      	ldr	r0, [pc, #516]	; (8002b5c <HAL_RCC_ClockConfig+0x2a4>)
 8002958:	f240 2191 	movw	r1, #657	; 0x291
 800295c:	f7fe fdc4 	bl	80014e8 <assert_failed>
      
      /* HSE is selected as System Clock Source */
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8002960:	6862      	ldr	r2, [r4, #4]
 8002962:	4b80      	ldr	r3, [pc, #512]	; (8002b64 <HAL_RCC_ClockConfig+0x2ac>)
 8002964:	2a01      	cmp	r2, #1
      {
        /* Check the HSE ready flag */  
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8002966:	6819      	ldr	r1, [r3, #0]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
    {    
      assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
      
      /* HSE is selected as System Clock Source */
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8002968:	d102      	bne.n	8002970 <HAL_RCC_ClockConfig+0xb8>
      {
        /* Check the HSE ready flag */  
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800296a:	f411 3f00 	tst.w	r1, #131072	; 0x20000
 800296e:	e006      	b.n	800297e <HAL_RCC_ClockConfig+0xc6>
        {
          return HAL_ERROR;
        }
      }
      /* PLL is selected as System Clock Source */
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8002970:	2a02      	cmp	r2, #2
 8002972:	d102      	bne.n	800297a <HAL_RCC_ClockConfig+0xc2>
      {
        /* Check the PLL ready flag */  
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8002974:	f011 7f00 	tst.w	r1, #33554432	; 0x2000000
 8002978:	e001      	b.n	800297e <HAL_RCC_ClockConfig+0xc6>
      }
      /* HSI is selected as System Clock Source */
      else
      {
        /* Check the HSI ready flag */  
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800297a:	f011 0f02 	tst.w	r1, #2
 800297e:	d0bc      	beq.n	80028fa <HAL_RCC_ClockConfig+0x42>
        {
          return HAL_ERROR;
        }
      }
      MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 8002980:	6899      	ldr	r1, [r3, #8]
 8002982:	f021 0103 	bic.w	r1, r1, #3
 8002986:	430a      	orrs	r2, r1
 8002988:	609a      	str	r2, [r3, #8]
 
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800298a:	f002 f96f 	bl	8004c6c <HAL_GetTick>
      
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800298e:	6863      	ldr	r3, [r4, #4]
 8002990:	2b01      	cmp	r3, #1
        }
      }
      MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8002992:	4605      	mov	r5, r0
      
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8002994:	d10e      	bne.n	80029b4 <HAL_RCC_ClockConfig+0xfc>
      {
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_HSE)
 8002996:	4b73      	ldr	r3, [pc, #460]	; (8002b64 <HAL_RCC_ClockConfig+0x2ac>)
 8002998:	689b      	ldr	r3, [r3, #8]
 800299a:	f003 030c 	and.w	r3, r3, #12
 800299e:	2b04      	cmp	r3, #4
 80029a0:	d0d1      	beq.n	8002946 <HAL_RCC_ClockConfig+0x8e>
        {
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 80029a2:	f002 f963 	bl	8004c6c <HAL_GetTick>
 80029a6:	f241 3388 	movw	r3, #5000	; 0x1388
 80029aa:	1b40      	subs	r0, r0, r5
 80029ac:	4298      	cmp	r0, r3
 80029ae:	d9f2      	bls.n	8002996 <HAL_RCC_ClockConfig+0xde>
          {
            return HAL_TIMEOUT;
 80029b0:	2003      	movs	r0, #3
 80029b2:	bd70      	pop	{r4, r5, r6, pc}
          }
        }
      }
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80029b4:	2b02      	cmp	r3, #2
 80029b6:	d114      	bne.n	80029e2 <HAL_RCC_ClockConfig+0x12a>
      {
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 80029b8:	4b6a      	ldr	r3, [pc, #424]	; (8002b64 <HAL_RCC_ClockConfig+0x2ac>)
 80029ba:	689b      	ldr	r3, [r3, #8]
 80029bc:	f003 030c 	and.w	r3, r3, #12
 80029c0:	2b08      	cmp	r3, #8
 80029c2:	d0c0      	beq.n	8002946 <HAL_RCC_ClockConfig+0x8e>
        {
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 80029c4:	f002 f952 	bl	8004c6c <HAL_GetTick>
 80029c8:	f241 3388 	movw	r3, #5000	; 0x1388
 80029cc:	1b40      	subs	r0, r0, r5
 80029ce:	4298      	cmp	r0, r3
 80029d0:	d9f2      	bls.n	80029b8 <HAL_RCC_ClockConfig+0x100>
 80029d2:	e7ed      	b.n	80029b0 <HAL_RCC_ClockConfig+0xf8>
      }
      else
      {
        while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_HSI)
        {
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 80029d4:	f002 f94a 	bl	8004c6c <HAL_GetTick>
 80029d8:	f241 3388 	movw	r3, #5000	; 0x1388
 80029dc:	1b40      	subs	r0, r0, r5
 80029de:	4298      	cmp	r0, r3
 80029e0:	d8e6      	bhi.n	80029b0 <HAL_RCC_ClockConfig+0xf8>
          }
        }
      }
      else
      {
        while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_HSI)
 80029e2:	4b60      	ldr	r3, [pc, #384]	; (8002b64 <HAL_RCC_ClockConfig+0x2ac>)
 80029e4:	689b      	ldr	r3, [r3, #8]
 80029e6:	f013 0f0c 	tst.w	r3, #12
 80029ea:	d1f3      	bne.n	80029d4 <HAL_RCC_ClockConfig+0x11c>
 80029ec:	e7ab      	b.n	8002946 <HAL_RCC_ClockConfig+0x8e>
  }
  /* Decreasing the CPU frequency */
  else
  {
    /*-------------------------- HCLK Configuration --------------------------*/
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80029ee:	6823      	ldr	r3, [r4, #0]
 80029f0:	0799      	lsls	r1, r3, #30
 80029f2:	d51d      	bpl.n	8002a30 <HAL_RCC_ClockConfig+0x178>
    {
      assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 80029f4:	68a3      	ldr	r3, [r4, #8]
 80029f6:	f033 0280 	bics.w	r2, r3, #128	; 0x80
 80029fa:	d012      	beq.n	8002a22 <HAL_RCC_ClockConfig+0x16a>
 80029fc:	f023 0220 	bic.w	r2, r3, #32
 8002a00:	2a90      	cmp	r2, #144	; 0x90
 8002a02:	d00e      	beq.n	8002a22 <HAL_RCC_ClockConfig+0x16a>
 8002a04:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 8002a08:	2aa0      	cmp	r2, #160	; 0xa0
 8002a0a:	d00a      	beq.n	8002a22 <HAL_RCC_ClockConfig+0x16a>
 8002a0c:	f023 0210 	bic.w	r2, r3, #16
 8002a10:	2ac0      	cmp	r2, #192	; 0xc0
 8002a12:	d006      	beq.n	8002a22 <HAL_RCC_ClockConfig+0x16a>
 8002a14:	2bf0      	cmp	r3, #240	; 0xf0
 8002a16:	d004      	beq.n	8002a22 <HAL_RCC_ClockConfig+0x16a>
 8002a18:	4850      	ldr	r0, [pc, #320]	; (8002b5c <HAL_RCC_ClockConfig+0x2a4>)
 8002a1a:	f240 21d9 	movw	r1, #729	; 0x2d9
 8002a1e:	f7fe fd63 	bl	80014e8 <assert_failed>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8002a22:	4950      	ldr	r1, [pc, #320]	; (8002b64 <HAL_RCC_ClockConfig+0x2ac>)
 8002a24:	688b      	ldr	r3, [r1, #8]
 8002a26:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002a2a:	68a3      	ldr	r3, [r4, #8]
 8002a2c:	4313      	orrs	r3, r2
 8002a2e:	608b      	str	r3, [r1, #8]
    }

    /*------------------------- SYSCLK Configuration -------------------------*/
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8002a30:	6823      	ldr	r3, [r4, #0]
 8002a32:	07da      	lsls	r2, r3, #31
 8002a34:	d409      	bmi.n	8002a4a <HAL_RCC_ClockConfig+0x192>
        }
      }
    }
    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8002a36:	4b4a      	ldr	r3, [pc, #296]	; (8002b60 <HAL_RCC_ClockConfig+0x2a8>)
 8002a38:	b2ea      	uxtb	r2, r5
 8002a3a:	701a      	strb	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 8002a3c:	681b      	ldr	r3, [r3, #0]
 8002a3e:	f003 030f 	and.w	r3, r3, #15
 8002a42:	42ab      	cmp	r3, r5
 8002a44:	f47f af59 	bne.w	80028fa <HAL_RCC_ClockConfig+0x42>
 8002a48:	e77d      	b.n	8002946 <HAL_RCC_ClockConfig+0x8e>
    }

    /*------------------------- SYSCLK Configuration -------------------------*/
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
    {    
      assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 8002a4a:	6863      	ldr	r3, [r4, #4]
 8002a4c:	2b02      	cmp	r3, #2
 8002a4e:	d904      	bls.n	8002a5a <HAL_RCC_ClockConfig+0x1a2>
 8002a50:	4842      	ldr	r0, [pc, #264]	; (8002b5c <HAL_RCC_ClockConfig+0x2a4>)
 8002a52:	f44f 7138 	mov.w	r1, #736	; 0x2e0
 8002a56:	f7fe fd47 	bl	80014e8 <assert_failed>
      
      /* HSE is selected as System Clock Source */
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8002a5a:	6862      	ldr	r2, [r4, #4]
 8002a5c:	4b41      	ldr	r3, [pc, #260]	; (8002b64 <HAL_RCC_ClockConfig+0x2ac>)
 8002a5e:	2a01      	cmp	r2, #1
      {
        /* Check the HSE ready flag */  
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8002a60:	6819      	ldr	r1, [r3, #0]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
    {    
      assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
      
      /* HSE is selected as System Clock Source */
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8002a62:	d102      	bne.n	8002a6a <HAL_RCC_ClockConfig+0x1b2>
      {
        /* Check the HSE ready flag */  
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8002a64:	f411 3f00 	tst.w	r1, #131072	; 0x20000
 8002a68:	e006      	b.n	8002a78 <HAL_RCC_ClockConfig+0x1c0>
        {
          return HAL_ERROR;
        }
      }
      /* PLL is selected as System Clock Source */
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8002a6a:	2a02      	cmp	r2, #2
 8002a6c:	d102      	bne.n	8002a74 <HAL_RCC_ClockConfig+0x1bc>
      {
        /* Check the PLL ready flag */  
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8002a6e:	f011 7f00 	tst.w	r1, #33554432	; 0x2000000
 8002a72:	e001      	b.n	8002a78 <HAL_RCC_ClockConfig+0x1c0>
      }
      /* HSI is selected as System Clock Source */
      else
      {
        /* Check the HSI ready flag */  
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002a74:	f011 0f02 	tst.w	r1, #2
 8002a78:	f43f af3f 	beq.w	80028fa <HAL_RCC_ClockConfig+0x42>
        {
          return HAL_ERROR;
        }
      }
      MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 8002a7c:	6899      	ldr	r1, [r3, #8]
 8002a7e:	f021 0103 	bic.w	r1, r1, #3
 8002a82:	430a      	orrs	r2, r1
 8002a84:	609a      	str	r2, [r3, #8]
      
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8002a86:	f002 f8f1 	bl	8004c6c <HAL_GetTick>
      
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8002a8a:	6863      	ldr	r3, [r4, #4]
 8002a8c:	2b01      	cmp	r3, #1
        }
      }
      MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
      
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8002a8e:	4606      	mov	r6, r0
      
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8002a90:	d10d      	bne.n	8002aae <HAL_RCC_ClockConfig+0x1f6>
      {
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_HSE)
 8002a92:	4b34      	ldr	r3, [pc, #208]	; (8002b64 <HAL_RCC_ClockConfig+0x2ac>)
 8002a94:	689b      	ldr	r3, [r3, #8]
 8002a96:	f003 030c 	and.w	r3, r3, #12
 8002a9a:	2b04      	cmp	r3, #4
 8002a9c:	d0cb      	beq.n	8002a36 <HAL_RCC_ClockConfig+0x17e>
        {
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8002a9e:	f002 f8e5 	bl	8004c6c <HAL_GetTick>
 8002aa2:	f241 3388 	movw	r3, #5000	; 0x1388
 8002aa6:	1b80      	subs	r0, r0, r6
 8002aa8:	4298      	cmp	r0, r3
 8002aaa:	d9f2      	bls.n	8002a92 <HAL_RCC_ClockConfig+0x1da>
 8002aac:	e780      	b.n	80029b0 <HAL_RCC_ClockConfig+0xf8>
          {
            return HAL_TIMEOUT;
          } 
        }
      }
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8002aae:	2b02      	cmp	r3, #2
 8002ab0:	d115      	bne.n	8002ade <HAL_RCC_ClockConfig+0x226>
      {
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8002ab2:	4b2c      	ldr	r3, [pc, #176]	; (8002b64 <HAL_RCC_ClockConfig+0x2ac>)
 8002ab4:	689b      	ldr	r3, [r3, #8]
 8002ab6:	f003 030c 	and.w	r3, r3, #12
 8002aba:	2b08      	cmp	r3, #8
 8002abc:	d0bb      	beq.n	8002a36 <HAL_RCC_ClockConfig+0x17e>
        {
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8002abe:	f002 f8d5 	bl	8004c6c <HAL_GetTick>
 8002ac2:	f241 3388 	movw	r3, #5000	; 0x1388
 8002ac6:	1b80      	subs	r0, r0, r6
 8002ac8:	4298      	cmp	r0, r3
 8002aca:	d9f2      	bls.n	8002ab2 <HAL_RCC_ClockConfig+0x1fa>
 8002acc:	e770      	b.n	80029b0 <HAL_RCC_ClockConfig+0xf8>
      }
      else
      {
        while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_HSI)
        {
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8002ace:	f002 f8cd 	bl	8004c6c <HAL_GetTick>
 8002ad2:	f241 3388 	movw	r3, #5000	; 0x1388
 8002ad6:	1b80      	subs	r0, r0, r6
 8002ad8:	4298      	cmp	r0, r3
 8002ada:	f63f af69 	bhi.w	80029b0 <HAL_RCC_ClockConfig+0xf8>
          } 
        }
      }
      else
      {
        while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_HSI)
 8002ade:	4b21      	ldr	r3, [pc, #132]	; (8002b64 <HAL_RCC_ClockConfig+0x2ac>)
 8002ae0:	689b      	ldr	r3, [r3, #8]
 8002ae2:	f013 0f0c 	tst.w	r3, #12
 8002ae6:	d1f2      	bne.n	8002ace <HAL_RCC_ClockConfig+0x216>
 8002ae8:	e7a5      	b.n	8002a36 <HAL_RCC_ClockConfig+0x17e>
 }

  /*-------------------------- PCLK1 Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 8002aea:	68e3      	ldr	r3, [r4, #12]
 8002aec:	f433 5280 	bics.w	r2, r3, #4096	; 0x1000
 8002af0:	d00c      	beq.n	8002b0c <HAL_RCC_ClockConfig+0x254>
 8002af2:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 8002af6:	f5b2 5fa0 	cmp.w	r2, #5120	; 0x1400
 8002afa:	d007      	beq.n	8002b0c <HAL_RCC_ClockConfig+0x254>
 8002afc:	f5b3 5fc0 	cmp.w	r3, #6144	; 0x1800
 8002b00:	d004      	beq.n	8002b0c <HAL_RCC_ClockConfig+0x254>
 8002b02:	4816      	ldr	r0, [pc, #88]	; (8002b5c <HAL_RCC_ClockConfig+0x2a4>)
 8002b04:	f44f 714c 	mov.w	r1, #816	; 0x330
 8002b08:	f7fe fcee 	bl	80014e8 <assert_failed>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8002b0c:	4915      	ldr	r1, [pc, #84]	; (8002b64 <HAL_RCC_ClockConfig+0x2ac>)
 8002b0e:	688b      	ldr	r3, [r1, #8]
 8002b10:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8002b14:	68e3      	ldr	r3, [r4, #12]
 8002b16:	4313      	orrs	r3, r2
 8002b18:	608b      	str	r3, [r1, #8]
  }
  
  /*-------------------------- PCLK2 Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8002b1a:	6823      	ldr	r3, [r4, #0]
 8002b1c:	071b      	lsls	r3, r3, #28
 8002b1e:	d518      	bpl.n	8002b52 <HAL_RCC_ClockConfig+0x29a>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 8002b20:	6923      	ldr	r3, [r4, #16]
 8002b22:	f433 5280 	bics.w	r2, r3, #4096	; 0x1000
 8002b26:	d00c      	beq.n	8002b42 <HAL_RCC_ClockConfig+0x28a>
 8002b28:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 8002b2c:	f5b2 5fa0 	cmp.w	r2, #5120	; 0x1400
 8002b30:	d007      	beq.n	8002b42 <HAL_RCC_ClockConfig+0x28a>
 8002b32:	f5b3 5fc0 	cmp.w	r3, #6144	; 0x1800
 8002b36:	d004      	beq.n	8002b42 <HAL_RCC_ClockConfig+0x28a>
 8002b38:	4808      	ldr	r0, [pc, #32]	; (8002b5c <HAL_RCC_ClockConfig+0x2a4>)
 8002b3a:	f240 3137 	movw	r1, #823	; 0x337
 8002b3e:	f7fe fcd3 	bl	80014e8 <assert_failed>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8002b42:	4a08      	ldr	r2, [pc, #32]	; (8002b64 <HAL_RCC_ClockConfig+0x2ac>)
 8002b44:	6921      	ldr	r1, [r4, #16]
 8002b46:	6893      	ldr	r3, [r2, #8]
 8002b48:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8002b4c:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8002b50:	6093      	str	r3, [r2, #8]
  }

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick (TICK_INT_PRIORITY);
 8002b52:	200f      	movs	r0, #15
 8002b54:	f002 f85a 	bl	8004c0c <HAL_InitTick>
  
  return HAL_OK;
 8002b58:	2000      	movs	r0, #0
}
 8002b5a:	bd70      	pop	{r4, r5, r6, pc}
 8002b5c:	0802222d 	.word	0x0802222d
 8002b60:	40023c00 	.word	0x40023c00
 8002b64:	40023800 	.word	0x40023800

08002b68 <HAL_RCC_GetSysClockFreq>:
  *         
  *               
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8002b68:	b530      	push	{r4, r5, lr}
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
  uint32_t sysclockfreq = 0;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8002b6a:	4c1d      	ldr	r4, [pc, #116]	; (8002be0 <HAL_RCC_GetSysClockFreq+0x78>)
 8002b6c:	68a3      	ldr	r3, [r4, #8]
 8002b6e:	f003 030c 	and.w	r3, r3, #12
 8002b72:	2b04      	cmp	r3, #4
 8002b74:	d030      	beq.n	8002bd8 <HAL_RCC_GetSysClockFreq+0x70>
 8002b76:	2b08      	cmp	r3, #8
 8002b78:	d130      	bne.n	8002bdc <HAL_RCC_GetSysClockFreq+0x74>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8002b7a:	6862      	ldr	r2, [r4, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8002b7c:	6863      	ldr	r3, [r4, #4]
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8002b7e:	f002 053f 	and.w	r5, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8002b82:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
 8002b86:	f647 71c0 	movw	r1, #32704	; 0x7fc0
      {
        /* HSE used as PLL clock source */
        pllvco = ((HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> POSITION_VAL(RCC_PLLCFGR_PLLN)));
 8002b8a:	6863      	ldr	r3, [r4, #4]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
{
  uint32_t result;

   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002b8c:	fa91 f1a1 	rbit	r1, r1
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 8002b90:	fab1 f181 	clz	r1, r1
 8002b94:	f647 70c0 	movw	r0, #32704	; 0x7fc0
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = ((HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> POSITION_VAL(RCC_PLLCFGR_PLLN)));    
 8002b98:	bf04      	itt	eq
 8002b9a:	4a12      	ldreq	r2, [pc, #72]	; (8002be4 <HAL_RCC_GetSysClockFreq+0x7c>)
 8002b9c:	fbb2 f2f5 	udiveq	r2, r2, r5
 8002ba0:	b2c9      	uxtb	r1, r1
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
      {
        /* HSE used as PLL clock source */
        pllvco = ((HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> POSITION_VAL(RCC_PLLCFGR_PLLN)));
 8002ba2:	ea00 0003 	and.w	r0, r0, r3
 8002ba6:	fa20 f001 	lsr.w	r0, r0, r1
 8002baa:	bf1c      	itt	ne
 8002bac:	490e      	ldrne	r1, [pc, #56]	; (8002be8 <HAL_RCC_GetSysClockFreq+0x80>)
 8002bae:	fbb1 f2f5 	udivne	r2, r1, r5
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = ((HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> POSITION_VAL(RCC_PLLCFGR_PLLN)));    
 8002bb2:	fb02 f300 	mul.w	r3, r2, r0
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> POSITION_VAL(RCC_PLLCFGR_PLLP)) + 1 ) *2);
 8002bb6:	4a0a      	ldr	r2, [pc, #40]	; (8002be0 <HAL_RCC_GetSysClockFreq+0x78>)
 8002bb8:	6850      	ldr	r0, [r2, #4]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
{
  uint32_t result;

   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002bba:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8002bbe:	fa92 f2a2 	rbit	r2, r2
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 8002bc2:	fab2 f282 	clz	r2, r2
 8002bc6:	b2d2      	uxtb	r2, r2
 8002bc8:	f400 3040 	and.w	r0, r0, #196608	; 0x30000
 8002bcc:	40d0      	lsrs	r0, r2
 8002bce:	3001      	adds	r0, #1
 8002bd0:	0040      	lsls	r0, r0, #1
      
      sysclockfreq = pllvco/pllp;
 8002bd2:	fbb3 f0f0 	udiv	r0, r3, r0
 8002bd6:	bd30      	pop	{r4, r5, pc}
      sysclockfreq = HSI_VALUE;
       break;
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8002bd8:	4803      	ldr	r0, [pc, #12]	; (8002be8 <HAL_RCC_GetSysClockFreq+0x80>)
 8002bda:	bd30      	pop	{r4, r5, pc}
  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8002bdc:	4801      	ldr	r0, [pc, #4]	; (8002be4 <HAL_RCC_GetSysClockFreq+0x7c>)
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8002bde:	bd30      	pop	{r4, r5, pc}
 8002be0:	40023800 	.word	0x40023800
 8002be4:	00f42400 	.word	0x00f42400
 8002be8:	007a1200 	.word	0x007a1200

08002bec <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8002bec:	b508      	push	{r3, lr}
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> APBAHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> POSITION_VAL(RCC_CFGR_HPRE)];
 8002bee:	f7ff ffbb 	bl	8002b68 <HAL_RCC_GetSysClockFreq>
 8002bf2:	4b09      	ldr	r3, [pc, #36]	; (8002c18 <HAL_RCC_GetHCLKFreq+0x2c>)
 8002bf4:	689a      	ldr	r2, [r3, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
{
  uint32_t result;

   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002bf6:	23f0      	movs	r3, #240	; 0xf0
 8002bf8:	fa93 f3a3 	rbit	r3, r3
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 8002bfc:	fab3 f383 	clz	r3, r3
 8002c00:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8002c04:	b2db      	uxtb	r3, r3
 8002c06:	fa22 f303 	lsr.w	r3, r2, r3
 8002c0a:	4a04      	ldr	r2, [pc, #16]	; (8002c1c <HAL_RCC_GetHCLKFreq+0x30>)
 8002c0c:	5cd3      	ldrb	r3, [r2, r3]
 8002c0e:	40d8      	lsrs	r0, r3
 8002c10:	4b03      	ldr	r3, [pc, #12]	; (8002c20 <HAL_RCC_GetHCLKFreq+0x34>)
 8002c12:	6018      	str	r0, [r3, #0]
  return SystemCoreClock;
}
 8002c14:	bd08      	pop	{r3, pc}
 8002c16:	bf00      	nop
 8002c18:	40023800 	.word	0x40023800
 8002c1c:	0802221d 	.word	0x0802221d
 8002c20:	20000000 	.word	0x20000000

08002c24 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{  
 8002c24:	b508      	push	{r3, lr}
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBAHBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> POSITION_VAL(RCC_CFGR_PPRE1)]);
 8002c26:	f7ff ffe1 	bl	8002bec <HAL_RCC_GetHCLKFreq>
 8002c2a:	4b08      	ldr	r3, [pc, #32]	; (8002c4c <HAL_RCC_GetPCLK1Freq+0x28>)
 8002c2c:	689a      	ldr	r2, [r3, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
{
  uint32_t result;

   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002c2e:	f44f 53e0 	mov.w	r3, #7168	; 0x1c00
 8002c32:	fa93 f3a3 	rbit	r3, r3
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 8002c36:	fab3 f383 	clz	r3, r3
 8002c3a:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8002c3e:	b2db      	uxtb	r3, r3
 8002c40:	fa22 f303 	lsr.w	r3, r2, r3
 8002c44:	4a02      	ldr	r2, [pc, #8]	; (8002c50 <HAL_RCC_GetPCLK1Freq+0x2c>)
 8002c46:	5cd3      	ldrb	r3, [r2, r3]
}
 8002c48:	40d8      	lsrs	r0, r3
 8002c4a:	bd08      	pop	{r3, pc}
 8002c4c:	40023800 	.word	0x40023800
 8002c50:	0802221d 	.word	0x0802221d

08002c54 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 8002c54:	b508      	push	{r3, lr}
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBAHBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> POSITION_VAL(RCC_CFGR_PPRE2)]);
 8002c56:	f7ff ffc9 	bl	8002bec <HAL_RCC_GetHCLKFreq>
 8002c5a:	4b08      	ldr	r3, [pc, #32]	; (8002c7c <HAL_RCC_GetPCLK2Freq+0x28>)
 8002c5c:	689a      	ldr	r2, [r3, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
{
  uint32_t result;

   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002c5e:	f44f 4360 	mov.w	r3, #57344	; 0xe000
 8002c62:	fa93 f3a3 	rbit	r3, r3
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 8002c66:	fab3 f383 	clz	r3, r3
 8002c6a:	f402 4260 	and.w	r2, r2, #57344	; 0xe000
 8002c6e:	b2db      	uxtb	r3, r3
 8002c70:	fa22 f303 	lsr.w	r3, r2, r3
 8002c74:	4a02      	ldr	r2, [pc, #8]	; (8002c80 <HAL_RCC_GetPCLK2Freq+0x2c>)
 8002c76:	5cd3      	ldrb	r3, [r2, r3]
} 
 8002c78:	40d8      	lsrs	r0, r3
 8002c7a:	bd08      	pop	{r3, pc}
 8002c7c:	40023800 	.word	0x40023800
 8002c80:	0802221d 	.word	0x0802221d

08002c84 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
  * @param  Flag: specifies the I2C flag to check.
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout)
{
 8002c84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002c88:	460d      	mov	r5, r1
 8002c8a:	4604      	mov	r4, r0
 8002c8c:	4616      	mov	r6, r2
  uint32_t tickstart = 0;

  /* Get tick */
  tickstart = HAL_GetTick();
 8002c8e:	f001 ffed 	bl	8004c6c <HAL_GetTick>

  while(__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8002c92:	f3c5 4807 	ubfx	r8, r5, #16, #8
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout)
{
  uint32_t tickstart = 0;

  /* Get tick */
  tickstart = HAL_GetTick();
 8002c96:	4607      	mov	r7, r0
 8002c98:	6823      	ldr	r3, [r4, #0]

  while(__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8002c9a:	f1b8 0f01 	cmp.w	r8, #1
 8002c9e:	bf0c      	ite	eq
 8002ca0:	6958      	ldreq	r0, [r3, #20]
 8002ca2:	6998      	ldrne	r0, [r3, #24]
 8002ca4:	43c0      	mvns	r0, r0
 8002ca6:	b280      	uxth	r0, r0
 8002ca8:	4228      	tst	r0, r5
 8002caa:	bf14      	ite	ne
 8002cac:	2001      	movne	r0, #1
 8002cae:	2000      	moveq	r0, #0
 8002cb0:	b328      	cbz	r0, 8002cfe <I2C_WaitOnMasterAddressFlagUntilTimeout+0x7a>
  {
    if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8002cb2:	695a      	ldr	r2, [r3, #20]
 8002cb4:	0552      	lsls	r2, r2, #21
 8002cb6:	d510      	bpl.n	8002cda <I2C_WaitOnMasterAddressFlagUntilTimeout+0x56>
    {
      /* Generate Stop */
      hi2c->Instance->CR1 |= I2C_CR1_STOP;
 8002cb8:	681a      	ldr	r2, [r3, #0]
 8002cba:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002cbe:	601a      	str	r2, [r3, #0]

      /* Clear AF Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8002cc0:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8002cc4:	615a      	str	r2, [r3, #20]

      hi2c->ErrorCode = HAL_I2C_ERROR_AF;
 8002cc6:	2304      	movs	r3, #4
 8002cc8:	63a3      	str	r3, [r4, #56]	; 0x38
      hi2c->State= HAL_I2C_STATE_READY;
 8002cca:	2001      	movs	r0, #1

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8002ccc:	2300      	movs	r3, #0

      /* Clear AF Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

      hi2c->ErrorCode = HAL_I2C_ERROR_AF;
      hi2c->State= HAL_I2C_STATE_READY;
 8002cce:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8002cd2:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34

      return HAL_ERROR;
 8002cd6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    }

    /* Check for the Timeout */
    if(Timeout != HAL_MAX_DELAY)
 8002cda:	1c73      	adds	r3, r6, #1
 8002cdc:	d0dc      	beq.n	8002c98 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x14>
    {
      if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 8002cde:	b946      	cbnz	r6, 8002cf2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x6e>
      {
        hi2c->State= HAL_I2C_STATE_READY;
 8002ce0:	2301      	movs	r3, #1
 8002ce2:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8002ce6:	2300      	movs	r3, #0
 8002ce8:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34

        return HAL_TIMEOUT;
 8002cec:	2003      	movs	r0, #3
 8002cee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    }

    /* Check for the Timeout */
    if(Timeout != HAL_MAX_DELAY)
    {
      if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 8002cf2:	f001 ffbb 	bl	8004c6c <HAL_GetTick>
 8002cf6:	1bc0      	subs	r0, r0, r7
 8002cf8:	42b0      	cmp	r0, r6
 8002cfa:	d9cd      	bls.n	8002c98 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x14>
 8002cfc:	e7f0      	b.n	8002ce0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x5c>
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
}
 8002cfe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08002d02 <I2C_WaitOnFlagUntilTimeout>:
  * @param  Status: The new Flag status (SET or RESET).
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout)
{
 8002d02:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002d06:	460e      	mov	r6, r1
 8002d08:	461d      	mov	r5, r3
 8002d0a:	4604      	mov	r4, r0
 8002d0c:	4690      	mov	r8, r2
  uint32_t tickstart = 0;

  /* Get tick */
  tickstart = HAL_GetTick();
 8002d0e:	f001 ffad 	bl	8004c6c <HAL_GetTick>
 8002d12:	0c33      	lsrs	r3, r6, #16
 8002d14:	4607      	mov	r7, r0

  /* Wait until flag is set */
  if(Status == RESET)
 8002d16:	f1b8 0f00 	cmp.w	r8, #0
 8002d1a:	d134      	bne.n	8002d86 <I2C_WaitOnFlagUntilTimeout+0x84>
  {
    while(__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8002d1c:	fa5f f883 	uxtb.w	r8, r3
 8002d20:	6823      	ldr	r3, [r4, #0]
 8002d22:	f1b8 0f01 	cmp.w	r8, #1
 8002d26:	bf0c      	ite	eq
 8002d28:	695b      	ldreq	r3, [r3, #20]
 8002d2a:	699b      	ldrne	r3, [r3, #24]
 8002d2c:	43db      	mvns	r3, r3
 8002d2e:	b29b      	uxth	r3, r3
 8002d30:	4233      	tst	r3, r6
 8002d32:	bf14      	ite	ne
 8002d34:	2301      	movne	r3, #1
 8002d36:	2300      	moveq	r3, #0
 8002d38:	b1c3      	cbz	r3, 8002d6c <I2C_WaitOnFlagUntilTimeout+0x6a>
    {
      /* Check for the Timeout */
      if(Timeout != HAL_MAX_DELAY)
 8002d3a:	1c6a      	adds	r2, r5, #1
 8002d3c:	d0f0      	beq.n	8002d20 <I2C_WaitOnFlagUntilTimeout+0x1e>
      {
        if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 8002d3e:	b1cd      	cbz	r5, 8002d74 <I2C_WaitOnFlagUntilTimeout+0x72>
 8002d40:	f001 ff94 	bl	8004c6c <HAL_GetTick>
 8002d44:	1bc0      	subs	r0, r0, r7
 8002d46:	42a8      	cmp	r0, r5
 8002d48:	d9ea      	bls.n	8002d20 <I2C_WaitOnFlagUntilTimeout+0x1e>
 8002d4a:	e013      	b.n	8002d74 <I2C_WaitOnFlagUntilTimeout+0x72>
  else
  {
    while(__HAL_I2C_GET_FLAG(hi2c, Flag) != RESET)
    {
      /* Check for the Timeout */
      if(Timeout != HAL_MAX_DELAY)
 8002d4c:	1c6b      	adds	r3, r5, #1
 8002d4e:	d110      	bne.n	8002d72 <I2C_WaitOnFlagUntilTimeout+0x70>
 8002d50:	6823      	ldr	r3, [r4, #0]
      }
    }
  }
  else
  {
    while(__HAL_I2C_GET_FLAG(hi2c, Flag) != RESET)
 8002d52:	f1b8 0f01 	cmp.w	r8, #1
 8002d56:	bf0c      	ite	eq
 8002d58:	695b      	ldreq	r3, [r3, #20]
 8002d5a:	699b      	ldrne	r3, [r3, #24]
 8002d5c:	43db      	mvns	r3, r3
 8002d5e:	b29b      	uxth	r3, r3
 8002d60:	4233      	tst	r3, r6
 8002d62:	bf0c      	ite	eq
 8002d64:	2301      	moveq	r3, #1
 8002d66:	2300      	movne	r3, #0
 8002d68:	2b00      	cmp	r3, #0
 8002d6a:	d1ef      	bne.n	8002d4c <I2C_WaitOnFlagUntilTimeout+0x4a>
          return HAL_TIMEOUT;
        }
      }
    }
  }
  return HAL_OK;
 8002d6c:	2000      	movs	r0, #0
 8002d6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    while(__HAL_I2C_GET_FLAG(hi2c, Flag) != RESET)
    {
      /* Check for the Timeout */
      if(Timeout != HAL_MAX_DELAY)
      {
        if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 8002d72:	b95d      	cbnz	r5, 8002d8c <I2C_WaitOnFlagUntilTimeout+0x8a>
        {
          hi2c->State= HAL_I2C_STATE_READY;
 8002d74:	2301      	movs	r3, #1
 8002d76:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8002d7a:	2300      	movs	r3, #0
 8002d7c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34

          return HAL_TIMEOUT;
 8002d80:	2003      	movs	r0, #3
 8002d82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      }
    }
  }
  else
  {
    while(__HAL_I2C_GET_FLAG(hi2c, Flag) != RESET)
 8002d86:	fa5f f883 	uxtb.w	r8, r3
 8002d8a:	e7e1      	b.n	8002d50 <I2C_WaitOnFlagUntilTimeout+0x4e>
    {
      /* Check for the Timeout */
      if(Timeout != HAL_MAX_DELAY)
      {
        if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 8002d8c:	f001 ff6e 	bl	8004c6c <HAL_GetTick>
 8002d90:	1bc0      	subs	r0, r0, r7
 8002d92:	42a8      	cmp	r0, r5
 8002d94:	d9dc      	bls.n	8002d50 <I2C_WaitOnFlagUntilTimeout+0x4e>
 8002d96:	e7ed      	b.n	8002d74 <I2C_WaitOnFlagUntilTimeout+0x72>

08002d98 <I2C_MasterRequestWrite>:
  * @param  DevAddress: Target device address
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout)
{
 8002d98:	b570      	push	{r4, r5, r6, lr}
 8002d9a:	4616      	mov	r6, r2
  /* Generate Start */
  hi2c->Instance->CR1 |= I2C_CR1_START;
 8002d9c:	6802      	ldr	r2, [r0, #0]
 8002d9e:	6813      	ldr	r3, [r2, #0]
 8002da0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002da4:	6013      	str	r3, [r2, #0]
  * @param  DevAddress: Target device address
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout)
{
 8002da6:	460d      	mov	r5, r1
  /* Generate Start */
  hi2c->Instance->CR1 |= I2C_CR1_START;

  /* Wait until SB flag is set */
  if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout) != HAL_OK)
 8002da8:	2200      	movs	r2, #0
 8002daa:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8002dae:	4633      	mov	r3, r6
  * @param  DevAddress: Target device address
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout)
{
 8002db0:	4604      	mov	r4, r0
  /* Generate Start */
  hi2c->Instance->CR1 |= I2C_CR1_START;

  /* Wait until SB flag is set */
  if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout) != HAL_OK)
 8002db2:	f7ff ffa6 	bl	8002d02 <I2C_WaitOnFlagUntilTimeout>
 8002db6:	bb20      	cbnz	r0, 8002e02 <I2C_MasterRequestWrite+0x6a>
  {
    return HAL_TIMEOUT;
  }

  if(hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8002db8:	6923      	ldr	r3, [r4, #16]
 8002dba:	6822      	ldr	r2, [r4, #0]
 8002dbc:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8002dc0:	d103      	bne.n	8002dca <I2C_MasterRequestWrite+0x32>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8002dc2:	f005 05fe 	and.w	r5, r5, #254	; 0xfe
 8002dc6:	6115      	str	r5, [r2, #16]
 8002dc8:	e013      	b.n	8002df2 <I2C_MasterRequestWrite+0x5a>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8002dca:	f405 7340 	and.w	r3, r5, #768	; 0x300
 8002dce:	11db      	asrs	r3, r3, #7
 8002dd0:	f043 03f0 	orr.w	r3, r3, #240	; 0xf0
 8002dd4:	6113      	str	r3, [r2, #16]

    /* Wait until ADD10 flag is set */
    if(I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout) != HAL_OK)
 8002dd6:	4620      	mov	r0, r4
 8002dd8:	490b      	ldr	r1, [pc, #44]	; (8002e08 <I2C_MasterRequestWrite+0x70>)
 8002dda:	4632      	mov	r2, r6
 8002ddc:	f7ff ff52 	bl	8002c84 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8002de0:	b120      	cbz	r0, 8002dec <I2C_MasterRequestWrite+0x54>
    {
      if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8002de2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8002de4:	2b04      	cmp	r3, #4
 8002de6:	d10c      	bne.n	8002e02 <I2C_MasterRequestWrite+0x6a>
      {
        return HAL_ERROR;
 8002de8:	2001      	movs	r0, #1
 8002dea:	bd70      	pop	{r4, r5, r6, pc}
        return HAL_TIMEOUT;
      }
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8002dec:	6823      	ldr	r3, [r4, #0]
 8002dee:	b2ed      	uxtb	r5, r5
 8002df0:	611d      	str	r5, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if(I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout) != HAL_OK)
 8002df2:	4620      	mov	r0, r4
 8002df4:	4905      	ldr	r1, [pc, #20]	; (8002e0c <I2C_MasterRequestWrite+0x74>)
 8002df6:	4632      	mov	r2, r6
 8002df8:	f7ff ff44 	bl	8002c84 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8002dfc:	2800      	cmp	r0, #0
 8002dfe:	d1f0      	bne.n	8002de2 <I2C_MasterRequestWrite+0x4a>
 8002e00:	e000      	b.n	8002e04 <I2C_MasterRequestWrite+0x6c>
  hi2c->Instance->CR1 |= I2C_CR1_START;

  /* Wait until SB flag is set */
  if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout) != HAL_OK)
  {
    return HAL_TIMEOUT;
 8002e02:	2003      	movs	r0, #3
      return HAL_TIMEOUT;
    }
  }

  return HAL_OK;
}
 8002e04:	bd70      	pop	{r4, r5, r6, pc}
 8002e06:	bf00      	nop
 8002e08:	00010008 	.word	0x00010008
 8002e0c:	00010002 	.word	0x00010002

08002e10 <I2C_MasterRequestRead>:
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout)
{
  /* Enable Acknowledge */
  hi2c->Instance->CR1 |= I2C_CR1_ACK;
 8002e10:	6803      	ldr	r3, [r0, #0]
  * @param  DevAddress: Target device address
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout)
{
 8002e12:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002e14:	4616      	mov	r6, r2
  /* Enable Acknowledge */
  hi2c->Instance->CR1 |= I2C_CR1_ACK;
 8002e16:	681a      	ldr	r2, [r3, #0]
 8002e18:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8002e1c:	601a      	str	r2, [r3, #0]

  /* Generate Start */
  hi2c->Instance->CR1 |= I2C_CR1_START;
 8002e1e:	681a      	ldr	r2, [r3, #0]
 8002e20:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002e24:	601a      	str	r2, [r3, #0]
  * @param  DevAddress: Target device address
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout)
{
 8002e26:	460d      	mov	r5, r1

  /* Generate Start */
  hi2c->Instance->CR1 |= I2C_CR1_START;

  /* Wait until SB flag is set */
  if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout) != HAL_OK)
 8002e28:	2200      	movs	r2, #0
 8002e2a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8002e2e:	4633      	mov	r3, r6
  * @param  DevAddress: Target device address
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout)
{
 8002e30:	4604      	mov	r4, r0

  /* Generate Start */
  hi2c->Instance->CR1 |= I2C_CR1_START;

  /* Wait until SB flag is set */
  if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout) != HAL_OK)
 8002e32:	f7ff ff66 	bl	8002d02 <I2C_WaitOnFlagUntilTimeout>
 8002e36:	b9d0      	cbnz	r0, 8002e6e <I2C_MasterRequestRead+0x5e>
  {
    return HAL_TIMEOUT;
  }

  if(hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8002e38:	6923      	ldr	r3, [r4, #16]
 8002e3a:	6822      	ldr	r2, [r4, #0]
 8002e3c:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8002e40:	d104      	bne.n	8002e4c <I2C_MasterRequestRead+0x3c>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8002e42:	f045 0501 	orr.w	r5, r5, #1
 8002e46:	b2ed      	uxtb	r5, r5
 8002e48:	6115      	str	r5, [r2, #16]
 8002e4a:	e033      	b.n	8002eb4 <I2C_MasterRequestRead+0xa4>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8002e4c:	f405 7340 	and.w	r3, r5, #768	; 0x300
 8002e50:	09df      	lsrs	r7, r3, #7
 8002e52:	f047 03f0 	orr.w	r3, r7, #240	; 0xf0
 8002e56:	6113      	str	r3, [r2, #16]

    /* Wait until ADD10 flag is set */
    if(I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout) != HAL_OK)
 8002e58:	4620      	mov	r0, r4
 8002e5a:	491b      	ldr	r1, [pc, #108]	; (8002ec8 <I2C_MasterRequestRead+0xb8>)
 8002e5c:	4632      	mov	r2, r6
 8002e5e:	f7ff ff11 	bl	8002c84 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8002e62:	b130      	cbz	r0, 8002e72 <I2C_MasterRequestRead+0x62>
    {
      if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8002e64:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8002e66:	2b04      	cmp	r3, #4
 8002e68:	d101      	bne.n	8002e6e <I2C_MasterRequestRead+0x5e>
      {
        return HAL_ERROR;
 8002e6a:	2001      	movs	r0, #1
 8002e6c:	e029      	b.n	8002ec2 <I2C_MasterRequestRead+0xb2>
      }
      else
      {
        return HAL_TIMEOUT;
 8002e6e:	2003      	movs	r0, #3
 8002e70:	e027      	b.n	8002ec2 <I2C_MasterRequestRead+0xb2>
      }
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8002e72:	6823      	ldr	r3, [r4, #0]

    /* Wait until ADDR flag is set */
    if(I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout) != HAL_OK)
 8002e74:	4915      	ldr	r1, [pc, #84]	; (8002ecc <I2C_MasterRequestRead+0xbc>)
        return HAL_TIMEOUT;
      }
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8002e76:	b2ed      	uxtb	r5, r5

    /* Wait until ADDR flag is set */
    if(I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout) != HAL_OK)
 8002e78:	4632      	mov	r2, r6
        return HAL_TIMEOUT;
      }
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8002e7a:	611d      	str	r5, [r3, #16]

    /* Wait until ADDR flag is set */
    if(I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout) != HAL_OK)
 8002e7c:	4620      	mov	r0, r4
 8002e7e:	f7ff ff01 	bl	8002c84 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8002e82:	4602      	mov	r2, r0
 8002e84:	2800      	cmp	r0, #0
 8002e86:	d1ed      	bne.n	8002e64 <I2C_MasterRequestRead+0x54>
        return HAL_TIMEOUT;
      }
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8002e88:	6823      	ldr	r3, [r4, #0]
 8002e8a:	6959      	ldr	r1, [r3, #20]
 8002e8c:	9101      	str	r1, [sp, #4]
 8002e8e:	6999      	ldr	r1, [r3, #24]
 8002e90:	9101      	str	r1, [sp, #4]
 8002e92:	9901      	ldr	r1, [sp, #4]

    /* Generate Restart */
    hi2c->Instance->CR1 |= I2C_CR1_START;
 8002e94:	6819      	ldr	r1, [r3, #0]
 8002e96:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8002e9a:	6019      	str	r1, [r3, #0]

    /* Wait until SB flag is set */
    if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout) != HAL_OK)
 8002e9c:	4620      	mov	r0, r4
 8002e9e:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8002ea2:	4633      	mov	r3, r6
 8002ea4:	f7ff ff2d 	bl	8002d02 <I2C_WaitOnFlagUntilTimeout>
 8002ea8:	2800      	cmp	r0, #0
 8002eaa:	d1e0      	bne.n	8002e6e <I2C_MasterRequestRead+0x5e>
    {
      return HAL_TIMEOUT;
    }

    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_READ(DevAddress);
 8002eac:	6822      	ldr	r2, [r4, #0]
 8002eae:	f047 03f1 	orr.w	r3, r7, #241	; 0xf1
 8002eb2:	6113      	str	r3, [r2, #16]
  }

  /* Wait until ADDR flag is set */
  if(I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout) != HAL_OK)
 8002eb4:	4620      	mov	r0, r4
 8002eb6:	4905      	ldr	r1, [pc, #20]	; (8002ecc <I2C_MasterRequestRead+0xbc>)
 8002eb8:	4632      	mov	r2, r6
 8002eba:	f7ff fee3 	bl	8002c84 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8002ebe:	2800      	cmp	r0, #0
 8002ec0:	d1d0      	bne.n	8002e64 <I2C_MasterRequestRead+0x54>
      return HAL_TIMEOUT;
    }
  }

  return HAL_OK;
}
 8002ec2:	b003      	add	sp, #12
 8002ec4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002ec6:	bf00      	nop
 8002ec8:	00010008 	.word	0x00010008
 8002ecc:	00010002 	.word	0x00010002

08002ed0 <HAL_I2C_Init>:
  * @param  hi2c: pointer to a I2C_HandleTypeDef structure that contains
  *         the configuration information for I2C module
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 8002ed0:	b570      	push	{r4, r5, r6, lr}
  uint32_t freqrange = 0;
  uint32_t pclk1 = 0;

  /* Check the I2C handle allocation */
  if(hi2c == NULL)
 8002ed2:	4604      	mov	r4, r0
 8002ed4:	2800      	cmp	r0, #0
 8002ed6:	f000 80bb 	beq.w	8003050 <HAL_I2C_Init+0x180>
  {
    return HAL_ERROR;
  }

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 8002eda:	6803      	ldr	r3, [r0, #0]
 8002edc:	4a5d      	ldr	r2, [pc, #372]	; (8003054 <HAL_I2C_Init+0x184>)
 8002ede:	4293      	cmp	r3, r2
 8002ee0:	d00c      	beq.n	8002efc <HAL_I2C_Init+0x2c>
 8002ee2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8002ee6:	4293      	cmp	r3, r2
 8002ee8:	d008      	beq.n	8002efc <HAL_I2C_Init+0x2c>
 8002eea:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8002eee:	4293      	cmp	r3, r2
 8002ef0:	d004      	beq.n	8002efc <HAL_I2C_Init+0x2c>
 8002ef2:	4859      	ldr	r0, [pc, #356]	; (8003058 <HAL_I2C_Init+0x188>)
 8002ef4:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8002ef8:	f7fe faf6 	bl	80014e8 <assert_failed>
  assert_param(IS_I2C_CLOCK_SPEED(hi2c->Init.ClockSpeed));
 8002efc:	6863      	ldr	r3, [r4, #4]
 8002efe:	4a57      	ldr	r2, [pc, #348]	; (800305c <HAL_I2C_Init+0x18c>)
 8002f00:	3b01      	subs	r3, #1
 8002f02:	4293      	cmp	r3, r2
 8002f04:	d904      	bls.n	8002f10 <HAL_I2C_Init+0x40>
 8002f06:	4854      	ldr	r0, [pc, #336]	; (8003058 <HAL_I2C_Init+0x188>)
 8002f08:	f240 112d 	movw	r1, #301	; 0x12d
 8002f0c:	f7fe faec 	bl	80014e8 <assert_failed>
  assert_param(IS_I2C_DUTY_CYCLE(hi2c->Init.DutyCycle));
 8002f10:	68a3      	ldr	r3, [r4, #8]
 8002f12:	f433 4380 	bics.w	r3, r3, #16384	; 0x4000
 8002f16:	d004      	beq.n	8002f22 <HAL_I2C_Init+0x52>
 8002f18:	484f      	ldr	r0, [pc, #316]	; (8003058 <HAL_I2C_Init+0x188>)
 8002f1a:	f44f 7197 	mov.w	r1, #302	; 0x12e
 8002f1e:	f7fe fae3 	bl	80014e8 <assert_failed>
  assert_param(IS_I2C_OWN_ADDRESS1(hi2c->Init.OwnAddress1));
 8002f22:	68e3      	ldr	r3, [r4, #12]
 8002f24:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8002f28:	f023 0303 	bic.w	r3, r3, #3
 8002f2c:	b123      	cbz	r3, 8002f38 <HAL_I2C_Init+0x68>
 8002f2e:	484a      	ldr	r0, [pc, #296]	; (8003058 <HAL_I2C_Init+0x188>)
 8002f30:	f240 112f 	movw	r1, #303	; 0x12f
 8002f34:	f7fe fad8 	bl	80014e8 <assert_failed>
  assert_param(IS_I2C_ADDRESSING_MODE(hi2c->Init.AddressingMode));
 8002f38:	6923      	ldr	r3, [r4, #16]
 8002f3a:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8002f3e:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8002f42:	d004      	beq.n	8002f4e <HAL_I2C_Init+0x7e>
 8002f44:	4844      	ldr	r0, [pc, #272]	; (8003058 <HAL_I2C_Init+0x188>)
 8002f46:	f44f 7198 	mov.w	r1, #304	; 0x130
 8002f4a:	f7fe facd 	bl	80014e8 <assert_failed>
  assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
 8002f4e:	6963      	ldr	r3, [r4, #20]
 8002f50:	2b01      	cmp	r3, #1
 8002f52:	d904      	bls.n	8002f5e <HAL_I2C_Init+0x8e>
 8002f54:	4840      	ldr	r0, [pc, #256]	; (8003058 <HAL_I2C_Init+0x188>)
 8002f56:	f240 1131 	movw	r1, #305	; 0x131
 8002f5a:	f7fe fac5 	bl	80014e8 <assert_failed>
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
 8002f5e:	69a3      	ldr	r3, [r4, #24]
 8002f60:	f033 03fe 	bics.w	r3, r3, #254	; 0xfe
 8002f64:	d004      	beq.n	8002f70 <HAL_I2C_Init+0xa0>
 8002f66:	483c      	ldr	r0, [pc, #240]	; (8003058 <HAL_I2C_Init+0x188>)
 8002f68:	f44f 7199 	mov.w	r1, #306	; 0x132
 8002f6c:	f7fe fabc 	bl	80014e8 <assert_failed>
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
 8002f70:	69e3      	ldr	r3, [r4, #28]
 8002f72:	f033 0340 	bics.w	r3, r3, #64	; 0x40
 8002f76:	d004      	beq.n	8002f82 <HAL_I2C_Init+0xb2>
 8002f78:	4837      	ldr	r0, [pc, #220]	; (8003058 <HAL_I2C_Init+0x188>)
 8002f7a:	f240 1133 	movw	r1, #307	; 0x133
 8002f7e:	f7fe fab3 	bl	80014e8 <assert_failed>
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));
 8002f82:	6a23      	ldr	r3, [r4, #32]
 8002f84:	f033 0380 	bics.w	r3, r3, #128	; 0x80
 8002f88:	d004      	beq.n	8002f94 <HAL_I2C_Init+0xc4>
 8002f8a:	4833      	ldr	r0, [pc, #204]	; (8003058 <HAL_I2C_Init+0x188>)
 8002f8c:	f44f 719a 	mov.w	r1, #308	; 0x134
 8002f90:	f7fe faaa 	bl	80014e8 <assert_failed>

  if(hi2c->State == HAL_I2C_STATE_RESET)
 8002f94:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 8002f98:	b913      	cbnz	r3, 8002fa0 <HAL_I2C_Init+0xd0>
  {
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_I2C_MspInit(hi2c);
 8002f9a:	4620      	mov	r0, r4
 8002f9c:	f7fe fb42 	bl	8001624 <HAL_I2C_MspInit>
  }

  hi2c->State = HAL_I2C_STATE_BUSY;

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 8002fa0:	6822      	ldr	r2, [r4, #0]
  /* Configure I2Cx: Frequency range */
  hi2c->Instance->CR2 = freqrange;

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  hi2c->Instance->TRISE = I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed);
 8002fa2:	4d2f      	ldr	r5, [pc, #188]	; (8003060 <HAL_I2C_Init+0x190>)
  {
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_I2C_MspInit(hi2c);
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 8002fa4:	2302      	movs	r3, #2
 8002fa6:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 8002faa:	6813      	ldr	r3, [r2, #0]
 8002fac:	f023 0301 	bic.w	r3, r3, #1
 8002fb0:	6013      	str	r3, [r2, #0]

  /* Get PCLK1 frequency */
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8002fb2:	f7ff fe37 	bl	8002c24 <HAL_RCC_GetPCLK1Freq>
  /* Configure I2Cx: Frequency range */
  hi2c->Instance->CR2 = freqrange;

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  hi2c->Instance->TRISE = I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed);
 8002fb6:	6863      	ldr	r3, [r4, #4]
  /* Calculate frequency range */
  freqrange = I2C_FREQRANGE(pclk1);

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Frequency range */
  hi2c->Instance->CR2 = freqrange;
 8002fb8:	6822      	ldr	r2, [r4, #0]

  /* Get PCLK1 frequency */
  pclk1 = HAL_RCC_GetPCLK1Freq();

  /* Calculate frequency range */
  freqrange = I2C_FREQRANGE(pclk1);
 8002fba:	492a      	ldr	r1, [pc, #168]	; (8003064 <HAL_I2C_Init+0x194>)
 8002fbc:	fbb0 f1f1 	udiv	r1, r0, r1
  /* Configure I2Cx: Frequency range */
  hi2c->Instance->CR2 = freqrange;

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  hi2c->Instance->TRISE = I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed);
 8002fc0:	42ab      	cmp	r3, r5
 8002fc2:	462e      	mov	r6, r5
 8002fc4:	bf88      	it	hi
 8002fc6:	f44f 7596 	movhi.w	r5, #300	; 0x12c
  /* Calculate frequency range */
  freqrange = I2C_FREQRANGE(pclk1);

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Frequency range */
  hi2c->Instance->CR2 = freqrange;
 8002fca:	6051      	str	r1, [r2, #4]

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  hi2c->Instance->TRISE = I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed);
 8002fcc:	bf82      	ittt	hi
 8002fce:	4369      	mulhi	r1, r5
 8002fd0:	f44f 757a 	movhi.w	r5, #1000	; 0x3e8
 8002fd4:	fbb1 f1f5 	udivhi	r1, r1, r5

  /*---------------------------- I2Cx CCR Configuration ----------------------*/
  /* Configure I2Cx: Speed */
  hi2c->Instance->CCR = I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle);
 8002fd8:	42b3      	cmp	r3, r6
  /* Configure I2Cx: Frequency range */
  hi2c->Instance->CR2 = freqrange;

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  hi2c->Instance->TRISE = I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed);
 8002fda:	f101 0101 	add.w	r1, r1, #1
 8002fde:	6211      	str	r1, [r2, #32]

  /*---------------------------- I2Cx CCR Configuration ----------------------*/
  /* Configure I2Cx: Speed */
  hi2c->Instance->CCR = I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle);
 8002fe0:	d808      	bhi.n	8002ff4 <HAL_I2C_Init+0x124>
 8002fe2:	005b      	lsls	r3, r3, #1
 8002fe4:	fbb0 f0f3 	udiv	r0, r0, r3
 8002fe8:	f3c0 030b 	ubfx	r3, r0, #0, #12
 8002fec:	2b03      	cmp	r3, #3
 8002fee:	bf98      	it	ls
 8002ff0:	2004      	movls	r0, #4
 8002ff2:	e016      	b.n	8003022 <HAL_I2C_Init+0x152>
 8002ff4:	68a1      	ldr	r1, [r4, #8]
 8002ff6:	b949      	cbnz	r1, 800300c <HAL_I2C_Init+0x13c>
 8002ff8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8002ffc:	fbb0 f0f3 	udiv	r0, r0, r3
 8003000:	f3c0 030b 	ubfx	r3, r0, #0, #12
 8003004:	b163      	cbz	r3, 8003020 <HAL_I2C_Init+0x150>
 8003006:	f440 4000 	orr.w	r0, r0, #32768	; 0x8000
 800300a:	e00a      	b.n	8003022 <HAL_I2C_Init+0x152>
 800300c:	2119      	movs	r1, #25
 800300e:	434b      	muls	r3, r1
 8003010:	fbb0 f0f3 	udiv	r0, r0, r3
 8003014:	f3c0 030b 	ubfx	r3, r0, #0, #12
 8003018:	b113      	cbz	r3, 8003020 <HAL_I2C_Init+0x150>
 800301a:	f440 4040 	orr.w	r0, r0, #49152	; 0xc000
 800301e:	e000      	b.n	8003022 <HAL_I2C_Init+0x152>
 8003020:	2001      	movs	r0, #1

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8003022:	6a21      	ldr	r1, [r4, #32]
 8003024:	69e3      	ldr	r3, [r4, #28]
  /* Configure I2Cx: Rise Time */
  hi2c->Instance->TRISE = I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed);

  /*---------------------------- I2Cx CCR Configuration ----------------------*/
  /* Configure I2Cx: Speed */
  hi2c->Instance->CCR = I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle);
 8003026:	61d0      	str	r0, [r2, #28]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8003028:	430b      	orrs	r3, r1
 800302a:	6013      	str	r3, [r2, #0]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Configure I2Cx: Own Address1 and addressing mode */
  hi2c->Instance->OAR1 = (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1);
 800302c:	68e1      	ldr	r1, [r4, #12]
 800302e:	6923      	ldr	r3, [r4, #16]
 8003030:	430b      	orrs	r3, r1
 8003032:	6093      	str	r3, [r2, #8]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Configure I2Cx: Dual mode and Own Address2 */
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2);
 8003034:	69a1      	ldr	r1, [r4, #24]
 8003036:	6963      	ldr	r3, [r4, #20]
 8003038:	430b      	orrs	r3, r1
 800303a:	60d3      	str	r3, [r2, #12]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 800303c:	6813      	ldr	r3, [r2, #0]
 800303e:	f043 0301 	orr.w	r3, r3, #1
 8003042:	6013      	str	r3, [r2, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003044:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8003046:	2301      	movs	r3, #1
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2);

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003048:	63a0      	str	r0, [r4, #56]	; 0x38
  hi2c->State = HAL_I2C_STATE_READY;
 800304a:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35

  return HAL_OK;
 800304e:	bd70      	pop	{r4, r5, r6, pc}
  uint32_t pclk1 = 0;

  /* Check the I2C handle allocation */
  if(hi2c == NULL)
  {
    return HAL_ERROR;
 8003050:	2001      	movs	r0, #1

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
  hi2c->State = HAL_I2C_STATE_READY;

  return HAL_OK;
}
 8003052:	bd70      	pop	{r4, r5, r6, pc}
 8003054:	40005400 	.word	0x40005400
 8003058:	0802227c 	.word	0x0802227c
 800305c:	00061a7f 	.word	0x00061a7f
 8003060:	000186a0 	.word	0x000186a0
 8003064:	000f4240 	.word	0x000f4240

08003068 <HAL_I2C_Master_Transmit>:
  * @param  Size: Amount of data to be sent
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8003068:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  if(hi2c->State == HAL_I2C_STATE_READY)
 800306c:	f890 4035 	ldrb.w	r4, [r0, #53]	; 0x35
 8003070:	b2e4      	uxtb	r4, r4
 8003072:	2c01      	cmp	r4, #1
  * @param  Size: Amount of data to be sent
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8003074:	4605      	mov	r5, r0
 8003076:	4617      	mov	r7, r2
 8003078:	461e      	mov	r6, r3
  if(hi2c->State == HAL_I2C_STATE_READY)
 800307a:	d15e      	bne.n	800313a <HAL_I2C_Master_Transmit+0xd2>
  {
    if((pData == NULL) || (Size == 0))
 800307c:	2a00      	cmp	r2, #0
 800307e:	d05a      	beq.n	8003136 <HAL_I2C_Master_Transmit+0xce>
 8003080:	2b00      	cmp	r3, #0
 8003082:	d058      	beq.n	8003136 <HAL_I2C_Master_Transmit+0xce>
    {
      return  HAL_ERROR;
    }

    if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 8003084:	6803      	ldr	r3, [r0, #0]
 8003086:	699b      	ldr	r3, [r3, #24]
 8003088:	f013 0802 	ands.w	r8, r3, #2
 800308c:	d155      	bne.n	800313a <HAL_I2C_Master_Transmit+0xd2>
    {
      return HAL_BUSY;
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 800308e:	f890 3034 	ldrb.w	r3, [r0, #52]	; 0x34
 8003092:	2b01      	cmp	r3, #1
 8003094:	d051      	beq.n	800313a <HAL_I2C_Master_Transmit+0xd2>

    hi2c->State = HAL_I2C_STATE_BUSY_TX;
 8003096:	2312      	movs	r3, #18
 8003098:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    {
      return HAL_BUSY;
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 800309c:	f880 4034 	strb.w	r4, [r0, #52]	; 0x34

    hi2c->State = HAL_I2C_STATE_BUSY_TX;
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80030a0:	f8c0 8038 	str.w	r8, [r0, #56]	; 0x38

    /* Send Slave Address */
    if(I2C_MasterRequestWrite(hi2c, DevAddress, Timeout) != HAL_OK)
 80030a4:	9a08      	ldr	r2, [sp, #32]
 80030a6:	f7ff fe77 	bl	8002d98 <I2C_MasterRequestWrite>
 80030aa:	b128      	cbz	r0, 80030b8 <HAL_I2C_Master_Transmit+0x50>
    {
      if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80030ac:	6bab      	ldr	r3, [r5, #56]	; 0x38
      {
        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 80030ae:	f885 8034 	strb.w	r8, [r5, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;

    /* Send Slave Address */
    if(I2C_MasterRequestWrite(hi2c, DevAddress, Timeout) != HAL_OK)
    {
      if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80030b2:	2b04      	cmp	r3, #4
 80030b4:	d10d      	bne.n	80030d2 <HAL_I2C_Master_Transmit+0x6a>
 80030b6:	e03e      	b.n	8003136 <HAL_I2C_Master_Transmit+0xce>
        return HAL_TIMEOUT;
      }
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80030b8:	682b      	ldr	r3, [r5, #0]
 80030ba:	695a      	ldr	r2, [r3, #20]
 80030bc:	9201      	str	r2, [sp, #4]
 80030be:	699b      	ldr	r3, [r3, #24]
 80030c0:	9301      	str	r3, [sp, #4]
 80030c2:	9b01      	ldr	r3, [sp, #4]

    while(Size > 0)
    {
      /* Wait until TXE flag is set */
      if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TXE, RESET, Timeout) != HAL_OK)
 80030c4:	491f      	ldr	r1, [pc, #124]	; (8003144 <HAL_I2C_Master_Transmit+0xdc>)
 80030c6:	9b08      	ldr	r3, [sp, #32]
 80030c8:	4628      	mov	r0, r5
 80030ca:	2200      	movs	r2, #0
 80030cc:	f7ff fe19 	bl	8002d02 <I2C_WaitOnFlagUntilTimeout>
 80030d0:	b108      	cbz	r0, 80030d6 <HAL_I2C_Master_Transmit+0x6e>
      {
        return HAL_TIMEOUT;
 80030d2:	2003      	movs	r0, #3
 80030d4:	e032      	b.n	800313c <HAL_I2C_Master_Transmit+0xd4>
      }

      /* Write data to DR */
      hi2c->Instance->DR = (*pData++);
 80030d6:	682a      	ldr	r2, [r5, #0]
 80030d8:	783b      	ldrb	r3, [r7, #0]
 80030da:	6113      	str	r3, [r2, #16]
      Size--;

      if((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (Size != 0))
 80030dc:	6951      	ldr	r1, [r2, #20]
        return HAL_TIMEOUT;
      }

      /* Write data to DR */
      hi2c->Instance->DR = (*pData++);
      Size--;
 80030de:	1e73      	subs	r3, r6, #1

      if((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (Size != 0))
 80030e0:	0749      	lsls	r1, r1, #29
        return HAL_TIMEOUT;
      }

      /* Write data to DR */
      hi2c->Instance->DR = (*pData++);
      Size--;
 80030e2:	b29b      	uxth	r3, r3

      if((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (Size != 0))
 80030e4:	d402      	bmi.n	80030ec <HAL_I2C_Master_Transmit+0x84>
      {
        return HAL_TIMEOUT;
      }

      /* Write data to DR */
      hi2c->Instance->DR = (*pData++);
 80030e6:	3701      	adds	r7, #1
      Size--;
 80030e8:	461e      	mov	r6, r3
 80030ea:	e00e      	b.n	800310a <HAL_I2C_Master_Transmit+0xa2>

      if((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (Size != 0))
 80030ec:	b943      	cbnz	r3, 8003100 <HAL_I2C_Master_Transmit+0x98>
        Size--;
      }
    }

    /* Wait until TXE flag is set */
    if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TXE, RESET, Timeout) != HAL_OK)
 80030ee:	4628      	mov	r0, r5
 80030f0:	4914      	ldr	r1, [pc, #80]	; (8003144 <HAL_I2C_Master_Transmit+0xdc>)
 80030f2:	9b08      	ldr	r3, [sp, #32]
 80030f4:	2200      	movs	r2, #0
 80030f6:	f7ff fe04 	bl	8002d02 <I2C_WaitOnFlagUntilTimeout>
 80030fa:	2800      	cmp	r0, #0
 80030fc:	d1e9      	bne.n	80030d2 <HAL_I2C_Master_Transmit+0x6a>
 80030fe:	e007      	b.n	8003110 <HAL_I2C_Master_Transmit+0xa8>
      Size--;

      if((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (Size != 0))
      {
        /* Write data to DR */
        hi2c->Instance->DR = (*pData++);
 8003100:	787b      	ldrb	r3, [r7, #1]
 8003102:	6113      	str	r3, [r2, #16]
        Size--;
 8003104:	3e02      	subs	r6, #2
 8003106:	b2b6      	uxth	r6, r6
      Size--;

      if((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (Size != 0))
      {
        /* Write data to DR */
        hi2c->Instance->DR = (*pData++);
 8003108:	3702      	adds	r7, #2
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);

    while(Size > 0)
 800310a:	2e00      	cmp	r6, #0
 800310c:	d1da      	bne.n	80030c4 <HAL_I2C_Master_Transmit+0x5c>
 800310e:	e7ee      	b.n	80030ee <HAL_I2C_Master_Transmit+0x86>
    {
      return HAL_TIMEOUT;
    }

    /* Generate Stop */
    hi2c->Instance->CR1 |= I2C_CR1_STOP;
 8003110:	682a      	ldr	r2, [r5, #0]

    /* Wait until BUSY flag is reset */
    if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout) != HAL_OK)
 8003112:	490d      	ldr	r1, [pc, #52]	; (8003148 <HAL_I2C_Master_Transmit+0xe0>)
    {
      return HAL_TIMEOUT;
    }

    /* Generate Stop */
    hi2c->Instance->CR1 |= I2C_CR1_STOP;
 8003114:	6813      	ldr	r3, [r2, #0]
 8003116:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800311a:	6013      	str	r3, [r2, #0]

    /* Wait until BUSY flag is reset */
    if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout) != HAL_OK)
 800311c:	4628      	mov	r0, r5
 800311e:	2201      	movs	r2, #1
 8003120:	9b08      	ldr	r3, [sp, #32]
 8003122:	f7ff fdee 	bl	8002d02 <I2C_WaitOnFlagUntilTimeout>
 8003126:	2800      	cmp	r0, #0
 8003128:	d1d3      	bne.n	80030d2 <HAL_I2C_Master_Transmit+0x6a>
    {
      return HAL_TIMEOUT;
    }

    hi2c->State = HAL_I2C_STATE_READY;
 800312a:	2301      	movs	r3, #1
 800312c:	f885 3035 	strb.w	r3, [r5, #53]	; 0x35

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8003130:	f885 0034 	strb.w	r0, [r5, #52]	; 0x34

    return HAL_OK;
 8003134:	e002      	b.n	800313c <HAL_I2C_Master_Transmit+0xd4>
{
  if(hi2c->State == HAL_I2C_STATE_READY)
  {
    if((pData == NULL) || (Size == 0))
    {
      return  HAL_ERROR;
 8003136:	4620      	mov	r0, r4
 8003138:	e000      	b.n	800313c <HAL_I2C_Master_Transmit+0xd4>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800313a:	2002      	movs	r0, #2
  }
}
 800313c:	b002      	add	sp, #8
 800313e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003142:	bf00      	nop
 8003144:	00010080 	.word	0x00010080
 8003148:	00100002 	.word	0x00100002

0800314c <HAL_I2C_Master_Receive>:
  * @param  Size: Amount of data to be sent
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 800314c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
  if(hi2c->State == HAL_I2C_STATE_READY)
 8003150:	f890 5035 	ldrb.w	r5, [r0, #53]	; 0x35
 8003154:	b2ed      	uxtb	r5, r5
 8003156:	2d01      	cmp	r5, #1
  * @param  Size: Amount of data to be sent
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8003158:	4604      	mov	r4, r0
 800315a:	4617      	mov	r7, r2
 800315c:	461e      	mov	r6, r3
  if(hi2c->State == HAL_I2C_STATE_READY)
 800315e:	f040 80a9 	bne.w	80032b4 <HAL_I2C_Master_Receive+0x168>
  {
    if((pData == NULL) || (Size == 0))
 8003162:	2a00      	cmp	r2, #0
 8003164:	f000 80a4 	beq.w	80032b0 <HAL_I2C_Master_Receive+0x164>
 8003168:	2b00      	cmp	r3, #0
 800316a:	f000 80a1 	beq.w	80032b0 <HAL_I2C_Master_Receive+0x164>
    {
      return  HAL_ERROR;
    }

    if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 800316e:	6803      	ldr	r3, [r0, #0]
 8003170:	699b      	ldr	r3, [r3, #24]
 8003172:	f013 0802 	ands.w	r8, r3, #2
 8003176:	f040 809d 	bne.w	80032b4 <HAL_I2C_Master_Receive+0x168>
    {
      return HAL_BUSY;
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 800317a:	f890 3034 	ldrb.w	r3, [r0, #52]	; 0x34
 800317e:	2b01      	cmp	r3, #1
 8003180:	f000 8098 	beq.w	80032b4 <HAL_I2C_Master_Receive+0x168>

    hi2c->State = HAL_I2C_STATE_BUSY_RX;
 8003184:	2322      	movs	r3, #34	; 0x22
 8003186:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    {
      return HAL_BUSY;
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 800318a:	f880 5034 	strb.w	r5, [r0, #52]	; 0x34

    hi2c->State = HAL_I2C_STATE_BUSY_RX;
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800318e:	f8c0 8038 	str.w	r8, [r0, #56]	; 0x38

    /* Send Slave Address */
    if(I2C_MasterRequestRead(hi2c, DevAddress, Timeout) != HAL_OK)
 8003192:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8003194:	f7ff fe3c 	bl	8002e10 <I2C_MasterRequestRead>
 8003198:	b128      	cbz	r0, 80031a6 <HAL_I2C_Master_Receive+0x5a>
    {
      if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800319a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
      {
        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 800319c:	f884 8034 	strb.w	r8, [r4, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;

    /* Send Slave Address */
    if(I2C_MasterRequestRead(hi2c, DevAddress, Timeout) != HAL_OK)
    {
      if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80031a0:	2b04      	cmp	r3, #4
 80031a2:	d133      	bne.n	800320c <HAL_I2C_Master_Receive+0xc0>
 80031a4:	e084      	b.n	80032b0 <HAL_I2C_Master_Receive+0x164>
 80031a6:	6823      	ldr	r3, [r4, #0]
        __HAL_UNLOCK(hi2c);
        return HAL_TIMEOUT;
      }
    }

    if(Size == 1)
 80031a8:	2e01      	cmp	r6, #1
    {
      /* Disable Acknowledge */
      hi2c->Instance->CR1 &= ~I2C_CR1_ACK;
 80031aa:	681a      	ldr	r2, [r3, #0]
        __HAL_UNLOCK(hi2c);
        return HAL_TIMEOUT;
      }
    }

    if(Size == 1)
 80031ac:	d10c      	bne.n	80031c8 <HAL_I2C_Master_Receive+0x7c>
    {
      /* Disable Acknowledge */
      hi2c->Instance->CR1 &= ~I2C_CR1_ACK;
 80031ae:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80031b2:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80031b4:	695a      	ldr	r2, [r3, #20]
 80031b6:	9201      	str	r2, [sp, #4]
 80031b8:	699a      	ldr	r2, [r3, #24]
 80031ba:	9201      	str	r2, [sp, #4]
 80031bc:	9a01      	ldr	r2, [sp, #4]

      /* Generate Stop */
      hi2c->Instance->CR1 |= I2C_CR1_STOP;
 80031be:	681a      	ldr	r2, [r3, #0]
 80031c0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80031c4:	601a      	str	r2, [r3, #0]
 80031c6:	e016      	b.n	80031f6 <HAL_I2C_Master_Receive+0xaa>
    }
    else if(Size == 2)
 80031c8:	2e02      	cmp	r6, #2
 80031ca:	d10c      	bne.n	80031e6 <HAL_I2C_Master_Receive+0x9a>
    {
      /* Disable Acknowledge */
      hi2c->Instance->CR1 &= ~I2C_CR1_ACK;
 80031cc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80031d0:	601a      	str	r2, [r3, #0]

      /* Enable Pos */
      hi2c->Instance->CR1 |= I2C_CR1_POS;
 80031d2:	681a      	ldr	r2, [r3, #0]
 80031d4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80031d8:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80031da:	695a      	ldr	r2, [r3, #20]
 80031dc:	9202      	str	r2, [sp, #8]
 80031de:	699b      	ldr	r3, [r3, #24]
 80031e0:	9302      	str	r3, [sp, #8]
 80031e2:	9b02      	ldr	r3, [sp, #8]
 80031e4:	e007      	b.n	80031f6 <HAL_I2C_Master_Receive+0xaa>
    }
    else
    {
      /* Enable Acknowledge */
      hi2c->Instance->CR1 |= I2C_CR1_ACK;
 80031e6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80031ea:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80031ec:	695a      	ldr	r2, [r3, #20]
 80031ee:	9203      	str	r2, [sp, #12]
 80031f0:	699b      	ldr	r3, [r3, #24]
 80031f2:	9303      	str	r3, [sp, #12]
 80031f4:	9b03      	ldr	r3, [sp, #12]
    }

    while(Size > 0)
    {
      if(Size <= 3)
 80031f6:	2e03      	cmp	r6, #3
      {
        /* One byte */
        if(Size == 1)
        {
          /* Wait until RXNE flag is set */
          if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 80031f8:	4620      	mov	r0, r4
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
    }

    while(Size > 0)
    {
      if(Size <= 3)
 80031fa:	d840      	bhi.n	800327e <HAL_I2C_Master_Receive+0x132>
      {
        /* One byte */
        if(Size == 1)
 80031fc:	2e01      	cmp	r6, #1
 80031fe:	d10b      	bne.n	8003218 <HAL_I2C_Master_Receive+0xcc>
        {
          /* Wait until RXNE flag is set */
          if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 8003200:	4938      	ldr	r1, [pc, #224]	; (80032e4 <HAL_I2C_Master_Receive+0x198>)
 8003202:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003204:	2200      	movs	r2, #0
 8003206:	f7ff fd7c 	bl	8002d02 <I2C_WaitOnFlagUntilTimeout>
 800320a:	b108      	cbz	r0, 8003210 <HAL_I2C_Master_Receive+0xc4>
          {
            return HAL_TIMEOUT;
 800320c:	2003      	movs	r0, #3
 800320e:	e065      	b.n	80032dc <HAL_I2C_Master_Receive+0x190>
          }

          /* Read data from DR */
          (*pData++) = hi2c->Instance->DR;
 8003210:	6823      	ldr	r3, [r4, #0]
 8003212:	691b      	ldr	r3, [r3, #16]
 8003214:	703b      	strb	r3, [r7, #0]
 8003216:	e04f      	b.n	80032b8 <HAL_I2C_Master_Receive+0x16c>
          Size--;
        }
        /* Two bytes */
        else if(Size == 2)
 8003218:	2e02      	cmp	r6, #2
        {
          /* Wait until BTF flag is set */
          if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout) != HAL_OK)
 800321a:	4933      	ldr	r1, [pc, #204]	; (80032e8 <HAL_I2C_Master_Receive+0x19c>)
 800321c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800321e:	f04f 0200 	mov.w	r2, #0
          /* Read data from DR */
          (*pData++) = hi2c->Instance->DR;
          Size--;
        }
        /* Two bytes */
        else if(Size == 2)
 8003222:	d10e      	bne.n	8003242 <HAL_I2C_Master_Receive+0xf6>
        {
          /* Wait until BTF flag is set */
          if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout) != HAL_OK)
 8003224:	f7ff fd6d 	bl	8002d02 <I2C_WaitOnFlagUntilTimeout>
 8003228:	2800      	cmp	r0, #0
 800322a:	d1ef      	bne.n	800320c <HAL_I2C_Master_Receive+0xc0>
          {
            return HAL_TIMEOUT;
          }

          /* Generate Stop */
          hi2c->Instance->CR1 |= I2C_CR1_STOP;
 800322c:	6823      	ldr	r3, [r4, #0]
 800322e:	681a      	ldr	r2, [r3, #0]
 8003230:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003234:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          (*pData++) = hi2c->Instance->DR;
 8003236:	691b      	ldr	r3, [r3, #16]
 8003238:	703b      	strb	r3, [r7, #0]
          Size--;

          /* Read data from DR */
          (*pData++) = hi2c->Instance->DR;
 800323a:	6823      	ldr	r3, [r4, #0]
 800323c:	691b      	ldr	r3, [r3, #16]
 800323e:	707b      	strb	r3, [r7, #1]
 8003240:	e03a      	b.n	80032b8 <HAL_I2C_Master_Receive+0x16c>
        }
        /* 3 Last bytes */
        else
        {
          /* Wait until BTF flag is set */
          if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout) != HAL_OK)
 8003242:	f7ff fd5e 	bl	8002d02 <I2C_WaitOnFlagUntilTimeout>
 8003246:	4602      	mov	r2, r0
 8003248:	2800      	cmp	r0, #0
 800324a:	d1df      	bne.n	800320c <HAL_I2C_Master_Receive+0xc0>
          {
            return HAL_TIMEOUT;
          }

          /* Disable Acknowledge */
          hi2c->Instance->CR1 &= ~I2C_CR1_ACK;
 800324c:	6823      	ldr	r3, [r4, #0]
 800324e:	6819      	ldr	r1, [r3, #0]
 8003250:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8003254:	6019      	str	r1, [r3, #0]

          /* Read data from DR */
          (*pData++) = hi2c->Instance->DR;
 8003256:	691b      	ldr	r3, [r3, #16]
 8003258:	703b      	strb	r3, [r7, #0]
          Size--;

          /* Wait until BTF flag is set */
          if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout) != HAL_OK)
 800325a:	4620      	mov	r0, r4
 800325c:	4922      	ldr	r1, [pc, #136]	; (80032e8 <HAL_I2C_Master_Receive+0x19c>)
 800325e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003260:	f7ff fd4f 	bl	8002d02 <I2C_WaitOnFlagUntilTimeout>
 8003264:	2800      	cmp	r0, #0
 8003266:	d1d1      	bne.n	800320c <HAL_I2C_Master_Receive+0xc0>
          {
            return HAL_TIMEOUT;
          }

          /* Generate Stop */
          hi2c->Instance->CR1 |= I2C_CR1_STOP;
 8003268:	6823      	ldr	r3, [r4, #0]
 800326a:	681a      	ldr	r2, [r3, #0]
 800326c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003270:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          (*pData++) = hi2c->Instance->DR;
 8003272:	691b      	ldr	r3, [r3, #16]
 8003274:	707b      	strb	r3, [r7, #1]
          Size--;

          /* Read data from DR */
          (*pData++) = hi2c->Instance->DR;
 8003276:	6823      	ldr	r3, [r4, #0]
 8003278:	691b      	ldr	r3, [r3, #16]
 800327a:	70bb      	strb	r3, [r7, #2]
 800327c:	e01c      	b.n	80032b8 <HAL_I2C_Master_Receive+0x16c>
        }
      }
      else
      {
        /* Wait until RXNE flag is set */
        if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 800327e:	4919      	ldr	r1, [pc, #100]	; (80032e4 <HAL_I2C_Master_Receive+0x198>)
 8003280:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003282:	2200      	movs	r2, #0
 8003284:	f7ff fd3d 	bl	8002d02 <I2C_WaitOnFlagUntilTimeout>
 8003288:	2800      	cmp	r0, #0
 800328a:	d1bf      	bne.n	800320c <HAL_I2C_Master_Receive+0xc0>
        {
          return HAL_TIMEOUT;
        }

        /* Read data from DR */
        (*pData++) = hi2c->Instance->DR;
 800328c:	6823      	ldr	r3, [r4, #0]
 800328e:	691b      	ldr	r3, [r3, #16]
 8003290:	703b      	strb	r3, [r7, #0]
        Size--;

        if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8003292:	6822      	ldr	r2, [r4, #0]
 8003294:	6953      	ldr	r3, [r2, #20]
 8003296:	075b      	lsls	r3, r3, #29
        {
          return HAL_TIMEOUT;
        }

        /* Read data from DR */
        (*pData++) = hi2c->Instance->DR;
 8003298:	bf59      	ittee	pl
 800329a:	1c7b      	addpl	r3, r7, #1
        Size--;
 800329c:	f106 36ff 	addpl.w	r6, r6, #4294967295

        if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
        {
          /* Read data from DR */
          (*pData++) = hi2c->Instance->DR;
 80032a0:	1cbb      	addmi	r3, r7, #2
 80032a2:	6912      	ldrmi	r2, [r2, #16]
 80032a4:	bf44      	itt	mi
 80032a6:	707a      	strbmi	r2, [r7, #1]
          Size--;
 80032a8:	3e02      	submi	r6, #2
 80032aa:	b2b6      	uxth	r6, r6
 80032ac:	461f      	mov	r7, r3
 80032ae:	e7a2      	b.n	80031f6 <HAL_I2C_Master_Receive+0xaa>
{
  if(hi2c->State == HAL_I2C_STATE_READY)
  {
    if((pData == NULL) || (Size == 0))
    {
      return  HAL_ERROR;
 80032b0:	4628      	mov	r0, r5
 80032b2:	e013      	b.n	80032dc <HAL_I2C_Master_Receive+0x190>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 80032b4:	2002      	movs	r0, #2
 80032b6:	e011      	b.n	80032dc <HAL_I2C_Master_Receive+0x190>
        }
      }
    }

    /* Disable Pos */
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 80032b8:	6822      	ldr	r2, [r4, #0]

    /* Wait until BUSY flag is reset */
    if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout) != HAL_OK)
 80032ba:	490c      	ldr	r1, [pc, #48]	; (80032ec <HAL_I2C_Master_Receive+0x1a0>)
        }
      }
    }

    /* Disable Pos */
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 80032bc:	6813      	ldr	r3, [r2, #0]
 80032be:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80032c2:	6013      	str	r3, [r2, #0]

    /* Wait until BUSY flag is reset */
    if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout) != HAL_OK)
 80032c4:	4620      	mov	r0, r4
 80032c6:	2201      	movs	r2, #1
 80032c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80032ca:	f7ff fd1a 	bl	8002d02 <I2C_WaitOnFlagUntilTimeout>
 80032ce:	2800      	cmp	r0, #0
 80032d0:	d19c      	bne.n	800320c <HAL_I2C_Master_Receive+0xc0>
    {
      return HAL_TIMEOUT;
    }

    hi2c->State = HAL_I2C_STATE_READY;
 80032d2:	2301      	movs	r3, #1
 80032d4:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80032d8:	f884 0034 	strb.w	r0, [r4, #52]	; 0x34
  }
  else
  {
    return HAL_BUSY;
  }
}
 80032dc:	b004      	add	sp, #16
 80032de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80032e2:	bf00      	nop
 80032e4:	00010040 	.word	0x00010040
 80032e8:	00010004 	.word	0x00010004
 80032ec:	00100002 	.word	0x00100002

080032f0 <HAL_I2C_GetState>:
  *         the configuration information for I2C module
  * @retval HAL state
  */
HAL_I2C_StateTypeDef HAL_I2C_GetState(I2C_HandleTypeDef *hi2c)
{
  return hi2c->State;
 80032f0:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 80032f4:	4770      	bx	lr
	...

080032f8 <HAL_NVIC_SetPriorityGrouping>:
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 80032f8:	1ec3      	subs	r3, r0, #3
 80032fa:	2b04      	cmp	r3, #4
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80032fc:	b510      	push	{r4, lr}
 80032fe:	4604      	mov	r4, r0
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 8003300:	d903      	bls.n	800330a <HAL_NVIC_SetPriorityGrouping+0x12>
 8003302:	4809      	ldr	r0, [pc, #36]	; (8003328 <HAL_NVIC_SetPriorityGrouping+0x30>)
 8003304:	21a4      	movs	r1, #164	; 0xa4
 8003306:	f7fe f8ef 	bl	80014e8 <assert_failed>
__STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07);               /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800330a:	4a08      	ldr	r2, [pc, #32]	; (800332c <HAL_NVIC_SetPriorityGrouping+0x34>)
 800330c:	68d1      	ldr	r1, [r2, #12]
  reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to change               */
 800330e:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8003312:	400b      	ands	r3, r1
 8003314:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8003318:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
    \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07);               /* only values 0..7 are used          */
 800331c:	f004 0407 	and.w	r4, r4, #7

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
  reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to change               */
  reg_value  =  (reg_value                                 |
 8003320:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
                ((uint32_t)0x5FA << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << 8));                                     /* Insert write key and priorty group */
  SCB->AIRCR =  reg_value;
 8003324:	60d3      	str	r3, [r2, #12]
 8003326:	bd10      	pop	{r4, pc}
 8003328:	080222cb 	.word	0x080222cb
 800332c:	e000ed00 	.word	0xe000ed00

08003330 <HAL_NVIC_SetPriority>:
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
  uint32_t prioritygroup = 0x00;
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 8003330:	2a0f      	cmp	r2, #15
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8003332:	b570      	push	{r4, r5, r6, lr}
 8003334:	4605      	mov	r5, r0
 8003336:	460c      	mov	r4, r1
 8003338:	4616      	mov	r6, r2
  uint32_t prioritygroup = 0x00;
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 800333a:	d903      	bls.n	8003344 <HAL_NVIC_SetPriority+0x14>
 800333c:	481a      	ldr	r0, [pc, #104]	; (80033a8 <HAL_NVIC_SetPriority+0x78>)
 800333e:	21bc      	movs	r1, #188	; 0xbc
 8003340:	f7fe f8d2 	bl	80014e8 <assert_failed>
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 8003344:	2c0f      	cmp	r4, #15
 8003346:	d903      	bls.n	8003350 <HAL_NVIC_SetPriority+0x20>
 8003348:	4817      	ldr	r0, [pc, #92]	; (80033a8 <HAL_NVIC_SetPriority+0x78>)
 800334a:	21bd      	movs	r1, #189	; 0xbd
 800334c:	f7fe f8cc 	bl	80014e8 <assert_failed>

    \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
{
  return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grouping field */
 8003350:	4b16      	ldr	r3, [pc, #88]	; (80033ac <HAL_NVIC_SetPriority+0x7c>)
 8003352:	68db      	ldr	r3, [r3, #12]
 8003354:	f3c3 2302 	ubfx	r3, r3, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - PriorityGroupTmp;
 8003358:	f1c3 0207 	rsb	r2, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __NVIC_PRIO_BITS;
 800335c:	1d19      	adds	r1, r3, #4
{
  uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - PriorityGroupTmp;
 800335e:	2a04      	cmp	r2, #4
 8003360:	bf28      	it	cs
 8003362:	2204      	movcs	r2, #4
  SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __NVIC_PRIO_BITS;
 8003364:	2906      	cmp	r1, #6
 8003366:	bf8c      	ite	hi
 8003368:	3b03      	subhi	r3, #3
 800336a:	2300      	movls	r3, #0

  return (
           ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
           ((SubPriority     & ((1 << (SubPriorityBits    )) - 1)))
 800336c:	2101      	movs	r1, #1
 800336e:	fa01 f003 	lsl.w	r0, r1, r3

  PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - PriorityGroupTmp;
  SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __NVIC_PRIO_BITS;

  return (
           ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
 8003372:	4091      	lsls	r1, r2
 8003374:	3901      	subs	r1, #1
           ((SubPriority     & ((1 << (SubPriorityBits    )) - 1)))
 8003376:	3801      	subs	r0, #1

  PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - PriorityGroupTmp;
  SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __NVIC_PRIO_BITS;

  return (
           ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
 8003378:	400c      	ands	r4, r1
 800337a:	409c      	lsls	r4, r3
           ((SubPriority     & ((1 << (SubPriorityBits    )) - 1)))
 800337c:	4006      	ands	r6, r0
    \param [in]      IRQn  Interrupt number.
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
 800337e:	2d00      	cmp	r5, #0
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - PriorityGroupTmp;
  SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __NVIC_PRIO_BITS;

  return (
 8003380:	ea44 0406 	orr.w	r4, r4, r6
 8003384:	ea4f 1404 	mov.w	r4, r4, lsl #4
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
 8003388:	bfaf      	iteee	ge
 800338a:	f105 4560 	addge.w	r5, r5, #3758096384	; 0xe0000000
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
 800338e:	f005 050f 	andlt.w	r5, r5, #15
 8003392:	4b07      	ldrlt	r3, [pc, #28]	; (80033b0 <HAL_NVIC_SetPriority+0x80>)
 8003394:	b2e4      	uxtblt	r4, r4
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
 8003396:	bfa5      	ittet	ge
 8003398:	f505 4561 	addge.w	r5, r5, #57600	; 0xe100
 800339c:	b2e4      	uxtbge	r4, r4
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
 800339e:	555c      	strblt	r4, [r3, r5]
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
 80033a0:	f885 4300 	strbge.w	r4, [r5, #768]	; 0x300
 80033a4:	bd70      	pop	{r4, r5, r6, pc}
 80033a6:	bf00      	nop
 80033a8:	080222cb 	.word	0x080222cb
 80033ac:	e000ed00 	.word	0xe000ed00
 80033b0:	e000ed14 	.word	0xe000ed14

080033b4 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80033b4:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 80033b6:	1e04      	subs	r4, r0, #0
 80033b8:	da03      	bge.n	80033c2 <HAL_NVIC_EnableIRQ+0xe>
 80033ba:	4806      	ldr	r0, [pc, #24]	; (80033d4 <HAL_NVIC_EnableIRQ+0x20>)
 80033bc:	21d0      	movs	r1, #208	; 0xd0
 80033be:	f7fe f893 	bl	80014e8 <assert_failed>
    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
/*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
 80033c2:	0961      	lsrs	r1, r4, #5
 80033c4:	2301      	movs	r3, #1
 80033c6:	f004 041f 	and.w	r4, r4, #31
 80033ca:	4a03      	ldr	r2, [pc, #12]	; (80033d8 <HAL_NVIC_EnableIRQ+0x24>)
 80033cc:	40a3      	lsls	r3, r4
 80033ce:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 80033d2:	bd10      	pop	{r4, pc}
 80033d4:	080222cb 	.word	0x080222cb
 80033d8:	e000e100 	.word	0xe000e100

080033dc <HAL_SYSTICK_Config>:
    must contain a vendor-specific implementation of this function.

 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1) > SysTick_LOAD_RELOAD_Msk)  return (1);      /* Reload value impossible */
 80033dc:	3801      	subs	r0, #1
 80033de:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000

  SysTick->LOAD  = ticks - 1;                                  /* set reload register */
 80033e2:	bf3f      	itttt	cc
 80033e4:	4b06      	ldrcc	r3, [pc, #24]	; (8003400 <HAL_SYSTICK_Config+0x24>)
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
 80033e6:	4a07      	ldrcc	r2, [pc, #28]	; (8003404 <HAL_SYSTICK_Config+0x28>)
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1) > SysTick_LOAD_RELOAD_Msk)  return (1);      /* Reload value impossible */

  SysTick->LOAD  = ticks - 1;                                  /* set reload register */
 80033e8:	6058      	strcc	r0, [r3, #4]
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
 80033ea:	21f0      	movcc	r1, #240	; 0xf0
 80033ec:	bf3f      	itttt	cc
 80033ee:	f882 1023 	strbcc.w	r1, [r2, #35]	; 0x23
{
  if ((ticks - 1) > SysTick_LOAD_RELOAD_Msk)  return (1);      /* Reload value impossible */

  SysTick->LOAD  = ticks - 1;                                  /* set reload register */
  NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
 80033f2:	2000      	movcc	r0, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80033f4:	2207      	movcc	r2, #7
{
  if ((ticks - 1) > SysTick_LOAD_RELOAD_Msk)  return (1);      /* Reload value impossible */

  SysTick->LOAD  = ticks - 1;                                  /* set reload register */
  NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
 80033f6:	6098      	strcc	r0, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80033f8:	bf34      	ite	cc
 80033fa:	601a      	strcc	r2, [r3, #0]
    must contain a vendor-specific implementation of this function.

 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1) > SysTick_LOAD_RELOAD_Msk)  return (1);      /* Reload value impossible */
 80033fc:	2001      	movcs	r0, #1
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 80033fe:	4770      	bx	lr
 8003400:	e000e010 	.word	0xe000e010
 8003404:	e000ed00 	.word	0xe000ed00

08003408 <UART_SetConfig>:
  * @param  huart: pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 8003408:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  uint32_t tmpreg = 0x00;
  
  /* Check the parameters */
  assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));  
 800340c:	6842      	ldr	r2, [r0, #4]
 800340e:	4b62      	ldr	r3, [pc, #392]	; (8003598 <UART_SetConfig+0x190>)
 8003410:	429a      	cmp	r2, r3
  * @param  huart: pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 8003412:	4604      	mov	r4, r0
  uint32_t tmpreg = 0x00;
  
  /* Check the parameters */
  assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));  
 8003414:	d904      	bls.n	8003420 <UART_SetConfig+0x18>
 8003416:	4861      	ldr	r0, [pc, #388]	; (800359c <UART_SetConfig+0x194>)
 8003418:	f240 712e 	movw	r1, #1838	; 0x72e
 800341c:	f7fe f864 	bl	80014e8 <assert_failed>
  assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 8003420:	68e3      	ldr	r3, [r4, #12]
 8003422:	f433 5300 	bics.w	r3, r3, #8192	; 0x2000
 8003426:	d004      	beq.n	8003432 <UART_SetConfig+0x2a>
 8003428:	485c      	ldr	r0, [pc, #368]	; (800359c <UART_SetConfig+0x194>)
 800342a:	f240 712f 	movw	r1, #1839	; 0x72f
 800342e:	f7fe f85b 	bl	80014e8 <assert_failed>
  assert_param(IS_UART_PARITY(huart->Init.Parity));
 8003432:	6923      	ldr	r3, [r4, #16]
 8003434:	f433 6280 	bics.w	r2, r3, #1024	; 0x400
 8003438:	d007      	beq.n	800344a <UART_SetConfig+0x42>
 800343a:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 800343e:	d004      	beq.n	800344a <UART_SetConfig+0x42>
 8003440:	4856      	ldr	r0, [pc, #344]	; (800359c <UART_SetConfig+0x194>)
 8003442:	f44f 61e6 	mov.w	r1, #1840	; 0x730
 8003446:	f7fe f84f 	bl	80014e8 <assert_failed>
  assert_param(IS_UART_MODE(huart->Init.Mode));
 800344a:	6962      	ldr	r2, [r4, #20]
 800344c:	f64f 73f3 	movw	r3, #65523	; 0xfff3
 8003450:	4013      	ands	r3, r2
 8003452:	b903      	cbnz	r3, 8003456 <UART_SetConfig+0x4e>
 8003454:	b922      	cbnz	r2, 8003460 <UART_SetConfig+0x58>
 8003456:	4851      	ldr	r0, [pc, #324]	; (800359c <UART_SetConfig+0x194>)
 8003458:	f240 7131 	movw	r1, #1841	; 0x731
 800345c:	f7fe f844 	bl	80014e8 <assert_failed>

  /*-------------------------- USART CR2 Configuration -----------------------*/
  tmpreg = huart->Instance->CR2;
 8003460:	6826      	ldr	r6, [r4, #0]
  /* Configure the UART Word Length, Parity and mode: 
     Set the M bits according to huart->Init.WordLength value 
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8003462:	6921      	ldr	r1, [r4, #16]
  assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
  assert_param(IS_UART_PARITY(huart->Init.Parity));
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  tmpreg = huart->Instance->CR2;
 8003464:	6933      	ldr	r3, [r6, #16]
  /* Configure the UART Word Length, Parity and mode: 
     Set the M bits according to huart->Init.WordLength value 
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8003466:	69e0      	ldr	r0, [r4, #28]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  tmpreg = huart->Instance->CR2;

  /* Clear STOP[13:12] bits */
  tmpreg &= (uint32_t)~((uint32_t)USART_CR2_STOP);
 8003468:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000

  /* Configure the UART Stop Bits: Set STOP[13:12] bits according to huart->Init.StopBits value */
  tmpreg |= (uint32_t)huart->Init.StopBits;
 800346c:	68e3      	ldr	r3, [r4, #12]
 800346e:	4313      	orrs	r3, r2
  /* Configure the UART Word Length, Parity and mode: 
     Set the M bits according to huart->Init.WordLength value 
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8003470:	68a2      	ldr	r2, [r4, #8]

  /* Configure the UART Stop Bits: Set STOP[13:12] bits according to huart->Init.StopBits value */
  tmpreg |= (uint32_t)huart->Init.StopBits;
  
  /* Write to USART CR2 */
  huart->Instance->CR2 = (uint32_t)tmpreg;
 8003472:	6133      	str	r3, [r6, #16]

  /*-------------------------- USART CR1 Configuration -----------------------*/
  tmpreg = huart->Instance->CR1;
 8003474:	68f3      	ldr	r3, [r6, #12]
  /* Configure the UART Word Length, Parity and mode: 
     Set the M bits according to huart->Init.WordLength value 
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8003476:	4311      	orrs	r1, r2
 8003478:	6962      	ldr	r2, [r4, #20]

  /*-------------------------- USART CR1 Configuration -----------------------*/
  tmpreg = huart->Instance->CR1;

  /* Clear M, PCE, PS, TE and RE bits */
  tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | \
 800347a:	f423 4316 	bic.w	r3, r3, #38400	; 0x9600
  /* Configure the UART Word Length, Parity and mode: 
     Set the M bits according to huart->Init.WordLength value 
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800347e:	430a      	orrs	r2, r1
 8003480:	4302      	orrs	r2, r0

  /*-------------------------- USART CR1 Configuration -----------------------*/
  tmpreg = huart->Instance->CR1;

  /* Clear M, PCE, PS, TE and RE bits */
  tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | \
 8003482:	f023 030c 	bic.w	r3, r3, #12
  /* Configure the UART Word Length, Parity and mode: 
     Set the M bits according to huart->Init.WordLength value 
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8003486:	4313      	orrs	r3, r2
  
  /* Write to USART CR1 */
  huart->Instance->CR1 = (uint32_t)tmpreg;
 8003488:	60f3      	str	r3, [r6, #12]
  
  /*-------------------------- USART CR3 Configuration -----------------------*/  
  tmpreg = huart->Instance->CR3;
 800348a:	6973      	ldr	r3, [r6, #20]
  
  /* Clear CTSE and RTSE bits */
  tmpreg &= (uint32_t)~((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE));
 800348c:	f423 7240 	bic.w	r2, r3, #768	; 0x300
  
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  tmpreg |= huart->Init.HwFlowCtl;
 8003490:	69a3      	ldr	r3, [r4, #24]
  
  /* Write to USART CR3 */
  huart->Instance->CR3 = (uint32_t)tmpreg;
  
  /* Check the Over Sampling */
  if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8003492:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
  
  /* Clear CTSE and RTSE bits */
  tmpreg &= (uint32_t)~((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE));
  
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  tmpreg |= huart->Init.HwFlowCtl;
 8003496:	ea43 0302 	orr.w	r3, r3, r2
  
  /* Write to USART CR3 */
  huart->Instance->CR3 = (uint32_t)tmpreg;
 800349a:	6173      	str	r3, [r6, #20]
 800349c:	4b40      	ldr	r3, [pc, #256]	; (80035a0 <UART_SetConfig+0x198>)
  
  /* Check the Over Sampling */
  if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800349e:	d136      	bne.n	800350e <UART_SetConfig+0x106>
  {
    /*-------------------------- USART BRR Configuration ---------------------*/
    if((huart->Instance == USART1) || (huart->Instance == USART6))
 80034a0:	429e      	cmp	r6, r3
 80034a2:	d003      	beq.n	80034ac <UART_SetConfig+0xa4>
 80034a4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80034a8:	429e      	cmp	r6, r3
 80034aa:	d116      	bne.n	80034da <UART_SetConfig+0xd2>
    {
      huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 80034ac:	f7ff fbd2 	bl	8002c54 <HAL_RCC_GetPCLK2Freq>
 80034b0:	6867      	ldr	r7, [r4, #4]
 80034b2:	2519      	movs	r5, #25
 80034b4:	4368      	muls	r0, r5
 80034b6:	007f      	lsls	r7, r7, #1
 80034b8:	fbb0 f7f7 	udiv	r7, r0, r7
 80034bc:	f7ff fbca 	bl	8002c54 <HAL_RCC_GetPCLK2Freq>
 80034c0:	6862      	ldr	r2, [r4, #4]
 80034c2:	f04f 0864 	mov.w	r8, #100	; 0x64
 80034c6:	4368      	muls	r0, r5
 80034c8:	fbb7 f7f8 	udiv	r7, r7, r8
 80034cc:	0052      	lsls	r2, r2, #1
 80034ce:	013f      	lsls	r7, r7, #4
 80034d0:	fbb0 f9f2 	udiv	r9, r0, r2
 80034d4:	f7ff fbbe 	bl	8002c54 <HAL_RCC_GetPCLK2Freq>
 80034d8:	e015      	b.n	8003506 <UART_SetConfig+0xfe>
    }
    else
    {
      huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 80034da:	f7ff fba3 	bl	8002c24 <HAL_RCC_GetPCLK1Freq>
 80034de:	6867      	ldr	r7, [r4, #4]
 80034e0:	2519      	movs	r5, #25
 80034e2:	4368      	muls	r0, r5
 80034e4:	007f      	lsls	r7, r7, #1
 80034e6:	fbb0 f7f7 	udiv	r7, r0, r7
 80034ea:	f7ff fb9b 	bl	8002c24 <HAL_RCC_GetPCLK1Freq>
 80034ee:	6862      	ldr	r2, [r4, #4]
 80034f0:	f04f 0864 	mov.w	r8, #100	; 0x64
 80034f4:	4368      	muls	r0, r5
 80034f6:	fbb7 f7f8 	udiv	r7, r7, r8
 80034fa:	0052      	lsls	r2, r2, #1
 80034fc:	013f      	lsls	r7, r7, #4
 80034fe:	fbb0 f9f2 	udiv	r9, r0, r2
 8003502:	f7ff fb8f 	bl	8002c24 <HAL_RCC_GetPCLK1Freq>
 8003506:	4345      	muls	r5, r0
 8003508:	6860      	ldr	r0, [r4, #4]
 800350a:	0040      	lsls	r0, r0, #1
 800350c:	e034      	b.n	8003578 <UART_SetConfig+0x170>
    }
  }
  else
  {
    /*-------------------------- USART BRR Configuration ---------------------*/
    if((huart->Instance == USART1) || (huart->Instance == USART6))
 800350e:	429e      	cmp	r6, r3
 8003510:	d002      	beq.n	8003518 <UART_SetConfig+0x110>
 8003512:	4b24      	ldr	r3, [pc, #144]	; (80035a4 <UART_SetConfig+0x19c>)
 8003514:	429e      	cmp	r6, r3
 8003516:	d116      	bne.n	8003546 <UART_SetConfig+0x13e>
    {
      huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 8003518:	f7ff fb9c 	bl	8002c54 <HAL_RCC_GetPCLK2Freq>
 800351c:	6867      	ldr	r7, [r4, #4]
 800351e:	2519      	movs	r5, #25
 8003520:	4368      	muls	r0, r5
 8003522:	00bf      	lsls	r7, r7, #2
 8003524:	fbb0 f7f7 	udiv	r7, r0, r7
 8003528:	f7ff fb94 	bl	8002c54 <HAL_RCC_GetPCLK2Freq>
 800352c:	6862      	ldr	r2, [r4, #4]
 800352e:	f04f 0864 	mov.w	r8, #100	; 0x64
 8003532:	4368      	muls	r0, r5
 8003534:	fbb7 f7f8 	udiv	r7, r7, r8
 8003538:	0092      	lsls	r2, r2, #2
 800353a:	013f      	lsls	r7, r7, #4
 800353c:	fbb0 f9f2 	udiv	r9, r0, r2
 8003540:	f7ff fb88 	bl	8002c54 <HAL_RCC_GetPCLK2Freq>
 8003544:	e015      	b.n	8003572 <UART_SetConfig+0x16a>
    }
    else
    {
      huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 8003546:	f7ff fb6d 	bl	8002c24 <HAL_RCC_GetPCLK1Freq>
 800354a:	6867      	ldr	r7, [r4, #4]
 800354c:	2519      	movs	r5, #25
 800354e:	4368      	muls	r0, r5
 8003550:	00bf      	lsls	r7, r7, #2
 8003552:	fbb0 f7f7 	udiv	r7, r0, r7
 8003556:	f7ff fb65 	bl	8002c24 <HAL_RCC_GetPCLK1Freq>
 800355a:	6862      	ldr	r2, [r4, #4]
 800355c:	f04f 0864 	mov.w	r8, #100	; 0x64
 8003560:	4368      	muls	r0, r5
 8003562:	fbb7 f7f8 	udiv	r7, r7, r8
 8003566:	0092      	lsls	r2, r2, #2
 8003568:	013f      	lsls	r7, r7, #4
 800356a:	fbb0 f9f2 	udiv	r9, r0, r2
 800356e:	f7ff fb59 	bl	8002c24 <HAL_RCC_GetPCLK1Freq>
 8003572:	4345      	muls	r5, r0
 8003574:	6860      	ldr	r0, [r4, #4]
 8003576:	0080      	lsls	r0, r0, #2
 8003578:	fbb5 f0f0 	udiv	r0, r5, r0
 800357c:	fbb0 f0f8 	udiv	r0, r0, r8
 8003580:	fb08 9210 	mls	r2, r8, r0, r9
 8003584:	0112      	lsls	r2, r2, #4
 8003586:	3232      	adds	r2, #50	; 0x32
 8003588:	fbb2 f3f8 	udiv	r3, r2, r8
 800358c:	f003 030f 	and.w	r3, r3, #15
 8003590:	433b      	orrs	r3, r7
 8003592:	60b3      	str	r3, [r6, #8]
 8003594:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003598:	00a037a0 	.word	0x00a037a0
 800359c:	0802231d 	.word	0x0802231d
 80035a0:	40011000 	.word	0x40011000
 80035a4:	40011400 	.word	0x40011400

080035a8 <HAL_UART_Init>:
  * @param  huart: pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 80035a8:	b510      	push	{r4, lr}
  /* Check the UART handle allocation */
  if(huart == NULL)
 80035aa:	4604      	mov	r4, r0
 80035ac:	2800      	cmp	r0, #0
 80035ae:	d06c      	beq.n	800368a <HAL_UART_Init+0xe2>
  {
    return HAL_ERROR;
  }

  /* Check the parameters */
  if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 80035b0:	6981      	ldr	r1, [r0, #24]
 80035b2:	6803      	ldr	r3, [r0, #0]
 80035b4:	4a36      	ldr	r2, [pc, #216]	; (8003690 <HAL_UART_Init+0xe8>)
 80035b6:	b1c1      	cbz	r1, 80035ea <HAL_UART_Init+0x42>
  { 
    /* The hardware flow control is available only for USART1, USART2, USART3 and USART6 */
    assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 80035b8:	4293      	cmp	r3, r2
 80035ba:	d00f      	beq.n	80035dc <HAL_UART_Init+0x34>
 80035bc:	f5a2 424c 	sub.w	r2, r2, #52224	; 0xcc00
 80035c0:	4293      	cmp	r3, r2
 80035c2:	d00b      	beq.n	80035dc <HAL_UART_Init+0x34>
 80035c4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80035c8:	4293      	cmp	r3, r2
 80035ca:	d007      	beq.n	80035dc <HAL_UART_Init+0x34>
 80035cc:	f502 424c 	add.w	r2, r2, #52224	; 0xcc00
 80035d0:	4293      	cmp	r3, r2
 80035d2:	d003      	beq.n	80035dc <HAL_UART_Init+0x34>
 80035d4:	482f      	ldr	r0, [pc, #188]	; (8003694 <HAL_UART_Init+0xec>)
 80035d6:	21fc      	movs	r1, #252	; 0xfc
 80035d8:	f7fd ff86 	bl	80014e8 <assert_failed>
    assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 80035dc:	69a3      	ldr	r3, [r4, #24]
 80035de:	f433 7340 	bics.w	r3, r3, #768	; 0x300
 80035e2:	d01c      	beq.n	800361e <HAL_UART_Init+0x76>
 80035e4:	482b      	ldr	r0, [pc, #172]	; (8003694 <HAL_UART_Init+0xec>)
 80035e6:	21fd      	movs	r1, #253	; 0xfd
 80035e8:	e017      	b.n	800361a <HAL_UART_Init+0x72>
  }
  else
  {
    assert_param(IS_UART_INSTANCE(huart->Instance));
 80035ea:	4293      	cmp	r3, r2
 80035ec:	d017      	beq.n	800361e <HAL_UART_Init+0x76>
 80035ee:	4a2a      	ldr	r2, [pc, #168]	; (8003698 <HAL_UART_Init+0xf0>)
 80035f0:	4293      	cmp	r3, r2
 80035f2:	d014      	beq.n	800361e <HAL_UART_Init+0x76>
 80035f4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80035f8:	4293      	cmp	r3, r2
 80035fa:	d010      	beq.n	800361e <HAL_UART_Init+0x76>
 80035fc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8003600:	4293      	cmp	r3, r2
 8003602:	d00c      	beq.n	800361e <HAL_UART_Init+0x76>
 8003604:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8003608:	4293      	cmp	r3, r2
 800360a:	d008      	beq.n	800361e <HAL_UART_Init+0x76>
 800360c:	f502 4244 	add.w	r2, r2, #50176	; 0xc400
 8003610:	4293      	cmp	r3, r2
 8003612:	d004      	beq.n	800361e <HAL_UART_Init+0x76>
 8003614:	481f      	ldr	r0, [pc, #124]	; (8003694 <HAL_UART_Init+0xec>)
 8003616:	f240 1101 	movw	r1, #257	; 0x101
 800361a:	f7fd ff65 	bl	80014e8 <assert_failed>
  }
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 800361e:	68a3      	ldr	r3, [r4, #8]
 8003620:	f433 5380 	bics.w	r3, r3, #4096	; 0x1000
 8003624:	d004      	beq.n	8003630 <HAL_UART_Init+0x88>
 8003626:	481b      	ldr	r0, [pc, #108]	; (8003694 <HAL_UART_Init+0xec>)
 8003628:	f240 1103 	movw	r1, #259	; 0x103
 800362c:	f7fd ff5c 	bl	80014e8 <assert_failed>
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 8003630:	69e3      	ldr	r3, [r4, #28]
 8003632:	f433 4300 	bics.w	r3, r3, #32768	; 0x8000
 8003636:	d004      	beq.n	8003642 <HAL_UART_Init+0x9a>
 8003638:	4816      	ldr	r0, [pc, #88]	; (8003694 <HAL_UART_Init+0xec>)
 800363a:	f44f 7182 	mov.w	r1, #260	; 0x104
 800363e:	f7fd ff53 	bl	80014e8 <assert_failed>
  
  if(huart->State == HAL_UART_STATE_RESET)
 8003642:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8003646:	b913      	cbnz	r3, 800364e <HAL_UART_Init+0xa6>
  {  
    /* Init the low level hardware */
    HAL_UART_MspInit(huart);
 8003648:	4620      	mov	r0, r4
 800364a:	f7fd ff57 	bl	80014fc <HAL_UART_MspInit>
  }

  huart->State = HAL_UART_STATE_BUSY;

  /* Disable the peripheral */
  __HAL_UART_DISABLE(huart);
 800364e:	6822      	ldr	r2, [r4, #0]
  {  
    /* Init the low level hardware */
    HAL_UART_MspInit(huart);
  }

  huart->State = HAL_UART_STATE_BUSY;
 8003650:	2302      	movs	r3, #2
 8003652:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  /* Disable the peripheral */
  __HAL_UART_DISABLE(huart);
 8003656:	68d3      	ldr	r3, [r2, #12]
 8003658:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800365c:	60d3      	str	r3, [r2, #12]
  
  /* Set the UART Communication parameters */
  UART_SetConfig(huart);
 800365e:	4620      	mov	r0, r4
 8003660:	f7ff fed2 	bl	8003408 <UART_SetConfig>
  
  /* In asynchronous mode, the following bits must be kept cleared: 
     - LINEN and CLKEN bits in the USART_CR2 register,
     - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  huart->Instance->CR2 &= ~(USART_CR2_LINEN | USART_CR2_CLKEN);
 8003664:	6823      	ldr	r3, [r4, #0]
 8003666:	691a      	ldr	r2, [r3, #16]
 8003668:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800366c:	611a      	str	r2, [r3, #16]
  huart->Instance->CR3 &= ~(USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN);
 800366e:	695a      	ldr	r2, [r3, #20]
 8003670:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8003674:	615a      	str	r2, [r3, #20]
  
  /* Enable the peripheral */
  __HAL_UART_ENABLE(huart);
 8003676:	68da      	ldr	r2, [r3, #12]
 8003678:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800367c:	60da      	str	r2, [r3, #12]
  
  /* Initialize the UART state */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800367e:	2000      	movs	r0, #0
  huart->State= HAL_UART_STATE_READY;
 8003680:	2301      	movs	r3, #1
  
  /* Enable the peripheral */
  __HAL_UART_ENABLE(huart);
  
  /* Initialize the UART state */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003682:	63e0      	str	r0, [r4, #60]	; 0x3c
  huart->State= HAL_UART_STATE_READY;
 8003684:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  
  return HAL_OK;
 8003688:	bd10      	pop	{r4, pc}
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
  /* Check the UART handle allocation */
  if(huart == NULL)
  {
    return HAL_ERROR;
 800368a:	2001      	movs	r0, #1
  /* Initialize the UART state */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
  huart->State= HAL_UART_STATE_READY;
  
  return HAL_OK;
}
 800368c:	bd10      	pop	{r4, pc}
 800368e:	bf00      	nop
 8003690:	40011000 	.word	0x40011000
 8003694:	0802231d 	.word	0x0802231d
 8003698:	40004400 	.word	0x40004400

0800369c <HAL_UART_Transmit_DMA>:
  * @param  pData: Pointer to data buffer
  * @param  Size: Amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
{
 800369c:	4613      	mov	r3, r2
  uint32_t *tmp;
  uint32_t tmp1 = 0;
  
  tmp1 = huart->State;  
 800369e:	f890 2039 	ldrb.w	r2, [r0, #57]	; 0x39
 80036a2:	b2d2      	uxtb	r2, r2
  if((tmp1 == HAL_UART_STATE_READY) || (tmp1 == HAL_UART_STATE_BUSY_RX))
 80036a4:	2a01      	cmp	r2, #1
  * @param  pData: Pointer to data buffer
  * @param  Size: Amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
{
 80036a6:	b510      	push	{r4, lr}
 80036a8:	4604      	mov	r4, r0
  uint32_t *tmp;
  uint32_t tmp1 = 0;
  
  tmp1 = huart->State;  
  if((tmp1 == HAL_UART_STATE_READY) || (tmp1 == HAL_UART_STATE_BUSY_RX))
 80036aa:	d001      	beq.n	80036b0 <HAL_UART_Transmit_DMA+0x14>
 80036ac:	2a22      	cmp	r2, #34	; 0x22
 80036ae:	d12e      	bne.n	800370e <HAL_UART_Transmit_DMA+0x72>
  {
    if((pData == NULL ) || (Size == 0)) 
 80036b0:	b359      	cbz	r1, 800370a <HAL_UART_Transmit_DMA+0x6e>
 80036b2:	b353      	cbz	r3, 800370a <HAL_UART_Transmit_DMA+0x6e>
    {
      return HAL_ERROR;
    }
    
    /* Process Locked */
    __HAL_LOCK(huart);
 80036b4:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 80036b8:	2a01      	cmp	r2, #1
 80036ba:	d028      	beq.n	800370e <HAL_UART_Transmit_DMA+0x72>
 80036bc:	2201      	movs	r2, #1
 80036be:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
    
    huart->pTxBuffPtr = pData;
    huart->TxXferSize = Size;
    huart->TxXferCount = Size;
    
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 80036c2:	2200      	movs	r2, #0
 80036c4:	63e2      	str	r2, [r4, #60]	; 0x3c
    /* Check if a receive process is ongoing or not */
    if(huart->State == HAL_UART_STATE_BUSY_RX) 
 80036c6:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
    {
      huart->State = HAL_UART_STATE_BUSY_TX;
    }
    
    /* Set the UART DMA transfer complete callback */
    huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 80036ca:	6b20      	ldr	r0, [r4, #48]	; 0x30
    
    /* Process Locked */
    __HAL_LOCK(huart);
    
    huart->pTxBuffPtr = pData;
    huart->TxXferSize = Size;
 80036cc:	84a3      	strh	r3, [r4, #36]	; 0x24
    huart->TxXferCount = Size;
    
    huart->ErrorCode = HAL_UART_ERROR_NONE;
    /* Check if a receive process is ongoing or not */
    if(huart->State == HAL_UART_STATE_BUSY_RX) 
 80036ce:	2a22      	cmp	r2, #34	; 0x22
    {
      huart->State = HAL_UART_STATE_BUSY_TX_RX;
 80036d0:	bf0c      	ite	eq
 80036d2:	2232      	moveq	r2, #50	; 0x32
    }
    else
    {
      huart->State = HAL_UART_STATE_BUSY_TX;
 80036d4:	2212      	movne	r2, #18
 80036d6:	f884 2039 	strb.w	r2, [r4, #57]	; 0x39
    }
    
    /* Set the UART DMA transfer complete callback */
    huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 80036da:	4a0e      	ldr	r2, [pc, #56]	; (8003714 <HAL_UART_Transmit_DMA+0x78>)
    /* Process Locked */
    __HAL_LOCK(huart);
    
    huart->pTxBuffPtr = pData;
    huart->TxXferSize = Size;
    huart->TxXferCount = Size;
 80036dc:	84e3      	strh	r3, [r4, #38]	; 0x26
    }
    
    /* Process Locked */
    __HAL_LOCK(huart);
    
    huart->pTxBuffPtr = pData;
 80036de:	6221      	str	r1, [r4, #32]
    {
      huart->State = HAL_UART_STATE_BUSY_TX;
    }
    
    /* Set the UART DMA transfer complete callback */
    huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 80036e0:	63c2      	str	r2, [r0, #60]	; 0x3c
    
    /* Set the UART DMA Half transfer complete callback */
    huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 80036e2:	4a0d      	ldr	r2, [pc, #52]	; (8003718 <HAL_UART_Transmit_DMA+0x7c>)
 80036e4:	6402      	str	r2, [r0, #64]	; 0x40
    
    /* Set the DMA error callback */
    huart->hdmatx->XferErrorCallback = UART_DMAError;
 80036e6:	4a0d      	ldr	r2, [pc, #52]	; (800371c <HAL_UART_Transmit_DMA+0x80>)
 80036e8:	6482      	str	r2, [r0, #72]	; 0x48

    /* Enable the UART transmit DMA Stream */
    tmp = (uint32_t*)&pData;
    HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t*)tmp, (uint32_t)&huart->Instance->DR, Size);
 80036ea:	6822      	ldr	r2, [r4, #0]
 80036ec:	3204      	adds	r2, #4
 80036ee:	f000 fbdf 	bl	8003eb0 <HAL_DMA_Start_IT>
    
    /* Clear the TC flag in the SR register by writing 0 to it */
    __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 80036f2:	6823      	ldr	r3, [r4, #0]
 80036f4:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80036f8:	601a      	str	r2, [r3, #0]
    
    /* Enable the DMA transfer for transmit request by setting the DMAT bit
       in the UART CR3 register */
    huart->Instance->CR3 |= USART_CR3_DMAT;
 80036fa:	695a      	ldr	r2, [r3, #20]
    
    /* Process Unlocked */
    __HAL_UNLOCK(huart);
 80036fc:	2000      	movs	r0, #0
    /* Clear the TC flag in the SR register by writing 0 to it */
    __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
    
    /* Enable the DMA transfer for transmit request by setting the DMAT bit
       in the UART CR3 register */
    huart->Instance->CR3 |= USART_CR3_DMAT;
 80036fe:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8003702:	615a      	str	r2, [r3, #20]
    
    /* Process Unlocked */
    __HAL_UNLOCK(huart);
 8003704:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
    
    return HAL_OK;
 8003708:	bd10      	pop	{r4, pc}
  tmp1 = huart->State;  
  if((tmp1 == HAL_UART_STATE_READY) || (tmp1 == HAL_UART_STATE_BUSY_RX))
  {
    if((pData == NULL ) || (Size == 0)) 
    {
      return HAL_ERROR;
 800370a:	2001      	movs	r0, #1
 800370c:	bd10      	pop	{r4, pc}
    
    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;   
 800370e:	2002      	movs	r0, #2
  }
}
 8003710:	bd10      	pop	{r4, pc}
 8003712:	bf00      	nop
 8003714:	080037a1 	.word	0x080037a1
 8003718:	080037cf 	.word	0x080037cf
 800371c:	08003817 	.word	0x08003817

08003720 <HAL_UART_Receive_DMA>:
  * @param  Size: Amount of data to be received
  * @note   When the UART parity is enabled (PCE = 1) the data received contain the parity bit.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
{
 8003720:	b538      	push	{r3, r4, r5, lr}
 8003722:	4613      	mov	r3, r2
  uint32_t *tmp;
  uint32_t tmp1 = 0;
  
  tmp1 = huart->State;    
 8003724:	f890 2039 	ldrb.w	r2, [r0, #57]	; 0x39
 8003728:	b2d2      	uxtb	r2, r2
  if((tmp1 == HAL_UART_STATE_READY) || (tmp1 == HAL_UART_STATE_BUSY_TX))
 800372a:	2a01      	cmp	r2, #1
  * @param  Size: Amount of data to be received
  * @note   When the UART parity is enabled (PCE = 1) the data received contain the parity bit.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
{
 800372c:	4604      	mov	r4, r0
 800372e:	460d      	mov	r5, r1
  uint32_t *tmp;
  uint32_t tmp1 = 0;
  
  tmp1 = huart->State;    
  if((tmp1 == HAL_UART_STATE_READY) || (tmp1 == HAL_UART_STATE_BUSY_TX))
 8003730:	d001      	beq.n	8003736 <HAL_UART_Receive_DMA+0x16>
 8003732:	2a12      	cmp	r2, #18
 8003734:	d12b      	bne.n	800378e <HAL_UART_Receive_DMA+0x6e>
  {
    if((pData == NULL ) || (Size == 0)) 
 8003736:	b345      	cbz	r5, 800378a <HAL_UART_Receive_DMA+0x6a>
 8003738:	b33b      	cbz	r3, 800378a <HAL_UART_Receive_DMA+0x6a>
    {
      return HAL_ERROR;
    }
    
    /* Process Locked */
    __HAL_LOCK(huart);
 800373a:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800373e:	2a01      	cmp	r2, #1
 8003740:	d025      	beq.n	800378e <HAL_UART_Receive_DMA+0x6e>
 8003742:	2201      	movs	r2, #1
 8003744:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
    
    huart->pRxBuffPtr = pData;
    huart->RxXferSize = Size;
    
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003748:	2200      	movs	r2, #0
 800374a:	63e2      	str	r2, [r4, #60]	; 0x3c
    /* Check if a transmit process is ongoing or not */
    if(huart->State == HAL_UART_STATE_BUSY_TX) 
 800374c:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
    {
      huart->State = HAL_UART_STATE_BUSY_RX;
    }
    
    /* Set the UART DMA transfer complete callback */
    huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 8003750:	6b60      	ldr	r0, [r4, #52]	; 0x34
    
    /* Process Locked */
    __HAL_LOCK(huart);
    
    huart->pRxBuffPtr = pData;
    huart->RxXferSize = Size;
 8003752:	85a3      	strh	r3, [r4, #44]	; 0x2c
    
    huart->ErrorCode = HAL_UART_ERROR_NONE;
    /* Check if a transmit process is ongoing or not */
    if(huart->State == HAL_UART_STATE_BUSY_TX) 
 8003754:	2a12      	cmp	r2, #18
    {
      huart->State = HAL_UART_STATE_BUSY_TX_RX;
 8003756:	bf0c      	ite	eq
 8003758:	2232      	moveq	r2, #50	; 0x32
    }
    else
    {
      huart->State = HAL_UART_STATE_BUSY_RX;
 800375a:	2222      	movne	r2, #34	; 0x22
 800375c:	f884 2039 	strb.w	r2, [r4, #57]	; 0x39
    }
    
    /* Set the UART DMA transfer complete callback */
    huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 8003760:	4a0c      	ldr	r2, [pc, #48]	; (8003794 <HAL_UART_Receive_DMA+0x74>)
    }
    
    /* Process Locked */
    __HAL_LOCK(huart);
    
    huart->pRxBuffPtr = pData;
 8003762:	62a5      	str	r5, [r4, #40]	; 0x28
    /* Set the DMA error callback */
    huart->hdmarx->XferErrorCallback = UART_DMAError;

    /* Enable the DMA Stream */
    tmp = (uint32_t*)&pData;
    HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t*)tmp, Size);
 8003764:	6821      	ldr	r1, [r4, #0]
    {
      huart->State = HAL_UART_STATE_BUSY_RX;
    }
    
    /* Set the UART DMA transfer complete callback */
    huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 8003766:	63c2      	str	r2, [r0, #60]	; 0x3c
    
    /* Set the UART DMA Half transfer complete callback */
    huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 8003768:	4a0b      	ldr	r2, [pc, #44]	; (8003798 <HAL_UART_Receive_DMA+0x78>)
 800376a:	6402      	str	r2, [r0, #64]	; 0x40
    
    /* Set the DMA error callback */
    huart->hdmarx->XferErrorCallback = UART_DMAError;
 800376c:	4a0b      	ldr	r2, [pc, #44]	; (800379c <HAL_UART_Receive_DMA+0x7c>)
 800376e:	6482      	str	r2, [r0, #72]	; 0x48

    /* Enable the DMA Stream */
    tmp = (uint32_t*)&pData;
    HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t*)tmp, Size);
 8003770:	3104      	adds	r1, #4
 8003772:	462a      	mov	r2, r5
 8003774:	f000 fb9c 	bl	8003eb0 <HAL_DMA_Start_IT>
    
    /* Enable the DMA transfer for the receiver request by setting the DMAR bit 
    in the UART CR3 register */
    huart->Instance->CR3 |= USART_CR3_DMAR;
 8003778:	6822      	ldr	r2, [r4, #0]
 800377a:	6953      	ldr	r3, [r2, #20]
    
    /* Process Unlocked */
    __HAL_UNLOCK(huart);
 800377c:	2000      	movs	r0, #0
    tmp = (uint32_t*)&pData;
    HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t*)tmp, Size);
    
    /* Enable the DMA transfer for the receiver request by setting the DMAR bit 
    in the UART CR3 register */
    huart->Instance->CR3 |= USART_CR3_DMAR;
 800377e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003782:	6153      	str	r3, [r2, #20]
    
    /* Process Unlocked */
    __HAL_UNLOCK(huart);
 8003784:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
    
    return HAL_OK;
 8003788:	bd38      	pop	{r3, r4, r5, pc}
  tmp1 = huart->State;    
  if((tmp1 == HAL_UART_STATE_READY) || (tmp1 == HAL_UART_STATE_BUSY_TX))
  {
    if((pData == NULL ) || (Size == 0)) 
    {
      return HAL_ERROR;
 800378a:	2001      	movs	r0, #1
 800378c:	bd38      	pop	{r3, r4, r5, pc}
    
    return HAL_OK;
  }
  else
  {
    return HAL_BUSY; 
 800378e:	2002      	movs	r0, #2
  }
}
 8003790:	bd38      	pop	{r3, r4, r5, pc}
 8003792:	bf00      	nop
 8003794:	080037d9 	.word	0x080037d9
 8003798:	0800380d 	.word	0x0800380d
 800379c:	08003817 	.word	0x08003817

080037a0 <UART_DMATransmitCplt>:
  * @brief  DMA UART transmit process complete callback. 
  * @param  hdma: DMA handle
  * @retval None
  */
static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
{
 80037a0:	b508      	push	{r3, lr}
  UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
  /* DMA Normal mode*/
  if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0)
 80037a2:	6803      	ldr	r3, [r0, #0]
  * @param  hdma: DMA handle
  * @retval None
  */
static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
{
  UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 80037a4:	6b82      	ldr	r2, [r0, #56]	; 0x38
  /* DMA Normal mode*/
  if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0)
 80037a6:	681b      	ldr	r3, [r3, #0]
 80037a8:	f413 7380 	ands.w	r3, r3, #256	; 0x100
 80037ac:	d10a      	bne.n	80037c4 <UART_DMATransmitCplt+0x24>
  {
    huart->TxXferCount = 0;
 80037ae:	84d3      	strh	r3, [r2, #38]	; 0x26

    /* Disable the DMA transfer for transmit request by setting the DMAT bit
       in the UART CR3 register */
    huart->Instance->CR3 &= (uint32_t)~((uint32_t)USART_CR3_DMAT);
 80037b0:	6813      	ldr	r3, [r2, #0]
 80037b2:	695a      	ldr	r2, [r3, #20]
 80037b4:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80037b8:	615a      	str	r2, [r3, #20]

    /* Enable the UART Transmit Complete Interrupt */
    __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 80037ba:	68da      	ldr	r2, [r3, #12]
 80037bc:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80037c0:	60da      	str	r2, [r3, #12]
 80037c2:	bd08      	pop	{r3, pc}
  }
  /* DMA Circular mode */
  else
  {
    HAL_UART_TxCpltCallback(huart);
 80037c4:	4610      	mov	r0, r2
 80037c6:	f001 feb7 	bl	8005538 <HAL_UART_TxCpltCallback>
 80037ca:	bd08      	pop	{r3, pc}

080037cc <HAL_UART_TxHalfCpltCallback>:
  * @param  huart: pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
 __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
{
 80037cc:	4770      	bx	lr

080037ce <UART_DMATxHalfCplt>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
{
 80037ce:	b508      	push	{r3, lr}
  UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;

  HAL_UART_TxHalfCpltCallback(huart);
 80037d0:	6b80      	ldr	r0, [r0, #56]	; 0x38
 80037d2:	f7ff fffb 	bl	80037cc <HAL_UART_TxHalfCpltCallback>
 80037d6:	bd08      	pop	{r3, pc}

080037d8 <UART_DMAReceiveCplt>:
  */
static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)  
{
  UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
  /* DMA Normal mode*/
  if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0)
 80037d8:	6802      	ldr	r2, [r0, #0]
 80037da:	6812      	ldr	r2, [r2, #0]
 80037dc:	f412 7280 	ands.w	r2, r2, #256	; 0x100
  * @brief  DMA UART receive process complete callback. 
  * @param  hdma: DMA handle
  * @retval None
  */
static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)  
{
 80037e0:	b508      	push	{r3, lr}
  UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 80037e2:	6b83      	ldr	r3, [r0, #56]	; 0x38
  /* DMA Normal mode*/
  if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0)
 80037e4:	d10d      	bne.n	8003802 <UART_DMAReceiveCplt+0x2a>
  {
    huart->RxXferCount = 0;
  
    /* Disable the DMA transfer for the receiver request by setting the DMAR bit 
       in the UART CR3 register */
    huart->Instance->CR3 &= (uint32_t)~((uint32_t)USART_CR3_DMAR);
 80037e6:	6819      	ldr	r1, [r3, #0]
{
  UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
  /* DMA Normal mode*/
  if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0)
  {
    huart->RxXferCount = 0;
 80037e8:	85da      	strh	r2, [r3, #46]	; 0x2e
  
    /* Disable the DMA transfer for the receiver request by setting the DMAR bit 
       in the UART CR3 register */
    huart->Instance->CR3 &= (uint32_t)~((uint32_t)USART_CR3_DMAR);
 80037ea:	694a      	ldr	r2, [r1, #20]
 80037ec:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80037f0:	614a      	str	r2, [r1, #20]

    /* Check if a transmit process is ongoing or not */
    if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
 80037f2:	f893 2039 	ldrb.w	r2, [r3, #57]	; 0x39
 80037f6:	2a32      	cmp	r2, #50	; 0x32
    {
      huart->State = HAL_UART_STATE_BUSY_TX;
 80037f8:	bf0c      	ite	eq
 80037fa:	2212      	moveq	r2, #18
    }
    else
    {
      huart->State = HAL_UART_STATE_READY;
 80037fc:	2201      	movne	r2, #1
 80037fe:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
    }
  }
  HAL_UART_RxCpltCallback(huart);
 8003802:	4618      	mov	r0, r3
 8003804:	f001 fe9e 	bl	8005544 <HAL_UART_RxCpltCallback>
 8003808:	bd08      	pop	{r3, pc}

0800380a <HAL_UART_RxHalfCpltCallback>:
  * @param  huart: pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
__weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
{
 800380a:	4770      	bx	lr

0800380c <UART_DMARxHalfCplt>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
{
 800380c:	b508      	push	{r3, lr}
  UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;

  HAL_UART_RxHalfCpltCallback(huart); 
 800380e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8003810:	f7ff fffb 	bl	800380a <HAL_UART_RxHalfCpltCallback>
 8003814:	bd08      	pop	{r3, pc}

08003816 <UART_DMAError>:
  * @param  hdma: DMA handle
  * @retval None
  */
static void UART_DMAError(DMA_HandleTypeDef *hdma)   
{
  UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 8003816:	6b80      	ldr	r0, [r0, #56]	; 0x38
  * @brief  DMA UART communication error callback.
  * @param  hdma: DMA handle
  * @retval None
  */
static void UART_DMAError(DMA_HandleTypeDef *hdma)   
{
 8003818:	b508      	push	{r3, lr}
  UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
  huart->RxXferCount = 0;
 800381a:	2300      	movs	r3, #0
 800381c:	85c3      	strh	r3, [r0, #46]	; 0x2e
  huart->TxXferCount = 0;
 800381e:	84c3      	strh	r3, [r0, #38]	; 0x26
  huart->State= HAL_UART_STATE_READY;
 8003820:	2301      	movs	r3, #1
 8003822:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  huart->ErrorCode |= HAL_UART_ERROR_DMA;
 8003826:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8003828:	f043 0310 	orr.w	r3, r3, #16
 800382c:	63c3      	str	r3, [r0, #60]	; 0x3c
  HAL_UART_ErrorCallback(huart);
 800382e:	f001 fe8f 	bl	8005550 <HAL_UART_ErrorCallback>
 8003832:	bd08      	pop	{r3, pc}

08003834 <HAL_UART_IRQHandler>:
  * @param  huart: pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
{
 8003834:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  uint32_t tmp1 = 0, tmp2 = 0;

  tmp1 = __HAL_UART_GET_FLAG(huart, UART_FLAG_PE);
 8003836:	6803      	ldr	r3, [r0, #0]
 8003838:	6819      	ldr	r1, [r3, #0]
  tmp2 = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_PE);  
 800383a:	68da      	ldr	r2, [r3, #12]
  /* UART parity error interrupt occurred ------------------------------------*/
  if((tmp1 != RESET) && (tmp2 != RESET))
 800383c:	07c9      	lsls	r1, r1, #31
  * @param  huart: pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
{
 800383e:	4604      	mov	r4, r0
  uint32_t tmp1 = 0, tmp2 = 0;

  tmp1 = __HAL_UART_GET_FLAG(huart, UART_FLAG_PE);
  tmp2 = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_PE);  
  /* UART parity error interrupt occurred ------------------------------------*/
  if((tmp1 != RESET) && (tmp2 != RESET))
 8003840:	d50a      	bpl.n	8003858 <HAL_UART_IRQHandler+0x24>
 8003842:	05d0      	lsls	r0, r2, #23
 8003844:	d508      	bpl.n	8003858 <HAL_UART_IRQHandler+0x24>
  { 
    __HAL_UART_CLEAR_PEFLAG(huart);
 8003846:	681a      	ldr	r2, [r3, #0]
 8003848:	9200      	str	r2, [sp, #0]
 800384a:	685a      	ldr	r2, [r3, #4]
 800384c:	9200      	str	r2, [sp, #0]
 800384e:	9a00      	ldr	r2, [sp, #0]
    
    huart->ErrorCode |= HAL_UART_ERROR_PE;
 8003850:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8003852:	f042 0201 	orr.w	r2, r2, #1
 8003856:	63e2      	str	r2, [r4, #60]	; 0x3c
  }
  
  tmp1 = __HAL_UART_GET_FLAG(huart, UART_FLAG_FE);
 8003858:	6819      	ldr	r1, [r3, #0]
  tmp2 = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_ERR);
 800385a:	695a      	ldr	r2, [r3, #20]
  /* UART frame error interrupt occurred -------------------------------------*/
  if((tmp1 != RESET) && (tmp2 != RESET))
 800385c:	0789      	lsls	r1, r1, #30
 800385e:	d50a      	bpl.n	8003876 <HAL_UART_IRQHandler+0x42>
 8003860:	07d0      	lsls	r0, r2, #31
 8003862:	d508      	bpl.n	8003876 <HAL_UART_IRQHandler+0x42>
  { 
    __HAL_UART_CLEAR_FEFLAG(huart);
 8003864:	681a      	ldr	r2, [r3, #0]
 8003866:	9201      	str	r2, [sp, #4]
 8003868:	685a      	ldr	r2, [r3, #4]
 800386a:	9201      	str	r2, [sp, #4]
 800386c:	9a01      	ldr	r2, [sp, #4]
    
    huart->ErrorCode |= HAL_UART_ERROR_FE;
 800386e:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8003870:	f042 0204 	orr.w	r2, r2, #4
 8003874:	63e2      	str	r2, [r4, #60]	; 0x3c
  }
  
  tmp1 = __HAL_UART_GET_FLAG(huart, UART_FLAG_NE);
 8003876:	6819      	ldr	r1, [r3, #0]
  tmp2 = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_ERR);
 8003878:	695a      	ldr	r2, [r3, #20]
  /* UART noise error interrupt occurred -------------------------------------*/
  if((tmp1 != RESET) && (tmp2 != RESET))
 800387a:	0749      	lsls	r1, r1, #29
 800387c:	d50a      	bpl.n	8003894 <HAL_UART_IRQHandler+0x60>
 800387e:	07d0      	lsls	r0, r2, #31
 8003880:	d508      	bpl.n	8003894 <HAL_UART_IRQHandler+0x60>
  { 
    __HAL_UART_CLEAR_NEFLAG(huart);
 8003882:	681a      	ldr	r2, [r3, #0]
 8003884:	9202      	str	r2, [sp, #8]
 8003886:	685a      	ldr	r2, [r3, #4]
 8003888:	9202      	str	r2, [sp, #8]
 800388a:	9a02      	ldr	r2, [sp, #8]
    
    huart->ErrorCode |= HAL_UART_ERROR_NE;
 800388c:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800388e:	f042 0202 	orr.w	r2, r2, #2
 8003892:	63e2      	str	r2, [r4, #60]	; 0x3c
  }
  
  tmp1 = __HAL_UART_GET_FLAG(huart, UART_FLAG_ORE);
 8003894:	6819      	ldr	r1, [r3, #0]
  tmp2 = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_ERR);
 8003896:	695a      	ldr	r2, [r3, #20]
  /* UART Over-Run interrupt occurred ----------------------------------------*/
  if((tmp1 != RESET) && (tmp2 != RESET))
 8003898:	0709      	lsls	r1, r1, #28
 800389a:	d50a      	bpl.n	80038b2 <HAL_UART_IRQHandler+0x7e>
 800389c:	07d0      	lsls	r0, r2, #31
 800389e:	d508      	bpl.n	80038b2 <HAL_UART_IRQHandler+0x7e>
  { 
    __HAL_UART_CLEAR_OREFLAG(huart);
 80038a0:	681a      	ldr	r2, [r3, #0]
 80038a2:	9203      	str	r2, [sp, #12]
 80038a4:	685a      	ldr	r2, [r3, #4]
 80038a6:	9203      	str	r2, [sp, #12]
 80038a8:	9a03      	ldr	r2, [sp, #12]
    
    huart->ErrorCode |= HAL_UART_ERROR_ORE;
 80038aa:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80038ac:	f042 0208 	orr.w	r2, r2, #8
 80038b0:	63e2      	str	r2, [r4, #60]	; 0x3c
  }
  
  tmp1 = __HAL_UART_GET_FLAG(huart, UART_FLAG_RXNE);
 80038b2:	6819      	ldr	r1, [r3, #0]
  tmp2 = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_RXNE);
 80038b4:	68da      	ldr	r2, [r3, #12]
  /* UART in mode Receiver ---------------------------------------------------*/
  if((tmp1 != RESET) && (tmp2 != RESET))
 80038b6:	0689      	lsls	r1, r1, #26
 80038b8:	d542      	bpl.n	8003940 <HAL_UART_IRQHandler+0x10c>
 80038ba:	0690      	lsls	r0, r2, #26
 80038bc:	d540      	bpl.n	8003940 <HAL_UART_IRQHandler+0x10c>
static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
{
  uint16_t* tmp;
  uint32_t tmp1 = 0;
  
  tmp1 = huart->State; 
 80038be:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
  if((tmp1 == HAL_UART_STATE_BUSY_RX) || (tmp1 == HAL_UART_STATE_BUSY_TX_RX))
 80038c2:	f002 02ef 	and.w	r2, r2, #239	; 0xef
 80038c6:	2a22      	cmp	r2, #34	; 0x22
 80038c8:	d13a      	bne.n	8003940 <HAL_UART_IRQHandler+0x10c>
  {
    if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 80038ca:	68a2      	ldr	r2, [r4, #8]
 80038cc:	6921      	ldr	r1, [r4, #16]
 80038ce:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
 80038d2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80038d4:	d10b      	bne.n	80038ee <HAL_UART_IRQHandler+0xba>
    {
      tmp = (uint16_t*) huart->pRxBuffPtr;
      if(huart->Init.Parity == UART_PARITY_NONE)
      {
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 80038d6:	685b      	ldr	r3, [r3, #4]
  if((tmp1 == HAL_UART_STATE_BUSY_RX) || (tmp1 == HAL_UART_STATE_BUSY_TX_RX))
  {
    if(huart->Init.WordLength == UART_WORDLENGTH_9B)
    {
      tmp = (uint16_t*) huart->pRxBuffPtr;
      if(huart->Init.Parity == UART_PARITY_NONE)
 80038d8:	b921      	cbnz	r1, 80038e4 <HAL_UART_IRQHandler+0xb0>
      {
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 80038da:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80038de:	f822 3b02 	strh.w	r3, [r2], #2
 80038e2:	e002      	b.n	80038ea <HAL_UART_IRQHandler+0xb6>
        huart->pRxBuffPtr += 2;
      }
      else
      {
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 80038e4:	b2db      	uxtb	r3, r3
 80038e6:	f822 3b01 	strh.w	r3, [r2], #1
        huart->pRxBuffPtr += 1;
 80038ea:	62a2      	str	r2, [r4, #40]	; 0x28
 80038ec:	e00a      	b.n	8003904 <HAL_UART_IRQHandler+0xd0>
      }
    }
    else
    {
      if(huart->Init.Parity == UART_PARITY_NONE)
 80038ee:	b919      	cbnz	r1, 80038f8 <HAL_UART_IRQHandler+0xc4>
      {
        *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 80038f0:	1c51      	adds	r1, r2, #1
 80038f2:	62a1      	str	r1, [r4, #40]	; 0x28
 80038f4:	685b      	ldr	r3, [r3, #4]
 80038f6:	e004      	b.n	8003902 <HAL_UART_IRQHandler+0xce>
      }
      else
      {
        *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 80038f8:	685b      	ldr	r3, [r3, #4]
 80038fa:	1c51      	adds	r1, r2, #1
 80038fc:	62a1      	str	r1, [r4, #40]	; 0x28
 80038fe:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8003902:	7013      	strb	r3, [r2, #0]
      }
    }

    if(--huart->RxXferCount == 0)
 8003904:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8003906:	3b01      	subs	r3, #1
 8003908:	b29b      	uxth	r3, r3
 800390a:	85e3      	strh	r3, [r4, #46]	; 0x2e
 800390c:	b9c3      	cbnz	r3, 8003940 <HAL_UART_IRQHandler+0x10c>
    {
      __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 800390e:	6823      	ldr	r3, [r4, #0]
 8003910:	68da      	ldr	r2, [r3, #12]
 8003912:	f022 0220 	bic.w	r2, r2, #32
 8003916:	60da      	str	r2, [r3, #12]

      /* Check if a transmit process is ongoing or not */
      if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
 8003918:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800391c:	2a32      	cmp	r2, #50	; 0x32
        huart->State = HAL_UART_STATE_BUSY_TX;
      }
      else
      {
        /* Disable the UART Parity Error Interrupt */
        __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 800391e:	bf1f      	itttt	ne
 8003920:	68da      	ldrne	r2, [r3, #12]
 8003922:	f422 7280 	bicne.w	r2, r2, #256	; 0x100
 8003926:	60da      	strne	r2, [r3, #12]

        /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
        __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 8003928:	695a      	ldrne	r2, [r3, #20]
 800392a:	bf1b      	ittet	ne
 800392c:	f022 0201 	bicne.w	r2, r2, #1
 8003930:	615a      	strne	r2, [r3, #20]
      __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);

      /* Check if a transmit process is ongoing or not */
      if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
      {
        huart->State = HAL_UART_STATE_BUSY_TX;
 8003932:	2312      	moveq	r3, #18
        __HAL_UART_DISABLE_IT(huart, UART_IT_PE);

        /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
        __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);

        huart->State = HAL_UART_STATE_READY;
 8003934:	2301      	movne	r3, #1
 8003936:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      }
      HAL_UART_RxCpltCallback(huart);
 800393a:	4620      	mov	r0, r4
 800393c:	f001 fe02 	bl	8005544 <HAL_UART_RxCpltCallback>
  if((tmp1 != RESET) && (tmp2 != RESET))
  { 
    UART_Receive_IT(huart);
  }
  
  tmp1 = __HAL_UART_GET_FLAG(huart, UART_FLAG_TXE);
 8003940:	6823      	ldr	r3, [r4, #0]
 8003942:	6819      	ldr	r1, [r3, #0]
  tmp2 = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_TXE);
 8003944:	68da      	ldr	r2, [r3, #12]
  /* UART in mode Transmitter ------------------------------------------------*/
  if((tmp1 != RESET) && (tmp2 != RESET))
 8003946:	0609      	lsls	r1, r1, #24
 8003948:	d528      	bpl.n	800399c <HAL_UART_IRQHandler+0x168>
 800394a:	0610      	lsls	r0, r2, #24
 800394c:	d526      	bpl.n	800399c <HAL_UART_IRQHandler+0x168>
static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
{
  uint16_t* tmp;
  uint32_t tmp1 = 0;
  
  tmp1 = huart->State;
 800394e:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
  if((tmp1 == HAL_UART_STATE_BUSY_TX) || (tmp1 == HAL_UART_STATE_BUSY_TX_RX))
 8003952:	f002 02df 	and.w	r2, r2, #223	; 0xdf
 8003956:	2a12      	cmp	r2, #18
 8003958:	d120      	bne.n	800399c <HAL_UART_IRQHandler+0x168>
  {
    if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 800395a:	68a2      	ldr	r2, [r4, #8]
 800395c:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
 8003960:	6a22      	ldr	r2, [r4, #32]
 8003962:	d10a      	bne.n	800397a <HAL_UART_IRQHandler+0x146>
    {
      tmp = (uint16_t*) huart->pTxBuffPtr;
      huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 8003964:	8811      	ldrh	r1, [r2, #0]
 8003966:	f3c1 0108 	ubfx	r1, r1, #0, #9
 800396a:	6059      	str	r1, [r3, #4]
      if(huart->Init.Parity == UART_PARITY_NONE)
 800396c:	6921      	ldr	r1, [r4, #16]
 800396e:	b909      	cbnz	r1, 8003974 <HAL_UART_IRQHandler+0x140>
      {
        huart->pTxBuffPtr += 2;
 8003970:	3202      	adds	r2, #2
 8003972:	e000      	b.n	8003976 <HAL_UART_IRQHandler+0x142>
      }
      else
      {
        huart->pTxBuffPtr += 1;
 8003974:	3201      	adds	r2, #1
 8003976:	6222      	str	r2, [r4, #32]
 8003978:	e003      	b.n	8003982 <HAL_UART_IRQHandler+0x14e>
      }
    } 
    else
    {
      huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 800397a:	1c51      	adds	r1, r2, #1
 800397c:	6221      	str	r1, [r4, #32]
 800397e:	7812      	ldrb	r2, [r2, #0]
 8003980:	605a      	str	r2, [r3, #4]
    }

    if(--huart->TxXferCount == 0)
 8003982:	8ce2      	ldrh	r2, [r4, #38]	; 0x26
 8003984:	3a01      	subs	r2, #1
 8003986:	b292      	uxth	r2, r2
 8003988:	84e2      	strh	r2, [r4, #38]	; 0x26
 800398a:	b93a      	cbnz	r2, 800399c <HAL_UART_IRQHandler+0x168>
    {
      /* Disable the UART Transmit Complete Interrupt */
      __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 800398c:	68da      	ldr	r2, [r3, #12]
 800398e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003992:	60da      	str	r2, [r3, #12]

      /* Enable the UART Transmit Complete Interrupt */    
      __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 8003994:	68da      	ldr	r2, [r3, #12]
 8003996:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800399a:	60da      	str	r2, [r3, #12]
  if((tmp1 != RESET) && (tmp2 != RESET))
  {
    UART_Transmit_IT(huart);
  }
  
  tmp1 = __HAL_UART_GET_FLAG(huart, UART_FLAG_TC);
 800399c:	6819      	ldr	r1, [r3, #0]
  tmp2 = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_TC);
 800399e:	68da      	ldr	r2, [r3, #12]
  /* UART in mode Transmitter end --------------------------------------------*/
  if((tmp1 != RESET) && (tmp2 != RESET))
 80039a0:	0649      	lsls	r1, r1, #25
 80039a2:	d519      	bpl.n	80039d8 <HAL_UART_IRQHandler+0x1a4>
 80039a4:	0652      	lsls	r2, r2, #25
 80039a6:	d517      	bpl.n	80039d8 <HAL_UART_IRQHandler+0x1a4>
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
  /* Disable the UART Transmit Complete Interrupt */    
  __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 80039a8:	68da      	ldr	r2, [r3, #12]
 80039aa:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80039ae:	60da      	str	r2, [r3, #12]
  
  /* Check if a receive process is ongoing or not */
  if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
 80039b0:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 80039b4:	2a32      	cmp	r2, #50	; 0x32
    huart->State = HAL_UART_STATE_BUSY_RX;
  }
  else
  {
    /* Disable the UART Parity Error Interrupt */
    __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 80039b6:	bf1f      	itttt	ne
 80039b8:	68da      	ldrne	r2, [r3, #12]
 80039ba:	f422 7280 	bicne.w	r2, r2, #256	; 0x100
 80039be:	60da      	strne	r2, [r3, #12]

    /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
    __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 80039c0:	695a      	ldrne	r2, [r3, #20]
 80039c2:	bf1b      	ittet	ne
 80039c4:	f022 0201 	bicne.w	r2, r2, #1
 80039c8:	615a      	strne	r2, [r3, #20]
  __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
  
  /* Check if a receive process is ongoing or not */
  if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
  {
    huart->State = HAL_UART_STATE_BUSY_RX;
 80039ca:	2322      	moveq	r3, #34	; 0x22
    __HAL_UART_DISABLE_IT(huart, UART_IT_PE);

    /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
    __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);

    huart->State = HAL_UART_STATE_READY;
 80039cc:	2301      	movne	r3, #1
 80039ce:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  }
  
  HAL_UART_TxCpltCallback(huart);
 80039d2:	4620      	mov	r0, r4
 80039d4:	f001 fdb0 	bl	8005538 <HAL_UART_TxCpltCallback>
  if((tmp1 != RESET) && (tmp2 != RESET))
  {
    UART_EndTransmit_IT(huart);
  }

  if(huart->ErrorCode != HAL_UART_ERROR_NONE)
 80039d8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80039da:	b12b      	cbz	r3, 80039e8 <HAL_UART_IRQHandler+0x1b4>
  {
    /* Set the UART state ready to be able to start again the process */
    huart->State = HAL_UART_STATE_READY;
 80039dc:	2301      	movs	r3, #1
 80039de:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
    
    HAL_UART_ErrorCallback(huart);
 80039e2:	4620      	mov	r0, r4
 80039e4:	f001 fdb4 	bl	8005550 <HAL_UART_ErrorCallback>
  }  
}
 80039e8:	b004      	add	sp, #16
 80039ea:	bd10      	pop	{r4, pc}

080039ec <FSMC_NORSRAM_Init>:
HAL_StatusTypeDef  FSMC_NORSRAM_Init(FSMC_NORSRAM_TypeDef *Device, FSMC_NORSRAM_InitTypeDef* Init)
{ 
  uint32_t tmpr = 0;
    
  /* Check the parameters */
  assert_param(IS_FSMC_NORSRAM_BANK(Init->NSBank));
 80039ec:	680b      	ldr	r3, [r1, #0]
 80039ee:	f033 0306 	bics.w	r3, r3, #6
  * @param  Device: Pointer to NORSRAM device instance
  * @param  Init: Pointer to NORSRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef  FSMC_NORSRAM_Init(FSMC_NORSRAM_TypeDef *Device, FSMC_NORSRAM_InitTypeDef* Init)
{ 
 80039f2:	b570      	push	{r4, r5, r6, lr}
 80039f4:	4605      	mov	r5, r0
 80039f6:	460c      	mov	r4, r1
  uint32_t tmpr = 0;
    
  /* Check the parameters */
  assert_param(IS_FSMC_NORSRAM_BANK(Init->NSBank));
 80039f8:	d003      	beq.n	8003a02 <FSMC_NORSRAM_Init+0x16>
 80039fa:	4847      	ldr	r0, [pc, #284]	; (8003b18 <FSMC_NORSRAM_Init+0x12c>)
 80039fc:	2197      	movs	r1, #151	; 0x97
 80039fe:	f7fd fd73 	bl	80014e8 <assert_failed>
  assert_param(IS_FSMC_MUX(Init->DataAddressMux));
 8003a02:	6863      	ldr	r3, [r4, #4]
 8003a04:	f033 0302 	bics.w	r3, r3, #2
 8003a08:	d003      	beq.n	8003a12 <FSMC_NORSRAM_Init+0x26>
 8003a0a:	4843      	ldr	r0, [pc, #268]	; (8003b18 <FSMC_NORSRAM_Init+0x12c>)
 8003a0c:	2198      	movs	r1, #152	; 0x98
 8003a0e:	f7fd fd6b 	bl	80014e8 <assert_failed>
  assert_param(IS_FSMC_MEMORY(Init->MemoryType));
 8003a12:	68a3      	ldr	r3, [r4, #8]
 8003a14:	f033 0204 	bics.w	r2, r3, #4
 8003a18:	d005      	beq.n	8003a26 <FSMC_NORSRAM_Init+0x3a>
 8003a1a:	2b08      	cmp	r3, #8
 8003a1c:	d003      	beq.n	8003a26 <FSMC_NORSRAM_Init+0x3a>
 8003a1e:	483e      	ldr	r0, [pc, #248]	; (8003b18 <FSMC_NORSRAM_Init+0x12c>)
 8003a20:	2199      	movs	r1, #153	; 0x99
 8003a22:	f7fd fd61 	bl	80014e8 <assert_failed>
  assert_param(IS_FSMC_NORSRAM_MEMORY_WIDTH(Init->MemoryDataWidth));
 8003a26:	68e3      	ldr	r3, [r4, #12]
 8003a28:	f033 0210 	bics.w	r2, r3, #16
 8003a2c:	d005      	beq.n	8003a3a <FSMC_NORSRAM_Init+0x4e>
 8003a2e:	2b20      	cmp	r3, #32
 8003a30:	d003      	beq.n	8003a3a <FSMC_NORSRAM_Init+0x4e>
 8003a32:	4839      	ldr	r0, [pc, #228]	; (8003b18 <FSMC_NORSRAM_Init+0x12c>)
 8003a34:	219a      	movs	r1, #154	; 0x9a
 8003a36:	f7fd fd57 	bl	80014e8 <assert_failed>
  assert_param(IS_FSMC_BURSTMODE(Init->BurstAccessMode));
 8003a3a:	6923      	ldr	r3, [r4, #16]
 8003a3c:	f433 7380 	bics.w	r3, r3, #256	; 0x100
 8003a40:	d003      	beq.n	8003a4a <FSMC_NORSRAM_Init+0x5e>
 8003a42:	4835      	ldr	r0, [pc, #212]	; (8003b18 <FSMC_NORSRAM_Init+0x12c>)
 8003a44:	219b      	movs	r1, #155	; 0x9b
 8003a46:	f7fd fd4f 	bl	80014e8 <assert_failed>
  assert_param(IS_FSMC_WAIT_POLARITY(Init->WaitSignalPolarity));
 8003a4a:	6963      	ldr	r3, [r4, #20]
 8003a4c:	f433 7300 	bics.w	r3, r3, #512	; 0x200
 8003a50:	d003      	beq.n	8003a5a <FSMC_NORSRAM_Init+0x6e>
 8003a52:	4831      	ldr	r0, [pc, #196]	; (8003b18 <FSMC_NORSRAM_Init+0x12c>)
 8003a54:	219c      	movs	r1, #156	; 0x9c
 8003a56:	f7fd fd47 	bl	80014e8 <assert_failed>
  assert_param(IS_FSMC_WRAP_MODE(Init->WrapMode));
 8003a5a:	69a3      	ldr	r3, [r4, #24]
 8003a5c:	f433 6380 	bics.w	r3, r3, #1024	; 0x400
 8003a60:	d003      	beq.n	8003a6a <FSMC_NORSRAM_Init+0x7e>
 8003a62:	482d      	ldr	r0, [pc, #180]	; (8003b18 <FSMC_NORSRAM_Init+0x12c>)
 8003a64:	219d      	movs	r1, #157	; 0x9d
 8003a66:	f7fd fd3f 	bl	80014e8 <assert_failed>
  assert_param(IS_FSMC_WAIT_SIGNAL_ACTIVE(Init->WaitSignalActive));
 8003a6a:	69e3      	ldr	r3, [r4, #28]
 8003a6c:	f433 6300 	bics.w	r3, r3, #2048	; 0x800
 8003a70:	d003      	beq.n	8003a7a <FSMC_NORSRAM_Init+0x8e>
 8003a72:	4829      	ldr	r0, [pc, #164]	; (8003b18 <FSMC_NORSRAM_Init+0x12c>)
 8003a74:	219e      	movs	r1, #158	; 0x9e
 8003a76:	f7fd fd37 	bl	80014e8 <assert_failed>
  assert_param(IS_FSMC_WRITE_OPERATION(Init->WriteOperation));
 8003a7a:	6a23      	ldr	r3, [r4, #32]
 8003a7c:	f433 5380 	bics.w	r3, r3, #4096	; 0x1000
 8003a80:	d003      	beq.n	8003a8a <FSMC_NORSRAM_Init+0x9e>
 8003a82:	4825      	ldr	r0, [pc, #148]	; (8003b18 <FSMC_NORSRAM_Init+0x12c>)
 8003a84:	219f      	movs	r1, #159	; 0x9f
 8003a86:	f7fd fd2f 	bl	80014e8 <assert_failed>
  assert_param(IS_FSMC_WAITE_SIGNAL(Init->WaitSignal));
 8003a8a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003a8c:	f433 5300 	bics.w	r3, r3, #8192	; 0x2000
 8003a90:	d003      	beq.n	8003a9a <FSMC_NORSRAM_Init+0xae>
 8003a92:	4821      	ldr	r0, [pc, #132]	; (8003b18 <FSMC_NORSRAM_Init+0x12c>)
 8003a94:	21a0      	movs	r1, #160	; 0xa0
 8003a96:	f7fd fd27 	bl	80014e8 <assert_failed>
  assert_param(IS_FSMC_EXTENDED_MODE(Init->ExtendedMode));
 8003a9a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8003a9c:	f433 4380 	bics.w	r3, r3, #16384	; 0x4000
 8003aa0:	d003      	beq.n	8003aaa <FSMC_NORSRAM_Init+0xbe>
 8003aa2:	481d      	ldr	r0, [pc, #116]	; (8003b18 <FSMC_NORSRAM_Init+0x12c>)
 8003aa4:	21a1      	movs	r1, #161	; 0xa1
 8003aa6:	f7fd fd1f 	bl	80014e8 <assert_failed>
  assert_param(IS_FSMC_ASYNWAIT(Init->AsynchronousWait));
 8003aaa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8003aac:	f433 4300 	bics.w	r3, r3, #32768	; 0x8000
 8003ab0:	d003      	beq.n	8003aba <FSMC_NORSRAM_Init+0xce>
 8003ab2:	4819      	ldr	r0, [pc, #100]	; (8003b18 <FSMC_NORSRAM_Init+0x12c>)
 8003ab4:	21a2      	movs	r1, #162	; 0xa2
 8003ab6:	f7fd fd17 	bl	80014e8 <assert_failed>
  assert_param(IS_FSMC_WRITE_BURST(Init->WriteBurst));
 8003aba:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8003abc:	f433 2300 	bics.w	r3, r3, #524288	; 0x80000
 8003ac0:	d003      	beq.n	8003aca <FSMC_NORSRAM_Init+0xde>
 8003ac2:	4815      	ldr	r0, [pc, #84]	; (8003b18 <FSMC_NORSRAM_Init+0x12c>)
 8003ac4:	21a3      	movs	r1, #163	; 0xa3
 8003ac6:	f7fd fd0f 	bl	80014e8 <assert_failed>
 8003aca:	6820      	ldr	r0, [r4, #0]
  /* Get the BTCR register value */
  tmpr = Device->BTCR[Init->NSBank];

  /* Clear MBKEN, MUXEN, MTYP, MWID, FACCEN, BURSTEN, WAITPOL, WRAPMOD, WAITCFG, WREN,
           WAITEN, EXTMOD, ASYNCWAIT, CBURSTRW and CCLKEN bits */
  tmpr &= ((uint32_t)~(FSMC_BCR1_MBKEN     | FSMC_BCR1_MUXEN    | FSMC_BCR1_MTYP     | \
 8003acc:	4a13      	ldr	r2, [pc, #76]	; (8003b1c <FSMC_NORSRAM_Init+0x130>)
  assert_param(IS_FSMC_EXTENDED_MODE(Init->ExtendedMode));
  assert_param(IS_FSMC_ASYNWAIT(Init->AsynchronousWait));
  assert_param(IS_FSMC_WRITE_BURST(Init->WriteBurst));
  
  /* Get the BTCR register value */
  tmpr = Device->BTCR[Init->NSBank];
 8003ace:	f855 3020 	ldr.w	r3, [r5, r0, lsl #2]
                       FSMC_BCR1_WAITPOL   | FSMC_BCR1_WRAPMOD  | FSMC_BCR1_WAITCFG  | \
                       FSMC_BCR1_WREN      | FSMC_BCR1_WAITEN   | FSMC_BCR1_EXTMOD   | \
                       FSMC_BCR1_ASYNCWAIT | FSMC_BCR1_CBURSTRW));
  /* Set NORSRAM device control parameters */
  tmpr |= (uint32_t)(Init->DataAddressMux       |\
                     Init->MemoryType           |\
 8003ad2:	68a6      	ldr	r6, [r4, #8]
  /* Get the BTCR register value */
  tmpr = Device->BTCR[Init->NSBank];

  /* Clear MBKEN, MUXEN, MTYP, MWID, FACCEN, BURSTEN, WAITPOL, WRAPMOD, WAITCFG, WREN,
           WAITEN, EXTMOD, ASYNCWAIT, CBURSTRW and CCLKEN bits */
  tmpr &= ((uint32_t)~(FSMC_BCR1_MBKEN     | FSMC_BCR1_MUXEN    | FSMC_BCR1_MTYP     | \
 8003ad4:	401a      	ands	r2, r3
                       FSMC_BCR1_MWID      | FSMC_BCR1_FACCEN   | FSMC_BCR1_BURSTEN  | \
                       FSMC_BCR1_WAITPOL   | FSMC_BCR1_WRAPMOD  | FSMC_BCR1_WAITCFG  | \
                       FSMC_BCR1_WREN      | FSMC_BCR1_WAITEN   | FSMC_BCR1_EXTMOD   | \
                       FSMC_BCR1_ASYNCWAIT | FSMC_BCR1_CBURSTRW));
  /* Set NORSRAM device control parameters */
  tmpr |= (uint32_t)(Init->DataAddressMux       |\
 8003ad6:	6863      	ldr	r3, [r4, #4]
 8003ad8:	ea46 0103 	orr.w	r1, r6, r3
                     Init->MemoryType           |\
 8003adc:	68e3      	ldr	r3, [r4, #12]
 8003ade:	4319      	orrs	r1, r3
                     Init->MemoryDataWidth      |\
 8003ae0:	6923      	ldr	r3, [r4, #16]
 8003ae2:	4319      	orrs	r1, r3
                     Init->BurstAccessMode      |\
 8003ae4:	6963      	ldr	r3, [r4, #20]
 8003ae6:	4319      	orrs	r1, r3
                     Init->WaitSignalPolarity   |\
 8003ae8:	69a3      	ldr	r3, [r4, #24]
 8003aea:	4319      	orrs	r1, r3
                     Init->WrapMode             |\
 8003aec:	69e3      	ldr	r3, [r4, #28]
 8003aee:	4319      	orrs	r1, r3
                     Init->WaitSignalActive     |\
 8003af0:	6a23      	ldr	r3, [r4, #32]
 8003af2:	4319      	orrs	r1, r3
                     Init->WriteOperation       |\
 8003af4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003af6:	4319      	orrs	r1, r3
                     Init->WaitSignal           |\
 8003af8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8003afa:	4319      	orrs	r1, r3
                     Init->ExtendedMode         |\
 8003afc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8003afe:	430b      	orrs	r3, r1
                       FSMC_BCR1_MWID      | FSMC_BCR1_FACCEN   | FSMC_BCR1_BURSTEN  | \
                       FSMC_BCR1_WAITPOL   | FSMC_BCR1_WRAPMOD  | FSMC_BCR1_WAITCFG  | \
                       FSMC_BCR1_WREN      | FSMC_BCR1_WAITEN   | FSMC_BCR1_EXTMOD   | \
                       FSMC_BCR1_ASYNCWAIT | FSMC_BCR1_CBURSTRW));
  /* Set NORSRAM device control parameters */
  tmpr |= (uint32_t)(Init->DataAddressMux       |\
 8003b00:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8003b02:	430b      	orrs	r3, r1
 8003b04:	4313      	orrs	r3, r2
                     Init->ExtendedMode         |\
                     Init->AsynchronousWait     |\
                     Init->WriteBurst
                     );
                    
  if(Init->MemoryType == FSMC_MEMORY_TYPE_NOR)
 8003b06:	2e08      	cmp	r6, #8
  {
    tmpr |= (uint32_t)FSMC_NORSRAM_FLASH_ACCESS_ENABLE;
 8003b08:	bf08      	it	eq
 8003b0a:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
  }
  
  Device->BTCR[Init->NSBank] = tmpr;                   
 8003b0e:	f845 3020 	str.w	r3, [r5, r0, lsl #2]
  
  return HAL_OK;
}
 8003b12:	2000      	movs	r0, #0
 8003b14:	bd70      	pop	{r4, r5, r6, pc}
 8003b16:	bf00      	nop
 8003b18:	0802236d 	.word	0x0802236d
 8003b1c:	fff70080 	.word	0xfff70080

08003b20 <FSMC_NORSRAM_Timing_Init>:
HAL_StatusTypeDef FSMC_NORSRAM_Timing_Init(FSMC_NORSRAM_TypeDef *Device, FSMC_NORSRAM_TimingTypeDef *Timing, uint32_t Bank)
{
  uint32_t tmpr = 0;
  
  /* Check the parameters */
  assert_param(IS_FSMC_ADDRESS_SETUP_TIME(Timing->AddressSetupTime));
 8003b20:	680b      	ldr	r3, [r1, #0]
 8003b22:	2b0f      	cmp	r3, #15
  * @param  Timing: Pointer to NORSRAM Timing structure
  * @param  Bank: NORSRAM bank number  
  * @retval HAL status
  */
HAL_StatusTypeDef FSMC_NORSRAM_Timing_Init(FSMC_NORSRAM_TypeDef *Device, FSMC_NORSRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 8003b24:	b570      	push	{r4, r5, r6, lr}
 8003b26:	4605      	mov	r5, r0
 8003b28:	460c      	mov	r4, r1
 8003b2a:	4616      	mov	r6, r2
  uint32_t tmpr = 0;
  
  /* Check the parameters */
  assert_param(IS_FSMC_ADDRESS_SETUP_TIME(Timing->AddressSetupTime));
 8003b2c:	d903      	bls.n	8003b36 <FSMC_NORSRAM_Timing_Init+0x16>
 8003b2e:	4828      	ldr	r0, [pc, #160]	; (8003bd0 <FSMC_NORSRAM_Timing_Init+0xb0>)
 8003b30:	21f8      	movs	r1, #248	; 0xf8
 8003b32:	f7fd fcd9 	bl	80014e8 <assert_failed>
  assert_param(IS_FSMC_ADDRESS_HOLD_TIME(Timing->AddressHoldTime));
 8003b36:	6863      	ldr	r3, [r4, #4]
 8003b38:	3b01      	subs	r3, #1
 8003b3a:	2b0e      	cmp	r3, #14
 8003b3c:	d903      	bls.n	8003b46 <FSMC_NORSRAM_Timing_Init+0x26>
 8003b3e:	4824      	ldr	r0, [pc, #144]	; (8003bd0 <FSMC_NORSRAM_Timing_Init+0xb0>)
 8003b40:	21f9      	movs	r1, #249	; 0xf9
 8003b42:	f7fd fcd1 	bl	80014e8 <assert_failed>
  assert_param(IS_FSMC_DATASETUP_TIME(Timing->DataSetupTime));
 8003b46:	68a3      	ldr	r3, [r4, #8]
 8003b48:	3b01      	subs	r3, #1
 8003b4a:	2bfe      	cmp	r3, #254	; 0xfe
 8003b4c:	d903      	bls.n	8003b56 <FSMC_NORSRAM_Timing_Init+0x36>
 8003b4e:	4820      	ldr	r0, [pc, #128]	; (8003bd0 <FSMC_NORSRAM_Timing_Init+0xb0>)
 8003b50:	21fa      	movs	r1, #250	; 0xfa
 8003b52:	f7fd fcc9 	bl	80014e8 <assert_failed>
  assert_param(IS_FSMC_TURNAROUND_TIME(Timing->BusTurnAroundDuration));
 8003b56:	68e3      	ldr	r3, [r4, #12]
 8003b58:	2b0f      	cmp	r3, #15
 8003b5a:	d903      	bls.n	8003b64 <FSMC_NORSRAM_Timing_Init+0x44>
 8003b5c:	481c      	ldr	r0, [pc, #112]	; (8003bd0 <FSMC_NORSRAM_Timing_Init+0xb0>)
 8003b5e:	21fb      	movs	r1, #251	; 0xfb
 8003b60:	f7fd fcc2 	bl	80014e8 <assert_failed>
  assert_param(IS_FSMC_CLK_DIV(Timing->CLKDivision));
 8003b64:	6923      	ldr	r3, [r4, #16]
 8003b66:	3b01      	subs	r3, #1
 8003b68:	2b0f      	cmp	r3, #15
 8003b6a:	d903      	bls.n	8003b74 <FSMC_NORSRAM_Timing_Init+0x54>
 8003b6c:	4818      	ldr	r0, [pc, #96]	; (8003bd0 <FSMC_NORSRAM_Timing_Init+0xb0>)
 8003b6e:	21fc      	movs	r1, #252	; 0xfc
 8003b70:	f7fd fcba 	bl	80014e8 <assert_failed>
  assert_param(IS_FSMC_DATA_LATENCY(Timing->DataLatency));
 8003b74:	6963      	ldr	r3, [r4, #20]
 8003b76:	3b01      	subs	r3, #1
 8003b78:	2b10      	cmp	r3, #16
 8003b7a:	d903      	bls.n	8003b84 <FSMC_NORSRAM_Timing_Init+0x64>
 8003b7c:	4814      	ldr	r0, [pc, #80]	; (8003bd0 <FSMC_NORSRAM_Timing_Init+0xb0>)
 8003b7e:	21fd      	movs	r1, #253	; 0xfd
 8003b80:	f7fd fcb2 	bl	80014e8 <assert_failed>
  assert_param(IS_FSMC_ACCESS_MODE(Timing->AccessMode));
 8003b84:	69a3      	ldr	r3, [r4, #24]
 8003b86:	f033 5340 	bics.w	r3, r3, #805306368	; 0x30000000
 8003b8a:	d003      	beq.n	8003b94 <FSMC_NORSRAM_Timing_Init+0x74>
 8003b8c:	4810      	ldr	r0, [pc, #64]	; (8003bd0 <FSMC_NORSRAM_Timing_Init+0xb0>)
 8003b8e:	21fe      	movs	r1, #254	; 0xfe
 8003b90:	f7fd fcaa 	bl	80014e8 <assert_failed>
 8003b94:	eb05 0286 	add.w	r2, r5, r6, lsl #2
 8003b98:	69a1      	ldr	r1, [r4, #24]
  
  /* Get the BTCR register value */
  tmpr = Device->BTCR[Bank + 1];
 8003b9a:	6853      	ldr	r3, [r2, #4]
                       FSMC_BTR1_ACCMOD));
  
  /* Set FSMC_NORSRAM device timing parameters */  
  tmpr |= (uint32_t)(Timing->AddressSetupTime                 |\
                    ((Timing->AddressHoldTime) << 4)          |\
                    ((Timing->DataSetupTime) << 8)            |\
 8003b9c:	68a5      	ldr	r5, [r4, #8]
  
  /* Get the BTCR register value */
  tmpr = Device->BTCR[Bank + 1];

  /* Clear ADDSET, ADDHLD, DATAST, BUSTURN, CLKDIV, DATLAT and ACCMOD bits */
  tmpr &= ((uint32_t)~(FSMC_BTR1_ADDSET  | FSMC_BTR1_ADDHLD | FSMC_BTR1_DATAST | \
 8003b9e:	f003 4640 	and.w	r6, r3, #3221225472	; 0xc0000000
 8003ba2:	6823      	ldr	r3, [r4, #0]
 8003ba4:	430b      	orrs	r3, r1
                       FSMC_BTR1_BUSTURN | FSMC_BTR1_CLKDIV | FSMC_BTR1_DATLAT | \
                       FSMC_BTR1_ACCMOD));
  
  /* Set FSMC_NORSRAM device timing parameters */  
  tmpr |= (uint32_t)(Timing->AddressSetupTime                 |\
                    ((Timing->AddressHoldTime) << 4)          |\
 8003ba6:	6861      	ldr	r1, [r4, #4]
 8003ba8:	ea43 1101 	orr.w	r1, r3, r1, lsl #4
 8003bac:	ea41 2105 	orr.w	r1, r1, r5, lsl #8
                    ((Timing->DataSetupTime) << 8)            |\
                    ((Timing->BusTurnAroundDuration) << 16)   |\
                    (((Timing->CLKDivision)-1) << 20)         |\
 8003bb0:	6923      	ldr	r3, [r4, #16]
  
  /* Set FSMC_NORSRAM device timing parameters */  
  tmpr |= (uint32_t)(Timing->AddressSetupTime                 |\
                    ((Timing->AddressHoldTime) << 4)          |\
                    ((Timing->DataSetupTime) << 8)            |\
                    ((Timing->BusTurnAroundDuration) << 16)   |\
 8003bb2:	68e5      	ldr	r5, [r4, #12]
                    (((Timing->CLKDivision)-1) << 20)         |\
 8003bb4:	3b01      	subs	r3, #1
 8003bb6:	ea41 4505 	orr.w	r5, r1, r5, lsl #16
 8003bba:	ea45 5103 	orr.w	r1, r5, r3, lsl #20
                    (((Timing->DataLatency)-2) << 24)         |\
 8003bbe:	6963      	ldr	r3, [r4, #20]
 8003bc0:	3b02      	subs	r3, #2
  tmpr &= ((uint32_t)~(FSMC_BTR1_ADDSET  | FSMC_BTR1_ADDHLD | FSMC_BTR1_DATAST | \
                       FSMC_BTR1_BUSTURN | FSMC_BTR1_CLKDIV | FSMC_BTR1_DATLAT | \
                       FSMC_BTR1_ACCMOD));
  
  /* Set FSMC_NORSRAM device timing parameters */  
  tmpr |= (uint32_t)(Timing->AddressSetupTime                 |\
 8003bc2:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8003bc6:	4333      	orrs	r3, r6
                    ((Timing->BusTurnAroundDuration) << 16)   |\
                    (((Timing->CLKDivision)-1) << 20)         |\
                    (((Timing->DataLatency)-2) << 24)         |\
                    (Timing->AccessMode));
  
  Device->BTCR[Bank + 1] = tmpr; 
 8003bc8:	6053      	str	r3, [r2, #4]
  
  return HAL_OK;   
}
 8003bca:	2000      	movs	r0, #0
 8003bcc:	bd70      	pop	{r4, r5, r6, pc}
 8003bce:	bf00      	nop
 8003bd0:	0802236d 	.word	0x0802236d

08003bd4 <FSMC_NORSRAM_Extended_Timing_Init>:
HAL_StatusTypeDef  FSMC_NORSRAM_Extended_Timing_Init(FSMC_NORSRAM_EXTENDED_TypeDef *Device, FSMC_NORSRAM_TimingTypeDef *Timing, uint32_t Bank, uint32_t ExtendedMode)
{
  uint32_t tmpr = 0;
  
  /* Set NORSRAM device timing register for write configuration, if extended mode is used */
  if(ExtendedMode == FSMC_EXTENDED_MODE_ENABLE)
 8003bd4:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
  * @param  Timing: Pointer to NORSRAM Timing structure
  * @param  Bank: NORSRAM bank number  
  * @retval HAL status
  */
HAL_StatusTypeDef  FSMC_NORSRAM_Extended_Timing_Init(FSMC_NORSRAM_EXTENDED_TypeDef *Device, FSMC_NORSRAM_TimingTypeDef *Timing, uint32_t Bank, uint32_t ExtendedMode)
{
 8003bd8:	b570      	push	{r4, r5, r6, lr}
 8003bda:	4605      	mov	r5, r0
 8003bdc:	460c      	mov	r4, r1
 8003bde:	4616      	mov	r6, r2
  uint32_t tmpr = 0;
  
  /* Set NORSRAM device timing register for write configuration, if extended mode is used */
  if(ExtendedMode == FSMC_EXTENDED_MODE_ENABLE)
 8003be0:	d156      	bne.n	8003c90 <FSMC_NORSRAM_Extended_Timing_Init+0xbc>
  {
    /* Check the parameters */  
    assert_param(IS_FSMC_ADDRESS_SETUP_TIME(Timing->AddressSetupTime));
 8003be2:	680b      	ldr	r3, [r1, #0]
 8003be4:	2b0f      	cmp	r3, #15
 8003be6:	d904      	bls.n	8003bf2 <FSMC_NORSRAM_Extended_Timing_Init+0x1e>
 8003be8:	482c      	ldr	r0, [pc, #176]	; (8003c9c <FSMC_NORSRAM_Extended_Timing_Init+0xc8>)
 8003bea:	f44f 7193 	mov.w	r1, #294	; 0x126
 8003bee:	f7fd fc7b 	bl	80014e8 <assert_failed>
    assert_param(IS_FSMC_ADDRESS_HOLD_TIME(Timing->AddressHoldTime));
 8003bf2:	6863      	ldr	r3, [r4, #4]
 8003bf4:	3b01      	subs	r3, #1
 8003bf6:	2b0e      	cmp	r3, #14
 8003bf8:	d904      	bls.n	8003c04 <FSMC_NORSRAM_Extended_Timing_Init+0x30>
 8003bfa:	4828      	ldr	r0, [pc, #160]	; (8003c9c <FSMC_NORSRAM_Extended_Timing_Init+0xc8>)
 8003bfc:	f240 1127 	movw	r1, #295	; 0x127
 8003c00:	f7fd fc72 	bl	80014e8 <assert_failed>
    assert_param(IS_FSMC_DATASETUP_TIME(Timing->DataSetupTime));
 8003c04:	68a3      	ldr	r3, [r4, #8]
 8003c06:	3b01      	subs	r3, #1
 8003c08:	2bfe      	cmp	r3, #254	; 0xfe
 8003c0a:	d904      	bls.n	8003c16 <FSMC_NORSRAM_Extended_Timing_Init+0x42>
 8003c0c:	4823      	ldr	r0, [pc, #140]	; (8003c9c <FSMC_NORSRAM_Extended_Timing_Init+0xc8>)
 8003c0e:	f44f 7194 	mov.w	r1, #296	; 0x128
 8003c12:	f7fd fc69 	bl	80014e8 <assert_failed>
    assert_param(IS_FSMC_TURNAROUND_TIME(Timing->BusTurnAroundDuration));
 8003c16:	68e3      	ldr	r3, [r4, #12]
 8003c18:	2b0f      	cmp	r3, #15
 8003c1a:	d904      	bls.n	8003c26 <FSMC_NORSRAM_Extended_Timing_Init+0x52>
 8003c1c:	481f      	ldr	r0, [pc, #124]	; (8003c9c <FSMC_NORSRAM_Extended_Timing_Init+0xc8>)
 8003c1e:	f240 1129 	movw	r1, #297	; 0x129
 8003c22:	f7fd fc61 	bl	80014e8 <assert_failed>
    assert_param(IS_FSMC_CLK_DIV(Timing->CLKDivision));
 8003c26:	6923      	ldr	r3, [r4, #16]
 8003c28:	3b01      	subs	r3, #1
 8003c2a:	2b0f      	cmp	r3, #15
 8003c2c:	d904      	bls.n	8003c38 <FSMC_NORSRAM_Extended_Timing_Init+0x64>
 8003c2e:	481b      	ldr	r0, [pc, #108]	; (8003c9c <FSMC_NORSRAM_Extended_Timing_Init+0xc8>)
 8003c30:	f44f 7195 	mov.w	r1, #298	; 0x12a
 8003c34:	f7fd fc58 	bl	80014e8 <assert_failed>
    assert_param(IS_FSMC_DATA_LATENCY(Timing->DataLatency));
 8003c38:	6963      	ldr	r3, [r4, #20]
 8003c3a:	3b01      	subs	r3, #1
 8003c3c:	2b10      	cmp	r3, #16
 8003c3e:	d904      	bls.n	8003c4a <FSMC_NORSRAM_Extended_Timing_Init+0x76>
 8003c40:	4816      	ldr	r0, [pc, #88]	; (8003c9c <FSMC_NORSRAM_Extended_Timing_Init+0xc8>)
 8003c42:	f240 112b 	movw	r1, #299	; 0x12b
 8003c46:	f7fd fc4f 	bl	80014e8 <assert_failed>
    assert_param(IS_FSMC_ACCESS_MODE(Timing->AccessMode));
 8003c4a:	69a3      	ldr	r3, [r4, #24]
 8003c4c:	f033 5340 	bics.w	r3, r3, #805306368	; 0x30000000
 8003c50:	d004      	beq.n	8003c5c <FSMC_NORSRAM_Extended_Timing_Init+0x88>
 8003c52:	4812      	ldr	r0, [pc, #72]	; (8003c9c <FSMC_NORSRAM_Extended_Timing_Init+0xc8>)
 8003c54:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8003c58:	f7fd fc46 	bl	80014e8 <assert_failed>
  
    /* Get the BWTR register value */
    tmpr = Device->BWTR[Bank];
 8003c5c:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 8003c60:	69a2      	ldr	r2, [r4, #24]
                         FSMC_BWTR1_BUSTURN | FSMC_BWTR1_CLKDIV | FSMC_BWTR1_DATLAT | \
                         FSMC_BWTR1_ACCMOD));

    tmpr |= (uint32_t)(Timing->AddressSetupTime                 |\
                     ((Timing->AddressHoldTime) << 4)          |\
                     ((Timing->DataSetupTime) << 8)            |\
 8003c62:	68a1      	ldr	r1, [r4, #8]
  
    /* Get the BWTR register value */
    tmpr = Device->BWTR[Bank];
    
    /* Clear ADDSET, ADDHLD, DATAST, BUSTURN, CLKDIV, DATLAT and ACCMOD bits */
    tmpr &= ((uint32_t)~(FSMC_BWTR1_ADDSET  | FSMC_BWTR1_ADDHLD | FSMC_BWTR1_DATAST | \
 8003c64:	f003 4040 	and.w	r0, r3, #3221225472	; 0xc0000000
 8003c68:	6823      	ldr	r3, [r4, #0]
 8003c6a:	4313      	orrs	r3, r2
                         FSMC_BWTR1_BUSTURN | FSMC_BWTR1_CLKDIV | FSMC_BWTR1_DATLAT | \
                         FSMC_BWTR1_ACCMOD));

    tmpr |= (uint32_t)(Timing->AddressSetupTime                 |\
                     ((Timing->AddressHoldTime) << 4)          |\
 8003c6c:	6862      	ldr	r2, [r4, #4]
 8003c6e:	ea43 1202 	orr.w	r2, r3, r2, lsl #4
 8003c72:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
                     ((Timing->DataSetupTime) << 8)            |\
                     ((Timing->BusTurnAroundDuration) << 16)   |\
                     (((Timing->CLKDivision)-1) << 20)         |\
 8003c76:	6923      	ldr	r3, [r4, #16]
                         FSMC_BWTR1_ACCMOD));

    tmpr |= (uint32_t)(Timing->AddressSetupTime                 |\
                     ((Timing->AddressHoldTime) << 4)          |\
                     ((Timing->DataSetupTime) << 8)            |\
                     ((Timing->BusTurnAroundDuration) << 16)   |\
 8003c78:	68e1      	ldr	r1, [r4, #12]
                     (((Timing->CLKDivision)-1) << 20)         |\
 8003c7a:	3b01      	subs	r3, #1
 8003c7c:	ea42 4101 	orr.w	r1, r2, r1, lsl #16
 8003c80:	ea41 5203 	orr.w	r2, r1, r3, lsl #20
                     (((Timing->DataLatency)-2) << 24)         |\
 8003c84:	6963      	ldr	r3, [r4, #20]
 8003c86:	3b02      	subs	r3, #2
    /* Clear ADDSET, ADDHLD, DATAST, BUSTURN, CLKDIV, DATLAT and ACCMOD bits */
    tmpr &= ((uint32_t)~(FSMC_BWTR1_ADDSET  | FSMC_BWTR1_ADDHLD | FSMC_BWTR1_DATAST | \
                         FSMC_BWTR1_BUSTURN | FSMC_BWTR1_CLKDIV | FSMC_BWTR1_DATLAT | \
                         FSMC_BWTR1_ACCMOD));

    tmpr |= (uint32_t)(Timing->AddressSetupTime                 |\
 8003c88:	ea42 6303 	orr.w	r3, r2, r3, lsl #24
 8003c8c:	4303      	orrs	r3, r0
 8003c8e:	e001      	b.n	8003c94 <FSMC_NORSRAM_Extended_Timing_Init+0xc0>
    
    Device->BWTR[Bank] = tmpr; 
  }
  else                                        
  {
    Device->BWTR[Bank] = 0x0FFFFFFF;
 8003c90:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8003c94:	f845 3026 	str.w	r3, [r5, r6, lsl #2]
  }   
  
  return HAL_OK;  
}
 8003c98:	2000      	movs	r0, #0
 8003c9a:	bd70      	pop	{r4, r5, r6, pc}
 8003c9c:	0802236d 	.word	0x0802236d

08003ca0 <HAL_SRAM_Init>:
  * @param  Timing: Pointer to SRAM control timing structure 
  * @param  ExtTiming: Pointer to SRAM extended mode timing structure  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SRAM_Init(SRAM_HandleTypeDef *hsram, FMC_NORSRAM_TimingTypeDef *Timing, FMC_NORSRAM_TimingTypeDef *ExtTiming)
{ 
 8003ca0:	b570      	push	{r4, r5, r6, lr}
 8003ca2:	460e      	mov	r6, r1
 8003ca4:	4615      	mov	r5, r2
  /* Check the SRAM handle parameter */
  if(hsram == NULL)
 8003ca6:	4604      	mov	r4, r0
 8003ca8:	b1f0      	cbz	r0, 8003ce8 <HAL_SRAM_Init+0x48>
  {
     return HAL_ERROR;
  }
  
  if(hsram->State == HAL_SRAM_STATE_RESET)
 8003caa:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8003cae:	b90b      	cbnz	r3, 8003cb4 <HAL_SRAM_Init+0x14>
  {  
    /* Initialize the low level hardware (MSP) */
    HAL_SRAM_MspInit(hsram);
 8003cb0:	f7fd fd0e 	bl	80016d0 <HAL_SRAM_MspInit>
  }
  
  /* Initialize SRAM control Interface */
  FMC_NORSRAM_Init(hsram->Instance, &(hsram->Init));
 8003cb4:	f104 0108 	add.w	r1, r4, #8
 8003cb8:	6820      	ldr	r0, [r4, #0]
 8003cba:	f7ff fe97 	bl	80039ec <FSMC_NORSRAM_Init>

  /* Initialize SRAM timing Interface */
  FMC_NORSRAM_Timing_Init(hsram->Instance, Timing, hsram->Init.NSBank); 
 8003cbe:	4631      	mov	r1, r6
 8003cc0:	68a2      	ldr	r2, [r4, #8]
 8003cc2:	6820      	ldr	r0, [r4, #0]
 8003cc4:	f7ff ff2c 	bl	8003b20 <FSMC_NORSRAM_Timing_Init>

  /* Initialize SRAM extended mode timing Interface */
  FMC_NORSRAM_Extended_Timing_Init(hsram->Extended, ExtTiming, hsram->Init.NSBank,  hsram->Init.ExtendedMode);  
 8003cc8:	4629      	mov	r1, r5
 8003cca:	68a2      	ldr	r2, [r4, #8]
 8003ccc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8003cce:	6860      	ldr	r0, [r4, #4]
 8003cd0:	f7ff ff80 	bl	8003bd4 <FSMC_NORSRAM_Extended_Timing_Init>
 8003cd4:	68a1      	ldr	r1, [r4, #8]
 8003cd6:	6822      	ldr	r2, [r4, #0]
  
  /* Enable the NORSRAM device */
  __FMC_NORSRAM_ENABLE(hsram->Instance, hsram->Init.NSBank); 
 8003cd8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8003cdc:	f043 0301 	orr.w	r3, r3, #1
 8003ce0:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  
  return HAL_OK;
 8003ce4:	2000      	movs	r0, #0
 8003ce6:	bd70      	pop	{r4, r5, r6, pc}
HAL_StatusTypeDef HAL_SRAM_Init(SRAM_HandleTypeDef *hsram, FMC_NORSRAM_TimingTypeDef *Timing, FMC_NORSRAM_TimingTypeDef *ExtTiming)
{ 
  /* Check the SRAM handle parameter */
  if(hsram == NULL)
  {
     return HAL_ERROR;
 8003ce8:	2001      	movs	r0, #1
  
  /* Enable the NORSRAM device */
  __FMC_NORSRAM_ENABLE(hsram->Instance, hsram->Init.NSBank); 
  
  return HAL_OK;
}
 8003cea:	bd70      	pop	{r4, r5, r6, pc}

08003cec <HAL_DMA_Init>:
  * @param  hdma: Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{ 
 8003cec:	b538      	push	{r3, r4, r5, lr}
  uint32_t tmp = 0;
  
  /* Check the DMA peripheral state */
  if(hdma == NULL)
 8003cee:	4604      	mov	r4, r0
 8003cf0:	2800      	cmp	r0, #0
 8003cf2:	f000 80d4 	beq.w	8003e9e <HAL_DMA_Init+0x1b2>
  {
    return HAL_ERROR;
  }

  /* Check the parameters */
  assert_param(IS_DMA_STREAM_ALL_INSTANCE(hdma->Instance));
 8003cf6:	6803      	ldr	r3, [r0, #0]
 8003cf8:	4a6a      	ldr	r2, [pc, #424]	; (8003ea4 <HAL_DMA_Init+0x1b8>)
 8003cfa:	4293      	cmp	r3, r2
 8003cfc:	d031      	beq.n	8003d62 <HAL_DMA_Init+0x76>
 8003cfe:	3218      	adds	r2, #24
 8003d00:	4293      	cmp	r3, r2
 8003d02:	d02e      	beq.n	8003d62 <HAL_DMA_Init+0x76>
 8003d04:	3218      	adds	r2, #24
 8003d06:	4293      	cmp	r3, r2
 8003d08:	d02b      	beq.n	8003d62 <HAL_DMA_Init+0x76>
 8003d0a:	3218      	adds	r2, #24
 8003d0c:	4293      	cmp	r3, r2
 8003d0e:	d028      	beq.n	8003d62 <HAL_DMA_Init+0x76>
 8003d10:	3218      	adds	r2, #24
 8003d12:	4293      	cmp	r3, r2
 8003d14:	d025      	beq.n	8003d62 <HAL_DMA_Init+0x76>
 8003d16:	3218      	adds	r2, #24
 8003d18:	4293      	cmp	r3, r2
 8003d1a:	d022      	beq.n	8003d62 <HAL_DMA_Init+0x76>
 8003d1c:	3218      	adds	r2, #24
 8003d1e:	4293      	cmp	r3, r2
 8003d20:	d01f      	beq.n	8003d62 <HAL_DMA_Init+0x76>
 8003d22:	3218      	adds	r2, #24
 8003d24:	4293      	cmp	r3, r2
 8003d26:	d01c      	beq.n	8003d62 <HAL_DMA_Init+0x76>
 8003d28:	f502 7256 	add.w	r2, r2, #856	; 0x358
 8003d2c:	4293      	cmp	r3, r2
 8003d2e:	d018      	beq.n	8003d62 <HAL_DMA_Init+0x76>
 8003d30:	3218      	adds	r2, #24
 8003d32:	4293      	cmp	r3, r2
 8003d34:	d015      	beq.n	8003d62 <HAL_DMA_Init+0x76>
 8003d36:	3218      	adds	r2, #24
 8003d38:	4293      	cmp	r3, r2
 8003d3a:	d012      	beq.n	8003d62 <HAL_DMA_Init+0x76>
 8003d3c:	3218      	adds	r2, #24
 8003d3e:	4293      	cmp	r3, r2
 8003d40:	d00f      	beq.n	8003d62 <HAL_DMA_Init+0x76>
 8003d42:	3218      	adds	r2, #24
 8003d44:	4293      	cmp	r3, r2
 8003d46:	d00c      	beq.n	8003d62 <HAL_DMA_Init+0x76>
 8003d48:	3218      	adds	r2, #24
 8003d4a:	4293      	cmp	r3, r2
 8003d4c:	d009      	beq.n	8003d62 <HAL_DMA_Init+0x76>
 8003d4e:	3218      	adds	r2, #24
 8003d50:	4293      	cmp	r3, r2
 8003d52:	d006      	beq.n	8003d62 <HAL_DMA_Init+0x76>
 8003d54:	3218      	adds	r2, #24
 8003d56:	4293      	cmp	r3, r2
 8003d58:	d003      	beq.n	8003d62 <HAL_DMA_Init+0x76>
 8003d5a:	4853      	ldr	r0, [pc, #332]	; (8003ea8 <HAL_DMA_Init+0x1bc>)
 8003d5c:	21bf      	movs	r1, #191	; 0xbf
 8003d5e:	f7fd fbc3 	bl	80014e8 <assert_failed>
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
 8003d62:	6863      	ldr	r3, [r4, #4]
 8003d64:	f033 63c0 	bics.w	r3, r3, #100663296	; 0x6000000
 8003d68:	d006      	beq.n	8003d78 <HAL_DMA_Init+0x8c>
 8003d6a:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8003d6e:	d003      	beq.n	8003d78 <HAL_DMA_Init+0x8c>
 8003d70:	484d      	ldr	r0, [pc, #308]	; (8003ea8 <HAL_DMA_Init+0x1bc>)
 8003d72:	21c0      	movs	r1, #192	; 0xc0
 8003d74:	f7fd fbb8 	bl	80014e8 <assert_failed>
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
 8003d78:	68a3      	ldr	r3, [r4, #8]
 8003d7a:	f033 0240 	bics.w	r2, r3, #64	; 0x40
 8003d7e:	d005      	beq.n	8003d8c <HAL_DMA_Init+0xa0>
 8003d80:	2b80      	cmp	r3, #128	; 0x80
 8003d82:	d003      	beq.n	8003d8c <HAL_DMA_Init+0xa0>
 8003d84:	4848      	ldr	r0, [pc, #288]	; (8003ea8 <HAL_DMA_Init+0x1bc>)
 8003d86:	21c1      	movs	r1, #193	; 0xc1
 8003d88:	f7fd fbae 	bl	80014e8 <assert_failed>
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
 8003d8c:	68e3      	ldr	r3, [r4, #12]
 8003d8e:	f433 7300 	bics.w	r3, r3, #512	; 0x200
 8003d92:	d003      	beq.n	8003d9c <HAL_DMA_Init+0xb0>
 8003d94:	4844      	ldr	r0, [pc, #272]	; (8003ea8 <HAL_DMA_Init+0x1bc>)
 8003d96:	21c2      	movs	r1, #194	; 0xc2
 8003d98:	f7fd fba6 	bl	80014e8 <assert_failed>
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
 8003d9c:	6923      	ldr	r3, [r4, #16]
 8003d9e:	f433 6380 	bics.w	r3, r3, #1024	; 0x400
 8003da2:	d003      	beq.n	8003dac <HAL_DMA_Init+0xc0>
 8003da4:	4840      	ldr	r0, [pc, #256]	; (8003ea8 <HAL_DMA_Init+0x1bc>)
 8003da6:	21c3      	movs	r1, #195	; 0xc3
 8003da8:	f7fd fb9e 	bl	80014e8 <assert_failed>
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
 8003dac:	6963      	ldr	r3, [r4, #20]
 8003dae:	f433 6200 	bics.w	r2, r3, #2048	; 0x800
 8003db2:	d006      	beq.n	8003dc2 <HAL_DMA_Init+0xd6>
 8003db4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003db8:	d003      	beq.n	8003dc2 <HAL_DMA_Init+0xd6>
 8003dba:	483b      	ldr	r0, [pc, #236]	; (8003ea8 <HAL_DMA_Init+0x1bc>)
 8003dbc:	21c4      	movs	r1, #196	; 0xc4
 8003dbe:	f7fd fb93 	bl	80014e8 <assert_failed>
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
 8003dc2:	69a3      	ldr	r3, [r4, #24]
 8003dc4:	f433 5200 	bics.w	r2, r3, #8192	; 0x2000
 8003dc8:	d006      	beq.n	8003dd8 <HAL_DMA_Init+0xec>
 8003dca:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8003dce:	d003      	beq.n	8003dd8 <HAL_DMA_Init+0xec>
 8003dd0:	4835      	ldr	r0, [pc, #212]	; (8003ea8 <HAL_DMA_Init+0x1bc>)
 8003dd2:	21c5      	movs	r1, #197	; 0xc5
 8003dd4:	f7fd fb88 	bl	80014e8 <assert_failed>
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
 8003dd8:	69e3      	ldr	r3, [r4, #28]
 8003dda:	f033 0220 	bics.w	r2, r3, #32
 8003dde:	d006      	beq.n	8003dee <HAL_DMA_Init+0x102>
 8003de0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8003de4:	d003      	beq.n	8003dee <HAL_DMA_Init+0x102>
 8003de6:	4830      	ldr	r0, [pc, #192]	; (8003ea8 <HAL_DMA_Init+0x1bc>)
 8003de8:	21c6      	movs	r1, #198	; 0xc6
 8003dea:	f7fd fb7d 	bl	80014e8 <assert_failed>
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
 8003dee:	6a23      	ldr	r3, [r4, #32]
 8003df0:	f433 3340 	bics.w	r3, r3, #196608	; 0x30000
 8003df4:	d003      	beq.n	8003dfe <HAL_DMA_Init+0x112>
 8003df6:	482c      	ldr	r0, [pc, #176]	; (8003ea8 <HAL_DMA_Init+0x1bc>)
 8003df8:	21c7      	movs	r1, #199	; 0xc7
 8003dfa:	f7fd fb75 	bl	80014e8 <assert_failed>
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
 8003dfe:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003e00:	f033 0304 	bics.w	r3, r3, #4
 8003e04:	d003      	beq.n	8003e0e <HAL_DMA_Init+0x122>
 8003e06:	4828      	ldr	r0, [pc, #160]	; (8003ea8 <HAL_DMA_Init+0x1bc>)
 8003e08:	21c8      	movs	r1, #200	; 0xc8
 8003e0a:	f7fd fb6d 	bl	80014e8 <assert_failed>
  /* Check the memory burst, peripheral burst and FIFO threshold parameters only
     when FIFO mode is enabled */
  if(hdma->Init.FIFOMode != DMA_FIFOMODE_DISABLE)
 8003e0e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003e10:	b1b3      	cbz	r3, 8003e40 <HAL_DMA_Init+0x154>
  {
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
 8003e12:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8003e14:	2b03      	cmp	r3, #3
 8003e16:	d903      	bls.n	8003e20 <HAL_DMA_Init+0x134>
 8003e18:	4823      	ldr	r0, [pc, #140]	; (8003ea8 <HAL_DMA_Init+0x1bc>)
 8003e1a:	21cd      	movs	r1, #205	; 0xcd
 8003e1c:	f7fd fb64 	bl	80014e8 <assert_failed>
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
 8003e20:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8003e22:	f033 73c0 	bics.w	r3, r3, #25165824	; 0x1800000
 8003e26:	d003      	beq.n	8003e30 <HAL_DMA_Init+0x144>
 8003e28:	481f      	ldr	r0, [pc, #124]	; (8003ea8 <HAL_DMA_Init+0x1bc>)
 8003e2a:	21ce      	movs	r1, #206	; 0xce
 8003e2c:	f7fd fb5c 	bl	80014e8 <assert_failed>
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
 8003e30:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8003e32:	f433 03c0 	bics.w	r3, r3, #6291456	; 0x600000
 8003e36:	d003      	beq.n	8003e40 <HAL_DMA_Init+0x154>
 8003e38:	481b      	ldr	r0, [pc, #108]	; (8003ea8 <HAL_DMA_Init+0x1bc>)
 8003e3a:	21cf      	movs	r1, #207	; 0xcf
 8003e3c:	f7fd fb54 	bl	80014e8 <assert_failed>

  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;

  /* Get the CR register value */
  tmp = hdma->Instance->CR;
 8003e40:	6821      	ldr	r1, [r4, #0]

  /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003e42:	4a1a      	ldr	r2, [pc, #104]	; (8003eac <HAL_DMA_Init+0x1c0>)
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003e44:	68a0      	ldr	r0, [r4, #8]
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
  }

  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;
 8003e46:	2302      	movs	r3, #2
 8003e48:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35

  /* Get the CR register value */
  tmp = hdma->Instance->CR;
 8003e4c:	680b      	ldr	r3, [r1, #0]

  /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003e4e:	401a      	ands	r2, r3
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003e50:	6863      	ldr	r3, [r4, #4]
 8003e52:	4318      	orrs	r0, r3
 8003e54:	68e3      	ldr	r3, [r4, #12]
 8003e56:	4318      	orrs	r0, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003e58:	6923      	ldr	r3, [r4, #16]
 8003e5a:	4318      	orrs	r0, r3
 8003e5c:	6963      	ldr	r3, [r4, #20]
 8003e5e:	4318      	orrs	r0, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003e60:	69a3      	ldr	r3, [r4, #24]
 8003e62:	4318      	orrs	r0, r3
 8003e64:	69e3      	ldr	r3, [r4, #28]
 8003e66:	4318      	orrs	r0, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 8003e68:	6a23      	ldr	r3, [r4, #32]
 8003e6a:	4303      	orrs	r3, r0
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003e6c:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
          hdma->Init.Mode                | hdma->Init.Priority;

  /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003e6e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8003e70:	2a04      	cmp	r2, #4
  {
    /* Get memory burst and peripheral burst */
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8003e72:	bf01      	itttt	eq
 8003e74:	6ae0      	ldreq	r0, [r4, #44]	; 0x2c
 8003e76:	6b25      	ldreq	r5, [r4, #48]	; 0x30
 8003e78:	4328      	orreq	r0, r5
 8003e7a:	4303      	orreq	r3, r0
  }
  
  /* Write to DMA Stream CR register */
  hdma->Instance->CR = tmp;  
 8003e7c:	600b      	str	r3, [r1, #0]

  /* Get the FCR register value */
  tmp = hdma->Instance->FCR;
 8003e7e:	694b      	ldr	r3, [r1, #20]

  /* Prepare the DMA Stream FIFO configuration */
  tmp |= hdma->Init.FIFOMode;

  /* the FIFO threshold is not used when the FIFO mode is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003e80:	2a04      	cmp	r2, #4

  /* Get the FCR register value */
  tmp = hdma->Instance->FCR;

  /* Clear Direct mode and FIFO threshold bits */
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8003e82:	f023 0307 	bic.w	r3, r3, #7

  /* Prepare the DMA Stream FIFO configuration */
  tmp |= hdma->Init.FIFOMode;
 8003e86:	ea43 0302 	orr.w	r3, r3, r2

  /* the FIFO threshold is not used when the FIFO mode is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
  {
    /* Get the FIFO threshold */
    tmp |= hdma->Init.FIFOThreshold;
 8003e8a:	bf04      	itt	eq
 8003e8c:	6aa2      	ldreq	r2, [r4, #40]	; 0x28
 8003e8e:	4313      	orreq	r3, r2
  }
  
  /* Write to DMA Stream FCR */
  hdma->Instance->FCR = tmp;
 8003e90:	614b      	str	r3, [r1, #20]

  /* Initialize the error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003e92:	2000      	movs	r0, #0

  /* Initialize the DMA state */
  hdma->State = HAL_DMA_STATE_READY;
 8003e94:	2301      	movs	r3, #1
  
  /* Write to DMA Stream FCR */
  hdma->Instance->FCR = tmp;

  /* Initialize the error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003e96:	64e0      	str	r0, [r4, #76]	; 0x4c

  /* Initialize the DMA state */
  hdma->State = HAL_DMA_STATE_READY;
 8003e98:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35

  return HAL_OK;
 8003e9c:	bd38      	pop	{r3, r4, r5, pc}
  uint32_t tmp = 0;
  
  /* Check the DMA peripheral state */
  if(hdma == NULL)
  {
    return HAL_ERROR;
 8003e9e:	2001      	movs	r0, #1

  /* Initialize the DMA state */
  hdma->State = HAL_DMA_STATE_READY;

  return HAL_OK;
}
 8003ea0:	bd38      	pop	{r3, r4, r5, pc}
 8003ea2:	bf00      	nop
 8003ea4:	40026010 	.word	0x40026010
 8003ea8:	080223bc 	.word	0x080223bc
 8003eac:	f010803f 	.word	0xf010803f

08003eb0 <HAL_DMA_Start_IT>:
  * @param  DstAddress: The destination memory Buffer address
  * @param  DataLength: The length of data to be transferred from source to destination
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8003eb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003eb2:	461f      	mov	r7, r3
  /* Process locked */
  __HAL_LOCK(hdma);
 8003eb4:	f890 3034 	ldrb.w	r3, [r0, #52]	; 0x34
 8003eb8:	2b01      	cmp	r3, #1
  * @param  DstAddress: The destination memory Buffer address
  * @param  DataLength: The length of data to be transferred from source to destination
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8003eba:	4604      	mov	r4, r0
 8003ebc:	460e      	mov	r6, r1
 8003ebe:	4615      	mov	r5, r2
 8003ec0:	f04f 0002 	mov.w	r0, #2
  /* Process locked */
  __HAL_LOCK(hdma);
 8003ec4:	d038      	beq.n	8003f38 <HAL_DMA_Start_IT+0x88>
 8003ec6:	2301      	movs	r3, #1
 8003ec8:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34

  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;

   /* Check the parameters */
  assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 8003ecc:	1e7a      	subs	r2, r7, #1
 8003ece:	f64f 73fe 	movw	r3, #65534	; 0xfffe
 8003ed2:	429a      	cmp	r2, r3
{
  /* Process locked */
  __HAL_LOCK(hdma);

  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;
 8003ed4:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35

   /* Check the parameters */
  assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 8003ed8:	d904      	bls.n	8003ee4 <HAL_DMA_Start_IT+0x34>
 8003eda:	4818      	ldr	r0, [pc, #96]	; (8003f3c <HAL_DMA_Start_IT+0x8c>)
 8003edc:	f44f 71c7 	mov.w	r1, #398	; 0x18e
 8003ee0:	f7fd fb02 	bl	80014e8 <assert_failed>

  /* Disable the peripheral */
  __HAL_DMA_DISABLE(hdma);
 8003ee4:	6821      	ldr	r1, [r4, #0]

  /* Configure DMA Stream data length */
  hdma->Instance->NDTR = DataLength;

  /* Peripheral to Memory */
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8003ee6:	68a3      	ldr	r3, [r4, #8]

   /* Check the parameters */
  assert_param(IS_DMA_BUFFER_SIZE(DataLength));

  /* Disable the peripheral */
  __HAL_DMA_DISABLE(hdma);
 8003ee8:	6808      	ldr	r0, [r1, #0]
 8003eea:	f020 0001 	bic.w	r0, r0, #1
 8003eee:	6008      	str	r0, [r1, #0]
  * @retval HAL status
  */
static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
  /* Clear DBM bit */
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8003ef0:	6808      	ldr	r0, [r1, #0]

  /* Configure DMA Stream data length */
  hdma->Instance->NDTR = DataLength;

  /* Peripheral to Memory */
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8003ef2:	2b40      	cmp	r3, #64	; 0x40
  * @retval HAL status
  */
static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
  /* Clear DBM bit */
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8003ef4:	f420 2080 	bic.w	r0, r0, #262144	; 0x40000
 8003ef8:	6008      	str	r0, [r1, #0]

  /* Configure DMA Stream data length */
  hdma->Instance->NDTR = DataLength;
 8003efa:	604f      	str	r7, [r1, #4]

  /* Peripheral to Memory */
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
  {
    /* Configure DMA Stream destination address */
    hdma->Instance->PAR = DstAddress;
 8003efc:	bf0b      	itete	eq
 8003efe:	608d      	streq	r5, [r1, #8]
  }
  /* Memory to Peripheral */
  else
  {
    /* Configure DMA Stream source address */
    hdma->Instance->PAR = SrcAddress;
 8003f00:	608e      	strne	r6, [r1, #8]
  {
    /* Configure DMA Stream destination address */
    hdma->Instance->PAR = DstAddress;

    /* Configure DMA Stream source address */
    hdma->Instance->M0AR = SrcAddress;
 8003f02:	60ce      	streq	r6, [r1, #12]
  {
    /* Configure DMA Stream source address */
    hdma->Instance->PAR = SrcAddress;
    
    /* Configure DMA Stream destination address */
    hdma->Instance->M0AR = DstAddress;
 8003f04:	60cd      	strne	r5, [r1, #12]

  /* Configure the source, destination address and the data length */
  DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);

  /* Enable the transfer complete interrupt */
  __HAL_DMA_ENABLE_IT(hdma, DMA_IT_TC);
 8003f06:	680b      	ldr	r3, [r1, #0]
 8003f08:	f043 0310 	orr.w	r3, r3, #16
 8003f0c:	600b      	str	r3, [r1, #0]

  /* Enable the Half transfer complete interrupt */
  __HAL_DMA_ENABLE_IT(hdma, DMA_IT_HT);  
 8003f0e:	680b      	ldr	r3, [r1, #0]
 8003f10:	f043 0308 	orr.w	r3, r3, #8
 8003f14:	600b      	str	r3, [r1, #0]

  /* Enable the transfer Error interrupt */
  __HAL_DMA_ENABLE_IT(hdma, DMA_IT_TE);
 8003f16:	680b      	ldr	r3, [r1, #0]
 8003f18:	f043 0304 	orr.w	r3, r3, #4
 8003f1c:	600b      	str	r3, [r1, #0]

  /* Enable the FIFO Error interrupt */
  __HAL_DMA_ENABLE_IT(hdma, DMA_IT_FE);
 8003f1e:	694b      	ldr	r3, [r1, #20]
 8003f20:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003f24:	614b      	str	r3, [r1, #20]

  /* Enable the direct mode Error interrupt */
  __HAL_DMA_ENABLE_IT(hdma, DMA_IT_DME);
 8003f26:	680b      	ldr	r3, [r1, #0]
 8003f28:	f043 0302 	orr.w	r3, r3, #2
 8003f2c:	600b      	str	r3, [r1, #0]

   /* Enable the Peripheral */
  __HAL_DMA_ENABLE(hdma);
 8003f2e:	680b      	ldr	r3, [r1, #0]
 8003f30:	f043 0301 	orr.w	r3, r3, #1
 8003f34:	600b      	str	r3, [r1, #0]

  return HAL_OK;
 8003f36:	2000      	movs	r0, #0
} 
 8003f38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003f3a:	bf00      	nop
 8003f3c:	080223bc 	.word	0x080223bc

08003f40 <HAL_DMA_IRQHandler>:
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval None
  */
void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
{
 8003f40:	b570      	push	{r4, r5, r6, lr}
  /* Transfer Error Interrupt management ***************************************/
  if(__HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_TE_FLAG_INDEX(hdma)) != RESET)
 8003f42:	6803      	ldr	r3, [r0, #0]
 8003f44:	4da9      	ldr	r5, [pc, #676]	; (80041ec <HAL_DMA_IRQHandler+0x2ac>)
 8003f46:	42ab      	cmp	r3, r5
  * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval None
  */
void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
{
 8003f48:	4604      	mov	r4, r0
  /* Transfer Error Interrupt management ***************************************/
  if(__HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_TE_FLAG_INDEX(hdma)) != RESET)
 8003f4a:	d916      	bls.n	8003f7a <HAL_DMA_IRQHandler+0x3a>
 8003f4c:	4aa8      	ldr	r2, [pc, #672]	; (80041f0 <HAL_DMA_IRQHandler+0x2b0>)
 8003f4e:	6851      	ldr	r1, [r2, #4]
 8003f50:	3270      	adds	r2, #112	; 0x70
 8003f52:	4293      	cmp	r3, r2
 8003f54:	d00a      	beq.n	8003f6c <HAL_DMA_IRQHandler+0x2c>
 8003f56:	3218      	adds	r2, #24
 8003f58:	4293      	cmp	r3, r2
 8003f5a:	d009      	beq.n	8003f70 <HAL_DMA_IRQHandler+0x30>
 8003f5c:	3218      	adds	r2, #24
 8003f5e:	4293      	cmp	r3, r2
 8003f60:	bf0c      	ite	eq
 8003f62:	f44f 2200 	moveq.w	r2, #524288	; 0x80000
 8003f66:	f04f 7200 	movne.w	r2, #33554432	; 0x2000000
 8003f6a:	e003      	b.n	8003f74 <HAL_DMA_IRQHandler+0x34>
 8003f6c:	2208      	movs	r2, #8
 8003f6e:	e001      	b.n	8003f74 <HAL_DMA_IRQHandler+0x34>
 8003f70:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003f74:	420a      	tst	r2, r1
 8003f76:	d14c      	bne.n	8004012 <HAL_DMA_IRQHandler+0xd2>
 8003f78:	e0bd      	b.n	80040f6 <HAL_DMA_IRQHandler+0x1b6>
 8003f7a:	4a9e      	ldr	r2, [pc, #632]	; (80041f4 <HAL_DMA_IRQHandler+0x2b4>)
 8003f7c:	4293      	cmp	r3, r2
 8003f7e:	d917      	bls.n	8003fb0 <HAL_DMA_IRQHandler+0x70>
 8003f80:	f8d2 1348 	ldr.w	r1, [r2, #840]	; 0x348
 8003f84:	f502 7256 	add.w	r2, r2, #856	; 0x358
 8003f88:	4293      	cmp	r3, r2
 8003f8a:	d00a      	beq.n	8003fa2 <HAL_DMA_IRQHandler+0x62>
 8003f8c:	3218      	adds	r2, #24
 8003f8e:	4293      	cmp	r3, r2
 8003f90:	d009      	beq.n	8003fa6 <HAL_DMA_IRQHandler+0x66>
 8003f92:	3218      	adds	r2, #24
 8003f94:	4293      	cmp	r3, r2
 8003f96:	bf0c      	ite	eq
 8003f98:	f44f 2200 	moveq.w	r2, #524288	; 0x80000
 8003f9c:	f04f 7200 	movne.w	r2, #33554432	; 0x2000000
 8003fa0:	e003      	b.n	8003faa <HAL_DMA_IRQHandler+0x6a>
 8003fa2:	2208      	movs	r2, #8
 8003fa4:	e001      	b.n	8003faa <HAL_DMA_IRQHandler+0x6a>
 8003fa6:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003faa:	420a      	tst	r2, r1
 8003fac:	d131      	bne.n	8004012 <HAL_DMA_IRQHandler+0xd2>
 8003fae:	e0bb      	b.n	8004128 <HAL_DMA_IRQHandler+0x1e8>
 8003fb0:	4a91      	ldr	r2, [pc, #580]	; (80041f8 <HAL_DMA_IRQHandler+0x2b8>)
 8003fb2:	4293      	cmp	r3, r2
 8003fb4:	f1a2 0258 	sub.w	r2, r2, #88	; 0x58
 8003fb8:	d915      	bls.n	8003fe6 <HAL_DMA_IRQHandler+0xa6>
 8003fba:	6851      	ldr	r1, [r2, #4]
 8003fbc:	3270      	adds	r2, #112	; 0x70
 8003fbe:	4293      	cmp	r3, r2
 8003fc0:	d00a      	beq.n	8003fd8 <HAL_DMA_IRQHandler+0x98>
 8003fc2:	3218      	adds	r2, #24
 8003fc4:	4293      	cmp	r3, r2
 8003fc6:	d009      	beq.n	8003fdc <HAL_DMA_IRQHandler+0x9c>
 8003fc8:	3218      	adds	r2, #24
 8003fca:	4293      	cmp	r3, r2
 8003fcc:	bf0c      	ite	eq
 8003fce:	f44f 2200 	moveq.w	r2, #524288	; 0x80000
 8003fd2:	f04f 7200 	movne.w	r2, #33554432	; 0x2000000
 8003fd6:	e003      	b.n	8003fe0 <HAL_DMA_IRQHandler+0xa0>
 8003fd8:	2208      	movs	r2, #8
 8003fda:	e001      	b.n	8003fe0 <HAL_DMA_IRQHandler+0xa0>
 8003fdc:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003fe0:	420a      	tst	r2, r1
 8003fe2:	d116      	bne.n	8004012 <HAL_DMA_IRQHandler+0xd2>
 8003fe4:	e0b9      	b.n	800415a <HAL_DMA_IRQHandler+0x21a>
 8003fe6:	6811      	ldr	r1, [r2, #0]
 8003fe8:	4a84      	ldr	r2, [pc, #528]	; (80041fc <HAL_DMA_IRQHandler+0x2bc>)
 8003fea:	4293      	cmp	r3, r2
 8003fec:	d00a      	beq.n	8004004 <HAL_DMA_IRQHandler+0xc4>
 8003fee:	3218      	adds	r2, #24
 8003ff0:	4293      	cmp	r3, r2
 8003ff2:	d009      	beq.n	8004008 <HAL_DMA_IRQHandler+0xc8>
 8003ff4:	3218      	adds	r2, #24
 8003ff6:	4293      	cmp	r3, r2
 8003ff8:	bf0c      	ite	eq
 8003ffa:	f44f 2200 	moveq.w	r2, #524288	; 0x80000
 8003ffe:	f04f 7200 	movne.w	r2, #33554432	; 0x2000000
 8004002:	e003      	b.n	800400c <HAL_DMA_IRQHandler+0xcc>
 8004004:	2208      	movs	r2, #8
 8004006:	e001      	b.n	800400c <HAL_DMA_IRQHandler+0xcc>
 8004008:	f44f 7200 	mov.w	r2, #512	; 0x200
 800400c:	420a      	tst	r2, r1
 800400e:	f000 80ba 	beq.w	8004186 <HAL_DMA_IRQHandler+0x246>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 8004012:	681a      	ldr	r2, [r3, #0]
 8004014:	0752      	lsls	r2, r2, #29
 8004016:	d56b      	bpl.n	80040f0 <HAL_DMA_IRQHandler+0x1b0>
    {
      /* Disable the transfer error interrupt */
      __HAL_DMA_DISABLE_IT(hdma, DMA_IT_TE);
 8004018:	681a      	ldr	r2, [r3, #0]

      /* Clear the transfer error flag */
      __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TE_FLAG_INDEX(hdma));
 800401a:	42ab      	cmp	r3, r5
  if(__HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_TE_FLAG_INDEX(hdma)) != RESET)
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
    {
      /* Disable the transfer error interrupt */
      __HAL_DMA_DISABLE_IT(hdma, DMA_IT_TE);
 800401c:	f022 0204 	bic.w	r2, r2, #4
 8004020:	601a      	str	r2, [r3, #0]

      /* Clear the transfer error flag */
      __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TE_FLAG_INDEX(hdma));
 8004022:	d913      	bls.n	800404c <HAL_DMA_IRQHandler+0x10c>
 8004024:	4a76      	ldr	r2, [pc, #472]	; (8004200 <HAL_DMA_IRQHandler+0x2c0>)
 8004026:	4293      	cmp	r3, r2
 8004028:	d00a      	beq.n	8004040 <HAL_DMA_IRQHandler+0x100>
 800402a:	3218      	adds	r2, #24
 800402c:	4293      	cmp	r3, r2
 800402e:	d009      	beq.n	8004044 <HAL_DMA_IRQHandler+0x104>
 8004030:	3218      	adds	r2, #24
 8004032:	4293      	cmp	r3, r2
 8004034:	bf14      	ite	ne
 8004036:	f04f 7300 	movne.w	r3, #33554432	; 0x2000000
 800403a:	f44f 2300 	moveq.w	r3, #524288	; 0x80000
 800403e:	e003      	b.n	8004048 <HAL_DMA_IRQHandler+0x108>
 8004040:	2308      	movs	r3, #8
 8004042:	e001      	b.n	8004048 <HAL_DMA_IRQHandler+0x108>
 8004044:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004048:	4a69      	ldr	r2, [pc, #420]	; (80041f0 <HAL_DMA_IRQHandler+0x2b0>)
 800404a:	e02d      	b.n	80040a8 <HAL_DMA_IRQHandler+0x168>
 800404c:	4a69      	ldr	r2, [pc, #420]	; (80041f4 <HAL_DMA_IRQHandler+0x2b4>)
 800404e:	4293      	cmp	r3, r2
 8004050:	d914      	bls.n	800407c <HAL_DMA_IRQHandler+0x13c>
 8004052:	f502 7256 	add.w	r2, r2, #856	; 0x358
 8004056:	4293      	cmp	r3, r2
 8004058:	d00a      	beq.n	8004070 <HAL_DMA_IRQHandler+0x130>
 800405a:	3218      	adds	r2, #24
 800405c:	4293      	cmp	r3, r2
 800405e:	d009      	beq.n	8004074 <HAL_DMA_IRQHandler+0x134>
 8004060:	3218      	adds	r2, #24
 8004062:	4293      	cmp	r3, r2
 8004064:	bf14      	ite	ne
 8004066:	f04f 7300 	movne.w	r3, #33554432	; 0x2000000
 800406a:	f44f 2300 	moveq.w	r3, #524288	; 0x80000
 800406e:	e003      	b.n	8004078 <HAL_DMA_IRQHandler+0x138>
 8004070:	2308      	movs	r3, #8
 8004072:	e001      	b.n	8004078 <HAL_DMA_IRQHandler+0x138>
 8004074:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004078:	4a5d      	ldr	r2, [pc, #372]	; (80041f0 <HAL_DMA_IRQHandler+0x2b0>)
 800407a:	e02a      	b.n	80040d2 <HAL_DMA_IRQHandler+0x192>
 800407c:	4a5e      	ldr	r2, [pc, #376]	; (80041f8 <HAL_DMA_IRQHandler+0x2b8>)
 800407e:	4293      	cmp	r3, r2
 8004080:	d914      	bls.n	80040ac <HAL_DMA_IRQHandler+0x16c>
 8004082:	3218      	adds	r2, #24
 8004084:	4293      	cmp	r3, r2
 8004086:	d00a      	beq.n	800409e <HAL_DMA_IRQHandler+0x15e>
 8004088:	3218      	adds	r2, #24
 800408a:	4293      	cmp	r3, r2
 800408c:	d009      	beq.n	80040a2 <HAL_DMA_IRQHandler+0x162>
 800408e:	3218      	adds	r2, #24
 8004090:	4293      	cmp	r3, r2
 8004092:	bf14      	ite	ne
 8004094:	f04f 7300 	movne.w	r3, #33554432	; 0x2000000
 8004098:	f44f 2300 	moveq.w	r3, #524288	; 0x80000
 800409c:	e003      	b.n	80040a6 <HAL_DMA_IRQHandler+0x166>
 800409e:	2308      	movs	r3, #8
 80040a0:	e001      	b.n	80040a6 <HAL_DMA_IRQHandler+0x166>
 80040a2:	f44f 7300 	mov.w	r3, #512	; 0x200
 80040a6:	4a57      	ldr	r2, [pc, #348]	; (8004204 <HAL_DMA_IRQHandler+0x2c4>)
 80040a8:	60d3      	str	r3, [r2, #12]
 80040aa:	e013      	b.n	80040d4 <HAL_DMA_IRQHandler+0x194>
 80040ac:	4a53      	ldr	r2, [pc, #332]	; (80041fc <HAL_DMA_IRQHandler+0x2bc>)
 80040ae:	4293      	cmp	r3, r2
 80040b0:	d00a      	beq.n	80040c8 <HAL_DMA_IRQHandler+0x188>
 80040b2:	3218      	adds	r2, #24
 80040b4:	4293      	cmp	r3, r2
 80040b6:	d009      	beq.n	80040cc <HAL_DMA_IRQHandler+0x18c>
 80040b8:	3218      	adds	r2, #24
 80040ba:	4293      	cmp	r3, r2
 80040bc:	bf14      	ite	ne
 80040be:	f04f 7300 	movne.w	r3, #33554432	; 0x2000000
 80040c2:	f44f 2300 	moveq.w	r3, #524288	; 0x80000
 80040c6:	e003      	b.n	80040d0 <HAL_DMA_IRQHandler+0x190>
 80040c8:	2308      	movs	r3, #8
 80040ca:	e001      	b.n	80040d0 <HAL_DMA_IRQHandler+0x190>
 80040cc:	f44f 7300 	mov.w	r3, #512	; 0x200
 80040d0:	4a4c      	ldr	r2, [pc, #304]	; (8004204 <HAL_DMA_IRQHandler+0x2c4>)
 80040d2:	6093      	str	r3, [r2, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 80040d4:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 80040d6:	f043 0301 	orr.w	r3, r3, #1
 80040da:	64e3      	str	r3, [r4, #76]	; 0x4c

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_ERROR;
 80040dc:	2304      	movs	r3, #4
 80040de:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma); 
 80040e2:	2300      	movs	r3, #0
 80040e4:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34

      if(hdma->XferErrorCallback != NULL)
 80040e8:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 80040ea:	b10b      	cbz	r3, 80040f0 <HAL_DMA_IRQHandler+0x1b0>
      {
        /* Transfer error callback */
        hdma->XferErrorCallback(hdma);
 80040ec:	4620      	mov	r0, r4
 80040ee:	4798      	blx	r3
      }
    }
  }
  /* FIFO Error Interrupt management ******************************************/
  if(__HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_FE_FLAG_INDEX(hdma)) != RESET)
 80040f0:	6823      	ldr	r3, [r4, #0]
 80040f2:	42ab      	cmp	r3, r5
 80040f4:	d915      	bls.n	8004122 <HAL_DMA_IRQHandler+0x1e2>
 80040f6:	4a3e      	ldr	r2, [pc, #248]	; (80041f0 <HAL_DMA_IRQHandler+0x2b0>)
 80040f8:	6851      	ldr	r1, [r2, #4]
 80040fa:	3270      	adds	r2, #112	; 0x70
 80040fc:	4293      	cmp	r3, r2
 80040fe:	d00a      	beq.n	8004116 <HAL_DMA_IRQHandler+0x1d6>
 8004100:	3218      	adds	r2, #24
 8004102:	4293      	cmp	r3, r2
 8004104:	d009      	beq.n	800411a <HAL_DMA_IRQHandler+0x1da>
 8004106:	3218      	adds	r2, #24
 8004108:	4293      	cmp	r3, r2
 800410a:	bf0c      	ite	eq
 800410c:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
 8004110:	f44f 0280 	movne.w	r2, #4194304	; 0x400000
 8004114:	e002      	b.n	800411c <HAL_DMA_IRQHandler+0x1dc>
 8004116:	4a3c      	ldr	r2, [pc, #240]	; (8004208 <HAL_DMA_IRQHandler+0x2c8>)
 8004118:	e000      	b.n	800411c <HAL_DMA_IRQHandler+0x1dc>
 800411a:	2240      	movs	r2, #64	; 0x40
 800411c:	420a      	tst	r2, r1
 800411e:	d148      	bne.n	80041b2 <HAL_DMA_IRQHandler+0x272>
 8004120:	e3fe      	b.n	8004920 <HAL_DMA_IRQHandler+0x9e0>
 8004122:	4a34      	ldr	r2, [pc, #208]	; (80041f4 <HAL_DMA_IRQHandler+0x2b4>)
 8004124:	4293      	cmp	r3, r2
 8004126:	d915      	bls.n	8004154 <HAL_DMA_IRQHandler+0x214>
 8004128:	4a31      	ldr	r2, [pc, #196]	; (80041f0 <HAL_DMA_IRQHandler+0x2b0>)
 800412a:	6811      	ldr	r1, [r2, #0]
 800412c:	3210      	adds	r2, #16
 800412e:	4293      	cmp	r3, r2
 8004130:	d00a      	beq.n	8004148 <HAL_DMA_IRQHandler+0x208>
 8004132:	3218      	adds	r2, #24
 8004134:	4293      	cmp	r3, r2
 8004136:	d009      	beq.n	800414c <HAL_DMA_IRQHandler+0x20c>
 8004138:	3218      	adds	r2, #24
 800413a:	4293      	cmp	r3, r2
 800413c:	bf0c      	ite	eq
 800413e:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
 8004142:	f44f 0280 	movne.w	r2, #4194304	; 0x400000
 8004146:	e002      	b.n	800414e <HAL_DMA_IRQHandler+0x20e>
 8004148:	4a2f      	ldr	r2, [pc, #188]	; (8004208 <HAL_DMA_IRQHandler+0x2c8>)
 800414a:	e000      	b.n	800414e <HAL_DMA_IRQHandler+0x20e>
 800414c:	2240      	movs	r2, #64	; 0x40
 800414e:	420a      	tst	r2, r1
 8004150:	d12f      	bne.n	80041b2 <HAL_DMA_IRQHandler+0x272>
 8004152:	e3e3      	b.n	800491c <HAL_DMA_IRQHandler+0x9dc>
 8004154:	4a28      	ldr	r2, [pc, #160]	; (80041f8 <HAL_DMA_IRQHandler+0x2b8>)
 8004156:	4293      	cmp	r3, r2
 8004158:	d915      	bls.n	8004186 <HAL_DMA_IRQHandler+0x246>
 800415a:	4a2a      	ldr	r2, [pc, #168]	; (8004204 <HAL_DMA_IRQHandler+0x2c4>)
 800415c:	6851      	ldr	r1, [r2, #4]
 800415e:	3270      	adds	r2, #112	; 0x70
 8004160:	4293      	cmp	r3, r2
 8004162:	d00a      	beq.n	800417a <HAL_DMA_IRQHandler+0x23a>
 8004164:	3218      	adds	r2, #24
 8004166:	4293      	cmp	r3, r2
 8004168:	d009      	beq.n	800417e <HAL_DMA_IRQHandler+0x23e>
 800416a:	3218      	adds	r2, #24
 800416c:	4293      	cmp	r3, r2
 800416e:	bf0c      	ite	eq
 8004170:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
 8004174:	f44f 0280 	movne.w	r2, #4194304	; 0x400000
 8004178:	e002      	b.n	8004180 <HAL_DMA_IRQHandler+0x240>
 800417a:	4a23      	ldr	r2, [pc, #140]	; (8004208 <HAL_DMA_IRQHandler+0x2c8>)
 800417c:	e000      	b.n	8004180 <HAL_DMA_IRQHandler+0x240>
 800417e:	2240      	movs	r2, #64	; 0x40
 8004180:	420a      	tst	r2, r1
 8004182:	d116      	bne.n	80041b2 <HAL_DMA_IRQHandler+0x272>
 8004184:	e3c8      	b.n	8004918 <HAL_DMA_IRQHandler+0x9d8>
 8004186:	4a1f      	ldr	r2, [pc, #124]	; (8004204 <HAL_DMA_IRQHandler+0x2c4>)
 8004188:	6811      	ldr	r1, [r2, #0]
 800418a:	3210      	adds	r2, #16
 800418c:	4293      	cmp	r3, r2
 800418e:	d00a      	beq.n	80041a6 <HAL_DMA_IRQHandler+0x266>
 8004190:	3218      	adds	r2, #24
 8004192:	4293      	cmp	r3, r2
 8004194:	d009      	beq.n	80041aa <HAL_DMA_IRQHandler+0x26a>
 8004196:	3218      	adds	r2, #24
 8004198:	4293      	cmp	r3, r2
 800419a:	bf0c      	ite	eq
 800419c:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
 80041a0:	f44f 0280 	movne.w	r2, #4194304	; 0x400000
 80041a4:	e002      	b.n	80041ac <HAL_DMA_IRQHandler+0x26c>
 80041a6:	4a18      	ldr	r2, [pc, #96]	; (8004208 <HAL_DMA_IRQHandler+0x2c8>)
 80041a8:	e000      	b.n	80041ac <HAL_DMA_IRQHandler+0x26c>
 80041aa:	2240      	movs	r2, #64	; 0x40
 80041ac:	420a      	tst	r2, r1
 80041ae:	f000 80ca 	beq.w	8004346 <HAL_DMA_IRQHandler+0x406>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 80041b2:	695a      	ldr	r2, [r3, #20]
 80041b4:	0616      	lsls	r6, r2, #24
 80041b6:	d578      	bpl.n	80042aa <HAL_DMA_IRQHandler+0x36a>
    {
      /* Disable the FIFO Error interrupt */
      __HAL_DMA_DISABLE_IT(hdma, DMA_IT_FE);
 80041b8:	695a      	ldr	r2, [r3, #20]

      /* Clear the FIFO error flag */
      __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_FE_FLAG_INDEX(hdma));
 80041ba:	42ab      	cmp	r3, r5
  if(__HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_FE_FLAG_INDEX(hdma)) != RESET)
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
    {
      /* Disable the FIFO Error interrupt */
      __HAL_DMA_DISABLE_IT(hdma, DMA_IT_FE);
 80041bc:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80041c0:	615a      	str	r2, [r3, #20]

      /* Clear the FIFO error flag */
      __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_FE_FLAG_INDEX(hdma));
 80041c2:	d923      	bls.n	800420c <HAL_DMA_IRQHandler+0x2cc>
 80041c4:	4a0e      	ldr	r2, [pc, #56]	; (8004200 <HAL_DMA_IRQHandler+0x2c0>)
 80041c6:	4293      	cmp	r3, r2
 80041c8:	d00a      	beq.n	80041e0 <HAL_DMA_IRQHandler+0x2a0>
 80041ca:	3218      	adds	r2, #24
 80041cc:	4293      	cmp	r3, r2
 80041ce:	d009      	beq.n	80041e4 <HAL_DMA_IRQHandler+0x2a4>
 80041d0:	3218      	adds	r2, #24
 80041d2:	4293      	cmp	r3, r2
 80041d4:	bf0c      	ite	eq
 80041d6:	f44f 3380 	moveq.w	r3, #65536	; 0x10000
 80041da:	f44f 0380 	movne.w	r3, #4194304	; 0x400000
 80041de:	e002      	b.n	80041e6 <HAL_DMA_IRQHandler+0x2a6>
 80041e0:	4b09      	ldr	r3, [pc, #36]	; (8004208 <HAL_DMA_IRQHandler+0x2c8>)
 80041e2:	e000      	b.n	80041e6 <HAL_DMA_IRQHandler+0x2a6>
 80041e4:	2340      	movs	r3, #64	; 0x40
 80041e6:	4a02      	ldr	r2, [pc, #8]	; (80041f0 <HAL_DMA_IRQHandler+0x2b0>)
 80041e8:	e03c      	b.n	8004264 <HAL_DMA_IRQHandler+0x324>
 80041ea:	bf00      	nop
 80041ec:	40026458 	.word	0x40026458
 80041f0:	40026400 	.word	0x40026400
 80041f4:	400260b8 	.word	0x400260b8
 80041f8:	40026058 	.word	0x40026058
 80041fc:	40026010 	.word	0x40026010
 8004200:	40026470 	.word	0x40026470
 8004204:	40026000 	.word	0x40026000
 8004208:	00800001 	.word	0x00800001
 800420c:	4aab      	ldr	r2, [pc, #684]	; (80044bc <HAL_DMA_IRQHandler+0x57c>)
 800420e:	4293      	cmp	r3, r2
 8004210:	d913      	bls.n	800423a <HAL_DMA_IRQHandler+0x2fa>
 8004212:	f502 7256 	add.w	r2, r2, #856	; 0x358
 8004216:	4293      	cmp	r3, r2
 8004218:	d00a      	beq.n	8004230 <HAL_DMA_IRQHandler+0x2f0>
 800421a:	3218      	adds	r2, #24
 800421c:	4293      	cmp	r3, r2
 800421e:	d009      	beq.n	8004234 <HAL_DMA_IRQHandler+0x2f4>
 8004220:	3218      	adds	r2, #24
 8004222:	4293      	cmp	r3, r2
 8004224:	bf0c      	ite	eq
 8004226:	f44f 3380 	moveq.w	r3, #65536	; 0x10000
 800422a:	f44f 0380 	movne.w	r3, #4194304	; 0x400000
 800422e:	e002      	b.n	8004236 <HAL_DMA_IRQHandler+0x2f6>
 8004230:	4ba3      	ldr	r3, [pc, #652]	; (80044c0 <HAL_DMA_IRQHandler+0x580>)
 8004232:	e000      	b.n	8004236 <HAL_DMA_IRQHandler+0x2f6>
 8004234:	2340      	movs	r3, #64	; 0x40
 8004236:	4aa3      	ldr	r2, [pc, #652]	; (80044c4 <HAL_DMA_IRQHandler+0x584>)
 8004238:	e028      	b.n	800428c <HAL_DMA_IRQHandler+0x34c>
 800423a:	4aa3      	ldr	r2, [pc, #652]	; (80044c8 <HAL_DMA_IRQHandler+0x588>)
 800423c:	4293      	cmp	r3, r2
 800423e:	d913      	bls.n	8004268 <HAL_DMA_IRQHandler+0x328>
 8004240:	3218      	adds	r2, #24
 8004242:	4293      	cmp	r3, r2
 8004244:	d00a      	beq.n	800425c <HAL_DMA_IRQHandler+0x31c>
 8004246:	3218      	adds	r2, #24
 8004248:	4293      	cmp	r3, r2
 800424a:	d009      	beq.n	8004260 <HAL_DMA_IRQHandler+0x320>
 800424c:	3218      	adds	r2, #24
 800424e:	4293      	cmp	r3, r2
 8004250:	bf0c      	ite	eq
 8004252:	f44f 3380 	moveq.w	r3, #65536	; 0x10000
 8004256:	f44f 0380 	movne.w	r3, #4194304	; 0x400000
 800425a:	e002      	b.n	8004262 <HAL_DMA_IRQHandler+0x322>
 800425c:	4b98      	ldr	r3, [pc, #608]	; (80044c0 <HAL_DMA_IRQHandler+0x580>)
 800425e:	e000      	b.n	8004262 <HAL_DMA_IRQHandler+0x322>
 8004260:	2340      	movs	r3, #64	; 0x40
 8004262:	4a9a      	ldr	r2, [pc, #616]	; (80044cc <HAL_DMA_IRQHandler+0x58c>)
 8004264:	60d3      	str	r3, [r2, #12]
 8004266:	e012      	b.n	800428e <HAL_DMA_IRQHandler+0x34e>
 8004268:	4a99      	ldr	r2, [pc, #612]	; (80044d0 <HAL_DMA_IRQHandler+0x590>)
 800426a:	4293      	cmp	r3, r2
 800426c:	d00a      	beq.n	8004284 <HAL_DMA_IRQHandler+0x344>
 800426e:	3218      	adds	r2, #24
 8004270:	4293      	cmp	r3, r2
 8004272:	d009      	beq.n	8004288 <HAL_DMA_IRQHandler+0x348>
 8004274:	3218      	adds	r2, #24
 8004276:	4293      	cmp	r3, r2
 8004278:	bf0c      	ite	eq
 800427a:	f44f 3380 	moveq.w	r3, #65536	; 0x10000
 800427e:	f44f 0380 	movne.w	r3, #4194304	; 0x400000
 8004282:	e002      	b.n	800428a <HAL_DMA_IRQHandler+0x34a>
 8004284:	4b8e      	ldr	r3, [pc, #568]	; (80044c0 <HAL_DMA_IRQHandler+0x580>)
 8004286:	e000      	b.n	800428a <HAL_DMA_IRQHandler+0x34a>
 8004288:	2340      	movs	r3, #64	; 0x40
 800428a:	4a90      	ldr	r2, [pc, #576]	; (80044cc <HAL_DMA_IRQHandler+0x58c>)
 800428c:	6093      	str	r3, [r2, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 800428e:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8004290:	f043 0302 	orr.w	r3, r3, #2
 8004294:	64e3      	str	r3, [r4, #76]	; 0x4c

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_ERROR;
 8004296:	2304      	movs	r3, #4
 8004298:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 800429c:	2300      	movs	r3, #0
 800429e:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34

      if(hdma->XferErrorCallback != NULL)
 80042a2:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 80042a4:	b10b      	cbz	r3, 80042aa <HAL_DMA_IRQHandler+0x36a>
      {
        /* Transfer error callback */
        hdma->XferErrorCallback(hdma);
 80042a6:	4620      	mov	r0, r4
 80042a8:	4798      	blx	r3
      }
    }
  }
  /* Direct Mode Error Interrupt management ***********************************/
  if(__HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_DME_FLAG_INDEX(hdma)) != RESET)
 80042aa:	6823      	ldr	r3, [r4, #0]
 80042ac:	42ab      	cmp	r3, r5
 80042ae:	d916      	bls.n	80042de <HAL_DMA_IRQHandler+0x39e>
 80042b0:	4a84      	ldr	r2, [pc, #528]	; (80044c4 <HAL_DMA_IRQHandler+0x584>)
 80042b2:	6851      	ldr	r1, [r2, #4]
 80042b4:	3270      	adds	r2, #112	; 0x70
 80042b6:	4293      	cmp	r3, r2
 80042b8:	d00a      	beq.n	80042d0 <HAL_DMA_IRQHandler+0x390>
 80042ba:	3218      	adds	r2, #24
 80042bc:	4293      	cmp	r3, r2
 80042be:	d009      	beq.n	80042d4 <HAL_DMA_IRQHandler+0x394>
 80042c0:	3218      	adds	r2, #24
 80042c2:	4293      	cmp	r3, r2
 80042c4:	bf0c      	ite	eq
 80042c6:	f44f 2280 	moveq.w	r2, #262144	; 0x40000
 80042ca:	f04f 7280 	movne.w	r2, #16777216	; 0x1000000
 80042ce:	e003      	b.n	80042d8 <HAL_DMA_IRQHandler+0x398>
 80042d0:	4a80      	ldr	r2, [pc, #512]	; (80044d4 <HAL_DMA_IRQHandler+0x594>)
 80042d2:	e001      	b.n	80042d8 <HAL_DMA_IRQHandler+0x398>
 80042d4:	f44f 7280 	mov.w	r2, #256	; 0x100
 80042d8:	420a      	tst	r2, r1
 80042da:	d14c      	bne.n	8004376 <HAL_DMA_IRQHandler+0x436>
 80042dc:	e326      	b.n	800492c <HAL_DMA_IRQHandler+0x9ec>
 80042de:	4a77      	ldr	r2, [pc, #476]	; (80044bc <HAL_DMA_IRQHandler+0x57c>)
 80042e0:	4293      	cmp	r3, r2
 80042e2:	d916      	bls.n	8004312 <HAL_DMA_IRQHandler+0x3d2>
 80042e4:	4a77      	ldr	r2, [pc, #476]	; (80044c4 <HAL_DMA_IRQHandler+0x584>)
 80042e6:	6811      	ldr	r1, [r2, #0]
 80042e8:	3210      	adds	r2, #16
 80042ea:	4293      	cmp	r3, r2
 80042ec:	d00a      	beq.n	8004304 <HAL_DMA_IRQHandler+0x3c4>
 80042ee:	3218      	adds	r2, #24
 80042f0:	4293      	cmp	r3, r2
 80042f2:	d009      	beq.n	8004308 <HAL_DMA_IRQHandler+0x3c8>
 80042f4:	3218      	adds	r2, #24
 80042f6:	4293      	cmp	r3, r2
 80042f8:	bf0c      	ite	eq
 80042fa:	f44f 2280 	moveq.w	r2, #262144	; 0x40000
 80042fe:	f04f 7280 	movne.w	r2, #16777216	; 0x1000000
 8004302:	e003      	b.n	800430c <HAL_DMA_IRQHandler+0x3cc>
 8004304:	4a73      	ldr	r2, [pc, #460]	; (80044d4 <HAL_DMA_IRQHandler+0x594>)
 8004306:	e001      	b.n	800430c <HAL_DMA_IRQHandler+0x3cc>
 8004308:	f44f 7280 	mov.w	r2, #256	; 0x100
 800430c:	420a      	tst	r2, r1
 800430e:	d132      	bne.n	8004376 <HAL_DMA_IRQHandler+0x436>
 8004310:	e30a      	b.n	8004928 <HAL_DMA_IRQHandler+0x9e8>
 8004312:	4a6d      	ldr	r2, [pc, #436]	; (80044c8 <HAL_DMA_IRQHandler+0x588>)
 8004314:	4293      	cmp	r3, r2
 8004316:	d917      	bls.n	8004348 <HAL_DMA_IRQHandler+0x408>
 8004318:	4a6c      	ldr	r2, [pc, #432]	; (80044cc <HAL_DMA_IRQHandler+0x58c>)
 800431a:	6851      	ldr	r1, [r2, #4]
 800431c:	3270      	adds	r2, #112	; 0x70
 800431e:	4293      	cmp	r3, r2
 8004320:	d00a      	beq.n	8004338 <HAL_DMA_IRQHandler+0x3f8>
 8004322:	3218      	adds	r2, #24
 8004324:	4293      	cmp	r3, r2
 8004326:	d009      	beq.n	800433c <HAL_DMA_IRQHandler+0x3fc>
 8004328:	3218      	adds	r2, #24
 800432a:	4293      	cmp	r3, r2
 800432c:	bf0c      	ite	eq
 800432e:	f44f 2280 	moveq.w	r2, #262144	; 0x40000
 8004332:	f04f 7280 	movne.w	r2, #16777216	; 0x1000000
 8004336:	e003      	b.n	8004340 <HAL_DMA_IRQHandler+0x400>
 8004338:	4a66      	ldr	r2, [pc, #408]	; (80044d4 <HAL_DMA_IRQHandler+0x594>)
 800433a:	e001      	b.n	8004340 <HAL_DMA_IRQHandler+0x400>
 800433c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8004340:	420a      	tst	r2, r1
 8004342:	d118      	bne.n	8004376 <HAL_DMA_IRQHandler+0x436>
 8004344:	e2ee      	b.n	8004924 <HAL_DMA_IRQHandler+0x9e4>
 8004346:	6823      	ldr	r3, [r4, #0]
 8004348:	4a60      	ldr	r2, [pc, #384]	; (80044cc <HAL_DMA_IRQHandler+0x58c>)
 800434a:	6811      	ldr	r1, [r2, #0]
 800434c:	3210      	adds	r2, #16
 800434e:	4293      	cmp	r3, r2
 8004350:	d00a      	beq.n	8004368 <HAL_DMA_IRQHandler+0x428>
 8004352:	3218      	adds	r2, #24
 8004354:	4293      	cmp	r3, r2
 8004356:	d009      	beq.n	800436c <HAL_DMA_IRQHandler+0x42c>
 8004358:	3218      	adds	r2, #24
 800435a:	4293      	cmp	r3, r2
 800435c:	bf0c      	ite	eq
 800435e:	f44f 2280 	moveq.w	r2, #262144	; 0x40000
 8004362:	f04f 7280 	movne.w	r2, #16777216	; 0x1000000
 8004366:	e003      	b.n	8004370 <HAL_DMA_IRQHandler+0x430>
 8004368:	4a5a      	ldr	r2, [pc, #360]	; (80044d4 <HAL_DMA_IRQHandler+0x594>)
 800436a:	e001      	b.n	8004370 <HAL_DMA_IRQHandler+0x430>
 800436c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8004370:	420a      	tst	r2, r1
 8004372:	f000 80cd 	beq.w	8004510 <HAL_DMA_IRQHandler+0x5d0>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 8004376:	681a      	ldr	r2, [r3, #0]
 8004378:	0790      	lsls	r0, r2, #30
 800437a:	d56b      	bpl.n	8004454 <HAL_DMA_IRQHandler+0x514>
    {
      /* Disable the direct mode Error interrupt */
      __HAL_DMA_DISABLE_IT(hdma, DMA_IT_DME);
 800437c:	681a      	ldr	r2, [r3, #0]

      /* Clear the direct mode error flag */
      __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_DME_FLAG_INDEX(hdma));
 800437e:	42ab      	cmp	r3, r5
  if(__HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_DME_FLAG_INDEX(hdma)) != RESET)
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
    {
      /* Disable the direct mode Error interrupt */
      __HAL_DMA_DISABLE_IT(hdma, DMA_IT_DME);
 8004380:	f022 0202 	bic.w	r2, r2, #2
 8004384:	601a      	str	r2, [r3, #0]

      /* Clear the direct mode error flag */
      __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_DME_FLAG_INDEX(hdma));
 8004386:	d913      	bls.n	80043b0 <HAL_DMA_IRQHandler+0x470>
 8004388:	4a53      	ldr	r2, [pc, #332]	; (80044d8 <HAL_DMA_IRQHandler+0x598>)
 800438a:	4293      	cmp	r3, r2
 800438c:	d00a      	beq.n	80043a4 <HAL_DMA_IRQHandler+0x464>
 800438e:	3218      	adds	r2, #24
 8004390:	4293      	cmp	r3, r2
 8004392:	d009      	beq.n	80043a8 <HAL_DMA_IRQHandler+0x468>
 8004394:	3218      	adds	r2, #24
 8004396:	4293      	cmp	r3, r2
 8004398:	bf0c      	ite	eq
 800439a:	f44f 2380 	moveq.w	r3, #262144	; 0x40000
 800439e:	f04f 7380 	movne.w	r3, #16777216	; 0x1000000
 80043a2:	e003      	b.n	80043ac <HAL_DMA_IRQHandler+0x46c>
 80043a4:	4b4b      	ldr	r3, [pc, #300]	; (80044d4 <HAL_DMA_IRQHandler+0x594>)
 80043a6:	e001      	b.n	80043ac <HAL_DMA_IRQHandler+0x46c>
 80043a8:	f44f 7380 	mov.w	r3, #256	; 0x100
 80043ac:	4a45      	ldr	r2, [pc, #276]	; (80044c4 <HAL_DMA_IRQHandler+0x584>)
 80043ae:	e02d      	b.n	800440c <HAL_DMA_IRQHandler+0x4cc>
 80043b0:	4a42      	ldr	r2, [pc, #264]	; (80044bc <HAL_DMA_IRQHandler+0x57c>)
 80043b2:	4293      	cmp	r3, r2
 80043b4:	d914      	bls.n	80043e0 <HAL_DMA_IRQHandler+0x4a0>
 80043b6:	f502 7256 	add.w	r2, r2, #856	; 0x358
 80043ba:	4293      	cmp	r3, r2
 80043bc:	d00a      	beq.n	80043d4 <HAL_DMA_IRQHandler+0x494>
 80043be:	3218      	adds	r2, #24
 80043c0:	4293      	cmp	r3, r2
 80043c2:	d009      	beq.n	80043d8 <HAL_DMA_IRQHandler+0x498>
 80043c4:	3218      	adds	r2, #24
 80043c6:	4293      	cmp	r3, r2
 80043c8:	bf0c      	ite	eq
 80043ca:	f44f 2380 	moveq.w	r3, #262144	; 0x40000
 80043ce:	f04f 7380 	movne.w	r3, #16777216	; 0x1000000
 80043d2:	e003      	b.n	80043dc <HAL_DMA_IRQHandler+0x49c>
 80043d4:	4b3f      	ldr	r3, [pc, #252]	; (80044d4 <HAL_DMA_IRQHandler+0x594>)
 80043d6:	e001      	b.n	80043dc <HAL_DMA_IRQHandler+0x49c>
 80043d8:	f44f 7380 	mov.w	r3, #256	; 0x100
 80043dc:	4a39      	ldr	r2, [pc, #228]	; (80044c4 <HAL_DMA_IRQHandler+0x584>)
 80043de:	e02a      	b.n	8004436 <HAL_DMA_IRQHandler+0x4f6>
 80043e0:	4a39      	ldr	r2, [pc, #228]	; (80044c8 <HAL_DMA_IRQHandler+0x588>)
 80043e2:	4293      	cmp	r3, r2
 80043e4:	d914      	bls.n	8004410 <HAL_DMA_IRQHandler+0x4d0>
 80043e6:	3218      	adds	r2, #24
 80043e8:	4293      	cmp	r3, r2
 80043ea:	d00a      	beq.n	8004402 <HAL_DMA_IRQHandler+0x4c2>
 80043ec:	3218      	adds	r2, #24
 80043ee:	4293      	cmp	r3, r2
 80043f0:	d009      	beq.n	8004406 <HAL_DMA_IRQHandler+0x4c6>
 80043f2:	3218      	adds	r2, #24
 80043f4:	4293      	cmp	r3, r2
 80043f6:	bf0c      	ite	eq
 80043f8:	f44f 2380 	moveq.w	r3, #262144	; 0x40000
 80043fc:	f04f 7380 	movne.w	r3, #16777216	; 0x1000000
 8004400:	e003      	b.n	800440a <HAL_DMA_IRQHandler+0x4ca>
 8004402:	4b34      	ldr	r3, [pc, #208]	; (80044d4 <HAL_DMA_IRQHandler+0x594>)
 8004404:	e001      	b.n	800440a <HAL_DMA_IRQHandler+0x4ca>
 8004406:	f44f 7380 	mov.w	r3, #256	; 0x100
 800440a:	4a30      	ldr	r2, [pc, #192]	; (80044cc <HAL_DMA_IRQHandler+0x58c>)
 800440c:	60d3      	str	r3, [r2, #12]
 800440e:	e013      	b.n	8004438 <HAL_DMA_IRQHandler+0x4f8>
 8004410:	4a2f      	ldr	r2, [pc, #188]	; (80044d0 <HAL_DMA_IRQHandler+0x590>)
 8004412:	4293      	cmp	r3, r2
 8004414:	d00a      	beq.n	800442c <HAL_DMA_IRQHandler+0x4ec>
 8004416:	3218      	adds	r2, #24
 8004418:	4293      	cmp	r3, r2
 800441a:	d009      	beq.n	8004430 <HAL_DMA_IRQHandler+0x4f0>
 800441c:	3218      	adds	r2, #24
 800441e:	4293      	cmp	r3, r2
 8004420:	bf0c      	ite	eq
 8004422:	f44f 2380 	moveq.w	r3, #262144	; 0x40000
 8004426:	f04f 7380 	movne.w	r3, #16777216	; 0x1000000
 800442a:	e003      	b.n	8004434 <HAL_DMA_IRQHandler+0x4f4>
 800442c:	4b29      	ldr	r3, [pc, #164]	; (80044d4 <HAL_DMA_IRQHandler+0x594>)
 800442e:	e001      	b.n	8004434 <HAL_DMA_IRQHandler+0x4f4>
 8004430:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004434:	4a25      	ldr	r2, [pc, #148]	; (80044cc <HAL_DMA_IRQHandler+0x58c>)
 8004436:	6093      	str	r3, [r2, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 8004438:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800443a:	f043 0304 	orr.w	r3, r3, #4
 800443e:	64e3      	str	r3, [r4, #76]	; 0x4c

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_ERROR;
 8004440:	2304      	movs	r3, #4
 8004442:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 8004446:	2300      	movs	r3, #0
 8004448:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34

      if(hdma->XferErrorCallback != NULL)
 800444c:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 800444e:	b10b      	cbz	r3, 8004454 <HAL_DMA_IRQHandler+0x514>
      {
        /* Transfer error callback */
        hdma->XferErrorCallback(hdma);
 8004450:	4620      	mov	r0, r4
 8004452:	4798      	blx	r3
      }
    }
  }
  /* Half Transfer Complete Interrupt management ******************************/
  if(__HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma)) != RESET)
 8004454:	6823      	ldr	r3, [r4, #0]
 8004456:	42ab      	cmp	r3, r5
 8004458:	d916      	bls.n	8004488 <HAL_DMA_IRQHandler+0x548>
 800445a:	4a1a      	ldr	r2, [pc, #104]	; (80044c4 <HAL_DMA_IRQHandler+0x584>)
 800445c:	6851      	ldr	r1, [r2, #4]
 800445e:	3270      	adds	r2, #112	; 0x70
 8004460:	4293      	cmp	r3, r2
 8004462:	d00a      	beq.n	800447a <HAL_DMA_IRQHandler+0x53a>
 8004464:	3218      	adds	r2, #24
 8004466:	4293      	cmp	r3, r2
 8004468:	d009      	beq.n	800447e <HAL_DMA_IRQHandler+0x53e>
 800446a:	3218      	adds	r2, #24
 800446c:	4293      	cmp	r3, r2
 800446e:	bf0c      	ite	eq
 8004470:	f44f 1280 	moveq.w	r2, #1048576	; 0x100000
 8004474:	f04f 6280 	movne.w	r2, #67108864	; 0x4000000
 8004478:	e003      	b.n	8004482 <HAL_DMA_IRQHandler+0x542>
 800447a:	2210      	movs	r2, #16
 800447c:	e001      	b.n	8004482 <HAL_DMA_IRQHandler+0x542>
 800447e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8004482:	420a      	tst	r2, r1
 8004484:	d15c      	bne.n	8004540 <HAL_DMA_IRQHandler+0x600>
 8004486:	e257      	b.n	8004938 <HAL_DMA_IRQHandler+0x9f8>
 8004488:	4a0c      	ldr	r2, [pc, #48]	; (80044bc <HAL_DMA_IRQHandler+0x57c>)
 800448a:	4293      	cmp	r3, r2
 800448c:	d926      	bls.n	80044dc <HAL_DMA_IRQHandler+0x59c>
 800448e:	4a0d      	ldr	r2, [pc, #52]	; (80044c4 <HAL_DMA_IRQHandler+0x584>)
 8004490:	6811      	ldr	r1, [r2, #0]
 8004492:	3210      	adds	r2, #16
 8004494:	4293      	cmp	r3, r2
 8004496:	d00a      	beq.n	80044ae <HAL_DMA_IRQHandler+0x56e>
 8004498:	3218      	adds	r2, #24
 800449a:	4293      	cmp	r3, r2
 800449c:	d009      	beq.n	80044b2 <HAL_DMA_IRQHandler+0x572>
 800449e:	3218      	adds	r2, #24
 80044a0:	4293      	cmp	r3, r2
 80044a2:	bf0c      	ite	eq
 80044a4:	f44f 1280 	moveq.w	r2, #1048576	; 0x100000
 80044a8:	f04f 6280 	movne.w	r2, #67108864	; 0x4000000
 80044ac:	e003      	b.n	80044b6 <HAL_DMA_IRQHandler+0x576>
 80044ae:	2210      	movs	r2, #16
 80044b0:	e001      	b.n	80044b6 <HAL_DMA_IRQHandler+0x576>
 80044b2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80044b6:	420a      	tst	r2, r1
 80044b8:	d142      	bne.n	8004540 <HAL_DMA_IRQHandler+0x600>
 80044ba:	e23b      	b.n	8004934 <HAL_DMA_IRQHandler+0x9f4>
 80044bc:	400260b8 	.word	0x400260b8
 80044c0:	00800001 	.word	0x00800001
 80044c4:	40026400 	.word	0x40026400
 80044c8:	40026058 	.word	0x40026058
 80044cc:	40026000 	.word	0x40026000
 80044d0:	40026010 	.word	0x40026010
 80044d4:	00800004 	.word	0x00800004
 80044d8:	40026470 	.word	0x40026470
 80044dc:	4aab      	ldr	r2, [pc, #684]	; (800478c <HAL_DMA_IRQHandler+0x84c>)
 80044de:	4293      	cmp	r3, r2
 80044e0:	d917      	bls.n	8004512 <HAL_DMA_IRQHandler+0x5d2>
 80044e2:	4aab      	ldr	r2, [pc, #684]	; (8004790 <HAL_DMA_IRQHandler+0x850>)
 80044e4:	6851      	ldr	r1, [r2, #4]
 80044e6:	3270      	adds	r2, #112	; 0x70
 80044e8:	4293      	cmp	r3, r2
 80044ea:	d00a      	beq.n	8004502 <HAL_DMA_IRQHandler+0x5c2>
 80044ec:	3218      	adds	r2, #24
 80044ee:	4293      	cmp	r3, r2
 80044f0:	d009      	beq.n	8004506 <HAL_DMA_IRQHandler+0x5c6>
 80044f2:	3218      	adds	r2, #24
 80044f4:	4293      	cmp	r3, r2
 80044f6:	bf0c      	ite	eq
 80044f8:	f44f 1280 	moveq.w	r2, #1048576	; 0x100000
 80044fc:	f04f 6280 	movne.w	r2, #67108864	; 0x4000000
 8004500:	e003      	b.n	800450a <HAL_DMA_IRQHandler+0x5ca>
 8004502:	2210      	movs	r2, #16
 8004504:	e001      	b.n	800450a <HAL_DMA_IRQHandler+0x5ca>
 8004506:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800450a:	420a      	tst	r2, r1
 800450c:	d118      	bne.n	8004540 <HAL_DMA_IRQHandler+0x600>
 800450e:	e20f      	b.n	8004930 <HAL_DMA_IRQHandler+0x9f0>
 8004510:	6823      	ldr	r3, [r4, #0]
 8004512:	4a9f      	ldr	r2, [pc, #636]	; (8004790 <HAL_DMA_IRQHandler+0x850>)
 8004514:	6811      	ldr	r1, [r2, #0]
 8004516:	3210      	adds	r2, #16
 8004518:	4293      	cmp	r3, r2
 800451a:	d00a      	beq.n	8004532 <HAL_DMA_IRQHandler+0x5f2>
 800451c:	3218      	adds	r2, #24
 800451e:	4293      	cmp	r3, r2
 8004520:	d009      	beq.n	8004536 <HAL_DMA_IRQHandler+0x5f6>
 8004522:	3218      	adds	r2, #24
 8004524:	4293      	cmp	r3, r2
 8004526:	bf0c      	ite	eq
 8004528:	f44f 1280 	moveq.w	r2, #1048576	; 0x100000
 800452c:	f04f 6280 	movne.w	r2, #67108864	; 0x4000000
 8004530:	e003      	b.n	800453a <HAL_DMA_IRQHandler+0x5fa>
 8004532:	2210      	movs	r2, #16
 8004534:	e001      	b.n	800453a <HAL_DMA_IRQHandler+0x5fa>
 8004536:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800453a:	420a      	tst	r2, r1
 800453c:	f000 809d 	beq.w	800467a <HAL_DMA_IRQHandler+0x73a>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 8004540:	681a      	ldr	r2, [r3, #0]
 8004542:	0711      	lsls	r1, r2, #28
 8004544:	f140 8088 	bpl.w	8004658 <HAL_DMA_IRQHandler+0x718>
    { 
      /* Multi_Buffering mode enabled */
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != 0)
 8004548:	681a      	ldr	r2, [r3, #0]
 800454a:	0352      	lsls	r2, r2, #13
 800454c:	d562      	bpl.n	8004614 <HAL_DMA_IRQHandler+0x6d4>
      {
        /* Clear the half transfer complete flag */
        __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma));
 800454e:	42ab      	cmp	r3, r5
 8004550:	d913      	bls.n	800457a <HAL_DMA_IRQHandler+0x63a>
 8004552:	4a90      	ldr	r2, [pc, #576]	; (8004794 <HAL_DMA_IRQHandler+0x854>)
 8004554:	4293      	cmp	r3, r2
 8004556:	d00a      	beq.n	800456e <HAL_DMA_IRQHandler+0x62e>
 8004558:	3218      	adds	r2, #24
 800455a:	4293      	cmp	r3, r2
 800455c:	d009      	beq.n	8004572 <HAL_DMA_IRQHandler+0x632>
 800455e:	3218      	adds	r2, #24
 8004560:	4293      	cmp	r3, r2
 8004562:	bf0c      	ite	eq
 8004564:	f44f 1380 	moveq.w	r3, #1048576	; 0x100000
 8004568:	f04f 6380 	movne.w	r3, #67108864	; 0x4000000
 800456c:	e003      	b.n	8004576 <HAL_DMA_IRQHandler+0x636>
 800456e:	2310      	movs	r3, #16
 8004570:	e001      	b.n	8004576 <HAL_DMA_IRQHandler+0x636>
 8004572:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004576:	4a88      	ldr	r2, [pc, #544]	; (8004798 <HAL_DMA_IRQHandler+0x858>)
 8004578:	e02d      	b.n	80045d6 <HAL_DMA_IRQHandler+0x696>
 800457a:	4a88      	ldr	r2, [pc, #544]	; (800479c <HAL_DMA_IRQHandler+0x85c>)
 800457c:	4293      	cmp	r3, r2
 800457e:	d914      	bls.n	80045aa <HAL_DMA_IRQHandler+0x66a>
 8004580:	f502 7256 	add.w	r2, r2, #856	; 0x358
 8004584:	4293      	cmp	r3, r2
 8004586:	d00a      	beq.n	800459e <HAL_DMA_IRQHandler+0x65e>
 8004588:	3218      	adds	r2, #24
 800458a:	4293      	cmp	r3, r2
 800458c:	d009      	beq.n	80045a2 <HAL_DMA_IRQHandler+0x662>
 800458e:	3218      	adds	r2, #24
 8004590:	4293      	cmp	r3, r2
 8004592:	bf0c      	ite	eq
 8004594:	f44f 1380 	moveq.w	r3, #1048576	; 0x100000
 8004598:	f04f 6380 	movne.w	r3, #67108864	; 0x4000000
 800459c:	e003      	b.n	80045a6 <HAL_DMA_IRQHandler+0x666>
 800459e:	2310      	movs	r3, #16
 80045a0:	e001      	b.n	80045a6 <HAL_DMA_IRQHandler+0x666>
 80045a2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80045a6:	4a7c      	ldr	r2, [pc, #496]	; (8004798 <HAL_DMA_IRQHandler+0x858>)
 80045a8:	e02a      	b.n	8004600 <HAL_DMA_IRQHandler+0x6c0>
 80045aa:	4a78      	ldr	r2, [pc, #480]	; (800478c <HAL_DMA_IRQHandler+0x84c>)
 80045ac:	4293      	cmp	r3, r2
 80045ae:	d914      	bls.n	80045da <HAL_DMA_IRQHandler+0x69a>
 80045b0:	3218      	adds	r2, #24
 80045b2:	4293      	cmp	r3, r2
 80045b4:	d00a      	beq.n	80045cc <HAL_DMA_IRQHandler+0x68c>
 80045b6:	3218      	adds	r2, #24
 80045b8:	4293      	cmp	r3, r2
 80045ba:	d009      	beq.n	80045d0 <HAL_DMA_IRQHandler+0x690>
 80045bc:	3218      	adds	r2, #24
 80045be:	4293      	cmp	r3, r2
 80045c0:	bf0c      	ite	eq
 80045c2:	f44f 1380 	moveq.w	r3, #1048576	; 0x100000
 80045c6:	f04f 6380 	movne.w	r3, #67108864	; 0x4000000
 80045ca:	e003      	b.n	80045d4 <HAL_DMA_IRQHandler+0x694>
 80045cc:	2310      	movs	r3, #16
 80045ce:	e001      	b.n	80045d4 <HAL_DMA_IRQHandler+0x694>
 80045d0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80045d4:	4a6e      	ldr	r2, [pc, #440]	; (8004790 <HAL_DMA_IRQHandler+0x850>)
 80045d6:	60d3      	str	r3, [r2, #12]
 80045d8:	e013      	b.n	8004602 <HAL_DMA_IRQHandler+0x6c2>
 80045da:	4a71      	ldr	r2, [pc, #452]	; (80047a0 <HAL_DMA_IRQHandler+0x860>)
 80045dc:	4293      	cmp	r3, r2
 80045de:	d00a      	beq.n	80045f6 <HAL_DMA_IRQHandler+0x6b6>
 80045e0:	3218      	adds	r2, #24
 80045e2:	4293      	cmp	r3, r2
 80045e4:	d009      	beq.n	80045fa <HAL_DMA_IRQHandler+0x6ba>
 80045e6:	3218      	adds	r2, #24
 80045e8:	4293      	cmp	r3, r2
 80045ea:	bf0c      	ite	eq
 80045ec:	f44f 1380 	moveq.w	r3, #1048576	; 0x100000
 80045f0:	f04f 6380 	movne.w	r3, #67108864	; 0x4000000
 80045f4:	e003      	b.n	80045fe <HAL_DMA_IRQHandler+0x6be>
 80045f6:	2310      	movs	r3, #16
 80045f8:	e001      	b.n	80045fe <HAL_DMA_IRQHandler+0x6be>
 80045fa:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80045fe:	4a64      	ldr	r2, [pc, #400]	; (8004790 <HAL_DMA_IRQHandler+0x850>)
 8004600:	6093      	str	r3, [r2, #8]

        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == 0)
 8004602:	6823      	ldr	r3, [r4, #0]
 8004604:	681a      	ldr	r2, [r3, #0]
 8004606:	0316      	lsls	r6, r2, #12
 8004608:	d51f      	bpl.n	800464a <HAL_DMA_IRQHandler+0x70a>
        {
          /* Change DMA peripheral state */
          hdma->State = HAL_DMA_STATE_READY_HALF_MEM0;
        }
        /* Current memory buffer used is Memory 1 */
        else if((hdma->Instance->CR & DMA_SxCR_CT) != 0)
 800460a:	681b      	ldr	r3, [r3, #0]
 800460c:	0318      	lsls	r0, r3, #12
 800460e:	d51f      	bpl.n	8004650 <HAL_DMA_IRQHandler+0x710>
        {
          /* Change DMA peripheral state */
          hdma->State = HAL_DMA_STATE_READY_HALF_MEM1;
 8004610:	2341      	movs	r3, #65	; 0x41
 8004612:	e01b      	b.n	800464c <HAL_DMA_IRQHandler+0x70c>
        }
      }
      else
      {
        /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0)
 8004614:	681a      	ldr	r2, [r3, #0]
 8004616:	05d1      	lsls	r1, r2, #23
 8004618:	d403      	bmi.n	8004622 <HAL_DMA_IRQHandler+0x6e2>
        {
          /* Disable the half transfer interrupt */
          __HAL_DMA_DISABLE_IT(hdma, DMA_IT_HT);
 800461a:	681a      	ldr	r2, [r3, #0]
 800461c:	f022 0208 	bic.w	r2, r2, #8
 8004620:	601a      	str	r2, [r3, #0]
        }
        /* Clear the half transfer complete flag */
        __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma));
 8004622:	42ab      	cmp	r3, r5
 8004624:	f240 80eb 	bls.w	80047fe <HAL_DMA_IRQHandler+0x8be>
 8004628:	4a5a      	ldr	r2, [pc, #360]	; (8004794 <HAL_DMA_IRQHandler+0x854>)
 800462a:	4293      	cmp	r3, r2
 800462c:	f000 80e2 	beq.w	80047f4 <HAL_DMA_IRQHandler+0x8b4>
 8004630:	3218      	adds	r2, #24
 8004632:	4293      	cmp	r3, r2
 8004634:	f000 80e0 	beq.w	80047f8 <HAL_DMA_IRQHandler+0x8b8>
 8004638:	3218      	adds	r2, #24
 800463a:	4293      	cmp	r3, r2
 800463c:	bf0c      	ite	eq
 800463e:	f44f 1380 	moveq.w	r3, #1048576	; 0x100000
 8004642:	f04f 6380 	movne.w	r3, #67108864	; 0x4000000
 8004646:	4a54      	ldr	r2, [pc, #336]	; (8004798 <HAL_DMA_IRQHandler+0x858>)
 8004648:	60d3      	str	r3, [r2, #12]

        /* Change DMA peripheral state */
        hdma->State = HAL_DMA_STATE_READY_HALF_MEM0;
 800464a:	2331      	movs	r3, #49	; 0x31
 800464c:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
      }

      if(hdma->XferHalfCpltCallback != NULL)
 8004650:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004652:	b10b      	cbz	r3, 8004658 <HAL_DMA_IRQHandler+0x718>
      {
        /* Half transfer callback */
        hdma->XferHalfCpltCallback(hdma);
 8004654:	4620      	mov	r0, r4
 8004656:	4798      	blx	r3
      }
    }
  }
  /* Transfer Complete Interrupt management ***********************************/
  if(__HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_TC_FLAG_INDEX(hdma)) != RESET)
 8004658:	6823      	ldr	r3, [r4, #0]
 800465a:	42ab      	cmp	r3, r5
 800465c:	d901      	bls.n	8004662 <HAL_DMA_IRQHandler+0x722>
 800465e:	4a4e      	ldr	r2, [pc, #312]	; (8004798 <HAL_DMA_IRQHandler+0x858>)
 8004660:	e008      	b.n	8004674 <HAL_DMA_IRQHandler+0x734>
 8004662:	4a4e      	ldr	r2, [pc, #312]	; (800479c <HAL_DMA_IRQHandler+0x85c>)
 8004664:	4293      	cmp	r3, r2
 8004666:	d901      	bls.n	800466c <HAL_DMA_IRQHandler+0x72c>
 8004668:	4a4b      	ldr	r2, [pc, #300]	; (8004798 <HAL_DMA_IRQHandler+0x858>)
 800466a:	e008      	b.n	800467e <HAL_DMA_IRQHandler+0x73e>
 800466c:	4a47      	ldr	r2, [pc, #284]	; (800478c <HAL_DMA_IRQHandler+0x84c>)
 800466e:	4293      	cmp	r3, r2
 8004670:	d904      	bls.n	800467c <HAL_DMA_IRQHandler+0x73c>
 8004672:	4a47      	ldr	r2, [pc, #284]	; (8004790 <HAL_DMA_IRQHandler+0x850>)
 8004674:	6851      	ldr	r1, [r2, #4]
 8004676:	3270      	adds	r2, #112	; 0x70
 8004678:	e003      	b.n	8004682 <HAL_DMA_IRQHandler+0x742>
 800467a:	6823      	ldr	r3, [r4, #0]
 800467c:	4a44      	ldr	r2, [pc, #272]	; (8004790 <HAL_DMA_IRQHandler+0x850>)
 800467e:	6811      	ldr	r1, [r2, #0]
 8004680:	3210      	adds	r2, #16
 8004682:	4293      	cmp	r3, r2
 8004684:	d00a      	beq.n	800469c <HAL_DMA_IRQHandler+0x75c>
 8004686:	3218      	adds	r2, #24
 8004688:	4293      	cmp	r3, r2
 800468a:	d009      	beq.n	80046a0 <HAL_DMA_IRQHandler+0x760>
 800468c:	3218      	adds	r2, #24
 800468e:	4293      	cmp	r3, r2
 8004690:	bf0c      	ite	eq
 8004692:	f44f 1200 	moveq.w	r2, #2097152	; 0x200000
 8004696:	f04f 6200 	movne.w	r2, #134217728	; 0x8000000
 800469a:	e003      	b.n	80046a4 <HAL_DMA_IRQHandler+0x764>
 800469c:	2220      	movs	r2, #32
 800469e:	e001      	b.n	80046a4 <HAL_DMA_IRQHandler+0x764>
 80046a0:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80046a4:	420a      	tst	r2, r1
 80046a6:	bf14      	ite	ne
 80046a8:	2201      	movne	r2, #1
 80046aa:	2200      	moveq	r2, #0
 80046ac:	2a00      	cmp	r2, #0
 80046ae:	f000 8145 	beq.w	800493c <HAL_DMA_IRQHandler+0x9fc>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 80046b2:	681a      	ldr	r2, [r3, #0]
 80046b4:	06d2      	lsls	r2, r2, #27
 80046b6:	f140 8141 	bpl.w	800493c <HAL_DMA_IRQHandler+0x9fc>
    {
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != 0)
 80046ba:	681a      	ldr	r2, [r3, #0]
 80046bc:	0356      	lsls	r6, r2, #13
 80046be:	d571      	bpl.n	80047a4 <HAL_DMA_IRQHandler+0x864>
      {
        /* Clear the transfer complete flag */
        __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TC_FLAG_INDEX(hdma));
 80046c0:	42ab      	cmp	r3, r5
 80046c2:	d913      	bls.n	80046ec <HAL_DMA_IRQHandler+0x7ac>
 80046c4:	4a33      	ldr	r2, [pc, #204]	; (8004794 <HAL_DMA_IRQHandler+0x854>)
 80046c6:	4293      	cmp	r3, r2
 80046c8:	d00a      	beq.n	80046e0 <HAL_DMA_IRQHandler+0x7a0>
 80046ca:	3218      	adds	r2, #24
 80046cc:	4293      	cmp	r3, r2
 80046ce:	d009      	beq.n	80046e4 <HAL_DMA_IRQHandler+0x7a4>
 80046d0:	3218      	adds	r2, #24
 80046d2:	4293      	cmp	r3, r2
 80046d4:	bf0c      	ite	eq
 80046d6:	f44f 1300 	moveq.w	r3, #2097152	; 0x200000
 80046da:	f04f 6300 	movne.w	r3, #134217728	; 0x8000000
 80046de:	e003      	b.n	80046e8 <HAL_DMA_IRQHandler+0x7a8>
 80046e0:	2320      	movs	r3, #32
 80046e2:	e001      	b.n	80046e8 <HAL_DMA_IRQHandler+0x7a8>
 80046e4:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80046e8:	4a2b      	ldr	r2, [pc, #172]	; (8004798 <HAL_DMA_IRQHandler+0x858>)
 80046ea:	e02d      	b.n	8004748 <HAL_DMA_IRQHandler+0x808>
 80046ec:	4a2b      	ldr	r2, [pc, #172]	; (800479c <HAL_DMA_IRQHandler+0x85c>)
 80046ee:	4293      	cmp	r3, r2
 80046f0:	d914      	bls.n	800471c <HAL_DMA_IRQHandler+0x7dc>
 80046f2:	f502 7256 	add.w	r2, r2, #856	; 0x358
 80046f6:	4293      	cmp	r3, r2
 80046f8:	d00a      	beq.n	8004710 <HAL_DMA_IRQHandler+0x7d0>
 80046fa:	3218      	adds	r2, #24
 80046fc:	4293      	cmp	r3, r2
 80046fe:	d009      	beq.n	8004714 <HAL_DMA_IRQHandler+0x7d4>
 8004700:	3218      	adds	r2, #24
 8004702:	4293      	cmp	r3, r2
 8004704:	bf0c      	ite	eq
 8004706:	f44f 1300 	moveq.w	r3, #2097152	; 0x200000
 800470a:	f04f 6300 	movne.w	r3, #134217728	; 0x8000000
 800470e:	e003      	b.n	8004718 <HAL_DMA_IRQHandler+0x7d8>
 8004710:	2320      	movs	r3, #32
 8004712:	e001      	b.n	8004718 <HAL_DMA_IRQHandler+0x7d8>
 8004714:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8004718:	4a1f      	ldr	r2, [pc, #124]	; (8004798 <HAL_DMA_IRQHandler+0x858>)
 800471a:	e02a      	b.n	8004772 <HAL_DMA_IRQHandler+0x832>
 800471c:	4a1b      	ldr	r2, [pc, #108]	; (800478c <HAL_DMA_IRQHandler+0x84c>)
 800471e:	4293      	cmp	r3, r2
 8004720:	d914      	bls.n	800474c <HAL_DMA_IRQHandler+0x80c>
 8004722:	3218      	adds	r2, #24
 8004724:	4293      	cmp	r3, r2
 8004726:	d00a      	beq.n	800473e <HAL_DMA_IRQHandler+0x7fe>
 8004728:	3218      	adds	r2, #24
 800472a:	4293      	cmp	r3, r2
 800472c:	d009      	beq.n	8004742 <HAL_DMA_IRQHandler+0x802>
 800472e:	3218      	adds	r2, #24
 8004730:	4293      	cmp	r3, r2
 8004732:	bf0c      	ite	eq
 8004734:	f44f 1300 	moveq.w	r3, #2097152	; 0x200000
 8004738:	f04f 6300 	movne.w	r3, #134217728	; 0x8000000
 800473c:	e003      	b.n	8004746 <HAL_DMA_IRQHandler+0x806>
 800473e:	2320      	movs	r3, #32
 8004740:	e001      	b.n	8004746 <HAL_DMA_IRQHandler+0x806>
 8004742:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8004746:	4a12      	ldr	r2, [pc, #72]	; (8004790 <HAL_DMA_IRQHandler+0x850>)
 8004748:	60d3      	str	r3, [r2, #12]
 800474a:	e013      	b.n	8004774 <HAL_DMA_IRQHandler+0x834>
 800474c:	4a14      	ldr	r2, [pc, #80]	; (80047a0 <HAL_DMA_IRQHandler+0x860>)
 800474e:	4293      	cmp	r3, r2
 8004750:	d00a      	beq.n	8004768 <HAL_DMA_IRQHandler+0x828>
 8004752:	3218      	adds	r2, #24
 8004754:	4293      	cmp	r3, r2
 8004756:	d009      	beq.n	800476c <HAL_DMA_IRQHandler+0x82c>
 8004758:	3218      	adds	r2, #24
 800475a:	4293      	cmp	r3, r2
 800475c:	bf0c      	ite	eq
 800475e:	f44f 1300 	moveq.w	r3, #2097152	; 0x200000
 8004762:	f04f 6300 	movne.w	r3, #134217728	; 0x8000000
 8004766:	e003      	b.n	8004770 <HAL_DMA_IRQHandler+0x830>
 8004768:	2320      	movs	r3, #32
 800476a:	e001      	b.n	8004770 <HAL_DMA_IRQHandler+0x830>
 800476c:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8004770:	4a07      	ldr	r2, [pc, #28]	; (8004790 <HAL_DMA_IRQHandler+0x850>)
 8004772:	6093      	str	r3, [r2, #8]

        /* Current memory buffer used is Memory 1 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == 0)
 8004774:	6823      	ldr	r3, [r4, #0]
 8004776:	681a      	ldr	r2, [r3, #0]
 8004778:	0310      	lsls	r0, r2, #12
 800477a:	d401      	bmi.n	8004780 <HAL_DMA_IRQHandler+0x840>
        {
          if(hdma->XferM1CpltCallback != NULL)
 800477c:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800477e:	e032      	b.n	80047e6 <HAL_DMA_IRQHandler+0x8a6>
            /* Transfer complete Callback for memory1 */
            hdma->XferM1CpltCallback(hdma);
          }
        }
        /* Current memory buffer used is Memory 0 */
        else if((hdma->Instance->CR & DMA_SxCR_CT) != 0) 
 8004780:	681b      	ldr	r3, [r3, #0]
 8004782:	0319      	lsls	r1, r3, #12
 8004784:	f140 80da 	bpl.w	800493c <HAL_DMA_IRQHandler+0x9fc>
 8004788:	e02c      	b.n	80047e4 <HAL_DMA_IRQHandler+0x8a4>
 800478a:	bf00      	nop
 800478c:	40026058 	.word	0x40026058
 8004790:	40026000 	.word	0x40026000
 8004794:	40026470 	.word	0x40026470
 8004798:	40026400 	.word	0x40026400
 800479c:	400260b8 	.word	0x400260b8
 80047a0:	40026010 	.word	0x40026010
        }
      }
      /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
      else
      {
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0)
 80047a4:	681a      	ldr	r2, [r3, #0]
 80047a6:	05d2      	lsls	r2, r2, #23
 80047a8:	d403      	bmi.n	80047b2 <HAL_DMA_IRQHandler+0x872>
        {
          /* Disable the transfer complete interrupt */
          __HAL_DMA_DISABLE_IT(hdma, DMA_IT_TC);
 80047aa:	681a      	ldr	r2, [r3, #0]
 80047ac:	f022 0210 	bic.w	r2, r2, #16
 80047b0:	601a      	str	r2, [r3, #0]
        }
        /* Clear the transfer complete flag */
        __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TC_FLAG_INDEX(hdma));
 80047b2:	42ab      	cmp	r3, r5
 80047b4:	d96c      	bls.n	8004890 <HAL_DMA_IRQHandler+0x950>
 80047b6:	4a62      	ldr	r2, [pc, #392]	; (8004940 <HAL_DMA_IRQHandler+0xa00>)
 80047b8:	4293      	cmp	r3, r2
 80047ba:	d064      	beq.n	8004886 <HAL_DMA_IRQHandler+0x946>
 80047bc:	3218      	adds	r2, #24
 80047be:	4293      	cmp	r3, r2
 80047c0:	d063      	beq.n	800488a <HAL_DMA_IRQHandler+0x94a>
 80047c2:	3218      	adds	r2, #24
 80047c4:	4293      	cmp	r3, r2
 80047c6:	bf0c      	ite	eq
 80047c8:	f44f 1300 	moveq.w	r3, #2097152	; 0x200000
 80047cc:	f04f 6300 	movne.w	r3, #134217728	; 0x8000000
 80047d0:	4a5c      	ldr	r2, [pc, #368]	; (8004944 <HAL_DMA_IRQHandler+0xa04>)
 80047d2:	60d3      	str	r3, [r2, #12]

        /* Update error code */
        hdma->ErrorCode |= HAL_DMA_ERROR_NONE;
 80047d4:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 80047d6:	64e3      	str	r3, [r4, #76]	; 0x4c

        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY_MEM0;
 80047d8:	2311      	movs	r3, #17
 80047da:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35

        /* Process Unlocked */
        __HAL_UNLOCK(hdma);      
 80047de:	2300      	movs	r3, #0
 80047e0:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34

        if(hdma->XferCpltCallback != NULL)
 80047e4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80047e6:	2b00      	cmp	r3, #0
 80047e8:	f000 80a8 	beq.w	800493c <HAL_DMA_IRQHandler+0x9fc>
        {
          /* Transfer complete callback */
          hdma->XferCpltCallback(hdma);
 80047ec:	4620      	mov	r0, r4
        }
      }
    }
  }
}
 80047ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        __HAL_UNLOCK(hdma);      

        if(hdma->XferCpltCallback != NULL)
        {
          /* Transfer complete callback */
          hdma->XferCpltCallback(hdma);
 80047f2:	4718      	bx	r3
        {
          /* Disable the half transfer interrupt */
          __HAL_DMA_DISABLE_IT(hdma, DMA_IT_HT);
        }
        /* Clear the half transfer complete flag */
        __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma));
 80047f4:	2310      	movs	r3, #16
 80047f6:	e726      	b.n	8004646 <HAL_DMA_IRQHandler+0x706>
 80047f8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80047fc:	e723      	b.n	8004646 <HAL_DMA_IRQHandler+0x706>
 80047fe:	4a52      	ldr	r2, [pc, #328]	; (8004948 <HAL_DMA_IRQHandler+0xa08>)
 8004800:	4293      	cmp	r3, r2
 8004802:	d914      	bls.n	800482e <HAL_DMA_IRQHandler+0x8ee>
 8004804:	f502 7256 	add.w	r2, r2, #856	; 0x358
 8004808:	4293      	cmp	r3, r2
 800480a:	d00a      	beq.n	8004822 <HAL_DMA_IRQHandler+0x8e2>
 800480c:	3218      	adds	r2, #24
 800480e:	4293      	cmp	r3, r2
 8004810:	d009      	beq.n	8004826 <HAL_DMA_IRQHandler+0x8e6>
 8004812:	3218      	adds	r2, #24
 8004814:	4293      	cmp	r3, r2
 8004816:	bf0c      	ite	eq
 8004818:	f44f 1380 	moveq.w	r3, #1048576	; 0x100000
 800481c:	f04f 6380 	movne.w	r3, #67108864	; 0x4000000
 8004820:	e003      	b.n	800482a <HAL_DMA_IRQHandler+0x8ea>
 8004822:	2310      	movs	r3, #16
 8004824:	e001      	b.n	800482a <HAL_DMA_IRQHandler+0x8ea>
 8004826:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800482a:	4a46      	ldr	r2, [pc, #280]	; (8004944 <HAL_DMA_IRQHandler+0xa04>)
 800482c:	e029      	b.n	8004882 <HAL_DMA_IRQHandler+0x942>
 800482e:	4a47      	ldr	r2, [pc, #284]	; (800494c <HAL_DMA_IRQHandler+0xa0c>)
 8004830:	4293      	cmp	r3, r2
 8004832:	d913      	bls.n	800485c <HAL_DMA_IRQHandler+0x91c>
 8004834:	3218      	adds	r2, #24
 8004836:	4293      	cmp	r3, r2
 8004838:	d00a      	beq.n	8004850 <HAL_DMA_IRQHandler+0x910>
 800483a:	3218      	adds	r2, #24
 800483c:	4293      	cmp	r3, r2
 800483e:	d009      	beq.n	8004854 <HAL_DMA_IRQHandler+0x914>
 8004840:	3218      	adds	r2, #24
 8004842:	4293      	cmp	r3, r2
 8004844:	bf0c      	ite	eq
 8004846:	f44f 1380 	moveq.w	r3, #1048576	; 0x100000
 800484a:	f04f 6380 	movne.w	r3, #67108864	; 0x4000000
 800484e:	e003      	b.n	8004858 <HAL_DMA_IRQHandler+0x918>
 8004850:	2310      	movs	r3, #16
 8004852:	e001      	b.n	8004858 <HAL_DMA_IRQHandler+0x918>
 8004854:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004858:	4a3d      	ldr	r2, [pc, #244]	; (8004950 <HAL_DMA_IRQHandler+0xa10>)
 800485a:	e6f5      	b.n	8004648 <HAL_DMA_IRQHandler+0x708>
 800485c:	4a3d      	ldr	r2, [pc, #244]	; (8004954 <HAL_DMA_IRQHandler+0xa14>)
 800485e:	4293      	cmp	r3, r2
 8004860:	d00a      	beq.n	8004878 <HAL_DMA_IRQHandler+0x938>
 8004862:	3218      	adds	r2, #24
 8004864:	4293      	cmp	r3, r2
 8004866:	d009      	beq.n	800487c <HAL_DMA_IRQHandler+0x93c>
 8004868:	3218      	adds	r2, #24
 800486a:	4293      	cmp	r3, r2
 800486c:	bf0c      	ite	eq
 800486e:	f44f 1380 	moveq.w	r3, #1048576	; 0x100000
 8004872:	f04f 6380 	movne.w	r3, #67108864	; 0x4000000
 8004876:	e003      	b.n	8004880 <HAL_DMA_IRQHandler+0x940>
 8004878:	2310      	movs	r3, #16
 800487a:	e001      	b.n	8004880 <HAL_DMA_IRQHandler+0x940>
 800487c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004880:	4a33      	ldr	r2, [pc, #204]	; (8004950 <HAL_DMA_IRQHandler+0xa10>)
 8004882:	6093      	str	r3, [r2, #8]
 8004884:	e6e1      	b.n	800464a <HAL_DMA_IRQHandler+0x70a>
        {
          /* Disable the transfer complete interrupt */
          __HAL_DMA_DISABLE_IT(hdma, DMA_IT_TC);
        }
        /* Clear the transfer complete flag */
        __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TC_FLAG_INDEX(hdma));
 8004886:	2320      	movs	r3, #32
 8004888:	e7a2      	b.n	80047d0 <HAL_DMA_IRQHandler+0x890>
 800488a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800488e:	e79f      	b.n	80047d0 <HAL_DMA_IRQHandler+0x890>
 8004890:	4a2d      	ldr	r2, [pc, #180]	; (8004948 <HAL_DMA_IRQHandler+0xa08>)
 8004892:	4293      	cmp	r3, r2
 8004894:	d914      	bls.n	80048c0 <HAL_DMA_IRQHandler+0x980>
 8004896:	f502 7256 	add.w	r2, r2, #856	; 0x358
 800489a:	4293      	cmp	r3, r2
 800489c:	d00a      	beq.n	80048b4 <HAL_DMA_IRQHandler+0x974>
 800489e:	3218      	adds	r2, #24
 80048a0:	4293      	cmp	r3, r2
 80048a2:	d009      	beq.n	80048b8 <HAL_DMA_IRQHandler+0x978>
 80048a4:	3218      	adds	r2, #24
 80048a6:	4293      	cmp	r3, r2
 80048a8:	bf0c      	ite	eq
 80048aa:	f44f 1300 	moveq.w	r3, #2097152	; 0x200000
 80048ae:	f04f 6300 	movne.w	r3, #134217728	; 0x8000000
 80048b2:	e003      	b.n	80048bc <HAL_DMA_IRQHandler+0x97c>
 80048b4:	2320      	movs	r3, #32
 80048b6:	e001      	b.n	80048bc <HAL_DMA_IRQHandler+0x97c>
 80048b8:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80048bc:	4a21      	ldr	r2, [pc, #132]	; (8004944 <HAL_DMA_IRQHandler+0xa04>)
 80048be:	e029      	b.n	8004914 <HAL_DMA_IRQHandler+0x9d4>
 80048c0:	4a22      	ldr	r2, [pc, #136]	; (800494c <HAL_DMA_IRQHandler+0xa0c>)
 80048c2:	4293      	cmp	r3, r2
 80048c4:	d913      	bls.n	80048ee <HAL_DMA_IRQHandler+0x9ae>
 80048c6:	3218      	adds	r2, #24
 80048c8:	4293      	cmp	r3, r2
 80048ca:	d00a      	beq.n	80048e2 <HAL_DMA_IRQHandler+0x9a2>
 80048cc:	3218      	adds	r2, #24
 80048ce:	4293      	cmp	r3, r2
 80048d0:	d009      	beq.n	80048e6 <HAL_DMA_IRQHandler+0x9a6>
 80048d2:	3218      	adds	r2, #24
 80048d4:	4293      	cmp	r3, r2
 80048d6:	bf0c      	ite	eq
 80048d8:	f44f 1300 	moveq.w	r3, #2097152	; 0x200000
 80048dc:	f04f 6300 	movne.w	r3, #134217728	; 0x8000000
 80048e0:	e003      	b.n	80048ea <HAL_DMA_IRQHandler+0x9aa>
 80048e2:	2320      	movs	r3, #32
 80048e4:	e001      	b.n	80048ea <HAL_DMA_IRQHandler+0x9aa>
 80048e6:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80048ea:	4a19      	ldr	r2, [pc, #100]	; (8004950 <HAL_DMA_IRQHandler+0xa10>)
 80048ec:	e771      	b.n	80047d2 <HAL_DMA_IRQHandler+0x892>
 80048ee:	4a19      	ldr	r2, [pc, #100]	; (8004954 <HAL_DMA_IRQHandler+0xa14>)
 80048f0:	4293      	cmp	r3, r2
 80048f2:	d00a      	beq.n	800490a <HAL_DMA_IRQHandler+0x9ca>
 80048f4:	3218      	adds	r2, #24
 80048f6:	4293      	cmp	r3, r2
 80048f8:	d009      	beq.n	800490e <HAL_DMA_IRQHandler+0x9ce>
 80048fa:	3218      	adds	r2, #24
 80048fc:	4293      	cmp	r3, r2
 80048fe:	bf0c      	ite	eq
 8004900:	f44f 1300 	moveq.w	r3, #2097152	; 0x200000
 8004904:	f04f 6300 	movne.w	r3, #134217728	; 0x8000000
 8004908:	e003      	b.n	8004912 <HAL_DMA_IRQHandler+0x9d2>
 800490a:	2320      	movs	r3, #32
 800490c:	e001      	b.n	8004912 <HAL_DMA_IRQHandler+0x9d2>
 800490e:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8004912:	4a0f      	ldr	r2, [pc, #60]	; (8004950 <HAL_DMA_IRQHandler+0xa10>)
 8004914:	6093      	str	r3, [r2, #8]
 8004916:	e75d      	b.n	80047d4 <HAL_DMA_IRQHandler+0x894>
        hdma->XferErrorCallback(hdma);
      }
    }
  }
  /* Direct Mode Error Interrupt management ***********************************/
  if(__HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_DME_FLAG_INDEX(hdma)) != RESET)
 8004918:	6823      	ldr	r3, [r4, #0]
 800491a:	e4fd      	b.n	8004318 <HAL_DMA_IRQHandler+0x3d8>
 800491c:	6823      	ldr	r3, [r4, #0]
 800491e:	e4e1      	b.n	80042e4 <HAL_DMA_IRQHandler+0x3a4>
 8004920:	6823      	ldr	r3, [r4, #0]
 8004922:	e4c5      	b.n	80042b0 <HAL_DMA_IRQHandler+0x370>
        hdma->XferErrorCallback(hdma);
      }
    }
  }
  /* Half Transfer Complete Interrupt management ******************************/
  if(__HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma)) != RESET)
 8004924:	6823      	ldr	r3, [r4, #0]
 8004926:	e5dc      	b.n	80044e2 <HAL_DMA_IRQHandler+0x5a2>
 8004928:	6823      	ldr	r3, [r4, #0]
 800492a:	e5b0      	b.n	800448e <HAL_DMA_IRQHandler+0x54e>
 800492c:	6823      	ldr	r3, [r4, #0]
 800492e:	e594      	b.n	800445a <HAL_DMA_IRQHandler+0x51a>
        hdma->XferHalfCpltCallback(hdma);
      }
    }
  }
  /* Transfer Complete Interrupt management ***********************************/
  if(__HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_TC_FLAG_INDEX(hdma)) != RESET)
 8004930:	6823      	ldr	r3, [r4, #0]
 8004932:	e69e      	b.n	8004672 <HAL_DMA_IRQHandler+0x732>
 8004934:	6823      	ldr	r3, [r4, #0]
 8004936:	e697      	b.n	8004668 <HAL_DMA_IRQHandler+0x728>
 8004938:	6823      	ldr	r3, [r4, #0]
 800493a:	e690      	b.n	800465e <HAL_DMA_IRQHandler+0x71e>
 800493c:	bd70      	pop	{r4, r5, r6, pc}
 800493e:	bf00      	nop
 8004940:	40026470 	.word	0x40026470
 8004944:	40026400 	.word	0x40026400
 8004948:	400260b8 	.word	0x400260b8
 800494c:	40026058 	.word	0x40026058
 8004950:	40026000 	.word	0x40026000
 8004954:	40026010 	.word	0x40026010

08004958 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004958:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  uint32_t ioposition = 0x00;
  uint32_t iocurrent = 0x00;
  uint32_t temp = 0x00;

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 800495c:	4b91      	ldr	r3, [pc, #580]	; (8004ba4 <HAL_GPIO_Init+0x24c>)
 800495e:	4298      	cmp	r0, r3
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004960:	4604      	mov	r4, r0
 8004962:	460d      	mov	r5, r1
  uint32_t ioposition = 0x00;
  uint32_t iocurrent = 0x00;
  uint32_t temp = 0x00;

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 8004964:	d023      	beq.n	80049ae <HAL_GPIO_Init+0x56>
 8004966:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800496a:	4298      	cmp	r0, r3
 800496c:	d01f      	beq.n	80049ae <HAL_GPIO_Init+0x56>
 800496e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004972:	4298      	cmp	r0, r3
 8004974:	d01b      	beq.n	80049ae <HAL_GPIO_Init+0x56>
 8004976:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800497a:	4298      	cmp	r0, r3
 800497c:	d017      	beq.n	80049ae <HAL_GPIO_Init+0x56>
 800497e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004982:	4298      	cmp	r0, r3
 8004984:	d013      	beq.n	80049ae <HAL_GPIO_Init+0x56>
 8004986:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800498a:	4298      	cmp	r0, r3
 800498c:	d00f      	beq.n	80049ae <HAL_GPIO_Init+0x56>
 800498e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004992:	4298      	cmp	r0, r3
 8004994:	d00b      	beq.n	80049ae <HAL_GPIO_Init+0x56>
 8004996:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800499a:	4298      	cmp	r0, r3
 800499c:	d007      	beq.n	80049ae <HAL_GPIO_Init+0x56>
 800499e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80049a2:	4298      	cmp	r0, r3
 80049a4:	d003      	beq.n	80049ae <HAL_GPIO_Init+0x56>
 80049a6:	4880      	ldr	r0, [pc, #512]	; (8004ba8 <HAL_GPIO_Init+0x250>)
 80049a8:	21c5      	movs	r1, #197	; 0xc5
 80049aa:	f7fc fd9d 	bl	80014e8 <assert_failed>
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
 80049ae:	882b      	ldrh	r3, [r5, #0]
 80049b0:	b91b      	cbnz	r3, 80049ba <HAL_GPIO_Init+0x62>
 80049b2:	487d      	ldr	r0, [pc, #500]	; (8004ba8 <HAL_GPIO_Init+0x250>)
 80049b4:	21c6      	movs	r1, #198	; 0xc6
 80049b6:	f7fc fd97 	bl	80014e8 <assert_failed>
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 80049ba:	686b      	ldr	r3, [r5, #4]
 80049bc:	2b03      	cmp	r3, #3
 80049be:	d917      	bls.n	80049f0 <HAL_GPIO_Init+0x98>
 80049c0:	f1a3 0211 	sub.w	r2, r3, #17
 80049c4:	2a01      	cmp	r2, #1
 80049c6:	d913      	bls.n	80049f0 <HAL_GPIO_Init+0x98>
 80049c8:	4978      	ldr	r1, [pc, #480]	; (8004bac <HAL_GPIO_Init+0x254>)
 80049ca:	f423 1200 	bic.w	r2, r3, #2097152	; 0x200000
 80049ce:	428a      	cmp	r2, r1
 80049d0:	d00e      	beq.n	80049f0 <HAL_GPIO_Init+0x98>
 80049d2:	f501 1180 	add.w	r1, r1, #1048576	; 0x100000
 80049d6:	428b      	cmp	r3, r1
 80049d8:	d00a      	beq.n	80049f0 <HAL_GPIO_Init+0x98>
 80049da:	f5a1 2170 	sub.w	r1, r1, #983040	; 0xf0000
 80049de:	428a      	cmp	r2, r1
 80049e0:	d006      	beq.n	80049f0 <HAL_GPIO_Init+0x98>
 80049e2:	4a73      	ldr	r2, [pc, #460]	; (8004bb0 <HAL_GPIO_Init+0x258>)
 80049e4:	4293      	cmp	r3, r2
 80049e6:	d003      	beq.n	80049f0 <HAL_GPIO_Init+0x98>
 80049e8:	486f      	ldr	r0, [pc, #444]	; (8004ba8 <HAL_GPIO_Init+0x250>)
 80049ea:	21c7      	movs	r1, #199	; 0xc7
 80049ec:	f7fc fd7c 	bl	80014e8 <assert_failed>
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
 80049f0:	68ab      	ldr	r3, [r5, #8]
 80049f2:	2b02      	cmp	r3, #2
 80049f4:	d903      	bls.n	80049fe <HAL_GPIO_Init+0xa6>
 80049f6:	486c      	ldr	r0, [pc, #432]	; (8004ba8 <HAL_GPIO_Init+0x250>)
 80049f8:	21c8      	movs	r1, #200	; 0xc8
 80049fa:	f7fc fd75 	bl	80014e8 <assert_failed>
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80049fe:	2600      	movs	r6, #0

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
 8004a00:	2301      	movs	r3, #1
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004a02:	682f      	ldr	r7, [r5, #0]

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
 8004a04:	40b3      	lsls	r3, r6
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004a06:	401f      	ands	r7, r3

    if(iocurrent == ioposition)
 8004a08:	429f      	cmp	r7, r3
 8004a0a:	f040 80c5 	bne.w	8004b98 <HAL_GPIO_Init+0x240>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8004a0e:	686b      	ldr	r3, [r5, #4]
 8004a10:	f023 0310 	bic.w	r3, r3, #16
 8004a14:	2b02      	cmp	r3, #2
 8004a16:	d117      	bne.n	8004a48 <HAL_GPIO_Init+0xf0>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 8004a18:	692b      	ldr	r3, [r5, #16]
 8004a1a:	2b0d      	cmp	r3, #13
 8004a1c:	d905      	bls.n	8004a2a <HAL_GPIO_Init+0xd2>
 8004a1e:	2b0f      	cmp	r3, #15
 8004a20:	d003      	beq.n	8004a2a <HAL_GPIO_Init+0xd2>
 8004a22:	4861      	ldr	r0, [pc, #388]	; (8004ba8 <HAL_GPIO_Init+0x250>)
 8004a24:	21d9      	movs	r1, #217	; 0xd9
 8004a26:	f7fc fd5f 	bl	80014e8 <assert_failed>
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3];
 8004a2a:	08f2      	lsrs	r2, r6, #3
 8004a2c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8004a30:	f006 0107 	and.w	r1, r6, #7
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3];
 8004a34:	6a10      	ldr	r0, [r2, #32]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8004a36:	0089      	lsls	r1, r1, #2
 8004a38:	230f      	movs	r3, #15
 8004a3a:	408b      	lsls	r3, r1
 8004a3c:	ea20 0003 	bic.w	r0, r0, r3
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 8004a40:	692b      	ldr	r3, [r5, #16]
 8004a42:	408b      	lsls	r3, r1
 8004a44:	4303      	orrs	r3, r0
        GPIOx->AFR[position >> 3] = temp;
 8004a46:	6213      	str	r3, [r2, #32]
 8004a48:	ea4f 0946 	mov.w	r9, r6, lsl #1
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 8004a4c:	f04f 0803 	mov.w	r8, #3
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
        GPIOx->AFR[position >> 3] = temp;
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8004a50:	6822      	ldr	r2, [r4, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8004a52:	686b      	ldr	r3, [r5, #4]
        GPIOx->AFR[position >> 3] = temp;
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 8004a54:	fa08 f809 	lsl.w	r8, r8, r9
 8004a58:	ea6f 0808 	mvn.w	r8, r8
 8004a5c:	ea08 0102 	and.w	r1, r8, r2
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8004a60:	f003 0203 	and.w	r2, r3, #3
      GPIOx->MODER = temp;

      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8004a64:	f023 0310 	bic.w	r3, r3, #16
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8004a68:	fa02 f209 	lsl.w	r2, r2, r9
      GPIOx->MODER = temp;

      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8004a6c:	3b01      	subs	r3, #1
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8004a6e:	430a      	orrs	r2, r1
      GPIOx->MODER = temp;

      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8004a70:	2b01      	cmp	r3, #1

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
      GPIOx->MODER = temp;
 8004a72:	6022      	str	r2, [r4, #0]

      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8004a74:	d817      	bhi.n	8004aa6 <HAL_GPIO_Init+0x14e>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
 8004a76:	68eb      	ldr	r3, [r5, #12]
 8004a78:	2b03      	cmp	r3, #3
 8004a7a:	d903      	bls.n	8004a84 <HAL_GPIO_Init+0x12c>
 8004a7c:	484a      	ldr	r0, [pc, #296]	; (8004ba8 <HAL_GPIO_Init+0x250>)
 8004a7e:	21ec      	movs	r1, #236	; 0xec
 8004a80:	f7fc fd32 	bl	80014e8 <assert_failed>
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8004a84:	68a3      	ldr	r3, [r4, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8004a86:	ea08 0203 	and.w	r2, r8, r3
        temp |= (GPIO_Init->Speed << (position * 2));
 8004a8a:	68eb      	ldr	r3, [r5, #12]
 8004a8c:	fa03 f309 	lsl.w	r3, r3, r9
 8004a90:	4313      	orrs	r3, r2
        GPIOx->OSPEEDR = temp;
 8004a92:	60a3      	str	r3, [r4, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8004a94:	6863      	ldr	r3, [r4, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004a96:	ea23 0207 	bic.w	r2, r3, r7
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4) << position);
 8004a9a:	686b      	ldr	r3, [r5, #4]
 8004a9c:	f3c3 1300 	ubfx	r3, r3, #4, #1
 8004aa0:	40b3      	lsls	r3, r6
 8004aa2:	4313      	orrs	r3, r2
        GPIOx->OTYPER = temp;
 8004aa4:	6063      	str	r3, [r4, #4]
      }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 8004aa6:	68e3      	ldr	r3, [r4, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2));
      GPIOx->PUPDR = temp;

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8004aa8:	6869      	ldr	r1, [r5, #4]
        GPIOx->OTYPER = temp;
      }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 8004aaa:	ea08 0803 	and.w	r8, r8, r3
      temp |= ((GPIO_Init->Pull) << (position * 2));
 8004aae:	68ab      	ldr	r3, [r5, #8]
 8004ab0:	fa03 f309 	lsl.w	r3, r3, r9
 8004ab4:	ea48 0303 	orr.w	r3, r8, r3
      GPIOx->PUPDR = temp;
 8004ab8:	60e3      	str	r3, [r4, #12]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8004aba:	00cb      	lsls	r3, r1, #3
 8004abc:	d56c      	bpl.n	8004b98 <HAL_GPIO_Init+0x240>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004abe:	4a3d      	ldr	r2, [pc, #244]	; (8004bb4 <HAL_GPIO_Init+0x25c>)
 8004ac0:	6c53      	ldr	r3, [r2, #68]	; 0x44
 8004ac2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8004ac6:	6453      	str	r3, [r2, #68]	; 0x44
 8004ac8:	f026 0203 	bic.w	r2, r6, #3
 8004acc:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 8004ad0:	f502 329c 	add.w	r2, r2, #79872	; 0x13800

        temp = SYSCFG->EXTICR[position >> 2];
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8004ad4:	f006 0e03 	and.w	lr, r6, #3
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();

        temp = SYSCFG->EXTICR[position >> 2];
 8004ad8:	6890      	ldr	r0, [r2, #8]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8004ada:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8004ade:	230f      	movs	r3, #15
 8004ae0:	fa03 f30e 	lsl.w	r3, r3, lr
 8004ae4:	ea20 0003 	bic.w	r0, r0, r3
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8004ae8:	4b2e      	ldr	r3, [pc, #184]	; (8004ba4 <HAL_GPIO_Init+0x24c>)
 8004aea:	429c      	cmp	r4, r3
 8004aec:	d022      	beq.n	8004b34 <HAL_GPIO_Init+0x1dc>
 8004aee:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004af2:	429c      	cmp	r4, r3
 8004af4:	d020      	beq.n	8004b38 <HAL_GPIO_Init+0x1e0>
 8004af6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004afa:	429c      	cmp	r4, r3
 8004afc:	d01e      	beq.n	8004b3c <HAL_GPIO_Init+0x1e4>
 8004afe:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004b02:	429c      	cmp	r4, r3
 8004b04:	d01c      	beq.n	8004b40 <HAL_GPIO_Init+0x1e8>
 8004b06:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004b0a:	429c      	cmp	r4, r3
 8004b0c:	d01a      	beq.n	8004b44 <HAL_GPIO_Init+0x1ec>
 8004b0e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004b12:	429c      	cmp	r4, r3
 8004b14:	d018      	beq.n	8004b48 <HAL_GPIO_Init+0x1f0>
 8004b16:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004b1a:	429c      	cmp	r4, r3
 8004b1c:	d016      	beq.n	8004b4c <HAL_GPIO_Init+0x1f4>
 8004b1e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004b22:	429c      	cmp	r4, r3
 8004b24:	d014      	beq.n	8004b50 <HAL_GPIO_Init+0x1f8>
 8004b26:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004b2a:	429c      	cmp	r4, r3
 8004b2c:	bf0c      	ite	eq
 8004b2e:	2308      	moveq	r3, #8
 8004b30:	2309      	movne	r3, #9
 8004b32:	e00e      	b.n	8004b52 <HAL_GPIO_Init+0x1fa>
 8004b34:	2300      	movs	r3, #0
 8004b36:	e00c      	b.n	8004b52 <HAL_GPIO_Init+0x1fa>
 8004b38:	2301      	movs	r3, #1
 8004b3a:	e00a      	b.n	8004b52 <HAL_GPIO_Init+0x1fa>
 8004b3c:	2302      	movs	r3, #2
 8004b3e:	e008      	b.n	8004b52 <HAL_GPIO_Init+0x1fa>
 8004b40:	2303      	movs	r3, #3
 8004b42:	e006      	b.n	8004b52 <HAL_GPIO_Init+0x1fa>
 8004b44:	2304      	movs	r3, #4
 8004b46:	e004      	b.n	8004b52 <HAL_GPIO_Init+0x1fa>
 8004b48:	2305      	movs	r3, #5
 8004b4a:	e002      	b.n	8004b52 <HAL_GPIO_Init+0x1fa>
 8004b4c:	2306      	movs	r3, #6
 8004b4e:	e000      	b.n	8004b52 <HAL_GPIO_Init+0x1fa>
 8004b50:	2307      	movs	r3, #7
 8004b52:	fa03 f30e 	lsl.w	r3, r3, lr
 8004b56:	4303      	orrs	r3, r0
        SYSCFG->EXTICR[position >> 2] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004b58:	4817      	ldr	r0, [pc, #92]	; (8004bb8 <HAL_GPIO_Init+0x260>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();

        temp = SYSCFG->EXTICR[position >> 2];
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
        SYSCFG->EXTICR[position >> 2] = temp;
 8004b5a:	6093      	str	r3, [r2, #8]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004b5c:	6803      	ldr	r3, [r0, #0]
        temp &= ~((uint32_t)iocurrent);
 8004b5e:	43fa      	mvns	r2, r7
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8004b60:	f411 3f80 	tst.w	r1, #65536	; 0x10000
        {
          temp |= iocurrent;
 8004b64:	bf14      	ite	ne
 8004b66:	433b      	orrne	r3, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
        SYSCFG->EXTICR[position >> 2] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
        temp &= ~((uint32_t)iocurrent);
 8004b68:	4013      	andeq	r3, r2
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
        {
          temp |= iocurrent;
        }
        EXTI->IMR = temp;
 8004b6a:	6003      	str	r3, [r0, #0]

        temp = EXTI->EMR;
 8004b6c:	6843      	ldr	r3, [r0, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8004b6e:	0388      	lsls	r0, r1, #14
        {
          temp |= iocurrent;
        }
        EXTI->EMR = temp;
 8004b70:	4811      	ldr	r0, [pc, #68]	; (8004bb8 <HAL_GPIO_Init+0x260>)

        temp = EXTI->EMR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
        {
          temp |= iocurrent;
 8004b72:	bf4c      	ite	mi
 8004b74:	433b      	orrmi	r3, r7
          temp |= iocurrent;
        }
        EXTI->IMR = temp;

        temp = EXTI->EMR;
        temp &= ~((uint32_t)iocurrent);
 8004b76:	4013      	andpl	r3, r2
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
        {
          temp |= iocurrent;
        }
        EXTI->EMR = temp;
 8004b78:	6043      	str	r3, [r0, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8004b7a:	6883      	ldr	r3, [r0, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8004b7c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
        {
          temp |= iocurrent;
 8004b80:	bf14      	ite	ne
 8004b82:	433b      	orrne	r3, r7
        }
        EXTI->EMR = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
        temp &= ~((uint32_t)iocurrent);
 8004b84:	4013      	andeq	r3, r2
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
        {
          temp |= iocurrent;
        }
        EXTI->RTSR = temp;
 8004b86:	6083      	str	r3, [r0, #8]

        temp = EXTI->FTSR;
 8004b88:	68c3      	ldr	r3, [r0, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8004b8a:	0289      	lsls	r1, r1, #10
          temp |= iocurrent;
        }
        EXTI->RTSR = temp;

        temp = EXTI->FTSR;
        temp &= ~((uint32_t)iocurrent);
 8004b8c:	bf54      	ite	pl
 8004b8e:	ea02 0703 	andpl.w	r7, r2, r3
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
        {
          temp |= iocurrent;
 8004b92:	431f      	orrmi	r7, r3
        }
        EXTI->FTSR = temp;
 8004b94:	4b08      	ldr	r3, [pc, #32]	; (8004bb8 <HAL_GPIO_Init+0x260>)
 8004b96:	60df      	str	r7, [r3, #12]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 8004b98:	3601      	adds	r6, #1
 8004b9a:	2e10      	cmp	r6, #16
 8004b9c:	f47f af30 	bne.w	8004a00 <HAL_GPIO_Init+0xa8>
        }
        EXTI->FTSR = temp;
      }
    }
  }
}
 8004ba0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004ba4:	40020000 	.word	0x40020000
 8004ba8:	0802240b 	.word	0x0802240b
 8004bac:	10110000 	.word	0x10110000
 8004bb0:	10220000 	.word	0x10220000
 8004bb4:	40023800 	.word	0x40023800
 8004bb8:	40013c00 	.word	0x40013c00

08004bbc <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8004bbc:	b570      	push	{r4, r5, r6, lr}
 8004bbe:	4605      	mov	r5, r0
 8004bc0:	4616      	mov	r6, r2
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
 8004bc2:	460c      	mov	r4, r1
 8004bc4:	b921      	cbnz	r1, 8004bd0 <HAL_GPIO_WritePin+0x14>
 8004bc6:	4808      	ldr	r0, [pc, #32]	; (8004be8 <HAL_GPIO_WritePin+0x2c>)
 8004bc8:	f44f 71d6 	mov.w	r1, #428	; 0x1ac
 8004bcc:	f7fc fc8c 	bl	80014e8 <assert_failed>
  assert_param(IS_GPIO_PIN_ACTION(PinState));
 8004bd0:	2e01      	cmp	r6, #1
 8004bd2:	d905      	bls.n	8004be0 <HAL_GPIO_WritePin+0x24>
 8004bd4:	4804      	ldr	r0, [pc, #16]	; (8004be8 <HAL_GPIO_WritePin+0x2c>)
 8004bd6:	f240 11ad 	movw	r1, #429	; 0x1ad
 8004bda:	f7fc fc85 	bl	80014e8 <assert_failed>
 8004bde:	e001      	b.n	8004be4 <HAL_GPIO_WritePin+0x28>

  if(PinState != GPIO_PIN_RESET)
 8004be0:	b906      	cbnz	r6, 8004be4 <HAL_GPIO_WritePin+0x28>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 8004be2:	0424      	lsls	r4, r4, #16
 8004be4:	61ac      	str	r4, [r5, #24]
 8004be6:	bd70      	pop	{r4, r5, r6, pc}
 8004be8:	0802240b 	.word	0x0802240b

08004bec <HAL_GPIO_TogglePin>:
  *                      x can be (A..I) to select the GPIO peripheral for STM32F40XX and STM32F427X devices.
  * @param  GPIO_Pin: Specifies the pins to be toggled.
  * @retval None
  */
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 8004bec:	b538      	push	{r3, r4, r5, lr}
 8004bee:	4604      	mov	r4, r0
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
 8004bf0:	460d      	mov	r5, r1
 8004bf2:	b921      	cbnz	r1, 8004bfe <HAL_GPIO_TogglePin+0x12>
 8004bf4:	4804      	ldr	r0, [pc, #16]	; (8004c08 <HAL_GPIO_TogglePin+0x1c>)
 8004bf6:	f240 11c3 	movw	r1, #451	; 0x1c3
 8004bfa:	f7fc fc75 	bl	80014e8 <assert_failed>

  GPIOx->ODR ^= GPIO_Pin;
 8004bfe:	6961      	ldr	r1, [r4, #20]
 8004c00:	4069      	eors	r1, r5
 8004c02:	6161      	str	r1, [r4, #20]
 8004c04:	bd38      	pop	{r3, r4, r5, pc}
 8004c06:	bf00      	nop
 8004c08:	0802240b 	.word	0x0802240b

08004c0c <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8004c0c:	b510      	push	{r4, lr}
 8004c0e:	4604      	mov	r4, r0
  /*Configure the SysTick to have interrupt in 1ms time basis*/
  HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 8004c10:	f7fd ffec 	bl	8002bec <HAL_RCC_GetHCLKFreq>
 8004c14:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8004c18:	fbb0 f0f3 	udiv	r0, r0, r3
 8004c1c:	f7fe fbde 	bl	80033dc <HAL_SYSTICK_Config>

  /*Configure the SysTick IRQ priority */
  HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority ,0);
 8004c20:	f04f 30ff 	mov.w	r0, #4294967295
 8004c24:	4621      	mov	r1, r4
 8004c26:	2200      	movs	r2, #0
 8004c28:	f7fe fb82 	bl	8003330 <HAL_NVIC_SetPriority>

  /* Return function status */
  return HAL_OK;
}
 8004c2c:	2000      	movs	r0, #0
 8004c2e:	bd10      	pop	{r4, pc}

08004c30 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8004c30:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0)
   __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8004c32:	4b09      	ldr	r3, [pc, #36]	; (8004c58 <HAL_Init+0x28>)
 8004c34:	681a      	ldr	r2, [r3, #0]
 8004c36:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004c3a:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0)
   __HAL_FLASH_DATA_CACHE_ENABLE();
 8004c3c:	681a      	ldr	r2, [r3, #0]
 8004c3e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004c42:	601a      	str	r2, [r3, #0]
#if (PREFETCH_ENABLE != 0)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8004c44:	2003      	movs	r0, #3
 8004c46:	f7fe fb57 	bl	80032f8 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8004c4a:	200f      	movs	r0, #15
 8004c4c:	f7ff ffde 	bl	8004c0c <HAL_InitTick>
  
  /* Init the low level hardware */
  HAL_MspInit();
 8004c50:	f7fc fd86 	bl	8001760 <HAL_MspInit>
  
  /* Return function status */
  return HAL_OK;
}
 8004c54:	2000      	movs	r0, #0
 8004c56:	bd08      	pop	{r3, pc}
 8004c58:	40023c00 	.word	0x40023c00

08004c5c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick++;
 8004c5c:	4a02      	ldr	r2, [pc, #8]	; (8004c68 <HAL_IncTick+0xc>)
 8004c5e:	6813      	ldr	r3, [r2, #0]
 8004c60:	3301      	adds	r3, #1
 8004c62:	6013      	str	r3, [r2, #0]
 8004c64:	4770      	bx	lr
 8004c66:	bf00      	nop
 8004c68:	2000d498 	.word	0x2000d498

08004c6c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8004c6c:	4b01      	ldr	r3, [pc, #4]	; (8004c74 <HAL_GetTick+0x8>)
 8004c6e:	6818      	ldr	r0, [r3, #0]
}
 8004c70:	4770      	bx	lr
 8004c72:	bf00      	nop
 8004c74:	2000d498 	.word	0x2000d498

08004c78 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay: specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(__IO uint32_t Delay)
{
 8004c78:	b513      	push	{r0, r1, r4, lr}
 8004c7a:	9001      	str	r0, [sp, #4]
  uint32_t tickstart = 0;
  tickstart = HAL_GetTick();
 8004c7c:	f7ff fff6 	bl	8004c6c <HAL_GetTick>
 8004c80:	4604      	mov	r4, r0
  while((HAL_GetTick() - tickstart) < Delay)
 8004c82:	f7ff fff3 	bl	8004c6c <HAL_GetTick>
 8004c86:	9b01      	ldr	r3, [sp, #4]
 8004c88:	1b00      	subs	r0, r0, r4
 8004c8a:	4298      	cmp	r0, r3
 8004c8c:	d3f9      	bcc.n	8004c82 <HAL_Delay+0xa>
  {
  }
}
 8004c8e:	b002      	add	sp, #8
 8004c90:	bd10      	pop	{r4, pc}
	...

08004c94 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
 8004c94:	4b01      	ldr	r3, [pc, #4]	; (8004c9c <HAL_GetREVID+0x8>)
 8004c96:	6818      	ldr	r0, [r3, #0]
}
 8004c98:	0c00      	lsrs	r0, r0, #16
 8004c9a:	4770      	bx	lr
 8004c9c:	e0042000 	.word	0xe0042000

08004ca0 <modbus_Setup>:
#include "modbusConfig.h"
/*	private variables-------------------------------*/

/*	public functions--------------------------------*/
// Setup the modbus packets array
void modbus_Setup(){
 8004ca0:	b537      	push	{r0, r1, r2, r4, r5, lr}
	uint16_t polling = 0;
	uint16_t timeout = 1000;
	uint8_t retry_count = 0;
	
	// read 2 registers starting at address 0
	modbus_construct(packet1, 20, READ_HOLDING_REGISTERS, 0, 1, regs);
 8004ca2:	2301      	movs	r3, #1
 8004ca4:	9300      	str	r3, [sp, #0]
 8004ca6:	4d12      	ldr	r5, [pc, #72]	; (8004cf0 <modbus_Setup+0x50>)
 8004ca8:	4b12      	ldr	r3, [pc, #72]	; (8004cf4 <modbus_Setup+0x54>)
 8004caa:	9501      	str	r5, [sp, #4]
 8004cac:	6818      	ldr	r0, [r3, #0]
	// read the 10 registers to the PLC starting at address 2
	modbus_construct(packet2, 20, READ_HOLDING_REGISTERS, 0, 2, regs);
 8004cae:	2402      	movs	r4, #2
	uint16_t polling = 0;
	uint16_t timeout = 1000;
	uint8_t retry_count = 0;
	
	// read 2 registers starting at address 0
	modbus_construct(packet1, 20, READ_HOLDING_REGISTERS, 0, 1, regs);
 8004cb0:	2114      	movs	r1, #20
 8004cb2:	2203      	movs	r2, #3
 8004cb4:	2300      	movs	r3, #0
 8004cb6:	f000 fc33 	bl	8005520 <modbus_construct>
	// read the 10 registers to the PLC starting at address 2
	modbus_construct(packet2, 20, READ_HOLDING_REGISTERS, 0, 2, regs);
 8004cba:	e88d 0030 	stmia.w	sp, {r4, r5}
 8004cbe:	4b0e      	ldr	r3, [pc, #56]	; (8004cf8 <modbus_Setup+0x58>)
 8004cc0:	2114      	movs	r1, #20
 8004cc2:	6818      	ldr	r0, [r3, #0]
 8004cc4:	2203      	movs	r2, #3
 8004cc6:	2300      	movs	r3, #0
 8004cc8:	f000 fc2a 	bl	8005520 <modbus_construct>
	
	modbus_configure(baud, timeout, polling, retry_count, packets, TOTAL_NO_OF_PACKETS);
 8004ccc:	4b0b      	ldr	r3, [pc, #44]	; (8004cfc <modbus_Setup+0x5c>)
 8004cce:	2200      	movs	r2, #0
 8004cd0:	e88d 0018 	stmia.w	sp, {r3, r4}
 8004cd4:	f44f 30e1 	mov.w	r0, #115200	; 0x1c200
 8004cd8:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8004cdc:	4613      	mov	r3, r2
 8004cde:	f000 fbf3 	bl	80054c8 <modbus_configure>
	
	printf("Modbus Up...\n");
 8004ce2:	4807      	ldr	r0, [pc, #28]	; (8004d00 <modbus_Setup+0x60>)
}
 8004ce4:	b003      	add	sp, #12
 8004ce6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	// read the 10 registers to the PLC starting at address 2
	modbus_construct(packet2, 20, READ_HOLDING_REGISTERS, 0, 2, regs);
	
	modbus_configure(baud, timeout, polling, retry_count, packets, TOTAL_NO_OF_PACKETS);
	
	printf("Modbus Up...\n");
 8004cea:	f00e bf2d 	b.w	8013b48 <puts>
 8004cee:	bf00      	nop
 8004cf0:	2000dbb4 	.word	0x2000dbb4
 8004cf4:	20000004 	.word	0x20000004
 8004cf8:	20000008 	.word	0x20000008
 8004cfc:	2000db84 	.word	0x2000db84
 8004d00:	0802245b 	.word	0x0802245b

08004d04 <tft_delay>:
  FSMC_NORSRAMInit(&FSMC_NORSRAMInitStructure);
  // Enable Bank-1 / PSRAM-1
  FSMC_NORSRAMCmd(FSMC_Bank1_NORSRAM1, ENABLE);
}*/

void tft_delay (volatile uint32_t count){
 8004d04:	b082      	sub	sp, #8
 8004d06:	9001      	str	r0, [sp, #4]
	while (count--) {
 8004d08:	9b01      	ldr	r3, [sp, #4]
 8004d0a:	1e5a      	subs	r2, r3, #1
 8004d0c:	9201      	str	r2, [sp, #4]
 8004d0e:	2b00      	cmp	r3, #0
 8004d10:	d1fa      	bne.n	8004d08 <tft_delay+0x4>
	}
}
 8004d12:	b002      	add	sp, #8
 8004d14:	4770      	bx	lr
	...

08004d18 <init_ili9341>:
	LCD_REG = MEMORY_WRITE;
	LCD_DATA = color;
}


void init_ili9341(void) {
 8004d18:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}

	LCD_REG = 0x11;
 8004d1c:	f04f 44c0 	mov.w	r4, #1610612736	; 0x60000000
 8004d20:	2511      	movs	r5, #17
 8004d22:	8025      	strh	r5, [r4, #0]
	tft_delay(50000);
 8004d24:	f24c 3050 	movw	r0, #50000	; 0xc350
 8004d28:	f7ff ffec 	bl	8004d04 <tft_delay>

 	LCD_REG  = 0xCF;
 8004d2c:	23cf      	movs	r3, #207	; 0xcf
 8004d2e:	8023      	strh	r3, [r4, #0]
	LCD_DATA = 0x00;
 8004d30:	4b59      	ldr	r3, [pc, #356]	; (8004e98 <init_ili9341+0x180>)
 8004d32:	2200      	movs	r2, #0
	LCD_DATA = 0xc3;
 8004d34:	21c3      	movs	r1, #195	; 0xc3

	LCD_REG = 0x11;
	tft_delay(50000);

 	LCD_REG  = 0xCF;
	LCD_DATA = 0x00;
 8004d36:	801a      	strh	r2, [r3, #0]
	LCD_DATA = 0xc3;
	LCD_DATA = 0X30;
 8004d38:	f04f 0e30 	mov.w	lr, #48	; 0x30
	LCD_REG = 0x11;
	tft_delay(50000);

 	LCD_REG  = 0xCF;
	LCD_DATA = 0x00;
	LCD_DATA = 0xc3;
 8004d3c:	8019      	strh	r1, [r3, #0]
	LCD_DATA = 0X30;

 	LCD_REG  = 0xED;
 8004d3e:	21ed      	movs	r1, #237	; 0xed
	tft_delay(50000);

 	LCD_REG  = 0xCF;
	LCD_DATA = 0x00;
	LCD_DATA = 0xc3;
	LCD_DATA = 0X30;
 8004d40:	f8a3 e000 	strh.w	lr, [r3]

 	LCD_REG  = 0xED;
 8004d44:	8021      	strh	r1, [r4, #0]
	LCD_DATA = 0x64;
 8004d46:	2164      	movs	r1, #100	; 0x64
 8004d48:	8019      	strh	r1, [r3, #0]
	LCD_DATA = 0x03;
	LCD_DATA = 0X12;
 8004d4a:	2012      	movs	r0, #18
	LCD_DATA = 0xc3;
	LCD_DATA = 0X30;

 	LCD_REG  = 0xED;
	LCD_DATA = 0x64;
	LCD_DATA = 0x03;
 8004d4c:	2103      	movs	r1, #3
 8004d4e:	8019      	strh	r1, [r3, #0]
	LCD_DATA = 0X12;
 8004d50:	8018      	strh	r0, [r3, #0]
	LCD_DATA = 0X81;
 8004d52:	2081      	movs	r0, #129	; 0x81
 8004d54:	8018      	strh	r0, [r3, #0]

 	LCD_REG  = 0xE8;
 8004d56:	20e8      	movs	r0, #232	; 0xe8
 8004d58:	8020      	strh	r0, [r4, #0]
	LCD_DATA = 0x85;
 8004d5a:	2085      	movs	r0, #133	; 0x85
 8004d5c:	8018      	strh	r0, [r3, #0]
	LCD_DATA = 0x10;
 8004d5e:	2610      	movs	r6, #16
	LCD_DATA = 0x79;
 8004d60:	2079      	movs	r0, #121	; 0x79
	LCD_DATA = 0X12;
	LCD_DATA = 0X81;

 	LCD_REG  = 0xE8;
	LCD_DATA = 0x85;
	LCD_DATA = 0x10;
 8004d62:	801e      	strh	r6, [r3, #0]
	LCD_DATA = 0x79;
 8004d64:	8018      	strh	r0, [r3, #0]

 	LCD_REG  = 0xCB;
 8004d66:	20cb      	movs	r0, #203	; 0xcb
 8004d68:	8020      	strh	r0, [r4, #0]
	LCD_DATA = 0x39;
 8004d6a:	2039      	movs	r0, #57	; 0x39
 8004d6c:	8018      	strh	r0, [r3, #0]
	LCD_DATA = 0x2C;
 8004d6e:	f04f 092c 	mov.w	r9, #44	; 0x2c
	LCD_DATA = 0x00;
	LCD_DATA = 0x34;
 8004d72:	2034      	movs	r0, #52	; 0x34
	LCD_DATA = 0x10;
	LCD_DATA = 0x79;

 	LCD_REG  = 0xCB;
	LCD_DATA = 0x39;
	LCD_DATA = 0x2C;
 8004d74:	f8a3 9000 	strh.w	r9, [r3]
	LCD_DATA = 0x00;
 8004d78:	801a      	strh	r2, [r3, #0]
	LCD_DATA = 0x34;
 8004d7a:	8018      	strh	r0, [r3, #0]
	LCD_DATA = 0x02;
 8004d7c:	2002      	movs	r0, #2
 8004d7e:	8018      	strh	r0, [r3, #0]

 	LCD_REG  = 0xF7;
 8004d80:	20f7      	movs	r0, #247	; 0xf7
 8004d82:	8020      	strh	r0, [r4, #0]
	LCD_DATA = 0x20;

 	LCD_REG  = 0xEA;
 8004d84:	27ea      	movs	r7, #234	; 0xea
	LCD_DATA = 0x00;
	LCD_DATA = 0x34;
	LCD_DATA = 0x02;

 	LCD_REG  = 0xF7;
	LCD_DATA = 0x20;
 8004d86:	2020      	movs	r0, #32
 8004d88:	8018      	strh	r0, [r3, #0]

 	LCD_REG  = 0xEA;
 8004d8a:	8027      	strh	r7, [r4, #0]
	LCD_DATA = 0x00;
	LCD_DATA = 0x00;

 	LCD_REG  = 0xC0;    //Power control
 8004d8c:	27c0      	movs	r7, #192	; 0xc0

 	LCD_REG  = 0xF7;
	LCD_DATA = 0x20;

 	LCD_REG  = 0xEA;
	LCD_DATA = 0x00;
 8004d8e:	801a      	strh	r2, [r3, #0]
	LCD_DATA = 0x00;
 8004d90:	801a      	strh	r2, [r3, #0]

 	LCD_REG  = 0xC0;    //Power control
 8004d92:	8027      	strh	r7, [r4, #0]
	LCD_DATA = 0x22;   //VRH[5:0]
 8004d94:	2722      	movs	r7, #34	; 0x22
 8004d96:	801f      	strh	r7, [r3, #0]

 	LCD_REG  = 0xC1;    //Power control
 8004d98:	27c1      	movs	r7, #193	; 0xc1
 8004d9a:	8027      	strh	r7, [r4, #0]
	LCD_DATA = 0x11;   //SAP[2:0];BT[3:0]

 	LCD_REG  = 0xC5;    //VCM control
 8004d9c:	27c5      	movs	r7, #197	; 0xc5

 	LCD_REG  = 0xC0;    //Power control
	LCD_DATA = 0x22;   //VRH[5:0]

 	LCD_REG  = 0xC1;    //Power control
	LCD_DATA = 0x11;   //SAP[2:0];BT[3:0]
 8004d9e:	801d      	strh	r5, [r3, #0]

 	LCD_REG  = 0xC5;    //VCM control
 8004da0:	8027      	strh	r7, [r4, #0]
	LCD_DATA = 0x3d;
 8004da2:	273d      	movs	r7, #61	; 0x3d
 8004da4:	801f      	strh	r7, [r3, #0]
    //LCD_DataWrite_ILI9341(0x30);
	LCD_DATA = 0x20;
 8004da6:	8018      	strh	r0, [r3, #0]

 	LCD_REG = 0xC7;    //VCM control2
 8004da8:	20c7      	movs	r0, #199	; 0xc7
 8004daa:	8020      	strh	r0, [r4, #0]
    //LCD_DataWrite_ILI9341(0xBD);
	LCD_DATA = 0xAA; //0xB0
 8004dac:	20aa      	movs	r0, #170	; 0xaa
 8004dae:	8018      	strh	r0, [r3, #0]

 	LCD_REG  = 0x36;    // Memory Access Control
 8004db0:	2036      	movs	r0, #54	; 0x36
 8004db2:	8020      	strh	r0, [r4, #0]
	LCD_DATA = 0x88;
 8004db4:	2088      	movs	r0, #136	; 0x88
 8004db6:	8018      	strh	r0, [r3, #0]

 	LCD_REG  = 0x3A;
 8004db8:	203a      	movs	r0, #58	; 0x3a
 8004dba:	8020      	strh	r0, [r4, #0]
	LCD_DATA = 0x55;
 8004dbc:	2055      	movs	r0, #85	; 0x55
 8004dbe:	8018      	strh	r0, [r3, #0]

 	LCD_REG  = 0xB1;
 8004dc0:	20b1      	movs	r0, #177	; 0xb1
 8004dc2:	8020      	strh	r0, [r4, #0]
	LCD_DATA = 0x00;
	LCD_DATA = 0x13;
 8004dc4:	f04f 0a13 	mov.w	sl, #19

 	LCD_REG  = 0xB6;    // Display Function Control
 8004dc8:	20b6      	movs	r0, #182	; 0xb6

 	LCD_REG  = 0x3A;
	LCD_DATA = 0x55;

 	LCD_REG  = 0xB1;
	LCD_DATA = 0x00;
 8004dca:	801a      	strh	r2, [r3, #0]
	LCD_DATA = 0x13;

 	LCD_REG  = 0xB6;    // Display Function Control
	LCD_DATA = 0x0A;
 8004dcc:	270a      	movs	r7, #10
 	LCD_REG  = 0x3A;
	LCD_DATA = 0x55;

 	LCD_REG  = 0xB1;
	LCD_DATA = 0x00;
	LCD_DATA = 0x13;
 8004dce:	f8a3 a000 	strh.w	sl, [r3]

 	LCD_REG  = 0xB6;    // Display Function Control
	LCD_DATA = 0x0A;
	LCD_DATA = 0xA2;
 8004dd2:	f04f 08a2 	mov.w	r8, #162	; 0xa2

 	LCD_REG  = 0xB1;
	LCD_DATA = 0x00;
	LCD_DATA = 0x13;

 	LCD_REG  = 0xB6;    // Display Function Control
 8004dd6:	8020      	strh	r0, [r4, #0]
	LCD_DATA = 0x0A;
	LCD_DATA = 0xA2;

 	LCD_REG  = 0xF6;
 8004dd8:	20f6      	movs	r0, #246	; 0xf6
 	LCD_REG  = 0xB1;
	LCD_DATA = 0x00;
	LCD_DATA = 0x13;

 	LCD_REG  = 0xB6;    // Display Function Control
	LCD_DATA = 0x0A;
 8004dda:	801f      	strh	r7, [r3, #0]
	LCD_DATA = 0xA2;
 8004ddc:	f8a3 8000 	strh.w	r8, [r3]

 	LCD_REG  = 0xF6;
 8004de0:	8020      	strh	r0, [r4, #0]
	LCD_DATA = 0x01;
 8004de2:	2001      	movs	r0, #1
 8004de4:	8018      	strh	r0, [r3, #0]
	LCD_DATA = 0x30;
 8004de6:	f8a3 e000 	strh.w	lr, [r3]

 	LCD_REG  = 0xF2;    // 3Gamma Function Disable
 8004dea:	f04f 0ef2 	mov.w	lr, #242	; 0xf2
 8004dee:	f8a4 e000 	strh.w	lr, [r4]
	LCD_DATA = 0x00;

 	LCD_REG  = 0x26;    //Gamma curve selected
 8004df2:	f04f 0e26 	mov.w	lr, #38	; 0x26
 	LCD_REG  = 0xF6;
	LCD_DATA = 0x01;
	LCD_DATA = 0x30;

 	LCD_REG  = 0xF2;    // 3Gamma Function Disable
	LCD_DATA = 0x00;
 8004df6:	801a      	strh	r2, [r3, #0]

 	LCD_REG  = 0x26;    //Gamma curve selected
 8004df8:	f8a4 e000 	strh.w	lr, [r4]
	LCD_DATA = 0x01;
 8004dfc:	8018      	strh	r0, [r3, #0]

 	LCD_REG  = 0xE0;    //Set Gamma
 8004dfe:	20e0      	movs	r0, #224	; 0xe0
 8004e00:	8020      	strh	r0, [r4, #0]
	LCD_DATA = 0x0F;
	LCD_DATA = 0x3F;
 8004e02:	f04f 0c3f 	mov.w	ip, #63	; 0x3f

 	LCD_REG  = 0x26;    //Gamma curve selected
	LCD_DATA = 0x01;

 	LCD_REG  = 0xE0;    //Set Gamma
	LCD_DATA = 0x0F;
 8004e06:	200f      	movs	r0, #15
	LCD_DATA = 0x3F;
	LCD_DATA = 0x2F;
 8004e08:	f04f 0e2f 	mov.w	lr, #47	; 0x2f

 	LCD_REG  = 0x26;    //Gamma curve selected
	LCD_DATA = 0x01;

 	LCD_REG  = 0xE0;    //Set Gamma
	LCD_DATA = 0x0F;
 8004e0c:	8018      	strh	r0, [r3, #0]
	LCD_DATA = 0x3F;
	LCD_DATA = 0x2F;
	LCD_DATA = 0x0C;
	LCD_DATA = 0x10;
	LCD_DATA = 0x0A;
	LCD_DATA = 0x53;
 8004e0e:	f04f 0b53 	mov.w	fp, #83	; 0x53
 	LCD_REG  = 0x26;    //Gamma curve selected
	LCD_DATA = 0x01;

 	LCD_REG  = 0xE0;    //Set Gamma
	LCD_DATA = 0x0F;
	LCD_DATA = 0x3F;
 8004e12:	f8a3 c000 	strh.w	ip, [r3]
	LCD_DATA = 0x2F;
 8004e16:	f8a3 e000 	strh.w	lr, [r3]
	LCD_DATA = 0x0C;
 8004e1a:	f04f 0e0c 	mov.w	lr, #12
 8004e1e:	f8a3 e000 	strh.w	lr, [r3]
	LCD_DATA = 0x10;
 8004e22:	801e      	strh	r6, [r3, #0]
	LCD_DATA = 0x0A;
 8004e24:	801f      	strh	r7, [r3, #0]
	LCD_DATA = 0x53;
 8004e26:	f8a3 b000 	strh.w	fp, [r3]
	LCD_DATA = 0XD5;
 8004e2a:	f04f 0bd5 	mov.w	fp, #213	; 0xd5
 8004e2e:	f8a3 b000 	strh.w	fp, [r3]
	LCD_DATA = 0x40;
 8004e32:	f04f 0b40 	mov.w	fp, #64	; 0x40
 8004e36:	f8a3 b000 	strh.w	fp, [r3]
	LCD_DATA = 0x0A;
 8004e3a:	801f      	strh	r7, [r3, #0]
	LCD_DATA = 0x13;
	LCD_DATA = 0x03;
	LCD_DATA = 0x08;
 8004e3c:	2708      	movs	r7, #8
	LCD_DATA = 0x0A;
	LCD_DATA = 0x53;
	LCD_DATA = 0XD5;
	LCD_DATA = 0x40;
	LCD_DATA = 0x0A;
	LCD_DATA = 0x13;
 8004e3e:	f8a3 a000 	strh.w	sl, [r3]
	LCD_DATA = 0x03;
 8004e42:	8019      	strh	r1, [r3, #0]
	LCD_DATA = 0x08;
 8004e44:	801f      	strh	r7, [r3, #0]
	LCD_DATA = 0x03;
	LCD_DATA = 0x00;

 	LCD_REG  = 0XE1;    //Set Gamma
 8004e46:	27e1      	movs	r7, #225	; 0xe1
	LCD_DATA = 0x40;
	LCD_DATA = 0x0A;
	LCD_DATA = 0x13;
	LCD_DATA = 0x03;
	LCD_DATA = 0x08;
	LCD_DATA = 0x03;
 8004e48:	8019      	strh	r1, [r3, #0]
	LCD_DATA = 0x00;
 8004e4a:	801a      	strh	r2, [r3, #0]

 	LCD_REG  = 0XE1;    //Set Gamma
 8004e4c:	8027      	strh	r7, [r4, #0]
	LCD_DATA = 0x00;
 8004e4e:	801a      	strh	r2, [r3, #0]
	LCD_DATA = 0x00;
 8004e50:	801a      	strh	r2, [r3, #0]
	LCD_DATA = 0x10;
	LCD_DATA = 0x03;
	LCD_DATA = 0x0F;
	LCD_DATA = 0x05;
 8004e52:	2205      	movs	r2, #5
	LCD_DATA = 0x00;

 	LCD_REG  = 0XE1;    //Set Gamma
	LCD_DATA = 0x00;
	LCD_DATA = 0x00;
	LCD_DATA = 0x10;
 8004e54:	801e      	strh	r6, [r3, #0]
	LCD_DATA = 0x03;
 8004e56:	8019      	strh	r1, [r3, #0]
	LCD_DATA = 0x0F;
 8004e58:	8018      	strh	r0, [r3, #0]
	LCD_DATA = 0x05;
 8004e5a:	801a      	strh	r2, [r3, #0]
	LCD_DATA = 0x2C;
 8004e5c:	f8a3 9000 	strh.w	r9, [r3]
	LCD_DATA = 0xA2;
 8004e60:	f8a3 8000 	strh.w	r8, [r3]
	LCD_DATA = 0x3F;
 8004e64:	f8a3 c000 	strh.w	ip, [r3]
	LCD_DATA = 0x05;
 8004e68:	801a      	strh	r2, [r3, #0]
	LCD_DATA = 0x0E;
 8004e6a:	220e      	movs	r2, #14
 8004e6c:	801a      	strh	r2, [r3, #0]
	LCD_DATA = 0x0C;
	LCD_DATA = 0x37;
 8004e6e:	2237      	movs	r2, #55	; 0x37
	LCD_DATA = 0x2C;
	LCD_DATA = 0xA2;
	LCD_DATA = 0x3F;
	LCD_DATA = 0x05;
	LCD_DATA = 0x0E;
	LCD_DATA = 0x0C;
 8004e70:	f8a3 e000 	strh.w	lr, [r3]
	LCD_DATA = 0x37;
 8004e74:	801a      	strh	r2, [r3, #0]
	LCD_DATA = 0x3C;
 8004e76:	223c      	movs	r2, #60	; 0x3c
 8004e78:	801a      	strh	r2, [r3, #0]
	LCD_DATA = 0x0F;
 8004e7a:	8018      	strh	r0, [r3, #0]

	LCD_REG  = 0x11;    //Exit Sleep
 8004e7c:	8025      	strh	r5, [r4, #0]
	tft_delay(50000);
 8004e7e:	f24c 3050 	movw	r0, #50000	; 0xc350
 8004e82:	f7ff ff3f 	bl	8004d04 <tft_delay>
 	LCD_REG  = 0x29;    //Display on
 8004e86:	2329      	movs	r3, #41	; 0x29
 8004e88:	8023      	strh	r3, [r4, #0]
	tft_delay(50000);
 8004e8a:	f24c 3050 	movw	r0, #50000	; 0xc350

	LCD_REG = MEMORY_WRITE;
	*/


}
 8004e8e:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	LCD_DATA = 0x0F;

	LCD_REG  = 0x11;    //Exit Sleep
	tft_delay(50000);
 	LCD_REG  = 0x29;    //Display on
	tft_delay(50000);
 8004e92:	f7ff bf37 	b.w	8004d04 <tft_delay>
 8004e96:	bf00      	nop
 8004e98:	60020000 	.word	0x60020000

08004e9c <FT6206_write_register>:

static uint8_t FT6206_write_register(uint8_t reg, uint8_t data){
	uint8_t return_val = 0;
	
	
	aTxBuffer_I2C[0] = reg;
 8004e9c:	4b0c      	ldr	r3, [pc, #48]	; (8004ed0 <FT6206_write_register+0x34>)
	return_val = aRxBuffer_I2C[0];
	
	return return_val;
}

static uint8_t FT6206_write_register(uint8_t reg, uint8_t data){
 8004e9e:	b507      	push	{r0, r1, r2, lr}
	uint8_t return_val = 0;
	
	
	aTxBuffer_I2C[0] = reg;
 8004ea0:	7018      	strb	r0, [r3, #0]
	aTxBuffer_I2C[1] = data;
 8004ea2:	7059      	strb	r1, [r3, #1]
	/*	REady to transmit?	*/
	while(HAL_I2C_GetState(&I2cHandle) != HAL_I2C_STATE_READY);
 8004ea4:	480b      	ldr	r0, [pc, #44]	; (8004ed4 <FT6206_write_register+0x38>)
 8004ea6:	f7fe fa23 	bl	80032f0 <HAL_I2C_GetState>
 8004eaa:	2801      	cmp	r0, #1
 8004eac:	d1fa      	bne.n	8004ea4 <FT6206_write_register+0x8>
	/* transmit data through "aTxBuffer" buffer */
	if(HAL_I2C_Master_Transmit(&I2cHandle, (uint8_t)FT6206_ADDR<<1, (uint8_t*)aTxBuffer_I2C, TXBUFFERSIZEI2C, 1000)!= HAL_OK){
 8004eae:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8004eb2:	9300      	str	r3, [sp, #0]
 8004eb4:	4807      	ldr	r0, [pc, #28]	; (8004ed4 <FT6206_write_register+0x38>)
 8004eb6:	4a06      	ldr	r2, [pc, #24]	; (8004ed0 <FT6206_write_register+0x34>)
 8004eb8:	2170      	movs	r1, #112	; 0x70
 8004eba:	2302      	movs	r3, #2
 8004ebc:	f7fe f8d4 	bl	8003068 <HAL_I2C_Master_Transmit>
 8004ec0:	b110      	cbz	r0, 8004ec8 <FT6206_write_register+0x2c>
		/* Error_Handler() function is called when Timeout error occurs.
		When Acknowledge failure occurs (Slave don't acknowledge it's address)
		Master restarts communication */
		printf("Error\n");
 8004ec2:	4805      	ldr	r0, [pc, #20]	; (8004ed8 <FT6206_write_register+0x3c>)
 8004ec4:	f00e fe40 	bl	8013b48 <puts>
	}
	
	return return_val;
}
 8004ec8:	2000      	movs	r0, #0
 8004eca:	b003      	add	sp, #12
 8004ecc:	f85d fb04 	ldr.w	pc, [sp], #4
 8004ed0:	2000dd62 	.word	0x2000dd62
 8004ed4:	2000daf0 	.word	0x2000daf0
 8004ed8:	08022512 	.word	0x08022512

08004edc <FT6206_read_register>:


static uint8_t FT6206_read_register(uint8_t reg){
	uint8_t return_val = 0;
	
	aTxBuffer_I2C[0] = reg;
 8004edc:	4b1a      	ldr	r3, [pc, #104]	; (8004f48 <FT6206_read_register+0x6c>)
static uint8_t FT6206_read_register(uint8_t reg);
static uint8_t FT6206_write_register(uint8_t reg, uint8_t data);



static uint8_t FT6206_read_register(uint8_t reg){
 8004ede:	b507      	push	{r0, r1, r2, lr}
	uint8_t return_val = 0;
	
	aTxBuffer_I2C[0] = reg;
 8004ee0:	7018      	strb	r0, [r3, #0]
	/*	REady to transmit?	*/
	while(HAL_I2C_GetState(&I2cHandle) != HAL_I2C_STATE_READY);
 8004ee2:	481a      	ldr	r0, [pc, #104]	; (8004f4c <FT6206_read_register+0x70>)
 8004ee4:	f7fe fa04 	bl	80032f0 <HAL_I2C_GetState>
 8004ee8:	2801      	cmp	r0, #1
 8004eea:	4603      	mov	r3, r0
 8004eec:	d1f9      	bne.n	8004ee2 <FT6206_read_register+0x6>
	/* transmit data through "aTxBuffer" buffer */
	if(HAL_I2C_Master_Transmit(&I2cHandle, (uint8_t)FT6206_ADDR<<1, (uint8_t*)aTxBuffer_I2C, (TXBUFFERSIZEI2C -1), 1000)!= HAL_OK){
 8004eee:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8004ef2:	9200      	str	r2, [sp, #0]
 8004ef4:	4815      	ldr	r0, [pc, #84]	; (8004f4c <FT6206_read_register+0x70>)
 8004ef6:	4a14      	ldr	r2, [pc, #80]	; (8004f48 <FT6206_read_register+0x6c>)
 8004ef8:	2170      	movs	r1, #112	; 0x70
 8004efa:	f7fe f8b5 	bl	8003068 <HAL_I2C_Master_Transmit>
 8004efe:	b138      	cbz	r0, 8004f10 <FT6206_read_register+0x34>
		/* Error_Handler() function is called when Timeout error occurs.
		When Acknowledge failure occurs (Slave don't acknowledge it's address)
		Master restarts communication */
		HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_12);
 8004f00:	4813      	ldr	r0, [pc, #76]	; (8004f50 <FT6206_read_register+0x74>)
 8004f02:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8004f06:	f7ff fe71 	bl	8004bec <HAL_GPIO_TogglePin>
		printf("Error\n");
 8004f0a:	4812      	ldr	r0, [pc, #72]	; (8004f54 <FT6206_read_register+0x78>)
 8004f0c:	f00e fe1c 	bl	8013b48 <puts>
	}
	
	/*	Wait till end of transmit	*/
	while(HAL_I2C_GetState(&I2cHandle) != HAL_I2C_STATE_READY);
 8004f10:	480e      	ldr	r0, [pc, #56]	; (8004f4c <FT6206_read_register+0x70>)
 8004f12:	f7fe f9ed 	bl	80032f0 <HAL_I2C_GetState>
 8004f16:	2801      	cmp	r0, #1
 8004f18:	4603      	mov	r3, r0
 8004f1a:	d1f9      	bne.n	8004f10 <FT6206_read_register+0x34>
	/* recept data through "aRxBuffer" buffer */
	if(HAL_I2C_Master_Receive(&I2cHandle, (uint8_t)FT6206_ADDR<<1, (uint8_t *)aRxBuffer_I2C, (RXBUFFERSIZEI2C -1), 1000) != HAL_OK){
 8004f1c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8004f20:	9200      	str	r2, [sp, #0]
 8004f22:	480a      	ldr	r0, [pc, #40]	; (8004f4c <FT6206_read_register+0x70>)
 8004f24:	4a0c      	ldr	r2, [pc, #48]	; (8004f58 <FT6206_read_register+0x7c>)
 8004f26:	2170      	movs	r1, #112	; 0x70
 8004f28:	f7fe f910 	bl	800314c <HAL_I2C_Master_Receive>
 8004f2c:	b138      	cbz	r0, 8004f3e <FT6206_read_register+0x62>
		/* Error_Handler() function is called when Timeout error occurs.
		When Acknowledge failure occurs (Slave don't acknowledge it's address)
		Master restarts communication */
		HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_12);
 8004f2e:	4808      	ldr	r0, [pc, #32]	; (8004f50 <FT6206_read_register+0x74>)
 8004f30:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8004f34:	f7ff fe5a 	bl	8004bec <HAL_GPIO_TogglePin>
		printf("Error\n");
 8004f38:	4806      	ldr	r0, [pc, #24]	; (8004f54 <FT6206_read_register+0x78>)
 8004f3a:	f00e fe05 	bl	8013b48 <puts>
	}
	
	return_val = aRxBuffer_I2C[0];
	
	return return_val;
}
 8004f3e:	4b06      	ldr	r3, [pc, #24]	; (8004f58 <FT6206_read_register+0x7c>)
 8004f40:	7818      	ldrb	r0, [r3, #0]
 8004f42:	b003      	add	sp, #12
 8004f44:	f85d fb04 	ldr.w	pc, [sp], #4
 8004f48:	2000dd62 	.word	0x2000dd62
 8004f4c:	2000daf0 	.word	0x2000daf0
 8004f50:	40020c00 	.word	0x40020c00
 8004f54:	08022512 	.word	0x08022512
 8004f58:	2000dd44 	.word	0x2000dd44

08004f5c <FT6206_begin>:
	
	return return_val;
}


uint8_t FT6206_begin(uint8_t threshold){
 8004f5c:	b538      	push	{r3, r4, r5, lr}
	//  0...255 last byte value read
	uint8_t x = 0;
	
	/*Reset pin 5 msec. low */
	HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_3);
 8004f5e:	4c20      	ldr	r4, [pc, #128]	; (8004fe0 <FT6206_begin+0x84>)
	
	return return_val;
}


uint8_t FT6206_begin(uint8_t threshold){
 8004f60:	4605      	mov	r5, r0
	//  0...255 last byte value read
	uint8_t x = 0;
	
	/*Reset pin 5 msec. low */
	HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_3);
 8004f62:	2108      	movs	r1, #8
 8004f64:	4620      	mov	r0, r4
 8004f66:	f7ff fe41 	bl	8004bec <HAL_GPIO_TogglePin>
	delay_msec(5);
 8004f6a:	2005      	movs	r0, #5
 8004f6c:	f7fc f934 	bl	80011d8 <delay_msec>
	HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_3);
 8004f70:	4620      	mov	r0, r4
 8004f72:	2108      	movs	r1, #8
 8004f74:	f7ff fe3a 	bl	8004bec <HAL_GPIO_TogglePin>
	
	// change threshold to be higher/lower
	FT6206_write_register((uint8_t)FT6206_REG_THRESHOLD, threshold);
 8004f78:	4629      	mov	r1, r5
 8004f7a:	2080      	movs	r0, #128	; 0x80
 8004f7c:	f7ff ff8e 	bl	8004e9c <FT6206_write_register>
	
	FT6206_write_register((uint8_t)FT6206_REG_G_MODE, FT6206_INT_POLLING_MODE);
 8004f80:	2100      	movs	r1, #0
 8004f82:	20a4      	movs	r0, #164	; 0xa4
 8004f84:	f7ff ff8a 	bl	8004e9c <FT6206_write_register>
	
	// fill structure
	FT6206.vendor_id = FT6206_read_register((uint8_t)FT6206_REG_VENDID);
 8004f88:	20a8      	movs	r0, #168	; 0xa8
 8004f8a:	f7ff ffa7 	bl	8004edc <FT6206_read_register>
 8004f8e:	4c15      	ldr	r4, [pc, #84]	; (8004fe4 <FT6206_begin+0x88>)
 8004f90:	75a0      	strb	r0, [r4, #22]
	FT6206.chip_id = FT6206_read_register((uint8_t)FT6206_REG_CHIPID);
 8004f92:	20a3      	movs	r0, #163	; 0xa3
 8004f94:	f7ff ffa2 	bl	8004edc <FT6206_read_register>
 8004f98:	75e0      	strb	r0, [r4, #23]
	FT6206.firmware_version = FT6206_read_register((uint8_t)FT6206_REG_FIRMVERS);
 8004f9a:	20a6      	movs	r0, #166	; 0xa6
 8004f9c:	f7ff ff9e 	bl	8004edc <FT6206_read_register>
 8004fa0:	7620      	strb	r0, [r4, #24]
	FT6206.pointrate = FT6206_read_register((uint8_t)FT6206_REG_POINTRATE);
 8004fa2:	2088      	movs	r0, #136	; 0x88
 8004fa4:	f7ff ff9a 	bl	8004edc <FT6206_read_register>
 8004fa8:	7660      	strb	r0, [r4, #25]
	FT6206.threshold = FT6206_read_register((uint8_t)FT6206_REG_THRESHOLD);
 8004faa:	2080      	movs	r0, #128	; 0x80
 8004fac:	f7ff ff96 	bl	8004edc <FT6206_read_register>

	  printf("Vendor ID       : %6d\n", FT6206.vendor_id);
 8004fb0:	7da1      	ldrb	r1, [r4, #22]
	// fill structure
	FT6206.vendor_id = FT6206_read_register((uint8_t)FT6206_REG_VENDID);
	FT6206.chip_id = FT6206_read_register((uint8_t)FT6206_REG_CHIPID);
	FT6206.firmware_version = FT6206_read_register((uint8_t)FT6206_REG_FIRMVERS);
	FT6206.pointrate = FT6206_read_register((uint8_t)FT6206_REG_POINTRATE);
	FT6206.threshold = FT6206_read_register((uint8_t)FT6206_REG_THRESHOLD);
 8004fb2:	76a0      	strb	r0, [r4, #26]

	  printf("Vendor ID       : %6d\n", FT6206.vendor_id);
 8004fb4:	480c      	ldr	r0, [pc, #48]	; (8004fe8 <FT6206_begin+0x8c>)
 8004fb6:	f00e fd85 	bl	8013ac4 <printf>
	  printf("Chip ID         : %6d\n", FT6206.chip_id);
 8004fba:	7de1      	ldrb	r1, [r4, #23]
 8004fbc:	480b      	ldr	r0, [pc, #44]	; (8004fec <FT6206_begin+0x90>)
 8004fbe:	f00e fd81 	bl	8013ac4 <printf>
	  printf("Firmware version: %6d\n", FT6206.firmware_version);
 8004fc2:	7e21      	ldrb	r1, [r4, #24]
 8004fc4:	480a      	ldr	r0, [pc, #40]	; (8004ff0 <FT6206_begin+0x94>)
 8004fc6:	f00e fd7d 	bl	8013ac4 <printf>
	  printf("Pointrate       : %6d\n", FT6206.pointrate);
 8004fca:	7e61      	ldrb	r1, [r4, #25]
 8004fcc:	4809      	ldr	r0, [pc, #36]	; (8004ff4 <FT6206_begin+0x98>)
 8004fce:	f00e fd79 	bl	8013ac4 <printf>
	  printf("Threshold       : %6d\n", FT6206.threshold);
 8004fd2:	7ea1      	ldrb	r1, [r4, #26]
 8004fd4:	4808      	ldr	r0, [pc, #32]	; (8004ff8 <FT6206_begin+0x9c>)
 8004fd6:	f00e fd75 	bl	8013ac4 <printf>

  return x;
}
 8004fda:	2000      	movs	r0, #0
 8004fdc:	bd38      	pop	{r3, r4, r5, pc}
 8004fde:	bf00      	nop
 8004fe0:	40020800 	.word	0x40020800
 8004fe4:	2000dd46 	.word	0x2000dd46
 8004fe8:	08022468 	.word	0x08022468
 8004fec:	0802247f 	.word	0x0802247f
 8004ff0:	08022496 	.word	0x08022496
 8004ff4:	080224ad 	.word	0x080224ad
 8004ff8:	080224c4 	.word	0x080224c4

08004ffc <FT6206_read_data>:
	else{
		return 0;
	}
}

void FT6206_read_data(void){
 8004ffc:	b530      	push	{r4, r5, lr}
 8004ffe:	b085      	sub	sp, #20
 8005000:	f10d 0501 	add.w	r5, sp, #1
	// array to hold values
  uint8_t raw_tp_data[16];		// array to hold packed info
  uint8_t i;
  uint8_t x;
  
  for (i=2; i<7; i++){
 8005004:	2402      	movs	r4, #2
	  x = FT6206_read_register(i);
 8005006:	4620      	mov	r0, r4
 8005008:	f7ff ff68 	bl	8004edc <FT6206_read_register>
	// array to hold values
  uint8_t raw_tp_data[16];		// array to hold packed info
  uint8_t i;
  uint8_t x;
  
  for (i=2; i<7; i++){
 800500c:	3401      	adds	r4, #1
 800500e:	b2e4      	uxtb	r4, r4
 8005010:	2c07      	cmp	r4, #7
	  x = FT6206_read_register(i);
  	  raw_tp_data[i] = x;
 8005012:	f805 0f01 	strb.w	r0, [r5, #1]!
	// array to hold values
  uint8_t raw_tp_data[16];		// array to hold packed info
  uint8_t i;
  uint8_t x;
  
  for (i=2; i<7; i++){
 8005016:	d1f6      	bne.n	8005006 <FT6206_read_data+0xa>
  	  raw_tp_data[i] = x;
  }

  //FT6206.gesture_id = raw_tp_data[1];

  FT6206.touch_points = raw_tp_data[2];
 8005018:	f89d 2002 	ldrb.w	r2, [sp, #2]
 800501c:	4b11      	ldr	r3, [pc, #68]	; (8005064 <FT6206_read_data+0x68>)
 800501e:	705a      	strb	r2, [r3, #1]
  	FT6206.touch_02_ypos = 0;
  	FT6206.touch_02_weight = 0;
  	FT6206.touch_02_area = 0;
  	return;
  }
  if(FT6206.touch_points == 0){	// error! only 0/1/2 are valid
 8005020:	3a01      	subs	r2, #1
 8005022:	2a01      	cmp	r2, #1
 8005024:	d90a      	bls.n	800503c <FT6206_read_data+0x40>
  //FT6206.gesture_id = raw_tp_data[1];

  FT6206.touch_points = raw_tp_data[2];

  if(FT6206.touch_points > 2){	// error! only 0/1/2 are valid
  	FT6206.touch_points = 0;
 8005026:	2200      	movs	r2, #0
 8005028:	705a      	strb	r2, [r3, #1]
  	FT6206.touch_01_xpos = 0;
 800502a:	809a      	strh	r2, [r3, #4]
  	FT6206.touch_01_ypos = 0;
 800502c:	811a      	strh	r2, [r3, #8]
  	FT6206.touch_01_weight = 0;
 800502e:	729a      	strb	r2, [r3, #10]
  	FT6206.touch_01_area = 0;
 8005030:	72da      	strb	r2, [r3, #11]
  	FT6206.touch_02_xpos = 0;
 8005032:	81da      	strh	r2, [r3, #14]
  	FT6206.touch_02_ypos = 0;
 8005034:	825a      	strh	r2, [r3, #18]
  	FT6206.touch_02_weight = 0;
 8005036:	751a      	strb	r2, [r3, #20]
  	FT6206.touch_02_area = 0;
 8005038:	755a      	strb	r2, [r3, #21]
 800503a:	e011      	b.n	8005060 <FT6206_read_data+0x64>
  	FT6206.touch_02_weight = 0;
  	FT6206.touch_02_area = 0;
    return;
  }

  FT6206.touch_01_xpos = ((raw_tp_data[3]) & 0x0F);	// Mask low nibble of byte
 800503c:	f89d 2003 	ldrb.w	r2, [sp, #3]
 8005040:	f002 010f 	and.w	r1, r2, #15
  FT6206.touch_01_xpos <<= 8;					// left shift 8
  FT6206.touch_01_xpos |= raw_tp_data[4];		// OR with reg(0x04)
 8005044:	f89d 2004 	ldrb.w	r2, [sp, #4]
 8005048:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800504c:	809a      	strh	r2, [r3, #4]
  
  //FT6206.touch_01_event = ((raw_tp_data[3]) >> 4) & 0b11;	//0b00->PressDown 0b01->LiftUp

  FT6206.touch_01_ypos = ((raw_tp_data[5]) & 0x0F);	// Mask low nibble of byte
 800504e:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8005052:	f002 010f 	and.w	r1, r2, #15
  FT6206.touch_01_ypos <<= 8;					// left shift 8
  FT6206.touch_01_ypos |= raw_tp_data[6];		// OR with reg(0x06)
 8005056:	f89d 2006 	ldrb.w	r2, [sp, #6]
 800505a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800505e:	811a      	strh	r2, [r3, #8]
  //FT6206.touch_02_ypos |= raw_tp_data[12];			// OR with reg(0x04)

  //FT6206.touch_02_id |= (raw_tp_data[11] >> 4);
 	//FT6206.touch_02_weight = raw_tp_data[13];
 	//FT6206.touch_02_area = raw_tp_data[14];
}
 8005060:	b005      	add	sp, #20
 8005062:	bd30      	pop	{r4, r5, pc}
 8005064:	2000dd46 	.word	0x2000dd46

08005068 <_ZL12calculateCRCh>:
  * @brief  calculate the crc
  * @param  uint8_t: bufferSize. 
  * @note
  * @retval uint16_t: temp
  */
static uint16_t calculateCRC(uint8_t bufferSize){
 8005068:	b510      	push	{r4, lr}
  uint16_t temp, temp2, flag;
  temp = 0xFFFF;
  for (uint8_t i = 0; i < bufferSize; i++)
 800506a:	2100      	movs	r1, #0
  * @note
  * @retval uint16_t: temp
  */
static uint16_t calculateCRC(uint8_t bufferSize){
  uint16_t temp, temp2, flag;
  temp = 0xFFFF;
 800506c:	f64f 73ff 	movw	r3, #65535	; 0xffff
  for (uint8_t i = 0; i < bufferSize; i++)
 8005070:	b2ca      	uxtb	r2, r1
 8005072:	4282      	cmp	r2, r0
 8005074:	d212      	bcs.n	800509c <_ZL12calculateCRCh+0x34>
  {
    temp = temp ^ frame[i];
 8005076:	4a0c      	ldr	r2, [pc, #48]	; (80050a8 <_ZL12calculateCRCh+0x40>)
 8005078:	5c8a      	ldrb	r2, [r1, r2]
 800507a:	4053      	eors	r3, r2
 800507c:	2208      	movs	r2, #8
    for (uint8_t j = 1; j <= 8; j++)
    {
      flag = temp & 0x0001;
 800507e:	f003 0401 	and.w	r4, r3, #1
      temp >>= 1;
 8005082:	085b      	lsrs	r3, r3, #1
      if (flag)
 8005084:	b124      	cbz	r4, 8005090 <_ZL12calculateCRCh+0x28>
        temp ^= 0xA001;
 8005086:	f483 4320 	eor.w	r3, r3, #40960	; 0xa000
 800508a:	f083 0301 	eor.w	r3, r3, #1
 800508e:	b29b      	uxth	r3, r3
 8005090:	3a01      	subs	r2, #1
  uint16_t temp, temp2, flag;
  temp = 0xFFFF;
  for (uint8_t i = 0; i < bufferSize; i++)
  {
    temp = temp ^ frame[i];
    for (uint8_t j = 1; j <= 8; j++)
 8005092:	f012 02ff 	ands.w	r2, r2, #255	; 0xff
 8005096:	d1f2      	bne.n	800507e <_ZL12calculateCRCh+0x16>
 8005098:	3101      	adds	r1, #1
 800509a:	e7e9      	b.n	8005070 <_ZL12calculateCRCh+0x8>
 800509c:	0a18      	lsrs	r0, r3, #8
 800509e:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
  temp = (temp << 8) | temp2;
  temp &= 0xFFFF;
  // the returned value is already swapped
  // crcLo byte is first & crcHi byte is last
  return temp; 
}
 80050a2:	b280      	uxth	r0, r0
 80050a4:	bd10      	pop	{r4, pc}
 80050a6:	bf00      	nop
 80050a8:	2000d49e 	.word	0x2000d49e

080050ac <_ZL14processSuccessv>:
	state = WAITING_FOR_TURNAROUND;
	delayStart = timeout_timer(); // start the turnaround delay
}

void processSuccess()
{
 80050ac:	b508      	push	{r3, lr}
	packet->successful_requests++; // transaction sent successfully
 80050ae:	4b07      	ldr	r3, [pc, #28]	; (80050cc <_ZL14processSuccessv+0x20>)
 80050b0:	681b      	ldr	r3, [r3, #0]
 80050b2:	89da      	ldrh	r2, [r3, #14]
 80050b4:	3201      	adds	r2, #1
 80050b6:	81da      	strh	r2, [r3, #14]
	packet->retries = 0; // if a request was successful reset the retry counter
 80050b8:	2200      	movs	r2, #0
 80050ba:	829a      	strh	r2, [r3, #20]
	state = WAITING_FOR_TURNAROUND;
 80050bc:	4b04      	ldr	r3, [pc, #16]	; (80050d0 <_ZL14processSuccessv+0x24>)
 80050be:	2203      	movs	r2, #3
 80050c0:	701a      	strb	r2, [r3, #0]
	delayStart = timeout_timer(); // start the turnaround delay
 80050c2:	f7fc f893 	bl	80011ec <timeout_timer>
 80050c6:	4b03      	ldr	r3, [pc, #12]	; (80050d4 <_ZL14processSuccessv+0x28>)
 80050c8:	6018      	str	r0, [r3, #0]
 80050ca:	bd08      	pop	{r3, pc}
 80050cc:	2000d7b0 	.word	0x2000d7b0
 80050d0:	2000d7b4 	.word	0x2000d7b4
 80050d4:	2000d6a4 	.word	0x2000d6a4

080050d8 <_ZL12processErrorv>:
  else
    processError();
}

void processError()
{
 80050d8:	b508      	push	{r3, lr}
	packet->retries++;
 80050da:	4b0c      	ldr	r3, [pc, #48]	; (800510c <_ZL12processErrorv+0x34>)
 80050dc:	681b      	ldr	r3, [r3, #0]
	packet->failed_requests++;
 80050de:	8a19      	ldrh	r1, [r3, #16]
    processError();
}

void processError()
{
	packet->retries++;
 80050e0:	8a9a      	ldrh	r2, [r3, #20]
	packet->failed_requests++;
 80050e2:	3101      	adds	r1, #1
 80050e4:	8219      	strh	r1, [r3, #16]
	
	// if the number of retries have reached the max number of retries 
	// allowable, stop requesting the specific packet
	if (packet->retries == retry_count){
 80050e6:	490a      	ldr	r1, [pc, #40]	; (8005110 <_ZL12processErrorv+0x38>)
    processError();
}

void processError()
{
	packet->retries++;
 80050e8:	3201      	adds	r2, #1
	packet->failed_requests++;
	
	// if the number of retries have reached the max number of retries 
	// allowable, stop requesting the specific packet
	if (packet->retries == retry_count){
 80050ea:	7809      	ldrb	r1, [r1, #0]
    processError();
}

void processError()
{
	packet->retries++;
 80050ec:	b292      	uxth	r2, r2
	packet->failed_requests++;
	
	// if the number of retries have reached the max number of retries 
	// allowable, stop requesting the specific packet
	if (packet->retries == retry_count){
 80050ee:	4291      	cmp	r1, r2
    processError();
}

void processError()
{
	packet->retries++;
 80050f0:	829a      	strh	r2, [r3, #20]
	packet->failed_requests++;
	
	// if the number of retries have reached the max number of retries 
	// allowable, stop requesting the specific packet
	if (packet->retries == retry_count){
		packet->connection = 0;
 80050f2:	bf02      	ittt	eq
 80050f4:	2200      	moveq	r2, #0
 80050f6:	759a      	strbeq	r2, [r3, #22]
		packet->retries = 0;
 80050f8:	829a      	strheq	r2, [r3, #20]
	}
	state = WAITING_FOR_TURNAROUND;
 80050fa:	4b06      	ldr	r3, [pc, #24]	; (8005114 <_ZL12processErrorv+0x3c>)
 80050fc:	2203      	movs	r2, #3
 80050fe:	701a      	strb	r2, [r3, #0]
	delayStart = timeout_timer(); // start the turnaround delay
 8005100:	f7fc f874 	bl	80011ec <timeout_timer>
 8005104:	4b04      	ldr	r3, [pc, #16]	; (8005118 <_ZL12processErrorv+0x40>)
 8005106:	6018      	str	r0, [r3, #0]
 8005108:	bd08      	pop	{r3, pc}
 800510a:	bf00      	nop
 800510c:	2000d7b0 	.word	0x2000d7b0
 8005110:	2000d59e 	.word	0x2000d59e
 8005114:	2000d7b4 	.word	0x2000d7b4
 8005118:	2000d6a4 	.word	0x2000d6a4

0800511c <modbus_update>:
  * @brief  update the state machine
  * @param  none 
  * @note   3 states: idle, waiting reply, waiting turnaround
  * @retval None
  */
void modbus_update(){
 800511c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	//std::printf("state: %d\n", state);
	switch (state)
 8005120:	4cac      	ldr	r4, [pc, #688]	; (80053d4 <modbus_update+0x2b8>)
 8005122:	7823      	ldrb	r3, [r4, #0]
 8005124:	2b02      	cmp	r3, #2
 8005126:	4625      	mov	r5, r4
 8005128:	f000 80c3 	beq.w	80052b2 <modbus_update+0x196>
 800512c:	2b03      	cmp	r3, #3
 800512e:	f000 80cc 	beq.w	80052ca <modbus_update+0x1ae>
 8005132:	2b01      	cmp	r3, #1
 8005134:	f040 81ba 	bne.w	80054ac <modbus_update+0x390>
	uint16_t failed_connections = 0;
	uint8_t current_connection;
	
	do
	{		
		if (packet_index == total_no_of_packets) // wrap around to the beginning
 8005138:	4ba7      	ldr	r3, [pc, #668]	; (80053d8 <modbus_update+0x2bc>)
 800513a:	49a8      	ldr	r1, [pc, #672]	; (80053dc <modbus_update+0x2c0>)
 800513c:	881e      	ldrh	r6, [r3, #0]
			packet_index = 0;
				
		// proceed to the next packet
		packet = &packetArray[packet_index];
 800513e:	4ba8      	ldr	r3, [pc, #672]	; (80053e0 <modbus_update+0x2c4>)
 8005140:	681f      	ldr	r7, [r3, #0]
 8005142:	880b      	ldrh	r3, [r1, #0]
 8005144:	2000      	movs	r0, #0
	uint8_t current_connection;
	
	do
	{		
		if (packet_index == total_no_of_packets) // wrap around to the beginning
			packet_index = 0;
 8005146:	42b3      	cmp	r3, r6
 8005148:	bf08      	it	eq
 800514a:	2300      	moveq	r3, #0
				
		// proceed to the next packet
		packet = &packetArray[packet_index];
 800514c:	2218      	movs	r2, #24
 800514e:	fb02 7203 	mla	r2, r2, r3, r7
		
		// get the current connection status
		current_connection = packet->connection;
 8005152:	7d94      	ldrb	r4, [r2, #22]
		
		if (!current_connection)
 8005154:	b944      	cbnz	r4, 8005168 <modbus_update+0x4c>
		{			
			// If all the connection attributes are false return
			// immediately to the main sketch
			if (++failed_connections == total_no_of_packets)
 8005156:	3001      	adds	r0, #1
 8005158:	b280      	uxth	r0, r0
 800515a:	42b0      	cmp	r0, r6
 800515c:	d104      	bne.n	8005168 <modbus_update+0x4c>
 800515e:	800b      	strh	r3, [r1, #0]
 8005160:	4ba0      	ldr	r3, [pc, #640]	; (80053e4 <modbus_update+0x2c8>)
 8005162:	601a      	str	r2, [r3, #0]
 8005164:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				return;
		}
		packet_index++;     
 8005168:	3301      	adds	r3, #1
 800516a:	b29b      	uxth	r3, r3
{
	static uint16_t packet_index;
	uint16_t failed_connections = 0;
	uint8_t current_connection;
	
	do
 800516c:	2c00      	cmp	r4, #0
 800516e:	d0ea      	beq.n	8005146 <modbus_update+0x2a>
 8005170:	800b      	strh	r3, [r1, #0]
 8005172:	4f9c      	ldr	r7, [pc, #624]	; (80053e4 <modbus_update+0x2c8>)
  
void constructPacket()
{
  uint8_t frameSize;
  
  packet->requests++;
 8005174:	8993      	ldrh	r3, [r2, #12]
  frame[0] = packet->id;
 8005176:	4e9c      	ldr	r6, [pc, #624]	; (80053e8 <modbus_update+0x2cc>)
 8005178:	603a      	str	r2, [r7, #0]
  
void constructPacket()
{
  uint8_t frameSize;
  
  packet->requests++;
 800517a:	3301      	adds	r3, #1
 800517c:	8193      	strh	r3, [r2, #12]
  frame[0] = packet->id;
 800517e:	7813      	ldrb	r3, [r2, #0]
 8005180:	7033      	strb	r3, [r6, #0]
  frame[1] = packet->function;
 8005182:	7853      	ldrb	r3, [r2, #1]
 8005184:	7073      	strb	r3, [r6, #1]
  frame[2] = packet->address >> 8; // address Hi
 8005186:	8853      	ldrh	r3, [r2, #2]
 8005188:	121b      	asrs	r3, r3, #8
 800518a:	70b3      	strb	r3, [r6, #2]
  frame[3] = packet->address & 0xFF; // address Lo
 800518c:	8853      	ldrh	r3, [r2, #2]
 800518e:	70f3      	strb	r3, [r6, #3]
  // For functions 1 & 2 data is the number of points
  // For functions 3, 4 & 16 data is the number of registers
  // For function 15 data is the number of coils
  frame[4] = packet->data >> 8; // MSB
 8005190:	8893      	ldrh	r3, [r2, #4]
 8005192:	121b      	asrs	r3, r3, #8
 8005194:	7133      	strb	r3, [r6, #4]
  frame[5] = packet->data & 0xFF; // LSB
 8005196:	8893      	ldrh	r3, [r2, #4]
 8005198:	7173      	strb	r3, [r6, #5]
	
  // construct the frame according to the modbus function  
  if (packet->function == PRESET_MULTIPLE_REGISTERS) 
 800519a:	7853      	ldrb	r3, [r2, #1]
 800519c:	2b10      	cmp	r3, #16
 800519e:	d11a      	bne.n	80051d6 <modbus_update+0xba>
	return frameSize;
}

uint8_t construct_F16()
{
	uint8_t no_of_bytes = packet->data * 2; 
 80051a0:	7914      	ldrb	r4, [r2, #4]
 80051a2:	0064      	lsls	r4, r4, #1
 80051a4:	b2e4      	uxtb	r4, r4
    
	// first 6 bytes of the array + no_of_bytes + 2 bytes CRC 
	frame[6] = no_of_bytes; // number of bytes
 80051a6:	71b4      	strb	r4, [r6, #6]
 80051a8:	f892 e004 	ldrb.w	lr, [r2, #4]
	uint8_t index = 7; // user data starts at index 7
	uint8_t no_of_registers = packet->data;
 80051ac:	2100      	movs	r1, #0
 80051ae:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 80051b2:	b2cb      	uxtb	r3, r1
 80051b4:	f103 0c07 	add.w	ip, r3, #7
	uint16_t temp;

  for(uint8_t i = 0; i < no_of_registers; i++)
 80051b8:	4571      	cmp	r1, lr
 80051ba:	fa5f fc8c 	uxtb.w	ip, ip
 80051be:	d03e      	beq.n	800523e <modbus_update+0x122>
  {
    temp = packet->register_array[i]; // get the data
 80051c0:	6890      	ldr	r0, [r2, #8]
 80051c2:	3308      	adds	r3, #8
 80051c4:	5a40      	ldrh	r0, [r0, r1]
    frame[index] = temp >> 8;
    index++;
    frame[index] = temp & 0xFF;
 80051c6:	b2db      	uxtb	r3, r3
	uint16_t temp;

  for(uint8_t i = 0; i < no_of_registers; i++)
  {
    temp = packet->register_array[i]; // get the data
    frame[index] = temp >> 8;
 80051c8:	ea4f 2820 	mov.w	r8, r0, asr #8
 80051cc:	f806 800c 	strb.w	r8, [r6, ip]
 80051d0:	3102      	adds	r1, #2
    index++;
    frame[index] = temp & 0xFF;
 80051d2:	54f0      	strb	r0, [r6, r3]
 80051d4:	e7ed      	b.n	80051b2 <modbus_update+0x96>
  frame[5] = packet->data & 0xFF; // LSB
	
  // construct the frame according to the modbus function  
  if (packet->function == PRESET_MULTIPLE_REGISTERS) 
		frameSize = construct_F16();
	else if (packet->function == FORCE_MULTIPLE_COILS)
 80051d6:	2b0f      	cmp	r3, #15
 80051d8:	d134      	bne.n	8005244 <modbus_update+0x128>

uint8_t construct_F15()
{
  // function 15 coil information is packed LSB first until the first 16 bits are completed
  // It is received the same way..
  uint8_t no_of_registers = packet->data / 16;
 80051da:	8893      	ldrh	r3, [r2, #4]
 80051dc:	f3c3 1e07 	ubfx	lr, r3, #4, #8
  uint8_t no_of_bytes = no_of_registers * 2;
 80051e0:	ea4f 044e 	mov.w	r4, lr, lsl #1
  uint8_t bytes_processed = 0;
  uint8_t index = 7; // user data starts at index 7
  uint16_t temp;
	
  // if the number of points dont fit in even 2byte amounts (one register) then use another register and pad 
  if (packet->data % 16 > 0) 
 80051e4:	071b      	lsls	r3, r3, #28
uint8_t construct_F15()
{
  // function 15 coil information is packed LSB first until the first 16 bits are completed
  // It is received the same way..
  uint8_t no_of_registers = packet->data / 16;
  uint8_t no_of_bytes = no_of_registers * 2;
 80051e6:	b2e4      	uxtb	r4, r4
	
  // if the number of points dont fit in even 2byte amounts (one register) then use another register and pad 
  if (packet->data % 16 > 0) 
  {
    no_of_registers++;
    no_of_bytes++;
 80051e8:	bf1e      	ittt	ne
 80051ea:	3401      	addne	r4, #1
  uint16_t temp;
	
  // if the number of points dont fit in even 2byte amounts (one register) then use another register and pad 
  if (packet->data % 16 > 0) 
  {
    no_of_registers++;
 80051ec:	f10e 0e01 	addne.w	lr, lr, #1
    no_of_bytes++;
 80051f0:	b2e4      	uxtbne	r4, r4
  }
	
  frame[6] = no_of_bytes;
 80051f2:	f04f 0800 	mov.w	r8, #0
  uint16_t temp;
	
  // if the number of points dont fit in even 2byte amounts (one register) then use another register and pad 
  if (packet->data % 16 > 0) 
  {
    no_of_registers++;
 80051f6:	bf18      	it	ne
 80051f8:	fa5f fe8e 	uxtbne.w	lr, lr
    no_of_bytes++;
  }
	
  frame[6] = no_of_bytes;
 80051fc:	71b4      	strb	r4, [r6, #6]
  // function 15 coil information is packed LSB first until the first 16 bits are completed
  // It is received the same way..
  uint8_t no_of_registers = packet->data / 16;
  uint8_t no_of_bytes = no_of_registers * 2;
  uint8_t bytes_processed = 0;
  uint8_t index = 7; // user data starts at index 7
 80051fe:	f04f 0c07 	mov.w	ip, #7
{
  // function 15 coil information is packed LSB first until the first 16 bits are completed
  // It is received the same way..
  uint8_t no_of_registers = packet->data / 16;
  uint8_t no_of_bytes = no_of_registers * 2;
  uint8_t bytes_processed = 0;
 8005202:	46c1      	mov	r9, r8
    no_of_bytes++;
  }
	
  frame[6] = no_of_bytes;
	
  for(uint8_t i = 0; i < no_of_registers; i++)
 8005204:	fa5f f388 	uxtb.w	r3, r8
 8005208:	4573      	cmp	r3, lr
 800520a:	d218      	bcs.n	800523e <modbus_update+0x122>
  {
    temp = packet->register_array[i]; // get the data
 800520c:	6891      	ldr	r1, [r2, #8]
 800520e:	f831 0018 	ldrh.w	r0, [r1, r8, lsl #1]
    frame[index] = temp & 0xFF; 
 8005212:	f806 000c 	strb.w	r0, [r6, ip]
    bytes_processed++;
 8005216:	f109 0101 	add.w	r1, r9, #1
 800521a:	b2cb      	uxtb	r3, r1
     
    if (bytes_processed < no_of_bytes)
 800521c:	42a3      	cmp	r3, r4
 800521e:	d20a      	bcs.n	8005236 <modbus_update+0x11a>
    {
      frame[index + 1] = temp >> 8;
 8005220:	4b71      	ldr	r3, [pc, #452]	; (80053e8 <modbus_update+0x2cc>)
 8005222:	4463      	add	r3, ip
 8005224:	1200      	asrs	r0, r0, #8
 8005226:	7058      	strb	r0, [r3, #1]
      bytes_processed++;
      index += 2;
 8005228:	f10c 0c02 	add.w	ip, ip, #2
    bytes_processed++;
     
    if (bytes_processed < no_of_bytes)
    {
      frame[index + 1] = temp >> 8;
      bytes_processed++;
 800522c:	f109 0302 	add.w	r3, r9, #2
 8005230:	b2db      	uxtb	r3, r3
      index += 2;
 8005232:	fa5f fc8c 	uxtb.w	ip, ip
 8005236:	f108 0801 	add.w	r8, r8, #1
{
  // function 15 coil information is packed LSB first until the first 16 bits are completed
  // It is received the same way..
  uint8_t no_of_registers = packet->data / 16;
  uint8_t no_of_bytes = no_of_registers * 2;
  uint8_t bytes_processed = 0;
 800523a:	4699      	mov	r9, r3
 800523c:	e7e2      	b.n	8005204 <modbus_update+0xe8>
      frame[index + 1] = temp >> 8;
      bytes_processed++;
      index += 2;
    }
  }
	uint8_t frameSize = (9 + no_of_bytes); // first 7 bytes of the array + 2 bytes CRC + noOfBytes 
 800523e:	3409      	adds	r4, #9
 8005240:	b2e4      	uxtb	r4, r4
 8005242:	e000      	b.n	8005246 <modbus_update+0x12a>
  if (packet->function == PRESET_MULTIPLE_REGISTERS) 
		frameSize = construct_F16();
	else if (packet->function == FORCE_MULTIPLE_COILS)
		frameSize = construct_F15();
	else // else functions 1,2,3 & 4 is assumed. They all share the exact same request format.
    frameSize = 8; // the request is always 8 bytes in size for the above mentioned functions.
 8005244:	2408      	movs	r4, #8
		
  uint16_t crc16 = calculateCRC(frameSize - 2);	
 8005246:	1ea0      	subs	r0, r4, #2
 8005248:	b2c0      	uxtb	r0, r0
 800524a:	f7ff ff0d 	bl	8005068 <_ZL12calculateCRCh>
  frame[frameSize - 2] = crc16 >> 8; // split crc into 2 bytes
 800524e:	1933      	adds	r3, r6, r4
 8005250:	1202      	asrs	r2, r0, #8
 8005252:	f803 2c02 	strb.w	r2, [r3, #-2]
  frame[frameSize - 1] = crc16 & 0xFF;
 8005256:	f803 0c01 	strb.w	r0, [r3, #-1]
 800525a:	f04f 0800 	mov.w	r8, #0
  * @retval None
  */
static void sendPacket(uint8_t bufferSize){
	//digitalWrite(TxEnablePin, HIGH);
		
	for (uint8_t i = 0; i < bufferSize; i++){
 800525e:	fa5f f388 	uxtb.w	r3, r8
 8005262:	42a3      	cmp	r3, r4
 8005264:	d20a      	bcs.n	800527c <modbus_update+0x160>
		aTxBuffer_Usart[i] = frame[i];
 8005266:	4b61      	ldr	r3, [pc, #388]	; (80053ec <modbus_update+0x2d0>)
 8005268:	f816 1008 	ldrb.w	r1, [r6, r8]
 800526c:	f808 1003 	strb.w	r1, [r8, r3]
		std::printf("Transmitbuffer: %d\n", frame[i]);
 8005270:	485f      	ldr	r0, [pc, #380]	; (80053f0 <modbus_update+0x2d4>)
 8005272:	f00e fc27 	bl	8013ac4 <printf>
 8005276:	f108 0801 	add.w	r8, r8, #1
 800527a:	e7f0      	b.n	800525e <modbus_update+0x142>
	}
	
	// It may be necessary to add a another character delay T1_5 here to
	// avoid truncating the message on slow and long distance connections
	
	if(HAL_UART_Transmit_DMA(&UartHandle, (uint8_t*)aTxBuffer_Usart, 8)!= HAL_OK){
 800527c:	485d      	ldr	r0, [pc, #372]	; (80053f4 <modbus_update+0x2d8>)
 800527e:	495b      	ldr	r1, [pc, #364]	; (80053ec <modbus_update+0x2d0>)
 8005280:	2208      	movs	r2, #8
 8005282:	f7fe fa0b 	bl	800369c <HAL_UART_Transmit_DMA>
 8005286:	b110      	cbz	r0, 800528e <modbus_update+0x172>
		printf("USART Transmit Error\n");
 8005288:	485b      	ldr	r0, [pc, #364]	; (80053f8 <modbus_update+0x2dc>)
 800528a:	f00e fc5d 	bl	8013b48 <puts>
		
/*	while (UartReady != SET){
		std::printf("Waiting on bus free!\n");
	}*/
		
	UartReady = RESET;
 800528e:	4b5b      	ldr	r3, [pc, #364]	; (80053fc <modbus_update+0x2e0>)
 8005290:	2200      	movs	r2, #0
 8005292:	701a      	strb	r2, [r3, #0]
	
	//digitalWrite(TxEnablePin, LOW);
		
	delayStart = timeout_timer(); // start the timeout delay	
 8005294:	f7fb ffaa 	bl	80011ec <timeout_timer>
 8005298:	4b59      	ldr	r3, [pc, #356]	; (8005400 <modbus_update+0x2e4>)
 800529a:	6018      	str	r0, [r3, #0]
  uint16_t crc16 = calculateCRC(frameSize - 2);	
  frame[frameSize - 2] = crc16 >> 8; // split crc into 2 bytes
  frame[frameSize - 1] = crc16 & 0xFF;
  sendPacket(frameSize);

  state = WAITING_FOR_REPLY; // state change
 800529c:	2302      	movs	r3, #2
 800529e:	702b      	strb	r3, [r5, #0]
	
  // if broadcast is requested (id == 0) for function 15 or 16 then override 
  // the previous state and force a success since the slave wont respond
  if (packet->id == 0)
 80052a0:	683b      	ldr	r3, [r7, #0]
 80052a2:	781b      	ldrb	r3, [r3, #0]
 80052a4:	2b00      	cmp	r3, #0
 80052a6:	f040 8101 	bne.w	80054ac <modbus_update+0x390>
		break;
		case WAITING_FOR_TURNAROUND:
		waiting_for_turnaround();
		break;
	}
}
 80052aa:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  state = WAITING_FOR_REPLY; // state change
	
  // if broadcast is requested (id == 0) for function 15 or 16 then override 
  // the previous state and force a success since the slave wont respond
  if (packet->id == 0)
		processSuccess();
 80052ae:	f7ff befd 	b.w	80050ac <_ZL14processSuccessv>
  * @note   wait a reply from requested slave
  * @retval None
  */
void waiting_for_reply()
{
	buffer = 0;
 80052b2:	4b54      	ldr	r3, [pc, #336]	; (8005404 <modbus_update+0x2e8>)
		
	if(__HAL_UART_GET_FLAG(&UartHandle, UART_FLAG_RXNE) != RESET){
 80052b4:	4d4f      	ldr	r5, [pc, #316]	; (80053f4 <modbus_update+0x2d8>)
  * @note   wait a reply from requested slave
  * @retval None
  */
void waiting_for_reply()
{
	buffer = 0;
 80052b6:	2200      	movs	r2, #0
 80052b8:	701a      	strb	r2, [r3, #0]
		
	if(__HAL_UART_GET_FLAG(&UartHandle, UART_FLAG_RXNE) != RESET){
 80052ba:	682a      	ldr	r2, [r5, #0]
 80052bc:	6812      	ldr	r2, [r2, #0]
 80052be:	f012 0f20 	tst.w	r2, #32
 80052c2:	4698      	mov	r8, r3
 80052c4:	f040 80e4 	bne.w	8005490 <modbus_update+0x374>
 80052c8:	e00d      	b.n	80052e6 <modbus_update+0x1ca>
	return frameSize;
}

void waiting_for_turnaround()
{
  if ((timeout_timer() - delayStart) > polling)
 80052ca:	f7fb ff8f 	bl	80011ec <timeout_timer>
 80052ce:	4b4c      	ldr	r3, [pc, #304]	; (8005400 <modbus_update+0x2e4>)
 80052d0:	681b      	ldr	r3, [r3, #0]
 80052d2:	1ac0      	subs	r0, r0, r3
 80052d4:	4b4c      	ldr	r3, [pc, #304]	; (8005408 <modbus_update+0x2ec>)
 80052d6:	881b      	ldrh	r3, [r3, #0]
 80052d8:	4298      	cmp	r0, r3
 80052da:	f240 80e7 	bls.w	80054ac <modbus_update+0x390>
		state = IDLE;
 80052de:	2301      	movs	r3, #1
 80052e0:	7023      	strb	r3, [r4, #0]
 80052e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				frame[buffer] = aRxBuffer_Usart[buffer];
				std::printf("ReceiveBuffer: %d\n", frame[buffer]);
			}
		}*/
	}
	else if(UartReady != RESET){
 80052e6:	4b45      	ldr	r3, [pc, #276]	; (80053fc <modbus_update+0x2e0>)
 80052e8:	781a      	ldrb	r2, [r3, #0]
 80052ea:	461e      	mov	r6, r3
 80052ec:	2a00      	cmp	r2, #0
 80052ee:	f000 80bc 	beq.w	800546a <modbus_update+0x34e>
		for(buffer = 0; buffer < 12; buffer++){
 80052f2:	f898 4000 	ldrb.w	r4, [r8]
 80052f6:	4f43      	ldr	r7, [pc, #268]	; (8005404 <modbus_update+0x2e8>)
 80052f8:	4d3b      	ldr	r5, [pc, #236]	; (80053e8 <modbus_update+0x2cc>)
 80052fa:	2c0b      	cmp	r4, #11
 80052fc:	d809      	bhi.n	8005312 <modbus_update+0x1f6>
			frame[buffer] = aRxBuffer_Usart[buffer];
 80052fe:	4b43      	ldr	r3, [pc, #268]	; (800540c <modbus_update+0x2f0>)
			std::printf("ReceiveBuffer: %d\n", frame[buffer]);
 8005300:	4843      	ldr	r0, [pc, #268]	; (8005410 <modbus_update+0x2f4>)
			}
		}*/
	}
	else if(UartReady != RESET){
		for(buffer = 0; buffer < 12; buffer++){
			frame[buffer] = aRxBuffer_Usart[buffer];
 8005302:	5d19      	ldrb	r1, [r3, r4]
 8005304:	5529      	strb	r1, [r5, r4]
			std::printf("ReceiveBuffer: %d\n", frame[buffer]);
 8005306:	f00e fbdd 	bl	8013ac4 <printf>
				std::printf("ReceiveBuffer: %d\n", frame[buffer]);
			}
		}*/
	}
	else if(UartReady != RESET){
		for(buffer = 0; buffer < 12; buffer++){
 800530a:	783b      	ldrb	r3, [r7, #0]
 800530c:	3301      	adds	r3, #1
 800530e:	703b      	strb	r3, [r7, #0]
 8005310:	e7ef      	b.n	80052f2 <modbus_update+0x1d6>
			frame[buffer] = aRxBuffer_Usart[buffer];
			std::printf("ReceiveBuffer: %d\n", frame[buffer]);
		}
		UartReady = RESET;
 8005312:	2300      	movs	r3, #0
 8005314:	7033      	strb	r3, [r6, #0]

		if(frame[0] = packet->id){
 8005316:	4b33      	ldr	r3, [pc, #204]	; (80053e4 <modbus_update+0x2c8>)
 8005318:	681e      	ldr	r6, [r3, #0]
 800531a:	7833      	ldrb	r3, [r6, #0]
 800531c:	702b      	strb	r3, [r5, #0]
 800531e:	2b00      	cmp	r3, #0
 8005320:	f000 80c4 	beq.w	80054ac <modbus_update+0x390>

void processReply()
{
  // combine the crc Low & High bytes
  uint16_t received_crc = ((frame[buffer - 2] << 8) | frame[buffer - 1]); 
  uint16_t calculated_crc = calculateCRC(buffer - 2);
 8005324:	1ea0      	subs	r0, r4, #2
}

void processReply()
{
  // combine the crc Low & High bytes
  uint16_t received_crc = ((frame[buffer - 2] << 8) | frame[buffer - 1]); 
 8005326:	442c      	add	r4, r5
  uint16_t calculated_crc = calculateCRC(buffer - 2);
 8005328:	b2c0      	uxtb	r0, r0
 800532a:	f7ff fe9d 	bl	8005068 <_ZL12calculateCRCh>
}

void processReply()
{
  // combine the crc Low & High bytes
  uint16_t received_crc = ((frame[buffer - 2] << 8) | frame[buffer - 1]); 
 800532e:	f814 2c02 	ldrb.w	r2, [r4, #-2]
 8005332:	f814 3c01 	ldrb.w	r3, [r4, #-1]
  uint16_t calculated_crc = calculateCRC(buffer - 2);
	
	// verify checksum
	if(calculated_crc == received_crc){
 8005336:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800533a:	4298      	cmp	r0, r3
 800533c:	f040 8091 	bne.w	8005462 <modbus_update+0x346>
		// To indicate an exception response a slave will 'OR' 
		// the requested function with 0x80
		if((frame[1] & 0x80) == 0x80){
 8005340:	786b      	ldrb	r3, [r5, #1]
 8005342:	0618      	lsls	r0, r3, #24
 8005344:	d503      	bpl.n	800534e <modbus_update+0x232>
			packet->exception_errors++;
 8005346:	8a73      	ldrh	r3, [r6, #18]
 8005348:	3301      	adds	r3, #1
 800534a:	8273      	strh	r3, [r6, #18]
 800534c:	e089      	b.n	8005462 <modbus_update+0x346>
 800534e:	3b01      	subs	r3, #1
 8005350:	b2db      	uxtb	r3, r3
 8005352:	2b0f      	cmp	r3, #15
 8005354:	f200 8085 	bhi.w	8005462 <modbus_update+0x346>
 8005358:	2201      	movs	r2, #1
 800535a:	fa02 f303 	lsl.w	r3, r2, r3
 800535e:	f413 4240 	ands.w	r2, r3, #49152	; 0xc000
 8005362:	d16f      	bne.n	8005444 <modbus_update+0x328>
 8005364:	f013 0f0c 	tst.w	r3, #12
 8005368:	d154      	bne.n	8005414 <modbus_update+0x2f8>
 800536a:	0799      	lsls	r1, r3, #30
 800536c:	d079      	beq.n	8005462 <modbus_update+0x346>
}

void process_F1_F2()
{
	// packet->data for function 1 & 2 is actually the number of boolean points
  uint8_t no_of_registers = packet->data / 16;
 800536e:	88b2      	ldrh	r2, [r6, #4]
  {
    no_of_registers++;
    number_of_bytes++;
  }
             
  if (frame[2] == number_of_bytes) // check number of bytes returned
 8005370:	78af      	ldrb	r7, [r5, #2]
}

void process_F1_F2()
{
	// packet->data for function 1 & 2 is actually the number of boolean points
  uint8_t no_of_registers = packet->data / 16;
 8005372:	f3c2 1007 	ubfx	r0, r2, #4, #8
  uint8_t number_of_bytes = no_of_registers * 2; 
 8005376:	0043      	lsls	r3, r0, #1
       
  // if the number of points dont fit in even 2byte amounts (one register) then use another register and pad 
  if(packet->data % 16 > 0) 
 8005378:	0712      	lsls	r2, r2, #28

void process_F1_F2()
{
	// packet->data for function 1 & 2 is actually the number of boolean points
  uint8_t no_of_registers = packet->data / 16;
  uint8_t number_of_bytes = no_of_registers * 2; 
 800537a:	b2db      	uxtb	r3, r3
       
  // if the number of points dont fit in even 2byte amounts (one register) then use another register and pad 
  if(packet->data % 16 > 0) 
  {
    no_of_registers++;
    number_of_bytes++;
 800537c:	bf1f      	itttt	ne
 800537e:	3301      	addne	r3, #1
  uint8_t number_of_bytes = no_of_registers * 2; 
       
  // if the number of points dont fit in even 2byte amounts (one register) then use another register and pad 
  if(packet->data % 16 > 0) 
  {
    no_of_registers++;
 8005380:	3001      	addne	r0, #1
    number_of_bytes++;
 8005382:	b2db      	uxtbne	r3, r3
  uint8_t number_of_bytes = no_of_registers * 2; 
       
  // if the number of points dont fit in even 2byte amounts (one register) then use another register and pad 
  if(packet->data % 16 > 0) 
  {
    no_of_registers++;
 8005384:	b2c0      	uxtbne	r0, r0
    number_of_bytes++;
  }
             
  if (frame[2] == number_of_bytes) // check number of bytes returned
 8005386:	429f      	cmp	r7, r3
 8005388:	d16b      	bne.n	8005462 <modbus_update+0x346>
 800538a:	f04f 0e00 	mov.w	lr, #0
 800538e:	2403      	movs	r4, #3
 8005390:	46f4      	mov	ip, lr
  { 
    uint8_t bytes_processed = 0;
    uint8_t index = 3; // start at the 4th element in the frame and combine the Lo byte  
    uint16_t temp;
    for(uint8_t i = 0; i < no_of_registers; i++)
 8005392:	fa5f f38e 	uxtb.w	r3, lr
 8005396:	4283      	cmp	r3, r0
 8005398:	d287      	bcs.n	80052aa <modbus_update+0x18e>
    {
      temp = frame[index]; 
      bytes_processed++;
 800539a:	f10c 0201 	add.w	r2, ip, #1
 800539e:	b2d3      	uxtb	r3, r2
      if(bytes_processed < number_of_bytes)
 80053a0:	42bb      	cmp	r3, r7
      {
				temp = (frame[index + 1] << 8) | temp;
 80053a2:	bf38      	it	cc
 80053a4:	4a10      	ldrcc	r2, [pc, #64]	; (80053e8 <modbus_update+0x2cc>)
    uint8_t bytes_processed = 0;
    uint8_t index = 3; // start at the 4th element in the frame and combine the Lo byte  
    uint16_t temp;
    for(uint8_t i = 0; i < no_of_registers; i++)
    {
      temp = frame[index]; 
 80053a6:	5d29      	ldrb	r1, [r5, r4]
      bytes_processed++;
      if(bytes_processed < number_of_bytes)
      {
				temp = (frame[index + 1] << 8) | temp;
 80053a8:	bf37      	itett	cc
 80053aa:	1912      	addcc	r2, r2, r4
    uint8_t bytes_processed = 0;
    uint8_t index = 3; // start at the 4th element in the frame and combine the Lo byte  
    uint16_t temp;
    for(uint8_t i = 0; i < no_of_registers; i++)
    {
      temp = frame[index]; 
 80053ac:	b28a      	uxthcs	r2, r1
      bytes_processed++;
      if(bytes_processed < number_of_bytes)
      {
				temp = (frame[index + 1] << 8) | temp;
 80053ae:	7852      	ldrbcc	r2, [r2, #1]
        bytes_processed++;
 80053b0:	f10c 0302 	addcc.w	r3, ip, #2
    {
      temp = frame[index]; 
      bytes_processed++;
      if(bytes_processed < number_of_bytes)
      {
				temp = (frame[index + 1] << 8) | temp;
 80053b4:	bf38      	it	cc
 80053b6:	ea41 2202 	orrcc.w	r2, r1, r2, lsl #8
        bytes_processed++;
        index += 2;
      }
      packet->register_array[i] = temp;
 80053ba:	68b1      	ldr	r1, [r6, #8]
      temp = frame[index]; 
      bytes_processed++;
      if(bytes_processed < number_of_bytes)
      {
				temp = (frame[index + 1] << 8) | temp;
        bytes_processed++;
 80053bc:	bf3c      	itt	cc
 80053be:	b2db      	uxtbcc	r3, r3
        index += 2;
 80053c0:	3402      	addcc	r4, #2
      }
      packet->register_array[i] = temp;
 80053c2:	f821 201e 	strh.w	r2, [r1, lr, lsl #1]
      bytes_processed++;
      if(bytes_processed < number_of_bytes)
      {
				temp = (frame[index + 1] << 8) | temp;
        bytes_processed++;
        index += 2;
 80053c6:	bf38      	it	cc
 80053c8:	b2e4      	uxtbcc	r4, r4
 80053ca:	f10e 0e01 	add.w	lr, lr, #1
      }
      packet->register_array[i] = temp;
 80053ce:	469c      	mov	ip, r3
 80053d0:	e7df      	b.n	8005392 <modbus_update+0x276>
 80053d2:	bf00      	nop
 80053d4:	2000d7b4 	.word	0x2000d7b4
 80053d8:	2000d49c 	.word	0x2000d49c
 80053dc:	2000d6a8 	.word	0x2000d6a8
 80053e0:	2000d6a0 	.word	0x2000d6a0
 80053e4:	2000d7b0 	.word	0x2000d7b0
 80053e8:	2000d49e 	.word	0x2000d49e
 80053ec:	2000d6ad 	.word	0x2000d6ad
 80053f0:	080224db 	.word	0x080224db
 80053f4:	2000da50 	.word	0x2000da50
 80053f8:	080224ef 	.word	0x080224ef
 80053fc:	2000d6ac 	.word	0x2000d6ac
 8005400:	2000d6a4 	.word	0x2000d6a4
 8005404:	2000d7ad 	.word	0x2000d7ad
 8005408:	2000d7b6 	.word	0x2000d7b6
 800540c:	2000d59f 	.word	0x2000d59f
 8005410:	08022518 	.word	0x08022518

void process_F3_F4()
{
  // check number of bytes returned - unsigned int == 2 bytes
  // data for function 3 & 4 is the number of registers
  if (frame[2] == (packet->data * 2)) 
 8005414:	78ab      	ldrb	r3, [r5, #2]
 8005416:	88b1      	ldrh	r1, [r6, #4]
 8005418:	ebb3 0f41 	cmp.w	r3, r1, lsl #1
 800541c:	d121      	bne.n	8005462 <modbus_update+0x346>
 800541e:	b2d1      	uxtb	r1, r2
  {
    uint8_t index = 3;
    for(uint8_t i = 0; i < packet->data; i++)
 8005420:	88b0      	ldrh	r0, [r6, #4]
 8005422:	004b      	lsls	r3, r1, #1
 8005424:	3303      	adds	r3, #3
 8005426:	4288      	cmp	r0, r1
 8005428:	b2db      	uxtb	r3, r3
 800542a:	f102 0201 	add.w	r2, r2, #1
 800542e:	f67f af3c 	bls.w	80052aa <modbus_update+0x18e>
    {
      // start at the 4th element in the frame and combine the Lo byte 
      packet->register_array[i] = (frame[index] << 8) | frame[index + 1]; 
 8005432:	5cec      	ldrb	r4, [r5, r3]
 8005434:	68b0      	ldr	r0, [r6, #8]
 8005436:	442b      	add	r3, r5
 8005438:	785b      	ldrb	r3, [r3, #1]
 800543a:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800543e:	f820 3011 	strh.w	r3, [r0, r1, lsl #1]
 8005442:	e7ec      	b.n	800541e <modbus_update+0x302>
}

void process_F15_F16()
{
	// Functions 15 & 16 is just an echo of the query
  uint16_t recieved_address = ((frame[2] << 8) | frame[3]);
 8005444:	78ac      	ldrb	r4, [r5, #2]
 8005446:	78ea      	ldrb	r2, [r5, #3]
  uint16_t recieved_data = ((frame[4] << 8) | frame[5]);
		
  if ((recieved_address == packet->address) && (recieved_data == packet->data))
 8005448:	8870      	ldrh	r0, [r6, #2]

void process_F15_F16()
{
	// Functions 15 & 16 is just an echo of the query
  uint16_t recieved_address = ((frame[2] << 8) | frame[3]);
  uint16_t recieved_data = ((frame[4] << 8) | frame[5]);
 800544a:	7929      	ldrb	r1, [r5, #4]
 800544c:	796b      	ldrb	r3, [r5, #5]
		
  if ((recieved_address == packet->address) && (recieved_data == packet->data))
 800544e:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 8005452:	4290      	cmp	r0, r2
 8005454:	d105      	bne.n	8005462 <modbus_update+0x346>
 8005456:	88b2      	ldrh	r2, [r6, #4]
 8005458:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800545c:	429a      	cmp	r2, r3
 800545e:	f43f af24 	beq.w	80052aa <modbus_update+0x18e>
		break;
		case WAITING_FOR_TURNAROUND:
		waiting_for_turnaround();
		break;
	}
}
 8005462:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
				case FORCE_MULTIPLE_COILS:
				case PRESET_MULTIPLE_REGISTERS:
				process_F15_F16();
				break;
				default: // illegal function returned
				processError();
 8005466:	f7ff be37 	b.w	80050d8 <_ZL12processErrorv>
	/*else if(frame[0] != packet->id)
		processError();*/
	/*else
		processReply();*/

	else if((timeout_timer() - delayStart) > timeout){
 800546a:	4d11      	ldr	r5, [pc, #68]	; (80054b0 <modbus_update+0x394>)
 800546c:	f7fb febe 	bl	80011ec <timeout_timer>
 8005470:	682b      	ldr	r3, [r5, #0]
 8005472:	1ac0      	subs	r0, r0, r3
 8005474:	4b0f      	ldr	r3, [pc, #60]	; (80054b4 <modbus_update+0x398>)
 8005476:	881b      	ldrh	r3, [r3, #0]
 8005478:	4298      	cmp	r0, r3
 800547a:	d917      	bls.n	80054ac <modbus_update+0x390>
		std::printf("TimeOut: %d\n", (timeout_timer() - delayStart));
 800547c:	f7fb feb6 	bl	80011ec <timeout_timer>
 8005480:	6829      	ldr	r1, [r5, #0]
 8005482:	1a41      	subs	r1, r0, r1
 8005484:	480c      	ldr	r0, [pc, #48]	; (80054b8 <modbus_update+0x39c>)
 8005486:	f00e fb1d 	bl	8013ac4 <printf>
		processError();
 800548a:	f7ff fe25 	bl	80050d8 <_ZL12processErrorv>
 800548e:	e726      	b.n	80052de <modbus_update+0x1c2>
void waiting_for_reply()
{
	buffer = 0;
		
	if(__HAL_UART_GET_FLAG(&UartHandle, UART_FLAG_RXNE) != RESET){
		std::printf("RX not empty...\n");
 8005490:	480a      	ldr	r0, [pc, #40]	; (80054bc <modbus_update+0x3a0>)
 8005492:	f00e fb59 	bl	8013b48 <puts>

		if(HAL_UART_Receive_DMA(&UartHandle, (uint8_t *)aRxBuffer_Usart, 20) != HAL_OK){
 8005496:	4628      	mov	r0, r5
 8005498:	4909      	ldr	r1, [pc, #36]	; (80054c0 <modbus_update+0x3a4>)
 800549a:	2214      	movs	r2, #20
 800549c:	f7fe f940 	bl	8003720 <HAL_UART_Receive_DMA>
 80054a0:	b120      	cbz	r0, 80054ac <modbus_update+0x390>
			printf("USART Receive Error\n");
 80054a2:	4808      	ldr	r0, [pc, #32]	; (80054c4 <modbus_update+0x3a8>)
		break;
		case WAITING_FOR_TURNAROUND:
		waiting_for_turnaround();
		break;
	}
}
 80054a4:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
		
	if(__HAL_UART_GET_FLAG(&UartHandle, UART_FLAG_RXNE) != RESET){
		std::printf("RX not empty...\n");

		if(HAL_UART_Receive_DMA(&UartHandle, (uint8_t *)aRxBuffer_Usart, 20) != HAL_OK){
			printf("USART Receive Error\n");
 80054a8:	f00e bb4e 	b.w	8013b48 <puts>
 80054ac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80054b0:	2000d6a4 	.word	0x2000d6a4
 80054b4:	2000d69e 	.word	0x2000d69e
 80054b8:	0802252b 	.word	0x0802252b
 80054bc:	08022538 	.word	0x08022538
 80054c0:	2000d59f 	.word	0x2000d59f
 80054c4:	08022504 	.word	0x08022504

080054c8 <modbus_configure>:
				uint16_t _timeout, 
				uint16_t _polling,
				uint8_t _retry_count,
				Packet* _packets, 
				uint16_t _total_no_of_packets)
{ 
 80054c8:	b530      	push	{r4, r5, lr}
  // an inter-character must be 1.5T or 1.5 times longer than a character. Thus
  // 1.5T = 1.14583ms * 1.5 = 1.71875ms. A frame delay is 3.5T.
  // Thus the formula is T1.5(us) = (1000ms * 1000(us) * 1.5 * 11bits)/baud
  // 1000ms * 1000(us) * 1.5 * 11bits = 16500000 can be calculated as a constant
	
	if (baud > 19200)
 80054ca:	f5b0 4f96 	cmp.w	r0, #19200	; 0x4b00
 80054ce:	4d0c      	ldr	r5, [pc, #48]	; (8005500 <modbus_configure+0x38>)
		T1_5 = 750;
	else 
		T1_5 = 16500000/baud; // 1T * 1.5 = T1.5
 80054d0:	bf9a      	itte	ls
 80054d2:	4c0c      	ldrls	r4, [pc, #48]	; (8005504 <modbus_configure+0x3c>)
 80054d4:	fbb4 f0f0 	udivls	r0, r4, r0
  // 1.5T = 1.14583ms * 1.5 = 1.71875ms. A frame delay is 3.5T.
  // Thus the formula is T1.5(us) = (1000ms * 1000(us) * 1.5 * 11bits)/baud
  // 1000ms * 1000(us) * 1.5 * 11bits = 16500000 can be calculated as a constant
	
	if (baud > 19200)
		T1_5 = 750;
 80054d8:	f240 20ee 	movwhi	r0, #750	; 0x2ee
	else 
		T1_5 = 16500000/baud; // 1T * 1.5 = T1.5
 80054dc:	8028      	strh	r0, [r5, #0]
	
	// initialize
	state = IDLE;
 80054de:	480a      	ldr	r0, [pc, #40]	; (8005508 <modbus_configure+0x40>)
 80054e0:	2401      	movs	r4, #1
 80054e2:	7004      	strb	r4, [r0, #0]
	timeout = _timeout;
 80054e4:	4809      	ldr	r0, [pc, #36]	; (800550c <modbus_configure+0x44>)
 80054e6:	8001      	strh	r1, [r0, #0]
	polling = _polling;
 80054e8:	4909      	ldr	r1, [pc, #36]	; (8005510 <modbus_configure+0x48>)
 80054ea:	800a      	strh	r2, [r1, #0]
	retry_count = _retry_count;
 80054ec:	4a09      	ldr	r2, [pc, #36]	; (8005514 <modbus_configure+0x4c>)
 80054ee:	7013      	strb	r3, [r2, #0]
	//TxEnablePin = _TxEnablePin;
	total_no_of_packets = _total_no_of_packets;
 80054f0:	4b09      	ldr	r3, [pc, #36]	; (8005518 <modbus_configure+0x50>)
 80054f2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80054f6:	801a      	strh	r2, [r3, #0]
	packetArray = _packets;
 80054f8:	4b08      	ldr	r3, [pc, #32]	; (800551c <modbus_configure+0x54>)
 80054fa:	9a03      	ldr	r2, [sp, #12]
 80054fc:	601a      	str	r2, [r3, #0]
 80054fe:	bd30      	pop	{r4, r5, pc}
 8005500:	2000d6aa 	.word	0x2000d6aa
 8005504:	00fbc520 	.word	0x00fbc520
 8005508:	2000d7b4 	.word	0x2000d7b4
 800550c:	2000d69e 	.word	0x2000d69e
 8005510:	2000d7b6 	.word	0x2000d7b6
 8005514:	2000d59e 	.word	0x2000d59e
 8005518:	2000d49c 	.word	0x2000d49c
 800551c:	2000d6a0 	.word	0x2000d6a0

08005520 <modbus_construct>:
				uint16_t data, 
				uint16_t* register_array)
{
	_packet->id = id;
	_packet->function = function;
	_packet->address = address;
 8005520:	8043      	strh	r3, [r0, #2]
	_packet->data = data;
 8005522:	f8bd 3000 	ldrh.w	r3, [sp]
 8005526:	8083      	strh	r3, [r0, #4]
	_packet->register_array = register_array;
 8005528:	9b01      	ldr	r3, [sp, #4]
 800552a:	6083      	str	r3, [r0, #8]
	_packet->connection = 1;
 800552c:	2301      	movs	r3, #1
				uint8_t function, 
				uint16_t address, 
				uint16_t data, 
				uint16_t* register_array)
{
	_packet->id = id;
 800552e:	7001      	strb	r1, [r0, #0]
	_packet->function = function;
 8005530:	7042      	strb	r2, [r0, #1]
	_packet->address = address;
	_packet->data = data;
	_packet->register_array = register_array;
	_packet->connection = 1;
 8005532:	7583      	strb	r3, [r0, #22]
 8005534:	4770      	bx	lr
	...

08005538 <HAL_UART_TxCpltCallback>:
  *         you can add your own implementation. 
  * @retval None
  */
void HAL_UART_TxCpltCallback(UART_HandleTypeDef *UartHandle){
  /* Set transmission flag: transfer complete */
  UartReady = SET;
 8005538:	4b01      	ldr	r3, [pc, #4]	; (8005540 <HAL_UART_TxCpltCallback+0x8>)
 800553a:	2201      	movs	r2, #1
 800553c:	701a      	strb	r2, [r3, #0]
 800553e:	4770      	bx	lr
 8005540:	2000d6ac 	.word	0x2000d6ac

08005544 <HAL_UART_RxCpltCallback>:
  *         you can add your own implementation.
  * @retval None
  */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *UartHandle){
  /* Set transmission flag: transfer complete */
  UartReady = SET;
 8005544:	4b01      	ldr	r3, [pc, #4]	; (800554c <HAL_UART_RxCpltCallback+0x8>)
 8005546:	2201      	movs	r2, #1
 8005548:	701a      	strb	r2, [r3, #0]
 800554a:	4770      	bx	lr
 800554c:	2000d6ac 	.word	0x2000d6ac

08005550 <HAL_UART_ErrorCallback>:
  *         add your own implementation.
  * @retval None
  */
void HAL_UART_ErrorCallback(UART_HandleTypeDef *UartHandle){
  /* Transfer error in reception/transmission process */
  printf("USART bus Error"); 
 8005550:	4801      	ldr	r0, [pc, #4]	; (8005558 <HAL_UART_ErrorCallback+0x8>)
 8005552:	f00e bab7 	b.w	8013ac4 <printf>
 8005556:	bf00      	nop
 8005558:	08022548 	.word	0x08022548

0800555c <TEXT_SetTextColor>:
 800555c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800555e:	460c      	mov	r4, r1
 8005560:	4605      	mov	r5, r0
 8005562:	b160      	cbz	r0, 800557e <TEXT_SetTextColor+0x22>
 8005564:	f009 f9b4 	bl	800e8d0 <GUI_ALLOC_LockH>
 8005568:	6b82      	ldr	r2, [r0, #56]	; 0x38
 800556a:	9001      	str	r0, [sp, #4]
 800556c:	42a2      	cmp	r2, r4
 800556e:	d003      	beq.n	8005578 <TEXT_SetTextColor+0x1c>
 8005570:	6384      	str	r4, [r0, #56]	; 0x38
 8005572:	4628      	mov	r0, r5
 8005574:	f003 fe12 	bl	800919c <WM_InvalidateWindow>
 8005578:	a801      	add	r0, sp, #4
 800557a:	f009 f9b7 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800557e:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08005580 <TEXT_SetTextAlign>:
 8005580:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005582:	460d      	mov	r5, r1
 8005584:	4604      	mov	r4, r0
 8005586:	b160      	cbz	r0, 80055a2 <TEXT_SetTextAlign+0x22>
 8005588:	f009 f9a2 	bl	800e8d0 <GUI_ALLOC_LockH>
 800558c:	4602      	mov	r2, r0
 800558e:	a802      	add	r0, sp, #8
 8005590:	f8a2 5048 	strh.w	r5, [r2, #72]	; 0x48
 8005594:	f840 2d04 	str.w	r2, [r0, #-4]!
 8005598:	f009 f9a8 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800559c:	4620      	mov	r0, r4
 800559e:	f003 fdfd 	bl	800919c <WM_InvalidateWindow>
 80055a2:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

080055a4 <TEXT_SetText>:
 80055a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80055a6:	460c      	mov	r4, r1
 80055a8:	4605      	mov	r5, r0
 80055aa:	b300      	cbz	r0, 80055ee <TEXT_SetText+0x4a>
 80055ac:	f009 f990 	bl	800e8d0 <GUI_ALLOC_LockH>
 80055b0:	6c43      	ldr	r3, [r0, #68]	; 0x44
 80055b2:	9000      	str	r0, [sp, #0]
 80055b4:	4668      	mov	r0, sp
 80055b6:	9301      	str	r3, [sp, #4]
 80055b8:	f009 f998 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80055bc:	4621      	mov	r1, r4
 80055be:	a801      	add	r0, sp, #4
 80055c0:	f007 f85e 	bl	800c680 <GUI__SetText>
 80055c4:	f1d0 0401 	rsbs	r4, r0, #1
 80055c8:	bf38      	it	cc
 80055ca:	2400      	movcc	r4, #0
 80055cc:	b984      	cbnz	r4, 80055f0 <TEXT_SetText+0x4c>
 80055ce:	4628      	mov	r0, r5
 80055d0:	f009 f97e 	bl	800e8d0 <GUI_ALLOC_LockH>
 80055d4:	9a01      	ldr	r2, [sp, #4]
 80055d6:	6c41      	ldr	r1, [r0, #68]	; 0x44
 80055d8:	9000      	str	r0, [sp, #0]
 80055da:	4291      	cmp	r1, r2
 80055dc:	bf18      	it	ne
 80055de:	6442      	strne	r2, [r0, #68]	; 0x44
 80055e0:	4668      	mov	r0, sp
 80055e2:	f009 f983 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80055e6:	4628      	mov	r0, r5
 80055e8:	f003 fdd8 	bl	800919c <WM_InvalidateWindow>
 80055ec:	e000      	b.n	80055f0 <TEXT_SetText+0x4c>
 80055ee:	2401      	movs	r4, #1
 80055f0:	4620      	mov	r0, r4
 80055f2:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

080055f4 <TEXT_SetFont>:
 80055f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80055f6:	460c      	mov	r4, r1
 80055f8:	4605      	mov	r5, r0
 80055fa:	b160      	cbz	r0, 8005616 <TEXT_SetFont+0x22>
 80055fc:	f009 f968 	bl	800e8d0 <GUI_ALLOC_LockH>
 8005600:	6b42      	ldr	r2, [r0, #52]	; 0x34
 8005602:	9001      	str	r0, [sp, #4]
 8005604:	42a2      	cmp	r2, r4
 8005606:	d003      	beq.n	8005610 <TEXT_SetFont+0x1c>
 8005608:	6344      	str	r4, [r0, #52]	; 0x34
 800560a:	4628      	mov	r0, r5
 800560c:	f003 fdc6 	bl	800919c <WM_InvalidateWindow>
 8005610:	a801      	add	r0, sp, #4
 8005612:	f009 f96b 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8005616:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08005618 <TEXT_CreateIndirect>:
 8005618:	b5f0      	push	{r4, r5, r6, r7, lr}
 800561a:	b087      	sub	sp, #28
 800561c:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8005620:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8005624:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8005628:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 800562c:	9100      	str	r1, [sp, #0]
 800562e:	2102      	movs	r1, #2
 8005630:	9101      	str	r1, [sp, #4]
 8005632:	8a44      	ldrh	r4, [r0, #18]
 8005634:	9402      	str	r4, [sp, #8]
 8005636:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800563a:	9103      	str	r1, [sp, #12]
 800563c:	6844      	ldr	r4, [r0, #4]
 800563e:	9404      	str	r4, [sp, #16]
 8005640:	6984      	ldr	r4, [r0, #24]
 8005642:	18f9      	adds	r1, r7, r3
 8005644:	eb0e 0002 	add.w	r0, lr, r2
 8005648:	9405      	str	r4, [sp, #20]
 800564a:	4632      	mov	r2, r6
 800564c:	462b      	mov	r3, r5
 800564e:	f000 f865 	bl	800571c <TEXT_CreateUser>
 8005652:	b007      	add	sp, #28
 8005654:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005656 <TEXT_Callback>:
 8005656:	b530      	push	{r4, r5, lr}
 8005658:	6845      	ldr	r5, [r0, #4]
 800565a:	4604      	mov	r4, r0
 800565c:	b085      	sub	sp, #20
 800565e:	4628      	mov	r0, r5
 8005660:	4621      	mov	r1, r4
 8005662:	f009 fd75 	bl	800f150 <WIDGET_HandleActive>
 8005666:	2800      	cmp	r0, #0
 8005668:	d056      	beq.n	8005718 <TEXT_Callback+0xc2>
 800566a:	6823      	ldr	r3, [r4, #0]
 800566c:	2b0f      	cmp	r3, #15
 800566e:	d01e      	beq.n	80056ae <TEXT_Callback+0x58>
 8005670:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8005674:	d00e      	beq.n	8005694 <TEXT_Callback+0x3e>
 8005676:	2b0b      	cmp	r3, #11
 8005678:	d14b      	bne.n	8005712 <TEXT_Callback+0xbc>
 800567a:	4628      	mov	r0, r5
 800567c:	f009 f928 	bl	800e8d0 <GUI_ALLOC_LockH>
 8005680:	ad04      	add	r5, sp, #16
 8005682:	f845 0d0c 	str.w	r0, [r5, #-12]!
 8005686:	3044      	adds	r0, #68	; 0x44
 8005688:	f009 fb74 	bl	800ed74 <GUI_ALLOC_FreePtr>
 800568c:	4628      	mov	r0, r5
 800568e:	f009 f92d 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8005692:	e03e      	b.n	8005712 <TEXT_Callback+0xbc>
 8005694:	68e0      	ldr	r0, [r4, #12]
 8005696:	b128      	cbz	r0, 80056a4 <TEXT_Callback+0x4e>
 8005698:	7a01      	ldrb	r1, [r0, #8]
 800569a:	2900      	cmp	r1, #0
 800569c:	bf0c      	ite	eq
 800569e:	2102      	moveq	r1, #2
 80056a0:	2101      	movne	r1, #1
 80056a2:	e000      	b.n	80056a6 <TEXT_Callback+0x50>
 80056a4:	2103      	movs	r1, #3
 80056a6:	4628      	mov	r0, r5
 80056a8:	f002 febb 	bl	8008422 <WM_NotifyParent>
 80056ac:	e031      	b.n	8005712 <TEXT_Callback+0xbc>
 80056ae:	4628      	mov	r0, r5
 80056b0:	f009 f90e 	bl	800e8d0 <GUI_ALLOC_LockH>
 80056b4:	9000      	str	r0, [sp, #0]
 80056b6:	6b80      	ldr	r0, [r0, #56]	; 0x38
 80056b8:	f006 ff7a 	bl	800c5b0 <LCD_SetColor>
 80056bc:	9a00      	ldr	r2, [sp, #0]
 80056be:	6b50      	ldr	r0, [r2, #52]	; 0x34
 80056c0:	f007 fd12 	bl	800d0e8 <GUI_SetFont>
 80056c4:	4628      	mov	r0, r5
 80056c6:	f002 fc8d 	bl	8007fe4 <WM_GetHasTrans>
 80056ca:	b928      	cbnz	r0, 80056d8 <TEXT_Callback+0x82>
 80056cc:	9b00      	ldr	r3, [sp, #0]
 80056ce:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 80056d0:	f006 ff66 	bl	800c5a0 <LCD_SetBkColor>
 80056d4:	f008 fcea 	bl	800e0ac <GUI_Clear>
 80056d8:	9800      	ldr	r0, [sp, #0]
 80056da:	6c41      	ldr	r1, [r0, #68]	; 0x44
 80056dc:	b1a9      	cbz	r1, 800570a <TEXT_Callback+0xb4>
 80056de:	2002      	movs	r0, #2
 80056e0:	f007 fcf8 	bl	800d0d4 <GUI_SetTextMode>
 80056e4:	a802      	add	r0, sp, #8
 80056e6:	f003 f869 	bl	80087bc <WM_GetClientRect>
 80056ea:	9a00      	ldr	r2, [sp, #0]
 80056ec:	6c50      	ldr	r0, [r2, #68]	; 0x44
 80056ee:	f009 f8ef 	bl	800e8d0 <GUI_ALLOC_LockH>
 80056f2:	9b00      	ldr	r3, [sp, #0]
 80056f4:	9001      	str	r0, [sp, #4]
 80056f6:	f9b3 2048 	ldrsh.w	r2, [r3, #72]	; 0x48
 80056fa:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80056fe:	a902      	add	r1, sp, #8
 8005700:	f008 f97a 	bl	800d9f8 <GUI_DispStringInRectWrap>
 8005704:	a801      	add	r0, sp, #4
 8005706:	f009 f8f1 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800570a:	4668      	mov	r0, sp
 800570c:	f009 f8ee 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8005710:	e002      	b.n	8005718 <TEXT_Callback+0xc2>
 8005712:	4620      	mov	r0, r4
 8005714:	f004 f96c 	bl	80099f0 <WM_DefaultProc>
 8005718:	b005      	add	sp, #20
 800571a:	bd30      	pop	{r4, r5, pc}

0800571c <TEXT_CreateUser>:
 800571c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800571e:	b087      	sub	sp, #28
 8005720:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8005722:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8005724:	9500      	str	r5, [sp, #0]
 8005726:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8005728:	f045 0501 	orr.w	r5, r5, #1
 800572c:	9501      	str	r5, [sp, #4]
 800572e:	4d1d      	ldr	r5, [pc, #116]	; (80057a4 <TEXT_CreateUser+0x88>)
 8005730:	9502      	str	r5, [sp, #8]
 8005732:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8005734:	3520      	adds	r5, #32
 8005736:	9503      	str	r5, [sp, #12]
 8005738:	f003 fdec 	bl	8009314 <WM_CreateWindowAsChild>
 800573c:	4605      	mov	r5, r0
 800573e:	b368      	cbz	r0, 800579c <TEXT_CreateUser+0x80>
 8005740:	b90c      	cbnz	r4, 8005746 <TEXT_CreateUser+0x2a>
 8005742:	2700      	movs	r7, #0
 8005744:	e013      	b.n	800576e <TEXT_CreateUser+0x52>
 8005746:	4620      	mov	r0, r4
 8005748:	f00e fa8a 	bl	8013c60 <strlen>
 800574c:	3001      	adds	r0, #1
 800574e:	f009 fb33 	bl	800edb8 <GUI_ALLOC_AllocZero>
 8005752:	4607      	mov	r7, r0
 8005754:	2800      	cmp	r0, #0
 8005756:	d0f4      	beq.n	8005742 <TEXT_CreateUser+0x26>
 8005758:	f009 f8ba 	bl	800e8d0 <GUI_ALLOC_LockH>
 800575c:	ae06      	add	r6, sp, #24
 800575e:	4621      	mov	r1, r4
 8005760:	f846 0d04 	str.w	r0, [r6, #-4]!
 8005764:	f00e fa1e 	bl	8013ba4 <strcpy>
 8005768:	4630      	mov	r0, r6
 800576a:	f009 f8bf 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800576e:	4628      	mov	r0, r5
 8005770:	f009 f8ae 	bl	800e8d0 <GUI_ALLOC_LockH>
 8005774:	ae06      	add	r6, sp, #24
 8005776:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8005778:	9005      	str	r0, [sp, #20]
 800577a:	2200      	movs	r2, #0
 800577c:	f009 fce0 	bl	800f140 <WIDGET__Init>
 8005780:	f856 4d04 	ldr.w	r4, [r6, #-4]!
 8005784:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005786:	4808      	ldr	r0, [pc, #32]	; (80057a8 <TEXT_CreateUser+0x8c>)
 8005788:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
 800578c:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 800578e:	6467      	str	r7, [r4, #68]	; 0x44
 8005790:	3434      	adds	r4, #52	; 0x34
 8005792:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8005796:	4630      	mov	r0, r6
 8005798:	f009 f8a8 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800579c:	4628      	mov	r0, r5
 800579e:	b007      	add	sp, #28
 80057a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80057a2:	bf00      	nop
 80057a4:	08005657 	.word	0x08005657
 80057a8:	2000000c 	.word	0x2000000c

080057ac <SLIDER_CreateIndirect>:
 80057ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80057ae:	b087      	sub	sp, #28
 80057b0:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 80057b4:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 80057b8:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 80057bc:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 80057c0:	9100      	str	r1, [sp, #0]
 80057c2:	2100      	movs	r1, #0
 80057c4:	9101      	str	r1, [sp, #4]
 80057c6:	8a44      	ldrh	r4, [r0, #18]
 80057c8:	9402      	str	r4, [sp, #8]
 80057ca:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80057ce:	9103      	str	r1, [sp, #12]
 80057d0:	6984      	ldr	r4, [r0, #24]
 80057d2:	18f9      	adds	r1, r7, r3
 80057d4:	eb0e 0002 	add.w	r0, lr, r2
 80057d8:	9404      	str	r4, [sp, #16]
 80057da:	4632      	mov	r2, r6
 80057dc:	462b      	mov	r3, r5
 80057de:	f000 f803 	bl	80057e8 <SLIDER_CreateUser>
 80057e2:	b007      	add	sp, #28
 80057e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080057e8 <SLIDER_CreateUser>:
 80057e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80057ec:	b086      	sub	sp, #24
 80057ee:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80057f0:	9400      	str	r4, [sp, #0]
 80057f2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80057f4:	f044 0401 	orr.w	r4, r4, #1
 80057f8:	9401      	str	r4, [sp, #4]
 80057fa:	4c1c      	ldr	r4, [pc, #112]	; (800586c <SLIDER_CreateUser+0x84>)
 80057fc:	9402      	str	r4, [sp, #8]
 80057fe:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8005800:	3438      	adds	r4, #56	; 0x38
 8005802:	9403      	str	r4, [sp, #12]
 8005804:	f003 fd86 	bl	8009314 <WM_CreateWindowAsChild>
 8005808:	4680      	mov	r8, r0
 800580a:	b358      	cbz	r0, 8005864 <SLIDER_CreateUser+0x7c>
 800580c:	f009 f860 	bl	800e8d0 <GUI_ALLOC_LockH>
 8005810:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005812:	4d17      	ldr	r5, [pc, #92]	; (8005870 <SLIDER_CreateUser+0x88>)
 8005814:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8005816:	9005      	str	r0, [sp, #20]
 8005818:	f013 0f08 	tst.w	r3, #8
 800581c:	bf14      	ite	ne
 800581e:	2218      	movne	r2, #24
 8005820:	2210      	moveq	r2, #16
 8005822:	f009 fc8d 	bl	800f140 <WIDGET__Init>
 8005826:	af06      	add	r7, sp, #24
 8005828:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800582a:	f857 6d04 	ldr.w	r6, [r7, #-4]!
 800582e:	f106 0434 	add.w	r4, r6, #52	; 0x34
 8005832:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005834:	e895 0003 	ldmia.w	r5, {r0, r1}
 8005838:	e884 0003 	stmia.w	r4, {r0, r1}
 800583c:	4c0d      	ldr	r4, [pc, #52]	; (8005874 <SLIDER_CreateUser+0x8c>)
 800583e:	6820      	ldr	r0, [r4, #0]
 8005840:	2108      	movs	r1, #8
 8005842:	2264      	movs	r2, #100	; 0x64
 8005844:	64f0      	str	r0, [r6, #76]	; 0x4c
 8005846:	2300      	movs	r3, #0
 8005848:	f04f 30ff 	mov.w	r0, #4294967295
 800584c:	f8a6 1060 	strh.w	r1, [r6, #96]	; 0x60
 8005850:	6572      	str	r2, [r6, #84]	; 0x54
 8005852:	6530      	str	r0, [r6, #80]	; 0x50
 8005854:	65b3      	str	r3, [r6, #88]	; 0x58
 8005856:	4638      	mov	r0, r7
 8005858:	f009 f848 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800585c:	6821      	ldr	r1, [r4, #0]
 800585e:	4640      	mov	r0, r8
 8005860:	684a      	ldr	r2, [r1, #4]
 8005862:	4790      	blx	r2
 8005864:	4640      	mov	r0, r8
 8005866:	b006      	add	sp, #24
 8005868:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800586c:	08005957 	.word	0x08005957
 8005870:	20000020 	.word	0x20000020
 8005874:	2000001c 	.word	0x2000001c

08005878 <SLIDER_CreateEx>:
 8005878:	b510      	push	{r4, lr}
 800587a:	b086      	sub	sp, #24
 800587c:	9c08      	ldr	r4, [sp, #32]
 800587e:	9400      	str	r4, [sp, #0]
 8005880:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8005882:	9401      	str	r4, [sp, #4]
 8005884:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8005886:	9402      	str	r4, [sp, #8]
 8005888:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800588a:	9403      	str	r4, [sp, #12]
 800588c:	2400      	movs	r4, #0
 800588e:	9404      	str	r4, [sp, #16]
 8005890:	f7ff ffaa 	bl	80057e8 <SLIDER_CreateUser>
 8005894:	b006      	add	sp, #24
 8005896:	bd10      	pop	{r4, pc}

08005898 <SLIDER_Dec>:
 8005898:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800589a:	4605      	mov	r5, r0
 800589c:	b1c0      	cbz	r0, 80058d0 <SLIDER_Dec+0x38>
 800589e:	f009 f817 	bl	800e8d0 <GUI_ALLOC_LockH>
 80058a2:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 80058a4:	6d81      	ldr	r1, [r0, #88]	; 0x58
 80058a6:	ac02      	add	r4, sp, #8
 80058a8:	428a      	cmp	r2, r1
 80058aa:	f844 0d04 	str.w	r0, [r4, #-4]!
 80058ae:	dd0c      	ble.n	80058ca <SLIDER_Dec+0x32>
 80058b0:	1e53      	subs	r3, r2, #1
 80058b2:	65c3      	str	r3, [r0, #92]	; 0x5c
 80058b4:	4628      	mov	r0, r5
 80058b6:	f003 fc71 	bl	800919c <WM_InvalidateWindow>
 80058ba:	4620      	mov	r0, r4
 80058bc:	f009 f816 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80058c0:	4628      	mov	r0, r5
 80058c2:	2105      	movs	r1, #5
 80058c4:	f002 fdad 	bl	8008422 <WM_NotifyParent>
 80058c8:	e002      	b.n	80058d0 <SLIDER_Dec+0x38>
 80058ca:	4620      	mov	r0, r4
 80058cc:	f009 f80e 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80058d0:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

080058d2 <SLIDER_Inc>:
 80058d2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80058d4:	4605      	mov	r5, r0
 80058d6:	b1c0      	cbz	r0, 800590a <SLIDER_Inc+0x38>
 80058d8:	f008 fffa 	bl	800e8d0 <GUI_ALLOC_LockH>
 80058dc:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 80058de:	6d41      	ldr	r1, [r0, #84]	; 0x54
 80058e0:	ac02      	add	r4, sp, #8
 80058e2:	428a      	cmp	r2, r1
 80058e4:	f844 0d04 	str.w	r0, [r4, #-4]!
 80058e8:	da0c      	bge.n	8005904 <SLIDER_Inc+0x32>
 80058ea:	1c53      	adds	r3, r2, #1
 80058ec:	65c3      	str	r3, [r0, #92]	; 0x5c
 80058ee:	4628      	mov	r0, r5
 80058f0:	f003 fc54 	bl	800919c <WM_InvalidateWindow>
 80058f4:	4620      	mov	r0, r4
 80058f6:	f008 fff9 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80058fa:	4628      	mov	r0, r5
 80058fc:	2105      	movs	r1, #5
 80058fe:	f002 fd90 	bl	8008422 <WM_NotifyParent>
 8005902:	e002      	b.n	800590a <SLIDER_Inc+0x38>
 8005904:	4620      	mov	r0, r4
 8005906:	f008 fff1 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800590a:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800590c <SLIDER_SetValue>:
 800590c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800590e:	460e      	mov	r6, r1
 8005910:	4605      	mov	r5, r0
 8005912:	b1f8      	cbz	r0, 8005954 <SLIDER_SetValue+0x48>
 8005914:	f008 ffdc 	bl	800e8d0 <GUI_ALLOC_LockH>
 8005918:	6d82      	ldr	r2, [r0, #88]	; 0x58
 800591a:	6d43      	ldr	r3, [r0, #84]	; 0x54
 800591c:	4296      	cmp	r6, r2
 800591e:	bfac      	ite	ge
 8005920:	4631      	movge	r1, r6
 8005922:	4611      	movlt	r1, r2
 8005924:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8005926:	ac02      	add	r4, sp, #8
 8005928:	4299      	cmp	r1, r3
 800592a:	bfa8      	it	ge
 800592c:	4619      	movge	r1, r3
 800592e:	428a      	cmp	r2, r1
 8005930:	f844 0d04 	str.w	r0, [r4, #-4]!
 8005934:	d00b      	beq.n	800594e <SLIDER_SetValue+0x42>
 8005936:	65c1      	str	r1, [r0, #92]	; 0x5c
 8005938:	4628      	mov	r0, r5
 800593a:	f003 fc2f 	bl	800919c <WM_InvalidateWindow>
 800593e:	4620      	mov	r0, r4
 8005940:	f008 ffd4 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8005944:	4628      	mov	r0, r5
 8005946:	2105      	movs	r1, #5
 8005948:	f002 fd6b 	bl	8008422 <WM_NotifyParent>
 800594c:	e002      	b.n	8005954 <SLIDER_SetValue+0x48>
 800594e:	4620      	mov	r0, r4
 8005950:	f008 ffcc 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8005954:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

08005956 <SLIDER_Callback>:
 8005956:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800595a:	6844      	ldr	r4, [r0, #4]
 800595c:	4605      	mov	r5, r0
 800595e:	4629      	mov	r1, r5
 8005960:	4620      	mov	r0, r4
 8005962:	f009 fbf5 	bl	800f150 <WIDGET_HandleActive>
 8005966:	2800      	cmp	r0, #0
 8005968:	f000 80a4 	beq.w	8005ab4 <SLIDER_Callback+0x15e>
 800596c:	682b      	ldr	r3, [r5, #0]
 800596e:	2b0f      	cmp	r3, #15
 8005970:	d006      	beq.n	8005980 <SLIDER_Callback+0x2a>
 8005972:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8005976:	d014      	beq.n	80059a2 <SLIDER_Callback+0x4c>
 8005978:	2b0e      	cmp	r3, #14
 800597a:	f040 8098 	bne.w	8005aae <SLIDER_Callback+0x158>
 800597e:	e086      	b.n	8005a8e <SLIDER_Callback+0x138>
 8005980:	4620      	mov	r0, r4
 8005982:	f008 ffa5 	bl	800e8d0 <GUI_ALLOC_LockH>
 8005986:	a902      	add	r1, sp, #8
 8005988:	f841 0d04 	str.w	r0, [r1, #-4]!
 800598c:	6cc5      	ldr	r5, [r0, #76]	; 0x4c
 800598e:	682d      	ldr	r5, [r5, #0]
 8005990:	4608      	mov	r0, r1
 8005992:	f008 ffab 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8005996:	2d00      	cmp	r5, #0
 8005998:	f000 808c 	beq.w	8005ab4 <SLIDER_Callback+0x15e>
 800599c:	4620      	mov	r0, r4
 800599e:	47a8      	blx	r5
 80059a0:	e088      	b.n	8005ab4 <SLIDER_Callback+0x15e>
 80059a2:	68ef      	ldr	r7, [r5, #12]
 80059a4:	2f00      	cmp	r7, #0
 80059a6:	f000 8082 	beq.w	8005aae <SLIDER_Callback+0x158>
 80059aa:	4620      	mov	r0, r4
 80059ac:	f008 ff90 	bl	800e8d0 <GUI_ALLOC_LockH>
 80059b0:	4603      	mov	r3, r0
 80059b2:	a802      	add	r0, sp, #8
 80059b4:	6d9e      	ldr	r6, [r3, #88]	; 0x58
 80059b6:	f840 3d04 	str.w	r3, [r0, #-4]!
 80059ba:	f8d3 9054 	ldr.w	r9, [r3, #84]	; 0x54
 80059be:	f8b3 b060 	ldrh.w	fp, [r3, #96]	; 0x60
 80059c2:	f8b3 8032 	ldrh.w	r8, [r3, #50]	; 0x32
 80059c6:	f8d3 a028 	ldr.w	sl, [r3, #40]	; 0x28
 80059ca:	f008 ff8f 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80059ce:	7a3a      	ldrb	r2, [r7, #8]
 80059d0:	2a00      	cmp	r2, #0
 80059d2:	d048      	beq.n	8005a66 <SLIDER_Callback+0x110>
 80059d4:	fa0f fb8b 	sxth.w	fp, fp
 80059d8:	2302      	movs	r3, #2
 80059da:	f008 0008 	and.w	r0, r8, #8
 80059de:	fb9b f2f3 	sdiv	r2, fp, r3
 80059e2:	b281      	uxth	r1, r0
 80059e4:	f102 0b01 	add.w	fp, r2, #1
 80059e8:	b109      	cbz	r1, 80059ee <SLIDER_Callback+0x98>
 80059ea:	687f      	ldr	r7, [r7, #4]
 80059ec:	e000      	b.n	80059f0 <SLIDER_Callback+0x9a>
 80059ee:	683f      	ldr	r7, [r7, #0]
 80059f0:	ebcb 0707 	rsb	r7, fp, r7
 80059f4:	4620      	mov	r0, r4
 80059f6:	f009 fb53 	bl	800f0a0 <WIDGET__GetWindowSizeX>
 80059fa:	2f00      	cmp	r7, #0
 80059fc:	dd12      	ble.n	8005a24 <SLIDER_Callback+0xce>
 80059fe:	eba0 024b 	sub.w	r2, r0, fp, lsl #1
 8005a02:	4297      	cmp	r7, r2
 8005a04:	da0d      	bge.n	8005a22 <SLIDER_Callback+0xcc>
 8005a06:	2a00      	cmp	r2, #0
 8005a08:	bf08      	it	eq
 8005a0a:	2201      	moveq	r2, #1
 8005a0c:	2302      	movs	r3, #2
 8005a0e:	ebc6 0909 	rsb	r9, r6, r9
 8005a12:	fb92 f0f3 	sdiv	r0, r2, r3
 8005a16:	fb09 0707 	mla	r7, r9, r7, r0
 8005a1a:	fbb7 f1f2 	udiv	r1, r7, r2
 8005a1e:	198e      	adds	r6, r1, r6
 8005a20:	e000      	b.n	8005a24 <SLIDER_Callback+0xce>
 8005a22:	464e      	mov	r6, r9
 8005a24:	4620      	mov	r0, r4
 8005a26:	f002 fdc7 	bl	80085b8 <WM_IsFocussable>
 8005a2a:	b110      	cbz	r0, 8005a32 <SLIDER_Callback+0xdc>
 8005a2c:	4620      	mov	r0, r4
 8005a2e:	f002 fb77 	bl	8008120 <WM_SetFocus>
 8005a32:	4620      	mov	r0, r4
 8005a34:	2101      	movs	r1, #1
 8005a36:	f002 fc47 	bl	80082c8 <WM_SetCapture>
 8005a3a:	f408 7880 	and.w	r8, r8, #256	; 0x100
 8005a3e:	4620      	mov	r0, r4
 8005a40:	4631      	mov	r1, r6
 8005a42:	f7ff ff63 	bl	800590c <SLIDER_SetValue>
 8005a46:	fa1f f288 	uxth.w	r2, r8
 8005a4a:	bb82      	cbnz	r2, 8005aae <SLIDER_Callback+0x158>
 8005a4c:	4620      	mov	r0, r4
 8005a4e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8005a52:	f00a 0a02 	and.w	sl, sl, #2
 8005a56:	f009 fb4a 	bl	800f0ee <WIDGET_OrState>
 8005a5a:	fa1f f38a 	uxth.w	r3, sl
 8005a5e:	b333      	cbz	r3, 8005aae <SLIDER_Callback+0x158>
 8005a60:	4620      	mov	r0, r4
 8005a62:	2101      	movs	r1, #1
 8005a64:	e010      	b.n	8005a88 <SLIDER_Callback+0x132>
 8005a66:	f408 7880 	and.w	r8, r8, #256	; 0x100
 8005a6a:	fa1f f088 	uxth.w	r0, r8
 8005a6e:	b1f0      	cbz	r0, 8005aae <SLIDER_Callback+0x158>
 8005a70:	f44f 7180 	mov.w	r1, #256	; 0x100
 8005a74:	4620      	mov	r0, r4
 8005a76:	f00a 0a02 	and.w	sl, sl, #2
 8005a7a:	f009 fb4d 	bl	800f118 <WIDGET_AndState>
 8005a7e:	fa1f f18a 	uxth.w	r1, sl
 8005a82:	b1a1      	cbz	r1, 8005aae <SLIDER_Callback+0x158>
 8005a84:	4620      	mov	r0, r4
 8005a86:	2102      	movs	r1, #2
 8005a88:	f002 fccb 	bl	8008422 <WM_NotifyParent>
 8005a8c:	e00f      	b.n	8005aae <SLIDER_Callback+0x158>
 8005a8e:	68ea      	ldr	r2, [r5, #12]
 8005a90:	6851      	ldr	r1, [r2, #4]
 8005a92:	6810      	ldr	r0, [r2, #0]
 8005a94:	2900      	cmp	r1, #0
 8005a96:	dd0a      	ble.n	8005aae <SLIDER_Callback+0x158>
 8005a98:	2810      	cmp	r0, #16
 8005a9a:	d005      	beq.n	8005aa8 <SLIDER_Callback+0x152>
 8005a9c:	2812      	cmp	r0, #18
 8005a9e:	d106      	bne.n	8005aae <SLIDER_Callback+0x158>
 8005aa0:	4620      	mov	r0, r4
 8005aa2:	f7ff ff16 	bl	80058d2 <SLIDER_Inc>
 8005aa6:	e002      	b.n	8005aae <SLIDER_Callback+0x158>
 8005aa8:	4620      	mov	r0, r4
 8005aaa:	f7ff fef5 	bl	8005898 <SLIDER_Dec>
 8005aae:	4628      	mov	r0, r5
 8005ab0:	f003 ff9e 	bl	80099f0 <WM_DefaultProc>
 8005ab4:	e8bd 8ffe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08005ab8 <SLIDER_SetRange>:
 8005ab8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005aba:	460c      	mov	r4, r1
 8005abc:	4616      	mov	r6, r2
 8005abe:	4605      	mov	r5, r0
 8005ac0:	b1b0      	cbz	r0, 8005af0 <SLIDER_SetRange+0x38>
 8005ac2:	f008 ff05 	bl	800e8d0 <GUI_ALLOC_LockH>
 8005ac6:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 8005ac8:	9001      	str	r0, [sp, #4]
 8005aca:	42a6      	cmp	r6, r4
 8005acc:	bfac      	ite	ge
 8005ace:	4632      	movge	r2, r6
 8005ad0:	4622      	movlt	r2, r4
 8005ad2:	42a1      	cmp	r1, r4
 8005ad4:	bfb8      	it	lt
 8005ad6:	65c4      	strlt	r4, [r0, #92]	; 0x5c
 8005ad8:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 8005ada:	6584      	str	r4, [r0, #88]	; 0x58
 8005adc:	4293      	cmp	r3, r2
 8005ade:	6542      	str	r2, [r0, #84]	; 0x54
 8005ae0:	bfc8      	it	gt
 8005ae2:	65c2      	strgt	r2, [r0, #92]	; 0x5c
 8005ae4:	a801      	add	r0, sp, #4
 8005ae6:	f008 ff01 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8005aea:	4628      	mov	r0, r5
 8005aec:	f003 fb56 	bl	800919c <WM_InvalidateWindow>
 8005af0:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

08005af2 <SLIDER_GetValue>:
 8005af2:	b513      	push	{r0, r1, r4, lr}
 8005af4:	4604      	mov	r4, r0
 8005af6:	b140      	cbz	r0, 8005b0a <SLIDER_GetValue+0x18>
 8005af8:	f008 feea 	bl	800e8d0 <GUI_ALLOC_LockH>
 8005afc:	ab02      	add	r3, sp, #8
 8005afe:	6dc4      	ldr	r4, [r0, #92]	; 0x5c
 8005b00:	f843 0d04 	str.w	r0, [r3, #-4]!
 8005b04:	4618      	mov	r0, r3
 8005b06:	f008 fef1 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8005b0a:	4620      	mov	r0, r4
 8005b0c:	bd1c      	pop	{r2, r3, r4, pc}

08005b0e <RADIO_SetText>:
 8005b0e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8005b12:	460c      	mov	r4, r1
 8005b14:	4616      	mov	r6, r2
 8005b16:	4607      	mov	r7, r0
 8005b18:	b1e0      	cbz	r0, 8005b54 <RADIO_SetText+0x46>
 8005b1a:	f008 fed9 	bl	800e8d0 <GUI_ALLOC_LockH>
 8005b1e:	4605      	mov	r5, r0
 8005b20:	a802      	add	r0, sp, #8
 8005b22:	f8d5 805c 	ldr.w	r8, [r5, #92]	; 0x5c
 8005b26:	f840 5d04 	str.w	r5, [r0, #-4]!
 8005b2a:	f8b5 5064 	ldrh.w	r5, [r5, #100]	; 0x64
 8005b2e:	f008 fedd 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8005b32:	42ae      	cmp	r6, r5
 8005b34:	d20e      	bcs.n	8005b54 <RADIO_SetText+0x46>
 8005b36:	b124      	cbz	r4, 8005b42 <RADIO_SetText+0x34>
 8005b38:	4620      	mov	r0, r4
 8005b3a:	f006 fd41 	bl	800c5c0 <GUI__strlen>
 8005b3e:	1c43      	adds	r3, r0, #1
 8005b40:	e000      	b.n	8005b44 <RADIO_SetText+0x36>
 8005b42:	4623      	mov	r3, r4
 8005b44:	4640      	mov	r0, r8
 8005b46:	4631      	mov	r1, r6
 8005b48:	4622      	mov	r2, r4
 8005b4a:	f000 fdc2 	bl	80066d2 <GUI_ARRAY_SetItem>
 8005b4e:	4638      	mov	r0, r7
 8005b50:	f003 fb24 	bl	800919c <WM_InvalidateWindow>
 8005b54:	e8bd 81fc 	ldmia.w	sp!, {r2, r3, r4, r5, r6, r7, r8, pc}

08005b58 <RADIO_SetFont>:
 8005b58:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005b5a:	460c      	mov	r4, r1
 8005b5c:	4605      	mov	r5, r0
 8005b5e:	b180      	cbz	r0, 8005b82 <RADIO_SetFont+0x2a>
 8005b60:	f008 feb6 	bl	800e8d0 <GUI_ALLOC_LockH>
 8005b64:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8005b66:	9001      	str	r0, [sp, #4]
 8005b68:	4294      	cmp	r4, r2
 8005b6a:	d007      	beq.n	8005b7c <RADIO_SetFont+0x24>
 8005b6c:	6404      	str	r4, [r0, #64]	; 0x40
 8005b6e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8005b70:	f000 fd30 	bl	80065d4 <GUI_ARRAY_GetNumItems>
 8005b74:	b110      	cbz	r0, 8005b7c <RADIO_SetFont+0x24>
 8005b76:	4628      	mov	r0, r5
 8005b78:	f003 fb10 	bl	800919c <WM_InvalidateWindow>
 8005b7c:	a801      	add	r0, sp, #4
 8005b7e:	f008 feb5 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8005b82:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08005b84 <RADIO_CreateIndirect>:
 8005b84:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005b86:	b089      	sub	sp, #36	; 0x24
 8005b88:	6944      	ldr	r4, [r0, #20]
 8005b8a:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8005b8e:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8005b92:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8005b96:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8005b9a:	9100      	str	r1, [sp, #0]
 8005b9c:	8a41      	ldrh	r1, [r0, #18]
 8005b9e:	9101      	str	r1, [sp, #4]
 8005ba0:	2100      	movs	r1, #0
 8005ba2:	9102      	str	r1, [sp, #8]
 8005ba4:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8005ba8:	9103      	str	r1, [sp, #12]
 8005baa:	b2e1      	uxtb	r1, r4
 8005bac:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8005bb0:	9104      	str	r1, [sp, #16]
 8005bb2:	9405      	str	r4, [sp, #20]
 8005bb4:	6984      	ldr	r4, [r0, #24]
 8005bb6:	18f9      	adds	r1, r7, r3
 8005bb8:	eb0e 0002 	add.w	r0, lr, r2
 8005bbc:	9406      	str	r4, [sp, #24]
 8005bbe:	4632      	mov	r2, r6
 8005bc0:	462b      	mov	r3, r5
 8005bc2:	f000 f837 	bl	8005c34 <RADIO_CreateUser>
 8005bc6:	b009      	add	sp, #36	; 0x24
 8005bc8:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005bca <RADIO__GetButtonSize>:
 8005bca:	b530      	push	{r4, r5, lr}
 8005bcc:	b08b      	sub	sp, #44	; 0x2c
 8005bce:	4605      	mov	r5, r0
 8005bd0:	f008 fe7e 	bl	800e8d0 <GUI_ALLOC_LockH>
 8005bd4:	ab0a      	add	r3, sp, #40	; 0x28
 8005bd6:	6d82      	ldr	r2, [r0, #88]	; 0x58
 8005bd8:	f843 0d28 	str.w	r0, [r3, #-40]!
 8005bdc:	6894      	ldr	r4, [r2, #8]
 8005bde:	4668      	mov	r0, sp
 8005be0:	f008 fe84 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8005be4:	2019      	movs	r0, #25
 8005be6:	9002      	str	r0, [sp, #8]
 8005be8:	9501      	str	r5, [sp, #4]
 8005bea:	6861      	ldr	r1, [r4, #4]
 8005bec:	a801      	add	r0, sp, #4
 8005bee:	4788      	blx	r1
 8005bf0:	b00b      	add	sp, #44	; 0x2c
 8005bf2:	bd30      	pop	{r4, r5, pc}

08005bf4 <RADIO__SetValue>:
 8005bf4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005bf6:	460c      	mov	r4, r1
 8005bf8:	4605      	mov	r5, r0
 8005bfa:	f008 fe69 	bl	800e8d0 <GUI_ALLOC_LockH>
 8005bfe:	f8b0 2064 	ldrh.w	r2, [r0, #100]	; 0x64
 8005c02:	f9b0 1060 	ldrsh.w	r1, [r0, #96]	; 0x60
 8005c06:	9001      	str	r0, [sp, #4]
 8005c08:	4294      	cmp	r4, r2
 8005c0a:	bfa8      	it	ge
 8005c0c:	1e54      	subge	r4, r2, #1
 8005c0e:	428c      	cmp	r4, r1
 8005c10:	d00c      	beq.n	8005c2c <RADIO__SetValue+0x38>
 8005c12:	f8a0 4060 	strh.w	r4, [r0, #96]	; 0x60
 8005c16:	4628      	mov	r0, r5
 8005c18:	f003 fac0 	bl	800919c <WM_InvalidateWindow>
 8005c1c:	a801      	add	r0, sp, #4
 8005c1e:	f008 fe65 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8005c22:	4628      	mov	r0, r5
 8005c24:	2105      	movs	r1, #5
 8005c26:	f002 fbfc 	bl	8008422 <WM_NotifyParent>
 8005c2a:	e002      	b.n	8005c32 <RADIO__SetValue+0x3e>
 8005c2c:	a801      	add	r0, sp, #4
 8005c2e:	f008 fe5d 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8005c32:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08005c34 <RADIO_CreateUser>:
 8005c34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005c38:	4c35      	ldr	r4, [pc, #212]	; (8005d10 <RADIO_CreateUser+0xdc>)
 8005c3a:	b087      	sub	sp, #28
 8005c3c:	6924      	ldr	r4, [r4, #16]
 8005c3e:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8005c40:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8005c42:	f8dd a040 	ldr.w	sl, [sp, #64]	; 0x40
 8005c46:	8866      	ldrh	r6, [r4, #2]
 8005c48:	2d00      	cmp	r5, #0
 8005c4a:	bfcc      	ite	gt
 8005c4c:	46a9      	movgt	r9, r5
 8005c4e:	f04f 0914 	movle.w	r9, #20
 8005c52:	2f00      	cmp	r7, #0
 8005c54:	bfd8      	it	le
 8005c56:	2702      	movle	r7, #2
 8005c58:	b91b      	cbnz	r3, 8005c62 <RADIO_CreateUser+0x2e>
 8005c5a:	3604      	adds	r6, #4
 8005c5c:	1e7b      	subs	r3, r7, #1
 8005c5e:	fb09 6303 	mla	r3, r9, r3, r6
 8005c62:	b90a      	cbnz	r2, 8005c68 <RADIO_CreateUser+0x34>
 8005c64:	8822      	ldrh	r2, [r4, #0]
 8005c66:	3204      	adds	r2, #4
 8005c68:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8005c6a:	f8cd a000 	str.w	sl, [sp]
 8005c6e:	f044 0601 	orr.w	r6, r4, #1
 8005c72:	4c28      	ldr	r4, [pc, #160]	; (8005d14 <RADIO_CreateUser+0xe0>)
 8005c74:	9601      	str	r6, [sp, #4]
 8005c76:	9402      	str	r4, [sp, #8]
 8005c78:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8005c7a:	343c      	adds	r4, #60	; 0x3c
 8005c7c:	9403      	str	r4, [sp, #12]
 8005c7e:	f003 fb49 	bl	8009314 <WM_CreateWindowAsChild>
 8005c82:	4606      	mov	r6, r0
 8005c84:	2800      	cmp	r0, #0
 8005c86:	d03f      	beq.n	8005d08 <RADIO_CreateUser+0xd4>
 8005c88:	f000 fd87 	bl	800679a <GUI_ARRAY_Create>
 8005c8c:	2400      	movs	r4, #0
 8005c8e:	4605      	mov	r5, r0
 8005c90:	2100      	movs	r1, #0
 8005c92:	4628      	mov	r0, r5
 8005c94:	460a      	mov	r2, r1
 8005c96:	3401      	adds	r4, #1
 8005c98:	f000 fcaa 	bl	80065f0 <GUI_ARRAY_AddItem>
 8005c9c:	42bc      	cmp	r4, r7
 8005c9e:	dbf7      	blt.n	8005c90 <RADIO_CreateUser+0x5c>
 8005ca0:	4630      	mov	r0, r6
 8005ca2:	f008 fe15 	bl	800e8d0 <GUI_ALLOC_LockH>
 8005ca6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005ca8:	f8df b06c 	ldr.w	fp, [pc, #108]	; 8005d18 <RADIO_CreateUser+0xe4>
 8005cac:	65c5      	str	r5, [r0, #92]	; 0x5c
 8005cae:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8005cb2:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8005cb4:	9005      	str	r0, [sp, #20]
 8005cb6:	2a00      	cmp	r2, #0
 8005cb8:	bf14      	ite	ne
 8005cba:	f44f 7288 	movne.w	r2, #272	; 0x110
 8005cbe:	2210      	moveq	r2, #16
 8005cc0:	f009 fa3e 	bl	800f140 <WIDGET__Init>
 8005cc4:	4d12      	ldr	r5, [pc, #72]	; (8005d10 <RADIO_CreateUser+0xdc>)
 8005cc6:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8005cca:	f8db 0000 	ldr.w	r0, [fp]
 8005cce:	f8c8 0058 	str.w	r0, [r8, #88]	; 0x58
 8005cd2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005cd4:	f108 0434 	add.w	r4, r8, #52	; 0x34
 8005cd8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005cda:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005cdc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005cde:	6829      	ldr	r1, [r5, #0]
 8005ce0:	4650      	mov	r0, sl
 8005ce2:	6021      	str	r1, [r4, #0]
 8005ce4:	f002 fd78 	bl	80087d8 <WM_GetBkColor>
 8005ce8:	f8c8 0034 	str.w	r0, [r8, #52]	; 0x34
 8005cec:	a806      	add	r0, sp, #24
 8005cee:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 8005cf2:	f8a3 7064 	strh.w	r7, [r3, #100]	; 0x64
 8005cf6:	f8a3 9062 	strh.w	r9, [r3, #98]	; 0x62
 8005cfa:	f008 fdf7 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8005cfe:	f8db 2000 	ldr.w	r2, [fp]
 8005d02:	4630      	mov	r0, r6
 8005d04:	6851      	ldr	r1, [r2, #4]
 8005d06:	4788      	blx	r1
 8005d08:	4630      	mov	r0, r6
 8005d0a:	b007      	add	sp, #28
 8005d0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005d10:	20000038 	.word	0x20000038
 8005d14:	08005d8d 	.word	0x08005d8d
 8005d18:	2000005c 	.word	0x2000005c

08005d1c <RADIO_SetValue>:
 8005d1c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005d1e:	460c      	mov	r4, r1
 8005d20:	4605      	mov	r5, r0
 8005d22:	b1a8      	cbz	r0, 8005d50 <RADIO_SetValue+0x34>
 8005d24:	f008 fdd4 	bl	800e8d0 <GUI_ALLOC_LockH>
 8005d28:	ab02      	add	r3, sp, #8
 8005d2a:	f890 6066 	ldrb.w	r6, [r0, #102]	; 0x66
 8005d2e:	f843 0d04 	str.w	r0, [r3, #-4]!
 8005d32:	4618      	mov	r0, r3
 8005d34:	f008 fdda 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8005d38:	4628      	mov	r0, r5
 8005d3a:	b12e      	cbz	r6, 8005d48 <RADIO_SetValue+0x2c>
 8005d3c:	4905      	ldr	r1, [pc, #20]	; (8005d54 <RADIO_SetValue+0x38>)
 8005d3e:	680a      	ldr	r2, [r1, #0]
 8005d40:	b112      	cbz	r2, 8005d48 <RADIO_SetValue+0x2c>
 8005d42:	4621      	mov	r1, r4
 8005d44:	4790      	blx	r2
 8005d46:	e003      	b.n	8005d50 <RADIO_SetValue+0x34>
 8005d48:	ea24 71e4 	bic.w	r1, r4, r4, asr #31
 8005d4c:	f7ff ff52 	bl	8005bf4 <RADIO__SetValue>
 8005d50:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
 8005d52:	bf00      	nop
 8005d54:	2000dd64 	.word	0x2000dd64

08005d58 <RADIO_AddValue>:
 8005d58:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005d5a:	460c      	mov	r4, r1
 8005d5c:	4606      	mov	r6, r0
 8005d5e:	b168      	cbz	r0, 8005d7c <RADIO_AddValue+0x24>
 8005d60:	f008 fdb6 	bl	800e8d0 <GUI_ALLOC_LockH>
 8005d64:	4602      	mov	r2, r0
 8005d66:	a802      	add	r0, sp, #8
 8005d68:	f9b2 5060 	ldrsh.w	r5, [r2, #96]	; 0x60
 8005d6c:	f840 2d04 	str.w	r2, [r0, #-4]!
 8005d70:	f008 fdbc 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8005d74:	4630      	mov	r0, r6
 8005d76:	1929      	adds	r1, r5, r4
 8005d78:	f7ff ffd0 	bl	8005d1c <RADIO_SetValue>
 8005d7c:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

08005d7e <RADIO_Inc>:
 8005d7e:	2101      	movs	r1, #1
 8005d80:	f7ff bfea 	b.w	8005d58 <RADIO_AddValue>

08005d84 <RADIO_Dec>:
 8005d84:	f04f 31ff 	mov.w	r1, #4294967295
 8005d88:	f7ff bfe6 	b.w	8005d58 <RADIO_AddValue>

08005d8c <RADIO_Callback>:
 8005d8c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005d90:	6844      	ldr	r4, [r0, #4]
 8005d92:	4605      	mov	r5, r0
 8005d94:	4629      	mov	r1, r5
 8005d96:	4620      	mov	r0, r4
 8005d98:	f009 f9da 	bl	800f150 <WIDGET_HandleActive>
 8005d9c:	2800      	cmp	r0, #0
 8005d9e:	f000 809c 	beq.w	8005eda <RADIO_Callback+0x14e>
 8005da2:	682b      	ldr	r3, [r5, #0]
 8005da4:	2b0f      	cmp	r3, #15
 8005da6:	d00e      	beq.n	8005dc6 <RADIO_Callback+0x3a>
 8005da8:	dc06      	bgt.n	8005db8 <RADIO_Callback+0x2c>
 8005daa:	2b0b      	cmp	r3, #11
 8005dac:	f000 8086 	beq.w	8005ebc <RADIO_Callback+0x130>
 8005db0:	2b0e      	cmp	r3, #14
 8005db2:	f040 808f 	bne.w	8005ed4 <RADIO_Callback+0x148>
 8005db6:	e06d      	b.n	8005e94 <RADIO_Callback+0x108>
 8005db8:	2b2b      	cmp	r3, #43	; 0x2b
 8005dba:	d014      	beq.n	8005de6 <RADIO_Callback+0x5a>
 8005dbc:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8005dc0:	f040 8088 	bne.w	8005ed4 <RADIO_Callback+0x148>
 8005dc4:	e01c      	b.n	8005e00 <RADIO_Callback+0x74>
 8005dc6:	4620      	mov	r0, r4
 8005dc8:	f008 fd82 	bl	800e8d0 <GUI_ALLOC_LockH>
 8005dcc:	ab02      	add	r3, sp, #8
 8005dce:	f843 0d04 	str.w	r0, [r3, #-4]!
 8005dd2:	6d85      	ldr	r5, [r0, #88]	; 0x58
 8005dd4:	682d      	ldr	r5, [r5, #0]
 8005dd6:	4618      	mov	r0, r3
 8005dd8:	f008 fd88 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8005ddc:	2d00      	cmp	r5, #0
 8005dde:	d07c      	beq.n	8005eda <RADIO_Callback+0x14e>
 8005de0:	4620      	mov	r0, r4
 8005de2:	47a8      	blx	r5
 8005de4:	e079      	b.n	8005eda <RADIO_Callback+0x14e>
 8005de6:	4620      	mov	r0, r4
 8005de8:	f008 fd72 	bl	800e8d0 <GUI_ALLOC_LockH>
 8005dec:	a902      	add	r1, sp, #8
 8005dee:	f841 0d04 	str.w	r0, [r1, #-4]!
 8005df2:	f890 0066 	ldrb.w	r0, [r0, #102]	; 0x66
 8005df6:	60e8      	str	r0, [r5, #12]
 8005df8:	4608      	mov	r0, r1
 8005dfa:	f008 fd77 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8005dfe:	e06c      	b.n	8005eda <RADIO_Callback+0x14e>
 8005e00:	4620      	mov	r0, r4
 8005e02:	68ee      	ldr	r6, [r5, #12]
 8005e04:	f008 fd64 	bl	800e8d0 <GUI_ALLOC_LockH>
 8005e08:	9001      	str	r0, [sp, #4]
 8005e0a:	f890 3066 	ldrb.w	r3, [r0, #102]	; 0x66
 8005e0e:	f8b0 7062 	ldrh.w	r7, [r0, #98]	; 0x62
 8005e12:	b143      	cbz	r3, 8005e26 <RADIO_Callback+0x9a>
 8005e14:	f9b0 9006 	ldrsh.w	r9, [r0, #6]
 8005e18:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8005e1c:	ebc3 0009 	rsb	r0, r3, r9
 8005e20:	f100 0901 	add.w	r9, r0, #1
 8005e24:	e006      	b.n	8005e34 <RADIO_Callback+0xa8>
 8005e26:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8005e28:	6882      	ldr	r2, [r0, #8]
 8005e2a:	4620      	mov	r0, r4
 8005e2c:	6811      	ldr	r1, [r2, #0]
 8005e2e:	4788      	blx	r1
 8005e30:	f100 0904 	add.w	r9, r0, #4
 8005e34:	a802      	add	r0, sp, #8
 8005e36:	f850 2d04 	ldr.w	r2, [r0, #-4]!
 8005e3a:	f8b2 8030 	ldrh.w	r8, [r2, #48]	; 0x30
 8005e3e:	f008 fd55 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8005e42:	68e9      	ldr	r1, [r5, #12]
 8005e44:	b1a1      	cbz	r1, 8005e70 <RADIO_Callback+0xe4>
 8005e46:	7a33      	ldrb	r3, [r6, #8]
 8005e48:	b1ab      	cbz	r3, 8005e76 <RADIO_Callback+0xea>
 8005e4a:	6876      	ldr	r6, [r6, #4]
 8005e4c:	fb96 f1f7 	sdiv	r1, r6, r7
 8005e50:	fb07 6711 	mls	r7, r7, r1, r6
 8005e54:	454f      	cmp	r7, r9
 8005e56:	dc02      	bgt.n	8005e5e <RADIO_Callback+0xd2>
 8005e58:	4620      	mov	r0, r4
 8005e5a:	f7ff ff5f 	bl	8005d1c <RADIO_SetValue>
 8005e5e:	4620      	mov	r0, r4
 8005e60:	f002 fbaa 	bl	80085b8 <WM_IsFocussable>
 8005e64:	b150      	cbz	r0, 8005e7c <RADIO_Callback+0xf0>
 8005e66:	4620      	mov	r0, r4
 8005e68:	f002 f95a 	bl	8008120 <WM_SetFocus>
 8005e6c:	2600      	movs	r6, #0
 8005e6e:	e006      	b.n	8005e7e <RADIO_Callback+0xf2>
 8005e70:	460e      	mov	r6, r1
 8005e72:	2103      	movs	r1, #3
 8005e74:	e004      	b.n	8005e80 <RADIO_Callback+0xf4>
 8005e76:	2601      	movs	r6, #1
 8005e78:	2102      	movs	r1, #2
 8005e7a:	e001      	b.n	8005e80 <RADIO_Callback+0xf4>
 8005e7c:	4606      	mov	r6, r0
 8005e7e:	2101      	movs	r1, #1
 8005e80:	4620      	mov	r0, r4
 8005e82:	f002 face 	bl	8008422 <WM_NotifyParent>
 8005e86:	2e01      	cmp	r6, #1
 8005e88:	d124      	bne.n	8005ed4 <RADIO_Callback+0x148>
 8005e8a:	fa0f f088 	sxth.w	r0, r8
 8005e8e:	f007 fa89 	bl	800d3a4 <GUI_StoreKey>
 8005e92:	e01f      	b.n	8005ed4 <RADIO_Callback+0x148>
 8005e94:	68e8      	ldr	r0, [r5, #12]
 8005e96:	6842      	ldr	r2, [r0, #4]
 8005e98:	2a00      	cmp	r2, #0
 8005e9a:	dd1b      	ble.n	8005ed4 <RADIO_Callback+0x148>
 8005e9c:	6801      	ldr	r1, [r0, #0]
 8005e9e:	3910      	subs	r1, #16
 8005ea0:	2903      	cmp	r1, #3
 8005ea2:	d817      	bhi.n	8005ed4 <RADIO_Callback+0x148>
 8005ea4:	e8df f001 	tbb	[pc, r1]
 8005ea8:	02020606 	.word	0x02020606
 8005eac:	4620      	mov	r0, r4
 8005eae:	f7ff ff66 	bl	8005d7e <RADIO_Inc>
 8005eb2:	e00f      	b.n	8005ed4 <RADIO_Callback+0x148>
 8005eb4:	4620      	mov	r0, r4
 8005eb6:	f7ff ff65 	bl	8005d84 <RADIO_Dec>
 8005eba:	e00b      	b.n	8005ed4 <RADIO_Callback+0x148>
 8005ebc:	4620      	mov	r0, r4
 8005ebe:	f008 fd07 	bl	800e8d0 <GUI_ALLOC_LockH>
 8005ec2:	ac02      	add	r4, sp, #8
 8005ec4:	f844 0d04 	str.w	r0, [r4, #-4]!
 8005ec8:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8005eca:	f000 fbda 	bl	8006682 <GUI_ARRAY_Delete>
 8005ece:	4620      	mov	r0, r4
 8005ed0:	f008 fd0c 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8005ed4:	4628      	mov	r0, r5
 8005ed6:	f003 fd8b 	bl	80099f0 <WM_DefaultProc>
 8005eda:	e8bd 83fe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}

08005ede <RADIO_GetValue>:
 8005ede:	b513      	push	{r0, r1, r4, lr}
 8005ee0:	4604      	mov	r4, r0
 8005ee2:	b148      	cbz	r0, 8005ef8 <RADIO_GetValue+0x1a>
 8005ee4:	f008 fcf4 	bl	800e8d0 <GUI_ALLOC_LockH>
 8005ee8:	ab02      	add	r3, sp, #8
 8005eea:	f9b0 4060 	ldrsh.w	r4, [r0, #96]	; 0x60
 8005eee:	f843 0d04 	str.w	r0, [r3, #-4]!
 8005ef2:	4618      	mov	r0, r3
 8005ef4:	f008 fcfa 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8005ef8:	4620      	mov	r0, r4
 8005efa:	bd1c      	pop	{r2, r3, r4, pc}

08005efc <PROGBAR_DrawSkinFlex>:
 8005efc:	6843      	ldr	r3, [r0, #4]
 8005efe:	2b0b      	cmp	r3, #11
 8005f00:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005f02:	4604      	mov	r4, r0
 8005f04:	6a05      	ldr	r5, [r0, #32]
 8005f06:	d006      	beq.n	8005f16 <PROGBAR_DrawSkinFlex+0x1a>
 8005f08:	2b12      	cmp	r3, #18
 8005f0a:	f000 808f 	beq.w	800602c <PROGBAR_DrawSkinFlex+0x130>
 8005f0e:	2b05      	cmp	r3, #5
 8005f10:	f040 809b 	bne.w	800604a <PROGBAR_DrawSkinFlex+0x14e>
 8005f14:	e01c      	b.n	8005f50 <PROGBAR_DrawSkinFlex+0x54>
 8005f16:	484e      	ldr	r0, [pc, #312]	; (8006050 <PROGBAR_DrawSkinFlex+0x154>)
 8005f18:	6a00      	ldr	r0, [r0, #32]
 8005f1a:	f007 f913 	bl	800d144 <GUI_SetColor>
 8005f1e:	6960      	ldr	r0, [r4, #20]
 8005f20:	6921      	ldr	r1, [r4, #16]
 8005f22:	69a2      	ldr	r2, [r4, #24]
 8005f24:	f007 fb58 	bl	800d5d8 <GUI_DrawHLine>
 8005f28:	69e0      	ldr	r0, [r4, #28]
 8005f2a:	6921      	ldr	r1, [r4, #16]
 8005f2c:	69a2      	ldr	r2, [r4, #24]
 8005f2e:	f007 fb53 	bl	800d5d8 <GUI_DrawHLine>
 8005f32:	6963      	ldr	r3, [r4, #20]
 8005f34:	69e2      	ldr	r2, [r4, #28]
 8005f36:	6920      	ldr	r0, [r4, #16]
 8005f38:	1c59      	adds	r1, r3, #1
 8005f3a:	3a01      	subs	r2, #1
 8005f3c:	f007 fb0a 	bl	800d554 <GUI_DrawVLine>
 8005f40:	6961      	ldr	r1, [r4, #20]
 8005f42:	69e3      	ldr	r3, [r4, #28]
 8005f44:	69a0      	ldr	r0, [r4, #24]
 8005f46:	3101      	adds	r1, #1
 8005f48:	1e5a      	subs	r2, r3, #1
 8005f4a:	f007 fb03 	bl	800d554 <GUI_DrawVLine>
 8005f4e:	e07c      	b.n	800604a <PROGBAR_DrawSkinFlex+0x14e>
 8005f50:	6828      	ldr	r0, [r5, #0]
 8005f52:	2800      	cmp	r0, #0
 8005f54:	d034      	beq.n	8005fc0 <PROGBAR_DrawSkinFlex+0xc4>
 8005f56:	6922      	ldr	r2, [r4, #16]
 8005f58:	69a7      	ldr	r7, [r4, #24]
 8005f5a:	686b      	ldr	r3, [r5, #4]
 8005f5c:	493c      	ldr	r1, [pc, #240]	; (8006050 <PROGBAR_DrawSkinFlex+0x154>)
 8005f5e:	1abe      	subs	r6, r7, r2
 8005f60:	1c70      	adds	r0, r6, #1
 8005f62:	1046      	asrs	r6, r0, #1
 8005f64:	b923      	cbnz	r3, 8005f70 <PROGBAR_DrawSkinFlex+0x74>
 8005f66:	690f      	ldr	r7, [r1, #16]
 8005f68:	6948      	ldr	r0, [r1, #20]
 8005f6a:	f04f 0c01 	mov.w	ip, #1
 8005f6e:	e004      	b.n	8005f7a <PROGBAR_DrawSkinFlex+0x7e>
 8005f70:	680f      	ldr	r7, [r1, #0]
 8005f72:	6848      	ldr	r0, [r1, #4]
 8005f74:	2301      	movs	r3, #1
 8005f76:	f04f 0c00 	mov.w	ip, #0
 8005f7a:	9001      	str	r0, [sp, #4]
 8005f7c:	9700      	str	r7, [sp, #0]
 8005f7e:	6961      	ldr	r1, [r4, #20]
 8005f80:	69e7      	ldr	r7, [r4, #28]
 8005f82:	1c50      	adds	r0, r2, #1
 8005f84:	1afb      	subs	r3, r7, r3
 8005f86:	4461      	add	r1, ip
 8005f88:	1992      	adds	r2, r2, r6
 8005f8a:	f007 fc67 	bl	800d85c <GUI_DrawGradientH>
 8005f8e:	686b      	ldr	r3, [r5, #4]
 8005f90:	4d2f      	ldr	r5, [pc, #188]	; (8006050 <PROGBAR_DrawSkinFlex+0x154>)
 8005f92:	b91b      	cbnz	r3, 8005f9c <PROGBAR_DrawSkinFlex+0xa0>
 8005f94:	69af      	ldr	r7, [r5, #24]
 8005f96:	69ed      	ldr	r5, [r5, #28]
 8005f98:	2101      	movs	r1, #1
 8005f9a:	e003      	b.n	8005fa4 <PROGBAR_DrawSkinFlex+0xa8>
 8005f9c:	68af      	ldr	r7, [r5, #8]
 8005f9e:	68ed      	ldr	r5, [r5, #12]
 8005fa0:	2301      	movs	r3, #1
 8005fa2:	2100      	movs	r1, #0
 8005fa4:	6922      	ldr	r2, [r4, #16]
 8005fa6:	18b0      	adds	r0, r6, r2
 8005fa8:	6966      	ldr	r6, [r4, #20]
 8005faa:	69a2      	ldr	r2, [r4, #24]
 8005fac:	69e4      	ldr	r4, [r4, #28]
 8005fae:	9700      	str	r7, [sp, #0]
 8005fb0:	9501      	str	r5, [sp, #4]
 8005fb2:	3001      	adds	r0, #1
 8005fb4:	1989      	adds	r1, r1, r6
 8005fb6:	3a01      	subs	r2, #1
 8005fb8:	1ae3      	subs	r3, r4, r3
 8005fba:	f007 fc4f 	bl	800d85c <GUI_DrawGradientH>
 8005fbe:	e044      	b.n	800604a <PROGBAR_DrawSkinFlex+0x14e>
 8005fc0:	69e7      	ldr	r7, [r4, #28]
 8005fc2:	6963      	ldr	r3, [r4, #20]
 8005fc4:	4e22      	ldr	r6, [pc, #136]	; (8006050 <PROGBAR_DrawSkinFlex+0x154>)
 8005fc6:	1af9      	subs	r1, r7, r3
 8005fc8:	1c4a      	adds	r2, r1, #1
 8005fca:	1057      	asrs	r7, r2, #1
 8005fcc:	686a      	ldr	r2, [r5, #4]
 8005fce:	b922      	cbnz	r2, 8005fda <PROGBAR_DrawSkinFlex+0xde>
 8005fd0:	f8d6 c000 	ldr.w	ip, [r6]
 8005fd4:	6871      	ldr	r1, [r6, #4]
 8005fd6:	2001      	movs	r0, #1
 8005fd8:	e003      	b.n	8005fe2 <PROGBAR_DrawSkinFlex+0xe6>
 8005fda:	f8d6 c010 	ldr.w	ip, [r6, #16]
 8005fde:	6971      	ldr	r1, [r6, #20]
 8005fe0:	2201      	movs	r2, #1
 8005fe2:	69a6      	ldr	r6, [r4, #24]
 8005fe4:	f8cd c000 	str.w	ip, [sp]
 8005fe8:	9101      	str	r1, [sp, #4]
 8005fea:	6921      	ldr	r1, [r4, #16]
 8005fec:	1ab2      	subs	r2, r6, r2
 8005fee:	1840      	adds	r0, r0, r1
 8005ff0:	1c59      	adds	r1, r3, #1
 8005ff2:	19db      	adds	r3, r3, r7
 8005ff4:	f007 fc00 	bl	800d7f8 <GUI_DrawGradientV>
 8005ff8:	686a      	ldr	r2, [r5, #4]
 8005ffa:	4d15      	ldr	r5, [pc, #84]	; (8006050 <PROGBAR_DrawSkinFlex+0x154>)
 8005ffc:	b91a      	cbnz	r2, 8006006 <PROGBAR_DrawSkinFlex+0x10a>
 8005ffe:	68ae      	ldr	r6, [r5, #8]
 8006000:	68ed      	ldr	r5, [r5, #12]
 8006002:	2001      	movs	r0, #1
 8006004:	e003      	b.n	800600e <PROGBAR_DrawSkinFlex+0x112>
 8006006:	69ae      	ldr	r6, [r5, #24]
 8006008:	69ed      	ldr	r5, [r5, #28]
 800600a:	2201      	movs	r2, #1
 800600c:	2000      	movs	r0, #0
 800600e:	6963      	ldr	r3, [r4, #20]
 8006010:	f8d4 e010 	ldr.w	lr, [r4, #16]
 8006014:	18f9      	adds	r1, r7, r3
 8006016:	69a7      	ldr	r7, [r4, #24]
 8006018:	69e3      	ldr	r3, [r4, #28]
 800601a:	9600      	str	r6, [sp, #0]
 800601c:	9501      	str	r5, [sp, #4]
 800601e:	4470      	add	r0, lr
 8006020:	3101      	adds	r1, #1
 8006022:	1aba      	subs	r2, r7, r2
 8006024:	3b01      	subs	r3, #1
 8006026:	f007 fbe7 	bl	800d7f8 <GUI_DrawGradientV>
 800602a:	e00e      	b.n	800604a <PROGBAR_DrawSkinFlex+0x14e>
 800602c:	682b      	ldr	r3, [r5, #0]
 800602e:	b963      	cbnz	r3, 800604a <PROGBAR_DrawSkinFlex+0x14e>
 8006030:	4907      	ldr	r1, [pc, #28]	; (8006050 <PROGBAR_DrawSkinFlex+0x154>)
 8006032:	68ad      	ldr	r5, [r5, #8]
 8006034:	6a48      	ldr	r0, [r1, #36]	; 0x24
 8006036:	f007 f885 	bl	800d144 <GUI_SetColor>
 800603a:	2002      	movs	r0, #2
 800603c:	f007 f84a 	bl	800d0d4 <GUI_SetTextMode>
 8006040:	4628      	mov	r0, r5
 8006042:	6921      	ldr	r1, [r4, #16]
 8006044:	6962      	ldr	r2, [r4, #20]
 8006046:	f007 fe61 	bl	800dd0c <GUI_DispStringAt>
 800604a:	2000      	movs	r0, #0
 800604c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800604e:	bf00      	nop
 8006050:	20000060 	.word	0x20000060

08006054 <_Create>:
 8006054:	b530      	push	{r4, r5, lr}
 8006056:	b08b      	sub	sp, #44	; 0x2c
 8006058:	4605      	mov	r5, r0
 800605a:	f008 fc39 	bl	800e8d0 <GUI_ALLOC_LockH>
 800605e:	ab0a      	add	r3, sp, #40	; 0x28
 8006060:	6e42      	ldr	r2, [r0, #100]	; 0x64
 8006062:	f843 0d28 	str.w	r0, [r3, #-40]!
 8006066:	4668      	mov	r0, sp
 8006068:	6894      	ldr	r4, [r2, #8]
 800606a:	f008 fc3f 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800606e:	2000      	movs	r0, #0
 8006070:	9002      	str	r0, [sp, #8]
 8006072:	a80a      	add	r0, sp, #40	; 0x28
 8006074:	6821      	ldr	r1, [r4, #0]
 8006076:	f840 5d24 	str.w	r5, [r0, #-36]!
 800607a:	4788      	blx	r1
 800607c:	b00b      	add	sp, #44	; 0x2c
 800607e:	bd30      	pop	{r4, r5, pc}

08006080 <_Paint>:
 8006080:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006084:	b093      	sub	sp, #76	; 0x4c
 8006086:	4604      	mov	r4, r0
 8006088:	f008 fc22 	bl	800e8d0 <GUI_ALLOC_LockH>
 800608c:	f890 2068 	ldrb.w	r2, [r0, #104]	; 0x68
 8006090:	6e06      	ldr	r6, [r0, #96]	; 0x60
 8006092:	9000      	str	r0, [sp, #0]
 8006094:	f002 0101 	and.w	r1, r2, #1
 8006098:	9106      	str	r1, [sp, #24]
 800609a:	6b41      	ldr	r1, [r0, #52]	; 0x34
 800609c:	f8d0 904c 	ldr.w	r9, [r0, #76]	; 0x4c
 80060a0:	f000 f939 	bl	8006316 <PROGBAR__Value2Pos>
 80060a4:	4607      	mov	r7, r0
 80060a6:	4668      	mov	r0, sp
 80060a8:	f008 fc20 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80060ac:	f10d 0808 	add.w	r8, sp, #8
 80060b0:	a806      	add	r0, sp, #24
 80060b2:	9011      	str	r0, [sp, #68]	; 0x44
 80060b4:	4641      	mov	r1, r8
 80060b6:	4620      	mov	r0, r4
 80060b8:	f002 fb7d 	bl	80087b6 <WM_GetClientRectEx>
 80060bc:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 80060c0:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 80060c4:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 80060c8:	f9bd 000e 	ldrsh.w	r0, [sp, #14]
 80060cc:	930d      	str	r3, [sp, #52]	; 0x34
 80060ce:	250b      	movs	r5, #11
 80060d0:	950a      	str	r5, [sp, #40]	; 0x28
 80060d2:	920e      	str	r2, [sp, #56]	; 0x38
 80060d4:	910f      	str	r1, [sp, #60]	; 0x3c
 80060d6:	9010      	str	r0, [sp, #64]	; 0x40
 80060d8:	9409      	str	r4, [sp, #36]	; 0x24
 80060da:	a809      	add	r0, sp, #36	; 0x24
 80060dc:	47b0      	blx	r6
 80060de:	e898 0003 	ldmia.w	r8, {r0, r1}
 80060e2:	ad04      	add	r5, sp, #16
 80060e4:	e885 0003 	stmia.w	r5, {r0, r1}
 80060e8:	2201      	movs	r2, #1
 80060ea:	4629      	mov	r1, r5
 80060ec:	4628      	mov	r0, r5
 80060ee:	f006 fb01 	bl	800c6f4 <GUI__ReduceRect>
 80060f2:	4628      	mov	r0, r5
 80060f4:	f001 ff4c 	bl	8007f90 <WM_SetUserClipRect>
 80060f8:	f9bd 0008 	ldrsh.w	r0, [sp, #8]
 80060fc:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8006100:	9906      	ldr	r1, [sp, #24]
 8006102:	9409      	str	r4, [sp, #36]	; 0x24
 8006104:	2305      	movs	r3, #5
 8006106:	930a      	str	r3, [sp, #40]	; 0x28
 8006108:	900d      	str	r0, [sp, #52]	; 0x34
 800610a:	920e      	str	r2, [sp, #56]	; 0x38
 800610c:	b129      	cbz	r1, 800611a <_Paint+0x9a>
 800610e:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 8006112:	19d2      	adds	r2, r2, r7
 8006114:	910f      	str	r1, [sp, #60]	; 0x3c
 8006116:	9210      	str	r2, [sp, #64]	; 0x40
 8006118:	e004      	b.n	8006124 <_Paint+0xa4>
 800611a:	19c3      	adds	r3, r0, r7
 800611c:	f9bd 000e 	ldrsh.w	r0, [sp, #14]
 8006120:	930f      	str	r3, [sp, #60]	; 0x3c
 8006122:	9010      	str	r0, [sp, #64]	; 0x40
 8006124:	2300      	movs	r3, #0
 8006126:	9307      	str	r3, [sp, #28]
 8006128:	a809      	add	r0, sp, #36	; 0x24
 800612a:	47b0      	blx	r6
 800612c:	9906      	ldr	r1, [sp, #24]
 800612e:	f9bd 0008 	ldrsh.w	r0, [sp, #8]
 8006132:	b131      	cbz	r1, 8006142 <_Paint+0xc2>
 8006134:	f9bd 100a 	ldrsh.w	r1, [sp, #10]
 8006138:	900d      	str	r0, [sp, #52]	; 0x34
 800613a:	19cf      	adds	r7, r1, r7
 800613c:	3701      	adds	r7, #1
 800613e:	970e      	str	r7, [sp, #56]	; 0x38
 8006140:	e005      	b.n	800614e <_Paint+0xce>
 8006142:	19c2      	adds	r2, r0, r7
 8006144:	f9bd 000a 	ldrsh.w	r0, [sp, #10]
 8006148:	1c53      	adds	r3, r2, #1
 800614a:	930d      	str	r3, [sp, #52]	; 0x34
 800614c:	900e      	str	r0, [sp, #56]	; 0x38
 800614e:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8006152:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8006156:	920f      	str	r2, [sp, #60]	; 0x3c
 8006158:	2001      	movs	r0, #1
 800615a:	9310      	str	r3, [sp, #64]	; 0x40
 800615c:	9007      	str	r0, [sp, #28]
 800615e:	a809      	add	r0, sp, #36	; 0x24
 8006160:	47b0      	blx	r6
 8006162:	4620      	mov	r0, r4
 8006164:	f008 fbb4 	bl	800e8d0 <GUI_ALLOC_LockH>
 8006168:	9000      	str	r0, [sp, #0]
 800616a:	f000 f88e 	bl	800628a <PROGBAR__GetTextLocked>
 800616e:	9001      	str	r0, [sp, #4]
 8006170:	b1f8      	cbz	r0, 80061b2 <_Paint+0x132>
 8006172:	4648      	mov	r0, r9
 8006174:	f006 ffb8 	bl	800d0e8 <GUI_SetFont>
 8006178:	a902      	add	r1, sp, #8
 800617a:	9a01      	ldr	r2, [sp, #4]
 800617c:	9800      	ldr	r0, [sp, #0]
 800617e:	f000 f887 	bl	8006290 <PROGBAR__GetTextRect>
 8006182:	4668      	mov	r0, sp
 8006184:	f008 fbb2 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8006188:	9901      	ldr	r1, [sp, #4]
 800618a:	f9bd 000a 	ldrsh.w	r0, [sp, #10]
 800618e:	9108      	str	r1, [sp, #32]
 8006190:	2212      	movs	r2, #18
 8006192:	920a      	str	r2, [sp, #40]	; 0x28
 8006194:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8006198:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 800619c:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 80061a0:	900e      	str	r0, [sp, #56]	; 0x38
 80061a2:	9409      	str	r4, [sp, #36]	; 0x24
 80061a4:	930d      	str	r3, [sp, #52]	; 0x34
 80061a6:	910f      	str	r1, [sp, #60]	; 0x3c
 80061a8:	9210      	str	r2, [sp, #64]	; 0x40
 80061aa:	a809      	add	r0, sp, #36	; 0x24
 80061ac:	47b0      	blx	r6
 80061ae:	a801      	add	r0, sp, #4
 80061b0:	e000      	b.n	80061b4 <_Paint+0x134>
 80061b2:	4668      	mov	r0, sp
 80061b4:	f008 fb9a 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80061b8:	2000      	movs	r0, #0
 80061ba:	f001 fee9 	bl	8007f90 <WM_SetUserClipRect>
 80061be:	b013      	add	sp, #76	; 0x4c
 80061c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080061c4 <PROGBAR_SetSkin>:
 80061c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80061c6:	460d      	mov	r5, r1
 80061c8:	4604      	mov	r4, r0
 80061ca:	f008 fb81 	bl	800e8d0 <GUI_ALLOC_LockH>
 80061ce:	4906      	ldr	r1, [pc, #24]	; (80061e8 <PROGBAR_SetSkin+0x24>)
 80061d0:	4602      	mov	r2, r0
 80061d2:	a802      	add	r0, sp, #8
 80061d4:	6651      	str	r1, [r2, #100]	; 0x64
 80061d6:	f840 2d04 	str.w	r2, [r0, #-4]!
 80061da:	6615      	str	r5, [r2, #96]	; 0x60
 80061dc:	f008 fb86 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80061e0:	4620      	mov	r0, r4
 80061e2:	f002 ffdb 	bl	800919c <WM_InvalidateWindow>
 80061e6:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 80061e8:	20000088 	.word	0x20000088

080061ec <PROGBAR_CreateAsChild>:
 80061ec:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80061ee:	9c06      	ldr	r4, [sp, #24]
 80061f0:	9400      	str	r4, [sp, #0]
 80061f2:	9c08      	ldr	r4, [sp, #32]
 80061f4:	9401      	str	r4, [sp, #4]
 80061f6:	2400      	movs	r4, #0
 80061f8:	9402      	str	r4, [sp, #8]
 80061fa:	9c07      	ldr	r4, [sp, #28]
 80061fc:	9403      	str	r4, [sp, #12]
 80061fe:	f000 f90f 	bl	8006420 <PROGBAR_CreateEx>
 8006202:	b004      	add	sp, #16
 8006204:	bd10      	pop	{r4, pc}

08006206 <_SetValue>:
 8006206:	b513      	push	{r0, r1, r4, lr}
 8006208:	ab02      	add	r3, sp, #8
 800620a:	6342      	str	r2, [r0, #52]	; 0x34
 800620c:	f843 1d04 	str.w	r1, [r3, #-4]!
 8006210:	6c41      	ldr	r1, [r0, #68]	; 0x44
 8006212:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8006214:	1a52      	subs	r2, r2, r1
 8006216:	2464      	movs	r4, #100	; 0x64
 8006218:	4362      	muls	r2, r4
 800621a:	1a41      	subs	r1, r0, r1
 800621c:	fb92 f0f1 	sdiv	r0, r2, r1
 8006220:	4619      	mov	r1, r3
 8006222:	f008 fdbc 	bl	800ed9e <GUI_AddDecMin>
 8006226:	9b01      	ldr	r3, [sp, #4]
 8006228:	2225      	movs	r2, #37	; 0x25
 800622a:	2000      	movs	r0, #0
 800622c:	701a      	strb	r2, [r3, #0]
 800622e:	7058      	strb	r0, [r3, #1]
 8006230:	bd1c      	pop	{r2, r3, r4, pc}

08006232 <PROGBAR_Callback>:
 8006232:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006234:	6845      	ldr	r5, [r0, #4]
 8006236:	4604      	mov	r4, r0
 8006238:	4621      	mov	r1, r4
 800623a:	4628      	mov	r0, r5
 800623c:	f008 ff88 	bl	800f150 <WIDGET_HandleActive>
 8006240:	b310      	cbz	r0, 8006288 <PROGBAR_Callback+0x56>
 8006242:	6823      	ldr	r3, [r4, #0]
 8006244:	2b0b      	cmp	r3, #11
 8006246:	d010      	beq.n	800626a <PROGBAR_Callback+0x38>
 8006248:	2b0f      	cmp	r3, #15
 800624a:	d11a      	bne.n	8006282 <PROGBAR_Callback+0x50>
 800624c:	4628      	mov	r0, r5
 800624e:	f008 fb3f 	bl	800e8d0 <GUI_ALLOC_LockH>
 8006252:	a902      	add	r1, sp, #8
 8006254:	f841 0d04 	str.w	r0, [r1, #-4]!
 8006258:	6e42      	ldr	r2, [r0, #100]	; 0x64
 800625a:	6814      	ldr	r4, [r2, #0]
 800625c:	4608      	mov	r0, r1
 800625e:	f008 fb45 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8006262:	b18c      	cbz	r4, 8006288 <PROGBAR_Callback+0x56>
 8006264:	4628      	mov	r0, r5
 8006266:	47a0      	blx	r4
 8006268:	e00e      	b.n	8006288 <PROGBAR_Callback+0x56>
 800626a:	4628      	mov	r0, r5
 800626c:	f008 fb30 	bl	800e8d0 <GUI_ALLOC_LockH>
 8006270:	ad02      	add	r5, sp, #8
 8006272:	f845 0d04 	str.w	r0, [r5, #-4]!
 8006276:	3038      	adds	r0, #56	; 0x38
 8006278:	f008 fd7c 	bl	800ed74 <GUI_ALLOC_FreePtr>
 800627c:	4628      	mov	r0, r5
 800627e:	f008 fb35 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8006282:	4620      	mov	r0, r4
 8006284:	f003 fbb4 	bl	80099f0 <WM_DefaultProc>
 8006288:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800628a <PROGBAR__GetTextLocked>:
 800628a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800628c:	f008 bb20 	b.w	800e8d0 <GUI_ALLOC_LockH>

08006290 <PROGBAR__GetTextRect>:
 8006290:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006294:	f9b0 3000 	ldrsh.w	r3, [r0]
 8006298:	f9b0 7004 	ldrsh.w	r7, [r0, #4]
 800629c:	4604      	mov	r4, r0
 800629e:	460d      	mov	r5, r1
 80062a0:	1af8      	subs	r0, r7, r3
 80062a2:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80062a6:	f9b4 8006 	ldrsh.w	r8, [r4, #6]
 80062aa:	1c47      	adds	r7, r0, #1
 80062ac:	4610      	mov	r0, r2
 80062ae:	ebc1 0608 	rsb	r6, r1, r8
 80062b2:	f007 f8e5 	bl	800d480 <GUI_GetStringDistX>
 80062b6:	f106 0801 	add.w	r8, r6, #1
 80062ba:	4606      	mov	r6, r0
 80062bc:	f007 f8f8 	bl	800d4b0 <GUI_GetFontSizeY>
 80062c0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80062c2:	f8b4 3040 	ldrh.w	r3, [r4, #64]	; 0x40
 80062c6:	6811      	ldr	r1, [r2, #0]
 80062c8:	f003 0203 	and.w	r2, r3, #3
 80062cc:	2a01      	cmp	r2, #1
 80062ce:	d006      	beq.n	80062de <PROGBAR__GetTextRect+0x4e>
 80062d0:	2a02      	cmp	r2, #2
 80062d2:	d109      	bne.n	80062e8 <PROGBAR__GetTextRect+0x58>
 80062d4:	1bbf      	subs	r7, r7, r6
 80062d6:	fb97 f1f2 	sdiv	r1, r7, r2
 80062da:	8029      	strh	r1, [r5, #0]
 80062dc:	e005      	b.n	80062ea <PROGBAR__GetTextRect+0x5a>
 80062de:	43cb      	mvns	r3, r1
 80062e0:	19df      	adds	r7, r3, r7
 80062e2:	1bbf      	subs	r7, r7, r6
 80062e4:	802f      	strh	r7, [r5, #0]
 80062e6:	e000      	b.n	80062ea <PROGBAR__GetTextRect+0x5a>
 80062e8:	8029      	strh	r1, [r5, #0]
 80062ea:	8fa2      	ldrh	r2, [r4, #60]	; 0x3c
 80062ec:	8829      	ldrh	r1, [r5, #0]
 80062ee:	ebc0 0808 	rsb	r8, r0, r8
 80062f2:	1853      	adds	r3, r2, r1
 80062f4:	2102      	movs	r1, #2
 80062f6:	b29a      	uxth	r2, r3
 80062f8:	fb98 f3f1 	sdiv	r3, r8, r1
 80062fc:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 80062fe:	802a      	strh	r2, [r5, #0]
 8006300:	185b      	adds	r3, r3, r1
 8006302:	b299      	uxth	r1, r3
 8006304:	3a01      	subs	r2, #1
 8006306:	3801      	subs	r0, #1
 8006308:	1996      	adds	r6, r2, r6
 800630a:	180b      	adds	r3, r1, r0
 800630c:	8069      	strh	r1, [r5, #2]
 800630e:	80ae      	strh	r6, [r5, #4]
 8006310:	80eb      	strh	r3, [r5, #6]
 8006312:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006316 <PROGBAR__Value2Pos>:
 8006316:	b570      	push	{r4, r5, r6, lr}
 8006318:	f890 3068 	ldrb.w	r3, [r0, #104]	; 0x68
 800631c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800631e:	f013 0601 	ands.w	r6, r3, #1
 8006322:	bf15      	itete	ne
 8006324:	f9b0 3002 	ldrshne.w	r3, [r0, #2]
 8006328:	f9b0 3000 	ldrsheq.w	r3, [r0]
 800632c:	f9b0 5006 	ldrshne.w	r5, [r0, #6]
 8006330:	f9b0 5004 	ldrsheq.w	r5, [r0, #4]
 8006334:	6814      	ldr	r4, [r2, #0]
 8006336:	1aed      	subs	r5, r5, r3
 8006338:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800633a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800633c:	3501      	adds	r5, #1
 800633e:	4299      	cmp	r1, r3
 8006340:	bfb8      	it	lt
 8006342:	4619      	movlt	r1, r3
 8006344:	4281      	cmp	r1, r0
 8006346:	bfa8      	it	ge
 8006348:	4601      	movge	r1, r0
 800634a:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
 800634e:	b10e      	cbz	r6, 8006354 <PROGBAR__Value2Pos+0x3e>
 8006350:	1a41      	subs	r1, r0, r1
 8006352:	e000      	b.n	8006356 <PROGBAR__Value2Pos+0x40>
 8006354:	1ac9      	subs	r1, r1, r3
 8006356:	1ac2      	subs	r2, r0, r3
 8006358:	4369      	muls	r1, r5
 800635a:	fb91 f3f2 	sdiv	r3, r1, r2
 800635e:	18e0      	adds	r0, r4, r3
 8006360:	bd70      	pop	{r4, r5, r6, pc}
	...

08006364 <PROGBAR_CreateUser>:
 8006364:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006368:	b087      	sub	sp, #28
 800636a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800636c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800636e:	9400      	str	r4, [sp, #0]
 8006370:	4c27      	ldr	r4, [pc, #156]	; (8006410 <PROGBAR_CreateUser+0xac>)
 8006372:	9701      	str	r7, [sp, #4]
 8006374:	9402      	str	r4, [sp, #8]
 8006376:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8006378:	3440      	adds	r4, #64	; 0x40
 800637a:	9403      	str	r4, [sp, #12]
 800637c:	f002 ffca 	bl	8009314 <WM_CreateWindowAsChild>
 8006380:	4607      	mov	r7, r0
 8006382:	2800      	cmp	r0, #0
 8006384:	d040      	beq.n	8006408 <PROGBAR_CreateUser+0xa4>
 8006386:	2005      	movs	r0, #5
 8006388:	f008 fd16 	bl	800edb8 <GUI_ALLOC_AllocZero>
 800638c:	4680      	mov	r8, r0
 800638e:	2800      	cmp	r0, #0
 8006390:	d03a      	beq.n	8006408 <PROGBAR_CreateUser+0xa4>
 8006392:	4638      	mov	r0, r7
 8006394:	f008 fa9c 	bl	800e8d0 <GUI_ALLOC_LockH>
 8006398:	f8df 9080 	ldr.w	r9, [pc, #128]	; 800641c <PROGBAR_CreateUser+0xb8>
 800639c:	9911      	ldr	r1, [sp, #68]	; 0x44
 800639e:	9004      	str	r0, [sp, #16]
 80063a0:	2200      	movs	r2, #0
 80063a2:	f008 fecd 	bl	800f140 <WIDGET__Init>
 80063a6:	4638      	mov	r0, r7
 80063a8:	491a      	ldr	r1, [pc, #104]	; (8006414 <PROGBAR_CreateUser+0xb0>)
 80063aa:	4d1b      	ldr	r5, [pc, #108]	; (8006418 <PROGBAR_CreateUser+0xb4>)
 80063ac:	f008 fdf0 	bl	800ef90 <WIDGET_SetEffect>
 80063b0:	9e04      	ldr	r6, [sp, #16]
 80063b2:	f8d9 3000 	ldr.w	r3, [r9]
 80063b6:	f8c6 8038 	str.w	r8, [r6, #56]	; 0x38
 80063ba:	6673      	str	r3, [r6, #100]	; 0x64
 80063bc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80063be:	f106 044c 	add.w	r4, r6, #76	; 0x4c
 80063c2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80063c4:	e895 0003 	ldmia.w	r5, {r0, r1}
 80063c8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80063ca:	e884 0003 	stmia.w	r4, {r0, r1}
 80063ce:	2164      	movs	r1, #100	; 0x64
 80063d0:	2002      	movs	r0, #2
 80063d2:	2400      	movs	r4, #0
 80063d4:	f8a6 0040 	strh.w	r0, [r6, #64]	; 0x40
 80063d8:	64b1      	str	r1, [r6, #72]	; 0x48
 80063da:	f886 2068 	strb.w	r2, [r6, #104]	; 0x68
 80063de:	6474      	str	r4, [r6, #68]	; 0x44
 80063e0:	4640      	mov	r0, r8
 80063e2:	f008 fa75 	bl	800e8d0 <GUI_ALLOC_LockH>
 80063e6:	4622      	mov	r2, r4
 80063e8:	4601      	mov	r1, r0
 80063ea:	9005      	str	r0, [sp, #20]
 80063ec:	9804      	ldr	r0, [sp, #16]
 80063ee:	f7ff ff0a 	bl	8006206 <_SetValue>
 80063f2:	a805      	add	r0, sp, #20
 80063f4:	f008 fa7a 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80063f8:	a804      	add	r0, sp, #16
 80063fa:	f008 fa77 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80063fe:	f8d9 3000 	ldr.w	r3, [r9]
 8006402:	4638      	mov	r0, r7
 8006404:	6859      	ldr	r1, [r3, #4]
 8006406:	4788      	blx	r1
 8006408:	4638      	mov	r0, r7
 800640a:	b007      	add	sp, #28
 800640c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006410:	08006233 	.word	0x08006233
 8006414:	0802d198 	.word	0x0802d198
 8006418:	20000098 	.word	0x20000098
 800641c:	20000094 	.word	0x20000094

08006420 <PROGBAR_CreateEx>:
 8006420:	b510      	push	{r4, lr}
 8006422:	b086      	sub	sp, #24
 8006424:	9c08      	ldr	r4, [sp, #32]
 8006426:	9400      	str	r4, [sp, #0]
 8006428:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800642a:	9401      	str	r4, [sp, #4]
 800642c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800642e:	9402      	str	r4, [sp, #8]
 8006430:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8006432:	9403      	str	r4, [sp, #12]
 8006434:	2400      	movs	r4, #0
 8006436:	9404      	str	r4, [sp, #16]
 8006438:	f7ff ff94 	bl	8006364 <PROGBAR_CreateUser>
 800643c:	b006      	add	sp, #24
 800643e:	bd10      	pop	{r4, pc}

08006440 <PROGBAR_SetValue>:
 8006440:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006444:	460d      	mov	r5, r1
 8006446:	b086      	sub	sp, #24
 8006448:	4607      	mov	r7, r0
 800644a:	2800      	cmp	r0, #0
 800644c:	f000 809f 	beq.w	800658e <PROGBAR_SetValue+0x14e>
 8006450:	f008 fa3e 	bl	800e8d0 <GUI_ALLOC_LockH>
 8006454:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8006456:	6c81      	ldr	r1, [r0, #72]	; 0x48
 8006458:	6b46      	ldr	r6, [r0, #52]	; 0x34
 800645a:	9000      	str	r0, [sp, #0]
 800645c:	429d      	cmp	r5, r3
 800645e:	bfb8      	it	lt
 8006460:	461d      	movlt	r5, r3
 8006462:	428d      	cmp	r5, r1
 8006464:	bfa8      	it	ge
 8006466:	460d      	movge	r5, r1
 8006468:	42ae      	cmp	r6, r5
 800646a:	4604      	mov	r4, r0
 800646c:	f000 808c 	beq.w	8006588 <PROGBAR_SetValue+0x148>
 8006470:	f890 8068 	ldrb.w	r8, [r0, #104]	; 0x68
 8006474:	f018 0f01 	tst.w	r8, #1
 8006478:	d01c      	beq.n	80064b4 <PROGBAR_SetValue+0x74>
 800647a:	42b5      	cmp	r5, r6
 800647c:	da07      	bge.n	800648e <PROGBAR_SetValue+0x4e>
 800647e:	4629      	mov	r1, r5
 8006480:	f7ff ff49 	bl	8006316 <PROGBAR__Value2Pos>
 8006484:	4631      	mov	r1, r6
 8006486:	f8ad 000e 	strh.w	r0, [sp, #14]
 800648a:	4620      	mov	r0, r4
 800648c:	e006      	b.n	800649c <PROGBAR_SetValue+0x5c>
 800648e:	4631      	mov	r1, r6
 8006490:	f7ff ff41 	bl	8006316 <PROGBAR__Value2Pos>
 8006494:	4629      	mov	r1, r5
 8006496:	f8ad 000e 	strh.w	r0, [sp, #14]
 800649a:	4620      	mov	r0, r4
 800649c:	f7ff ff3b 	bl	8006316 <PROGBAR__Value2Pos>
 80064a0:	2200      	movs	r2, #0
 80064a2:	f640 73ff 	movw	r3, #4095	; 0xfff
 80064a6:	f8ad 000a 	strh.w	r0, [sp, #10]
 80064aa:	f8ad 2008 	strh.w	r2, [sp, #8]
 80064ae:	f8ad 300c 	strh.w	r3, [sp, #12]
 80064b2:	e064      	b.n	800657e <PROGBAR_SetValue+0x13e>
 80064b4:	42b5      	cmp	r5, r6
 80064b6:	da07      	bge.n	80064c8 <PROGBAR_SetValue+0x88>
 80064b8:	4629      	mov	r1, r5
 80064ba:	f7ff ff2c 	bl	8006316 <PROGBAR__Value2Pos>
 80064be:	4631      	mov	r1, r6
 80064c0:	f8ad 0008 	strh.w	r0, [sp, #8]
 80064c4:	4620      	mov	r0, r4
 80064c6:	e006      	b.n	80064d6 <PROGBAR_SetValue+0x96>
 80064c8:	4631      	mov	r1, r6
 80064ca:	f7ff ff24 	bl	8006316 <PROGBAR__Value2Pos>
 80064ce:	4629      	mov	r1, r5
 80064d0:	f8ad 0008 	strh.w	r0, [sp, #8]
 80064d4:	4620      	mov	r0, r4
 80064d6:	f7ff ff1e 	bl	8006316 <PROGBAR__Value2Pos>
 80064da:	f008 0302 	and.w	r3, r8, #2
 80064de:	f8ad 000c 	strh.w	r0, [sp, #12]
 80064e2:	f640 72ff 	movw	r2, #4095	; 0xfff
 80064e6:	2000      	movs	r0, #0
 80064e8:	b2d9      	uxtb	r1, r3
 80064ea:	f8ad 000a 	strh.w	r0, [sp, #10]
 80064ee:	f8ad 200e 	strh.w	r2, [sp, #14]
 80064f2:	2900      	cmp	r1, #0
 80064f4:	d143      	bne.n	800657e <PROGBAR_SetValue+0x13e>
 80064f6:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80064f8:	9104      	str	r1, [sp, #16]
 80064fa:	9105      	str	r1, [sp, #20]
 80064fc:	f008 fa16 	bl	800e92c <GUI_ALLOC_GetSize>
 8006500:	2804      	cmp	r0, #4
 8006502:	dc10      	bgt.n	8006526 <PROGBAR_SetValue+0xe6>
 8006504:	ac06      	add	r4, sp, #24
 8006506:	f854 0d18 	ldr.w	r0, [r4, #-24]!
 800650a:	6b84      	ldr	r4, [r0, #56]	; 0x38
 800650c:	4668      	mov	r0, sp
 800650e:	f008 f9ed 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8006512:	4620      	mov	r0, r4
 8006514:	2105      	movs	r1, #5
 8006516:	f006 fe8c 	bl	800d232 <GUI_ALLOC_Realloc>
 800651a:	4604      	mov	r4, r0
 800651c:	4638      	mov	r0, r7
 800651e:	f008 f9d7 	bl	800e8d0 <GUI_ALLOC_LockH>
 8006522:	9000      	str	r0, [sp, #0]
 8006524:	6384      	str	r4, [r0, #56]	; 0x38
 8006526:	9800      	ldr	r0, [sp, #0]
 8006528:	f7ff feaf 	bl	800628a <PROGBAR__GetTextLocked>
 800652c:	9001      	str	r0, [sp, #4]
 800652e:	b338      	cbz	r0, 8006580 <PROGBAR_SetValue+0x140>
 8006530:	9e00      	ldr	r6, [sp, #0]
 8006532:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 8006534:	f006 fdd8 	bl	800d0e8 <GUI_SetFont>
 8006538:	a904      	add	r1, sp, #16
 800653a:	4606      	mov	r6, r0
 800653c:	9a01      	ldr	r2, [sp, #4]
 800653e:	9800      	ldr	r0, [sp, #0]
 8006540:	f7ff fea6 	bl	8006290 <PROGBAR__GetTextRect>
 8006544:	a802      	add	r0, sp, #8
 8006546:	aa04      	add	r2, sp, #16
 8006548:	ac06      	add	r4, sp, #24
 800654a:	4601      	mov	r1, r0
 800654c:	f006 ff60 	bl	800d410 <GUI_MergeRect>
 8006550:	e89d 0003 	ldmia.w	sp, {r0, r1}
 8006554:	462a      	mov	r2, r5
 8006556:	f7ff fe56 	bl	8006206 <_SetValue>
 800655a:	f854 2d14 	ldr.w	r2, [r4, #-20]!
 800655e:	9800      	ldr	r0, [sp, #0]
 8006560:	a904      	add	r1, sp, #16
 8006562:	f7ff fe95 	bl	8006290 <PROGBAR__GetTextRect>
 8006566:	a802      	add	r0, sp, #8
 8006568:	4601      	mov	r1, r0
 800656a:	aa04      	add	r2, sp, #16
 800656c:	f006 ff50 	bl	800d410 <GUI_MergeRect>
 8006570:	4630      	mov	r0, r6
 8006572:	f006 fdb9 	bl	800d0e8 <GUI_SetFont>
 8006576:	4620      	mov	r0, r4
 8006578:	f008 f9b8 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800657c:	e000      	b.n	8006580 <PROGBAR_SetValue+0x140>
 800657e:	6365      	str	r5, [r4, #52]	; 0x34
 8006580:	4638      	mov	r0, r7
 8006582:	a902      	add	r1, sp, #8
 8006584:	f002 fdce 	bl	8009124 <WM_InvalidateRect>
 8006588:	4668      	mov	r0, sp
 800658a:	f008 f9af 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800658e:	b006      	add	sp, #24
 8006590:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006594 <GUI_ARRAY__GethItem>:
 8006594:	8803      	ldrh	r3, [r0, #0]
 8006596:	4299      	cmp	r1, r3
 8006598:	b513      	push	{r0, r1, r4, lr}
 800659a:	460c      	mov	r4, r1
 800659c:	d20e      	bcs.n	80065bc <GUI_ARRAY__GethItem+0x28>
 800659e:	6840      	ldr	r0, [r0, #4]
 80065a0:	b150      	cbz	r0, 80065b8 <GUI_ARRAY__GethItem+0x24>
 80065a2:	f008 f995 	bl	800e8d0 <GUI_ALLOC_LockH>
 80065a6:	a902      	add	r1, sp, #8
 80065a8:	f850 4024 	ldr.w	r4, [r0, r4, lsl #2]
 80065ac:	f841 0d04 	str.w	r0, [r1, #-4]!
 80065b0:	4608      	mov	r0, r1
 80065b2:	f008 f99b 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80065b6:	e002      	b.n	80065be <GUI_ARRAY__GethItem+0x2a>
 80065b8:	4604      	mov	r4, r0
 80065ba:	e000      	b.n	80065be <GUI_ARRAY__GethItem+0x2a>
 80065bc:	2400      	movs	r4, #0
 80065be:	4620      	mov	r0, r4
 80065c0:	bd1c      	pop	{r2, r3, r4, pc}

080065c2 <GUI_ARRAY__GetpItemLocked>:
 80065c2:	b508      	push	{r3, lr}
 80065c4:	f7ff ffe6 	bl	8006594 <GUI_ARRAY__GethItem>
 80065c8:	b118      	cbz	r0, 80065d2 <GUI_ARRAY__GetpItemLocked+0x10>
 80065ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80065ce:	f008 b97f 	b.w	800e8d0 <GUI_ALLOC_LockH>
 80065d2:	bd08      	pop	{r3, pc}

080065d4 <GUI_ARRAY_GetNumItems>:
 80065d4:	b513      	push	{r0, r1, r4, lr}
 80065d6:	4604      	mov	r4, r0
 80065d8:	b140      	cbz	r0, 80065ec <GUI_ARRAY_GetNumItems+0x18>
 80065da:	f008 f979 	bl	800e8d0 <GUI_ALLOC_LockH>
 80065de:	ab02      	add	r3, sp, #8
 80065e0:	8804      	ldrh	r4, [r0, #0]
 80065e2:	f843 0d04 	str.w	r0, [r3, #-4]!
 80065e6:	4618      	mov	r0, r3
 80065e8:	f008 f980 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80065ec:	4620      	mov	r0, r4
 80065ee:	bd1c      	pop	{r2, r3, r4, pc}

080065f0 <GUI_ARRAY_AddItem>:
 80065f0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80065f4:	4605      	mov	r5, r0
 80065f6:	2800      	cmp	r0, #0
 80065f8:	d03d      	beq.n	8006676 <GUI_ARRAY_AddItem+0x86>
 80065fa:	b14a      	cbz	r2, 8006610 <GUI_ARRAY_AddItem+0x20>
 80065fc:	4608      	mov	r0, r1
 80065fe:	4611      	mov	r1, r2
 8006600:	f008 fbee 	bl	800ede0 <GUI_ALLOC_AllocInit>
 8006604:	f1d0 0401 	rsbs	r4, r0, #1
 8006608:	4607      	mov	r7, r0
 800660a:	bf38      	it	cc
 800660c:	2400      	movcc	r4, #0
 800660e:	e001      	b.n	8006614 <GUI_ARRAY_AddItem+0x24>
 8006610:	4614      	mov	r4, r2
 8006612:	4617      	mov	r7, r2
 8006614:	4628      	mov	r0, r5
 8006616:	f008 f95b 	bl	800e8d0 <GUI_ALLOC_LockH>
 800661a:	ae02      	add	r6, sp, #8
 800661c:	f8b0 8000 	ldrh.w	r8, [r0]
 8006620:	f846 0d08 	str.w	r0, [r6, #-8]!
 8006624:	f8d0 9004 	ldr.w	r9, [r0, #4]
 8006628:	4668      	mov	r0, sp
 800662a:	f008 f95f 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800662e:	bb24      	cbnz	r4, 800667a <GUI_ARRAY_AddItem+0x8a>
 8006630:	f108 0101 	add.w	r1, r8, #1
 8006634:	4648      	mov	r0, r9
 8006636:	0089      	lsls	r1, r1, #2
 8006638:	f006 fdfb 	bl	800d232 <GUI_ALLOC_Realloc>
 800663c:	4681      	mov	r9, r0
 800663e:	b918      	cbnz	r0, 8006648 <GUI_ARRAY_AddItem+0x58>
 8006640:	4638      	mov	r0, r7
 8006642:	f008 f97f 	bl	800e944 <GUI_ALLOC_Free>
 8006646:	e018      	b.n	800667a <GUI_ARRAY_AddItem+0x8a>
 8006648:	f008 f942 	bl	800e8d0 <GUI_ALLOC_LockH>
 800664c:	ab02      	add	r3, sp, #8
 800664e:	f843 0d04 	str.w	r0, [r3, #-4]!
 8006652:	f840 7028 	str.w	r7, [r0, r8, lsl #2]
 8006656:	4618      	mov	r0, r3
 8006658:	f008 f948 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800665c:	4628      	mov	r0, r5
 800665e:	f008 f937 	bl	800e8d0 <GUI_ALLOC_LockH>
 8006662:	8802      	ldrh	r2, [r0, #0]
 8006664:	9000      	str	r0, [sp, #0]
 8006666:	1c51      	adds	r1, r2, #1
 8006668:	f8c0 9004 	str.w	r9, [r0, #4]
 800666c:	8001      	strh	r1, [r0, #0]
 800666e:	4668      	mov	r0, sp
 8006670:	f008 f93c 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8006674:	e002      	b.n	800667c <GUI_ARRAY_AddItem+0x8c>
 8006676:	4604      	mov	r4, r0
 8006678:	e000      	b.n	800667c <GUI_ARRAY_AddItem+0x8c>
 800667a:	2401      	movs	r4, #1
 800667c:	4620      	mov	r0, r4
 800667e:	e8bd 83fe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}

08006682 <GUI_ARRAY_Delete>:
 8006682:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006684:	4605      	mov	r5, r0
 8006686:	b318      	cbz	r0, 80066d0 <GUI_ARRAY_Delete+0x4e>
 8006688:	f008 f922 	bl	800e8d0 <GUI_ALLOC_LockH>
 800668c:	9000      	str	r0, [sp, #0]
 800668e:	6840      	ldr	r0, [r0, #4]
 8006690:	b1c0      	cbz	r0, 80066c4 <GUI_ARRAY_Delete+0x42>
 8006692:	f008 f91d 	bl	800e8d0 <GUI_ALLOC_LockH>
 8006696:	2400      	movs	r4, #0
 8006698:	9001      	str	r0, [sp, #4]
 800669a:	9b00      	ldr	r3, [sp, #0]
 800669c:	8818      	ldrh	r0, [r3, #0]
 800669e:	4284      	cmp	r4, r0
 80066a0:	da06      	bge.n	80066b0 <GUI_ARRAY_Delete+0x2e>
 80066a2:	9801      	ldr	r0, [sp, #4]
 80066a4:	eb00 0084 	add.w	r0, r0, r4, lsl #2
 80066a8:	f008 fb64 	bl	800ed74 <GUI_ALLOC_FreePtr>
 80066ac:	3401      	adds	r4, #1
 80066ae:	e7f4      	b.n	800669a <GUI_ARRAY_Delete+0x18>
 80066b0:	a801      	add	r0, sp, #4
 80066b2:	f008 f91b 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80066b6:	9900      	ldr	r1, [sp, #0]
 80066b8:	1d08      	adds	r0, r1, #4
 80066ba:	f008 fb5b 	bl	800ed74 <GUI_ALLOC_FreePtr>
 80066be:	9b00      	ldr	r3, [sp, #0]
 80066c0:	2200      	movs	r2, #0
 80066c2:	801a      	strh	r2, [r3, #0]
 80066c4:	4668      	mov	r0, sp
 80066c6:	f008 f911 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80066ca:	4628      	mov	r0, r5
 80066cc:	f008 f93a 	bl	800e944 <GUI_ALLOC_Free>
 80066d0:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

080066d2 <GUI_ARRAY_SetItem>:
 80066d2:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80066d6:	460d      	mov	r5, r1
 80066d8:	4691      	mov	r9, r2
 80066da:	461e      	mov	r6, r3
 80066dc:	b908      	cbnz	r0, 80066e2 <GUI_ARRAY_SetItem+0x10>
 80066de:	2400      	movs	r4, #0
 80066e0:	e045      	b.n	800676e <GUI_ARRAY_SetItem+0x9c>
 80066e2:	f008 f8f5 	bl	800e8d0 <GUI_ALLOC_LockH>
 80066e6:	ab04      	add	r3, sp, #16
 80066e8:	8804      	ldrh	r4, [r0, #0]
 80066ea:	f843 0d0c 	str.w	r0, [r3, #-12]!
 80066ee:	6847      	ldr	r7, [r0, #4]
 80066f0:	4618      	mov	r0, r3
 80066f2:	f008 f8fb 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80066f6:	42a5      	cmp	r5, r4
 80066f8:	d2f1      	bcs.n	80066de <GUI_ARRAY_SetItem+0xc>
 80066fa:	2f00      	cmp	r7, #0
 80066fc:	d0ef      	beq.n	80066de <GUI_ARRAY_SetItem+0xc>
 80066fe:	4638      	mov	r0, r7
 8006700:	f008 f8e6 	bl	800e8d0 <GUI_ALLOC_LockH>
 8006704:	a904      	add	r1, sp, #16
 8006706:	f850 4025 	ldr.w	r4, [r0, r5, lsl #2]
 800670a:	f841 0d08 	str.w	r0, [r1, #-8]!
 800670e:	4608      	mov	r0, r1
 8006710:	ea4f 0a85 	mov.w	sl, r5, lsl #2
 8006714:	f008 f8ea 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8006718:	b124      	cbz	r4, 8006724 <GUI_ARRAY_SetItem+0x52>
 800671a:	4620      	mov	r0, r4
 800671c:	f008 f906 	bl	800e92c <GUI_ALLOC_GetSize>
 8006720:	42b0      	cmp	r0, r6
 8006722:	d014      	beq.n	800674e <GUI_ARRAY_SetItem+0x7c>
 8006724:	4630      	mov	r0, r6
 8006726:	f008 fb47 	bl	800edb8 <GUI_ALLOC_AllocZero>
 800672a:	4604      	mov	r4, r0
 800672c:	2800      	cmp	r0, #0
 800672e:	d0d6      	beq.n	80066de <GUI_ARRAY_SetItem+0xc>
 8006730:	4638      	mov	r0, r7
 8006732:	f008 f8cd 	bl	800e8d0 <GUI_ALLOC_LockH>
 8006736:	af04      	add	r7, sp, #16
 8006738:	4680      	mov	r8, r0
 800673a:	f847 0d08 	str.w	r0, [r7, #-8]!
 800673e:	4450      	add	r0, sl
 8006740:	f008 fb18 	bl	800ed74 <GUI_ALLOC_FreePtr>
 8006744:	f848 4025 	str.w	r4, [r8, r5, lsl #2]
 8006748:	4638      	mov	r0, r7
 800674a:	f008 f8cf 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800674e:	f1b9 0f00 	cmp.w	r9, #0
 8006752:	d00c      	beq.n	800676e <GUI_ARRAY_SetItem+0x9c>
 8006754:	4620      	mov	r0, r4
 8006756:	f008 f8bb 	bl	800e8d0 <GUI_ALLOC_LockH>
 800675a:	ad04      	add	r5, sp, #16
 800675c:	4649      	mov	r1, r9
 800675e:	f845 0d04 	str.w	r0, [r5, #-4]!
 8006762:	4632      	mov	r2, r6
 8006764:	f7f9 fd10 	bl	8000188 <memcpy>
 8006768:	4628      	mov	r0, r5
 800676a:	f008 f8bf 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800676e:	4620      	mov	r0, r4
 8006770:	b004      	add	sp, #16
 8006772:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08006776 <GUI_ARRAY_GetpItemLocked>:
 8006776:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006778:	460e      	mov	r6, r1
 800677a:	4605      	mov	r5, r0
 800677c:	b158      	cbz	r0, 8006796 <GUI_ARRAY_GetpItemLocked+0x20>
 800677e:	f008 f8a7 	bl	800e8d0 <GUI_ALLOC_LockH>
 8006782:	ac02      	add	r4, sp, #8
 8006784:	4631      	mov	r1, r6
 8006786:	f844 0d04 	str.w	r0, [r4, #-4]!
 800678a:	f7ff ff1a 	bl	80065c2 <GUI_ARRAY__GetpItemLocked>
 800678e:	4605      	mov	r5, r0
 8006790:	4620      	mov	r0, r4
 8006792:	f008 f8ab 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8006796:	4628      	mov	r0, r5
 8006798:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

0800679a <GUI_ARRAY_Create>:
 800679a:	2008      	movs	r0, #8
 800679c:	f008 bb0c 	b.w	800edb8 <GUI_ALLOC_AllocZero>

080067a0 <FRAMEWIN_DrawSkinFlex>:
 80067a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80067a4:	4604      	mov	r4, r0
 80067a6:	b092      	sub	sp, #72	; 0x48
 80067a8:	6800      	ldr	r0, [r0, #0]
 80067aa:	4d9b      	ldr	r5, [pc, #620]	; (8006a18 <FRAMEWIN_DrawSkinFlex+0x278>)
 80067ac:	f000 faba 	bl	8006d24 <FRAMEWIN_GetActive>
 80067b0:	4b9a      	ldr	r3, [pc, #616]	; (8006a1c <FRAMEWIN_DrawSkinFlex+0x27c>)
 80067b2:	2800      	cmp	r0, #0
 80067b4:	bf18      	it	ne
 80067b6:	461d      	movne	r5, r3
 80067b8:	6860      	ldr	r0, [r4, #4]
 80067ba:	281c      	cmp	r0, #28
 80067bc:	f200 81a5 	bhi.w	8006b0a <FRAMEWIN_DrawSkinFlex+0x36a>
 80067c0:	e8df f010 	tbh	[pc, r0, lsl #1]
 80067c4:	01a30191 	.word	0x01a30191
 80067c8:	01a301a3 	.word	0x01a301a3
 80067cc:	012e01a3 	.word	0x012e01a3
 80067d0:	01a301a3 	.word	0x01a301a3
 80067d4:	01a301a3 	.word	0x01a301a3
 80067d8:	002701a3 	.word	0x002701a3
 80067dc:	01a301a3 	.word	0x01a301a3
 80067e0:	01a3017e 	.word	0x01a3017e
 80067e4:	01a301a3 	.word	0x01a301a3
 80067e8:	01a30145 	.word	0x01a30145
 80067ec:	002301a3 	.word	0x002301a3
 80067f0:	001f001d 	.word	0x001f001d
 80067f4:	01a30021 	.word	0x01a30021
 80067f8:	01a301a3 	.word	0x01a301a3
 80067fc:	0025      	.short	0x0025
 80067fe:	69e8      	ldr	r0, [r5, #28]
 8006800:	e188      	b.n	8006b14 <FRAMEWIN_DrawSkinFlex+0x374>
 8006802:	6a28      	ldr	r0, [r5, #32]
 8006804:	e186      	b.n	8006b14 <FRAMEWIN_DrawSkinFlex+0x374>
 8006806:	6a68      	ldr	r0, [r5, #36]	; 0x24
 8006808:	e184      	b.n	8006b14 <FRAMEWIN_DrawSkinFlex+0x374>
 800680a:	6aa8      	ldr	r0, [r5, #40]	; 0x28
 800680c:	e182      	b.n	8006b14 <FRAMEWIN_DrawSkinFlex+0x374>
 800680e:	6968      	ldr	r0, [r5, #20]
 8006810:	e180      	b.n	8006b14 <FRAMEWIN_DrawSkinFlex+0x374>
 8006812:	6820      	ldr	r0, [r4, #0]
 8006814:	261c      	movs	r6, #28
 8006816:	960a      	str	r6, [sp, #40]	; 0x28
 8006818:	9009      	str	r0, [sp, #36]	; 0x24
 800681a:	f008 f859 	bl	800e8d0 <GUI_ALLOC_LockH>
 800681e:	9005      	str	r0, [sp, #20]
 8006820:	6d07      	ldr	r7, [r0, #80]	; 0x50
 8006822:	a809      	add	r0, sp, #36	; 0x24
 8006824:	47b8      	blx	r7
 8006826:	4606      	mov	r6, r0
 8006828:	a805      	add	r0, sp, #20
 800682a:	f008 f85f 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800682e:	2e01      	cmp	r6, #1
 8006830:	dd11      	ble.n	8006856 <FRAMEWIN_DrawSkinFlex+0xb6>
 8006832:	6828      	ldr	r0, [r5, #0]
 8006834:	9000      	str	r0, [sp, #0]
 8006836:	686a      	ldr	r2, [r5, #4]
 8006838:	9201      	str	r2, [sp, #4]
 800683a:	68a9      	ldr	r1, [r5, #8]
 800683c:	9102      	str	r1, [sp, #8]
 800683e:	4633      	mov	r3, r6
 8006840:	6920      	ldr	r0, [r4, #16]
 8006842:	69a1      	ldr	r1, [r4, #24]
 8006844:	6962      	ldr	r2, [r4, #20]
 8006846:	f006 f853 	bl	800c8f0 <GUI__DrawTwinArc2>
 800684a:	6923      	ldr	r3, [r4, #16]
 800684c:	69a7      	ldr	r7, [r4, #24]
 800684e:	eb06 0803 	add.w	r8, r6, r3
 8006852:	1bbf      	subs	r7, r7, r6
 8006854:	e02c      	b.n	80068b0 <FRAMEWIN_DrawSkinFlex+0x110>
 8006856:	6828      	ldr	r0, [r5, #0]
 8006858:	f006 fc74 	bl	800d144 <GUI_SetColor>
 800685c:	6921      	ldr	r1, [r4, #16]
 800685e:	69e8      	ldr	r0, [r5, #28]
 8006860:	180a      	adds	r2, r1, r0
 8006862:	3a01      	subs	r2, #1
 8006864:	6960      	ldr	r0, [r4, #20]
 8006866:	f006 feb7 	bl	800d5d8 <GUI_DrawHLine>
 800686a:	69a2      	ldr	r2, [r4, #24]
 800686c:	69e9      	ldr	r1, [r5, #28]
 800686e:	6960      	ldr	r0, [r4, #20]
 8006870:	1a53      	subs	r3, r2, r1
 8006872:	1c59      	adds	r1, r3, #1
 8006874:	f006 feb0 	bl	800d5d8 <GUI_DrawHLine>
 8006878:	6967      	ldr	r7, [r4, #20]
 800687a:	6920      	ldr	r0, [r4, #16]
 800687c:	3701      	adds	r7, #1
 800687e:	4639      	mov	r1, r7
 8006880:	f006 fe88 	bl	800d594 <GUI_DrawPixel>
 8006884:	4639      	mov	r1, r7
 8006886:	69a0      	ldr	r0, [r4, #24]
 8006888:	f006 fe84 	bl	800d594 <GUI_DrawPixel>
 800688c:	6868      	ldr	r0, [r5, #4]
 800688e:	f006 fc59 	bl	800d144 <GUI_SetColor>
 8006892:	6920      	ldr	r0, [r4, #16]
 8006894:	4639      	mov	r1, r7
 8006896:	3001      	adds	r0, #1
 8006898:	f006 fe7c 	bl	800d594 <GUI_DrawPixel>
 800689c:	69a2      	ldr	r2, [r4, #24]
 800689e:	4639      	mov	r1, r7
 80068a0:	1e50      	subs	r0, r2, #1
 80068a2:	f006 fe77 	bl	800d594 <GUI_DrawPixel>
 80068a6:	6921      	ldr	r1, [r4, #16]
 80068a8:	69a3      	ldr	r3, [r4, #24]
 80068aa:	f101 0802 	add.w	r8, r1, #2
 80068ae:	1e9f      	subs	r7, r3, #2
 80068b0:	6828      	ldr	r0, [r5, #0]
 80068b2:	f006 fc47 	bl	800d144 <GUI_SetColor>
 80068b6:	4641      	mov	r1, r8
 80068b8:	463a      	mov	r2, r7
 80068ba:	6960      	ldr	r0, [r4, #20]
 80068bc:	f006 fe8c 	bl	800d5d8 <GUI_DrawHLine>
 80068c0:	6868      	ldr	r0, [r5, #4]
 80068c2:	f006 fc3f 	bl	800d144 <GUI_SetColor>
 80068c6:	6960      	ldr	r0, [r4, #20]
 80068c8:	463a      	mov	r2, r7
 80068ca:	3001      	adds	r0, #1
 80068cc:	4641      	mov	r1, r8
 80068ce:	f006 fe83 	bl	800d5d8 <GUI_DrawHLine>
 80068d2:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 80068d4:	2a02      	cmp	r2, #2
 80068d6:	dd0a      	ble.n	80068ee <FRAMEWIN_DrawSkinFlex+0x14e>
 80068d8:	68a8      	ldr	r0, [r5, #8]
 80068da:	f006 fc33 	bl	800d144 <GUI_SetColor>
 80068de:	6962      	ldr	r2, [r4, #20]
 80068e0:	6a69      	ldr	r1, [r5, #36]	; 0x24
 80068e2:	1853      	adds	r3, r2, r1
 80068e4:	4640      	mov	r0, r8
 80068e6:	1c91      	adds	r1, r2, #2
 80068e8:	3b01      	subs	r3, #1
 80068ea:	463a      	mov	r2, r7
 80068ec:	e01d      	b.n	800692a <FRAMEWIN_DrawSkinFlex+0x18a>
 80068ee:	6a29      	ldr	r1, [r5, #32]
 80068f0:	42b1      	cmp	r1, r6
 80068f2:	dd1c      	ble.n	800692e <FRAMEWIN_DrawSkinFlex+0x18e>
 80068f4:	6967      	ldr	r7, [r4, #20]
 80068f6:	6923      	ldr	r3, [r4, #16]
 80068f8:	2e01      	cmp	r6, #1
 80068fa:	f107 0802 	add.w	r8, r7, #2
 80068fe:	f340 8106 	ble.w	8006b0e <FRAMEWIN_DrawSkinFlex+0x36e>
 8006902:	19bf      	adds	r7, r7, r6
 8006904:	18f0      	adds	r0, r6, r3
 8006906:	18ca      	adds	r2, r1, r3
 8006908:	3a01      	subs	r2, #1
 800690a:	4641      	mov	r1, r8
 800690c:	463b      	mov	r3, r7
 800690e:	f006 fde1 	bl	800d4d4 <GUI_FillRect>
 8006912:	69a1      	ldr	r1, [r4, #24]
 8006914:	69e8      	ldr	r0, [r5, #28]
 8006916:	2e01      	cmp	r6, #1
 8006918:	ebc0 0301 	rsb	r3, r0, r1
 800691c:	bfcc      	ite	gt
 800691e:	ebc6 0201 	rsbgt	r2, r6, r1
 8006922:	1e8a      	suble	r2, r1, #2
 8006924:	1c58      	adds	r0, r3, #1
 8006926:	4641      	mov	r1, r8
 8006928:	463b      	mov	r3, r7
 800692a:	f006 fdd3 	bl	800d4d4 <GUI_FillRect>
 800692e:	6967      	ldr	r7, [r4, #20]
 8006930:	69e0      	ldr	r0, [r4, #28]
 8006932:	2e01      	cmp	r6, #1
 8006934:	bfcc      	ite	gt
 8006936:	19f6      	addgt	r6, r6, r7
 8006938:	1cbe      	addle	r6, r7, #2
 800693a:	1e47      	subs	r7, r0, #1
 800693c:	6828      	ldr	r0, [r5, #0]
 800693e:	f006 fc01 	bl	800d144 <GUI_SetColor>
 8006942:	463a      	mov	r2, r7
 8006944:	6920      	ldr	r0, [r4, #16]
 8006946:	4631      	mov	r1, r6
 8006948:	f006 fe04 	bl	800d554 <GUI_DrawVLine>
 800694c:	4631      	mov	r1, r6
 800694e:	463a      	mov	r2, r7
 8006950:	69a0      	ldr	r0, [r4, #24]
 8006952:	f006 fdff 	bl	800d554 <GUI_DrawVLine>
 8006956:	69e2      	ldr	r2, [r4, #28]
 8006958:	6868      	ldr	r0, [r5, #4]
 800695a:	1e97      	subs	r7, r2, #2
 800695c:	f006 fbf2 	bl	800d144 <GUI_SetColor>
 8006960:	6921      	ldr	r1, [r4, #16]
 8006962:	463a      	mov	r2, r7
 8006964:	1c48      	adds	r0, r1, #1
 8006966:	4631      	mov	r1, r6
 8006968:	f006 fdf4 	bl	800d554 <GUI_DrawVLine>
 800696c:	69a3      	ldr	r3, [r4, #24]
 800696e:	4631      	mov	r1, r6
 8006970:	1e58      	subs	r0, r3, #1
 8006972:	463a      	mov	r2, r7
 8006974:	f006 fdee 	bl	800d554 <GUI_DrawVLine>
 8006978:	69e8      	ldr	r0, [r5, #28]
 800697a:	2802      	cmp	r0, #2
 800697c:	dc02      	bgt.n	8006984 <FRAMEWIN_DrawSkinFlex+0x1e4>
 800697e:	6a2a      	ldr	r2, [r5, #32]
 8006980:	2a02      	cmp	r2, #2
 8006982:	dd20      	ble.n	80069c6 <FRAMEWIN_DrawSkinFlex+0x226>
 8006984:	6aa9      	ldr	r1, [r5, #40]	; 0x28
 8006986:	69e7      	ldr	r7, [r4, #28]
 8006988:	68a8      	ldr	r0, [r5, #8]
 800698a:	2902      	cmp	r1, #2
 800698c:	bfcc      	ite	gt
 800698e:	ebc1 0707 	rsbgt	r7, r1, r7
 8006992:	3f02      	suble	r7, #2
 8006994:	f006 fbd6 	bl	800d144 <GUI_SetColor>
 8006998:	69eb      	ldr	r3, [r5, #28]
 800699a:	2b02      	cmp	r3, #2
 800699c:	dd07      	ble.n	80069ae <FRAMEWIN_DrawSkinFlex+0x20e>
 800699e:	6920      	ldr	r0, [r4, #16]
 80069a0:	18c2      	adds	r2, r0, r3
 80069a2:	4631      	mov	r1, r6
 80069a4:	3002      	adds	r0, #2
 80069a6:	3a01      	subs	r2, #1
 80069a8:	463b      	mov	r3, r7
 80069aa:	f006 fd93 	bl	800d4d4 <GUI_FillRect>
 80069ae:	6a29      	ldr	r1, [r5, #32]
 80069b0:	2902      	cmp	r1, #2
 80069b2:	dd08      	ble.n	80069c6 <FRAMEWIN_DrawSkinFlex+0x226>
 80069b4:	69a3      	ldr	r3, [r4, #24]
 80069b6:	69e8      	ldr	r0, [r5, #28]
 80069b8:	1a1a      	subs	r2, r3, r0
 80069ba:	1c50      	adds	r0, r2, #1
 80069bc:	4631      	mov	r1, r6
 80069be:	1e9a      	subs	r2, r3, #2
 80069c0:	463b      	mov	r3, r7
 80069c2:	f006 fd87 	bl	800d4d4 <GUI_FillRect>
 80069c6:	6828      	ldr	r0, [r5, #0]
 80069c8:	f006 fbbc 	bl	800d144 <GUI_SetColor>
 80069cc:	6921      	ldr	r1, [r4, #16]
 80069ce:	69a2      	ldr	r2, [r4, #24]
 80069d0:	69e0      	ldr	r0, [r4, #28]
 80069d2:	f006 fe01 	bl	800d5d8 <GUI_DrawHLine>
 80069d6:	6868      	ldr	r0, [r5, #4]
 80069d8:	f006 fbb4 	bl	800d144 <GUI_SetColor>
 80069dc:	69e6      	ldr	r6, [r4, #28]
 80069de:	6921      	ldr	r1, [r4, #16]
 80069e0:	69a3      	ldr	r3, [r4, #24]
 80069e2:	1e70      	subs	r0, r6, #1
 80069e4:	3101      	adds	r1, #1
 80069e6:	1e5a      	subs	r2, r3, #1
 80069e8:	f006 fdf6 	bl	800d5d8 <GUI_DrawHLine>
 80069ec:	6aae      	ldr	r6, [r5, #40]	; 0x28
 80069ee:	2e02      	cmp	r6, #2
 80069f0:	f340 808b 	ble.w	8006b0a <FRAMEWIN_DrawSkinFlex+0x36a>
 80069f4:	6927      	ldr	r7, [r4, #16]
 80069f6:	69a0      	ldr	r0, [r4, #24]
 80069f8:	69e4      	ldr	r4, [r4, #28]
 80069fa:	f107 0802 	add.w	r8, r7, #2
 80069fe:	1e87      	subs	r7, r0, #2
 8006a00:	68a8      	ldr	r0, [r5, #8]
 8006a02:	f006 fb9f 	bl	800d144 <GUI_SetColor>
 8006a06:	1ba2      	subs	r2, r4, r6
 8006a08:	1c51      	adds	r1, r2, #1
 8006a0a:	4640      	mov	r0, r8
 8006a0c:	463a      	mov	r2, r7
 8006a0e:	1ea3      	subs	r3, r4, #2
 8006a10:	f006 fd60 	bl	800d4d4 <GUI_FillRect>
 8006a14:	e079      	b.n	8006b0a <FRAMEWIN_DrawSkinFlex+0x36a>
 8006a16:	bf00      	nop
 8006a18:	200000dc 	.word	0x200000dc
 8006a1c:	200000b0 	.word	0x200000b0
 8006a20:	8a20      	ldrh	r0, [r4, #16]
 8006a22:	8aa1      	ldrh	r1, [r4, #20]
 8006a24:	8b22      	ldrh	r2, [r4, #24]
 8006a26:	8ba3      	ldrh	r3, [r4, #28]
 8006a28:	68ec      	ldr	r4, [r5, #12]
 8006a2a:	f8ad 001c 	strh.w	r0, [sp, #28]
 8006a2e:	9400      	str	r4, [sp, #0]
 8006a30:	692c      	ldr	r4, [r5, #16]
 8006a32:	f8ad 101e 	strh.w	r1, [sp, #30]
 8006a36:	f8ad 2020 	strh.w	r2, [sp, #32]
 8006a3a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8006a3e:	9401      	str	r4, [sp, #4]
 8006a40:	b200      	sxth	r0, r0
 8006a42:	b209      	sxth	r1, r1
 8006a44:	b212      	sxth	r2, r2
 8006a46:	b21b      	sxth	r3, r3
 8006a48:	f006 fed6 	bl	800d7f8 <GUI_DrawGradientV>
 8006a4c:	e05d      	b.n	8006b0a <FRAMEWIN_DrawSkinFlex+0x36a>
 8006a4e:	8b29      	ldrh	r1, [r5, #24]
 8006a50:	6922      	ldr	r2, [r4, #16]
 8006a52:	6960      	ldr	r0, [r4, #20]
 8006a54:	188b      	adds	r3, r1, r2
 8006a56:	69a2      	ldr	r2, [r4, #24]
 8006a58:	f8ad 301c 	strh.w	r3, [sp, #28]
 8006a5c:	69e3      	ldr	r3, [r4, #28]
 8006a5e:	f8ad 001e 	strh.w	r0, [sp, #30]
 8006a62:	1a51      	subs	r1, r2, r1
 8006a64:	6820      	ldr	r0, [r4, #0]
 8006a66:	f8ad 1020 	strh.w	r1, [sp, #32]
 8006a6a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8006a6e:	f007 ff2f 	bl	800e8d0 <GUI_ALLOC_LockH>
 8006a72:	9005      	str	r0, [sp, #20]
 8006a74:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8006a76:	b1f8      	cbz	r0, 8006ab8 <FRAMEWIN_DrawSkinFlex+0x318>
 8006a78:	2002      	movs	r0, #2
 8006a7a:	f006 fb2b 	bl	800d0d4 <GUI_SetTextMode>
 8006a7e:	9905      	ldr	r1, [sp, #20]
 8006a80:	f8b1 207c 	ldrh.w	r2, [r1, #124]	; 0x7c
 8006a84:	f3c2 03c0 	ubfx	r3, r2, #3, #1
 8006a88:	330e      	adds	r3, #14
 8006a8a:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 8006a8e:	6880      	ldr	r0, [r0, #8]
 8006a90:	f006 fb58 	bl	800d144 <GUI_SetColor>
 8006a94:	9905      	ldr	r1, [sp, #20]
 8006a96:	6b48      	ldr	r0, [r1, #52]	; 0x34
 8006a98:	f006 fb26 	bl	800d0e8 <GUI_SetFont>
 8006a9c:	9a05      	ldr	r2, [sp, #20]
 8006a9e:	6f10      	ldr	r0, [r2, #112]	; 0x70
 8006aa0:	f007 ff16 	bl	800e8d0 <GUI_ALLOC_LockH>
 8006aa4:	9b05      	ldr	r3, [sp, #20]
 8006aa6:	9006      	str	r0, [sp, #24]
 8006aa8:	a907      	add	r1, sp, #28
 8006aaa:	f9b3 205a 	ldrsh.w	r2, [r3, #90]	; 0x5a
 8006aae:	f007 f906 	bl	800dcbe <GUI_DispStringInRect>
 8006ab2:	a806      	add	r0, sp, #24
 8006ab4:	f007 ff1a 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8006ab8:	a805      	add	r0, sp, #20
 8006aba:	f007 ff17 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8006abe:	e024      	b.n	8006b0a <FRAMEWIN_DrawSkinFlex+0x36a>
 8006ac0:	6920      	ldr	r0, [r4, #16]
 8006ac2:	6961      	ldr	r1, [r4, #20]
 8006ac4:	69a2      	ldr	r2, [r4, #24]
 8006ac6:	69e3      	ldr	r3, [r4, #28]
 8006ac8:	f8ad 001c 	strh.w	r0, [sp, #28]
 8006acc:	68a8      	ldr	r0, [r5, #8]
 8006ace:	f8ad 101e 	strh.w	r1, [sp, #30]
 8006ad2:	f8ad 2020 	strh.w	r2, [sp, #32]
 8006ad6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8006ada:	f006 fb33 	bl	800d144 <GUI_SetColor>
 8006ade:	a807      	add	r0, sp, #28
 8006ae0:	f006 fcec 	bl	800d4bc <GUI_FillRectEx>
 8006ae4:	e011      	b.n	8006b0a <FRAMEWIN_DrawSkinFlex+0x36a>
 8006ae6:	6820      	ldr	r0, [r4, #0]
 8006ae8:	f007 fef2 	bl	800e8d0 <GUI_ALLOC_LockH>
 8006aec:	a912      	add	r1, sp, #72	; 0x48
 8006aee:	f8b0 205a 	ldrh.w	r2, [r0, #90]	; 0x5a
 8006af2:	f841 0d34 	str.w	r0, [r1, #-52]!
 8006af6:	f042 030c 	orr.w	r3, r2, #12
 8006afa:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8006afe:	4608      	mov	r0, r1
 8006b00:	f007 fef4 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8006b04:	6820      	ldr	r0, [r4, #0]
 8006b06:	f001 fa4f 	bl	8007fa8 <WM_SetHasTrans>
 8006b0a:	2000      	movs	r0, #0
 8006b0c:	e002      	b.n	8006b14 <FRAMEWIN_DrawSkinFlex+0x374>
 8006b0e:	1c98      	adds	r0, r3, #2
 8006b10:	4647      	mov	r7, r8
 8006b12:	e6f8      	b.n	8006906 <FRAMEWIN_DrawSkinFlex+0x166>
 8006b14:	b012      	add	sp, #72	; 0x48
 8006b16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006b1a:	bf00      	nop

08006b1c <_GetBorderSize>:
 8006b1c:	b570      	push	{r4, r5, r6, lr}
 8006b1e:	b08a      	sub	sp, #40	; 0x28
 8006b20:	4605      	mov	r5, r0
 8006b22:	460c      	mov	r4, r1
 8006b24:	f007 fed4 	bl	800e8d0 <GUI_ALLOC_LockH>
 8006b28:	ab0a      	add	r3, sp, #40	; 0x28
 8006b2a:	6d06      	ldr	r6, [r0, #80]	; 0x50
 8006b2c:	f843 0d28 	str.w	r0, [r3, #-40]!
 8006b30:	4668      	mov	r0, sp
 8006b32:	f007 fedb 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8006b36:	9501      	str	r5, [sp, #4]
 8006b38:	2c03      	cmp	r4, #3
 8006b3a:	d80b      	bhi.n	8006b54 <_GetBorderSize+0x38>
 8006b3c:	e8df f004 	tbb	[pc, r4]
 8006b40:	08060402 	.word	0x08060402
 8006b44:	2018      	movs	r0, #24
 8006b46:	e004      	b.n	8006b52 <_GetBorderSize+0x36>
 8006b48:	2016      	movs	r0, #22
 8006b4a:	e002      	b.n	8006b52 <_GetBorderSize+0x36>
 8006b4c:	2015      	movs	r0, #21
 8006b4e:	e000      	b.n	8006b52 <_GetBorderSize+0x36>
 8006b50:	2017      	movs	r0, #23
 8006b52:	9002      	str	r0, [sp, #8]
 8006b54:	a801      	add	r0, sp, #4
 8006b56:	47b0      	blx	r6
 8006b58:	b00a      	add	sp, #40	; 0x28
 8006b5a:	bd70      	pop	{r4, r5, r6, pc}

08006b5c <_Create>:
 8006b5c:	b530      	push	{r4, r5, lr}
 8006b5e:	b08b      	sub	sp, #44	; 0x2c
 8006b60:	4605      	mov	r5, r0
 8006b62:	f007 feb5 	bl	800e8d0 <GUI_ALLOC_LockH>
 8006b66:	ab0a      	add	r3, sp, #40	; 0x28
 8006b68:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8006b6a:	f843 0d28 	str.w	r0, [r3, #-40]!
 8006b6e:	4668      	mov	r0, sp
 8006b70:	6894      	ldr	r4, [r2, #8]
 8006b72:	f007 febb 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8006b76:	2000      	movs	r0, #0
 8006b78:	9002      	str	r0, [sp, #8]
 8006b7a:	a80a      	add	r0, sp, #40	; 0x28
 8006b7c:	6861      	ldr	r1, [r4, #4]
 8006b7e:	f840 5d24 	str.w	r5, [r0, #-36]!
 8006b82:	4788      	blx	r1
 8006b84:	b00b      	add	sp, #44	; 0x2c
 8006b86:	bd30      	pop	{r4, r5, pc}

08006b88 <_Paint>:
 8006b88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006b8c:	b08f      	sub	sp, #60	; 0x3c
 8006b8e:	4604      	mov	r4, r0
 8006b90:	f007 fe9e 	bl	800e8d0 <GUI_ALLOC_LockH>
 8006b94:	6b42      	ldr	r2, [r0, #52]	; 0x34
 8006b96:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 8006b98:	9202      	str	r2, [sp, #8]
 8006b9a:	688e      	ldr	r6, [r1, #8]
 8006b9c:	9004      	str	r0, [sp, #16]
 8006b9e:	6d05      	ldr	r5, [r0, #80]	; 0x50
 8006ba0:	f000 f9a6 	bl	8006ef0 <FRAMEWIN__CalcTitleHeight>
 8006ba4:	4682      	mov	sl, r0
 8006ba6:	a80e      	add	r0, sp, #56	; 0x38
 8006ba8:	f850 7d28 	ldr.w	r7, [r0, #-40]!
 8006bac:	f8b7 3058 	ldrh.w	r3, [r7, #88]	; 0x58
 8006bb0:	9303      	str	r3, [sp, #12]
 8006bb2:	f007 fe9b 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8006bb6:	4620      	mov	r0, r4
 8006bb8:	f001 fd4c 	bl	8008654 <WM_GetWindowSizeX>
 8006bbc:	4680      	mov	r8, r0
 8006bbe:	4620      	mov	r0, r4
 8006bc0:	f001 fd5c 	bl	800867c <WM_GetWindowSizeY>
 8006bc4:	6832      	ldr	r2, [r6, #0]
 8006bc6:	2101      	movs	r1, #1
 8006bc8:	4683      	mov	fp, r0
 8006bca:	4620      	mov	r0, r4
 8006bcc:	4790      	blx	r2
 8006bce:	6833      	ldr	r3, [r6, #0]
 8006bd0:	2103      	movs	r1, #3
 8006bd2:	4607      	mov	r7, r0
 8006bd4:	4620      	mov	r0, r4
 8006bd6:	4798      	blx	r3
 8006bd8:	6836      	ldr	r6, [r6, #0]
 8006bda:	4681      	mov	r9, r0
 8006bdc:	2100      	movs	r1, #0
 8006bde:	4620      	mov	r0, r4
 8006be0:	47b0      	blx	r6
 8006be2:	4606      	mov	r6, r0
 8006be4:	2000      	movs	r0, #0
 8006be6:	9405      	str	r4, [sp, #20]
 8006be8:	f002 fd18 	bl	800961c <WM__InitIVRSearch>
 8006bec:	2800      	cmp	r0, #0
 8006bee:	d03c      	beq.n	8006c6a <_Paint+0xe2>
 8006bf0:	2000      	movs	r0, #0
 8006bf2:	f108 31ff 	add.w	r1, r8, #4294967295
 8006bf6:	f10b 32ff 	add.w	r2, fp, #4294967295
 8006bfa:	230b      	movs	r3, #11
 8006bfc:	900a      	str	r0, [sp, #40]	; 0x28
 8006bfe:	9009      	str	r0, [sp, #36]	; 0x24
 8006c00:	910b      	str	r1, [sp, #44]	; 0x2c
 8006c02:	920c      	str	r2, [sp, #48]	; 0x30
 8006c04:	9306      	str	r3, [sp, #24]
 8006c06:	a805      	add	r0, sp, #20
 8006c08:	47a8      	blx	r5
 8006c0a:	9903      	ldr	r1, [sp, #12]
 8006c0c:	9709      	str	r7, [sp, #36]	; 0x24
 8006c0e:	eb06 030a 	add.w	r3, r6, sl
 8006c12:	ebc9 0008 	rsb	r0, r9, r8
 8006c16:	1e42      	subs	r2, r0, #1
 8006c18:	fa03 f081 	sxtah	r0, r3, r1
 8006c1c:	1e41      	subs	r1, r0, #1
 8006c1e:	200e      	movs	r0, #14
 8006c20:	e88d 000c 	stmia.w	sp, {r2, r3}
 8006c24:	930a      	str	r3, [sp, #40]	; 0x28
 8006c26:	920b      	str	r2, [sp, #44]	; 0x2c
 8006c28:	910c      	str	r1, [sp, #48]	; 0x30
 8006c2a:	9006      	str	r0, [sp, #24]
 8006c2c:	a805      	add	r0, sp, #20
 8006c2e:	47a8      	blx	r5
 8006c30:	9b01      	ldr	r3, [sp, #4]
 8006c32:	9a00      	ldr	r2, [sp, #0]
 8006c34:	9709      	str	r7, [sp, #36]	; 0x24
 8006c36:	1e59      	subs	r1, r3, #1
 8006c38:	2005      	movs	r0, #5
 8006c3a:	920b      	str	r2, [sp, #44]	; 0x2c
 8006c3c:	910c      	str	r1, [sp, #48]	; 0x30
 8006c3e:	9006      	str	r0, [sp, #24]
 8006c40:	960a      	str	r6, [sp, #40]	; 0x28
 8006c42:	a805      	add	r0, sp, #20
 8006c44:	47a8      	blx	r5
 8006c46:	a909      	add	r1, sp, #36	; 0x24
 8006c48:	aa0b      	add	r2, sp, #44	; 0x2c
 8006c4a:	4620      	mov	r0, r4
 8006c4c:	f000 f95f 	bl	8006f0e <FRAMEWIN__GetTitleLimits>
 8006c50:	2002      	movs	r0, #2
 8006c52:	f006 fa3f 	bl	800d0d4 <GUI_SetTextMode>
 8006c56:	9802      	ldr	r0, [sp, #8]
 8006c58:	f006 fa46 	bl	800d0e8 <GUI_SetFont>
 8006c5c:	2212      	movs	r2, #18
 8006c5e:	9206      	str	r2, [sp, #24]
 8006c60:	a805      	add	r0, sp, #20
 8006c62:	47a8      	blx	r5
 8006c64:	f002 fc1a 	bl	800949c <WM__GetNextIVR>
 8006c68:	e7c0      	b.n	8006bec <_Paint+0x64>
 8006c6a:	b00f      	add	sp, #60	; 0x3c
 8006c6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08006c70 <FRAMEWIN_SetDefaultSkin>:
 8006c70:	4a06      	ldr	r2, [pc, #24]	; (8006c8c <FRAMEWIN_SetDefaultSkin+0x1c>)
 8006c72:	4b07      	ldr	r3, [pc, #28]	; (8006c90 <FRAMEWIN_SetDefaultSkin+0x20>)
 8006c74:	4907      	ldr	r1, [pc, #28]	; (8006c94 <FRAMEWIN_SetDefaultSkin+0x24>)
 8006c76:	b510      	push	{r4, lr}
 8006c78:	601a      	str	r2, [r3, #0]
 8006c7a:	6048      	str	r0, [r1, #4]
 8006c7c:	4a06      	ldr	r2, [pc, #24]	; (8006c98 <FRAMEWIN_SetDefaultSkin+0x28>)
 8006c7e:	c903      	ldmia	r1, {r0, r1}
 8006c80:	69d4      	ldr	r4, [r2, #28]
 8006c82:	3218      	adds	r2, #24
 8006c84:	e882 0003 	stmia.w	r2, {r0, r1}
 8006c88:	4620      	mov	r0, r4
 8006c8a:	bd10      	pop	{r4, pc}
 8006c8c:	20000110 	.word	0x20000110
 8006c90:	20000144 	.word	0x20000144
 8006c94:	20000108 	.word	0x20000108
 8006c98:	2000011c 	.word	0x2000011c

08006c9c <FRAMEWIN_SetFont>:
 8006c9c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8006ca0:	460e      	mov	r6, r1
 8006ca2:	4604      	mov	r4, r0
 8006ca4:	2800      	cmp	r0, #0
 8006ca6:	d029      	beq.n	8006cfc <FRAMEWIN_SetFont+0x60>
 8006ca8:	f007 fe12 	bl	800e8d0 <GUI_ALLOC_LockH>
 8006cac:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 8006cae:	9003      	str	r0, [sp, #12]
 8006cb0:	688d      	ldr	r5, [r1, #8]
 8006cb2:	f000 f91d 	bl	8006ef0 <FRAMEWIN__CalcTitleHeight>
 8006cb6:	4680      	mov	r8, r0
 8006cb8:	a804      	add	r0, sp, #16
 8006cba:	f850 2d04 	ldr.w	r2, [r0, #-4]!
 8006cbe:	6356      	str	r6, [r2, #52]	; 0x34
 8006cc0:	f007 fe14 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8006cc4:	682e      	ldr	r6, [r5, #0]
 8006cc6:	2101      	movs	r1, #1
 8006cc8:	4620      	mov	r0, r4
 8006cca:	47b0      	blx	r6
 8006ccc:	682b      	ldr	r3, [r5, #0]
 8006cce:	4607      	mov	r7, r0
 8006cd0:	2103      	movs	r1, #3
 8006cd2:	4620      	mov	r0, r4
 8006cd4:	4798      	blx	r3
 8006cd6:	2100      	movs	r1, #0
 8006cd8:	4606      	mov	r6, r0
 8006cda:	682d      	ldr	r5, [r5, #0]
 8006cdc:	4620      	mov	r0, r4
 8006cde:	47a8      	blx	r5
 8006ce0:	4605      	mov	r5, r0
 8006ce2:	4620      	mov	r0, r4
 8006ce4:	f000 f9ca 	bl	800707c <FRAMEWIN__UpdatePositions>
 8006ce8:	4620      	mov	r0, r4
 8006cea:	9500      	str	r5, [sp, #0]
 8006cec:	4641      	mov	r1, r8
 8006cee:	463a      	mov	r2, r7
 8006cf0:	4633      	mov	r3, r6
 8006cf2:	f008 fdba 	bl	800f86a <FRAMEWIN__UpdateButtons>
 8006cf6:	4620      	mov	r0, r4
 8006cf8:	f002 fa50 	bl	800919c <WM_InvalidateWindow>
 8006cfc:	e8bd 81ff 	ldmia.w	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}

08006d00 <FRAMEWIN_SetTextColor>:
 8006d00:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006d02:	460c      	mov	r4, r1
 8006d04:	4605      	mov	r5, r0
 8006d06:	b160      	cbz	r0, 8006d22 <FRAMEWIN_SetTextColor+0x22>
 8006d08:	f007 fde2 	bl	800e8d0 <GUI_ALLOC_LockH>
 8006d0c:	4602      	mov	r2, r0
 8006d0e:	a802      	add	r0, sp, #8
 8006d10:	6414      	str	r4, [r2, #64]	; 0x40
 8006d12:	f840 2d04 	str.w	r2, [r0, #-4]!
 8006d16:	6454      	str	r4, [r2, #68]	; 0x44
 8006d18:	f007 fde8 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8006d1c:	4628      	mov	r0, r5
 8006d1e:	f002 fa3d 	bl	800919c <WM_InvalidateWindow>
 8006d22:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08006d24 <FRAMEWIN_GetActive>:
 8006d24:	b513      	push	{r0, r1, r4, lr}
 8006d26:	4604      	mov	r4, r0
 8006d28:	b158      	cbz	r0, 8006d42 <FRAMEWIN_GetActive+0x1e>
 8006d2a:	f007 fdd1 	bl	800e8d0 <GUI_ALLOC_LockH>
 8006d2e:	ab02      	add	r3, sp, #8
 8006d30:	f8b0 407c 	ldrh.w	r4, [r0, #124]	; 0x7c
 8006d34:	f843 0d04 	str.w	r0, [r3, #-4]!
 8006d38:	4618      	mov	r0, r3
 8006d3a:	f3c4 04c0 	ubfx	r4, r4, #3, #1
 8006d3e:	f007 fdd5 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8006d42:	4620      	mov	r0, r4
 8006d44:	bd1c      	pop	{r2, r3, r4, pc}

08006d46 <FRAMEWIN_CreateIndirect>:
 8006d46:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006d48:	b089      	sub	sp, #36	; 0x24
 8006d4a:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8006d4e:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8006d52:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8006d56:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8006d5a:	9100      	str	r1, [sp, #0]
 8006d5c:	2100      	movs	r1, #0
 8006d5e:	9101      	str	r1, [sp, #4]
 8006d60:	8a44      	ldrh	r4, [r0, #18]
 8006d62:	9402      	str	r4, [sp, #8]
 8006d64:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8006d68:	9103      	str	r1, [sp, #12]
 8006d6a:	6844      	ldr	r4, [r0, #4]
 8006d6c:	990e      	ldr	r1, [sp, #56]	; 0x38
 8006d6e:	9404      	str	r4, [sp, #16]
 8006d70:	9105      	str	r1, [sp, #20]
 8006d72:	6984      	ldr	r4, [r0, #24]
 8006d74:	18f9      	adds	r1, r7, r3
 8006d76:	eb0e 0002 	add.w	r0, lr, r2
 8006d7a:	9406      	str	r4, [sp, #24]
 8006d7c:	4632      	mov	r2, r6
 8006d7e:	462b      	mov	r3, r5
 8006d80:	f000 f9d2 	bl	8007128 <FRAMEWIN_CreateUser>
 8006d84:	b009      	add	sp, #36	; 0x24
 8006d86:	bdf0      	pop	{r4, r5, r6, r7, pc}

08006d88 <_SetActive>:
 8006d88:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006d8a:	460d      	mov	r5, r1
 8006d8c:	4604      	mov	r4, r0
 8006d8e:	f007 fd9f 	bl	800e8d0 <GUI_ALLOC_LockH>
 8006d92:	f8b0 207c 	ldrh.w	r2, [r0, #124]	; 0x7c
 8006d96:	9001      	str	r0, [sp, #4]
 8006d98:	f002 0108 	and.w	r1, r2, #8
 8006d9c:	b28b      	uxth	r3, r1
 8006d9e:	b11d      	cbz	r5, 8006da8 <_SetActive+0x20>
 8006da0:	b953      	cbnz	r3, 8006db8 <_SetActive+0x30>
 8006da2:	f042 0208 	orr.w	r2, r2, #8
 8006da6:	e002      	b.n	8006dae <_SetActive+0x26>
 8006da8:	b133      	cbz	r3, 8006db8 <_SetActive+0x30>
 8006daa:	f022 0208 	bic.w	r2, r2, #8
 8006dae:	f8a0 207c 	strh.w	r2, [r0, #124]	; 0x7c
 8006db2:	4620      	mov	r0, r4
 8006db4:	f002 f9f2 	bl	800919c <WM_InvalidateWindow>
 8006db8:	a801      	add	r0, sp, #4
 8006dba:	f007 fd97 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8006dbe:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08006dc0 <FRAMEWIN__GetBorderSize>:
 8006dc0:	b570      	push	{r4, r5, r6, lr}
 8006dc2:	b08a      	sub	sp, #40	; 0x28
 8006dc4:	4605      	mov	r5, r0
 8006dc6:	460c      	mov	r4, r1
 8006dc8:	f007 fd82 	bl	800e8d0 <GUI_ALLOC_LockH>
 8006dcc:	ab0a      	add	r3, sp, #40	; 0x28
 8006dce:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8006dd0:	f843 0d28 	str.w	r0, [r3, #-40]!
 8006dd4:	4668      	mov	r0, sp
 8006dd6:	6896      	ldr	r6, [r2, #8]
 8006dd8:	f007 fd88 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8006ddc:	9501      	str	r5, [sp, #4]
 8006dde:	2c03      	cmp	r4, #3
 8006de0:	d80b      	bhi.n	8006dfa <FRAMEWIN__GetBorderSize+0x3a>
 8006de2:	e8df f004 	tbb	[pc, r4]
 8006de6:	0402      	.short	0x0402
 8006de8:	0806      	.short	0x0806
 8006dea:	2018      	movs	r0, #24
 8006dec:	e004      	b.n	8006df8 <FRAMEWIN__GetBorderSize+0x38>
 8006dee:	2016      	movs	r0, #22
 8006df0:	e002      	b.n	8006df8 <FRAMEWIN__GetBorderSize+0x38>
 8006df2:	2015      	movs	r0, #21
 8006df4:	e000      	b.n	8006df8 <FRAMEWIN__GetBorderSize+0x38>
 8006df6:	2017      	movs	r0, #23
 8006df8:	9002      	str	r0, [sp, #8]
 8006dfa:	6871      	ldr	r1, [r6, #4]
 8006dfc:	a801      	add	r0, sp, #4
 8006dfe:	4788      	blx	r1
 8006e00:	b00a      	add	sp, #40	; 0x28
 8006e02:	bd70      	pop	{r4, r5, r6, pc}

08006e04 <FRAMEWIN__cbClient>:
 8006e04:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006e08:	6845      	ldr	r5, [r0, #4]
 8006e0a:	b087      	sub	sp, #28
 8006e0c:	4604      	mov	r4, r0
 8006e0e:	4628      	mov	r0, r5
 8006e10:	f001 fc53 	bl	80086ba <WM_GetParent>
 8006e14:	4606      	mov	r6, r0
 8006e16:	f007 fd5b 	bl	800e8d0 <GUI_ALLOC_LockH>
 8006e1a:	4603      	mov	r3, r0
 8006e1c:	a806      	add	r0, sp, #24
 8006e1e:	6e5f      	ldr	r7, [r3, #100]	; 0x64
 8006e20:	f840 3d14 	str.w	r3, [r0, #-20]!
 8006e24:	f8d3 8048 	ldr.w	r8, [r3, #72]	; 0x48
 8006e28:	f8d3 9080 	ldr.w	r9, [r3, #128]	; 0x80
 8006e2c:	f007 fd5e 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8006e30:	6820      	ldr	r0, [r4, #0]
 8006e32:	380e      	subs	r0, #14
 8006e34:	2814      	cmp	r0, #20
 8006e36:	d850      	bhi.n	8006eda <FRAMEWIN__cbClient+0xd6>
 8006e38:	e8df f000 	tbb	[pc, r0]
 8006e3c:	4f4f0b2f 	.word	0x4f4f0b2f
 8006e40:	54544f4f 	.word	0x54544f4f
 8006e44:	4f4f544f 	.word	0x4f4f544f
 8006e48:	4f4f4f4f 	.word	0x4f4f4f4f
 8006e4c:	4f4f2a1e 	.word	0x4f4f2a1e
 8006e50:	4c          	.byte	0x4c
 8006e51:	00          	.byte	0x00
 8006e52:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 8006e56:	4590      	cmp	r8, r2
 8006e58:	d004      	beq.n	8006e64 <FRAMEWIN__cbClient+0x60>
 8006e5a:	4640      	mov	r0, r8
 8006e5c:	f005 fba0 	bl	800c5a0 <LCD_SetBkColor>
 8006e60:	f007 f924 	bl	800e0ac <GUI_Clear>
 8006e64:	2f00      	cmp	r7, #0
 8006e66:	d040      	beq.n	8006eea <FRAMEWIN__cbClient+0xe6>
 8006e68:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8006e6c:	ae02      	add	r6, sp, #8
 8006e6e:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8006e72:	9503      	str	r5, [sp, #12]
 8006e74:	4630      	mov	r0, r6
 8006e76:	e033      	b.n	8006ee0 <FRAMEWIN__cbClient+0xdc>
 8006e78:	68e1      	ldr	r1, [r4, #12]
 8006e7a:	2900      	cmp	r1, #0
 8006e7c:	d035      	beq.n	8006eea <FRAMEWIN__cbClient+0xe6>
 8006e7e:	f1b9 0f00 	cmp.w	r9, #0
 8006e82:	d023      	beq.n	8006ecc <FRAMEWIN__cbClient+0xc8>
 8006e84:	45a9      	cmp	r9, r5
 8006e86:	d021      	beq.n	8006ecc <FRAMEWIN__cbClient+0xc8>
 8006e88:	4648      	mov	r0, r9
 8006e8a:	f001 f949 	bl	8008120 <WM_SetFocus>
 8006e8e:	e02c      	b.n	8006eea <FRAMEWIN__cbClient+0xe6>
 8006e90:	4630      	mov	r0, r6
 8006e92:	4621      	mov	r1, r4
 8006e94:	f008 f95c 	bl	800f150 <WIDGET_HandleActive>
 8006e98:	e027      	b.n	8006eea <FRAMEWIN__cbClient+0xe6>
 8006e9a:	68e3      	ldr	r3, [r4, #12]
 8006e9c:	6858      	ldr	r0, [r3, #4]
 8006e9e:	2800      	cmp	r0, #0
 8006ea0:	dd1b      	ble.n	8006eda <FRAMEWIN__cbClient+0xd6>
 8006ea2:	6819      	ldr	r1, [r3, #0]
 8006ea4:	2909      	cmp	r1, #9
 8006ea6:	d011      	beq.n	8006ecc <FRAMEWIN__cbClient+0xc8>
 8006ea8:	290a      	cmp	r1, #10
 8006eaa:	d116      	bne.n	8006eda <FRAMEWIN__cbClient+0xd6>
 8006eac:	4628      	mov	r0, r5
 8006eae:	f001 f8d5 	bl	800805c <WM_SetFocusOnPrevChild>
 8006eb2:	4604      	mov	r4, r0
 8006eb4:	4630      	mov	r0, r6
 8006eb6:	f007 fd0b 	bl	800e8d0 <GUI_ALLOC_LockH>
 8006eba:	4602      	mov	r2, r0
 8006ebc:	a806      	add	r0, sp, #24
 8006ebe:	f840 2d14 	str.w	r2, [r0, #-20]!
 8006ec2:	f8c2 4080 	str.w	r4, [r2, #128]	; 0x80
 8006ec6:	f007 fd11 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8006eca:	e00e      	b.n	8006eea <FRAMEWIN__cbClient+0xe6>
 8006ecc:	4628      	mov	r0, r5
 8006ece:	f001 f8f5 	bl	80080bc <WM_SetFocusOnNextChild>
 8006ed2:	e7ee      	b.n	8006eb2 <FRAMEWIN__cbClient+0xae>
 8006ed4:	f8c4 800c 	str.w	r8, [r4, #12]
 8006ed8:	e007      	b.n	8006eea <FRAMEWIN__cbClient+0xe6>
 8006eda:	b11f      	cbz	r7, 8006ee4 <FRAMEWIN__cbClient+0xe0>
 8006edc:	6066      	str	r6, [r4, #4]
 8006ede:	4620      	mov	r0, r4
 8006ee0:	47b8      	blx	r7
 8006ee2:	e002      	b.n	8006eea <FRAMEWIN__cbClient+0xe6>
 8006ee4:	4620      	mov	r0, r4
 8006ee6:	f002 fd83 	bl	80099f0 <WM_DefaultProc>
 8006eea:	b007      	add	sp, #28
 8006eec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08006ef0 <FRAMEWIN__CalcTitleHeight>:
 8006ef0:	b508      	push	{r3, lr}
 8006ef2:	4603      	mov	r3, r0
 8006ef4:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 8006ef6:	f000 0120 	and.w	r1, r0, #32
 8006efa:	b288      	uxth	r0, r1
 8006efc:	b130      	cbz	r0, 8006f0c <FRAMEWIN__CalcTitleHeight+0x1c>
 8006efe:	f9b3 0054 	ldrsh.w	r0, [r3, #84]	; 0x54
 8006f02:	b918      	cbnz	r0, 8006f0c <FRAMEWIN__CalcTitleHeight+0x1c>
 8006f04:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8006f06:	f006 fab7 	bl	800d478 <GUI_GetYSizeOfFont>
 8006f0a:	3002      	adds	r0, #2
 8006f0c:	bd08      	pop	{r3, pc}

08006f0e <FRAMEWIN__GetTitleLimits>:
 8006f0e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006f10:	b085      	sub	sp, #20
 8006f12:	4604      	mov	r4, r0
 8006f14:	460d      	mov	r5, r1
 8006f16:	4616      	mov	r6, r2
 8006f18:	f007 fcda 	bl	800e8d0 <GUI_ALLOC_LockH>
 8006f1c:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8006f1e:	9000      	str	r0, [sp, #0]
 8006f20:	c803      	ldmia	r0, {r0, r1}
 8006f22:	6897      	ldr	r7, [r2, #8]
 8006f24:	ab04      	add	r3, sp, #16
 8006f26:	e903 0003 	stmdb	r3, {r0, r1}
 8006f2a:	4668      	mov	r0, sp
 8006f2c:	f007 fcde 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8006f30:	683a      	ldr	r2, [r7, #0]
 8006f32:	4620      	mov	r0, r4
 8006f34:	2100      	movs	r1, #0
 8006f36:	4790      	blx	r2
 8006f38:	4607      	mov	r7, r0
 8006f3a:	4620      	mov	r0, r4
 8006f3c:	f001 fbe8 	bl	8008710 <WM_GetFirstChild>
 8006f40:	4604      	mov	r4, r0
 8006f42:	b350      	cbz	r0, 8006f9a <FRAMEWIN__GetTitleLimits+0x8c>
 8006f44:	4620      	mov	r0, r4
 8006f46:	f007 fcc3 	bl	800e8d0 <GUI_ALLOC_LockH>
 8006f4a:	4603      	mov	r3, r0
 8006f4c:	f9bd e00a 	ldrsh.w	lr, [sp, #10]
 8006f50:	f9b3 c002 	ldrsh.w	ip, [r3, #2]
 8006f54:	9001      	str	r0, [sp, #4]
 8006f56:	ebce 0c0c 	rsb	ip, lr, ip
 8006f5a:	45bc      	cmp	ip, r7
 8006f5c:	8800      	ldrh	r0, [r0, #0]
 8006f5e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8006f62:	8899      	ldrh	r1, [r3, #4]
 8006f64:	d112      	bne.n	8006f8c <FRAMEWIN__GetTitleLimits+0x7e>
 8006f66:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006f68:	061b      	lsls	r3, r3, #24
 8006f6a:	b212      	sxth	r2, r2
 8006f6c:	d507      	bpl.n	8006f7e <FRAMEWIN__GetTitleLimits+0x70>
 8006f6e:	b200      	sxth	r0, r0
 8006f70:	1a81      	subs	r1, r0, r2
 8006f72:	6832      	ldr	r2, [r6, #0]
 8006f74:	4291      	cmp	r1, r2
 8006f76:	dc09      	bgt.n	8006f8c <FRAMEWIN__GetTitleLimits+0x7e>
 8006f78:	1e4b      	subs	r3, r1, #1
 8006f7a:	6033      	str	r3, [r6, #0]
 8006f7c:	e006      	b.n	8006f8c <FRAMEWIN__GetTitleLimits+0x7e>
 8006f7e:	b208      	sxth	r0, r1
 8006f80:	1a81      	subs	r1, r0, r2
 8006f82:	682a      	ldr	r2, [r5, #0]
 8006f84:	4291      	cmp	r1, r2
 8006f86:	db01      	blt.n	8006f8c <FRAMEWIN__GetTitleLimits+0x7e>
 8006f88:	1c4b      	adds	r3, r1, #1
 8006f8a:	602b      	str	r3, [r5, #0]
 8006f8c:	a801      	add	r0, sp, #4
 8006f8e:	f007 fcad 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8006f92:	4620      	mov	r0, r4
 8006f94:	f001 fb99 	bl	80086ca <WM_GetNextSibling>
 8006f98:	e7d2      	b.n	8006f40 <FRAMEWIN__GetTitleLimits+0x32>
 8006f9a:	b005      	add	sp, #20
 8006f9c:	bdf0      	pop	{r4, r5, r6, r7, pc}

08006f9e <FRAMEWIN__CalcPositions>:
 8006f9e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006fa2:	b087      	sub	sp, #28
 8006fa4:	4604      	mov	r4, r0
 8006fa6:	460f      	mov	r7, r1
 8006fa8:	f007 fc92 	bl	800e8d0 <GUI_ALLOC_LockH>
 8006fac:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8006fae:	9003      	str	r0, [sp, #12]
 8006fb0:	6895      	ldr	r5, [r2, #8]
 8006fb2:	2101      	movs	r1, #1
 8006fb4:	682b      	ldr	r3, [r5, #0]
 8006fb6:	4620      	mov	r0, r4
 8006fb8:	4798      	blx	r3
 8006fba:	682e      	ldr	r6, [r5, #0]
 8006fbc:	2103      	movs	r1, #3
 8006fbe:	4683      	mov	fp, r0
 8006fc0:	4620      	mov	r0, r4
 8006fc2:	47b0      	blx	r6
 8006fc4:	682a      	ldr	r2, [r5, #0]
 8006fc6:	2102      	movs	r1, #2
 8006fc8:	4681      	mov	r9, r0
 8006fca:	4620      	mov	r0, r4
 8006fcc:	4790      	blx	r2
 8006fce:	2100      	movs	r1, #0
 8006fd0:	9001      	str	r0, [sp, #4]
 8006fd2:	682d      	ldr	r5, [r5, #0]
 8006fd4:	4620      	mov	r0, r4
 8006fd6:	47a8      	blx	r5
 8006fd8:	4605      	mov	r5, r0
 8006fda:	9803      	ldr	r0, [sp, #12]
 8006fdc:	f001 fb2c 	bl	8008638 <WM__GetWindowSizeX>
 8006fe0:	4682      	mov	sl, r0
 8006fe2:	9803      	ldr	r0, [sp, #12]
 8006fe4:	f001 fb2f 	bl	8008646 <WM__GetWindowSizeY>
 8006fe8:	4680      	mov	r8, r0
 8006fea:	9803      	ldr	r0, [sp, #12]
 8006fec:	8e41      	ldrh	r1, [r0, #50]	; 0x32
 8006fee:	f001 0320 	and.w	r3, r1, #32
 8006ff2:	b29e      	uxth	r6, r3
 8006ff4:	b10e      	cbz	r6, 8006ffa <FRAMEWIN__CalcPositions+0x5c>
 8006ff6:	f9b0 6058 	ldrsh.w	r6, [r0, #88]	; 0x58
 8006ffa:	f7ff ff79 	bl	8006ef0 <FRAMEWIN__CalcTitleHeight>
 8006ffe:	4602      	mov	r2, r0
 8007000:	9803      	ldr	r0, [sp, #12]
 8007002:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8007004:	b118      	cbz	r0, 800700e <FRAMEWIN__CalcPositions+0x70>
 8007006:	9200      	str	r2, [sp, #0]
 8007008:	f001 fb38 	bl	800867c <WM_GetWindowSizeY>
 800700c:	9a00      	ldr	r2, [sp, #0]
 800700e:	803a      	strh	r2, [r7, #0]
 8007010:	b292      	uxth	r2, r2
 8007012:	1993      	adds	r3, r2, r6
 8007014:	b2a9      	uxth	r1, r5
 8007016:	18ce      	adds	r6, r1, r3
 8007018:	f10a 3aff 	add.w	sl, sl, #4294967295
 800701c:	9b01      	ldr	r3, [sp, #4]
 800701e:	8078      	strh	r0, [r7, #2]
 8007020:	ebc9 0c0a 	rsb	ip, r9, sl
 8007024:	3901      	subs	r1, #1
 8007026:	1830      	adds	r0, r6, r0
 8007028:	f108 38ff 	add.w	r8, r8, #4294967295
 800702c:	fa1f f98c 	uxth.w	r9, ip
 8007030:	1852      	adds	r2, r2, r1
 8007032:	fa1f fb8b 	uxth.w	fp, fp
 8007036:	80f8      	strh	r0, [r7, #6]
 8007038:	ebc3 0008 	rsb	r0, r3, r8
 800703c:	8178      	strh	r0, [r7, #10]
 800703e:	827a      	strh	r2, [r7, #18]
 8007040:	f8a7 b004 	strh.w	fp, [r7, #4]
 8007044:	f8a7 9008 	strh.w	r9, [r7, #8]
 8007048:	f8a7 b00c 	strh.w	fp, [r7, #12]
 800704c:	f8a7 9010 	strh.w	r9, [r7, #16]
 8007050:	81fd      	strh	r5, [r7, #14]
 8007052:	a803      	add	r0, sp, #12
 8007054:	f007 fc4a 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8007058:	f9b7 0010 	ldrsh.w	r0, [r7, #16]
 800705c:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8007060:	9005      	str	r0, [sp, #20]
 8007062:	a904      	add	r1, sp, #16
 8007064:	aa05      	add	r2, sp, #20
 8007066:	4620      	mov	r0, r4
 8007068:	9304      	str	r3, [sp, #16]
 800706a:	f7ff ff50 	bl	8006f0e <FRAMEWIN__GetTitleLimits>
 800706e:	9904      	ldr	r1, [sp, #16]
 8007070:	9a05      	ldr	r2, [sp, #20]
 8007072:	81b9      	strh	r1, [r7, #12]
 8007074:	823a      	strh	r2, [r7, #16]
 8007076:	b007      	add	sp, #28
 8007078:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800707c <FRAMEWIN__UpdatePositions>:
 800707c:	b570      	push	{r4, r5, r6, lr}
 800707e:	b086      	sub	sp, #24
 8007080:	4606      	mov	r6, r0
 8007082:	f007 fc25 	bl	800e8d0 <GUI_ALLOC_LockH>
 8007086:	4602      	mov	r2, r0
 8007088:	a806      	add	r0, sp, #24
 800708a:	6e94      	ldr	r4, [r2, #104]	; 0x68
 800708c:	f840 2d18 	str.w	r2, [r0, #-24]!
 8007090:	4668      	mov	r0, sp
 8007092:	6ed5      	ldr	r5, [r2, #108]	; 0x6c
 8007094:	f007 fc2a 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8007098:	b904      	cbnz	r4, 800709c <FRAMEWIN__UpdatePositions+0x20>
 800709a:	b32d      	cbz	r5, 80070e8 <FRAMEWIN__UpdatePositions+0x6c>
 800709c:	4630      	mov	r0, r6
 800709e:	a901      	add	r1, sp, #4
 80070a0:	f7ff ff7d 	bl	8006f9e <FRAMEWIN__CalcPositions>
 80070a4:	b1ac      	cbz	r4, 80070d2 <FRAMEWIN__UpdatePositions+0x56>
 80070a6:	4620      	mov	r0, r4
 80070a8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80070ac:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 80070b0:	f001 f9c0 	bl	8008434 <WM_MoveChildTo>
 80070b4:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 80070b8:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 80070bc:	f9bd 000a 	ldrsh.w	r0, [sp, #10]
 80070c0:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 80070c4:	1ac9      	subs	r1, r1, r3
 80070c6:	1a13      	subs	r3, r2, r0
 80070c8:	3101      	adds	r1, #1
 80070ca:	4620      	mov	r0, r4
 80070cc:	1c5a      	adds	r2, r3, #1
 80070ce:	f000 ff92 	bl	8007ff6 <WM_SetSize>
 80070d2:	b14d      	cbz	r5, 80070e8 <FRAMEWIN__UpdatePositions+0x6c>
 80070d4:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 80070d8:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80070dc:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80070e0:	4628      	mov	r0, r5
 80070e2:	1ad2      	subs	r2, r2, r3
 80070e4:	f001 f9a6 	bl	8008434 <WM_MoveChildTo>
 80070e8:	b006      	add	sp, #24
 80070ea:	bd70      	pop	{r4, r5, r6, pc}

080070ec <FRAMEWIN_SetText>:
 80070ec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80070ee:	460d      	mov	r5, r1
 80070f0:	4604      	mov	r4, r0
 80070f2:	b1c0      	cbz	r0, 8007126 <FRAMEWIN_SetText+0x3a>
 80070f4:	f007 fbec 	bl	800e8d0 <GUI_ALLOC_LockH>
 80070f8:	6f03      	ldr	r3, [r0, #112]	; 0x70
 80070fa:	9000      	str	r0, [sp, #0]
 80070fc:	4668      	mov	r0, sp
 80070fe:	9301      	str	r3, [sp, #4]
 8007100:	f007 fbf4 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8007104:	a801      	add	r0, sp, #4
 8007106:	4629      	mov	r1, r5
 8007108:	f005 faba 	bl	800c680 <GUI__SetText>
 800710c:	b158      	cbz	r0, 8007126 <FRAMEWIN_SetText+0x3a>
 800710e:	4620      	mov	r0, r4
 8007110:	f007 fbde 	bl	800e8d0 <GUI_ALLOC_LockH>
 8007114:	9901      	ldr	r1, [sp, #4]
 8007116:	9000      	str	r0, [sp, #0]
 8007118:	6701      	str	r1, [r0, #112]	; 0x70
 800711a:	4668      	mov	r0, sp
 800711c:	f007 fbe6 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8007120:	4620      	mov	r0, r4
 8007122:	f002 f83b 	bl	800919c <WM_InvalidateWindow>
 8007126:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08007128 <FRAMEWIN_CreateUser>:
 8007128:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800712c:	b08b      	sub	sp, #44	; 0x2c
 800712e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8007130:	f8dd 904c 	ldr.w	r9, [sp, #76]	; 0x4c
 8007134:	9400      	str	r4, [sp, #0]
 8007136:	4c35      	ldr	r4, [pc, #212]	; (800720c <FRAMEWIN_CreateUser+0xe4>)
 8007138:	9402      	str	r4, [sp, #8]
 800713a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 800713c:	f449 5680 	orr.w	r6, r9, #4096	; 0x1000
 8007140:	3460      	adds	r4, #96	; 0x60
 8007142:	9601      	str	r6, [sp, #4]
 8007144:	9403      	str	r4, [sp, #12]
 8007146:	f002 f8e5 	bl	8009314 <WM_CreateWindowAsChild>
 800714a:	4606      	mov	r6, r0
 800714c:	2800      	cmp	r0, #0
 800714e:	d058      	beq.n	8007202 <FRAMEWIN_CreateUser+0xda>
 8007150:	f007 fbbe 	bl	800e8d0 <GUI_ALLOC_LockH>
 8007154:	4d2e      	ldr	r5, [pc, #184]	; (8007210 <FRAMEWIN_CreateUser+0xe8>)
 8007156:	9915      	ldr	r1, [sp, #84]	; 0x54
 8007158:	9004      	str	r0, [sp, #16]
 800715a:	2230      	movs	r2, #48	; 0x30
 800715c:	f007 fff0 	bl	800f140 <WIDGET__Init>
 8007160:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8007164:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007166:	f858 7d18 	ldr.w	r7, [r8, #-24]!
 800716a:	f107 0434 	add.w	r4, r7, #52	; 0x34
 800716e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007170:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007172:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007174:	e895 0003 	ldmia.w	r5, {r0, r1}
 8007178:	4d26      	ldr	r5, [pc, #152]	; (8007214 <FRAMEWIN_CreateUser+0xec>)
 800717a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800717c:	e884 0003 	stmia.w	r4, {r0, r1}
 8007180:	9814      	ldr	r0, [sp, #80]	; 0x50
 8007182:	6829      	ldr	r1, [r5, #0]
 8007184:	667b      	str	r3, [r7, #100]	; 0x64
 8007186:	2400      	movs	r4, #0
 8007188:	f8a7 007c 	strh.w	r0, [r7, #124]	; 0x7c
 800718c:	f8c7 4080 	str.w	r4, [r7, #128]	; 0x80
 8007190:	66fc      	str	r4, [r7, #108]	; 0x6c
 8007192:	f8c7 4088 	str.w	r4, [r7, #136]	; 0x88
 8007196:	65f9      	str	r1, [r7, #92]	; 0x5c
 8007198:	4640      	mov	r0, r8
 800719a:	f007 fba7 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800719e:	4630      	mov	r0, r6
 80071a0:	a905      	add	r1, sp, #20
 80071a2:	f7ff fefc 	bl	8006f9e <FRAMEWIN__CalcPositions>
 80071a6:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 80071aa:	f9bd 701e 	ldrsh.w	r7, [sp, #30]
 80071ae:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 80071b2:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 80071b6:	9403      	str	r4, [sp, #12]
 80071b8:	1a7b      	subs	r3, r7, r1
 80071ba:	f241 7782 	movw	r7, #6018	; 0x1782
 80071be:	9701      	str	r7, [sp, #4]
 80071c0:	4f15      	ldr	r7, [pc, #84]	; (8007218 <FRAMEWIN_CreateUser+0xf0>)
 80071c2:	9600      	str	r6, [sp, #0]
 80071c4:	1a12      	subs	r2, r2, r0
 80071c6:	3201      	adds	r2, #1
 80071c8:	3301      	adds	r3, #1
 80071ca:	9702      	str	r7, [sp, #8]
 80071cc:	f002 f8a2 	bl	8009314 <WM_CreateWindowAsChild>
 80071d0:	4604      	mov	r4, r0
 80071d2:	6828      	ldr	r0, [r5, #0]
 80071d4:	6841      	ldr	r1, [r0, #4]
 80071d6:	4630      	mov	r0, r6
 80071d8:	4788      	blx	r1
 80071da:	4630      	mov	r0, r6
 80071dc:	f007 fb78 	bl	800e8d0 <GUI_ALLOC_LockH>
 80071e0:	9004      	str	r0, [sp, #16]
 80071e2:	6684      	str	r4, [r0, #104]	; 0x68
 80071e4:	4640      	mov	r0, r8
 80071e6:	f007 fb81 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80071ea:	f242 0204 	movw	r2, #8196	; 0x2004
 80071ee:	ea09 0302 	and.w	r3, r9, r2
 80071f2:	b913      	cbnz	r3, 80071fa <FRAMEWIN_CreateUser+0xd2>
 80071f4:	4630      	mov	r0, r6
 80071f6:	f001 f9d2 	bl	800859e <WM_DisableMemdev>
 80071fa:	4630      	mov	r0, r6
 80071fc:	9916      	ldr	r1, [sp, #88]	; 0x58
 80071fe:	f7ff ff75 	bl	80070ec <FRAMEWIN_SetText>
 8007202:	4630      	mov	r0, r6
 8007204:	b00b      	add	sp, #44	; 0x2c
 8007206:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800720a:	bf00      	nop
 800720c:	0800724d 	.word	0x0800724d
 8007210:	2000011c 	.word	0x2000011c
 8007214:	20000144 	.word	0x20000144
 8007218:	08006e05 	.word	0x08006e05

0800721c <FRAMEWIN_SetTextAlign>:
 800721c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800721e:	460c      	mov	r4, r1
 8007220:	4605      	mov	r5, r0
 8007222:	b170      	cbz	r0, 8007242 <FRAMEWIN_SetTextAlign+0x26>
 8007224:	f007 fb54 	bl	800e8d0 <GUI_ALLOC_LockH>
 8007228:	f9b0 205a 	ldrsh.w	r2, [r0, #90]	; 0x5a
 800722c:	9001      	str	r0, [sp, #4]
 800722e:	42a2      	cmp	r2, r4
 8007230:	d004      	beq.n	800723c <FRAMEWIN_SetTextAlign+0x20>
 8007232:	f8a0 405a 	strh.w	r4, [r0, #90]	; 0x5a
 8007236:	4628      	mov	r0, r5
 8007238:	f001 ffb0 	bl	800919c <WM_InvalidateWindow>
 800723c:	a801      	add	r0, sp, #4
 800723e:	f007 fb55 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8007242:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08007244 <FRAMEWIN_SetActive>:
 8007244:	b108      	cbz	r0, 800724a <FRAMEWIN_SetActive+0x6>
 8007246:	f7ff bd9f 	b.w	8006d88 <_SetActive>
 800724a:	4770      	bx	lr

0800724c <FRAMEWIN_Callback>:
 800724c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007250:	6844      	ldr	r4, [r0, #4]
 8007252:	b08c      	sub	sp, #48	; 0x30
 8007254:	4605      	mov	r5, r0
 8007256:	4620      	mov	r0, r4
 8007258:	f007 fb3a 	bl	800e8d0 <GUI_ALLOC_LockH>
 800725c:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 800725e:	9001      	str	r0, [sp, #4]
 8007260:	f8d0 7088 	ldr.w	r7, [r0, #136]	; 0x88
 8007264:	f8d0 6080 	ldr.w	r6, [r0, #128]	; 0x80
 8007268:	f8d0 8068 	ldr.w	r8, [r0, #104]	; 0x68
 800726c:	f8b0 907c 	ldrh.w	r9, [r0, #124]	; 0x7c
 8007270:	b113      	cbz	r3, 8007278 <FRAMEWIN_Callback+0x2c>
 8007272:	f8d3 a000 	ldr.w	sl, [r3]
 8007276:	e000      	b.n	800727a <FRAMEWIN_Callback+0x2e>
 8007278:	469a      	mov	sl, r3
 800727a:	a801      	add	r0, sp, #4
 800727c:	f007 fb36 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8007280:	b13f      	cbz	r7, 8007292 <FRAMEWIN_Callback+0x46>
 8007282:	687b      	ldr	r3, [r7, #4]
 8007284:	4628      	mov	r0, r5
 8007286:	4798      	blx	r3
 8007288:	2800      	cmp	r0, #0
 800728a:	f040 8118 	bne.w	80074be <FRAMEWIN_Callback+0x272>
 800728e:	683f      	ldr	r7, [r7, #0]
 8007290:	e7f6      	b.n	8007280 <FRAMEWIN_Callback+0x34>
 8007292:	6828      	ldr	r0, [r5, #0]
 8007294:	2817      	cmp	r0, #23
 8007296:	f000 808d 	beq.w	80073b4 <FRAMEWIN_Callback+0x168>
 800729a:	dc18      	bgt.n	80072ce <FRAMEWIN_Callback+0x82>
 800729c:	280f      	cmp	r0, #15
 800729e:	d044      	beq.n	800732a <FRAMEWIN_Callback+0xde>
 80072a0:	dc06      	bgt.n	80072b0 <FRAMEWIN_Callback+0x64>
 80072a2:	280b      	cmp	r0, #11
 80072a4:	f000 80f7 	beq.w	8007496 <FRAMEWIN_Callback+0x24a>
 80072a8:	280d      	cmp	r0, #13
 80072aa:	f040 8100 	bne.w	80074ae <FRAMEWIN_Callback+0x262>
 80072ae:	e0c2      	b.n	8007436 <FRAMEWIN_Callback+0x1ea>
 80072b0:	2811      	cmp	r0, #17
 80072b2:	d01c      	beq.n	80072ee <FRAMEWIN_Callback+0xa2>
 80072b4:	2814      	cmp	r0, #20
 80072b6:	f040 80fa 	bne.w	80074ae <FRAMEWIN_Callback+0x262>
 80072ba:	4620      	mov	r0, r4
 80072bc:	a907      	add	r1, sp, #28
 80072be:	f7ff fe6e 	bl	8006f9e <FRAMEWIN__CalcPositions>
 80072c2:	ab08      	add	r3, sp, #32
 80072c4:	cb03      	ldmia	r3!, {r0, r1}
 80072c6:	68ea      	ldr	r2, [r5, #12]
 80072c8:	6010      	str	r0, [r2, #0]
 80072ca:	6051      	str	r1, [r2, #4]
 80072cc:	e0f7      	b.n	80074be <FRAMEWIN_Callback+0x272>
 80072ce:	2826      	cmp	r0, #38	; 0x26
 80072d0:	d073      	beq.n	80073ba <FRAMEWIN_Callback+0x16e>
 80072d2:	dc05      	bgt.n	80072e0 <FRAMEWIN_Callback+0x94>
 80072d4:	281e      	cmp	r0, #30
 80072d6:	d07d      	beq.n	80073d4 <FRAMEWIN_Callback+0x188>
 80072d8:	2820      	cmp	r0, #32
 80072da:	f040 80e8 	bne.w	80074ae <FRAMEWIN_Callback+0x262>
 80072de:	e0ba      	b.n	8007456 <FRAMEWIN_Callback+0x20a>
 80072e0:	282a      	cmp	r0, #42	; 0x2a
 80072e2:	d014      	beq.n	800730e <FRAMEWIN_Callback+0xc2>
 80072e4:	f5b0 7f10 	cmp.w	r0, #576	; 0x240
 80072e8:	f040 80e1 	bne.w	80074ae <FRAMEWIN_Callback+0x262>
 80072ec:	e024      	b.n	8007338 <FRAMEWIN_Callback+0xec>
 80072ee:	4620      	mov	r0, r4
 80072f0:	68ee      	ldr	r6, [r5, #12]
 80072f2:	f007 faed 	bl	800e8d0 <GUI_ALLOC_LockH>
 80072f6:	9002      	str	r0, [sp, #8]
 80072f8:	8931      	ldrh	r1, [r6, #8]
 80072fa:	2901      	cmp	r1, #1
 80072fc:	d105      	bne.n	800730a <FRAMEWIN_Callback+0xbe>
 80072fe:	f8b0 207c 	ldrh.w	r2, [r0, #124]	; 0x7c
 8007302:	f442 7380 	orr.w	r3, r2, #256	; 0x100
 8007306:	f8a0 307c 	strh.w	r3, [r0, #124]	; 0x7c
 800730a:	a802      	add	r0, sp, #8
 800730c:	e0cd      	b.n	80074aa <FRAMEWIN_Callback+0x25e>
 800730e:	4620      	mov	r0, r4
 8007310:	f007 fade 	bl	800e8d0 <GUI_ALLOC_LockH>
 8007314:	68eb      	ldr	r3, [r5, #12]
 8007316:	9001      	str	r0, [sp, #4]
 8007318:	b113      	cbz	r3, 8007320 <FRAMEWIN_Callback+0xd4>
 800731a:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
 800731e:	e002      	b.n	8007326 <FRAMEWIN_Callback+0xda>
 8007320:	f8d0 0084 	ldr.w	r0, [r0, #132]	; 0x84
 8007324:	60e8      	str	r0, [r5, #12]
 8007326:	a801      	add	r0, sp, #4
 8007328:	e041      	b.n	80073ae <FRAMEWIN_Callback+0x162>
 800732a:	f1ba 0f00 	cmp.w	sl, #0
 800732e:	f000 80be 	beq.w	80074ae <FRAMEWIN_Callback+0x262>
 8007332:	4620      	mov	r0, r4
 8007334:	47d0      	blx	sl
 8007336:	e0ba      	b.n	80074ae <FRAMEWIN_Callback+0x262>
 8007338:	4620      	mov	r0, r4
 800733a:	f8d5 800c 	ldr.w	r8, [r5, #12]
 800733e:	f007 fac7 	bl	800e8d0 <GUI_ALLOC_LockH>
 8007342:	ae0c      	add	r6, sp, #48	; 0x30
 8007344:	f8b0 707c 	ldrh.w	r7, [r0, #124]	; 0x7c
 8007348:	f846 0d28 	str.w	r0, [r6, #-40]!
 800734c:	4630      	mov	r0, r6
 800734e:	f007 facd 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8007352:	68e8      	ldr	r0, [r5, #12]
 8007354:	2800      	cmp	r0, #0
 8007356:	f000 80b2 	beq.w	80074be <FRAMEWIN_Callback+0x272>
 800735a:	f898 1008 	ldrb.w	r1, [r8, #8]
 800735e:	b1d9      	cbz	r1, 8007398 <FRAMEWIN_Callback+0x14c>
 8007360:	f007 0008 	and.w	r0, r7, #8
 8007364:	b281      	uxth	r1, r0
 8007366:	b911      	cbnz	r1, 800736e <FRAMEWIN_Callback+0x122>
 8007368:	4620      	mov	r0, r4
 800736a:	f000 fed9 	bl	8008120 <WM_SetFocus>
 800736e:	4620      	mov	r0, r4
 8007370:	f001 fa44 	bl	80087fc <WM_BringToTop>
 8007374:	f407 7288 	and.w	r2, r7, #272	; 0x110
 8007378:	f5b2 7f88 	cmp.w	r2, #272	; 0x110
 800737c:	f040 809f 	bne.w	80074be <FRAMEWIN_Callback+0x272>
 8007380:	f007 0780 	and.w	r7, r7, #128	; 0x80
 8007384:	b2bb      	uxth	r3, r7
 8007386:	2b00      	cmp	r3, #0
 8007388:	f040 8099 	bne.w	80074be <FRAMEWIN_Callback+0x272>
 800738c:	4620      	mov	r0, r4
 800738e:	4641      	mov	r1, r8
 8007390:	2205      	movs	r2, #5
 8007392:	f000 ff31 	bl	80081f8 <WM_SetCaptureMove>
 8007396:	e092      	b.n	80074be <FRAMEWIN_Callback+0x272>
 8007398:	4620      	mov	r0, r4
 800739a:	f007 fa99 	bl	800e8d0 <GUI_ALLOC_LockH>
 800739e:	f8b0 207c 	ldrh.w	r2, [r0, #124]	; 0x7c
 80073a2:	9002      	str	r0, [sp, #8]
 80073a4:	f422 7380 	bic.w	r3, r2, #256	; 0x100
 80073a8:	f8a0 307c 	strh.w	r3, [r0, #124]	; 0x7c
 80073ac:	4630      	mov	r0, r6
 80073ae:	f007 fa9d 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80073b2:	e084      	b.n	80074be <FRAMEWIN_Callback+0x272>
 80073b4:	f8c5 800c 	str.w	r8, [r5, #12]
 80073b8:	e081      	b.n	80074be <FRAMEWIN_Callback+0x272>
 80073ba:	68e9      	ldr	r1, [r5, #12]
 80073bc:	2902      	cmp	r1, #2
 80073be:	d17e      	bne.n	80074be <FRAMEWIN_Callback+0x272>
 80073c0:	9106      	str	r1, [sp, #24]
 80073c2:	a90c      	add	r1, sp, #48	; 0x30
 80073c4:	2227      	movs	r2, #39	; 0x27
 80073c6:	f841 2d24 	str.w	r2, [r1, #-36]!
 80073ca:	68a8      	ldr	r0, [r5, #8]
 80073cc:	9405      	str	r4, [sp, #20]
 80073ce:	f000 fd5b 	bl	8007e88 <WM__SendMessage>
 80073d2:	e074      	b.n	80074be <FRAMEWIN_Callback+0x272>
 80073d4:	f8d5 900c 	ldr.w	r9, [r5, #12]
 80073d8:	f1b9 0f01 	cmp.w	r9, #1
 80073dc:	d126      	bne.n	800742c <FRAMEWIN_Callback+0x1e0>
 80073de:	4630      	mov	r0, r6
 80073e0:	f001 f8e8 	bl	80085b4 <WM_IsWindow>
 80073e4:	b158      	cbz	r0, 80073fe <FRAMEWIN_Callback+0x1b2>
 80073e6:	4630      	mov	r0, r6
 80073e8:	f000 fe9a 	bl	8008120 <WM_SetFocus>
 80073ec:	4630      	mov	r0, r6
 80073ee:	f001 f907 	bl	8008600 <WM_HasFocus>
 80073f2:	b198      	cbz	r0, 800741c <FRAMEWIN_Callback+0x1d0>
 80073f4:	4630      	mov	r0, r6
 80073f6:	4649      	mov	r1, r9
 80073f8:	f007 fe79 	bl	800f0ee <WIDGET_OrState>
 80073fc:	e00e      	b.n	800741c <FRAMEWIN_Callback+0x1d0>
 80073fe:	4640      	mov	r0, r8
 8007400:	f000 fe5c 	bl	80080bc <WM_SetFocusOnNextChild>
 8007404:	4606      	mov	r6, r0
 8007406:	4620      	mov	r0, r4
 8007408:	f007 fa62 	bl	800e8d0 <GUI_ALLOC_LockH>
 800740c:	ab0c      	add	r3, sp, #48	; 0x30
 800740e:	f8c0 6080 	str.w	r6, [r0, #128]	; 0x80
 8007412:	f843 0d2c 	str.w	r0, [r3, #-44]!
 8007416:	4618      	mov	r0, r3
 8007418:	f007 fa68 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800741c:	4620      	mov	r0, r4
 800741e:	2101      	movs	r1, #1
 8007420:	f7ff ff10 	bl	8007244 <FRAMEWIN_SetActive>
 8007424:	2e00      	cmp	r6, #0
 8007426:	d14a      	bne.n	80074be <FRAMEWIN_Callback+0x272>
 8007428:	60ee      	str	r6, [r5, #12]
 800742a:	e048      	b.n	80074be <FRAMEWIN_Callback+0x272>
 800742c:	4620      	mov	r0, r4
 800742e:	4639      	mov	r1, r7
 8007430:	f7ff ff08 	bl	8007244 <FRAMEWIN_SetActive>
 8007434:	e043      	b.n	80074be <FRAMEWIN_Callback+0x272>
 8007436:	f009 0908 	and.w	r9, r9, #8
 800743a:	fa1f f189 	uxth.w	r1, r9
 800743e:	2900      	cmp	r1, #0
 8007440:	d135      	bne.n	80074ae <FRAMEWIN_Callback+0x262>
 8007442:	68ea      	ldr	r2, [r5, #12]
 8007444:	68d3      	ldr	r3, [r2, #12]
 8007446:	2b00      	cmp	r3, #0
 8007448:	d031      	beq.n	80074ae <FRAMEWIN_Callback+0x262>
 800744a:	7a18      	ldrb	r0, [r3, #8]
 800744c:	b378      	cbz	r0, 80074ae <FRAMEWIN_Callback+0x262>
 800744e:	4620      	mov	r0, r4
 8007450:	f000 fe66 	bl	8008120 <WM_SetFocus>
 8007454:	e02b      	b.n	80074ae <FRAMEWIN_Callback+0x262>
 8007456:	68ee      	ldr	r6, [r5, #12]
 8007458:	b34e      	cbz	r6, 80074ae <FRAMEWIN_Callback+0x262>
 800745a:	6870      	ldr	r0, [r6, #4]
 800745c:	4621      	mov	r1, r4
 800745e:	f000 fd4b 	bl	8007ef8 <WM__IsAncestorOrSelf>
 8007462:	b120      	cbz	r0, 800746e <FRAMEWIN_Callback+0x222>
 8007464:	4620      	mov	r0, r4
 8007466:	2101      	movs	r1, #1
 8007468:	f7ff fc8e 	bl	8006d88 <_SetActive>
 800746c:	e01f      	b.n	80074ae <FRAMEWIN_Callback+0x262>
 800746e:	4620      	mov	r0, r4
 8007470:	4639      	mov	r1, r7
 8007472:	f7ff fc89 	bl	8006d88 <_SetActive>
 8007476:	6830      	ldr	r0, [r6, #0]
 8007478:	4621      	mov	r1, r4
 800747a:	f000 fd2c 	bl	8007ed6 <WM__IsAncestor>
 800747e:	b1b0      	cbz	r0, 80074ae <FRAMEWIN_Callback+0x262>
 8007480:	4620      	mov	r0, r4
 8007482:	f007 fa25 	bl	800e8d0 <GUI_ALLOC_LockH>
 8007486:	a90c      	add	r1, sp, #48	; 0x30
 8007488:	6832      	ldr	r2, [r6, #0]
 800748a:	f841 0d28 	str.w	r0, [r1, #-40]!
 800748e:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8007492:	4608      	mov	r0, r1
 8007494:	e009      	b.n	80074aa <FRAMEWIN_Callback+0x25e>
 8007496:	4620      	mov	r0, r4
 8007498:	f007 fa1a 	bl	800e8d0 <GUI_ALLOC_LockH>
 800749c:	ae0c      	add	r6, sp, #48	; 0x30
 800749e:	f846 0d2c 	str.w	r0, [r6, #-44]!
 80074a2:	3070      	adds	r0, #112	; 0x70
 80074a4:	f007 fc66 	bl	800ed74 <GUI_ALLOC_FreePtr>
 80074a8:	4630      	mov	r0, r6
 80074aa:	f007 fa1f 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80074ae:	4620      	mov	r0, r4
 80074b0:	4629      	mov	r1, r5
 80074b2:	f007 fe4d 	bl	800f150 <WIDGET_HandleActive>
 80074b6:	b110      	cbz	r0, 80074be <FRAMEWIN_Callback+0x272>
 80074b8:	4628      	mov	r0, r5
 80074ba:	f002 fa99 	bl	80099f0 <WM_DefaultProc>
 80074be:	b00c      	add	sp, #48	; 0x30
 80074c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080074c4 <DIALOG_GetBkColor>:
 80074c4:	4b01      	ldr	r3, [pc, #4]	; (80074cc <DIALOG_GetBkColor+0x8>)
 80074c6:	6818      	ldr	r0, [r3, #0]
 80074c8:	4770      	bx	lr
 80074ca:	bf00      	nop
 80074cc:	20000148 	.word	0x20000148

080074d0 <GUI_CreateDialogBox>:
 80074d0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80074d4:	4605      	mov	r5, r0
 80074d6:	4688      	mov	r8, r1
 80074d8:	4614      	mov	r4, r2
 80074da:	461e      	mov	r6, r3
 80074dc:	b913      	cbnz	r3, 80074e4 <GUI_CreateDialogBox+0x14>
 80074de:	f001 f941 	bl	8008764 <WM_GetDesktopWindow>
 80074e2:	4606      	mov	r6, r0
 80074e4:	9400      	str	r4, [sp, #0]
 80074e6:	4628      	mov	r0, r5
 80074e8:	682c      	ldr	r4, [r5, #0]
 80074ea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80074ec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80074ee:	4631      	mov	r1, r6
 80074f0:	47a0      	blx	r4
 80074f2:	4604      	mov	r4, r0
 80074f4:	2800      	cmp	r0, #0
 80074f6:	d037      	beq.n	8007568 <GUI_CreateDialogBox+0x98>
 80074f8:	f001 f940 	bl	800877c <WM_GetClientWindow>
 80074fc:	8a69      	ldrh	r1, [r5, #18]
 80074fe:	4607      	mov	r7, r0
 8007500:	4620      	mov	r0, r4
 8007502:	f007 fdf4 	bl	800f0ee <WIDGET_OrState>
 8007506:	4620      	mov	r0, r4
 8007508:	f000 fd2f 	bl	8007f6a <WM_ShowWindow>
 800750c:	4638      	mov	r0, r7
 800750e:	f108 38ff 	add.w	r8, r8, #4294967295
 8007512:	f000 fd2a 	bl	8007f6a <WM_ShowWindow>
 8007516:	f1b8 0f00 	cmp.w	r8, #0
 800751a:	dd0f      	ble.n	800753c <GUI_CreateDialogBox+0x6c>
 800751c:	f855 cf1c 	ldr.w	ip, [r5, #28]!
 8007520:	2200      	movs	r2, #0
 8007522:	9200      	str	r2, [sp, #0]
 8007524:	4628      	mov	r0, r5
 8007526:	4639      	mov	r1, r7
 8007528:	4613      	mov	r3, r2
 800752a:	47e0      	blx	ip
 800752c:	4681      	mov	r9, r0
 800752e:	2800      	cmp	r0, #0
 8007530:	d1ed      	bne.n	800750e <GUI_CreateDialogBox+0x3e>
 8007532:	4620      	mov	r0, r4
 8007534:	f001 fe74 	bl	8009220 <WM_DeleteWindow>
 8007538:	464c      	mov	r4, r9
 800753a:	e015      	b.n	8007568 <GUI_CreateDialogBox+0x98>
 800753c:	211d      	movs	r1, #29
 800753e:	4638      	mov	r0, r7
 8007540:	f000 fef3 	bl	800832a <WM_SendMessageNoPara>
 8007544:	1c73      	adds	r3, r6, #1
 8007546:	d00f      	beq.n	8007568 <GUI_CreateDialogBox+0x98>
 8007548:	f001 f8d8 	bl	80086fc <WM_GetFocussedWindow>
 800754c:	b150      	cbz	r0, 8007564 <GUI_CreateDialogBox+0x94>
 800754e:	f007 f9b5 	bl	800e8bc <GUI_ALLOC_h2p>
 8007552:	6980      	ldr	r0, [r0, #24]
 8007554:	42a0      	cmp	r0, r4
 8007556:	d007      	beq.n	8007568 <GUI_CreateDialogBox+0x98>
 8007558:	2800      	cmp	r0, #0
 800755a:	d1f8      	bne.n	800754e <GUI_CreateDialogBox+0x7e>
 800755c:	4620      	mov	r0, r4
 800755e:	f000 fdad 	bl	80080bc <WM_SetFocusOnNextChild>
 8007562:	e001      	b.n	8007568 <GUI_CreateDialogBox+0x98>
 8007564:	42a6      	cmp	r6, r4
 8007566:	d1f9      	bne.n	800755c <GUI_CreateDialogBox+0x8c>
 8007568:	4620      	mov	r0, r4
 800756a:	e8bd 83fe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}

0800756e <CHECKBOX_SetText>:
 800756e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007570:	460e      	mov	r6, r1
 8007572:	4604      	mov	r4, r0
 8007574:	b1e0      	cbz	r0, 80075b0 <CHECKBOX_SetText+0x42>
 8007576:	b1d9      	cbz	r1, 80075b0 <CHECKBOX_SetText+0x42>
 8007578:	f007 f9aa 	bl	800e8d0 <GUI_ALLOC_LockH>
 800757c:	6f85      	ldr	r5, [r0, #120]	; 0x78
 800757e:	9000      	str	r0, [sp, #0]
 8007580:	4668      	mov	r0, sp
 8007582:	9501      	str	r5, [sp, #4]
 8007584:	f007 f9b2 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8007588:	a801      	add	r0, sp, #4
 800758a:	4631      	mov	r1, r6
 800758c:	f005 f878 	bl	800c680 <GUI__SetText>
 8007590:	b170      	cbz	r0, 80075b0 <CHECKBOX_SetText+0x42>
 8007592:	9b01      	ldr	r3, [sp, #4]
 8007594:	42ab      	cmp	r3, r5
 8007596:	d008      	beq.n	80075aa <CHECKBOX_SetText+0x3c>
 8007598:	4620      	mov	r0, r4
 800759a:	f007 f999 	bl	800e8d0 <GUI_ALLOC_LockH>
 800759e:	9901      	ldr	r1, [sp, #4]
 80075a0:	9000      	str	r0, [sp, #0]
 80075a2:	6781      	str	r1, [r0, #120]	; 0x78
 80075a4:	4668      	mov	r0, sp
 80075a6:	f007 f9a1 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80075aa:	4620      	mov	r0, r4
 80075ac:	f001 fdf6 	bl	800919c <WM_InvalidateWindow>
 80075b0:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

080075b2 <CHECKBOX_SetState>:
 80075b2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80075b4:	460d      	mov	r5, r1
 80075b6:	4604      	mov	r4, r0
 80075b8:	b1b8      	cbz	r0, 80075ea <CHECKBOX_SetState+0x38>
 80075ba:	f007 f989 	bl	800e8d0 <GUI_ALLOC_LockH>
 80075be:	4602      	mov	r2, r0
 80075c0:	a802      	add	r0, sp, #8
 80075c2:	f892 1074 	ldrb.w	r1, [r2, #116]	; 0x74
 80075c6:	f840 2d04 	str.w	r2, [r0, #-4]!
 80075ca:	428d      	cmp	r5, r1
 80075cc:	d20b      	bcs.n	80075e6 <CHECKBOX_SetState+0x34>
 80075ce:	f882 5075 	strb.w	r5, [r2, #117]	; 0x75
 80075d2:	f007 f98b 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80075d6:	4620      	mov	r0, r4
 80075d8:	f001 fde0 	bl	800919c <WM_InvalidateWindow>
 80075dc:	4620      	mov	r0, r4
 80075de:	2105      	movs	r1, #5
 80075e0:	f000 ff1f 	bl	8008422 <WM_NotifyParent>
 80075e4:	e001      	b.n	80075ea <CHECKBOX_SetState+0x38>
 80075e6:	f007 f981 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80075ea:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

080075ec <CHECKBOX_SetFont>:
 80075ec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80075ee:	460c      	mov	r4, r1
 80075f0:	4605      	mov	r5, r0
 80075f2:	b160      	cbz	r0, 800760e <CHECKBOX_SetFont+0x22>
 80075f4:	f007 f96c 	bl	800e8d0 <GUI_ALLOC_LockH>
 80075f8:	6b42      	ldr	r2, [r0, #52]	; 0x34
 80075fa:	9001      	str	r0, [sp, #4]
 80075fc:	42a2      	cmp	r2, r4
 80075fe:	d003      	beq.n	8007608 <CHECKBOX_SetFont+0x1c>
 8007600:	6344      	str	r4, [r0, #52]	; 0x34
 8007602:	4628      	mov	r0, r5
 8007604:	f001 fdca 	bl	800919c <WM_InvalidateWindow>
 8007608:	a801      	add	r0, sp, #4
 800760a:	f007 f96f 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800760e:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08007610 <CHECKBOX_CreateIndirect>:
 8007610:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007612:	b087      	sub	sp, #28
 8007614:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8007618:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 800761c:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8007620:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8007624:	9100      	str	r1, [sp, #0]
 8007626:	2100      	movs	r1, #0
 8007628:	9101      	str	r1, [sp, #4]
 800762a:	8a44      	ldrh	r4, [r0, #18]
 800762c:	9402      	str	r4, [sp, #8]
 800762e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8007632:	9103      	str	r1, [sp, #12]
 8007634:	6984      	ldr	r4, [r0, #24]
 8007636:	18f9      	adds	r1, r7, r3
 8007638:	eb0e 0002 	add.w	r0, lr, r2
 800763c:	9404      	str	r4, [sp, #16]
 800763e:	4632      	mov	r2, r6
 8007640:	462b      	mov	r3, r5
 8007642:	f000 f8ab 	bl	800779c <CHECKBOX_CreateUser>
 8007646:	b007      	add	sp, #28
 8007648:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800764c <CHECKBOX__GetButtonSize>:
 800764c:	b500      	push	{lr}
 800764e:	b08b      	sub	sp, #44	; 0x2c
 8007650:	2100      	movs	r1, #0
 8007652:	2224      	movs	r2, #36	; 0x24
 8007654:	a801      	add	r0, sp, #4
 8007656:	f00c f9e7 	bl	8013a28 <memset>
 800765a:	4805      	ldr	r0, [pc, #20]	; (8007670 <CHECKBOX__GetButtonSize+0x24>)
 800765c:	6801      	ldr	r1, [r0, #0]
 800765e:	688a      	ldr	r2, [r1, #8]
 8007660:	2319      	movs	r3, #25
 8007662:	9302      	str	r3, [sp, #8]
 8007664:	a801      	add	r0, sp, #4
 8007666:	6853      	ldr	r3, [r2, #4]
 8007668:	4798      	blx	r3
 800766a:	b00b      	add	sp, #44	; 0x2c
 800766c:	bd00      	pop	{pc}
 800766e:	bf00      	nop
 8007670:	20000188 	.word	0x20000188

08007674 <CHECKBOX_Callback>:
 8007674:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8007678:	6844      	ldr	r4, [r0, #4]
 800767a:	4605      	mov	r5, r0
 800767c:	4629      	mov	r1, r5
 800767e:	4620      	mov	r0, r4
 8007680:	f007 fd66 	bl	800f150 <WIDGET_HandleActive>
 8007684:	2800      	cmp	r0, #0
 8007686:	f000 8086 	beq.w	8007796 <CHECKBOX_Callback+0x122>
 800768a:	682b      	ldr	r3, [r5, #0]
 800768c:	2b0e      	cmp	r3, #14
 800768e:	d015      	beq.n	80076bc <CHECKBOX_Callback+0x48>
 8007690:	dc0e      	bgt.n	80076b0 <CHECKBOX_Callback+0x3c>
 8007692:	2b0b      	cmp	r3, #11
 8007694:	d17c      	bne.n	8007790 <CHECKBOX_Callback+0x11c>
 8007696:	4620      	mov	r0, r4
 8007698:	f007 f91a 	bl	800e8d0 <GUI_ALLOC_LockH>
 800769c:	ac02      	add	r4, sp, #8
 800769e:	f844 0d04 	str.w	r0, [r4, #-4]!
 80076a2:	3078      	adds	r0, #120	; 0x78
 80076a4:	f007 fb66 	bl	800ed74 <GUI_ALLOC_FreePtr>
 80076a8:	4620      	mov	r0, r4
 80076aa:	f007 f91f 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80076ae:	e06f      	b.n	8007790 <CHECKBOX_Callback+0x11c>
 80076b0:	2b0f      	cmp	r3, #15
 80076b2:	d025      	beq.n	8007700 <CHECKBOX_Callback+0x8c>
 80076b4:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 80076b8:	d16a      	bne.n	8007790 <CHECKBOX_Callback+0x11c>
 80076ba:	e031      	b.n	8007720 <CHECKBOX_Callback+0xac>
 80076bc:	4620      	mov	r0, r4
 80076be:	f007 f907 	bl	800e8d0 <GUI_ALLOC_LockH>
 80076c2:	a902      	add	r1, sp, #8
 80076c4:	f841 0d04 	str.w	r0, [r1, #-4]!
 80076c8:	f890 6074 	ldrb.w	r6, [r0, #116]	; 0x74
 80076cc:	f890 7075 	ldrb.w	r7, [r0, #117]	; 0x75
 80076d0:	4608      	mov	r0, r1
 80076d2:	f007 f90b 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80076d6:	4620      	mov	r0, r4
 80076d8:	f000 fbf4 	bl	8007ec4 <WM__IsEnabled>
 80076dc:	2800      	cmp	r0, #0
 80076de:	d057      	beq.n	8007790 <CHECKBOX_Callback+0x11c>
 80076e0:	68e8      	ldr	r0, [r5, #12]
 80076e2:	6842      	ldr	r2, [r0, #4]
 80076e4:	2a00      	cmp	r2, #0
 80076e6:	dd53      	ble.n	8007790 <CHECKBOX_Callback+0x11c>
 80076e8:	6803      	ldr	r3, [r0, #0]
 80076ea:	2b20      	cmp	r3, #32
 80076ec:	d150      	bne.n	8007790 <CHECKBOX_Callback+0x11c>
 80076ee:	1c7a      	adds	r2, r7, #1
 80076f0:	fb92 f1f6 	sdiv	r1, r2, r6
 80076f4:	4620      	mov	r0, r4
 80076f6:	fb06 2111 	mls	r1, r6, r1, r2
 80076fa:	f7ff ff5a 	bl	80075b2 <CHECKBOX_SetState>
 80076fe:	e047      	b.n	8007790 <CHECKBOX_Callback+0x11c>
 8007700:	4620      	mov	r0, r4
 8007702:	f007 f8e5 	bl	800e8d0 <GUI_ALLOC_LockH>
 8007706:	ab02      	add	r3, sp, #8
 8007708:	f843 0d04 	str.w	r0, [r3, #-4]!
 800770c:	6f05      	ldr	r5, [r0, #112]	; 0x70
 800770e:	682d      	ldr	r5, [r5, #0]
 8007710:	4618      	mov	r0, r3
 8007712:	f007 f8eb 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8007716:	2d00      	cmp	r5, #0
 8007718:	d03d      	beq.n	8007796 <CHECKBOX_Callback+0x122>
 800771a:	4620      	mov	r0, r4
 800771c:	47a8      	blx	r5
 800771e:	e03a      	b.n	8007796 <CHECKBOX_Callback+0x122>
 8007720:	4620      	mov	r0, r4
 8007722:	f007 f8d5 	bl	800e8d0 <GUI_ALLOC_LockH>
 8007726:	4601      	mov	r1, r0
 8007728:	a802      	add	r0, sp, #8
 800772a:	f8b1 8030 	ldrh.w	r8, [r1, #48]	; 0x30
 800772e:	f840 1d04 	str.w	r1, [r0, #-4]!
 8007732:	f891 7074 	ldrb.w	r7, [r1, #116]	; 0x74
 8007736:	f891 9075 	ldrb.w	r9, [r1, #117]	; 0x75
 800773a:	f007 f8d7 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800773e:	68ee      	ldr	r6, [r5, #12]
 8007740:	b1b6      	cbz	r6, 8007770 <CHECKBOX_Callback+0xfc>
 8007742:	4620      	mov	r0, r4
 8007744:	f000 ff6a 	bl	800861c <WM_HasCaptured>
 8007748:	4682      	mov	sl, r0
 800774a:	b998      	cbnz	r0, 8007774 <CHECKBOX_Callback+0x100>
 800774c:	7a30      	ldrb	r0, [r6, #8]
 800774e:	b1a0      	cbz	r0, 800777a <CHECKBOX_Callback+0x106>
 8007750:	4620      	mov	r0, r4
 8007752:	2101      	movs	r1, #1
 8007754:	f109 0901 	add.w	r9, r9, #1
 8007758:	f000 fdb6 	bl	80082c8 <WM_SetCapture>
 800775c:	fb99 f2f7 	sdiv	r2, r9, r7
 8007760:	fb07 9112 	mls	r1, r7, r2, r9
 8007764:	4620      	mov	r0, r4
 8007766:	f7ff ff24 	bl	80075b2 <CHECKBOX_SetState>
 800776a:	4656      	mov	r6, sl
 800776c:	2101      	movs	r1, #1
 800776e:	e006      	b.n	800777e <CHECKBOX_Callback+0x10a>
 8007770:	2103      	movs	r1, #3
 8007772:	e004      	b.n	800777e <CHECKBOX_Callback+0x10a>
 8007774:	2600      	movs	r6, #0
 8007776:	4631      	mov	r1, r6
 8007778:	e001      	b.n	800777e <CHECKBOX_Callback+0x10a>
 800777a:	2601      	movs	r6, #1
 800777c:	2102      	movs	r1, #2
 800777e:	4620      	mov	r0, r4
 8007780:	f000 fe4f 	bl	8008422 <WM_NotifyParent>
 8007784:	2e01      	cmp	r6, #1
 8007786:	d103      	bne.n	8007790 <CHECKBOX_Callback+0x11c>
 8007788:	fa0f f088 	sxth.w	r0, r8
 800778c:	f005 fe0a 	bl	800d3a4 <GUI_StoreKey>
 8007790:	4628      	mov	r0, r5
 8007792:	f002 f92d 	bl	80099f0 <WM_DefaultProc>
 8007796:	e8bd 87fc 	ldmia.w	sp!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800779c <CHECKBOX_CreateUser>:
 800779c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80077a0:	b086      	sub	sp, #24
 80077a2:	4680      	mov	r8, r0
 80077a4:	460f      	mov	r7, r1
 80077a6:	461c      	mov	r4, r3
 80077a8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80077aa:	4616      	mov	r6, r2
 80077ac:	b92a      	cbnz	r2, 80077ba <CHECKBOX_CreateUser+0x1e>
 80077ae:	4b27      	ldr	r3, [pc, #156]	; (800784c <CHECKBOX_CreateUser+0xb0>)
 80077b0:	6818      	ldr	r0, [r3, #0]
 80077b2:	6881      	ldr	r1, [r0, #8]
 80077b4:	680a      	ldr	r2, [r1, #0]
 80077b6:	4790      	blx	r2
 80077b8:	4606      	mov	r6, r0
 80077ba:	b92c      	cbnz	r4, 80077c8 <CHECKBOX_CreateUser+0x2c>
 80077bc:	4c23      	ldr	r4, [pc, #140]	; (800784c <CHECKBOX_CreateUser+0xb0>)
 80077be:	6823      	ldr	r3, [r4, #0]
 80077c0:	6898      	ldr	r0, [r3, #8]
 80077c2:	6801      	ldr	r1, [r0, #0]
 80077c4:	4788      	blx	r1
 80077c6:	4604      	mov	r4, r0
 80077c8:	4a21      	ldr	r2, [pc, #132]	; (8007850 <CHECKBOX_CreateUser+0xb4>)
 80077ca:	4922      	ldr	r1, [pc, #136]	; (8007854 <CHECKBOX_CreateUser+0xb8>)
 80077cc:	68d0      	ldr	r0, [r2, #12]
 80077ce:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80077d0:	9102      	str	r1, [sp, #8]
 80077d2:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 80077d6:	4298      	cmp	r0, r3
 80077d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80077da:	bf08      	it	eq
 80077dc:	f045 0501 	orreq.w	r5, r5, #1
 80077e0:	3254      	adds	r2, #84	; 0x54
 80077e2:	e88d 0028 	stmia.w	sp, {r3, r5}
 80077e6:	9203      	str	r2, [sp, #12]
 80077e8:	4640      	mov	r0, r8
 80077ea:	4639      	mov	r1, r7
 80077ec:	4632      	mov	r2, r6
 80077ee:	4623      	mov	r3, r4
 80077f0:	f001 fd90 	bl	8009314 <WM_CreateWindowAsChild>
 80077f4:	4680      	mov	r8, r0
 80077f6:	b328      	cbz	r0, 8007844 <CHECKBOX_CreateUser+0xa8>
 80077f8:	f007 f86a 	bl	800e8d0 <GUI_ALLOC_LockH>
 80077fc:	4d14      	ldr	r5, [pc, #80]	; (8007850 <CHECKBOX_CreateUser+0xb4>)
 80077fe:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8007800:	9005      	str	r0, [sp, #20]
 8007802:	2210      	movs	r2, #16
 8007804:	f007 fc9c 	bl	800f140 <WIDGET__Init>
 8007808:	af06      	add	r7, sp, #24
 800780a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800780c:	f857 6d04 	ldr.w	r6, [r7, #-4]!
 8007810:	f106 0434 	add.w	r4, r6, #52	; 0x34
 8007814:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007816:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007818:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800781a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800781c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800781e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007822:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8007826:	4c09      	ldr	r4, [pc, #36]	; (800784c <CHECKBOX_CreateUser+0xb0>)
 8007828:	6820      	ldr	r0, [r4, #0]
 800782a:	2302      	movs	r3, #2
 800782c:	210f      	movs	r1, #15
 800782e:	6730      	str	r0, [r6, #112]	; 0x70
 8007830:	f886 3074 	strb.w	r3, [r6, #116]	; 0x74
 8007834:	4638      	mov	r0, r7
 8007836:	67f1      	str	r1, [r6, #124]	; 0x7c
 8007838:	f007 f858 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800783c:	6822      	ldr	r2, [r4, #0]
 800783e:	4640      	mov	r0, r8
 8007840:	6853      	ldr	r3, [r2, #4]
 8007842:	4798      	blx	r3
 8007844:	4640      	mov	r0, r8
 8007846:	b006      	add	sp, #24
 8007848:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800784c:	20000188 	.word	0x20000188
 8007850:	2000014c 	.word	0x2000014c
 8007854:	08007675 	.word	0x08007675

08007858 <BUTTON_DrawSkinFlex>:
 8007858:	b5f0      	push	{r4, r5, r6, r7, lr}
 800785a:	6883      	ldr	r3, [r0, #8]
 800785c:	4a8b      	ldr	r2, [pc, #556]	; (8007a8c <BUTTON_DrawSkinFlex+0x234>)
 800785e:	4604      	mov	r4, r0
 8007860:	6840      	ldr	r0, [r0, #4]
 8007862:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
 8007866:	2805      	cmp	r0, #5
 8007868:	b089      	sub	sp, #36	; 0x24
 800786a:	d00e      	beq.n	800788a <BUTTON_DrawSkinFlex+0x32>
 800786c:	dc06      	bgt.n	800787c <BUTTON_DrawSkinFlex+0x24>
 800786e:	2800      	cmp	r0, #0
 8007870:	f040 8108 	bne.w	8007a84 <BUTTON_DrawSkinFlex+0x22c>
 8007874:	6820      	ldr	r0, [r4, #0]
 8007876:	f000 fb97 	bl	8007fa8 <WM_SetHasTrans>
 800787a:	e103      	b.n	8007a84 <BUTTON_DrawSkinFlex+0x22c>
 800787c:	2806      	cmp	r0, #6
 800787e:	f000 808a 	beq.w	8007996 <BUTTON_DrawSkinFlex+0x13e>
 8007882:	2812      	cmp	r0, #18
 8007884:	f040 80fe 	bne.w	8007a84 <BUTTON_DrawSkinFlex+0x22c>
 8007888:	e0ab      	b.n	80079e2 <BUTTON_DrawSkinFlex+0x18a>
 800788a:	69ee      	ldr	r6, [r5, #28]
 800788c:	2e00      	cmp	r6, #0
 800788e:	d052      	beq.n	8007936 <BUTTON_DrawSkinFlex+0xde>
 8007890:	9600      	str	r6, [sp, #0]
 8007892:	682e      	ldr	r6, [r5, #0]
 8007894:	9601      	str	r6, [sp, #4]
 8007896:	6868      	ldr	r0, [r5, #4]
 8007898:	9002      	str	r0, [sp, #8]
 800789a:	68ab      	ldr	r3, [r5, #8]
 800789c:	f104 0210 	add.w	r2, r4, #16
 80078a0:	9303      	str	r3, [sp, #12]
 80078a2:	ca0f      	ldmia	r2, {r0, r1, r2, r3}
 80078a4:	f005 f8ca 	bl	800ca3c <GUI__DrawTwinArc4>
 80078a8:	2600      	movs	r6, #0
 80078aa:	f855 0026 	ldr.w	r0, [r5, r6, lsl #2]
 80078ae:	f005 fc49 	bl	800d144 <GUI_SetColor>
 80078b2:	69ef      	ldr	r7, [r5, #28]
 80078b4:	69a3      	ldr	r3, [r4, #24]
 80078b6:	6960      	ldr	r0, [r4, #20]
 80078b8:	6921      	ldr	r1, [r4, #16]
 80078ba:	1bda      	subs	r2, r3, r7
 80078bc:	1830      	adds	r0, r6, r0
 80078be:	1879      	adds	r1, r7, r1
 80078c0:	f005 fe8a 	bl	800d5d8 <GUI_DrawHLine>
 80078c4:	69ef      	ldr	r7, [r5, #28]
 80078c6:	69e0      	ldr	r0, [r4, #28]
 80078c8:	6921      	ldr	r1, [r4, #16]
 80078ca:	69a2      	ldr	r2, [r4, #24]
 80078cc:	1b80      	subs	r0, r0, r6
 80078ce:	1879      	adds	r1, r7, r1
 80078d0:	1bd2      	subs	r2, r2, r7
 80078d2:	f005 fe81 	bl	800d5d8 <GUI_DrawHLine>
 80078d6:	69eb      	ldr	r3, [r5, #28]
 80078d8:	6927      	ldr	r7, [r4, #16]
 80078da:	6961      	ldr	r1, [r4, #20]
 80078dc:	69e2      	ldr	r2, [r4, #28]
 80078de:	19f0      	adds	r0, r6, r7
 80078e0:	1859      	adds	r1, r3, r1
 80078e2:	1ad2      	subs	r2, r2, r3
 80078e4:	f005 fe36 	bl	800d554 <GUI_DrawVLine>
 80078e8:	69eb      	ldr	r3, [r5, #28]
 80078ea:	69a0      	ldr	r0, [r4, #24]
 80078ec:	6967      	ldr	r7, [r4, #20]
 80078ee:	69e2      	ldr	r2, [r4, #28]
 80078f0:	1b80      	subs	r0, r0, r6
 80078f2:	19d9      	adds	r1, r3, r7
 80078f4:	1ad2      	subs	r2, r2, r3
 80078f6:	3601      	adds	r6, #1
 80078f8:	f005 fe2c 	bl	800d554 <GUI_DrawVLine>
 80078fc:	2e02      	cmp	r6, #2
 80078fe:	d1d4      	bne.n	80078aa <BUTTON_DrawSkinFlex+0x52>
 8007900:	68a8      	ldr	r0, [r5, #8]
 8007902:	f005 fc1f 	bl	800d144 <GUI_SetColor>
 8007906:	69eb      	ldr	r3, [r5, #28]
 8007908:	6920      	ldr	r0, [r4, #16]
 800790a:	69e6      	ldr	r6, [r4, #28]
 800790c:	6961      	ldr	r1, [r4, #20]
 800790e:	18c7      	adds	r7, r0, r3
 8007910:	1859      	adds	r1, r3, r1
 8007912:	1e7a      	subs	r2, r7, #1
 8007914:	1af3      	subs	r3, r6, r3
 8007916:	3002      	adds	r0, #2
 8007918:	f005 fddc 	bl	800d4d4 <GUI_FillRect>
 800791c:	69eb      	ldr	r3, [r5, #28]
 800791e:	69a2      	ldr	r2, [r4, #24]
 8007920:	6961      	ldr	r1, [r4, #20]
 8007922:	69e7      	ldr	r7, [r4, #28]
 8007924:	1ad0      	subs	r0, r2, r3
 8007926:	1859      	adds	r1, r3, r1
 8007928:	3001      	adds	r0, #1
 800792a:	3a02      	subs	r2, #2
 800792c:	1afb      	subs	r3, r7, r3
 800792e:	f005 fdd1 	bl	800d4d4 <GUI_FillRect>
 8007932:	69ee      	ldr	r6, [r5, #28]
 8007934:	e010      	b.n	8007958 <BUTTON_DrawSkinFlex+0x100>
 8007936:	f855 0026 	ldr.w	r0, [r5, r6, lsl #2]
 800793a:	f104 0710 	add.w	r7, r4, #16
 800793e:	f005 fc01 	bl	800d144 <GUI_SetColor>
 8007942:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8007946:	1830      	adds	r0, r6, r0
 8007948:	1871      	adds	r1, r6, r1
 800794a:	1b92      	subs	r2, r2, r6
 800794c:	1b9b      	subs	r3, r3, r6
 800794e:	3601      	adds	r6, #1
 8007950:	f007 fa62 	bl	800ee18 <GUI_DrawRect>
 8007954:	2e02      	cmp	r6, #2
 8007956:	d1ee      	bne.n	8007936 <BUTTON_DrawSkinFlex+0xde>
 8007958:	f104 0210 	add.w	r2, r4, #16
 800795c:	ca0f      	ldmia	r2, {r0, r1, r2, r3}
 800795e:	68ef      	ldr	r7, [r5, #12]
 8007960:	9700      	str	r7, [sp, #0]
 8007962:	692f      	ldr	r7, [r5, #16]
 8007964:	18cb      	adds	r3, r1, r3
 8007966:	1830      	adds	r0, r6, r0
 8007968:	3102      	adds	r1, #2
 800796a:	1b92      	subs	r2, r2, r6
 800796c:	105b      	asrs	r3, r3, #1
 800796e:	9701      	str	r7, [sp, #4]
 8007970:	f005 ff42 	bl	800d7f8 <GUI_DrawGradientV>
 8007974:	69e3      	ldr	r3, [r4, #28]
 8007976:	6961      	ldr	r1, [r4, #20]
 8007978:	6920      	ldr	r0, [r4, #16]
 800797a:	185a      	adds	r2, r3, r1
 800797c:	1051      	asrs	r1, r2, #1
 800797e:	69a2      	ldr	r2, [r4, #24]
 8007980:	696c      	ldr	r4, [r5, #20]
 8007982:	9400      	str	r4, [sp, #0]
 8007984:	69ac      	ldr	r4, [r5, #24]
 8007986:	1830      	adds	r0, r6, r0
 8007988:	9401      	str	r4, [sp, #4]
 800798a:	3101      	adds	r1, #1
 800798c:	1b92      	subs	r2, r2, r6
 800798e:	3b02      	subs	r3, #2
 8007990:	f005 ff32 	bl	800d7f8 <GUI_DrawGradientV>
 8007994:	e076      	b.n	8007a84 <BUTTON_DrawSkinFlex+0x22c>
 8007996:	6820      	ldr	r0, [r4, #0]
 8007998:	f006 ff9a 	bl	800e8d0 <GUI_ALLOC_LockH>
 800799c:	9004      	str	r0, [sp, #16]
 800799e:	6820      	ldr	r0, [r4, #0]
 80079a0:	f000 fa90 	bl	8007ec4 <WM__IsEnabled>
 80079a4:	9d04      	ldr	r5, [sp, #16]
 80079a6:	b130      	cbz	r0, 80079b6 <BUTTON_DrawSkinFlex+0x15e>
 80079a8:	68a1      	ldr	r1, [r4, #8]
 80079aa:	b951      	cbnz	r1, 80079c2 <BUTTON_DrawSkinFlex+0x16a>
 80079ac:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 80079ae:	1c13      	adds	r3, r2, #0
 80079b0:	bf18      	it	ne
 80079b2:	2301      	movne	r3, #1
 80079b4:	e006      	b.n	80079c4 <BUTTON_DrawSkinFlex+0x16c>
 80079b6:	6f68      	ldr	r0, [r5, #116]	; 0x74
 80079b8:	2800      	cmp	r0, #0
 80079ba:	bf14      	ite	ne
 80079bc:	2302      	movne	r3, #2
 80079be:	2300      	moveq	r3, #0
 80079c0:	e000      	b.n	80079c4 <BUTTON_DrawSkinFlex+0x16c>
 80079c2:	2300      	movs	r3, #0
 80079c4:	a808      	add	r0, sp, #32
 80079c6:	f850 5d10 	ldr.w	r5, [r0, #-16]!
 80079ca:	eb05 0183 	add.w	r1, r5, r3, lsl #2
 80079ce:	6ecd      	ldr	r5, [r1, #108]	; 0x6c
 80079d0:	f006 ff8c 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80079d4:	2200      	movs	r2, #0
 80079d6:	4628      	mov	r0, r5
 80079d8:	6821      	ldr	r1, [r4, #0]
 80079da:	4613      	mov	r3, r2
 80079dc:	f007 ff2d 	bl	800f83a <GUI_DRAW__Draw>
 80079e0:	e050      	b.n	8007a84 <BUTTON_DrawSkinFlex+0x22c>
 80079e2:	6820      	ldr	r0, [r4, #0]
 80079e4:	f006 ff74 	bl	800e8d0 <GUI_ALLOC_LockH>
 80079e8:	6e86      	ldr	r6, [r0, #104]	; 0x68
 80079ea:	9004      	str	r0, [sp, #16]
 80079ec:	2e00      	cmp	r6, #0
 80079ee:	d046      	beq.n	8007a7e <BUTTON_DrawSkinFlex+0x226>
 80079f0:	68a1      	ldr	r1, [r4, #8]
 80079f2:	f9b0 705c 	ldrsh.w	r7, [r0, #92]	; 0x5c
 80079f6:	b121      	cbz	r1, 8007a02 <BUTTON_DrawSkinFlex+0x1aa>
 80079f8:	2903      	cmp	r1, #3
 80079fa:	bf0c      	ite	eq
 80079fc:	2402      	moveq	r4, #2
 80079fe:	2400      	movne	r4, #0
 8007a00:	e000      	b.n	8007a04 <BUTTON_DrawSkinFlex+0x1ac>
 8007a02:	2401      	movs	r4, #1
 8007a04:	eb00 0384 	add.w	r3, r0, r4, lsl #2
 8007a08:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8007a0a:	6c1c      	ldr	r4, [r3, #64]	; 0x40
 8007a0c:	f005 fb6c 	bl	800d0e8 <GUI_SetFont>
 8007a10:	4620      	mov	r0, r4
 8007a12:	f005 fb97 	bl	800d144 <GUI_SetColor>
 8007a16:	a806      	add	r0, sp, #24
 8007a18:	f005 fd4c 	bl	800d4b4 <GUI_GetClientRect>
 8007a1c:	8ba8      	ldrh	r0, [r5, #28]
 8007a1e:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 8007a22:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 8007a26:	1881      	adds	r1, r0, r2
 8007a28:	1a1c      	subs	r4, r3, r0
 8007a2a:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8007a2e:	f8ad 401c 	strh.w	r4, [sp, #28]
 8007a32:	ac08      	add	r4, sp, #32
 8007a34:	1c82      	adds	r2, r0, #2
 8007a36:	f8ad 1018 	strh.w	r1, [sp, #24]
 8007a3a:	f8ad 201a 	strh.w	r2, [sp, #26]
 8007a3e:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 8007a42:	f854 2d10 	ldr.w	r2, [r4, #-16]!
 8007a46:	1e8b      	subs	r3, r1, #2
 8007a48:	a806      	add	r0, sp, #24
 8007a4a:	f9b2 105e 	ldrsh.w	r1, [r2, #94]	; 0x5e
 8007a4e:	f9b2 2060 	ldrsh.w	r2, [r2, #96]	; 0x60
 8007a52:	f8ad 301e 	strh.w	r3, [sp, #30]
 8007a56:	f005 fccb 	bl	800d3f0 <GUI_MoveRect>
 8007a5a:	4620      	mov	r0, r4
 8007a5c:	f006 ff46 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8007a60:	2002      	movs	r0, #2
 8007a62:	f005 fb37 	bl	800d0d4 <GUI_SetTextMode>
 8007a66:	4630      	mov	r0, r6
 8007a68:	f006 ff32 	bl	800e8d0 <GUI_ALLOC_LockH>
 8007a6c:	ac08      	add	r4, sp, #32
 8007a6e:	a906      	add	r1, sp, #24
 8007a70:	f844 0d0c 	str.w	r0, [r4, #-12]!
 8007a74:	463a      	mov	r2, r7
 8007a76:	f006 f922 	bl	800dcbe <GUI_DispStringInRect>
 8007a7a:	4620      	mov	r0, r4
 8007a7c:	e000      	b.n	8007a80 <BUTTON_DrawSkinFlex+0x228>
 8007a7e:	a804      	add	r0, sp, #16
 8007a80:	f006 ff34 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8007a84:	2000      	movs	r0, #0
 8007a86:	b009      	add	sp, #36	; 0x24
 8007a88:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007a8a:	bf00      	nop
 8007a8c:	08022558 	.word	0x08022558

08007a90 <_Create>:
 8007a90:	b530      	push	{r4, r5, lr}
 8007a92:	b08b      	sub	sp, #44	; 0x2c
 8007a94:	2100      	movs	r1, #0
 8007a96:	4604      	mov	r4, r0
 8007a98:	2224      	movs	r2, #36	; 0x24
 8007a9a:	a801      	add	r0, sp, #4
 8007a9c:	f00b ffc4 	bl	8013a28 <memset>
 8007aa0:	4620      	mov	r0, r4
 8007aa2:	f006 ff15 	bl	800e8d0 <GUI_ALLOC_LockH>
 8007aa6:	ab0a      	add	r3, sp, #40	; 0x28
 8007aa8:	6e42      	ldr	r2, [r0, #100]	; 0x64
 8007aaa:	f843 0d28 	str.w	r0, [r3, #-40]!
 8007aae:	6895      	ldr	r5, [r2, #8]
 8007ab0:	4668      	mov	r0, sp
 8007ab2:	f006 ff1b 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8007ab6:	2000      	movs	r0, #0
 8007ab8:	9002      	str	r0, [sp, #8]
 8007aba:	9401      	str	r4, [sp, #4]
 8007abc:	6829      	ldr	r1, [r5, #0]
 8007abe:	a801      	add	r0, sp, #4
 8007ac0:	4788      	blx	r1
 8007ac2:	b00b      	add	sp, #44	; 0x2c
 8007ac4:	bd30      	pop	{r4, r5, pc}

08007ac6 <_Paint>:
 8007ac6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007aca:	b08a      	sub	sp, #40	; 0x28
 8007acc:	4605      	mov	r5, r0
 8007ace:	f006 feff 	bl	800e8d0 <GUI_ALLOC_LockH>
 8007ad2:	4603      	mov	r3, r0
 8007ad4:	a80a      	add	r0, sp, #40	; 0x28
 8007ad6:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 8007ad8:	f840 3d28 	str.w	r3, [r0, #-40]!
 8007adc:	4668      	mov	r0, sp
 8007ade:	6d9c      	ldr	r4, [r3, #88]	; 0x58
 8007ae0:	8e5f      	ldrh	r7, [r3, #50]	; 0x32
 8007ae2:	f006 ff03 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8007ae6:	4628      	mov	r0, r5
 8007ae8:	f000 fdb4 	bl	8008654 <WM_GetWindowSizeX>
 8007aec:	4680      	mov	r8, r0
 8007aee:	4628      	mov	r0, r5
 8007af0:	f000 fdc4 	bl	800867c <WM_GetWindowSizeY>
 8007af4:	2100      	movs	r1, #0
 8007af6:	1e43      	subs	r3, r0, #1
 8007af8:	f108 32ff 	add.w	r2, r8, #4294967295
 8007afc:	f016 0610 	ands.w	r6, r6, #16
 8007b00:	9501      	str	r5, [sp, #4]
 8007b02:	9106      	str	r1, [sp, #24]
 8007b04:	9105      	str	r1, [sp, #20]
 8007b06:	9207      	str	r2, [sp, #28]
 8007b08:	9308      	str	r3, [sp, #32]
 8007b0a:	d001      	beq.n	8007b10 <_Paint+0x4a>
 8007b0c:	2203      	movs	r2, #3
 8007b0e:	e00a      	b.n	8007b26 <_Paint+0x60>
 8007b10:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8007b14:	b281      	uxth	r1, r0
 8007b16:	b109      	cbz	r1, 8007b1c <_Paint+0x56>
 8007b18:	9603      	str	r6, [sp, #12]
 8007b1a:	e005      	b.n	8007b28 <_Paint+0x62>
 8007b1c:	07fb      	lsls	r3, r7, #31
 8007b1e:	d501      	bpl.n	8007b24 <_Paint+0x5e>
 8007b20:	2201      	movs	r2, #1
 8007b22:	e000      	b.n	8007b26 <_Paint+0x60>
 8007b24:	2202      	movs	r2, #2
 8007b26:	9203      	str	r2, [sp, #12]
 8007b28:	2305      	movs	r3, #5
 8007b2a:	9302      	str	r3, [sp, #8]
 8007b2c:	a801      	add	r0, sp, #4
 8007b2e:	47a0      	blx	r4
 8007b30:	2006      	movs	r0, #6
 8007b32:	9002      	str	r0, [sp, #8]
 8007b34:	a801      	add	r0, sp, #4
 8007b36:	47a0      	blx	r4
 8007b38:	2112      	movs	r1, #18
 8007b3a:	9102      	str	r1, [sp, #8]
 8007b3c:	a801      	add	r0, sp, #4
 8007b3e:	47a0      	blx	r4
 8007b40:	220a      	movs	r2, #10
 8007b42:	9202      	str	r2, [sp, #8]
 8007b44:	a801      	add	r0, sp, #4
 8007b46:	47a0      	blx	r4
 8007b48:	b00a      	add	sp, #40	; 0x28
 8007b4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08007b50 <BUTTON_SetSkin>:
 8007b50:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007b52:	460d      	mov	r5, r1
 8007b54:	4604      	mov	r4, r0
 8007b56:	f006 febb 	bl	800e8d0 <GUI_ALLOC_LockH>
 8007b5a:	4906      	ldr	r1, [pc, #24]	; (8007b74 <BUTTON_SetSkin+0x24>)
 8007b5c:	4602      	mov	r2, r0
 8007b5e:	a802      	add	r0, sp, #8
 8007b60:	6651      	str	r1, [r2, #100]	; 0x64
 8007b62:	f840 2d04 	str.w	r2, [r0, #-4]!
 8007b66:	6595      	str	r5, [r2, #88]	; 0x58
 8007b68:	f006 fec0 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8007b6c:	4620      	mov	r0, r4
 8007b6e:	f001 fb15 	bl	800919c <WM_InvalidateWindow>
 8007b72:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 8007b74:	2000020c 	.word	0x2000020c

08007b78 <BUTTON_SetDefaultSkin>:
 8007b78:	4903      	ldr	r1, [pc, #12]	; (8007b88 <BUTTON_SetDefaultSkin+0x10>)
 8007b7a:	4a04      	ldr	r2, [pc, #16]	; (8007b8c <BUTTON_SetDefaultSkin+0x14>)
 8007b7c:	4b04      	ldr	r3, [pc, #16]	; (8007b90 <BUTTON_SetDefaultSkin+0x18>)
 8007b7e:	601a      	str	r2, [r3, #0]
 8007b80:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8007b82:	6248      	str	r0, [r1, #36]	; 0x24
 8007b84:	4610      	mov	r0, r2
 8007b86:	4770      	bx	lr
 8007b88:	2000021c 	.word	0x2000021c
 8007b8c:	2000020c 	.word	0x2000020c
 8007b90:	2000024c 	.word	0x2000024c

08007b94 <BUTTON_CreateIndirect>:
 8007b94:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007b96:	4604      	mov	r4, r0
 8007b98:	b087      	sub	sp, #28
 8007b9a:	8a65      	ldrh	r5, [r4, #18]
 8007b9c:	f9b0 000a 	ldrsh.w	r0, [r0, #10]
 8007ba0:	9100      	str	r1, [sp, #0]
 8007ba2:	2100      	movs	r1, #0
 8007ba4:	f9b4 e00c 	ldrsh.w	lr, [r4, #12]
 8007ba8:	f9b4 700e 	ldrsh.w	r7, [r4, #14]
 8007bac:	f9b4 6010 	ldrsh.w	r6, [r4, #16]
 8007bb0:	9101      	str	r1, [sp, #4]
 8007bb2:	9502      	str	r5, [sp, #8]
 8007bb4:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8007bb8:	69a5      	ldr	r5, [r4, #24]
 8007bba:	9103      	str	r1, [sp, #12]
 8007bbc:	9504      	str	r5, [sp, #16]
 8007bbe:	eb0e 0103 	add.w	r1, lr, r3
 8007bc2:	1880      	adds	r0, r0, r2
 8007bc4:	4633      	mov	r3, r6
 8007bc6:	463a      	mov	r2, r7
 8007bc8:	f000 f8d6 	bl	8007d78 <BUTTON_CreateUser>
 8007bcc:	6861      	ldr	r1, [r4, #4]
 8007bce:	4605      	mov	r5, r0
 8007bd0:	f000 f91a 	bl	8007e08 <BUTTON_SetText>
 8007bd4:	4628      	mov	r0, r5
 8007bd6:	b007      	add	sp, #28
 8007bd8:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007bda <BUTTON_CreateAsChild>:
 8007bda:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8007bdc:	9c06      	ldr	r4, [sp, #24]
 8007bde:	9400      	str	r4, [sp, #0]
 8007be0:	9c08      	ldr	r4, [sp, #32]
 8007be2:	9401      	str	r4, [sp, #4]
 8007be4:	2400      	movs	r4, #0
 8007be6:	9402      	str	r4, [sp, #8]
 8007be8:	9c07      	ldr	r4, [sp, #28]
 8007bea:	9403      	str	r4, [sp, #12]
 8007bec:	f000 f8fc 	bl	8007de8 <BUTTON_CreateEx>
 8007bf0:	b004      	add	sp, #16
 8007bf2:	bd10      	pop	{r4, pc}

08007bf4 <_OnButtonPressed>:
 8007bf4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007bf6:	f44f 7180 	mov.w	r1, #256	; 0x100
 8007bfa:	4604      	mov	r4, r0
 8007bfc:	f007 fa77 	bl	800f0ee <WIDGET_OrState>
 8007c00:	4620      	mov	r0, r4
 8007c02:	f006 fe65 	bl	800e8d0 <GUI_ALLOC_LockH>
 8007c06:	ab02      	add	r3, sp, #8
 8007c08:	6a85      	ldr	r5, [r0, #40]	; 0x28
 8007c0a:	f843 0d04 	str.w	r0, [r3, #-4]!
 8007c0e:	4618      	mov	r0, r3
 8007c10:	f006 fe6c 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8007c14:	07ab      	lsls	r3, r5, #30
 8007c16:	d503      	bpl.n	8007c20 <_OnButtonPressed+0x2c>
 8007c18:	4620      	mov	r0, r4
 8007c1a:	2101      	movs	r1, #1
 8007c1c:	f000 fc01 	bl	8008422 <WM_NotifyParent>
 8007c20:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08007c22 <_OnButtonReleased>:
 8007c22:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007c24:	4605      	mov	r5, r0
 8007c26:	460c      	mov	r4, r1
 8007c28:	f44f 7180 	mov.w	r1, #256	; 0x100
 8007c2c:	f007 fa74 	bl	800f118 <WIDGET_AndState>
 8007c30:	4628      	mov	r0, r5
 8007c32:	f006 fe4d 	bl	800e8d0 <GUI_ALLOC_LockH>
 8007c36:	4602      	mov	r2, r0
 8007c38:	a802      	add	r0, sp, #8
 8007c3a:	6a96      	ldr	r6, [r2, #40]	; 0x28
 8007c3c:	f840 2d04 	str.w	r2, [r0, #-4]!
 8007c40:	8e17      	ldrh	r7, [r2, #48]	; 0x30
 8007c42:	f006 fe53 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8007c46:	2c02      	cmp	r4, #2
 8007c48:	d102      	bne.n	8007c50 <_OnButtonReleased+0x2e>
 8007c4a:	4638      	mov	r0, r7
 8007c4c:	f005 fbaa 	bl	800d3a4 <GUI_StoreKey>
 8007c50:	07b2      	lsls	r2, r6, #30
 8007c52:	d503      	bpl.n	8007c5c <_OnButtonReleased+0x3a>
 8007c54:	4628      	mov	r0, r5
 8007c56:	4621      	mov	r1, r4
 8007c58:	f000 fbe3 	bl	8008422 <WM_NotifyParent>
 8007c5c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

08007c5e <_OnTouchDefault>:
 8007c5e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007c60:	460d      	mov	r5, r1
 8007c62:	4604      	mov	r4, r0
 8007c64:	f006 fe34 	bl	800e8d0 <GUI_ALLOC_LockH>
 8007c68:	ab02      	add	r3, sp, #8
 8007c6a:	8e46      	ldrh	r6, [r0, #50]	; 0x32
 8007c6c:	f843 0d04 	str.w	r0, [r3, #-4]!
 8007c70:	4618      	mov	r0, r3
 8007c72:	f006 fe3b 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8007c76:	68ea      	ldr	r2, [r5, #12]
 8007c78:	b162      	cbz	r2, 8007c94 <_OnTouchDefault+0x36>
 8007c7a:	7a10      	ldrb	r0, [r2, #8]
 8007c7c:	f406 7180 	and.w	r1, r6, #256	; 0x100
 8007c80:	b120      	cbz	r0, 8007c8c <_OnTouchDefault+0x2e>
 8007c82:	b959      	cbnz	r1, 8007c9c <_OnTouchDefault+0x3e>
 8007c84:	4620      	mov	r0, r4
 8007c86:	f7ff ffb5 	bl	8007bf4 <_OnButtonPressed>
 8007c8a:	e007      	b.n	8007c9c <_OnTouchDefault+0x3e>
 8007c8c:	b131      	cbz	r1, 8007c9c <_OnTouchDefault+0x3e>
 8007c8e:	4620      	mov	r0, r4
 8007c90:	2102      	movs	r1, #2
 8007c92:	e001      	b.n	8007c98 <_OnTouchDefault+0x3a>
 8007c94:	4620      	mov	r0, r4
 8007c96:	2103      	movs	r1, #3
 8007c98:	f7ff ffc3 	bl	8007c22 <_OnButtonReleased>
 8007c9c:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
	...

08007ca0 <BUTTON_Callback>:
 8007ca0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007ca2:	6844      	ldr	r4, [r0, #4]
 8007ca4:	4605      	mov	r5, r0
 8007ca6:	4629      	mov	r1, r5
 8007ca8:	4620      	mov	r0, r4
 8007caa:	f007 fa51 	bl	800f150 <WIDGET_HandleActive>
 8007cae:	2800      	cmp	r0, #0
 8007cb0:	d05d      	beq.n	8007d6e <BUTTON_Callback+0xce>
 8007cb2:	682b      	ldr	r3, [r5, #0]
 8007cb4:	2b0f      	cmp	r3, #15
 8007cb6:	d016      	beq.n	8007ce6 <BUTTON_Callback+0x46>
 8007cb8:	dc04      	bgt.n	8007cc4 <BUTTON_Callback+0x24>
 8007cba:	2b0b      	cmp	r3, #11
 8007cbc:	d023      	beq.n	8007d06 <BUTTON_Callback+0x66>
 8007cbe:	2b0e      	cmp	r3, #14
 8007cc0:	d152      	bne.n	8007d68 <BUTTON_Callback+0xc8>
 8007cc2:	e032      	b.n	8007d2a <BUTTON_Callback+0x8a>
 8007cc4:	2b28      	cmp	r3, #40	; 0x28
 8007cc6:	d048      	beq.n	8007d5a <BUTTON_Callback+0xba>
 8007cc8:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8007ccc:	d005      	beq.n	8007cda <BUTTON_Callback+0x3a>
 8007cce:	2b11      	cmp	r3, #17
 8007cd0:	d14a      	bne.n	8007d68 <BUTTON_Callback+0xc8>
 8007cd2:	4827      	ldr	r0, [pc, #156]	; (8007d70 <BUTTON_Callback+0xd0>)
 8007cd4:	6803      	ldr	r3, [r0, #0]
 8007cd6:	b913      	cbnz	r3, 8007cde <BUTTON_Callback+0x3e>
 8007cd8:	e049      	b.n	8007d6e <BUTTON_Callback+0xce>
 8007cda:	4926      	ldr	r1, [pc, #152]	; (8007d74 <BUTTON_Callback+0xd4>)
 8007cdc:	680b      	ldr	r3, [r1, #0]
 8007cde:	4620      	mov	r0, r4
 8007ce0:	4629      	mov	r1, r5
 8007ce2:	4798      	blx	r3
 8007ce4:	e043      	b.n	8007d6e <BUTTON_Callback+0xce>
 8007ce6:	4620      	mov	r0, r4
 8007ce8:	f006 fdf2 	bl	800e8d0 <GUI_ALLOC_LockH>
 8007cec:	a902      	add	r1, sp, #8
 8007cee:	f841 0d04 	str.w	r0, [r1, #-4]!
 8007cf2:	6e45      	ldr	r5, [r0, #100]	; 0x64
 8007cf4:	682d      	ldr	r5, [r5, #0]
 8007cf6:	4608      	mov	r0, r1
 8007cf8:	f006 fdf8 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8007cfc:	2d00      	cmp	r5, #0
 8007cfe:	d036      	beq.n	8007d6e <BUTTON_Callback+0xce>
 8007d00:	4620      	mov	r0, r4
 8007d02:	47a8      	blx	r5
 8007d04:	e033      	b.n	8007d6e <BUTTON_Callback+0xce>
 8007d06:	4620      	mov	r0, r4
 8007d08:	f006 fde2 	bl	800e8d0 <GUI_ALLOC_LockH>
 8007d0c:	ac02      	add	r4, sp, #8
 8007d0e:	9001      	str	r0, [sp, #4]
 8007d10:	3068      	adds	r0, #104	; 0x68
 8007d12:	f007 f82f 	bl	800ed74 <GUI_ALLOC_FreePtr>
 8007d16:	f854 0d04 	ldr.w	r0, [r4, #-4]!
 8007d1a:	2103      	movs	r1, #3
 8007d1c:	306c      	adds	r0, #108	; 0x6c
 8007d1e:	f007 f831 	bl	800ed84 <GUI_ALLOC_FreePtrArray>
 8007d22:	4620      	mov	r0, r4
 8007d24:	f006 fde2 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8007d28:	e01e      	b.n	8007d68 <BUTTON_Callback+0xc8>
 8007d2a:	68ea      	ldr	r2, [r5, #12]
 8007d2c:	ca0c      	ldmia	r2, {r2, r3}
 8007d2e:	2a0d      	cmp	r2, #13
 8007d30:	d002      	beq.n	8007d38 <BUTTON_Callback+0x98>
 8007d32:	2a20      	cmp	r2, #32
 8007d34:	d111      	bne.n	8007d5a <BUTTON_Callback+0xba>
 8007d36:	e006      	b.n	8007d46 <BUTTON_Callback+0xa6>
 8007d38:	2b00      	cmp	r3, #0
 8007d3a:	dd0e      	ble.n	8007d5a <BUTTON_Callback+0xba>
 8007d3c:	4620      	mov	r0, r4
 8007d3e:	f7ff ff59 	bl	8007bf4 <_OnButtonPressed>
 8007d42:	4620      	mov	r0, r4
 8007d44:	e005      	b.n	8007d52 <BUTTON_Callback+0xb2>
 8007d46:	2b00      	cmp	r3, #0
 8007d48:	4620      	mov	r0, r4
 8007d4a:	dd02      	ble.n	8007d52 <BUTTON_Callback+0xb2>
 8007d4c:	f7ff ff52 	bl	8007bf4 <_OnButtonPressed>
 8007d50:	e00d      	b.n	8007d6e <BUTTON_Callback+0xce>
 8007d52:	2102      	movs	r1, #2
 8007d54:	f7ff ff65 	bl	8007c22 <_OnButtonReleased>
 8007d58:	e009      	b.n	8007d6e <BUTTON_Callback+0xce>
 8007d5a:	68ea      	ldr	r2, [r5, #12]
 8007d5c:	b922      	cbnz	r2, 8007d68 <BUTTON_Callback+0xc8>
 8007d5e:	4620      	mov	r0, r4
 8007d60:	f44f 7180 	mov.w	r1, #256	; 0x100
 8007d64:	f007 f9d8 	bl	800f118 <WIDGET_AndState>
 8007d68:	4628      	mov	r0, r5
 8007d6a:	f001 fe41 	bl	80099f0 <WM_DefaultProc>
 8007d6e:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 8007d70:	2000d7b8 	.word	0x2000d7b8
 8007d74:	20000218 	.word	0x20000218

08007d78 <BUTTON_CreateUser>:
 8007d78:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007d7a:	b087      	sub	sp, #28
 8007d7c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8007d7e:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8007d80:	9400      	str	r4, [sp, #0]
 8007d82:	4c16      	ldr	r4, [pc, #88]	; (8007ddc <BUTTON_CreateUser+0x64>)
 8007d84:	9701      	str	r7, [sp, #4]
 8007d86:	9402      	str	r4, [sp, #8]
 8007d88:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8007d8a:	344c      	adds	r4, #76	; 0x4c
 8007d8c:	9403      	str	r4, [sp, #12]
 8007d8e:	f001 fac1 	bl	8009314 <WM_CreateWindowAsChild>
 8007d92:	4607      	mov	r7, r0
 8007d94:	b1f8      	cbz	r0, 8007dd6 <BUTTON_CreateUser+0x5e>
 8007d96:	f006 fd9b 	bl	800e8d0 <GUI_ALLOC_LockH>
 8007d9a:	4d11      	ldr	r5, [pc, #68]	; (8007de0 <BUTTON_CreateUser+0x68>)
 8007d9c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8007d9e:	9005      	str	r0, [sp, #20]
 8007da0:	2210      	movs	r2, #16
 8007da2:	f007 f9cd 	bl	800f140 <WIDGET__Init>
 8007da6:	ae06      	add	r6, sp, #24
 8007da8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007daa:	f856 ed04 	ldr.w	lr, [r6, #-4]!
 8007dae:	f10e 0434 	add.w	r4, lr, #52	; 0x34
 8007db2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007db4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007db6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007db8:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8007dbc:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8007dc0:	4c08      	ldr	r4, [pc, #32]	; (8007de4 <BUTTON_CreateUser+0x6c>)
 8007dc2:	6823      	ldr	r3, [r4, #0]
 8007dc4:	4630      	mov	r0, r6
 8007dc6:	f8ce 3064 	str.w	r3, [lr, #100]	; 0x64
 8007dca:	f006 fd8f 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8007dce:	6820      	ldr	r0, [r4, #0]
 8007dd0:	6841      	ldr	r1, [r0, #4]
 8007dd2:	4638      	mov	r0, r7
 8007dd4:	4788      	blx	r1
 8007dd6:	4638      	mov	r0, r7
 8007dd8:	b007      	add	sp, #28
 8007dda:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007ddc:	08007ca1 	.word	0x08007ca1
 8007de0:	2000021c 	.word	0x2000021c
 8007de4:	2000024c 	.word	0x2000024c

08007de8 <BUTTON_CreateEx>:
 8007de8:	b510      	push	{r4, lr}
 8007dea:	b086      	sub	sp, #24
 8007dec:	9c08      	ldr	r4, [sp, #32]
 8007dee:	9400      	str	r4, [sp, #0]
 8007df0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8007df2:	9401      	str	r4, [sp, #4]
 8007df4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8007df6:	9402      	str	r4, [sp, #8]
 8007df8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8007dfa:	9403      	str	r4, [sp, #12]
 8007dfc:	2400      	movs	r4, #0
 8007dfe:	9404      	str	r4, [sp, #16]
 8007e00:	f7ff ffba 	bl	8007d78 <BUTTON_CreateUser>
 8007e04:	b006      	add	sp, #24
 8007e06:	bd10      	pop	{r4, pc}

08007e08 <BUTTON_SetText>:
 8007e08:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007e0a:	460c      	mov	r4, r1
 8007e0c:	4605      	mov	r5, r0
 8007e0e:	b300      	cbz	r0, 8007e52 <BUTTON_SetText+0x4a>
 8007e10:	f006 fd5e 	bl	800e8d0 <GUI_ALLOC_LockH>
 8007e14:	6e86      	ldr	r6, [r0, #104]	; 0x68
 8007e16:	9000      	str	r0, [sp, #0]
 8007e18:	4668      	mov	r0, sp
 8007e1a:	9601      	str	r6, [sp, #4]
 8007e1c:	f006 fd66 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8007e20:	4621      	mov	r1, r4
 8007e22:	a801      	add	r0, sp, #4
 8007e24:	f004 fc2c 	bl	800c680 <GUI__SetText>
 8007e28:	f1d0 0401 	rsbs	r4, r0, #1
 8007e2c:	bf38      	it	cc
 8007e2e:	2400      	movcc	r4, #0
 8007e30:	b984      	cbnz	r4, 8007e54 <BUTTON_SetText+0x4c>
 8007e32:	9b01      	ldr	r3, [sp, #4]
 8007e34:	42b3      	cmp	r3, r6
 8007e36:	d008      	beq.n	8007e4a <BUTTON_SetText+0x42>
 8007e38:	4628      	mov	r0, r5
 8007e3a:	f006 fd49 	bl	800e8d0 <GUI_ALLOC_LockH>
 8007e3e:	9901      	ldr	r1, [sp, #4]
 8007e40:	9000      	str	r0, [sp, #0]
 8007e42:	6681      	str	r1, [r0, #104]	; 0x68
 8007e44:	4668      	mov	r0, sp
 8007e46:	f006 fd51 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8007e4a:	4628      	mov	r0, r5
 8007e4c:	f001 f9a6 	bl	800919c <WM_InvalidateWindow>
 8007e50:	e000      	b.n	8007e54 <BUTTON_SetText+0x4c>
 8007e52:	2401      	movs	r4, #1
 8007e54:	4620      	mov	r0, r4
 8007e56:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

08007e58 <BUTTON_SetFont>:
 8007e58:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007e5a:	460c      	mov	r4, r1
 8007e5c:	4605      	mov	r5, r0
 8007e5e:	b158      	cbz	r0, 8007e78 <BUTTON_SetFont+0x20>
 8007e60:	f006 fd36 	bl	800e8d0 <GUI_ALLOC_LockH>
 8007e64:	4602      	mov	r2, r0
 8007e66:	a802      	add	r0, sp, #8
 8007e68:	6554      	str	r4, [r2, #84]	; 0x54
 8007e6a:	f840 2d04 	str.w	r2, [r0, #-4]!
 8007e6e:	f006 fd3d 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8007e72:	4628      	mov	r0, r5
 8007e74:	f001 f992 	bl	800919c <WM_InvalidateWindow>
 8007e78:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08007e7a <BUTTON_SetFocussable>:
 8007e7a:	b111      	cbz	r1, 8007e82 <BUTTON_SetFocussable+0x8>
 8007e7c:	2110      	movs	r1, #16
 8007e7e:	f007 b936 	b.w	800f0ee <WIDGET_OrState>
 8007e82:	2110      	movs	r1, #16
 8007e84:	f007 b948 	b.w	800f118 <WIDGET_AndState>

08007e88 <WM__SendMessage>:
 8007e88:	b570      	push	{r4, r5, r6, lr}
 8007e8a:	4c0d      	ldr	r4, [pc, #52]	; (8007ec0 <WM__SendMessage+0x38>)
 8007e8c:	6823      	ldr	r3, [r4, #0]
 8007e8e:	2b13      	cmp	r3, #19
 8007e90:	4606      	mov	r6, r0
 8007e92:	460d      	mov	r5, r1
 8007e94:	dc12      	bgt.n	8007ebc <WM__SendMessage+0x34>
 8007e96:	f006 fd11 	bl	800e8bc <GUI_ALLOC_h2p>
 8007e9a:	6901      	ldr	r1, [r0, #16]
 8007e9c:	606e      	str	r6, [r5, #4]
 8007e9e:	b141      	cbz	r1, 8007eb2 <WM__SendMessage+0x2a>
 8007ea0:	6822      	ldr	r2, [r4, #0]
 8007ea2:	1c50      	adds	r0, r2, #1
 8007ea4:	6020      	str	r0, [r4, #0]
 8007ea6:	4628      	mov	r0, r5
 8007ea8:	4788      	blx	r1
 8007eaa:	6823      	ldr	r3, [r4, #0]
 8007eac:	1e59      	subs	r1, r3, #1
 8007eae:	6021      	str	r1, [r4, #0]
 8007eb0:	bd70      	pop	{r4, r5, r6, pc}
 8007eb2:	4628      	mov	r0, r5
 8007eb4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8007eb8:	f001 bd9a 	b.w	80099f0 <WM_DefaultProc>
 8007ebc:	bd70      	pop	{r4, r5, r6, pc}
 8007ebe:	bf00      	nop
 8007ec0:	2000d7bc 	.word	0x2000d7bc

08007ec4 <WM__IsEnabled>:
 8007ec4:	b508      	push	{r3, lr}
 8007ec6:	f006 fcf9 	bl	800e8bc <GUI_ALLOC_h2p>
 8007eca:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8007ecc:	f080 0110 	eor.w	r1, r0, #16
 8007ed0:	f3c1 1000 	ubfx	r0, r1, #4, #1
 8007ed4:	bd08      	pop	{r3, pc}

08007ed6 <WM__IsAncestor>:
 8007ed6:	b510      	push	{r4, lr}
 8007ed8:	460c      	mov	r4, r1
 8007eda:	b908      	cbnz	r0, 8007ee0 <WM__IsAncestor+0xa>
 8007edc:	2000      	movs	r0, #0
 8007ede:	bd10      	pop	{r4, pc}
 8007ee0:	2900      	cmp	r1, #0
 8007ee2:	d0fb      	beq.n	8007edc <WM__IsAncestor+0x6>
 8007ee4:	f006 fcea 	bl	800e8bc <GUI_ALLOC_h2p>
 8007ee8:	6980      	ldr	r0, [r0, #24]
 8007eea:	42a0      	cmp	r0, r4
 8007eec:	d002      	beq.n	8007ef4 <WM__IsAncestor+0x1e>
 8007eee:	2800      	cmp	r0, #0
 8007ef0:	d1f8      	bne.n	8007ee4 <WM__IsAncestor+0xe>
 8007ef2:	e7f3      	b.n	8007edc <WM__IsAncestor+0x6>
 8007ef4:	2001      	movs	r0, #1
 8007ef6:	bd10      	pop	{r4, pc}

08007ef8 <WM__IsAncestorOrSelf>:
 8007ef8:	4288      	cmp	r0, r1
 8007efa:	d001      	beq.n	8007f00 <WM__IsAncestorOrSelf+0x8>
 8007efc:	f7ff bfeb 	b.w	8007ed6 <WM__IsAncestor>
 8007f00:	2001      	movs	r0, #1
 8007f02:	4770      	bx	lr

08007f04 <WM__GetUserDataEx>:
 8007f04:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007f06:	460f      	mov	r7, r1
 8007f08:	4614      	mov	r4, r2
 8007f0a:	461e      	mov	r6, r3
 8007f0c:	4605      	mov	r5, r0
 8007f0e:	b1a0      	cbz	r0, 8007f3a <WM__GetUserDataEx+0x36>
 8007f10:	f006 fd0c 	bl	800e92c <GUI_ALLOC_GetSize>
 8007f14:	1b80      	subs	r0, r0, r6
 8007f16:	4284      	cmp	r4, r0
 8007f18:	bfa8      	it	ge
 8007f1a:	4604      	movge	r4, r0
 8007f1c:	4628      	mov	r0, r5
 8007f1e:	f006 fcd7 	bl	800e8d0 <GUI_ALLOC_LockH>
 8007f22:	ad02      	add	r5, sp, #8
 8007f24:	4601      	mov	r1, r0
 8007f26:	f845 0d04 	str.w	r0, [r5, #-4]!
 8007f2a:	1989      	adds	r1, r1, r6
 8007f2c:	4638      	mov	r0, r7
 8007f2e:	4622      	mov	r2, r4
 8007f30:	f7f8 f92a 	bl	8000188 <memcpy>
 8007f34:	4628      	mov	r0, r5
 8007f36:	f006 fcd9 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8007f3a:	4620      	mov	r0, r4
 8007f3c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

08007f3e <WM_GetUserData>:
 8007f3e:	232c      	movs	r3, #44	; 0x2c
 8007f40:	f7ff bfe0 	b.w	8007f04 <WM__GetUserDataEx>

08007f44 <WM_InvalidateWindowAndDescs>:
 8007f44:	b510      	push	{r4, lr}
 8007f46:	4604      	mov	r4, r0
 8007f48:	b170      	cbz	r0, 8007f68 <WM_InvalidateWindowAndDescs+0x24>
 8007f4a:	f001 f927 	bl	800919c <WM_InvalidateWindow>
 8007f4e:	4620      	mov	r0, r4
 8007f50:	f000 fbde 	bl	8008710 <WM_GetFirstChild>
 8007f54:	4604      	mov	r4, r0
 8007f56:	b13c      	cbz	r4, 8007f68 <WM_InvalidateWindowAndDescs+0x24>
 8007f58:	4620      	mov	r0, r4
 8007f5a:	f7ff fff3 	bl	8007f44 <WM_InvalidateWindowAndDescs>
 8007f5e:	4620      	mov	r0, r4
 8007f60:	f006 fcac 	bl	800e8bc <GUI_ALLOC_h2p>
 8007f64:	6a04      	ldr	r4, [r0, #32]
 8007f66:	e7f6      	b.n	8007f56 <WM_InvalidateWindowAndDescs+0x12>
 8007f68:	bd10      	pop	{r4, pc}

08007f6a <WM_ShowWindow>:
 8007f6a:	b513      	push	{r0, r1, r4, lr}
 8007f6c:	4604      	mov	r4, r0
 8007f6e:	b170      	cbz	r0, 8007f8e <WM_ShowWindow+0x24>
 8007f70:	f006 fcae 	bl	800e8d0 <GUI_ALLOC_LockH>
 8007f74:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8007f76:	9001      	str	r0, [sp, #4]
 8007f78:	0793      	lsls	r3, r2, #30
 8007f7a:	d405      	bmi.n	8007f88 <WM_ShowWindow+0x1e>
 8007f7c:	f042 0102 	orr.w	r1, r2, #2
 8007f80:	6281      	str	r1, [r0, #40]	; 0x28
 8007f82:	4620      	mov	r0, r4
 8007f84:	f7ff ffde 	bl	8007f44 <WM_InvalidateWindowAndDescs>
 8007f88:	a801      	add	r0, sp, #4
 8007f8a:	f006 fcaf 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8007f8e:	bd1c      	pop	{r2, r3, r4, pc}

08007f90 <WM_SetUserClipRect>:
 8007f90:	4b04      	ldr	r3, [pc, #16]	; (8007fa4 <WM_SetUserClipRect+0x14>)
 8007f92:	6819      	ldr	r1, [r3, #0]
 8007f94:	b510      	push	{r4, lr}
 8007f96:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8007f98:	6448      	str	r0, [r1, #68]	; 0x44
 8007f9a:	f000 ff4b 	bl	8008e34 <WM__ActivateClipRect>
 8007f9e:	4620      	mov	r0, r4
 8007fa0:	bd10      	pop	{r4, pc}
 8007fa2:	bf00      	nop
 8007fa4:	20000270 	.word	0x20000270

08007fa8 <WM_SetHasTrans>:
 8007fa8:	b513      	push	{r0, r1, r4, lr}
 8007faa:	4604      	mov	r4, r0
 8007fac:	b1b8      	cbz	r0, 8007fde <WM_SetHasTrans+0x36>
 8007fae:	f006 fc8f 	bl	800e8d0 <GUI_ALLOC_LockH>
 8007fb2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8007fb4:	9001      	str	r0, [sp, #4]
 8007fb6:	07db      	lsls	r3, r3, #31
 8007fb8:	d40e      	bmi.n	8007fd8 <WM_SetHasTrans+0x30>
 8007fba:	4620      	mov	r0, r4
 8007fbc:	f008 f854 	bl	8010068 <WM_ValidateWindow>
 8007fc0:	9801      	ldr	r0, [sp, #4]
 8007fc2:	4b07      	ldr	r3, [pc, #28]	; (8007fe0 <WM_SetHasTrans+0x38>)
 8007fc4:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8007fc6:	f042 0101 	orr.w	r1, r2, #1
 8007fca:	6281      	str	r1, [r0, #40]	; 0x28
 8007fcc:	6818      	ldr	r0, [r3, #0]
 8007fce:	1c42      	adds	r2, r0, #1
 8007fd0:	4620      	mov	r0, r4
 8007fd2:	601a      	str	r2, [r3, #0]
 8007fd4:	f001 f8e2 	bl	800919c <WM_InvalidateWindow>
 8007fd8:	a801      	add	r0, sp, #4
 8007fda:	f006 fc87 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8007fde:	bd1c      	pop	{r2, r3, r4, pc}
 8007fe0:	2000ddb8 	.word	0x2000ddb8

08007fe4 <WM_GetHasTrans>:
 8007fe4:	b508      	push	{r3, lr}
 8007fe6:	b128      	cbz	r0, 8007ff4 <WM_GetHasTrans+0x10>
 8007fe8:	f006 fc68 	bl	800e8bc <GUI_ALLOC_h2p>
 8007fec:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8007fee:	f000 0001 	and.w	r0, r0, #1
 8007ff2:	bd08      	pop	{r3, pc}
 8007ff4:	bd08      	pop	{r3, pc}

08007ff6 <WM_SetSize>:
 8007ff6:	e92d 41e7 	stmdb	sp!, {r0, r1, r2, r5, r6, r7, r8, lr}
 8007ffa:	460e      	mov	r6, r1
 8007ffc:	4690      	mov	r8, r2
 8007ffe:	4607      	mov	r7, r0
 8008000:	b1d8      	cbz	r0, 800803a <WM_SetSize+0x44>
 8008002:	f006 fc65 	bl	800e8d0 <GUI_ALLOC_LockH>
 8008006:	4603      	mov	r3, r0
 8008008:	a802      	add	r0, sp, #8
 800800a:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800800e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8008012:	f840 3d04 	str.w	r3, [r0, #-4]!
 8008016:	1a8d      	subs	r5, r1, r2
 8008018:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 800801c:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8008020:	43e9      	mvns	r1, r5
 8008022:	1ad5      	subs	r5, r2, r3
 8008024:	1876      	adds	r6, r6, r1
 8008026:	43e9      	mvns	r1, r5
 8008028:	eb08 0501 	add.w	r5, r8, r1
 800802c:	f006 fc5e 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008030:	4638      	mov	r0, r7
 8008032:	4631      	mov	r1, r6
 8008034:	462a      	mov	r2, r5
 8008036:	f000 f97a 	bl	800832e <WM_ResizeWindow>
 800803a:	e8bd 81ee 	ldmia.w	sp!, {r1, r2, r3, r5, r6, r7, r8, pc}

0800803e <_GetPrevChild>:
 800803e:	b510      	push	{r4, lr}
 8008040:	4604      	mov	r4, r0
 8008042:	b918      	cbnz	r0, 800804c <_GetPrevChild+0xe>
 8008044:	4620      	mov	r0, r4
 8008046:	f007 ffe7 	bl	8010018 <WM__GetLastSibling>
 800804a:	e003      	b.n	8008054 <_GetPrevChild+0x16>
 800804c:	f007 ffd1 	bl	800fff2 <WM__GetPrevSibling>
 8008050:	2800      	cmp	r0, #0
 8008052:	d0f7      	beq.n	8008044 <_GetPrevChild+0x6>
 8008054:	42a0      	cmp	r0, r4
 8008056:	bf08      	it	eq
 8008058:	2000      	moveq	r0, #0
 800805a:	bd10      	pop	{r4, pc}

0800805c <WM_SetFocusOnPrevChild>:
 800805c:	b538      	push	{r3, r4, r5, lr}
 800805e:	4604      	mov	r4, r0
 8008060:	b1c0      	cbz	r0, 8008094 <WM_SetFocusOnPrevChild+0x38>
 8008062:	f007 ffe5 	bl	8010030 <WM__GetFocussedChild>
 8008066:	f7ff ffea 	bl	800803e <_GetPrevChild>
 800806a:	4605      	mov	r5, r0
 800806c:	4604      	mov	r4, r0
 800806e:	4620      	mov	r0, r4
 8008070:	f000 faa2 	bl	80085b8 <WM_IsFocussable>
 8008074:	b930      	cbnz	r0, 8008084 <WM_SetFocusOnPrevChild+0x28>
 8008076:	b12c      	cbz	r4, 8008084 <WM_SetFocusOnPrevChild+0x28>
 8008078:	4620      	mov	r0, r4
 800807a:	f7ff ffe0 	bl	800803e <_GetPrevChild>
 800807e:	42a8      	cmp	r0, r5
 8008080:	4604      	mov	r4, r0
 8008082:	d1f4      	bne.n	800806e <WM_SetFocusOnPrevChild+0x12>
 8008084:	4620      	mov	r0, r4
 8008086:	f000 f84b 	bl	8008120 <WM_SetFocus>
 800808a:	2800      	cmp	r0, #0
 800808c:	bf0c      	ite	eq
 800808e:	4620      	moveq	r0, r4
 8008090:	2000      	movne	r0, #0
 8008092:	bd38      	pop	{r3, r4, r5, pc}
 8008094:	bd38      	pop	{r3, r4, r5, pc}

08008096 <_GetNextChild>:
 8008096:	b538      	push	{r3, r4, r5, lr}
 8008098:	4605      	mov	r5, r0
 800809a:	460c      	mov	r4, r1
 800809c:	b921      	cbnz	r1, 80080a8 <_GetNextChild+0x12>
 800809e:	4628      	mov	r0, r5
 80080a0:	f006 fc0c 	bl	800e8bc <GUI_ALLOC_h2p>
 80080a4:	69c0      	ldr	r0, [r0, #28]
 80080a6:	e005      	b.n	80080b4 <_GetNextChild+0x1e>
 80080a8:	4608      	mov	r0, r1
 80080aa:	f006 fc07 	bl	800e8bc <GUI_ALLOC_h2p>
 80080ae:	6a00      	ldr	r0, [r0, #32]
 80080b0:	2800      	cmp	r0, #0
 80080b2:	d0f4      	beq.n	800809e <_GetNextChild+0x8>
 80080b4:	42a0      	cmp	r0, r4
 80080b6:	bf08      	it	eq
 80080b8:	2000      	moveq	r0, #0
 80080ba:	bd38      	pop	{r3, r4, r5, pc}

080080bc <WM_SetFocusOnNextChild>:
 80080bc:	b570      	push	{r4, r5, r6, lr}
 80080be:	4605      	mov	r5, r0
 80080c0:	b340      	cbz	r0, 8008114 <WM_SetFocusOnNextChild+0x58>
 80080c2:	f007 ffb5 	bl	8010030 <WM__GetFocussedChild>
 80080c6:	4601      	mov	r1, r0
 80080c8:	4628      	mov	r0, r5
 80080ca:	f7ff ffe4 	bl	8008096 <_GetNextChild>
 80080ce:	4606      	mov	r6, r0
 80080d0:	4604      	mov	r4, r0
 80080d2:	4620      	mov	r0, r4
 80080d4:	f000 fa70 	bl	80085b8 <WM_IsFocussable>
 80080d8:	b938      	cbnz	r0, 80080ea <WM_SetFocusOnNextChild+0x2e>
 80080da:	b13c      	cbz	r4, 80080ec <WM_SetFocusOnNextChild+0x30>
 80080dc:	4621      	mov	r1, r4
 80080de:	4628      	mov	r0, r5
 80080e0:	f7ff ffd9 	bl	8008096 <_GetNextChild>
 80080e4:	42b0      	cmp	r0, r6
 80080e6:	4604      	mov	r4, r0
 80080e8:	d1f3      	bne.n	80080d2 <WM_SetFocusOnNextChild+0x16>
 80080ea:	b90c      	cbnz	r4, 80080f0 <WM_SetFocusOnNextChild+0x34>
 80080ec:	2400      	movs	r4, #0
 80080ee:	e012      	b.n	8008116 <WM_SetFocusOnNextChild+0x5a>
 80080f0:	4d0a      	ldr	r5, [pc, #40]	; (800811c <WM_SetFocusOnNextChild+0x60>)
 80080f2:	4620      	mov	r0, r4
 80080f4:	682e      	ldr	r6, [r5, #0]
 80080f6:	f001 f855 	bl	80091a4 <WM__GetTopLevelLayer>
 80080fa:	3001      	adds	r0, #1
 80080fc:	d00b      	beq.n	8008116 <WM_SetFocusOnNextChild+0x5a>
 80080fe:	4620      	mov	r0, r4
 8008100:	f001 f850 	bl	80091a4 <WM__GetTopLevelLayer>
 8008104:	6028      	str	r0, [r5, #0]
 8008106:	4620      	mov	r0, r4
 8008108:	f000 f80a 	bl	8008120 <WM_SetFocus>
 800810c:	602e      	str	r6, [r5, #0]
 800810e:	2800      	cmp	r0, #0
 8008110:	d1ec      	bne.n	80080ec <WM_SetFocusOnNextChild+0x30>
 8008112:	e000      	b.n	8008116 <WM_SetFocusOnNextChild+0x5a>
 8008114:	4604      	mov	r4, r0
 8008116:	4620      	mov	r0, r4
 8008118:	bd70      	pop	{r4, r5, r6, pc}
 800811a:	bf00      	nop
 800811c:	2000dd90 	.word	0x2000dd90

08008120 <WM_SetFocus>:
 8008120:	b530      	push	{r4, r5, lr}
 8008122:	b087      	sub	sp, #28
 8008124:	4604      	mov	r4, r0
 8008126:	2100      	movs	r1, #0
 8008128:	a802      	add	r0, sp, #8
 800812a:	2210      	movs	r2, #16
 800812c:	f00b fc7c 	bl	8013a28 <memset>
 8008130:	2c00      	cmp	r4, #0
 8008132:	d03a      	beq.n	80081aa <WM_SetFocus+0x8a>
 8008134:	4b1f      	ldr	r3, [pc, #124]	; (80081b4 <WM_SetFocus+0x94>)
 8008136:	4820      	ldr	r0, [pc, #128]	; (80081b8 <WM_SetFocus+0x98>)
 8008138:	681a      	ldr	r2, [r3, #0]
 800813a:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 800813e:	4284      	cmp	r4, r0
 8008140:	d033      	beq.n	80081aa <WM_SetFocus+0x8a>
 8008142:	211e      	movs	r1, #30
 8008144:	e88d 0011 	stmia.w	sp, {r0, r4}
 8008148:	9102      	str	r1, [sp, #8]
 800814a:	b110      	cbz	r0, 8008152 <WM_SetFocus+0x32>
 800814c:	a902      	add	r1, sp, #8
 800814e:	f7ff fe9b 	bl	8007e88 <WM__SendMessage>
 8008152:	2501      	movs	r5, #1
 8008154:	4620      	mov	r0, r4
 8008156:	a902      	add	r1, sp, #8
 8008158:	9505      	str	r5, [sp, #20]
 800815a:	f7ff fe95 	bl	8007e88 <WM__SendMessage>
 800815e:	9d05      	ldr	r5, [sp, #20]
 8008160:	bb25      	cbnz	r5, 80081ac <WM_SetFocus+0x8c>
 8008162:	4b14      	ldr	r3, [pc, #80]	; (80081b4 <WM_SetFocus+0x94>)
 8008164:	4814      	ldr	r0, [pc, #80]	; (80081b8 <WM_SetFocus+0x98>)
 8008166:	681a      	ldr	r2, [r3, #0]
 8008168:	f840 4022 	str.w	r4, [r0, r2, lsl #2]
 800816c:	4620      	mov	r0, r4
 800816e:	f000 faa4 	bl	80086ba <WM_GetParent>
 8008172:	4604      	mov	r4, r0
 8008174:	b138      	cbz	r0, 8008186 <WM_SetFocus+0x66>
 8008176:	a900      	add	r1, sp, #0
 8008178:	2220      	movs	r2, #32
 800817a:	9105      	str	r1, [sp, #20]
 800817c:	a902      	add	r1, sp, #8
 800817e:	9202      	str	r2, [sp, #8]
 8008180:	f7ff fe82 	bl	8007e88 <WM__SendMessage>
 8008184:	e7f2      	b.n	800816c <WM_SetFocus+0x4c>
 8008186:	9c00      	ldr	r4, [sp, #0]
 8008188:	4620      	mov	r0, r4
 800818a:	f000 fa13 	bl	80085b4 <WM_IsWindow>
 800818e:	b168      	cbz	r0, 80081ac <WM_SetFocus+0x8c>
 8008190:	4620      	mov	r0, r4
 8008192:	f000 fa92 	bl	80086ba <WM_GetParent>
 8008196:	4604      	mov	r4, r0
 8008198:	b140      	cbz	r0, 80081ac <WM_SetFocus+0x8c>
 800819a:	2120      	movs	r1, #32
 800819c:	9102      	str	r1, [sp, #8]
 800819e:	ab00      	add	r3, sp, #0
 80081a0:	a902      	add	r1, sp, #8
 80081a2:	9305      	str	r3, [sp, #20]
 80081a4:	f7ff fe70 	bl	8007e88 <WM__SendMessage>
 80081a8:	e7f2      	b.n	8008190 <WM_SetFocus+0x70>
 80081aa:	2501      	movs	r5, #1
 80081ac:	4628      	mov	r0, r5
 80081ae:	b007      	add	sp, #28
 80081b0:	bd30      	pop	{r4, r5, pc}
 80081b2:	bf00      	nop
 80081b4:	2000dd90 	.word	0x2000dd90
 80081b8:	2000dd80 	.word	0x2000dd80

080081bc <WM_SetDesktopColorEx>:
 80081bc:	2901      	cmp	r1, #1
 80081be:	b510      	push	{r4, lr}
 80081c0:	bf88      	it	hi
 80081c2:	f06f 4470 	mvnhi.w	r4, #4026531840	; 0xf0000000
 80081c6:	d809      	bhi.n	80081dc <WM_SetDesktopColorEx+0x20>
 80081c8:	4b05      	ldr	r3, [pc, #20]	; (80081e0 <WM_SetDesktopColorEx+0x24>)
 80081ca:	f853 4021 	ldr.w	r4, [r3, r1, lsl #2]
 80081ce:	f843 0021 	str.w	r0, [r3, r1, lsl #2]
 80081d2:	4804      	ldr	r0, [pc, #16]	; (80081e4 <WM_SetDesktopColorEx+0x28>)
 80081d4:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
 80081d8:	f000 ffe0 	bl	800919c <WM_InvalidateWindow>
 80081dc:	4620      	mov	r0, r4
 80081de:	bd10      	pop	{r4, pc}
 80081e0:	2000dd9c 	.word	0x2000dd9c
 80081e4:	2000dd70 	.word	0x2000dd70

080081e8 <WM_SetDesktopColor>:
 80081e8:	4b02      	ldr	r3, [pc, #8]	; (80081f4 <WM_SetDesktopColor+0xc>)
 80081ea:	6819      	ldr	r1, [r3, #0]
 80081ec:	7c49      	ldrb	r1, [r1, #17]
 80081ee:	f7ff bfe5 	b.w	80081bc <WM_SetDesktopColorEx>
 80081f2:	bf00      	nop
 80081f4:	20000270 	.word	0x20000270

080081f8 <WM_SetCaptureMove>:
 80081f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80081fc:	b085      	sub	sp, #20
 80081fe:	4604      	mov	r4, r0
 8008200:	460d      	mov	r5, r1
 8008202:	4691      	mov	r9, r2
 8008204:	4698      	mov	r8, r3
 8008206:	f000 fa09 	bl	800861c <WM_HasCaptured>
 800820a:	4e21      	ldr	r6, [pc, #132]	; (8008290 <WM_SetCaptureMove+0x98>)
 800820c:	b940      	cbnz	r0, 8008220 <WM_SetCaptureMove+0x28>
 800820e:	4620      	mov	r0, r4
 8008210:	2101      	movs	r1, #1
 8008212:	f000 f859 	bl	80082c8 <WM_SetCapture>
 8008216:	682b      	ldr	r3, [r5, #0]
 8008218:	6868      	ldr	r0, [r5, #4]
 800821a:	8033      	strh	r3, [r6, #0]
 800821c:	8070      	strh	r0, [r6, #2]
 800821e:	e034      	b.n	800828a <WM_SetCaptureMove+0x92>
 8008220:	682b      	ldr	r3, [r5, #0]
 8008222:	f9b6 0002 	ldrsh.w	r0, [r6, #2]
 8008226:	f9b6 7000 	ldrsh.w	r7, [r6]
 800822a:	686d      	ldr	r5, [r5, #4]
 800822c:	1bdf      	subs	r7, r3, r7
 800822e:	1a2d      	subs	r5, r5, r0
 8008230:	4620      	mov	r0, r4
 8008232:	f1b9 0f00 	cmp.w	r9, #0
 8008236:	d102      	bne.n	800823e <WM_SetCaptureMove+0x46>
 8008238:	f1b8 0f00 	cmp.w	r8, #0
 800823c:	d021      	beq.n	8008282 <WM_SetCaptureMove+0x8a>
 800823e:	4669      	mov	r1, sp
 8008240:	f000 fa30 	bl	80086a4 <WM_GetWindowRectEx>
 8008244:	f1b8 0f00 	cmp.w	r8, #0
 8008248:	d005      	beq.n	8008256 <WM_SetCaptureMove+0x5e>
 800824a:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800824e:	1e4a      	subs	r2, r1, #1
 8008250:	4490      	add	r8, r2
 8008252:	f8ad 8006 	strh.w	r8, [sp, #6]
 8008256:	4620      	mov	r0, r4
 8008258:	f000 fa2f 	bl	80086ba <WM_GetParent>
 800825c:	a902      	add	r1, sp, #8
 800825e:	f000 fa21 	bl	80086a4 <WM_GetWindowRectEx>
 8008262:	4668      	mov	r0, sp
 8008264:	4639      	mov	r1, r7
 8008266:	462a      	mov	r2, r5
 8008268:	f005 f8c2 	bl	800d3f0 <GUI_MoveRect>
 800826c:	a802      	add	r0, sp, #8
 800826e:	4601      	mov	r1, r0
 8008270:	464a      	mov	r2, r9
 8008272:	f004 fa3f 	bl	800c6f4 <GUI__ReduceRect>
 8008276:	4668      	mov	r0, sp
 8008278:	a902      	add	r1, sp, #8
 800827a:	f004 ffbd 	bl	800d1f8 <GUI_RectsIntersect>
 800827e:	b120      	cbz	r0, 800828a <WM_SetCaptureMove+0x92>
 8008280:	4620      	mov	r0, r4
 8008282:	4639      	mov	r1, r7
 8008284:	462a      	mov	r2, r5
 8008286:	f000 f988 	bl	800859a <WM_MoveWindow>
 800828a:	b005      	add	sp, #20
 800828c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008290:	2000d7c0 	.word	0x2000d7c0

08008294 <WM__ReleaseCapture>:
 8008294:	b530      	push	{r4, r5, lr}
 8008296:	4d0a      	ldr	r5, [pc, #40]	; (80082c0 <WM__ReleaseCapture+0x2c>)
 8008298:	4c0a      	ldr	r4, [pc, #40]	; (80082c4 <WM__ReleaseCapture+0x30>)
 800829a:	682b      	ldr	r3, [r5, #0]
 800829c:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80082a0:	b085      	sub	sp, #20
 80082a2:	b150      	cbz	r0, 80082ba <WM__ReleaseCapture+0x26>
 80082a4:	a904      	add	r1, sp, #16
 80082a6:	2218      	movs	r2, #24
 80082a8:	f841 2d10 	str.w	r2, [r1, #-16]!
 80082ac:	4669      	mov	r1, sp
 80082ae:	f7ff fdeb 	bl	8007e88 <WM__SendMessage>
 80082b2:	6828      	ldr	r0, [r5, #0]
 80082b4:	2300      	movs	r3, #0
 80082b6:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 80082ba:	b005      	add	sp, #20
 80082bc:	bd30      	pop	{r4, r5, pc}
 80082be:	bf00      	nop
 80082c0:	2000dd90 	.word	0x2000dd90
 80082c4:	2000ddac 	.word	0x2000ddac

080082c8 <WM_SetCapture>:
 80082c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80082ca:	4b09      	ldr	r3, [pc, #36]	; (80082f0 <WM_SetCapture+0x28>)
 80082cc:	4a09      	ldr	r2, [pc, #36]	; (80082f4 <WM_SetCapture+0x2c>)
 80082ce:	4604      	mov	r4, r0
 80082d0:	6818      	ldr	r0, [r3, #0]
 80082d2:	460f      	mov	r7, r1
 80082d4:	f852 1020 	ldr.w	r1, [r2, r0, lsl #2]
 80082d8:	42a1      	cmp	r1, r4
 80082da:	4615      	mov	r5, r2
 80082dc:	461e      	mov	r6, r3
 80082de:	d001      	beq.n	80082e4 <WM_SetCapture+0x1c>
 80082e0:	f7ff ffd8 	bl	8008294 <WM__ReleaseCapture>
 80082e4:	6832      	ldr	r2, [r6, #0]
 80082e6:	4b04      	ldr	r3, [pc, #16]	; (80082f8 <WM_SetCapture+0x30>)
 80082e8:	f845 4022 	str.w	r4, [r5, r2, lsl #2]
 80082ec:	701f      	strb	r7, [r3, #0]
 80082ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80082f0:	2000dd90 	.word	0x2000dd90
 80082f4:	2000ddac 	.word	0x2000ddac
 80082f8:	2000dd94 	.word	0x2000dd94

080082fc <WM_ReleaseCapture>:
 80082fc:	f7ff bfca 	b.w	8008294 <WM__ReleaseCapture>

08008300 <WM_SetCallback>:
 8008300:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008302:	460e      	mov	r6, r1
 8008304:	4605      	mov	r5, r0
 8008306:	b168      	cbz	r0, 8008324 <WM_SetCallback+0x24>
 8008308:	f006 fae2 	bl	800e8d0 <GUI_ALLOC_LockH>
 800830c:	4602      	mov	r2, r0
 800830e:	a802      	add	r0, sp, #8
 8008310:	6914      	ldr	r4, [r2, #16]
 8008312:	f840 2d04 	str.w	r2, [r0, #-4]!
 8008316:	6116      	str	r6, [r2, #16]
 8008318:	f006 fae8 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800831c:	4628      	mov	r0, r5
 800831e:	f000 ff3d 	bl	800919c <WM_InvalidateWindow>
 8008322:	e000      	b.n	8008326 <WM_SetCallback+0x26>
 8008324:	4604      	mov	r4, r0
 8008326:	4620      	mov	r0, r4
 8008328:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

0800832a <WM_SendMessageNoPara>:
 800832a:	f007 be45 	b.w	800ffb8 <WM__SendMessageNoPara>

0800832e <WM_ResizeWindow>:
 800832e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008330:	ea52 0301 	orrs.w	r3, r2, r1
 8008334:	b08b      	sub	sp, #44	; 0x2c
 8008336:	4606      	mov	r6, r0
 8008338:	460c      	mov	r4, r1
 800833a:	4615      	mov	r5, r2
 800833c:	d06f      	beq.n	800841e <WM_ResizeWindow+0xf0>
 800833e:	2800      	cmp	r0, #0
 8008340:	d06d      	beq.n	800841e <WM_ResizeWindow+0xf0>
 8008342:	f006 fac5 	bl	800e8d0 <GUI_ALLOC_LockH>
 8008346:	4603      	mov	r3, r0
 8008348:	9003      	str	r0, [sp, #12]
 800834a:	c803      	ldmia	r0, {r0, r1}
 800834c:	aa04      	add	r2, sp, #16
 800834e:	af06      	add	r7, sp, #24
 8008350:	e882 0003 	stmia.w	r2, {r0, r1}
 8008354:	e887 0003 	stmia.w	r7, {r0, r1}
 8008358:	b17c      	cbz	r4, 800837a <WM_ResizeWindow+0x4c>
 800835a:	6a98      	ldr	r0, [r3, #40]	; 0x28
 800835c:	f400 7120 	and.w	r1, r0, #640	; 0x280
 8008360:	2980      	cmp	r1, #128	; 0x80
 8008362:	d105      	bne.n	8008370 <WM_ResizeWindow+0x42>
 8008364:	f8bd 7018 	ldrh.w	r7, [sp, #24]
 8008368:	1b38      	subs	r0, r7, r4
 800836a:	f8ad 0018 	strh.w	r0, [sp, #24]
 800836e:	e004      	b.n	800837a <WM_ResizeWindow+0x4c>
 8008370:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 8008374:	18a4      	adds	r4, r4, r2
 8008376:	f8ad 401c 	strh.w	r4, [sp, #28]
 800837a:	b185      	cbz	r5, 800839e <WM_ResizeWindow+0x70>
 800837c:	6a99      	ldr	r1, [r3, #40]	; 0x28
 800837e:	f401 62a0 	and.w	r2, r1, #1280	; 0x500
 8008382:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 8008386:	d105      	bne.n	8008394 <WM_ResizeWindow+0x66>
 8008388:	f8bd 701a 	ldrh.w	r7, [sp, #26]
 800838c:	1b78      	subs	r0, r7, r5
 800838e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8008392:	e004      	b.n	800839e <WM_ResizeWindow+0x70>
 8008394:	f8bd 401e 	ldrh.w	r4, [sp, #30]
 8008398:	192d      	adds	r5, r5, r4
 800839a:	f8ad 501e 	strh.w	r5, [sp, #30]
 800839e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80083a0:	03da      	lsls	r2, r3, #15
 80083a2:	d502      	bpl.n	80083aa <WM_ResizeWindow+0x7c>
 80083a4:	4630      	mov	r0, r6
 80083a6:	f000 fd79 	bl	8008e9c <WM__InvalidateDrawAndDescs>
 80083aa:	aa06      	add	r2, sp, #24
 80083ac:	e892 0003 	ldmia.w	r2, {r0, r1}
 80083b0:	9c03      	ldr	r4, [sp, #12]
 80083b2:	e884 0003 	stmia.w	r4, {r0, r1}
 80083b6:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80083b8:	078b      	lsls	r3, r1, #30
 80083ba:	d509      	bpl.n	80083d0 <WM_ResizeWindow+0xa2>
 80083bc:	a808      	add	r0, sp, #32
 80083be:	a904      	add	r1, sp, #16
 80083c0:	f005 f826 	bl	800d410 <GUI_MergeRect>
 80083c4:	9a03      	ldr	r2, [sp, #12]
 80083c6:	a808      	add	r0, sp, #32
 80083c8:	6991      	ldr	r1, [r2, #24]
 80083ca:	6a12      	ldr	r2, [r2, #32]
 80083cc:	f000 fe61 	bl	8009092 <WM__InvalidateRectEx>
 80083d0:	f9bd e01e 	ldrsh.w	lr, [sp, #30]
 80083d4:	f9bd 401c 	ldrsh.w	r4, [sp, #28]
 80083d8:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80083dc:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80083e0:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 80083e4:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 80083e8:	f9bd 501a 	ldrsh.w	r5, [sp, #26]
 80083ec:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 80083f0:	ebc0 000e 	rsb	r0, r0, lr
 80083f4:	1ae3      	subs	r3, r4, r3
 80083f6:	ac0a      	add	r4, sp, #40	; 0x28
 80083f8:	1aaa      	subs	r2, r5, r2
 80083fa:	9000      	str	r0, [sp, #0]
 80083fc:	1a79      	subs	r1, r7, r1
 80083fe:	9803      	ldr	r0, [sp, #12]
 8008400:	f007 fd58 	bl	800feb4 <WM__UpdateChildPositions>
 8008404:	f854 1d1c 	ldr.w	r1, [r4, #-28]!
 8008408:	f101 0008 	add.w	r0, r1, #8
 800840c:	f004 fa26 	bl	800c85c <GUI__IntersectRect>
 8008410:	4630      	mov	r0, r6
 8008412:	2105      	movs	r1, #5
 8008414:	f000 fe70 	bl	80090f8 <WM__SendMsgNoData>
 8008418:	4620      	mov	r0, r4
 800841a:	f006 fa67 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800841e:	b00b      	add	sp, #44	; 0x2c
 8008420:	bdf0      	pop	{r4, r5, r6, r7, pc}

08008422 <WM_NotifyParent>:
 8008422:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8008424:	2326      	movs	r3, #38	; 0x26
 8008426:	9103      	str	r1, [sp, #12]
 8008428:	4669      	mov	r1, sp
 800842a:	9300      	str	r3, [sp, #0]
 800842c:	f008 f886 	bl	801053c <WM_SendToParent>
 8008430:	b005      	add	sp, #20
 8008432:	bd00      	pop	{pc}

08008434 <WM_MoveChildTo>:
 8008434:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008436:	460f      	mov	r7, r1
 8008438:	4616      	mov	r6, r2
 800843a:	4605      	mov	r5, r0
 800843c:	b320      	cbz	r0, 8008488 <WM_MoveChildTo+0x54>
 800843e:	f000 f93c 	bl	80086ba <WM_GetParent>
 8008442:	b308      	cbz	r0, 8008488 <WM_MoveChildTo+0x54>
 8008444:	f006 fa44 	bl	800e8d0 <GUI_ALLOC_LockH>
 8008448:	9000      	str	r0, [sp, #0]
 800844a:	4628      	mov	r0, r5
 800844c:	f006 fa40 	bl	800e8d0 <GUI_ALLOC_LockH>
 8008450:	ab02      	add	r3, sp, #8
 8008452:	4604      	mov	r4, r0
 8008454:	9001      	str	r0, [sp, #4]
 8008456:	f853 0d08 	ldr.w	r0, [r3, #-8]!
 800845a:	f9b4 2000 	ldrsh.w	r2, [r4]
 800845e:	f9b0 1000 	ldrsh.w	r1, [r0]
 8008462:	f9b0 0002 	ldrsh.w	r0, [r0, #2]
 8008466:	1a8b      	subs	r3, r1, r2
 8008468:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800846c:	1a42      	subs	r2, r0, r1
 800846e:	4668      	mov	r0, sp
 8008470:	18ff      	adds	r7, r7, r3
 8008472:	18b6      	adds	r6, r6, r2
 8008474:	f006 fa3a 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008478:	a801      	add	r0, sp, #4
 800847a:	f006 fa37 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800847e:	4628      	mov	r0, r5
 8008480:	4639      	mov	r1, r7
 8008482:	4632      	mov	r2, r6
 8008484:	f000 f837 	bl	80084f6 <WM__MoveWindow>
 8008488:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

0800848a <_MoveDescendents>:
 800848a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800848e:	b088      	sub	sp, #32
 8008490:	4606      	mov	r6, r0
 8008492:	460c      	mov	r4, r1
 8008494:	4615      	mov	r5, r2
 8008496:	a804      	add	r0, sp, #16
 8008498:	2100      	movs	r1, #0
 800849a:	2210      	movs	r2, #16
 800849c:	f00b fac4 	bl	8013a28 <memset>
 80084a0:	b336      	cbz	r6, 80084f0 <_MoveDescendents+0x66>
 80084a2:	4630      	mov	r0, r6
 80084a4:	f006 fa14 	bl	800e8d0 <GUI_ALLOC_LockH>
 80084a8:	4621      	mov	r1, r4
 80084aa:	462a      	mov	r2, r5
 80084ac:	9001      	str	r0, [sp, #4]
 80084ae:	f004 ff9f 	bl	800d3f0 <GUI_MoveRect>
 80084b2:	9801      	ldr	r0, [sp, #4]
 80084b4:	4621      	mov	r1, r4
 80084b6:	3008      	adds	r0, #8
 80084b8:	462a      	mov	r2, r5
 80084ba:	f004 ff99 	bl	800d3f0 <GUI_MoveRect>
 80084be:	a808      	add	r0, sp, #32
 80084c0:	f850 2d1c 	ldr.w	r2, [r0, #-28]!
 80084c4:	f8d2 801c 	ldr.w	r8, [r2, #28]
 80084c8:	6a17      	ldr	r7, [r2, #32]
 80084ca:	f006 fa0f 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80084ce:	4640      	mov	r0, r8
 80084d0:	4621      	mov	r1, r4
 80084d2:	462a      	mov	r2, r5
 80084d4:	f7ff ffd9 	bl	800848a <_MoveDescendents>
 80084d8:	a802      	add	r0, sp, #8
 80084da:	2303      	movs	r3, #3
 80084dc:	9007      	str	r0, [sp, #28]
 80084de:	a904      	add	r1, sp, #16
 80084e0:	4630      	mov	r0, r6
 80084e2:	9304      	str	r3, [sp, #16]
 80084e4:	9402      	str	r4, [sp, #8]
 80084e6:	9503      	str	r5, [sp, #12]
 80084e8:	463e      	mov	r6, r7
 80084ea:	f7ff fccd 	bl	8007e88 <WM__SendMessage>
 80084ee:	e7d7      	b.n	80084a0 <_MoveDescendents+0x16>
 80084f0:	b008      	add	sp, #32
 80084f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080084f6 <WM__MoveWindow>:
 80084f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80084fa:	b08a      	sub	sp, #40	; 0x28
 80084fc:	4606      	mov	r6, r0
 80084fe:	460d      	mov	r5, r1
 8008500:	4614      	mov	r4, r2
 8008502:	a806      	add	r0, sp, #24
 8008504:	2100      	movs	r1, #0
 8008506:	2210      	movs	r2, #16
 8008508:	f00b fa8e 	bl	8013a28 <memset>
 800850c:	2e00      	cmp	r6, #0
 800850e:	d041      	beq.n	8008594 <WM__MoveWindow+0x9e>
 8008510:	b90d      	cbnz	r5, 8008516 <WM__MoveWindow+0x20>
 8008512:	2c00      	cmp	r4, #0
 8008514:	d03e      	beq.n	8008594 <WM__MoveWindow+0x9e>
 8008516:	4630      	mov	r0, r6
 8008518:	f006 f9da 	bl	800e8d0 <GUI_ALLOC_LockH>
 800851c:	4603      	mov	r3, r0
 800851e:	9001      	str	r0, [sp, #4]
 8008520:	c803      	ldmia	r0, {r0, r1}
 8008522:	af02      	add	r7, sp, #8
 8008524:	e887 0003 	stmia.w	r7, {r0, r1}
 8008528:	4622      	mov	r2, r4
 800852a:	4618      	mov	r0, r3
 800852c:	4629      	mov	r1, r5
 800852e:	f004 ff5f 	bl	800d3f0 <GUI_MoveRect>
 8008532:	9801      	ldr	r0, [sp, #4]
 8008534:	4629      	mov	r1, r5
 8008536:	3008      	adds	r0, #8
 8008538:	4622      	mov	r2, r4
 800853a:	f004 ff59 	bl	800d3f0 <GUI_MoveRect>
 800853e:	a80a      	add	r0, sp, #40	; 0x28
 8008540:	f850 2d24 	ldr.w	r2, [r0, #-36]!
 8008544:	f8d2 801c 	ldr.w	r8, [r2, #28]
 8008548:	f006 f9d0 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800854c:	4629      	mov	r1, r5
 800854e:	4622      	mov	r2, r4
 8008550:	4640      	mov	r0, r8
 8008552:	f7ff ff9a 	bl	800848a <_MoveDescendents>
 8008556:	4630      	mov	r0, r6
 8008558:	f006 f9ba 	bl	800e8d0 <GUI_ALLOC_LockH>
 800855c:	6a81      	ldr	r1, [r0, #40]	; 0x28
 800855e:	9001      	str	r0, [sp, #4]
 8008560:	078a      	lsls	r2, r1, #30
 8008562:	d50a      	bpl.n	800857a <WM__MoveWindow+0x84>
 8008564:	6981      	ldr	r1, [r0, #24]
 8008566:	b141      	cbz	r1, 800857a <WM__MoveWindow+0x84>
 8008568:	6a02      	ldr	r2, [r0, #32]
 800856a:	f000 fda9 	bl	80090c0 <WM__InvalidateParent>
 800856e:	9a01      	ldr	r2, [sp, #4]
 8008570:	4638      	mov	r0, r7
 8008572:	6991      	ldr	r1, [r2, #24]
 8008574:	6a12      	ldr	r2, [r2, #32]
 8008576:	f000 fda3 	bl	80090c0 <WM__InvalidateParent>
 800857a:	a801      	add	r0, sp, #4
 800857c:	f006 f9b6 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008580:	2003      	movs	r0, #3
 8008582:	9006      	str	r0, [sp, #24]
 8008584:	ab04      	add	r3, sp, #16
 8008586:	4630      	mov	r0, r6
 8008588:	a906      	add	r1, sp, #24
 800858a:	9309      	str	r3, [sp, #36]	; 0x24
 800858c:	9504      	str	r5, [sp, #16]
 800858e:	9405      	str	r4, [sp, #20]
 8008590:	f7ff fc7a 	bl	8007e88 <WM__SendMessage>
 8008594:	b00a      	add	sp, #40	; 0x28
 8008596:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800859a <WM_MoveWindow>:
 800859a:	f7ff bfac 	b.w	80084f6 <WM__MoveWindow>

0800859e <WM_DisableMemdev>:
 800859e:	b508      	push	{r3, lr}
 80085a0:	b138      	cbz	r0, 80085b2 <WM_DisableMemdev+0x14>
 80085a2:	f006 f98b 	bl	800e8bc <GUI_ALLOC_h2p>
 80085a6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80085a8:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 80085ac:	f021 0204 	bic.w	r2, r1, #4
 80085b0:	6282      	str	r2, [r0, #40]	; 0x28
 80085b2:	bd08      	pop	{r3, pc}

080085b4 <WM_IsWindow>:
 80085b4:	f000 bc62 	b.w	8008e7c <WM__IsWindow>

080085b8 <WM_IsFocussable>:
 80085b8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80085ba:	b150      	cbz	r0, 80085d2 <WM_IsFocussable+0x1a>
 80085bc:	2100      	movs	r1, #0
 80085be:	aa04      	add	r2, sp, #16
 80085c0:	9103      	str	r1, [sp, #12]
 80085c2:	231f      	movs	r3, #31
 80085c4:	4669      	mov	r1, sp
 80085c6:	f842 3d10 	str.w	r3, [r2, #-16]!
 80085ca:	f000 fd91 	bl	80090f0 <WM_SendMessage>
 80085ce:	9803      	ldr	r0, [sp, #12]
 80085d0:	e7ff      	b.n	80085d2 <WM_IsFocussable+0x1a>
 80085d2:	b005      	add	sp, #20
 80085d4:	bd00      	pop	{pc}

080085d6 <WM_HideWindow>:
 80085d6:	b513      	push	{r0, r1, r4, lr}
 80085d8:	b188      	cbz	r0, 80085fe <WM_HideWindow+0x28>
 80085da:	f006 f979 	bl	800e8d0 <GUI_ALLOC_LockH>
 80085de:	6a82      	ldr	r2, [r0, #40]	; 0x28
 80085e0:	ac02      	add	r4, sp, #8
 80085e2:	0791      	lsls	r1, r2, #30
 80085e4:	f844 0d04 	str.w	r0, [r4, #-4]!
 80085e8:	d506      	bpl.n	80085f8 <WM_HideWindow+0x22>
 80085ea:	f022 0102 	bic.w	r1, r2, #2
 80085ee:	6281      	str	r1, [r0, #40]	; 0x28
 80085f0:	6a02      	ldr	r2, [r0, #32]
 80085f2:	6981      	ldr	r1, [r0, #24]
 80085f4:	f000 fd4d 	bl	8009092 <WM__InvalidateRectEx>
 80085f8:	4620      	mov	r0, r4
 80085fa:	f006 f977 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80085fe:	bd1c      	pop	{r2, r3, r4, pc}

08008600 <WM_HasFocus>:
 8008600:	4b04      	ldr	r3, [pc, #16]	; (8008614 <WM_HasFocus+0x14>)
 8008602:	4905      	ldr	r1, [pc, #20]	; (8008618 <WM_HasFocus+0x18>)
 8008604:	681a      	ldr	r2, [r3, #0]
 8008606:	f851 3022 	ldr.w	r3, [r1, r2, lsl #2]
 800860a:	1ac2      	subs	r2, r0, r3
 800860c:	4250      	negs	r0, r2
 800860e:	4150      	adcs	r0, r2
 8008610:	4770      	bx	lr
 8008612:	bf00      	nop
 8008614:	2000dd90 	.word	0x2000dd90
 8008618:	2000dd80 	.word	0x2000dd80

0800861c <WM_HasCaptured>:
 800861c:	4b04      	ldr	r3, [pc, #16]	; (8008630 <WM_HasCaptured+0x14>)
 800861e:	4905      	ldr	r1, [pc, #20]	; (8008634 <WM_HasCaptured+0x18>)
 8008620:	681a      	ldr	r2, [r3, #0]
 8008622:	f851 3022 	ldr.w	r3, [r1, r2, lsl #2]
 8008626:	1ac2      	subs	r2, r0, r3
 8008628:	4250      	negs	r0, r2
 800862a:	4150      	adcs	r0, r2
 800862c:	4770      	bx	lr
 800862e:	bf00      	nop
 8008630:	2000dd90 	.word	0x2000dd90
 8008634:	2000ddac 	.word	0x2000ddac

08008638 <WM__GetWindowSizeX>:
 8008638:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800863c:	f9b0 3000 	ldrsh.w	r3, [r0]
 8008640:	1ad0      	subs	r0, r2, r3
 8008642:	3001      	adds	r0, #1
 8008644:	4770      	bx	lr

08008646 <WM__GetWindowSizeY>:
 8008646:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800864a:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800864e:	1ad0      	subs	r0, r2, r3
 8008650:	3001      	adds	r0, #1
 8008652:	4770      	bx	lr

08008654 <WM_GetWindowSizeX>:
 8008654:	b513      	push	{r0, r1, r4, lr}
 8008656:	b908      	cbnz	r0, 800865c <WM_GetWindowSizeX+0x8>
 8008658:	f000 ff1a 	bl	8009490 <WM_GetActiveWindow>
 800865c:	f006 f938 	bl	800e8d0 <GUI_ALLOC_LockH>
 8008660:	ab02      	add	r3, sp, #8
 8008662:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8008666:	f9b0 2000 	ldrsh.w	r2, [r0]
 800866a:	f843 0d04 	str.w	r0, [r3, #-4]!
 800866e:	1aa0      	subs	r0, r4, r2
 8008670:	1c44      	adds	r4, r0, #1
 8008672:	4618      	mov	r0, r3
 8008674:	f006 f93a 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008678:	4620      	mov	r0, r4
 800867a:	bd1c      	pop	{r2, r3, r4, pc}

0800867c <WM_GetWindowSizeY>:
 800867c:	b513      	push	{r0, r1, r4, lr}
 800867e:	b908      	cbnz	r0, 8008684 <WM_GetWindowSizeY+0x8>
 8008680:	f000 ff06 	bl	8009490 <WM_GetActiveWindow>
 8008684:	f006 f924 	bl	800e8d0 <GUI_ALLOC_LockH>
 8008688:	ab02      	add	r3, sp, #8
 800868a:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 800868e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8008692:	f843 0d04 	str.w	r0, [r3, #-4]!
 8008696:	1aa0      	subs	r0, r4, r2
 8008698:	1c44      	adds	r4, r0, #1
 800869a:	4618      	mov	r0, r3
 800869c:	f006 f926 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80086a0:	4620      	mov	r0, r4
 80086a2:	bd1c      	pop	{r2, r3, r4, pc}

080086a4 <WM_GetWindowRectEx>:
 80086a4:	b510      	push	{r4, lr}
 80086a6:	460c      	mov	r4, r1
 80086a8:	b130      	cbz	r0, 80086b8 <WM_GetWindowRectEx+0x14>
 80086aa:	b129      	cbz	r1, 80086b8 <WM_GetWindowRectEx+0x14>
 80086ac:	f006 f906 	bl	800e8bc <GUI_ALLOC_h2p>
 80086b0:	4603      	mov	r3, r0
 80086b2:	cb03      	ldmia	r3!, {r0, r1}
 80086b4:	6020      	str	r0, [r4, #0]
 80086b6:	6061      	str	r1, [r4, #4]
 80086b8:	bd10      	pop	{r4, pc}

080086ba <WM_GetParent>:
 80086ba:	b508      	push	{r3, lr}
 80086bc:	4603      	mov	r3, r0
 80086be:	b110      	cbz	r0, 80086c6 <WM_GetParent+0xc>
 80086c0:	f006 f8fc 	bl	800e8bc <GUI_ALLOC_h2p>
 80086c4:	6983      	ldr	r3, [r0, #24]
 80086c6:	4618      	mov	r0, r3
 80086c8:	bd08      	pop	{r3, pc}

080086ca <WM_GetNextSibling>:
 80086ca:	b508      	push	{r3, lr}
 80086cc:	4603      	mov	r3, r0
 80086ce:	b110      	cbz	r0, 80086d6 <WM_GetNextSibling+0xc>
 80086d0:	f006 f8f4 	bl	800e8bc <GUI_ALLOC_h2p>
 80086d4:	6a03      	ldr	r3, [r0, #32]
 80086d6:	4618      	mov	r0, r3
 80086d8:	bd08      	pop	{r3, pc}

080086da <WM_GetId>:
 80086da:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80086dc:	4604      	mov	r4, r0
 80086de:	2100      	movs	r1, #0
 80086e0:	2210      	movs	r2, #16
 80086e2:	4668      	mov	r0, sp
 80086e4:	f00b f9a0 	bl	8013a28 <memset>
 80086e8:	2315      	movs	r3, #21
 80086ea:	4620      	mov	r0, r4
 80086ec:	4669      	mov	r1, sp
 80086ee:	9300      	str	r3, [sp, #0]
 80086f0:	f000 fcfe 	bl	80090f0 <WM_SendMessage>
 80086f4:	9803      	ldr	r0, [sp, #12]
 80086f6:	b004      	add	sp, #16
 80086f8:	bd10      	pop	{r4, pc}
	...

080086fc <WM_GetFocussedWindow>:
 80086fc:	4b02      	ldr	r3, [pc, #8]	; (8008708 <WM_GetFocussedWindow+0xc>)
 80086fe:	4803      	ldr	r0, [pc, #12]	; (800870c <WM_GetFocussedWindow+0x10>)
 8008700:	681a      	ldr	r2, [r3, #0]
 8008702:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 8008706:	4770      	bx	lr
 8008708:	2000dd90 	.word	0x2000dd90
 800870c:	2000dd80 	.word	0x2000dd80

08008710 <WM_GetFirstChild>:
 8008710:	b508      	push	{r3, lr}
 8008712:	4603      	mov	r3, r0
 8008714:	b110      	cbz	r0, 800871c <WM_GetFirstChild+0xc>
 8008716:	f006 f8d1 	bl	800e8bc <GUI_ALLOC_h2p>
 800871a:	69c3      	ldr	r3, [r0, #28]
 800871c:	4618      	mov	r0, r3
 800871e:	bd08      	pop	{r3, pc}

08008720 <_GetDialogItem>:
 8008720:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008722:	460d      	mov	r5, r1
 8008724:	f006 f8d4 	bl	800e8d0 <GUI_ALLOC_LockH>
 8008728:	ab02      	add	r3, sp, #8
 800872a:	69c4      	ldr	r4, [r0, #28]
 800872c:	f843 0d04 	str.w	r0, [r3, #-4]!
 8008730:	4618      	mov	r0, r3
 8008732:	f006 f8db 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008736:	b17c      	cbz	r4, 8008758 <_GetDialogItem+0x38>
 8008738:	4620      	mov	r0, r4
 800873a:	f7ff ffce 	bl	80086da <WM_GetId>
 800873e:	42a8      	cmp	r0, r5
 8008740:	d00a      	beq.n	8008758 <_GetDialogItem+0x38>
 8008742:	4620      	mov	r0, r4
 8008744:	4629      	mov	r1, r5
 8008746:	f7ff ffeb 	bl	8008720 <_GetDialogItem>
 800874a:	b920      	cbnz	r0, 8008756 <_GetDialogItem+0x36>
 800874c:	4620      	mov	r0, r4
 800874e:	f006 f8b5 	bl	800e8bc <GUI_ALLOC_h2p>
 8008752:	6a04      	ldr	r4, [r0, #32]
 8008754:	e7ef      	b.n	8008736 <_GetDialogItem+0x16>
 8008756:	4604      	mov	r4, r0
 8008758:	4620      	mov	r0, r4
 800875a:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800875c <WM_GetDialogItem>:
 800875c:	b108      	cbz	r0, 8008762 <WM_GetDialogItem+0x6>
 800875e:	f7ff bfdf 	b.w	8008720 <_GetDialogItem>
 8008762:	4770      	bx	lr

08008764 <WM_GetDesktopWindow>:
 8008764:	4b03      	ldr	r3, [pc, #12]	; (8008774 <WM_GetDesktopWindow+0x10>)
 8008766:	4904      	ldr	r1, [pc, #16]	; (8008778 <WM_GetDesktopWindow+0x14>)
 8008768:	6818      	ldr	r0, [r3, #0]
 800876a:	7c42      	ldrb	r2, [r0, #17]
 800876c:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8008770:	4770      	bx	lr
 8008772:	bf00      	nop
 8008774:	20000270 	.word	0x20000270
 8008778:	2000dd70 	.word	0x2000dd70

0800877c <WM_GetClientWindow>:
 800877c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800877e:	a904      	add	r1, sp, #16
 8008780:	2217      	movs	r2, #23
 8008782:	2300      	movs	r3, #0
 8008784:	f841 2d10 	str.w	r2, [r1, #-16]!
 8008788:	4669      	mov	r1, sp
 800878a:	9303      	str	r3, [sp, #12]
 800878c:	f000 fcb0 	bl	80090f0 <WM_SendMessage>
 8008790:	9803      	ldr	r0, [sp, #12]
 8008792:	b005      	add	sp, #20
 8008794:	bd00      	pop	{pc}

08008796 <WM__GetClientRectEx>:
 8008796:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008798:	460d      	mov	r5, r1
 800879a:	b158      	cbz	r0, 80087b4 <WM__GetClientRectEx+0x1e>
 800879c:	b151      	cbz	r1, 80087b4 <WM__GetClientRectEx+0x1e>
 800879e:	f006 f897 	bl	800e8d0 <GUI_ALLOC_LockH>
 80087a2:	ac02      	add	r4, sp, #8
 80087a4:	4629      	mov	r1, r5
 80087a6:	f844 0d04 	str.w	r0, [r4, #-4]!
 80087aa:	f000 fcaf 	bl	800910c <WM__GetClientRectWin>
 80087ae:	4620      	mov	r0, r4
 80087b0:	f006 f89c 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80087b4:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

080087b6 <WM_GetClientRectEx>:
 80087b6:	f7ff bfee 	b.w	8008796 <WM__GetClientRectEx>
	...

080087bc <WM_GetClientRect>:
 80087bc:	4b04      	ldr	r3, [pc, #16]	; (80087d0 <WM_GetClientRect+0x14>)
 80087be:	4601      	mov	r1, r0
 80087c0:	6818      	ldr	r0, [r3, #0]
 80087c2:	b910      	cbnz	r0, 80087ca <WM_GetClientRect+0xe>
 80087c4:	4803      	ldr	r0, [pc, #12]	; (80087d4 <WM_GetClientRect+0x18>)
 80087c6:	6802      	ldr	r2, [r0, #0]
 80087c8:	6c90      	ldr	r0, [r2, #72]	; 0x48
 80087ca:	f7ff bfe4 	b.w	8008796 <WM__GetClientRectEx>
 80087ce:	bf00      	nop
 80087d0:	2000dd6c 	.word	0x2000dd6c
 80087d4:	20000270 	.word	0x20000270

080087d8 <WM_GetBkColor>:
 80087d8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80087da:	b140      	cbz	r0, 80087ee <WM_GetBkColor+0x16>
 80087dc:	a904      	add	r1, sp, #16
 80087de:	2322      	movs	r3, #34	; 0x22
 80087e0:	f841 3d10 	str.w	r3, [r1, #-16]!
 80087e4:	4669      	mov	r1, sp
 80087e6:	f000 fc83 	bl	80090f0 <WM_SendMessage>
 80087ea:	9803      	ldr	r0, [sp, #12]
 80087ec:	e001      	b.n	80087f2 <WM_GetBkColor+0x1a>
 80087ee:	f06f 4070 	mvn.w	r0, #4026531840	; 0xf0000000
 80087f2:	b005      	add	sp, #20
 80087f4:	bd00      	pop	{pc}

080087f6 <_cbInvalidateOne>:
 80087f6:	f000 bcd1 	b.w	800919c <WM_InvalidateWindow>
	...

080087fc <WM_BringToTop>:
 80087fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80087fe:	4604      	mov	r4, r0
 8008800:	2800      	cmp	r0, #0
 8008802:	d032      	beq.n	800886a <WM_BringToTop+0x6e>
 8008804:	f006 f864 	bl	800e8d0 <GUI_ALLOC_LockH>
 8008808:	4603      	mov	r3, r0
 800880a:	9000      	str	r0, [sp, #0]
 800880c:	6a00      	ldr	r0, [r0, #32]
 800880e:	b908      	cbnz	r0, 8008814 <WM_BringToTop+0x18>
 8008810:	4668      	mov	r0, sp
 8008812:	e00e      	b.n	8008832 <WM_BringToTop+0x36>
 8008814:	6a99      	ldr	r1, [r3, #40]	; 0x28
 8008816:	070a      	lsls	r2, r1, #28
 8008818:	d411      	bmi.n	800883e <WM_BringToTop+0x42>
 800881a:	f006 f859 	bl	800e8d0 <GUI_ALLOC_LockH>
 800881e:	ad02      	add	r5, sp, #8
 8008820:	f845 0d04 	str.w	r0, [r5, #-4]!
 8008824:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8008826:	0703      	lsls	r3, r0, #28
 8008828:	d506      	bpl.n	8008838 <WM_BringToTop+0x3c>
 800882a:	4668      	mov	r0, sp
 800882c:	f006 f85e 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008830:	4628      	mov	r0, r5
 8008832:	f006 f85b 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008836:	e018      	b.n	800886a <WM_BringToTop+0x6e>
 8008838:	4628      	mov	r0, r5
 800883a:	f006 f857 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800883e:	aa02      	add	r2, sp, #8
 8008840:	4668      	mov	r0, sp
 8008842:	f852 5d08 	ldr.w	r5, [r2, #-8]!
 8008846:	69ad      	ldr	r5, [r5, #24]
 8008848:	f006 f850 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800884c:	4620      	mov	r0, r4
 800884e:	f000 faa3 	bl	8008d98 <WM__RemoveWindowFromList>
 8008852:	4629      	mov	r1, r5
 8008854:	4620      	mov	r0, r4
 8008856:	f000 fa51 	bl	8008cfc <WM__InsertWindowIntoList>
 800885a:	4620      	mov	r0, r4
 800885c:	f000 fc9e 	bl	800919c <WM_InvalidateWindow>
 8008860:	4620      	mov	r0, r4
 8008862:	4902      	ldr	r1, [pc, #8]	; (800886c <WM_BringToTop+0x70>)
 8008864:	2200      	movs	r2, #0
 8008866:	f007 ff05 	bl	8010674 <WM_ForEachDesc>
 800886a:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 800886c:	080087f7 	.word	0x080087f7

08008870 <_OnExit>:
 8008870:	4a0a      	ldr	r2, [pc, #40]	; (800889c <_OnExit+0x2c>)
 8008872:	480b      	ldr	r0, [pc, #44]	; (80088a0 <_OnExit+0x30>)
 8008874:	490b      	ldr	r1, [pc, #44]	; (80088a4 <_OnExit+0x34>)
 8008876:	2300      	movs	r3, #0
 8008878:	7013      	strb	r3, [r2, #0]
 800887a:	6003      	str	r3, [r0, #0]
 800887c:	600b      	str	r3, [r1, #0]
 800887e:	480a      	ldr	r0, [pc, #40]	; (80088a8 <_OnExit+0x38>)
 8008880:	4a0a      	ldr	r2, [pc, #40]	; (80088ac <_OnExit+0x3c>)
 8008882:	490b      	ldr	r1, [pc, #44]	; (80088b0 <_OnExit+0x40>)
 8008884:	6003      	str	r3, [r0, #0]
 8008886:	6013      	str	r3, [r2, #0]
 8008888:	600b      	str	r3, [r1, #0]
 800888a:	6043      	str	r3, [r0, #4]
 800888c:	6053      	str	r3, [r2, #4]
 800888e:	4809      	ldr	r0, [pc, #36]	; (80088b4 <_OnExit+0x44>)
 8008890:	4a09      	ldr	r2, [pc, #36]	; (80088b8 <_OnExit+0x48>)
 8008892:	490a      	ldr	r1, [pc, #40]	; (80088bc <_OnExit+0x4c>)
 8008894:	6003      	str	r3, [r0, #0]
 8008896:	6013      	str	r3, [r2, #0]
 8008898:	600b      	str	r3, [r1, #0]
 800889a:	4770      	bx	lr
 800889c:	2000d7ec 	.word	0x2000d7ec
 80088a0:	2000d7c4 	.word	0x2000d7c4
 80088a4:	2000dda4 	.word	0x2000dda4
 80088a8:	2000dd80 	.word	0x2000dd80
 80088ac:	2000ddac 	.word	0x2000ddac
 80088b0:	2000ddb8 	.word	0x2000ddb8
 80088b4:	2000dd6c 	.word	0x2000dd6c
 80088b8:	2000dd98 	.word	0x2000dd98
 80088bc:	2000dda8 	.word	0x2000dda8

080088c0 <_Paint1>:
 80088c0:	b510      	push	{r4, lr}
 80088c2:	4604      	mov	r4, r0
 80088c4:	f005 fffa 	bl	800e8bc <GUI_ALLOC_h2p>
 80088c8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80088ca:	4a04      	ldr	r2, [pc, #16]	; (80088dc <_Paint1+0x1c>)
 80088cc:	4904      	ldr	r1, [pc, #16]	; (80088e0 <_Paint1+0x20>)
 80088ce:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 80088d2:	bf08      	it	eq
 80088d4:	4611      	moveq	r1, r2
 80088d6:	4620      	mov	r0, r4
 80088d8:	4788      	blx	r1
 80088da:	bd10      	pop	{r4, pc}
 80088dc:	08009731 	.word	0x08009731
 80088e0:	08009cf1 	.word	0x08009cf1

080088e4 <_Paint1Trans>:
 80088e4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80088e8:	4c21      	ldr	r4, [pc, #132]	; (8008970 <_Paint1Trans+0x8c>)
 80088ea:	6823      	ldr	r3, [r4, #0]
 80088ec:	4605      	mov	r5, r0
 80088ee:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80088f0:	f005 ffee 	bl	800e8d0 <GUI_ALLOC_LockH>
 80088f4:	9000      	str	r0, [sp, #0]
 80088f6:	4628      	mov	r0, r5
 80088f8:	f005 ffea 	bl	800e8d0 <GUI_ALLOC_LockH>
 80088fc:	4601      	mov	r1, r0
 80088fe:	9001      	str	r0, [sp, #4]
 8008900:	9800      	ldr	r0, [sp, #0]
 8008902:	3008      	adds	r0, #8
 8008904:	f004 fc78 	bl	800d1f8 <GUI_RectsIntersect>
 8008908:	4606      	mov	r6, r0
 800890a:	b340      	cbz	r0, 800895e <_Paint1Trans+0x7a>
 800890c:	ae02      	add	r6, sp, #8
 800890e:	6820      	ldr	r0, [r4, #0]
 8008910:	9901      	ldr	r1, [sp, #4]
 8008912:	f856 2d08 	ldr.w	r2, [r6, #-8]!
 8008916:	f8d0 804c 	ldr.w	r8, [r0, #76]	; 0x4c
 800891a:	6d07      	ldr	r7, [r0, #80]	; 0x50
 800891c:	4e15      	ldr	r6, [pc, #84]	; (8008974 <_Paint1Trans+0x90>)
 800891e:	f101 0008 	add.w	r0, r1, #8
 8008922:	3208      	adds	r2, #8
 8008924:	f003 ff68 	bl	800c7f8 <GUI__IntersectRects>
 8008928:	4668      	mov	r0, sp
 800892a:	f005 ffdf 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800892e:	a802      	add	r0, sp, #8
 8008930:	6823      	ldr	r3, [r4, #0]
 8008932:	f850 2d04 	ldr.w	r2, [r0, #-4]!
 8008936:	6035      	str	r5, [r6, #0]
 8008938:	f9b2 1000 	ldrsh.w	r1, [r2]
 800893c:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 8008940:	64d9      	str	r1, [r3, #76]	; 0x4c
 8008942:	651a      	str	r2, [r3, #80]	; 0x50
 8008944:	f005 ffd2 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008948:	4628      	mov	r0, r5
 800894a:	f7ff ffb9 	bl	80088c0 <_Paint1>
 800894e:	6823      	ldr	r3, [r4, #0]
 8008950:	2000      	movs	r0, #0
 8008952:	6030      	str	r0, [r6, #0]
 8008954:	f8c3 804c 	str.w	r8, [r3, #76]	; 0x4c
 8008958:	651f      	str	r7, [r3, #80]	; 0x50
 800895a:	2001      	movs	r0, #1
 800895c:	e006      	b.n	800896c <_Paint1Trans+0x88>
 800895e:	4668      	mov	r0, sp
 8008960:	f005 ffc4 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008964:	a801      	add	r0, sp, #4
 8008966:	f005 ffc1 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800896a:	4630      	mov	r0, r6
 800896c:	e8bd 81fc 	ldmia.w	sp!, {r2, r3, r4, r5, r6, r7, r8, pc}
 8008970:	20000270 	.word	0x20000270
 8008974:	2000dd6c 	.word	0x2000dd6c

08008978 <_PaintTransChildren>:
 8008978:	b530      	push	{r4, r5, lr}
 800897a:	b085      	sub	sp, #20
 800897c:	4605      	mov	r5, r0
 800897e:	f005 ffa7 	bl	800e8d0 <GUI_ALLOC_LockH>
 8008982:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8008984:	9001      	str	r0, [sp, #4]
 8008986:	0793      	lsls	r3, r2, #30
 8008988:	d404      	bmi.n	8008994 <_PaintTransChildren+0x1c>
 800898a:	a801      	add	r0, sp, #4
 800898c:	f005 ffae 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008990:	b005      	add	sp, #20
 8008992:	bd30      	pop	{r4, r5, pc}
 8008994:	69c4      	ldr	r4, [r0, #28]
 8008996:	2c00      	cmp	r4, #0
 8008998:	d0f7      	beq.n	800898a <_PaintTransChildren+0x12>
 800899a:	4620      	mov	r0, r4
 800899c:	f005 ff98 	bl	800e8d0 <GUI_ALLOC_LockH>
 80089a0:	6a81      	ldr	r1, [r0, #40]	; 0x28
 80089a2:	9000      	str	r0, [sp, #0]
 80089a4:	f001 0203 	and.w	r2, r1, #3
 80089a8:	2a03      	cmp	r2, #3
 80089aa:	d133      	bne.n	8008a14 <_PaintTransChildren+0x9c>
 80089ac:	9901      	ldr	r1, [sp, #4]
 80089ae:	3108      	adds	r1, #8
 80089b0:	f004 fc22 	bl	800d1f8 <GUI_RectsIntersect>
 80089b4:	2800      	cmp	r0, #0
 80089b6:	d02d      	beq.n	8008a14 <_PaintTransChildren+0x9c>
 80089b8:	9801      	ldr	r0, [sp, #4]
 80089ba:	3008      	adds	r0, #8
 80089bc:	c803      	ldmia	r0, {r0, r1}
 80089be:	ab04      	add	r3, sp, #16
 80089c0:	e903 0003 	stmdb	r3, {r0, r1}
 80089c4:	a801      	add	r0, sp, #4
 80089c6:	f005 ff91 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80089ca:	4668      	mov	r0, sp
 80089cc:	f005 ff8e 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80089d0:	4620      	mov	r0, r4
 80089d2:	f7ff ff87 	bl	80088e4 <_Paint1Trans>
 80089d6:	b170      	cbz	r0, 80089f6 <_PaintTransChildren+0x7e>
 80089d8:	4620      	mov	r0, r4
 80089da:	f005 ff6f 	bl	800e8bc <GUI_ALLOC_h2p>
 80089de:	9000      	str	r0, [sp, #0]
 80089e0:	4620      	mov	r0, r4
 80089e2:	f7ff ffc9 	bl	8008978 <_PaintTransChildren>
 80089e6:	4620      	mov	r0, r4
 80089e8:	f005 ff68 	bl	800e8bc <GUI_ALLOC_h2p>
 80089ec:	9000      	str	r0, [sp, #0]
 80089ee:	4628      	mov	r0, r5
 80089f0:	f005 ff64 	bl	800e8bc <GUI_ALLOC_h2p>
 80089f4:	9001      	str	r0, [sp, #4]
 80089f6:	4628      	mov	r0, r5
 80089f8:	f005 ff6a 	bl	800e8d0 <GUI_ALLOC_LockH>
 80089fc:	9001      	str	r0, [sp, #4]
 80089fe:	4620      	mov	r0, r4
 8008a00:	f005 ff66 	bl	800e8d0 <GUI_ALLOC_LockH>
 8008a04:	a904      	add	r1, sp, #16
 8008a06:	9000      	str	r0, [sp, #0]
 8008a08:	9c01      	ldr	r4, [sp, #4]
 8008a0a:	e911 0003 	ldmdb	r1, {r0, r1}
 8008a0e:	3408      	adds	r4, #8
 8008a10:	e884 0003 	stmia.w	r4, {r0, r1}
 8008a14:	a804      	add	r0, sp, #16
 8008a16:	f850 2d10 	ldr.w	r2, [r0, #-16]!
 8008a1a:	4668      	mov	r0, sp
 8008a1c:	6a14      	ldr	r4, [r2, #32]
 8008a1e:	f005 ff65 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008a22:	e7b8      	b.n	8008996 <_PaintTransChildren+0x1e>

08008a24 <_Findy1>:
 8008a24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008a26:	4606      	mov	r6, r0
 8008a28:	b085      	sub	sp, #20
 8008a2a:	460c      	mov	r4, r1
 8008a2c:	4615      	mov	r5, r2
 8008a2e:	2e00      	cmp	r6, #0
 8008a30:	d04c      	beq.n	8008acc <_Findy1+0xa8>
 8008a32:	4630      	mov	r0, r6
 8008a34:	f005 ff4c 	bl	800e8d0 <GUI_ALLOC_LockH>
 8008a38:	6a87      	ldr	r7, [r0, #40]	; 0x28
 8008a3a:	9001      	str	r0, [sp, #4]
 8008a3c:	07ba      	lsls	r2, r7, #30
 8008a3e:	4601      	mov	r1, r0
 8008a40:	d53d      	bpl.n	8008abe <_Findy1+0x9a>
 8008a42:	ae02      	add	r6, sp, #8
 8008a44:	b125      	cbz	r5, 8008a50 <_Findy1+0x2c>
 8008a46:	4630      	mov	r0, r6
 8008a48:	462a      	mov	r2, r5
 8008a4a:	f003 fed5 	bl	800c7f8 <GUI__IntersectRects>
 8008a4e:	e002      	b.n	8008a56 <_Findy1+0x32>
 8008a50:	c803      	ldmia	r0, {r0, r1}
 8008a52:	e886 0003 	stmia.w	r6, {r0, r1}
 8008a56:	4620      	mov	r0, r4
 8008a58:	4631      	mov	r1, r6
 8008a5a:	f004 fbcd 	bl	800d1f8 <GUI_RectsIntersect>
 8008a5e:	b370      	cbz	r0, 8008abe <_Findy1+0x9a>
 8008a60:	f017 0f01 	tst.w	r7, #1
 8008a64:	9b01      	ldr	r3, [sp, #4]
 8008a66:	d11e      	bne.n	8008aa6 <_Findy1+0x82>
 8008a68:	b13d      	cbz	r5, 8008a7a <_Findy1+0x56>
 8008a6a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8008a6e:	f9b5 0002 	ldrsh.w	r0, [r5, #2]
 8008a72:	4282      	cmp	r2, r0
 8008a74:	bfa8      	it	ge
 8008a76:	4610      	movge	r0, r2
 8008a78:	e001      	b.n	8008a7e <_Findy1+0x5a>
 8008a7a:	f9b3 0002 	ldrsh.w	r0, [r3, #2]
 8008a7e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8008a82:	f9b4 6006 	ldrsh.w	r6, [r4, #6]
 8008a86:	4288      	cmp	r0, r1
 8008a88:	dd06      	ble.n	8008a98 <_Findy1+0x74>
 8008a8a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8008a8e:	b211      	sxth	r1, r2
 8008a90:	428e      	cmp	r6, r1
 8008a92:	db14      	blt.n	8008abe <_Findy1+0x9a>
 8008a94:	1e53      	subs	r3, r2, #1
 8008a96:	e004      	b.n	8008aa2 <_Findy1+0x7e>
 8008a98:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8008a9c:	b218      	sxth	r0, r3
 8008a9e:	4286      	cmp	r6, r0
 8008aa0:	dd0d      	ble.n	8008abe <_Findy1+0x9a>
 8008aa2:	80e3      	strh	r3, [r4, #6]
 8008aa4:	e00b      	b.n	8008abe <_Findy1+0x9a>
 8008aa6:	69de      	ldr	r6, [r3, #28]
 8008aa8:	b14e      	cbz	r6, 8008abe <_Findy1+0x9a>
 8008aaa:	4630      	mov	r0, r6
 8008aac:	4621      	mov	r1, r4
 8008aae:	aa02      	add	r2, sp, #8
 8008ab0:	f7ff ffb8 	bl	8008a24 <_Findy1>
 8008ab4:	4630      	mov	r0, r6
 8008ab6:	f005 ff01 	bl	800e8bc <GUI_ALLOC_h2p>
 8008aba:	6a06      	ldr	r6, [r0, #32]
 8008abc:	e7f4      	b.n	8008aa8 <_Findy1+0x84>
 8008abe:	a804      	add	r0, sp, #16
 8008ac0:	f850 6d0c 	ldr.w	r6, [r0, #-12]!
 8008ac4:	6a36      	ldr	r6, [r6, #32]
 8008ac6:	f005 ff11 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008aca:	e7b0      	b.n	8008a2e <_Findy1+0xa>
 8008acc:	b005      	add	sp, #20
 8008ace:	bdf0      	pop	{r4, r5, r6, r7, pc}

08008ad0 <_Findx0>:
 8008ad0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008ad4:	4605      	mov	r5, r0
 8008ad6:	460e      	mov	r6, r1
 8008ad8:	4617      	mov	r7, r2
 8008ada:	2400      	movs	r4, #0
 8008adc:	2d00      	cmp	r5, #0
 8008ade:	d038      	beq.n	8008b52 <_Findx0+0x82>
 8008ae0:	4628      	mov	r0, r5
 8008ae2:	f005 fef5 	bl	800e8d0 <GUI_ALLOC_LockH>
 8008ae6:	f8d0 8028 	ldr.w	r8, [r0, #40]	; 0x28
 8008aea:	9001      	str	r0, [sp, #4]
 8008aec:	f018 0f02 	tst.w	r8, #2
 8008af0:	4601      	mov	r1, r0
 8008af2:	d027      	beq.n	8008b44 <_Findx0+0x74>
 8008af4:	ad02      	add	r5, sp, #8
 8008af6:	b127      	cbz	r7, 8008b02 <_Findx0+0x32>
 8008af8:	4628      	mov	r0, r5
 8008afa:	463a      	mov	r2, r7
 8008afc:	f003 fe7c 	bl	800c7f8 <GUI__IntersectRects>
 8008b00:	e002      	b.n	8008b08 <_Findx0+0x38>
 8008b02:	c803      	ldmia	r0, {r0, r1}
 8008b04:	e885 0003 	stmia.w	r5, {r0, r1}
 8008b08:	4630      	mov	r0, r6
 8008b0a:	4629      	mov	r1, r5
 8008b0c:	f004 fb74 	bl	800d1f8 <GUI_RectsIntersect>
 8008b10:	b1c0      	cbz	r0, 8008b44 <_Findx0+0x74>
 8008b12:	f018 0f01 	tst.w	r8, #1
 8008b16:	d105      	bne.n	8008b24 <_Findx0+0x54>
 8008b18:	f8bd 000c 	ldrh.w	r0, [sp, #12]
 8008b1c:	1c41      	adds	r1, r0, #1
 8008b1e:	8031      	strh	r1, [r6, #0]
 8008b20:	2401      	movs	r4, #1
 8008b22:	e00f      	b.n	8008b44 <_Findx0+0x74>
 8008b24:	9b01      	ldr	r3, [sp, #4]
 8008b26:	69dd      	ldr	r5, [r3, #28]
 8008b28:	b165      	cbz	r5, 8008b44 <_Findx0+0x74>
 8008b2a:	4628      	mov	r0, r5
 8008b2c:	4631      	mov	r1, r6
 8008b2e:	aa02      	add	r2, sp, #8
 8008b30:	f7ff ffce 	bl	8008ad0 <_Findx0>
 8008b34:	2800      	cmp	r0, #0
 8008b36:	bf18      	it	ne
 8008b38:	2401      	movne	r4, #1
 8008b3a:	4628      	mov	r0, r5
 8008b3c:	f005 febe 	bl	800e8bc <GUI_ALLOC_h2p>
 8008b40:	6a05      	ldr	r5, [r0, #32]
 8008b42:	e7f1      	b.n	8008b28 <_Findx0+0x58>
 8008b44:	a804      	add	r0, sp, #16
 8008b46:	f850 2d0c 	ldr.w	r2, [r0, #-12]!
 8008b4a:	6a15      	ldr	r5, [r2, #32]
 8008b4c:	f005 fece 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008b50:	e7c4      	b.n	8008adc <_Findx0+0xc>
 8008b52:	4620      	mov	r0, r4
 8008b54:	b004      	add	sp, #16
 8008b56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008b5a <_Findx1>:
 8008b5a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008b5c:	4604      	mov	r4, r0
 8008b5e:	b085      	sub	sp, #20
 8008b60:	460d      	mov	r5, r1
 8008b62:	4616      	mov	r6, r2
 8008b64:	2c00      	cmp	r4, #0
 8008b66:	d031      	beq.n	8008bcc <_Findx1+0x72>
 8008b68:	4620      	mov	r0, r4
 8008b6a:	f005 feb1 	bl	800e8d0 <GUI_ALLOC_LockH>
 8008b6e:	6a87      	ldr	r7, [r0, #40]	; 0x28
 8008b70:	9001      	str	r0, [sp, #4]
 8008b72:	4601      	mov	r1, r0
 8008b74:	07b8      	lsls	r0, r7, #30
 8008b76:	d522      	bpl.n	8008bbe <_Findx1+0x64>
 8008b78:	ac02      	add	r4, sp, #8
 8008b7a:	b126      	cbz	r6, 8008b86 <_Findx1+0x2c>
 8008b7c:	4620      	mov	r0, r4
 8008b7e:	4632      	mov	r2, r6
 8008b80:	f003 fe3a 	bl	800c7f8 <GUI__IntersectRects>
 8008b84:	e002      	b.n	8008b8c <_Findx1+0x32>
 8008b86:	c903      	ldmia	r1, {r0, r1}
 8008b88:	e884 0003 	stmia.w	r4, {r0, r1}
 8008b8c:	4628      	mov	r0, r5
 8008b8e:	4621      	mov	r1, r4
 8008b90:	f004 fb32 	bl	800d1f8 <GUI_RectsIntersect>
 8008b94:	b198      	cbz	r0, 8008bbe <_Findx1+0x64>
 8008b96:	07f9      	lsls	r1, r7, #31
 8008b98:	d404      	bmi.n	8008ba4 <_Findx1+0x4a>
 8008b9a:	f8bd 0008 	ldrh.w	r0, [sp, #8]
 8008b9e:	1e41      	subs	r1, r0, #1
 8008ba0:	80a9      	strh	r1, [r5, #4]
 8008ba2:	e00c      	b.n	8008bbe <_Findx1+0x64>
 8008ba4:	9b01      	ldr	r3, [sp, #4]
 8008ba6:	69dc      	ldr	r4, [r3, #28]
 8008ba8:	b14c      	cbz	r4, 8008bbe <_Findx1+0x64>
 8008baa:	4620      	mov	r0, r4
 8008bac:	4629      	mov	r1, r5
 8008bae:	aa02      	add	r2, sp, #8
 8008bb0:	f7ff ffd3 	bl	8008b5a <_Findx1>
 8008bb4:	4620      	mov	r0, r4
 8008bb6:	f005 fe81 	bl	800e8bc <GUI_ALLOC_h2p>
 8008bba:	6a04      	ldr	r4, [r0, #32]
 8008bbc:	e7f4      	b.n	8008ba8 <_Findx1+0x4e>
 8008bbe:	a804      	add	r0, sp, #16
 8008bc0:	f850 2d0c 	ldr.w	r2, [r0, #-12]!
 8008bc4:	6a14      	ldr	r4, [r2, #32]
 8008bc6:	f005 fe91 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008bca:	e7cb      	b.n	8008b64 <_Findx1+0xa>
 8008bcc:	b005      	add	sp, #20
 8008bce:	bdf0      	pop	{r4, r5, r6, r7, pc}

08008bd0 <WM__PaintWinAndOverlays>:
 8008bd0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008bd2:	4604      	mov	r4, r0
 8008bd4:	f005 fe7c 	bl	800e8d0 <GUI_ALLOC_LockH>
 8008bd8:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8008bda:	9001      	str	r0, [sp, #4]
 8008bdc:	f640 0301 	movw	r3, #2049	; 0x801
 8008be0:	4013      	ands	r3, r2
 8008be2:	2b01      	cmp	r3, #1
 8008be4:	d005      	beq.n	8008bf2 <WM__PaintWinAndOverlays+0x22>
 8008be6:	a801      	add	r0, sp, #4
 8008be8:	f005 fe80 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008bec:	4620      	mov	r0, r4
 8008bee:	f7ff fe67 	bl	80088c0 <_Paint1>
 8008bf2:	4813      	ldr	r0, [pc, #76]	; (8008c40 <WM__PaintWinAndOverlays+0x70>)
 8008bf4:	6801      	ldr	r1, [r0, #0]
 8008bf6:	b311      	cbz	r1, 8008c3e <WM__PaintWinAndOverlays+0x6e>
 8008bf8:	4620      	mov	r0, r4
 8008bfa:	f7ff febd 	bl	8008978 <_PaintTransChildren>
 8008bfe:	4620      	mov	r0, r4
 8008c00:	f005 fe5c 	bl	800e8bc <GUI_ALLOC_h2p>
 8008c04:	6985      	ldr	r5, [r0, #24]
 8008c06:	6a04      	ldr	r4, [r0, #32]
 8008c08:	b1cd      	cbz	r5, 8008c3e <WM__PaintWinAndOverlays+0x6e>
 8008c0a:	b194      	cbz	r4, 8008c32 <WM__PaintWinAndOverlays+0x62>
 8008c0c:	4620      	mov	r0, r4
 8008c0e:	f005 fe55 	bl	800e8bc <GUI_ALLOC_h2p>
 8008c12:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8008c14:	f002 0303 	and.w	r3, r2, #3
 8008c18:	2b03      	cmp	r3, #3
 8008c1a:	d102      	bne.n	8008c22 <WM__PaintWinAndOverlays+0x52>
 8008c1c:	4620      	mov	r0, r4
 8008c1e:	f7ff fe61 	bl	80088e4 <_Paint1Trans>
 8008c22:	4620      	mov	r0, r4
 8008c24:	f7ff fea8 	bl	8008978 <_PaintTransChildren>
 8008c28:	4620      	mov	r0, r4
 8008c2a:	f005 fe47 	bl	800e8bc <GUI_ALLOC_h2p>
 8008c2e:	6a04      	ldr	r4, [r0, #32]
 8008c30:	e7eb      	b.n	8008c0a <WM__PaintWinAndOverlays+0x3a>
 8008c32:	4628      	mov	r0, r5
 8008c34:	f005 fe42 	bl	800e8bc <GUI_ALLOC_h2p>
 8008c38:	6a04      	ldr	r4, [r0, #32]
 8008c3a:	6985      	ldr	r5, [r0, #24]
 8008c3c:	e7e4      	b.n	8008c08 <WM__PaintWinAndOverlays+0x38>
 8008c3e:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 8008c40:	2000ddb8 	.word	0x2000ddb8

08008c44 <_cbPaintMemDev>:
 8008c44:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8008c46:	4d14      	ldr	r5, [pc, #80]	; (8008c98 <_cbPaintMemDev+0x54>)
 8008c48:	682b      	ldr	r3, [r5, #0]
 8008c4a:	4606      	mov	r6, r0
 8008c4c:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8008c4e:	f005 fe3f 	bl	800e8d0 <GUI_ALLOC_LockH>
 8008c52:	f100 0308 	add.w	r3, r0, #8
 8008c56:	9001      	str	r0, [sp, #4]
 8008c58:	682a      	ldr	r2, [r5, #0]
 8008c5a:	e893 0003 	ldmia.w	r3, {r0, r1}
 8008c5e:	3208      	adds	r2, #8
 8008c60:	ac02      	add	r4, sp, #8
 8008c62:	e884 0003 	stmia.w	r4, {r0, r1}
 8008c66:	e892 0003 	ldmia.w	r2, {r0, r1}
 8008c6a:	e883 0003 	stmia.w	r3, {r0, r1}
 8008c6e:	a801      	add	r0, sp, #4
 8008c70:	f005 fe3c 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008c74:	6830      	ldr	r0, [r6, #0]
 8008c76:	f7ff ffab 	bl	8008bd0 <WM__PaintWinAndOverlays>
 8008c7a:	6828      	ldr	r0, [r5, #0]
 8008c7c:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8008c7e:	f005 fe27 	bl	800e8d0 <GUI_ALLOC_LockH>
 8008c82:	f100 0308 	add.w	r3, r0, #8
 8008c86:	9001      	str	r0, [sp, #4]
 8008c88:	e894 0003 	ldmia.w	r4, {r0, r1}
 8008c8c:	e883 0003 	stmia.w	r3, {r0, r1}
 8008c90:	a801      	add	r0, sp, #4
 8008c92:	f005 fe2b 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008c96:	bd7f      	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
 8008c98:	20000270 	.word	0x20000270

08008c9c <WM__ClipAtParentBorders>:
 8008c9c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008c9e:	4607      	mov	r7, r0
 8008ca0:	460d      	mov	r5, r1
 8008ca2:	4628      	mov	r0, r5
 8008ca4:	f005 fe14 	bl	800e8d0 <GUI_ALLOC_LockH>
 8008ca8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008caa:	ac02      	add	r4, sp, #8
 8008cac:	f013 0602 	ands.w	r6, r3, #2
 8008cb0:	4601      	mov	r1, r0
 8008cb2:	f844 0d04 	str.w	r0, [r4, #-4]!
 8008cb6:	d104      	bne.n	8008cc2 <WM__ClipAtParentBorders+0x26>
 8008cb8:	4620      	mov	r0, r4
 8008cba:	f005 fe17 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008cbe:	4630      	mov	r0, r6
 8008cc0:	e019      	b.n	8008cf6 <WM__ClipAtParentBorders+0x5a>
 8008cc2:	4638      	mov	r0, r7
 8008cc4:	f003 fdca 	bl	800c85c <GUI__IntersectRect>
 8008cc8:	9801      	ldr	r0, [sp, #4]
 8008cca:	6986      	ldr	r6, [r0, #24]
 8008ccc:	4620      	mov	r0, r4
 8008cce:	b96e      	cbnz	r6, 8008cec <WM__ClipAtParentBorders+0x50>
 8008cd0:	f005 fe0c 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008cd4:	4908      	ldr	r1, [pc, #32]	; (8008cf8 <WM__ClipAtParentBorders+0x5c>)
 8008cd6:	680a      	ldr	r2, [r1, #0]
 8008cd8:	4295      	cmp	r5, r2
 8008cda:	d00b      	beq.n	8008cf4 <WM__ClipAtParentBorders+0x58>
 8008cdc:	684b      	ldr	r3, [r1, #4]
 8008cde:	ebb5 0c03 	subs.w	ip, r5, r3
 8008ce2:	f1dc 0000 	rsbs	r0, ip, #0
 8008ce6:	eb50 000c 	adcs.w	r0, r0, ip
 8008cea:	e004      	b.n	8008cf6 <WM__ClipAtParentBorders+0x5a>
 8008cec:	f005 fdfe 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008cf0:	4635      	mov	r5, r6
 8008cf2:	e7d6      	b.n	8008ca2 <WM__ClipAtParentBorders+0x6>
 8008cf4:	2001      	movs	r0, #1
 8008cf6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8008cf8:	2000dd70 	.word	0x2000dd70

08008cfc <WM__InsertWindowIntoList>:
 8008cfc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8008cfe:	4604      	mov	r4, r0
 8008d00:	460d      	mov	r5, r1
 8008d02:	2900      	cmp	r1, #0
 8008d04:	d047      	beq.n	8008d96 <WM__InsertWindowIntoList+0x9a>
 8008d06:	f005 fde3 	bl	800e8d0 <GUI_ALLOC_LockH>
 8008d0a:	2300      	movs	r3, #0
 8008d0c:	6185      	str	r5, [r0, #24]
 8008d0e:	9001      	str	r0, [sp, #4]
 8008d10:	6203      	str	r3, [r0, #32]
 8008d12:	4628      	mov	r0, r5
 8008d14:	f005 fddc 	bl	800e8d0 <GUI_ALLOC_LockH>
 8008d18:	9901      	ldr	r1, [sp, #4]
 8008d1a:	69c5      	ldr	r5, [r0, #28]
 8008d1c:	9002      	str	r0, [sp, #8]
 8008d1e:	6a8e      	ldr	r6, [r1, #40]	; 0x28
 8008d20:	b92d      	cbnz	r5, 8008d2e <WM__InsertWindowIntoList+0x32>
 8008d22:	61c4      	str	r4, [r0, #28]
 8008d24:	a801      	add	r0, sp, #4
 8008d26:	f005 fde1 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008d2a:	a802      	add	r0, sp, #8
 8008d2c:	e031      	b.n	8008d92 <WM__InsertWindowIntoList+0x96>
 8008d2e:	4628      	mov	r0, r5
 8008d30:	f005 fdce 	bl	800e8d0 <GUI_ALLOC_LockH>
 8008d34:	f006 0608 	and.w	r6, r6, #8
 8008d38:	9003      	str	r0, [sp, #12]
 8008d3a:	b976      	cbnz	r6, 8008d5a <WM__InsertWindowIntoList+0x5e>
 8008d3c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8008d3e:	0702      	lsls	r2, r0, #28
 8008d40:	d50b      	bpl.n	8008d5a <WM__InsertWindowIntoList+0x5e>
 8008d42:	9a01      	ldr	r2, [sp, #4]
 8008d44:	9b02      	ldr	r3, [sp, #8]
 8008d46:	6215      	str	r5, [r2, #32]
 8008d48:	61dc      	str	r4, [r3, #28]
 8008d4a:	a801      	add	r0, sp, #4
 8008d4c:	f005 fdce 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008d50:	a802      	add	r0, sp, #8
 8008d52:	f005 fdcb 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008d56:	a803      	add	r0, sp, #12
 8008d58:	e01b      	b.n	8008d92 <WM__InsertWindowIntoList+0x96>
 8008d5a:	a802      	add	r0, sp, #8
 8008d5c:	f005 fdc6 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008d60:	a803      	add	r0, sp, #12
 8008d62:	f005 fdc3 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008d66:	4628      	mov	r0, r5
 8008d68:	f005 fda8 	bl	800e8bc <GUI_ALLOC_h2p>
 8008d6c:	9003      	str	r0, [sp, #12]
 8008d6e:	9a03      	ldr	r2, [sp, #12]
 8008d70:	6a15      	ldr	r5, [r2, #32]
 8008d72:	b90d      	cbnz	r5, 8008d78 <WM__InsertWindowIntoList+0x7c>
 8008d74:	6214      	str	r4, [r2, #32]
 8008d76:	e00b      	b.n	8008d90 <WM__InsertWindowIntoList+0x94>
 8008d78:	4628      	mov	r0, r5
 8008d7a:	f005 fd9f 	bl	800e8bc <GUI_ALLOC_h2p>
 8008d7e:	2e00      	cmp	r6, #0
 8008d80:	d1f4      	bne.n	8008d6c <WM__InsertWindowIntoList+0x70>
 8008d82:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008d84:	071b      	lsls	r3, r3, #28
 8008d86:	d5f1      	bpl.n	8008d6c <WM__InsertWindowIntoList+0x70>
 8008d88:	9903      	ldr	r1, [sp, #12]
 8008d8a:	9801      	ldr	r0, [sp, #4]
 8008d8c:	620c      	str	r4, [r1, #32]
 8008d8e:	6205      	str	r5, [r0, #32]
 8008d90:	a801      	add	r0, sp, #4
 8008d92:	f005 fdab 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008d96:	bd7f      	pop	{r0, r1, r2, r3, r4, r5, r6, pc}

08008d98 <WM__RemoveWindowFromList>:
 8008d98:	b570      	push	{r4, r5, r6, lr}
 8008d9a:	4604      	mov	r4, r0
 8008d9c:	f005 fd8e 	bl	800e8bc <GUI_ALLOC_h2p>
 8008da0:	4605      	mov	r5, r0
 8008da2:	6980      	ldr	r0, [r0, #24]
 8008da4:	b1a8      	cbz	r0, 8008dd2 <WM__RemoveWindowFromList+0x3a>
 8008da6:	f005 fd89 	bl	800e8bc <GUI_ALLOC_h2p>
 8008daa:	69c3      	ldr	r3, [r0, #28]
 8008dac:	42a3      	cmp	r3, r4
 8008dae:	4606      	mov	r6, r0
 8008db0:	d105      	bne.n	8008dbe <WM__RemoveWindowFromList+0x26>
 8008db2:	4618      	mov	r0, r3
 8008db4:	f005 fd82 	bl	800e8bc <GUI_ALLOC_h2p>
 8008db8:	6a00      	ldr	r0, [r0, #32]
 8008dba:	61f0      	str	r0, [r6, #28]
 8008dbc:	bd70      	pop	{r4, r5, r6, pc}
 8008dbe:	b143      	cbz	r3, 8008dd2 <WM__RemoveWindowFromList+0x3a>
 8008dc0:	4618      	mov	r0, r3
 8008dc2:	f005 fd7b 	bl	800e8bc <GUI_ALLOC_h2p>
 8008dc6:	6a03      	ldr	r3, [r0, #32]
 8008dc8:	42a3      	cmp	r3, r4
 8008dca:	d1f8      	bne.n	8008dbe <WM__RemoveWindowFromList+0x26>
 8008dcc:	6a29      	ldr	r1, [r5, #32]
 8008dce:	6201      	str	r1, [r0, #32]
 8008dd0:	bd70      	pop	{r4, r5, r6, pc}
 8008dd2:	bd70      	pop	{r4, r5, r6, pc}

08008dd4 <WM__Client2Screen>:
 8008dd4:	4603      	mov	r3, r0
 8008dd6:	4608      	mov	r0, r1
 8008dd8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8008ddc:	f9b3 1000 	ldrsh.w	r1, [r3]
 8008de0:	f004 bb06 	b.w	800d3f0 <GUI_MoveRect>

08008de4 <_SetClipRectUserIntersect>:
 8008de4:	4b11      	ldr	r3, [pc, #68]	; (8008e2c <_SetClipRectUserIntersect+0x48>)
 8008de6:	b530      	push	{r4, r5, lr}
 8008de8:	681c      	ldr	r4, [r3, #0]
 8008dea:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8008dec:	b085      	sub	sp, #20
 8008dee:	4605      	mov	r5, r0
 8008df0:	b1ba      	cbz	r2, 8008e22 <_SetClipRectUserIntersect+0x3e>
 8008df2:	6810      	ldr	r0, [r2, #0]
 8008df4:	6851      	ldr	r1, [r2, #4]
 8008df6:	ab02      	add	r3, sp, #8
 8008df8:	c303      	stmia	r3!, {r0, r1}
 8008dfa:	480d      	ldr	r0, [pc, #52]	; (8008e30 <_SetClipRectUserIntersect+0x4c>)
 8008dfc:	6800      	ldr	r0, [r0, #0]
 8008dfe:	b900      	cbnz	r0, 8008e02 <_SetClipRectUserIntersect+0x1e>
 8008e00:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8008e02:	f005 fd65 	bl	800e8d0 <GUI_ALLOC_LockH>
 8008e06:	ac04      	add	r4, sp, #16
 8008e08:	a902      	add	r1, sp, #8
 8008e0a:	f844 0d0c 	str.w	r0, [r4, #-12]!
 8008e0e:	f7ff ffe1 	bl	8008dd4 <WM__Client2Screen>
 8008e12:	4620      	mov	r0, r4
 8008e14:	f005 fd6a 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008e18:	a802      	add	r0, sp, #8
 8008e1a:	4629      	mov	r1, r5
 8008e1c:	f003 fd1e 	bl	800c85c <GUI__IntersectRect>
 8008e20:	a802      	add	r0, sp, #8
 8008e22:	f002 ff01 	bl	800bc28 <LCD_SetClipRectEx>
 8008e26:	b005      	add	sp, #20
 8008e28:	bd30      	pop	{r4, r5, pc}
 8008e2a:	bf00      	nop
 8008e2c:	20000270 	.word	0x20000270
 8008e30:	2000dd6c 	.word	0x2000dd6c

08008e34 <WM__ActivateClipRect>:
 8008e34:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8008e36:	4b0e      	ldr	r3, [pc, #56]	; (8008e70 <WM__ActivateClipRect+0x3c>)
 8008e38:	6818      	ldr	r0, [r3, #0]
 8008e3a:	f890 2054 	ldrb.w	r2, [r0, #84]	; 0x54
 8008e3e:	b10a      	cbz	r2, 8008e44 <WM__ActivateClipRect+0x10>
 8008e40:	480c      	ldr	r0, [pc, #48]	; (8008e74 <WM__ActivateClipRect+0x40>)
 8008e42:	e011      	b.n	8008e68 <WM__ActivateClipRect+0x34>
 8008e44:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8008e46:	f005 fd43 	bl	800e8d0 <GUI_ALLOC_LockH>
 8008e4a:	9001      	str	r0, [sp, #4]
 8008e4c:	c803      	ldmia	r0, {r0, r1}
 8008e4e:	ac02      	add	r4, sp, #8
 8008e50:	e884 0003 	stmia.w	r4, {r0, r1}
 8008e54:	a801      	add	r0, sp, #4
 8008e56:	f005 fd49 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008e5a:	4907      	ldr	r1, [pc, #28]	; (8008e78 <WM__ActivateClipRect+0x44>)
 8008e5c:	6809      	ldr	r1, [r1, #0]
 8008e5e:	b111      	cbz	r1, 8008e66 <WM__ActivateClipRect+0x32>
 8008e60:	4620      	mov	r0, r4
 8008e62:	f7ff ff1b 	bl	8008c9c <WM__ClipAtParentBorders>
 8008e66:	4620      	mov	r0, r4
 8008e68:	f7ff ffbc 	bl	8008de4 <_SetClipRectUserIntersect>
 8008e6c:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}
 8008e6e:	bf00      	nop
 8008e70:	20000270 	.word	0x20000270
 8008e74:	2000d7d8 	.word	0x2000d7d8
 8008e78:	2000dd6c 	.word	0x2000dd6c

08008e7c <WM__IsWindow>:
 8008e7c:	4b06      	ldr	r3, [pc, #24]	; (8008e98 <WM__IsWindow+0x1c>)
 8008e7e:	b510      	push	{r4, lr}
 8008e80:	4604      	mov	r4, r0
 8008e82:	6818      	ldr	r0, [r3, #0]
 8008e84:	b128      	cbz	r0, 8008e92 <WM__IsWindow+0x16>
 8008e86:	42a0      	cmp	r0, r4
 8008e88:	d004      	beq.n	8008e94 <WM__IsWindow+0x18>
 8008e8a:	f005 fd17 	bl	800e8bc <GUI_ALLOC_h2p>
 8008e8e:	6940      	ldr	r0, [r0, #20]
 8008e90:	e7f8      	b.n	8008e84 <WM__IsWindow+0x8>
 8008e92:	bd10      	pop	{r4, pc}
 8008e94:	2001      	movs	r0, #1
 8008e96:	bd10      	pop	{r4, pc}
 8008e98:	2000dd8c 	.word	0x2000dd8c

08008e9c <WM__InvalidateDrawAndDescs>:
 8008e9c:	b513      	push	{r0, r1, r4, lr}
 8008e9e:	4604      	mov	r4, r0
 8008ea0:	b300      	cbz	r0, 8008ee4 <WM__InvalidateDrawAndDescs+0x48>
 8008ea2:	f005 fd15 	bl	800e8d0 <GUI_ALLOC_LockH>
 8008ea6:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8008ea8:	9001      	str	r0, [sp, #4]
 8008eaa:	0791      	lsls	r1, r2, #30
 8008eac:	d517      	bpl.n	8008ede <WM__InvalidateDrawAndDescs+0x42>
 8008eae:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8008eb0:	b140      	cbz	r0, 8008ec4 <WM__InvalidateDrawAndDescs+0x28>
 8008eb2:	4b0d      	ldr	r3, [pc, #52]	; (8008ee8 <WM__InvalidateDrawAndDescs+0x4c>)
 8008eb4:	6819      	ldr	r1, [r3, #0]
 8008eb6:	42a1      	cmp	r1, r4
 8008eb8:	d004      	beq.n	8008ec4 <WM__InvalidateDrawAndDescs+0x28>
 8008eba:	f001 fdaf 	bl	800aa1c <GUI_MEMDEV_Delete>
 8008ebe:	9a01      	ldr	r2, [sp, #4]
 8008ec0:	2000      	movs	r0, #0
 8008ec2:	6250      	str	r0, [r2, #36]	; 0x24
 8008ec4:	4620      	mov	r0, r4
 8008ec6:	f7ff fc23 	bl	8008710 <WM_GetFirstChild>
 8008eca:	4604      	mov	r4, r0
 8008ecc:	b13c      	cbz	r4, 8008ede <WM__InvalidateDrawAndDescs+0x42>
 8008ece:	4620      	mov	r0, r4
 8008ed0:	f7ff ffe4 	bl	8008e9c <WM__InvalidateDrawAndDescs>
 8008ed4:	4620      	mov	r0, r4
 8008ed6:	f005 fcf1 	bl	800e8bc <GUI_ALLOC_h2p>
 8008eda:	6a04      	ldr	r4, [r0, #32]
 8008edc:	e7f6      	b.n	8008ecc <WM__InvalidateDrawAndDescs+0x30>
 8008ede:	a801      	add	r0, sp, #4
 8008ee0:	f005 fd04 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008ee4:	bd1c      	pop	{r2, r3, r4, pc}
 8008ee6:	bf00      	nop
 8008ee8:	2000ddb4 	.word	0x2000ddb4

08008eec <WM__RemoveFromLinList>:
 8008eec:	b538      	push	{r3, r4, r5, lr}
 8008eee:	4b08      	ldr	r3, [pc, #32]	; (8008f10 <WM__RemoveFromLinList+0x24>)
 8008ef0:	4605      	mov	r5, r0
 8008ef2:	6818      	ldr	r0, [r3, #0]
 8008ef4:	b150      	cbz	r0, 8008f0c <WM__RemoveFromLinList+0x20>
 8008ef6:	f005 fce1 	bl	800e8bc <GUI_ALLOC_h2p>
 8008efa:	4604      	mov	r4, r0
 8008efc:	6940      	ldr	r0, [r0, #20]
 8008efe:	42a8      	cmp	r0, r5
 8008f00:	d1f8      	bne.n	8008ef4 <WM__RemoveFromLinList+0x8>
 8008f02:	f005 fcdb 	bl	800e8bc <GUI_ALLOC_h2p>
 8008f06:	6940      	ldr	r0, [r0, #20]
 8008f08:	6160      	str	r0, [r4, #20]
 8008f0a:	bd38      	pop	{r3, r4, r5, pc}
 8008f0c:	bd38      	pop	{r3, r4, r5, pc}
 8008f0e:	bf00      	nop
 8008f10:	2000dd8c 	.word	0x2000dd8c

08008f14 <WM__RectIsNZ>:
 8008f14:	f9b0 2000 	ldrsh.w	r2, [r0]
 8008f18:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8008f1c:	429a      	cmp	r2, r3
 8008f1e:	dc08      	bgt.n	8008f32 <WM__RectIsNZ+0x1e>
 8008f20:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8008f24:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8008f28:	4291      	cmp	r1, r2
 8008f2a:	bfcc      	ite	gt
 8008f2c:	2000      	movgt	r0, #0
 8008f2e:	2001      	movle	r0, #1
 8008f30:	4770      	bx	lr
 8008f32:	2000      	movs	r0, #0
 8008f34:	4770      	bx	lr
	...

08008f38 <_Invalidate1Abs>:
 8008f38:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008f3a:	b085      	sub	sp, #20
 8008f3c:	4606      	mov	r6, r0
 8008f3e:	460d      	mov	r5, r1
 8008f40:	4617      	mov	r7, r2
 8008f42:	f005 fcbb 	bl	800e8bc <GUI_ALLOC_h2p>
 8008f46:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008f48:	9001      	str	r0, [sp, #4]
 8008f4a:	07a0      	lsls	r0, r4, #30
 8008f4c:	d534      	bpl.n	8008fb8 <_Invalidate1Abs+0x80>
 8008f4e:	4628      	mov	r0, r5
 8008f50:	f7ff ffe0 	bl	8008f14 <WM__RectIsNZ>
 8008f54:	2800      	cmp	r0, #0
 8008f56:	d02f      	beq.n	8008fb8 <_Invalidate1Abs+0x80>
 8008f58:	f640 0301 	movw	r3, #2049	; 0x801
 8008f5c:	4023      	ands	r3, r4
 8008f5e:	2b01      	cmp	r3, #1
 8008f60:	d02a      	beq.n	8008fb8 <_Invalidate1Abs+0x80>
 8008f62:	4630      	mov	r0, r6
 8008f64:	f005 fcb4 	bl	800e8d0 <GUI_ALLOC_LockH>
 8008f68:	ac02      	add	r4, sp, #8
 8008f6a:	4602      	mov	r2, r0
 8008f6c:	9001      	str	r0, [sp, #4]
 8008f6e:	4629      	mov	r1, r5
 8008f70:	4620      	mov	r0, r4
 8008f72:	f003 fc41 	bl	800c7f8 <GUI__IntersectRects>
 8008f76:	4620      	mov	r0, r4
 8008f78:	f7ff ffcc 	bl	8008f14 <WM__RectIsNZ>
 8008f7c:	b1c8      	cbz	r0, 8008fb2 <_Invalidate1Abs+0x7a>
 8008f7e:	9a01      	ldr	r2, [sp, #4]
 8008f80:	6a96      	ldr	r6, [r2, #40]	; 0x28
 8008f82:	f244 0120 	movw	r1, #16416	; 0x4020
 8008f86:	4031      	ands	r1, r6
 8008f88:	f102 0508 	add.w	r5, r2, #8
 8008f8c:	b129      	cbz	r1, 8008f9a <_Invalidate1Abs+0x62>
 8008f8e:	4628      	mov	r0, r5
 8008f90:	4629      	mov	r1, r5
 8008f92:	4622      	mov	r2, r4
 8008f94:	f004 fa3c 	bl	800d410 <GUI_MergeRect>
 8008f98:	e00b      	b.n	8008fb2 <_Invalidate1Abs+0x7a>
 8008f9a:	e894 0003 	ldmia.w	r4, {r0, r1}
 8008f9e:	e885 0003 	stmia.w	r5, {r0, r1}
 8008fa2:	4806      	ldr	r0, [pc, #24]	; (8008fbc <_Invalidate1Abs+0x84>)
 8008fa4:	8803      	ldrh	r3, [r0, #0]
 8008fa6:	433e      	orrs	r6, r7
 8008fa8:	6296      	str	r6, [r2, #40]	; 0x28
 8008faa:	1c5a      	adds	r2, r3, #1
 8008fac:	8002      	strh	r2, [r0, #0]
 8008fae:	f003 ffdb 	bl	800cf68 <GUI_SignalEvent>
 8008fb2:	a801      	add	r0, sp, #4
 8008fb4:	f005 fc9a 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008fb8:	b005      	add	sp, #20
 8008fba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008fbc:	2000dd88 	.word	0x2000dd88

08008fc0 <WM_InvalidateWindowAndDescsEx>:
 8008fc0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8008fc2:	460e      	mov	r6, r1
 8008fc4:	4615      	mov	r5, r2
 8008fc6:	4604      	mov	r4, r0
 8008fc8:	b338      	cbz	r0, 800901a <WM_InvalidateWindowAndDescsEx+0x5a>
 8008fca:	f005 fc81 	bl	800e8d0 <GUI_ALLOC_LockH>
 8008fce:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008fd0:	9001      	str	r0, [sp, #4]
 8008fd2:	079b      	lsls	r3, r3, #30
 8008fd4:	4602      	mov	r2, r0
 8008fd6:	d403      	bmi.n	8008fe0 <WM_InvalidateWindowAndDescsEx+0x20>
 8008fd8:	a801      	add	r0, sp, #4
 8008fda:	f005 fc87 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008fde:	e01c      	b.n	800901a <WM_InvalidateWindowAndDescsEx+0x5a>
 8008fe0:	a802      	add	r0, sp, #8
 8008fe2:	4631      	mov	r1, r6
 8008fe4:	f003 fc08 	bl	800c7f8 <GUI__IntersectRects>
 8008fe8:	2800      	cmp	r0, #0
 8008fea:	d0f5      	beq.n	8008fd8 <WM_InvalidateWindowAndDescsEx+0x18>
 8008fec:	a801      	add	r0, sp, #4
 8008fee:	f005 fc7d 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8008ff2:	4620      	mov	r0, r4
 8008ff4:	a902      	add	r1, sp, #8
 8008ff6:	462a      	mov	r2, r5
 8008ff8:	f7ff ff9e 	bl	8008f38 <_Invalidate1Abs>
 8008ffc:	4620      	mov	r0, r4
 8008ffe:	f7ff fb87 	bl	8008710 <WM_GetFirstChild>
 8009002:	4604      	mov	r4, r0
 8009004:	b14c      	cbz	r4, 800901a <WM_InvalidateWindowAndDescsEx+0x5a>
 8009006:	4620      	mov	r0, r4
 8009008:	a902      	add	r1, sp, #8
 800900a:	462a      	mov	r2, r5
 800900c:	f7ff ffd8 	bl	8008fc0 <WM_InvalidateWindowAndDescsEx>
 8009010:	4620      	mov	r0, r4
 8009012:	f005 fc53 	bl	800e8bc <GUI_ALLOC_h2p>
 8009016:	6a04      	ldr	r4, [r0, #32]
 8009018:	e7f4      	b.n	8009004 <WM_InvalidateWindowAndDescsEx+0x44>
 800901a:	bd7f      	pop	{r0, r1, r2, r3, r4, r5, r6, pc}

0800901c <WM__InvalidateRect>:
 800901c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009020:	4680      	mov	r8, r0
 8009022:	4617      	mov	r7, r2
 8009024:	461d      	mov	r5, r3
 8009026:	460c      	mov	r4, r1
 8009028:	2900      	cmp	r1, #0
 800902a:	d030      	beq.n	800908e <WM__InvalidateRect+0x72>
 800902c:	4608      	mov	r0, r1
 800902e:	f005 fc4f 	bl	800e8d0 <GUI_ALLOC_LockH>
 8009032:	6a86      	ldr	r6, [r0, #40]	; 0x28
 8009034:	9001      	str	r0, [sp, #4]
 8009036:	07b1      	lsls	r1, r6, #30
 8009038:	4602      	mov	r2, r0
 800903a:	d525      	bpl.n	8009088 <WM__InvalidateRect+0x6c>
 800903c:	a802      	add	r0, sp, #8
 800903e:	4641      	mov	r1, r8
 8009040:	f003 fbda 	bl	800c7f8 <GUI__IntersectRects>
 8009044:	b300      	cbz	r0, 8009088 <WM__InvalidateRect+0x6c>
 8009046:	f640 0301 	movw	r3, #2049	; 0x801
 800904a:	4033      	ands	r3, r6
 800904c:	2b01      	cmp	r3, #1
 800904e:	d107      	bne.n	8009060 <WM__InvalidateRect+0x44>
 8009050:	9a01      	ldr	r2, [sp, #4]
 8009052:	a802      	add	r0, sp, #8
 8009054:	6991      	ldr	r1, [r2, #24]
 8009056:	6a12      	ldr	r2, [r2, #32]
 8009058:	462b      	mov	r3, r5
 800905a:	f7ff ffdf 	bl	800901c <WM__InvalidateRect>
 800905e:	e004      	b.n	800906a <WM__InvalidateRect+0x4e>
 8009060:	4620      	mov	r0, r4
 8009062:	a902      	add	r1, sp, #8
 8009064:	462a      	mov	r2, r5
 8009066:	f7ff ff67 	bl	8008f38 <_Invalidate1Abs>
 800906a:	9801      	ldr	r0, [sp, #4]
 800906c:	69c4      	ldr	r4, [r0, #28]
 800906e:	b15c      	cbz	r4, 8009088 <WM__InvalidateRect+0x6c>
 8009070:	42bc      	cmp	r4, r7
 8009072:	d009      	beq.n	8009088 <WM__InvalidateRect+0x6c>
 8009074:	4620      	mov	r0, r4
 8009076:	a902      	add	r1, sp, #8
 8009078:	462a      	mov	r2, r5
 800907a:	f7ff ffa1 	bl	8008fc0 <WM_InvalidateWindowAndDescsEx>
 800907e:	4620      	mov	r0, r4
 8009080:	f005 fc1c 	bl	800e8bc <GUI_ALLOC_h2p>
 8009084:	6a04      	ldr	r4, [r0, #32]
 8009086:	e7f2      	b.n	800906e <WM__InvalidateRect+0x52>
 8009088:	a801      	add	r0, sp, #4
 800908a:	f005 fc2f 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800908e:	e8bd 81ff 	ldmia.w	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}

08009092 <WM__InvalidateRectEx>:
 8009092:	2320      	movs	r3, #32
 8009094:	f7ff bfc2 	b.w	800901c <WM__InvalidateRect>

08009098 <WM__DetachWindow>:
 8009098:	b513      	push	{r0, r1, r4, lr}
 800909a:	4604      	mov	r4, r0
 800909c:	f005 fc18 	bl	800e8d0 <GUI_ALLOC_LockH>
 80090a0:	6981      	ldr	r1, [r0, #24]
 80090a2:	9001      	str	r0, [sp, #4]
 80090a4:	b141      	cbz	r1, 80090b8 <WM__DetachWindow+0x20>
 80090a6:	6a02      	ldr	r2, [r0, #32]
 80090a8:	f7ff fff3 	bl	8009092 <WM__InvalidateRectEx>
 80090ac:	4620      	mov	r0, r4
 80090ae:	f7ff fe73 	bl	8008d98 <WM__RemoveWindowFromList>
 80090b2:	9801      	ldr	r0, [sp, #4]
 80090b4:	2200      	movs	r2, #0
 80090b6:	6182      	str	r2, [r0, #24]
 80090b8:	a801      	add	r0, sp, #4
 80090ba:	f005 fc17 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80090be:	bd1c      	pop	{r2, r3, r4, pc}

080090c0 <WM__InvalidateParent>:
 80090c0:	b570      	push	{r4, r5, r6, lr}
 80090c2:	4605      	mov	r5, r0
 80090c4:	4608      	mov	r0, r1
 80090c6:	460c      	mov	r4, r1
 80090c8:	4616      	mov	r6, r2
 80090ca:	f005 fbf7 	bl	800e8bc <GUI_ALLOC_h2p>
 80090ce:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80090d0:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 80090d4:	4628      	mov	r0, r5
 80090d6:	4621      	mov	r1, r4
 80090d8:	4632      	mov	r2, r6
 80090da:	bf0c      	ite	eq
 80090dc:	2320      	moveq	r3, #32
 80090de:	f44f 4380 	movne.w	r3, #16384	; 0x4000
 80090e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80090e6:	f7ff bf99 	b.w	800901c <WM__InvalidateRect>

080090ea <WM__Invalidate1Abs>:
 80090ea:	2220      	movs	r2, #32
 80090ec:	f7ff bf24 	b.w	8008f38 <_Invalidate1Abs>

080090f0 <WM_SendMessage>:
 80090f0:	b108      	cbz	r0, 80090f6 <WM_SendMessage+0x6>
 80090f2:	f7fe bec9 	b.w	8007e88 <WM__SendMessage>
 80090f6:	4770      	bx	lr

080090f8 <WM__SendMsgNoData>:
 80090f8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80090fa:	ab04      	add	r3, sp, #16
 80090fc:	9001      	str	r0, [sp, #4]
 80090fe:	f843 1d10 	str.w	r1, [r3, #-16]!
 8009102:	4669      	mov	r1, sp
 8009104:	f7fe fec0 	bl	8007e88 <WM__SendMessage>
 8009108:	b005      	add	sp, #20
 800910a:	bd00      	pop	{pc}

0800910c <WM__GetClientRectWin>:
 800910c:	2300      	movs	r3, #0
 800910e:	800b      	strh	r3, [r1, #0]
 8009110:	8882      	ldrh	r2, [r0, #4]
 8009112:	804b      	strh	r3, [r1, #2]
 8009114:	8803      	ldrh	r3, [r0, #0]
 8009116:	1ad2      	subs	r2, r2, r3
 8009118:	808a      	strh	r2, [r1, #4]
 800911a:	88c2      	ldrh	r2, [r0, #6]
 800911c:	8840      	ldrh	r0, [r0, #2]
 800911e:	1a13      	subs	r3, r2, r0
 8009120:	80cb      	strh	r3, [r1, #6]
 8009122:	4770      	bx	lr

08009124 <WM_InvalidateRect>:
 8009124:	b570      	push	{r4, r5, r6, lr}
 8009126:	460e      	mov	r6, r1
 8009128:	b086      	sub	sp, #24
 800912a:	4604      	mov	r4, r0
 800912c:	2800      	cmp	r0, #0
 800912e:	d033      	beq.n	8009198 <WM_InvalidateRect+0x74>
 8009130:	f005 fbce 	bl	800e8d0 <GUI_ALLOC_LockH>
 8009134:	6a85      	ldr	r5, [r0, #40]	; 0x28
 8009136:	9001      	str	r0, [sp, #4]
 8009138:	07ab      	lsls	r3, r5, #30
 800913a:	d52a      	bpl.n	8009192 <WM_InvalidateRect+0x6e>
 800913c:	c803      	ldmia	r0, {r0, r1}
 800913e:	ab06      	add	r3, sp, #24
 8009140:	e903 0003 	stmdb	r3, {r0, r1}
 8009144:	03e8      	lsls	r0, r5, #15
 8009146:	d502      	bpl.n	800914e <WM_InvalidateRect+0x2a>
 8009148:	4620      	mov	r0, r4
 800914a:	f7ff fea7 	bl	8008e9c <WM__InvalidateDrawAndDescs>
 800914e:	b15e      	cbz	r6, 8009168 <WM_InvalidateRect+0x44>
 8009150:	6830      	ldr	r0, [r6, #0]
 8009152:	6871      	ldr	r1, [r6, #4]
 8009154:	aa02      	add	r2, sp, #8
 8009156:	c203      	stmia	r2!, {r0, r1}
 8009158:	9801      	ldr	r0, [sp, #4]
 800915a:	a902      	add	r1, sp, #8
 800915c:	f7ff fe3a 	bl	8008dd4 <WM__Client2Screen>
 8009160:	a804      	add	r0, sp, #16
 8009162:	a902      	add	r1, sp, #8
 8009164:	f003 fb7a 	bl	800c85c <GUI__IntersectRect>
 8009168:	a804      	add	r0, sp, #16
 800916a:	4621      	mov	r1, r4
 800916c:	f7ff fd96 	bl	8008c9c <WM__ClipAtParentBorders>
 8009170:	b178      	cbz	r0, 8009192 <WM_InvalidateRect+0x6e>
 8009172:	f640 0001 	movw	r0, #2049	; 0x801
 8009176:	4028      	ands	r0, r5
 8009178:	2801      	cmp	r0, #1
 800917a:	d106      	bne.n	800918a <WM_InvalidateRect+0x66>
 800917c:	9b01      	ldr	r3, [sp, #4]
 800917e:	a804      	add	r0, sp, #16
 8009180:	6999      	ldr	r1, [r3, #24]
 8009182:	6a1a      	ldr	r2, [r3, #32]
 8009184:	f7ff ff85 	bl	8009092 <WM__InvalidateRectEx>
 8009188:	e003      	b.n	8009192 <WM_InvalidateRect+0x6e>
 800918a:	4620      	mov	r0, r4
 800918c:	a904      	add	r1, sp, #16
 800918e:	f7ff ffac 	bl	80090ea <WM__Invalidate1Abs>
 8009192:	a801      	add	r0, sp, #4
 8009194:	f005 fbaa 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8009198:	b006      	add	sp, #24
 800919a:	bd70      	pop	{r4, r5, r6, pc}

0800919c <WM_InvalidateWindow>:
 800919c:	2100      	movs	r1, #0
 800919e:	f7ff bfc1 	b.w	8009124 <WM_InvalidateRect>
	...

080091a4 <WM__GetTopLevelLayer>:
 80091a4:	b510      	push	{r4, lr}
 80091a6:	4604      	mov	r4, r0
 80091a8:	f005 fb88 	bl	800e8bc <GUI_ALLOC_h2p>
 80091ac:	6980      	ldr	r0, [r0, #24]
 80091ae:	2800      	cmp	r0, #0
 80091b0:	d1f9      	bne.n	80091a6 <WM__GetTopLevelLayer+0x2>
 80091b2:	4b05      	ldr	r3, [pc, #20]	; (80091c8 <WM__GetTopLevelLayer+0x24>)
 80091b4:	681a      	ldr	r2, [r3, #0]
 80091b6:	4294      	cmp	r4, r2
 80091b8:	d005      	beq.n	80091c6 <WM__GetTopLevelLayer+0x22>
 80091ba:	6858      	ldr	r0, [r3, #4]
 80091bc:	4284      	cmp	r4, r0
 80091be:	bf14      	ite	ne
 80091c0:	f04f 30ff 	movne.w	r0, #4294967295
 80091c4:	2001      	moveq	r0, #1
 80091c6:	bd10      	pop	{r4, pc}
 80091c8:	2000dd70 	.word	0x2000dd70

080091cc <WM__SelectTopLevelLayer>:
 80091cc:	b508      	push	{r3, lr}
 80091ce:	f7ff ffe9 	bl	80091a4 <WM__GetTopLevelLayer>
 80091d2:	2800      	cmp	r0, #0
 80091d4:	db03      	blt.n	80091de <WM__SelectTopLevelLayer+0x12>
 80091d6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80091da:	f003 bfdb 	b.w	800d194 <GUI_SelectLayer>
 80091de:	bd08      	pop	{r3, pc}

080091e0 <WM_SelectWindow>:
 80091e0:	b538      	push	{r3, r4, r5, lr}
 80091e2:	4b0d      	ldr	r3, [pc, #52]	; (8009218 <WM_SelectWindow+0x38>)
 80091e4:	6819      	ldr	r1, [r3, #0]
 80091e6:	4604      	mov	r4, r0
 80091e8:	6c8d      	ldr	r5, [r1, #72]	; 0x48
 80091ea:	b908      	cbnz	r0, 80091f0 <WM_SelectWindow+0x10>
 80091ec:	4a0b      	ldr	r2, [pc, #44]	; (800921c <WM_SelectWindow+0x3c>)
 80091ee:	6814      	ldr	r4, [r2, #0]
 80091f0:	648c      	str	r4, [r1, #72]	; 0x48
 80091f2:	4620      	mov	r0, r4
 80091f4:	f7ff ffea 	bl	80091cc <WM__SelectTopLevelLayer>
 80091f8:	f003 f91e 	bl	800c438 <LCD_SetClipRectMax>
 80091fc:	4620      	mov	r0, r4
 80091fe:	f005 fb5d 	bl	800e8bc <GUI_ALLOC_h2p>
 8009202:	4b05      	ldr	r3, [pc, #20]	; (8009218 <WM_SelectWindow+0x38>)
 8009204:	f9b0 1000 	ldrsh.w	r1, [r0]
 8009208:	681b      	ldr	r3, [r3, #0]
 800920a:	f9b0 0002 	ldrsh.w	r0, [r0, #2]
 800920e:	64d9      	str	r1, [r3, #76]	; 0x4c
 8009210:	6518      	str	r0, [r3, #80]	; 0x50
 8009212:	4628      	mov	r0, r5
 8009214:	bd38      	pop	{r3, r4, r5, pc}
 8009216:	bf00      	nop
 8009218:	20000270 	.word	0x20000270
 800921c:	2000dd8c 	.word	0x2000dd8c

08009220 <WM_DeleteWindow>:
 8009220:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009222:	4604      	mov	r4, r0
 8009224:	2800      	cmp	r0, #0
 8009226:	d061      	beq.n	80092ec <WM_DeleteWindow+0xcc>
 8009228:	f7ff fe28 	bl	8008e7c <WM__IsWindow>
 800922c:	2800      	cmp	r0, #0
 800922e:	d05d      	beq.n	80092ec <WM_DeleteWindow+0xcc>
 8009230:	4620      	mov	r0, r4
 8009232:	f7ff ffb7 	bl	80091a4 <WM__GetTopLevelLayer>
 8009236:	210b      	movs	r1, #11
 8009238:	4606      	mov	r6, r0
 800923a:	4620      	mov	r0, r4
 800923c:	f7ff ff5c 	bl	80090f8 <WM__SendMsgNoData>
 8009240:	4620      	mov	r0, r4
 8009242:	f007 f957 	bl	80104f4 <WM__DeleteAssocTimer>
 8009246:	4620      	mov	r0, r4
 8009248:	f005 fb42 	bl	800e8d0 <GUI_ALLOC_LockH>
 800924c:	9001      	str	r0, [sp, #4]
 800924e:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8009250:	b108      	cbz	r0, 8009256 <WM_DeleteWindow+0x36>
 8009252:	f001 fbe3 	bl	800aa1c <GUI_MEMDEV_Delete>
 8009256:	4826      	ldr	r0, [pc, #152]	; (80092f0 <WM_DeleteWindow+0xd0>)
 8009258:	4b26      	ldr	r3, [pc, #152]	; (80092f4 <WM_DeleteWindow+0xd4>)
 800925a:	6805      	ldr	r5, [r0, #0]
 800925c:	4a26      	ldr	r2, [pc, #152]	; (80092f8 <WM_DeleteWindow+0xd8>)
 800925e:	4827      	ldr	r0, [pc, #156]	; (80092fc <WM_DeleteWindow+0xdc>)
 8009260:	2100      	movs	r1, #0
 8009262:	6019      	str	r1, [r3, #0]
 8009264:	f852 3025 	ldr.w	r3, [r2, r5, lsl #2]
 8009268:	42a3      	cmp	r3, r4
 800926a:	bf08      	it	eq
 800926c:	f842 1025 	streq.w	r1, [r2, r5, lsl #2]
 8009270:	f850 1025 	ldr.w	r1, [r0, r5, lsl #2]
 8009274:	42a1      	cmp	r1, r4
 8009276:	d102      	bne.n	800927e <WM_DeleteWindow+0x5e>
 8009278:	2200      	movs	r2, #0
 800927a:	f840 2025 	str.w	r2, [r0, r5, lsl #2]
 800927e:	4d20      	ldr	r5, [pc, #128]	; (8009300 <WM_DeleteWindow+0xe0>)
 8009280:	682d      	ldr	r5, [r5, #0]
 8009282:	b12d      	cbz	r5, 8009290 <WM_DeleteWindow+0x70>
 8009284:	6868      	ldr	r0, [r5, #4]
 8009286:	42a0      	cmp	r0, r4
 8009288:	d1fa      	bne.n	8009280 <WM_DeleteWindow+0x60>
 800928a:	2300      	movs	r3, #0
 800928c:	606b      	str	r3, [r5, #4]
 800928e:	e7f7      	b.n	8009280 <WM_DeleteWindow+0x60>
 8009290:	4620      	mov	r0, r4
 8009292:	2107      	movs	r1, #7
 8009294:	f7ff f8c5 	bl	8008422 <WM_NotifyParent>
 8009298:	9d01      	ldr	r5, [sp, #4]
 800929a:	69e8      	ldr	r0, [r5, #28]
 800929c:	f7ff ffc0 	bl	8009220 <WM_DeleteWindow>
 80092a0:	69eb      	ldr	r3, [r5, #28]
 80092a2:	2b00      	cmp	r3, #0
 80092a4:	d1f9      	bne.n	800929a <WM_DeleteWindow+0x7a>
 80092a6:	4620      	mov	r0, r4
 80092a8:	f7ff fef6 	bl	8009098 <WM__DetachWindow>
 80092ac:	4620      	mov	r0, r4
 80092ae:	f7ff fe1d 	bl	8008eec <WM__RemoveFromLinList>
 80092b2:	9801      	ldr	r0, [sp, #4]
 80092b4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80092b6:	07d9      	lsls	r1, r3, #31
 80092b8:	d503      	bpl.n	80092c2 <WM_DeleteWindow+0xa2>
 80092ba:	4a12      	ldr	r2, [pc, #72]	; (8009304 <WM_DeleteWindow+0xe4>)
 80092bc:	6811      	ldr	r1, [r2, #0]
 80092be:	1e48      	subs	r0, r1, #1
 80092c0:	6010      	str	r0, [r2, #0]
 80092c2:	069a      	lsls	r2, r3, #26
 80092c4:	d503      	bpl.n	80092ce <WM_DeleteWindow+0xae>
 80092c6:	4b10      	ldr	r3, [pc, #64]	; (8009308 <WM_DeleteWindow+0xe8>)
 80092c8:	881a      	ldrh	r2, [r3, #0]
 80092ca:	1e51      	subs	r1, r2, #1
 80092cc:	8019      	strh	r1, [r3, #0]
 80092ce:	a801      	add	r0, sp, #4
 80092d0:	f005 fb0c 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80092d4:	480d      	ldr	r0, [pc, #52]	; (800930c <WM_DeleteWindow+0xec>)
 80092d6:	8803      	ldrh	r3, [r0, #0]
 80092d8:	1e5a      	subs	r2, r3, #1
 80092da:	8002      	strh	r2, [r0, #0]
 80092dc:	4620      	mov	r0, r4
 80092de:	f005 fb31 	bl	800e944 <GUI_ALLOC_Free>
 80092e2:	490b      	ldr	r1, [pc, #44]	; (8009310 <WM_DeleteWindow+0xf0>)
 80092e4:	f851 0026 	ldr.w	r0, [r1, r6, lsl #2]
 80092e8:	f7ff ff7a 	bl	80091e0 <WM_SelectWindow>
 80092ec:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
 80092ee:	bf00      	nop
 80092f0:	2000dd90 	.word	0x2000dd90
 80092f4:	2000d7e8 	.word	0x2000d7e8
 80092f8:	2000dd80 	.word	0x2000dd80
 80092fc:	2000ddac 	.word	0x2000ddac
 8009300:	2000dda4 	.word	0x2000dda4
 8009304:	2000ddb8 	.word	0x2000ddb8
 8009308:	2000dd88 	.word	0x2000dd88
 800930c:	2000dd68 	.word	0x2000dd68
 8009310:	2000dd70 	.word	0x2000dd70

08009314 <WM_CreateWindowAsChild>:
 8009314:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009318:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800931a:	469b      	mov	fp, r3
 800931c:	4b4e      	ldr	r3, [pc, #312]	; (8009458 <WM_CreateWindowAsChild+0x144>)
 800931e:	4680      	mov	r8, r0
 8009320:	4689      	mov	r9, r1
 8009322:	4692      	mov	sl, r2
 8009324:	681d      	ldr	r5, [r3, #0]
 8009326:	bb66      	cbnz	r6, 8009382 <WM_CreateWindowAsChild+0x6e>
 8009328:	484c      	ldr	r0, [pc, #304]	; (800945c <WM_CreateWindowAsChild+0x148>)
 800932a:	8801      	ldrh	r1, [r0, #0]
 800932c:	b361      	cbz	r1, 8009388 <WM_CreateWindowAsChild+0x74>
 800932e:	4a4c      	ldr	r2, [pc, #304]	; (8009460 <WM_CreateWindowAsChild+0x14c>)
 8009330:	4b4c      	ldr	r3, [pc, #304]	; (8009464 <WM_CreateWindowAsChild+0x150>)
 8009332:	6814      	ldr	r4, [r2, #0]
 8009334:	7c60      	ldrb	r0, [r4, #17]
 8009336:	f853 1020 	ldr.w	r1, [r3, r0, lsl #2]
 800933a:	1c4c      	adds	r4, r1, #1
 800933c:	d024      	beq.n	8009388 <WM_CreateWindowAsChild+0x74>
 800933e:	b319      	cbz	r1, 8009388 <WM_CreateWindowAsChild+0x74>
 8009340:	460e      	mov	r6, r1
 8009342:	4630      	mov	r0, r6
 8009344:	f005 fac4 	bl	800e8d0 <GUI_ALLOC_LockH>
 8009348:	f9b0 2000 	ldrsh.w	r2, [r0]
 800934c:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 8009350:	9001      	str	r0, [sp, #4]
 8009352:	4490      	add	r8, r2
 8009354:	44a1      	add	r9, r4
 8009356:	f1ba 0f00 	cmp.w	sl, #0
 800935a:	d105      	bne.n	8009368 <WM_CreateWindowAsChild+0x54>
 800935c:	f9b0 a004 	ldrsh.w	sl, [r0, #4]
 8009360:	ebc2 030a 	rsb	r3, r2, sl
 8009364:	f103 0a01 	add.w	sl, r3, #1
 8009368:	f1bb 0f00 	cmp.w	fp, #0
 800936c:	d105      	bne.n	800937a <WM_CreateWindowAsChild+0x66>
 800936e:	f9b0 b006 	ldrsh.w	fp, [r0, #6]
 8009372:	ebc4 000b 	rsb	r0, r4, fp
 8009376:	f100 0b01 	add.w	fp, r0, #1
 800937a:	a801      	add	r0, sp, #4
 800937c:	f005 fab6 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8009380:	e002      	b.n	8009388 <WM_CreateWindowAsChild+0x74>
 8009382:	1c70      	adds	r0, r6, #1
 8009384:	d1dd      	bne.n	8009342 <WM_CreateWindowAsChild+0x2e>
 8009386:	2600      	movs	r6, #0
 8009388:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800938a:	302c      	adds	r0, #44	; 0x2c
 800938c:	f005 fd14 	bl	800edb8 <GUI_ALLOC_AllocZero>
 8009390:	4604      	mov	r4, r0
 8009392:	2800      	cmp	r0, #0
 8009394:	d05c      	beq.n	8009450 <WM_CreateWindowAsChild+0x13c>
 8009396:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8009398:	432f      	orrs	r7, r5
 800939a:	4d30      	ldr	r5, [pc, #192]	; (800945c <WM_CreateWindowAsChild+0x148>)
 800939c:	8829      	ldrh	r1, [r5, #0]
 800939e:	1c4a      	adds	r2, r1, #1
 80093a0:	802a      	strh	r2, [r5, #0]
 80093a2:	f005 fa95 	bl	800e8d0 <GUI_ALLOC_LockH>
 80093a6:	ab02      	add	r3, sp, #8
 80093a8:	4605      	mov	r5, r0
 80093aa:	f843 0d08 	str.w	r0, [r3, #-8]!
 80093ae:	492e      	ldr	r1, [pc, #184]	; (8009468 <WM_CreateWindowAsChild+0x154>)
 80093b0:	f8a0 8000 	strh.w	r8, [r0]
 80093b4:	f8a0 9002 	strh.w	r9, [r0, #2]
 80093b8:	44d0      	add	r8, sl
 80093ba:	44d9      	add	r9, fp
 80093bc:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 80093be:	f108 38ff 	add.w	r8, r8, #4294967295
 80093c2:	f109 39ff 	add.w	r9, r9, #4294967295
 80093c6:	4039      	ands	r1, r7
 80093c8:	f8a0 8004 	strh.w	r8, [r0, #4]
 80093cc:	f8a0 9006 	strh.w	r9, [r0, #6]
 80093d0:	980e      	ldr	r0, [sp, #56]	; 0x38
 80093d2:	ea42 0301 	orr.w	r3, r2, r1
 80093d6:	6128      	str	r0, [r5, #16]
 80093d8:	62ab      	str	r3, [r5, #40]	; 0x28
 80093da:	4668      	mov	r0, sp
 80093dc:	f005 fa86 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80093e0:	4922      	ldr	r1, [pc, #136]	; (800946c <WM_CreateWindowAsChild+0x158>)
 80093e2:	6808      	ldr	r0, [r1, #0]
 80093e4:	b148      	cbz	r0, 80093fa <WM_CreateWindowAsChild+0xe6>
 80093e6:	f005 fa69 	bl	800e8bc <GUI_ALLOC_h2p>
 80093ea:	4605      	mov	r5, r0
 80093ec:	4620      	mov	r0, r4
 80093ee:	f005 fa65 	bl	800e8bc <GUI_ALLOC_h2p>
 80093f2:	696a      	ldr	r2, [r5, #20]
 80093f4:	6142      	str	r2, [r0, #20]
 80093f6:	616c      	str	r4, [r5, #20]
 80093f8:	e000      	b.n	80093fc <WM_CreateWindowAsChild+0xe8>
 80093fa:	600c      	str	r4, [r1, #0]
 80093fc:	4620      	mov	r0, r4
 80093fe:	4631      	mov	r1, r6
 8009400:	f7ff fc7c 	bl	8008cfc <WM__InsertWindowIntoList>
 8009404:	06b8      	lsls	r0, r7, #26
 8009406:	d502      	bpl.n	800940e <WM_CreateWindowAsChild+0xfa>
 8009408:	4620      	mov	r0, r4
 800940a:	f7ff fee9 	bl	80091e0 <WM_SelectWindow>
 800940e:	07f9      	lsls	r1, r7, #31
 8009410:	d503      	bpl.n	800941a <WM_CreateWindowAsChild+0x106>
 8009412:	4817      	ldr	r0, [pc, #92]	; (8009470 <WM_CreateWindowAsChild+0x15c>)
 8009414:	6803      	ldr	r3, [r0, #0]
 8009416:	1c59      	adds	r1, r3, #1
 8009418:	6001      	str	r1, [r0, #0]
 800941a:	067a      	lsls	r2, r7, #25
 800941c:	d502      	bpl.n	8009424 <WM_CreateWindowAsChild+0x110>
 800941e:	4620      	mov	r0, r4
 8009420:	f007 f946 	bl	80106b0 <WM_BringToBottom>
 8009424:	07bb      	lsls	r3, r7, #30
 8009426:	d50f      	bpl.n	8009448 <WM_CreateWindowAsChild+0x134>
 8009428:	4620      	mov	r0, r4
 800942a:	f005 fa51 	bl	800e8d0 <GUI_ALLOC_LockH>
 800942e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009430:	aa02      	add	r2, sp, #8
 8009432:	f043 0102 	orr.w	r1, r3, #2
 8009436:	f842 0d08 	str.w	r0, [r2, #-8]!
 800943a:	6281      	str	r1, [r0, #40]	; 0x28
 800943c:	4668      	mov	r0, sp
 800943e:	f005 fa55 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8009442:	4620      	mov	r0, r4
 8009444:	f7ff feaa 	bl	800919c <WM_InvalidateWindow>
 8009448:	4620      	mov	r0, r4
 800944a:	2101      	movs	r1, #1
 800944c:	f7ff fe54 	bl	80090f8 <WM__SendMsgNoData>
 8009450:	4620      	mov	r0, r4
 8009452:	e8bd 8ffe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009456:	bf00      	nop
 8009458:	2000dd98 	.word	0x2000dd98
 800945c:	2000dd68 	.word	0x2000dd68
 8009460:	20000270 	.word	0x20000270
 8009464:	2000dd70 	.word	0x2000dd70
 8009468:	003f3f9f 	.word	0x003f3f9f
 800946c:	2000dd8c 	.word	0x2000dd8c
 8009470:	2000ddb8 	.word	0x2000ddb8

08009474 <WM_CreateWindow>:
 8009474:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8009476:	2400      	movs	r4, #0
 8009478:	9400      	str	r4, [sp, #0]
 800947a:	9c06      	ldr	r4, [sp, #24]
 800947c:	9401      	str	r4, [sp, #4]
 800947e:	9c07      	ldr	r4, [sp, #28]
 8009480:	9402      	str	r4, [sp, #8]
 8009482:	9c08      	ldr	r4, [sp, #32]
 8009484:	9403      	str	r4, [sp, #12]
 8009486:	f7ff ff45 	bl	8009314 <WM_CreateWindowAsChild>
 800948a:	b004      	add	sp, #16
 800948c:	bd10      	pop	{r4, pc}
	...

08009490 <WM_GetActiveWindow>:
 8009490:	4b01      	ldr	r3, [pc, #4]	; (8009498 <WM_GetActiveWindow+0x8>)
 8009492:	6818      	ldr	r0, [r3, #0]
 8009494:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8009496:	4770      	bx	lr
 8009498:	20000270 	.word	0x20000270

0800949c <WM__GetNextIVR>:
 800949c:	b530      	push	{r4, r5, lr}
 800949e:	4b5d      	ldr	r3, [pc, #372]	; (8009614 <WM__GetNextIVR+0x178>)
 80094a0:	6818      	ldr	r0, [r3, #0]
 80094a2:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 80094a6:	b085      	sub	sp, #20
 80094a8:	2800      	cmp	r0, #0
 80094aa:	f000 80b1 	beq.w	8009610 <WM__GetNextIVR+0x174>
 80094ae:	4b5a      	ldr	r3, [pc, #360]	; (8009618 <WM__GetNextIVR+0x17c>)
 80094b0:	6959      	ldr	r1, [r3, #20]
 80094b2:	2901      	cmp	r1, #1
 80094b4:	dc2c      	bgt.n	8009510 <WM__GetNextIVR+0x74>
 80094b6:	f103 0108 	add.w	r1, r3, #8
 80094ba:	691a      	ldr	r2, [r3, #16]
 80094bc:	c903      	ldmia	r1, {r0, r1}
 80094be:	3201      	adds	r2, #1
 80094c0:	ac04      	add	r4, sp, #16
 80094c2:	611a      	str	r2, [r3, #16]
 80094c4:	e904 0003 	stmdb	r4, {r0, r1}
 80094c8:	b922      	cbnz	r2, 80094d4 <WM__GetNextIVR+0x38>
 80094ca:	881a      	ldrh	r2, [r3, #0]
 80094cc:	f8ad 2008 	strh.w	r2, [sp, #8]
 80094d0:	885a      	ldrh	r2, [r3, #2]
 80094d2:	e012      	b.n	80094fa <WM__GetNextIVR+0x5e>
 80094d4:	8998      	ldrh	r0, [r3, #12]
 80094d6:	8959      	ldrh	r1, [r3, #10]
 80094d8:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80094dc:	f8ad 100a 	strh.w	r1, [sp, #10]
 80094e0:	1c42      	adds	r2, r0, #1
 80094e2:	b294      	uxth	r4, r2
 80094e4:	b220      	sxth	r0, r4
 80094e6:	4283      	cmp	r3, r0
 80094e8:	f8ad 4008 	strh.w	r4, [sp, #8]
 80094ec:	da07      	bge.n	80094fe <WM__GetNextIVR+0x62>
 80094ee:	484a      	ldr	r0, [pc, #296]	; (8009618 <WM__GetNextIVR+0x17c>)
 80094f0:	8804      	ldrh	r4, [r0, #0]
 80094f2:	89c3      	ldrh	r3, [r0, #14]
 80094f4:	f8ad 4008 	strh.w	r4, [sp, #8]
 80094f8:	1c5a      	adds	r2, r3, #1
 80094fa:	f8ad 200a 	strh.w	r2, [sp, #10]
 80094fe:	4c46      	ldr	r4, [pc, #280]	; (8009618 <WM__GetNextIVR+0x17c>)
 8009500:	f9bd 100a 	ldrsh.w	r1, [sp, #10]
 8009504:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8009508:	4299      	cmp	r1, r3
 800950a:	dd05      	ble.n	8009518 <WM__GetNextIVR+0x7c>
 800950c:	4b42      	ldr	r3, [pc, #264]	; (8009618 <WM__GetNextIVR+0x17c>)
 800950e:	6959      	ldr	r1, [r3, #20]
 8009510:	1e48      	subs	r0, r1, #1
 8009512:	6158      	str	r0, [r3, #20]
 8009514:	2000      	movs	r0, #0
 8009516:	e07b      	b.n	8009610 <WM__GetNextIVR+0x174>
 8009518:	4d3e      	ldr	r5, [pc, #248]	; (8009614 <WM__GetNextIVR+0x178>)
 800951a:	6828      	ldr	r0, [r5, #0]
 800951c:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800951e:	f005 f9d7 	bl	800e8d0 <GUI_ALLOC_LockH>
 8009522:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8009526:	f9b4 1000 	ldrsh.w	r1, [r4]
 800952a:	9001      	str	r0, [sp, #4]
 800952c:	428a      	cmp	r2, r1
 800952e:	d118      	bne.n	8009562 <WM__GetNextIVR+0xc6>
 8009530:	6828      	ldr	r0, [r5, #0]
 8009532:	88e3      	ldrh	r3, [r4, #6]
 8009534:	88a4      	ldrh	r4, [r4, #4]
 8009536:	6c82      	ldr	r2, [r0, #72]	; 0x48
 8009538:	f8ad 300e 	strh.w	r3, [sp, #14]
 800953c:	f8ad 400c 	strh.w	r4, [sp, #12]
 8009540:	b152      	cbz	r2, 8009558 <WM__GetNextIVR+0xbc>
 8009542:	4610      	mov	r0, r2
 8009544:	f005 f9ba 	bl	800e8bc <GUI_ALLOC_h2p>
 8009548:	4604      	mov	r4, r0
 800954a:	2200      	movs	r2, #0
 800954c:	6a00      	ldr	r0, [r0, #32]
 800954e:	a902      	add	r1, sp, #8
 8009550:	f7ff fa68 	bl	8008a24 <_Findy1>
 8009554:	69a2      	ldr	r2, [r4, #24]
 8009556:	e7f3      	b.n	8009540 <WM__GetNextIVR+0xa4>
 8009558:	9901      	ldr	r1, [sp, #4]
 800955a:	69c8      	ldr	r0, [r1, #28]
 800955c:	a902      	add	r1, sp, #8
 800955e:	f7ff fa61 	bl	8008a24 <_Findy1>
 8009562:	4b2c      	ldr	r3, [pc, #176]	; (8009614 <WM__GetNextIVR+0x178>)
 8009564:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8009568:	681c      	ldr	r4, [r3, #0]
 800956a:	f8ad 200c 	strh.w	r2, [sp, #12]
 800956e:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8009570:	ac02      	add	r4, sp, #8
 8009572:	b162      	cbz	r2, 800958e <WM__GetNextIVR+0xf2>
 8009574:	4610      	mov	r0, r2
 8009576:	f005 f9a1 	bl	800e8bc <GUI_ALLOC_h2p>
 800957a:	4621      	mov	r1, r4
 800957c:	4605      	mov	r5, r0
 800957e:	2200      	movs	r2, #0
 8009580:	6a00      	ldr	r0, [r0, #32]
 8009582:	f7ff faa5 	bl	8008ad0 <_Findx0>
 8009586:	2800      	cmp	r0, #0
 8009588:	d1eb      	bne.n	8009562 <WM__GetNextIVR+0xc6>
 800958a:	69aa      	ldr	r2, [r5, #24]
 800958c:	e7f0      	b.n	8009570 <WM__GetNextIVR+0xd4>
 800958e:	9801      	ldr	r0, [sp, #4]
 8009590:	4621      	mov	r1, r4
 8009592:	69c0      	ldr	r0, [r0, #28]
 8009594:	f7ff fa9c 	bl	8008ad0 <_Findx0>
 8009598:	2800      	cmp	r0, #0
 800959a:	d1e2      	bne.n	8009562 <WM__GetNextIVR+0xc6>
 800959c:	4b1e      	ldr	r3, [pc, #120]	; (8009618 <WM__GetNextIVR+0x17c>)
 800959e:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80095a2:	889a      	ldrh	r2, [r3, #4]
 80095a4:	b210      	sxth	r0, r2
 80095a6:	4281      	cmp	r1, r0
 80095a8:	f8ad 200c 	strh.w	r2, [sp, #12]
 80095ac:	dd08      	ble.n	80095c0 <WM__GetNextIVR+0x124>
 80095ae:	e894 0003 	ldmia.w	r4, {r0, r1}
 80095b2:	3308      	adds	r3, #8
 80095b4:	e883 0003 	stmia.w	r3, {r0, r1}
 80095b8:	a801      	add	r0, sp, #4
 80095ba:	f005 f997 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80095be:	e796      	b.n	80094ee <WM__GetNextIVR+0x52>
 80095c0:	4d14      	ldr	r5, [pc, #80]	; (8009614 <WM__GetNextIVR+0x178>)
 80095c2:	682c      	ldr	r4, [r5, #0]
 80095c4:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80095c6:	ac02      	add	r4, sp, #8
 80095c8:	b152      	cbz	r2, 80095e0 <WM__GetNextIVR+0x144>
 80095ca:	4610      	mov	r0, r2
 80095cc:	f005 f976 	bl	800e8bc <GUI_ALLOC_h2p>
 80095d0:	4605      	mov	r5, r0
 80095d2:	2200      	movs	r2, #0
 80095d4:	6a00      	ldr	r0, [r0, #32]
 80095d6:	4621      	mov	r1, r4
 80095d8:	f7ff fabf 	bl	8008b5a <_Findx1>
 80095dc:	69aa      	ldr	r2, [r5, #24]
 80095de:	e7f2      	b.n	80095c6 <WM__GetNextIVR+0x12a>
 80095e0:	ad04      	add	r5, sp, #16
 80095e2:	4621      	mov	r1, r4
 80095e4:	f855 3d0c 	ldr.w	r3, [r5, #-12]!
 80095e8:	69d8      	ldr	r0, [r3, #28]
 80095ea:	f7ff fab6 	bl	8008b5a <_Findx1>
 80095ee:	4628      	mov	r0, r5
 80095f0:	f005 f97c 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80095f4:	4b08      	ldr	r3, [pc, #32]	; (8009618 <WM__GetNextIVR+0x17c>)
 80095f6:	691a      	ldr	r2, [r3, #16]
 80095f8:	f644 6120 	movw	r1, #20000	; 0x4e20
 80095fc:	428a      	cmp	r2, r1
 80095fe:	dc85      	bgt.n	800950c <WM__GetNextIVR+0x70>
 8009600:	e894 0003 	ldmia.w	r4, {r0, r1}
 8009604:	3308      	adds	r3, #8
 8009606:	e883 0003 	stmia.w	r3, {r0, r1}
 800960a:	f7ff fc13 	bl	8008e34 <WM__ActivateClipRect>
 800960e:	2001      	movs	r0, #1
 8009610:	b005      	add	sp, #20
 8009612:	bd30      	pop	{r4, r5, pc}
 8009614:	20000270 	.word	0x20000270
 8009618:	2000d7d0 	.word	0x2000d7d0

0800961c <WM__InitIVRSearch>:
 800961c:	b570      	push	{r4, r5, r6, lr}
 800961e:	4b3b      	ldr	r3, [pc, #236]	; (800970c <WM__InitIVRSearch+0xf0>)
 8009620:	4605      	mov	r5, r0
 8009622:	6818      	ldr	r0, [r3, #0]
 8009624:	f890 2054 	ldrb.w	r2, [r0, #84]	; 0x54
 8009628:	b086      	sub	sp, #24
 800962a:	b912      	cbnz	r2, 8009632 <WM__InitIVRSearch+0x16>
 800962c:	f7ff fc02 	bl	8008e34 <WM__ActivateClipRect>
 8009630:	e068      	b.n	8009704 <WM__InitIVRSearch+0xe8>
 8009632:	4c37      	ldr	r4, [pc, #220]	; (8009710 <WM__InitIVRSearch+0xf4>)
 8009634:	6961      	ldr	r1, [r4, #20]
 8009636:	1c4b      	adds	r3, r1, #1
 8009638:	2b01      	cmp	r3, #1
 800963a:	6163      	str	r3, [r4, #20]
 800963c:	dc62      	bgt.n	8009704 <WM__InitIVRSearch+0xe8>
 800963e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8009640:	f005 f946 	bl	800e8d0 <GUI_ALLOC_LockH>
 8009644:	4933      	ldr	r1, [pc, #204]	; (8009714 <WM__InitIVRSearch+0xf8>)
 8009646:	9000      	str	r0, [sp, #0]
 8009648:	780b      	ldrb	r3, [r1, #0]
 800964a:	f04f 32ff 	mov.w	r2, #4294967295
 800964e:	6122      	str	r2, [r4, #16]
 8009650:	b123      	cbz	r3, 800965c <WM__InitIVRSearch+0x40>
 8009652:	f100 0108 	add.w	r1, r0, #8
 8009656:	ac02      	add	r4, sp, #8
 8009658:	c903      	ldmia	r1, {r0, r1}
 800965a:	e005      	b.n	8009668 <WM__InitIVRSearch+0x4c>
 800965c:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800965e:	f016 0602 	ands.w	r6, r6, #2
 8009662:	d009      	beq.n	8009678 <WM__InitIVRSearch+0x5c>
 8009664:	c803      	ldmia	r0, {r0, r1}
 8009666:	ac02      	add	r4, sp, #8
 8009668:	e884 0003 	stmia.w	r4, {r0, r1}
 800966c:	b165      	cbz	r5, 8009688 <WM__InitIVRSearch+0x6c>
 800966e:	a802      	add	r0, sp, #8
 8009670:	4629      	mov	r1, r5
 8009672:	f003 f8f3 	bl	800c85c <GUI__IntersectRect>
 8009676:	e007      	b.n	8009688 <WM__InitIVRSearch+0x6c>
 8009678:	6960      	ldr	r0, [r4, #20]
 800967a:	1e42      	subs	r2, r0, #1
 800967c:	4668      	mov	r0, sp
 800967e:	6162      	str	r2, [r4, #20]
 8009680:	f005 f934 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8009684:	4630      	mov	r0, r6
 8009686:	e03e      	b.n	8009706 <WM__InitIVRSearch+0xea>
 8009688:	4b20      	ldr	r3, [pc, #128]	; (800970c <WM__InitIVRSearch+0xf0>)
 800968a:	6818      	ldr	r0, [r3, #0]
 800968c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800968e:	b1ca      	cbz	r2, 80096c4 <WM__InitIVRSearch+0xa8>
 8009690:	9c00      	ldr	r4, [sp, #0]
 8009692:	6851      	ldr	r1, [r2, #4]
 8009694:	9401      	str	r4, [sp, #4]
 8009696:	6810      	ldr	r0, [r2, #0]
 8009698:	4c1f      	ldr	r4, [pc, #124]	; (8009718 <WM__InitIVRSearch+0xfc>)
 800969a:	ab04      	add	r3, sp, #16
 800969c:	c303      	stmia	r3!, {r0, r1}
 800969e:	6821      	ldr	r1, [r4, #0]
 80096a0:	b131      	cbz	r1, 80096b0 <WM__InitIVRSearch+0x94>
 80096a2:	a801      	add	r0, sp, #4
 80096a4:	f005 f922 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80096a8:	6820      	ldr	r0, [r4, #0]
 80096aa:	f005 f911 	bl	800e8d0 <GUI_ALLOC_LockH>
 80096ae:	9001      	str	r0, [sp, #4]
 80096b0:	9801      	ldr	r0, [sp, #4]
 80096b2:	a904      	add	r1, sp, #16
 80096b4:	f7ff fb8e 	bl	8008dd4 <WM__Client2Screen>
 80096b8:	a802      	add	r0, sp, #8
 80096ba:	a904      	add	r1, sp, #16
 80096bc:	f003 f8ce 	bl	800c85c <GUI__IntersectRect>
 80096c0:	a801      	add	r0, sp, #4
 80096c2:	e000      	b.n	80096c6 <WM__InitIVRSearch+0xaa>
 80096c4:	4668      	mov	r0, sp
 80096c6:	f005 f911 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80096ca:	4813      	ldr	r0, [pc, #76]	; (8009718 <WM__InitIVRSearch+0xfc>)
 80096cc:	6801      	ldr	r1, [r0, #0]
 80096ce:	ac02      	add	r4, sp, #8
 80096d0:	b129      	cbz	r1, 80096de <WM__InitIVRSearch+0xc2>
 80096d2:	4620      	mov	r0, r4
 80096d4:	f7ff fae2 	bl	8008c9c <WM__ClipAtParentBorders>
 80096d8:	b908      	cbnz	r0, 80096de <WM__InitIVRSearch+0xc2>
 80096da:	4b0d      	ldr	r3, [pc, #52]	; (8009710 <WM__InitIVRSearch+0xf4>)
 80096dc:	e007      	b.n	80096ee <WM__InitIVRSearch+0xd2>
 80096de:	4a0b      	ldr	r2, [pc, #44]	; (800970c <WM__InitIVRSearch+0xf0>)
 80096e0:	6813      	ldr	r3, [r2, #0]
 80096e2:	4620      	mov	r0, r4
 80096e4:	6c99      	ldr	r1, [r3, #72]	; 0x48
 80096e6:	f7ff fad9 	bl	8008c9c <WM__ClipAtParentBorders>
 80096ea:	4b09      	ldr	r3, [pc, #36]	; (8009710 <WM__InitIVRSearch+0xf4>)
 80096ec:	b918      	cbnz	r0, 80096f6 <WM__InitIVRSearch+0xda>
 80096ee:	6959      	ldr	r1, [r3, #20]
 80096f0:	1e4a      	subs	r2, r1, #1
 80096f2:	615a      	str	r2, [r3, #20]
 80096f4:	e007      	b.n	8009706 <WM__InitIVRSearch+0xea>
 80096f6:	e894 0003 	ldmia.w	r4, {r0, r1}
 80096fa:	e883 0003 	stmia.w	r3, {r0, r1}
 80096fe:	f7ff fecd 	bl	800949c <WM__GetNextIVR>
 8009702:	e000      	b.n	8009706 <WM__InitIVRSearch+0xea>
 8009704:	2001      	movs	r0, #1
 8009706:	b006      	add	sp, #24
 8009708:	bd70      	pop	{r4, r5, r6, pc}
 800970a:	bf00      	nop
 800970c:	20000270 	.word	0x20000270
 8009710:	2000d7d0 	.word	0x2000d7d0
 8009714:	2000dd95 	.word	0x2000dd95
 8009718:	2000dd6c 	.word	0x2000dd6c

0800971c <WM_SetDefault>:
 800971c:	b508      	push	{r3, lr}
 800971e:	f003 fcef 	bl	800d100 <GL_SetDefault>
 8009722:	4b02      	ldr	r3, [pc, #8]	; (800972c <WM_SetDefault+0x10>)
 8009724:	6818      	ldr	r0, [r3, #0]
 8009726:	2200      	movs	r2, #0
 8009728:	6442      	str	r2, [r0, #68]	; 0x44
 800972a:	bd08      	pop	{r3, pc}
 800972c:	20000270 	.word	0x20000270

08009730 <WM__Paint1>:
 8009730:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009732:	b089      	sub	sp, #36	; 0x24
 8009734:	4604      	mov	r4, r0
 8009736:	f005 f8cb 	bl	800e8d0 <GUI_ALLOC_LockH>
 800973a:	6907      	ldr	r7, [r0, #16]
 800973c:	9001      	str	r0, [sp, #4]
 800973e:	6a86      	ldr	r6, [r0, #40]	; 0x28
 8009740:	3008      	adds	r0, #8
 8009742:	c803      	ldmia	r0, {r0, r1}
 8009744:	ad02      	add	r5, sp, #8
 8009746:	e885 0003 	stmia.w	r5, {r0, r1}
 800974a:	a801      	add	r0, sp, #4
 800974c:	f005 f8ce 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8009750:	2f00      	cmp	r7, #0
 8009752:	d030      	beq.n	80097b6 <WM__Paint1+0x86>
 8009754:	07b2      	lsls	r2, r6, #30
 8009756:	d52e      	bpl.n	80097b6 <WM__Paint1+0x86>
 8009758:	4620      	mov	r0, r4
 800975a:	212e      	movs	r1, #46	; 0x2e
 800975c:	f7fe fde5 	bl	800832a <WM_SendMessageNoPara>
 8009760:	4b16      	ldr	r3, [pc, #88]	; (80097bc <WM__Paint1+0x8c>)
 8009762:	781a      	ldrb	r2, [r3, #0]
 8009764:	1c50      	adds	r0, r2, #1
 8009766:	7018      	strb	r0, [r3, #0]
 8009768:	04f3      	lsls	r3, r6, #19
 800976a:	d50a      	bpl.n	8009782 <WM__Paint1+0x52>
 800976c:	220f      	movs	r2, #15
 800976e:	9405      	str	r4, [sp, #20]
 8009770:	9204      	str	r2, [sp, #16]
 8009772:	9507      	str	r5, [sp, #28]
 8009774:	f7ff ffd2 	bl	800971c <WM_SetDefault>
 8009778:	4620      	mov	r0, r4
 800977a:	a904      	add	r1, sp, #16
 800977c:	f7fe fb84 	bl	8007e88 <WM__SendMessage>
 8009780:	e011      	b.n	80097a6 <WM__Paint1+0x76>
 8009782:	4628      	mov	r0, r5
 8009784:	f7ff ff4a 	bl	800961c <WM__InitIVRSearch>
 8009788:	b168      	cbz	r0, 80097a6 <WM__Paint1+0x76>
 800978a:	210f      	movs	r1, #15
 800978c:	ab02      	add	r3, sp, #8
 800978e:	9104      	str	r1, [sp, #16]
 8009790:	9307      	str	r3, [sp, #28]
 8009792:	9405      	str	r4, [sp, #20]
 8009794:	f7ff ffc2 	bl	800971c <WM_SetDefault>
 8009798:	4620      	mov	r0, r4
 800979a:	a904      	add	r1, sp, #16
 800979c:	f7fe fb74 	bl	8007e88 <WM__SendMessage>
 80097a0:	f7ff fe7c 	bl	800949c <WM__GetNextIVR>
 80097a4:	e7f0      	b.n	8009788 <WM__Paint1+0x58>
 80097a6:	4805      	ldr	r0, [pc, #20]	; (80097bc <WM__Paint1+0x8c>)
 80097a8:	7801      	ldrb	r1, [r0, #0]
 80097aa:	1e4b      	subs	r3, r1, #1
 80097ac:	7003      	strb	r3, [r0, #0]
 80097ae:	212f      	movs	r1, #47	; 0x2f
 80097b0:	4620      	mov	r0, r4
 80097b2:	f7fe fdba 	bl	800832a <WM_SendMessageNoPara>
 80097b6:	b009      	add	sp, #36	; 0x24
 80097b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80097ba:	bf00      	nop
 80097bc:	2000dd95 	.word	0x2000dd95

080097c0 <WM__Paint>:
 80097c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80097c4:	b088      	sub	sp, #32
 80097c6:	ae06      	add	r6, sp, #24
 80097c8:	9003      	str	r0, [sp, #12]
 80097ca:	f005 f881 	bl	800e8d0 <GUI_ALLOC_LockH>
 80097ce:	4603      	mov	r3, r0
 80097d0:	f100 0208 	add.w	r2, r0, #8
 80097d4:	9005      	str	r0, [sp, #20]
 80097d6:	e892 0003 	ldmia.w	r2, {r0, r1}
 80097da:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 80097dc:	699f      	ldr	r7, [r3, #24]
 80097de:	f8d3 8010 	ldr.w	r8, [r3, #16]
 80097e2:	f244 0420 	movw	r4, #16416	; 0x4020
 80097e6:	e886 0003 	stmia.w	r6, {r0, r1}
 80097ea:	402c      	ands	r4, r5
 80097ec:	a805      	add	r0, sp, #20
 80097ee:	f005 f87d 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80097f2:	2c00      	cmp	r4, #0
 80097f4:	d035      	beq.n	8009862 <WM__Paint+0xa2>
 80097f6:	f1b8 0f00 	cmp.w	r8, #0
 80097fa:	d017      	beq.n	800982c <WM__Paint+0x6c>
 80097fc:	4630      	mov	r0, r6
 80097fe:	9903      	ldr	r1, [sp, #12]
 8009800:	f7ff fa4c 	bl	8008c9c <WM__ClipAtParentBorders>
 8009804:	b190      	cbz	r0, 800982c <WM__Paint+0x6c>
 8009806:	9803      	ldr	r0, [sp, #12]
 8009808:	f7ff fcea 	bl	80091e0 <WM_SelectWindow>
 800980c:	0768      	lsls	r0, r5, #29
 800980e:	d50f      	bpl.n	8009830 <WM__Paint+0x70>
 8009810:	b127      	cbz	r7, 800981c <WM__Paint+0x5c>
 8009812:	f005 0501 	and.w	r5, r5, #1
 8009816:	f085 0501 	eor.w	r5, r5, #1
 800981a:	e000      	b.n	800981e <WM__Paint+0x5e>
 800981c:	2501      	movs	r5, #1
 800981e:	9500      	str	r5, [sp, #0]
 8009820:	a806      	add	r0, sp, #24
 8009822:	4912      	ldr	r1, [pc, #72]	; (800986c <WM__Paint+0xac>)
 8009824:	aa03      	add	r2, sp, #12
 8009826:	2300      	movs	r3, #0
 8009828:	f000 fabc 	bl	8009da4 <GUI_MEMDEV_Draw>
 800982c:	2400      	movs	r4, #0
 800982e:	e003      	b.n	8009838 <WM__Paint+0x78>
 8009830:	9803      	ldr	r0, [sp, #12]
 8009832:	f7ff f9cd 	bl	8008bd0 <WM__PaintWinAndOverlays>
 8009836:	2401      	movs	r4, #1
 8009838:	9803      	ldr	r0, [sp, #12]
 800983a:	f005 f849 	bl	800e8d0 <GUI_ALLOC_LockH>
 800983e:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8009840:	9005      	str	r0, [sp, #20]
 8009842:	f421 4380 	bic.w	r3, r1, #16384	; 0x4000
 8009846:	f023 0220 	bic.w	r2, r3, #32
 800984a:	0489      	lsls	r1, r1, #18
 800984c:	bf48      	it	mi
 800984e:	f042 0204 	orrmi.w	r2, r2, #4
 8009852:	6282      	str	r2, [r0, #40]	; 0x28
 8009854:	a805      	add	r0, sp, #20
 8009856:	f005 f849 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800985a:	4805      	ldr	r0, [pc, #20]	; (8009870 <WM__Paint+0xb0>)
 800985c:	8801      	ldrh	r1, [r0, #0]
 800985e:	1e4b      	subs	r3, r1, #1
 8009860:	8003      	strh	r3, [r0, #0]
 8009862:	4620      	mov	r0, r4
 8009864:	b008      	add	sp, #32
 8009866:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800986a:	bf00      	nop
 800986c:	08008c45 	.word	0x08008c45
 8009870:	2000dd88 	.word	0x2000dd88

08009874 <WM_Exec>:
 8009874:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009878:	4b4b      	ldr	r3, [pc, #300]	; (80099a8 <WM_Exec+0x134>)
 800987a:	6818      	ldr	r0, [r3, #0]
 800987c:	b09f      	sub	sp, #124	; 0x7c
 800987e:	b100      	cbz	r0, 8009882 <WM_Exec+0xe>
 8009880:	4780      	blx	r0
 8009882:	2600      	movs	r6, #0
 8009884:	4949      	ldr	r1, [pc, #292]	; (80099ac <WM_Exec+0x138>)
 8009886:	680a      	ldr	r2, [r1, #0]
 8009888:	b1e2      	cbz	r2, 80098c4 <WM_Exec+0x50>
 800988a:	4c49      	ldr	r4, [pc, #292]	; (80099b0 <WM_Exec+0x13c>)
 800988c:	6824      	ldr	r4, [r4, #0]
 800988e:	b1bc      	cbz	r4, 80098c0 <WM_Exec+0x4c>
 8009890:	4620      	mov	r0, r4
 8009892:	f005 f81d 	bl	800e8d0 <GUI_ALLOC_LockH>
 8009896:	6a85      	ldr	r5, [r0, #40]	; 0x28
 8009898:	a91e      	add	r1, sp, #120	; 0x78
 800989a:	f415 4f00 	tst.w	r5, #32768	; 0x8000
 800989e:	f841 0d74 	str.w	r0, [r1, #-116]!
 80098a2:	6945      	ldr	r5, [r0, #20]
 80098a4:	d007      	beq.n	80098b6 <WM_Exec+0x42>
 80098a6:	4608      	mov	r0, r1
 80098a8:	f005 f820 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80098ac:	4620      	mov	r0, r4
 80098ae:	f7ff fcb7 	bl	8009220 <WM_DeleteWindow>
 80098b2:	462c      	mov	r4, r5
 80098b4:	e7eb      	b.n	800988e <WM_Exec+0x1a>
 80098b6:	4608      	mov	r0, r1
 80098b8:	462c      	mov	r4, r5
 80098ba:	f005 f817 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80098be:	e7e6      	b.n	800988e <WM_Exec+0x1a>
 80098c0:	4d3a      	ldr	r5, [pc, #232]	; (80099ac <WM_Exec+0x138>)
 80098c2:	602c      	str	r4, [r5, #0]
 80098c4:	4b3b      	ldr	r3, [pc, #236]	; (80099b4 <WM_Exec+0x140>)
 80098c6:	6818      	ldr	r0, [r3, #0]
 80098c8:	b100      	cbz	r0, 80098cc <WM_Exec+0x58>
 80098ca:	4780      	blx	r0
 80098cc:	493a      	ldr	r1, [pc, #232]	; (80099b8 <WM_Exec+0x144>)
 80098ce:	680a      	ldr	r2, [r1, #0]
 80098d0:	b92a      	cbnz	r2, 80098de <WM_Exec+0x6a>
 80098d2:	4c3a      	ldr	r4, [pc, #232]	; (80099bc <WM_Exec+0x148>)
 80098d4:	6825      	ldr	r5, [r4, #0]
 80098d6:	f895 3054 	ldrb.w	r3, [r5, #84]	; 0x54
 80098da:	b143      	cbz	r3, 80098ee <WM_Exec+0x7a>
 80098dc:	e003      	b.n	80098e6 <WM_Exec+0x72>
 80098de:	4790      	blx	r2
 80098e0:	2800      	cmp	r0, #0
 80098e2:	d0f6      	beq.n	80098d2 <WM_Exec+0x5e>
 80098e4:	e055      	b.n	8009992 <WM_Exec+0x11e>
 80098e6:	f003 fd65 	bl	800d3b4 <GUI_PollKeyMsg>
 80098ea:	2800      	cmp	r0, #0
 80098ec:	d151      	bne.n	8009992 <WM_Exec+0x11e>
 80098ee:	6820      	ldr	r0, [r4, #0]
 80098f0:	f890 5054 	ldrb.w	r5, [r0, #84]	; 0x54
 80098f4:	b14d      	cbz	r5, 800990a <WM_Exec+0x96>
 80098f6:	4932      	ldr	r1, [pc, #200]	; (80099c0 <WM_Exec+0x14c>)
 80098f8:	880d      	ldrh	r5, [r1, #0]
 80098fa:	b135      	cbz	r5, 800990a <WM_Exec+0x96>
 80098fc:	4a31      	ldr	r2, [pc, #196]	; (80099c4 <WM_Exec+0x150>)
 80098fe:	6815      	ldr	r5, [r2, #0]
 8009900:	2d00      	cmp	r5, #0
 8009902:	d048      	beq.n	8009996 <WM_Exec+0x122>
 8009904:	682b      	ldr	r3, [r5, #0]
 8009906:	4798      	blx	r3
 8009908:	2501      	movs	r5, #1
 800990a:	482c      	ldr	r0, [pc, #176]	; (80099bc <WM_Exec+0x148>)
 800990c:	6801      	ldr	r1, [r0, #0]
 800990e:	f891 2054 	ldrb.w	r2, [r1, #84]	; 0x54
 8009912:	b912      	cbnz	r2, 800991a <WM_Exec+0xa6>
 8009914:	2d00      	cmp	r5, #0
 8009916:	d133      	bne.n	8009980 <WM_Exec+0x10c>
 8009918:	e041      	b.n	800999e <WM_Exec+0x12a>
 800991a:	4b29      	ldr	r3, [pc, #164]	; (80099c0 <WM_Exec+0x14c>)
 800991c:	8818      	ldrh	r0, [r3, #0]
 800991e:	2800      	cmp	r0, #0
 8009920:	d0f8      	beq.n	8009914 <WM_Exec+0xa0>
 8009922:	4f29      	ldr	r7, [pc, #164]	; (80099c8 <WM_Exec+0x154>)
 8009924:	683c      	ldr	r4, [r7, #0]
 8009926:	b90c      	cbnz	r4, 800992c <WM_Exec+0xb8>
 8009928:	4c21      	ldr	r4, [pc, #132]	; (80099b0 <WM_Exec+0x13c>)
 800992a:	6824      	ldr	r4, [r4, #0]
 800992c:	a802      	add	r0, sp, #8
 800992e:	f003 fc4f 	bl	800d1d0 <GUI_SaveContext_W>
 8009932:	4922      	ldr	r1, [pc, #136]	; (80099bc <WM_Exec+0x148>)
 8009934:	680a      	ldr	r2, [r1, #0]
 8009936:	f8d2 8030 	ldr.w	r8, [r2, #48]	; 0x30
 800993a:	6b57      	ldr	r7, [r2, #52]	; 0x34
 800993c:	b924      	cbnz	r4, 8009948 <WM_Exec+0xd4>
 800993e:	2400      	movs	r4, #0
 8009940:	e00d      	b.n	800995e <WM_Exec+0xea>
 8009942:	f1b9 0f00 	cmp.w	r9, #0
 8009946:	d10a      	bne.n	800995e <WM_Exec+0xea>
 8009948:	4620      	mov	r0, r4
 800994a:	f7ff ff39 	bl	80097c0 <WM__Paint>
 800994e:	4681      	mov	r9, r0
 8009950:	4620      	mov	r0, r4
 8009952:	f004 ffb3 	bl	800e8bc <GUI_ALLOC_h2p>
 8009956:	6944      	ldr	r4, [r0, #20]
 8009958:	2c00      	cmp	r4, #0
 800995a:	d1f2      	bne.n	8009942 <WM_Exec+0xce>
 800995c:	e7ef      	b.n	800993e <WM_Exec+0xca>
 800995e:	4b1a      	ldr	r3, [pc, #104]	; (80099c8 <WM_Exec+0x154>)
 8009960:	4640      	mov	r0, r8
 8009962:	601c      	str	r4, [r3, #0]
 8009964:	f003 fbee 	bl	800d144 <GUI_SetColor>
 8009968:	4638      	mov	r0, r7
 800996a:	f003 fbe9 	bl	800d140 <GUI_SetBkColor>
 800996e:	a802      	add	r0, sp, #8
 8009970:	f003 fc38 	bl	800d1e4 <GUI_RestoreContext>
 8009974:	4812      	ldr	r0, [pc, #72]	; (80099c0 <WM_Exec+0x14c>)
 8009976:	8801      	ldrh	r1, [r0, #0]
 8009978:	2900      	cmp	r1, #0
 800997a:	d0cb      	beq.n	8009914 <WM_Exec+0xa0>
 800997c:	2601      	movs	r6, #1
 800997e:	e7c4      	b.n	800990a <WM_Exec+0x96>
 8009980:	4a10      	ldr	r2, [pc, #64]	; (80099c4 <WM_Exec+0x150>)
 8009982:	6810      	ldr	r0, [r2, #0]
 8009984:	b110      	cbz	r0, 800998c <WM_Exec+0x118>
 8009986:	6843      	ldr	r3, [r0, #4]
 8009988:	4798      	blx	r3
 800998a:	e008      	b.n	800999e <WM_Exec+0x12a>
 800998c:	f002 ff2c 	bl	800c7e8 <GUI__ManageCache>
 8009990:	e005      	b.n	800999e <WM_Exec+0x12a>
 8009992:	2601      	movs	r6, #1
 8009994:	e776      	b.n	8009884 <WM_Exec+0x10>
 8009996:	2001      	movs	r0, #1
 8009998:	f002 ff26 	bl	800c7e8 <GUI__ManageCache>
 800999c:	e7b4      	b.n	8009908 <WM_Exec+0x94>
 800999e:	4630      	mov	r0, r6
 80099a0:	b01f      	add	sp, #124	; 0x7c
 80099a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80099a6:	bf00      	nop
 80099a8:	2000dd7c 	.word	0x2000dd7c
 80099ac:	2000d7c4 	.word	0x2000d7c4
 80099b0:	2000dd8c 	.word	0x2000dd8c
 80099b4:	2000dd78 	.word	0x2000dd78
 80099b8:	2000ddec 	.word	0x2000ddec
 80099bc:	20000270 	.word	0x20000270
 80099c0:	2000dd88 	.word	0x2000dd88
 80099c4:	2000dda8 	.word	0x2000dda8
 80099c8:	2000d7e8 	.word	0x2000d7e8

080099cc <WM_Activate>:
 80099cc:	4b02      	ldr	r3, [pc, #8]	; (80099d8 <WM_Activate+0xc>)
 80099ce:	6818      	ldr	r0, [r3, #0]
 80099d0:	2201      	movs	r2, #1
 80099d2:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
 80099d6:	4770      	bx	lr
 80099d8:	20000270 	.word	0x20000270

080099dc <WM_Deactivate>:
 80099dc:	4b03      	ldr	r3, [pc, #12]	; (80099ec <WM_Deactivate+0x10>)
 80099de:	6818      	ldr	r0, [r3, #0]
 80099e0:	2200      	movs	r2, #0
 80099e2:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
 80099e6:	f002 bd27 	b.w	800c438 <LCD_SetClipRectMax>
 80099ea:	bf00      	nop
 80099ec:	20000270 	.word	0x20000270

080099f0 <WM_DefaultProc>:
 80099f0:	b510      	push	{r4, lr}
 80099f2:	4604      	mov	r4, r0
 80099f4:	6840      	ldr	r0, [r0, #4]
 80099f6:	6823      	ldr	r3, [r4, #0]
 80099f8:	68e1      	ldr	r1, [r4, #12]
 80099fa:	2b17      	cmp	r3, #23
 80099fc:	d00f      	beq.n	8009a1e <WM_DefaultProc+0x2e>
 80099fe:	dc06      	bgt.n	8009a0e <WM_DefaultProc+0x1e>
 8009a00:	2b0e      	cmp	r3, #14
 8009a02:	d00e      	beq.n	8009a22 <WM_DefaultProc+0x32>
 8009a04:	2b14      	cmp	r3, #20
 8009a06:	d114      	bne.n	8009a32 <WM_DefaultProc+0x42>
 8009a08:	f7fe fec5 	bl	8008796 <WM__GetClientRectEx>
 8009a0c:	e011      	b.n	8009a32 <WM_DefaultProc+0x42>
 8009a0e:	2b22      	cmp	r3, #34	; 0x22
 8009a10:	d00c      	beq.n	8009a2c <WM_DefaultProc+0x3c>
 8009a12:	2b28      	cmp	r3, #40	; 0x28
 8009a14:	d10d      	bne.n	8009a32 <WM_DefaultProc+0x42>
 8009a16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009a1a:	f7ff bbbf 	b.w	800919c <WM_InvalidateWindow>
 8009a1e:	60e0      	str	r0, [r4, #12]
 8009a20:	bd10      	pop	{r4, pc}
 8009a22:	4621      	mov	r1, r4
 8009a24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009a28:	f006 bd88 	b.w	801053c <WM_SendToParent>
 8009a2c:	f06f 4070 	mvn.w	r0, #4026531840	; 0xf0000000
 8009a30:	e000      	b.n	8009a34 <WM_DefaultProc+0x44>
 8009a32:	2000      	movs	r0, #0
 8009a34:	60e0      	str	r0, [r4, #12]
 8009a36:	bd10      	pop	{r4, pc}

08009a38 <cbBackWin>:
 8009a38:	6803      	ldr	r3, [r0, #0]
 8009a3a:	2b0e      	cmp	r3, #14
 8009a3c:	b510      	push	{r4, lr}
 8009a3e:	4604      	mov	r4, r0
 8009a40:	d002      	beq.n	8009a48 <cbBackWin+0x10>
 8009a42:	2b0f      	cmp	r3, #15
 8009a44:	d121      	bne.n	8009a8a <cbBackWin+0x52>
 8009a46:	e008      	b.n	8009a5a <cbBackWin+0x22>
 8009a48:	68c3      	ldr	r3, [r0, #12]
 8009a4a:	6858      	ldr	r0, [r3, #4]
 8009a4c:	2801      	cmp	r0, #1
 8009a4e:	d121      	bne.n	8009a94 <cbBackWin+0x5c>
 8009a50:	6818      	ldr	r0, [r3, #0]
 8009a52:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009a56:	f003 bca5 	b.w	800d3a4 <GUI_StoreKey>
 8009a5a:	4a0f      	ldr	r2, [pc, #60]	; (8009a98 <cbBackWin+0x60>)
 8009a5c:	6840      	ldr	r0, [r0, #4]
 8009a5e:	6811      	ldr	r1, [r2, #0]
 8009a60:	4288      	cmp	r0, r1
 8009a62:	d006      	beq.n	8009a72 <cbBackWin+0x3a>
 8009a64:	6853      	ldr	r3, [r2, #4]
 8009a66:	4298      	cmp	r0, r3
 8009a68:	bf14      	ite	ne
 8009a6a:	f04f 30ff 	movne.w	r0, #4294967295
 8009a6e:	2001      	moveq	r0, #1
 8009a70:	e000      	b.n	8009a74 <cbBackWin+0x3c>
 8009a72:	2000      	movs	r0, #0
 8009a74:	4a09      	ldr	r2, [pc, #36]	; (8009a9c <cbBackWin+0x64>)
 8009a76:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 8009a7a:	f06f 4170 	mvn.w	r1, #4026531840	; 0xf0000000
 8009a7e:	4288      	cmp	r0, r1
 8009a80:	d003      	beq.n	8009a8a <cbBackWin+0x52>
 8009a82:	f003 fb5d 	bl	800d140 <GUI_SetBkColor>
 8009a86:	f004 fb11 	bl	800e0ac <GUI_Clear>
 8009a8a:	4620      	mov	r0, r4
 8009a8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009a90:	f7ff bfae 	b.w	80099f0 <WM_DefaultProc>
 8009a94:	bd10      	pop	{r4, pc}
 8009a96:	bf00      	nop
 8009a98:	2000dd70 	.word	0x2000dd70
 8009a9c:	2000dd9c 	.word	0x2000dd9c

08009aa0 <WM_Init>:
 8009aa0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8009aa2:	4b2b      	ldr	r3, [pc, #172]	; (8009b50 <WM_Init+0xb0>)
 8009aa4:	7818      	ldrb	r0, [r3, #0]
 8009aa6:	2800      	cmp	r0, #0
 8009aa8:	d14f      	bne.n	8009b4a <WM_Init+0xaa>
 8009aaa:	492a      	ldr	r1, [pc, #168]	; (8009b54 <WM_Init+0xb4>)
 8009aac:	4a2a      	ldr	r2, [pc, #168]	; (8009b58 <WM_Init+0xb8>)
 8009aae:	4c2b      	ldr	r4, [pc, #172]	; (8009b5c <WM_Init+0xbc>)
 8009ab0:	6008      	str	r0, [r1, #0]
 8009ab2:	6010      	str	r0, [r2, #0]
 8009ab4:	6823      	ldr	r3, [r4, #0]
 8009ab6:	492a      	ldr	r1, [pc, #168]	; (8009b60 <WM_Init+0xc0>)
 8009ab8:	4a2a      	ldr	r2, [pc, #168]	; (8009b64 <WM_Init+0xc4>)
 8009aba:	6458      	str	r0, [r3, #68]	; 0x44
 8009abc:	8008      	strh	r0, [r1, #0]
 8009abe:	8010      	strh	r0, [r2, #0]
 8009ac0:	4604      	mov	r4, r0
 8009ac2:	4620      	mov	r0, r4
 8009ac4:	f004 f9e0 	bl	800de88 <GUI_DEVICE__GetpDriver>
 8009ac8:	b1c8      	cbz	r0, 8009afe <WM_Init+0x5e>
 8009aca:	4827      	ldr	r0, [pc, #156]	; (8009b68 <WM_Init+0xc8>)
 8009acc:	f643 72ff 	movw	r2, #16383	; 0x3fff
 8009ad0:	f04f 33ff 	mov.w	r3, #4294967295
 8009ad4:	f04f 0e02 	mov.w	lr, #2
 8009ad8:	9002      	str	r0, [sp, #8]
 8009ada:	2000      	movs	r0, #0
 8009adc:	e88d 4008 	stmia.w	sp, {r3, lr}
 8009ae0:	4601      	mov	r1, r0
 8009ae2:	4613      	mov	r3, r2
 8009ae4:	9003      	str	r0, [sp, #12]
 8009ae6:	f7ff fc15 	bl	8009314 <WM_CreateWindowAsChild>
 8009aea:	4b20      	ldr	r3, [pc, #128]	; (8009b6c <WM_Init+0xcc>)
 8009aec:	4a20      	ldr	r2, [pc, #128]	; (8009b70 <WM_Init+0xd0>)
 8009aee:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8009af2:	f06f 4170 	mvn.w	r1, #4026531840	; 0xf0000000
 8009af6:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8009afa:	f7ff fb4f 	bl	800919c <WM_InvalidateWindow>
 8009afe:	3401      	adds	r4, #1
 8009b00:	2c02      	cmp	r4, #2
 8009b02:	d1de      	bne.n	8009ac2 <WM_Init+0x22>
 8009b04:	481b      	ldr	r0, [pc, #108]	; (8009b74 <WM_Init+0xd4>)
 8009b06:	f006 fdb7 	bl	8010678 <WM__AddCriticalHandle>
 8009b0a:	481b      	ldr	r0, [pc, #108]	; (8009b78 <WM_Init+0xd8>)
 8009b0c:	f006 fdb4 	bl	8010678 <WM__AddCriticalHandle>
 8009b10:	481a      	ldr	r0, [pc, #104]	; (8009b7c <WM_Init+0xdc>)
 8009b12:	f006 fdb1 	bl	8010678 <WM__AddCriticalHandle>
 8009b16:	481a      	ldr	r0, [pc, #104]	; (8009b80 <WM_Init+0xe0>)
 8009b18:	f006 fdae 	bl	8010678 <WM__AddCriticalHandle>
 8009b1c:	4819      	ldr	r0, [pc, #100]	; (8009b84 <WM_Init+0xe4>)
 8009b1e:	f006 fdab 	bl	8010678 <WM__AddCriticalHandle>
 8009b22:	4819      	ldr	r0, [pc, #100]	; (8009b88 <WM_Init+0xe8>)
 8009b24:	f006 fda8 	bl	8010678 <WM__AddCriticalHandle>
 8009b28:	4810      	ldr	r0, [pc, #64]	; (8009b6c <WM_Init+0xcc>)
 8009b2a:	6800      	ldr	r0, [r0, #0]
 8009b2c:	f7ff fb58 	bl	80091e0 <WM_SelectWindow>
 8009b30:	f7ff ff4c 	bl	80099cc <WM_Activate>
 8009b34:	4b06      	ldr	r3, [pc, #24]	; (8009b50 <WM_Init+0xb0>)
 8009b36:	4815      	ldr	r0, [pc, #84]	; (8009b8c <WM_Init+0xec>)
 8009b38:	4a15      	ldr	r2, [pc, #84]	; (8009b90 <WM_Init+0xf0>)
 8009b3a:	2101      	movs	r1, #1
 8009b3c:	7019      	strb	r1, [r3, #0]
 8009b3e:	6002      	str	r2, [r0, #0]
 8009b40:	b004      	add	sp, #16
 8009b42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009b46:	f004 bac1 	b.w	800e0cc <GUI__RegisterExit>
 8009b4a:	b004      	add	sp, #16
 8009b4c:	bd10      	pop	{r4, pc}
 8009b4e:	bf00      	nop
 8009b50:	2000d7ec 	.word	0x2000d7ec
 8009b54:	2000dd8c 	.word	0x2000dd8c
 8009b58:	2000d7e8 	.word	0x2000d7e8
 8009b5c:	20000270 	.word	0x20000270
 8009b60:	2000dd88 	.word	0x2000dd88
 8009b64:	2000dd68 	.word	0x2000dd68
 8009b68:	08009a39 	.word	0x08009a39
 8009b6c:	2000dd70 	.word	0x2000dd70
 8009b70:	2000dd9c 	.word	0x2000dd9c
 8009b74:	2000decc 	.word	0x2000decc
 8009b78:	2000debc 	.word	0x2000debc
 8009b7c:	2000deac 	.word	0x2000deac
 8009b80:	2000ded4 	.word	0x2000ded4
 8009b84:	2000dec4 	.word	0x2000dec4
 8009b88:	2000deb4 	.word	0x2000deb4
 8009b8c:	2000d7c8 	.word	0x2000d7c8
 8009b90:	08008871 	.word	0x08008871

08009b94 <_CreateStaticDevice>:
 8009b94:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009b98:	b087      	sub	sp, #28
 8009b9a:	4604      	mov	r4, r0
 8009b9c:	f004 fe98 	bl	800e8d0 <GUI_ALLOC_LockH>
 8009ba0:	4603      	mov	r3, r0
 8009ba2:	a806      	add	r0, sp, #24
 8009ba4:	f9b3 6004 	ldrsh.w	r6, [r3, #4]
 8009ba8:	f9b3 7000 	ldrsh.w	r7, [r3]
 8009bac:	f9b3 5006 	ldrsh.w	r5, [r3, #6]
 8009bb0:	f9b3 8002 	ldrsh.w	r8, [r3, #2]
 8009bb4:	f840 3d04 	str.w	r3, [r0, #-4]!
 8009bb8:	f8d3 9024 	ldr.w	r9, [r3, #36]	; 0x24
 8009bbc:	f004 fe96 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8009bc0:	1bf0      	subs	r0, r6, r7
 8009bc2:	1c46      	adds	r6, r0, #1
 8009bc4:	ebc8 0105 	rsb	r1, r8, r5
 8009bc8:	1c4d      	adds	r5, r1, #1
 8009bca:	2e00      	cmp	r6, #0
 8009bcc:	dd4b      	ble.n	8009c66 <_CreateStaticDevice+0xd2>
 8009bce:	2d00      	cmp	r5, #0
 8009bd0:	dd49      	ble.n	8009c66 <_CreateStaticDevice+0xd2>
 8009bd2:	f1b9 0f00 	cmp.w	r9, #0
 8009bd6:	d048      	beq.n	8009c6a <_CreateStaticDevice+0xd6>
 8009bd8:	4648      	mov	r0, r9
 8009bda:	f004 fe79 	bl	800e8d0 <GUI_ALLOC_LockH>
 8009bde:	a906      	add	r1, sp, #24
 8009be0:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 8009be4:	f841 0d08 	str.w	r0, [r1, #-8]!
 8009be8:	88c5      	ldrh	r5, [r0, #6]
 8009bea:	4608      	mov	r0, r1
 8009bec:	f004 fe7e 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8009bf0:	42be      	cmp	r6, r7
 8009bf2:	d102      	bne.n	8009bfa <_CreateStaticDevice+0x66>
 8009bf4:	b22d      	sxth	r5, r5
 8009bf6:	4545      	cmp	r5, r8
 8009bf8:	d030      	beq.n	8009c5c <_CreateStaticDevice+0xc8>
 8009bfa:	4648      	mov	r0, r9
 8009bfc:	4639      	mov	r1, r7
 8009bfe:	4642      	mov	r2, r8
 8009c00:	f000 f884 	bl	8009d0c <GUI_MEMDEV_SetOrg>
 8009c04:	e02a      	b.n	8009c5c <_CreateStaticDevice+0xc8>
 8009c06:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8009c08:	f442 3380 	orr.w	r3, r2, #65536	; 0x10000
 8009c0c:	6283      	str	r3, [r0, #40]	; 0x28
 8009c0e:	4608      	mov	r0, r1
 8009c10:	f004 fe6c 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8009c14:	4638      	mov	r0, r7
 8009c16:	f000 ff5d 	bl	800aad4 <GUI_MEMDEV_Select>
 8009c1a:	4680      	mov	r8, r0
 8009c1c:	4648      	mov	r0, r9
 8009c1e:	f003 fa93 	bl	800d148 <GUI__AlphaSuppressMixing>
 8009c22:	4638      	mov	r0, r7
 8009c24:	fb05 f706 	mul.w	r7, r5, r6
 8009c28:	4e2c      	ldr	r6, [pc, #176]	; (8009cdc <_CreateStaticDevice+0x148>)
 8009c2a:	4d2d      	ldr	r5, [pc, #180]	; (8009ce0 <_CreateStaticDevice+0x14c>)
 8009c2c:	f000 f8ae 	bl	8009d8c <GUI_MEMDEV_GetDataPtr>
 8009c30:	7831      	ldrb	r1, [r6, #0]
 8009c32:	4e2c      	ldr	r6, [pc, #176]	; (8009ce4 <_CreateStaticDevice+0x150>)
 8009c34:	00ba      	lsls	r2, r7, #2
 8009c36:	f002 fcf9 	bl	800c62c <GUI__memset>
 8009c3a:	4620      	mov	r0, r4
 8009c3c:	682f      	ldr	r7, [r5, #0]
 8009c3e:	6034      	str	r4, [r6, #0]
 8009c40:	f006 fd06 	bl	8010650 <WM_GetWindowOrgX>
 8009c44:	6028      	str	r0, [r5, #0]
 8009c46:	4620      	mov	r0, r4
 8009c48:	f7ff fd72 	bl	8009730 <WM__Paint1>
 8009c4c:	2000      	movs	r0, #0
 8009c4e:	602f      	str	r7, [r5, #0]
 8009c50:	6030      	str	r0, [r6, #0]
 8009c52:	f003 fa79 	bl	800d148 <GUI__AlphaSuppressMixing>
 8009c56:	4640      	mov	r0, r8
 8009c58:	f000 ff3c 	bl	800aad4 <GUI_MEMDEV_Select>
 8009c5c:	4620      	mov	r0, r4
 8009c5e:	f004 fe2d 	bl	800e8bc <GUI_ALLOC_h2p>
 8009c62:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8009c64:	e037      	b.n	8009cd6 <_CreateStaticDevice+0x142>
 8009c66:	2000      	movs	r0, #0
 8009c68:	e035      	b.n	8009cd6 <_CreateStaticDevice+0x142>
 8009c6a:	f7fe fd7b 	bl	8008764 <WM_GetDesktopWindow>
 8009c6e:	4284      	cmp	r4, r0
 8009c70:	d112      	bne.n	8009c98 <_CreateStaticDevice+0x104>
 8009c72:	f002 f897 	bl	800bda4 <LCD_GetXSize>
 8009c76:	4681      	mov	r9, r0
 8009c78:	f002 f89c 	bl	800bdb4 <LCD_GetYSize>
 8009c7c:	454e      	cmp	r6, r9
 8009c7e:	dc02      	bgt.n	8009c86 <_CreateStaticDevice+0xf2>
 8009c80:	4285      	cmp	r5, r0
 8009c82:	dd09      	ble.n	8009c98 <_CreateStaticDevice+0x104>
 8009c84:	e000      	b.n	8009c88 <_CreateStaticDevice+0xf4>
 8009c86:	464e      	mov	r6, r9
 8009c88:	4285      	cmp	r5, r0
 8009c8a:	bfa8      	it	ge
 8009c8c:	4605      	movge	r5, r0
 8009c8e:	4631      	mov	r1, r6
 8009c90:	4620      	mov	r0, r4
 8009c92:	462a      	mov	r2, r5
 8009c94:	f7fe f9af 	bl	8007ff6 <WM_SetSize>
 8009c98:	4a13      	ldr	r2, [pc, #76]	; (8009ce8 <_CreateStaticDevice+0x154>)
 8009c9a:	4b14      	ldr	r3, [pc, #80]	; (8009cec <_CreateStaticDevice+0x158>)
 8009c9c:	9201      	str	r2, [sp, #4]
 8009c9e:	f04f 0901 	mov.w	r9, #1
 8009ca2:	4641      	mov	r1, r8
 8009ca4:	9302      	str	r3, [sp, #8]
 8009ca6:	4638      	mov	r0, r7
 8009ca8:	4632      	mov	r2, r6
 8009caa:	462b      	mov	r3, r5
 8009cac:	f8cd 9000 	str.w	r9, [sp]
 8009cb0:	f000 fe22 	bl	800a8f8 <GUI_MEMDEV__CreateFixed>
 8009cb4:	4607      	mov	r7, r0
 8009cb6:	4620      	mov	r0, r4
 8009cb8:	f004 fe0a 	bl	800e8d0 <GUI_ALLOC_LockH>
 8009cbc:	a906      	add	r1, sp, #24
 8009cbe:	6247      	str	r7, [r0, #36]	; 0x24
 8009cc0:	f841 0d04 	str.w	r0, [r1, #-4]!
 8009cc4:	2f00      	cmp	r7, #0
 8009cc6:	d19e      	bne.n	8009c06 <_CreateStaticDevice+0x72>
 8009cc8:	4608      	mov	r0, r1
 8009cca:	f004 fe0f 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8009cce:	4620      	mov	r0, r4
 8009cd0:	f7ff fd2e 	bl	8009730 <WM__Paint1>
 8009cd4:	4638      	mov	r0, r7
 8009cd6:	b007      	add	sp, #28
 8009cd8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009cdc:	20000250 	.word	0x20000250
 8009ce0:	2000ddc4 	.word	0x2000ddc4
 8009ce4:	2000ddb4 	.word	0x2000ddb4
 8009ce8:	080225a8 	.word	0x080225a8
 8009cec:	0802d168 	.word	0x0802d168

08009cf0 <GUI_MEMDEV_Paint1Static>:
 8009cf0:	b538      	push	{r3, r4, r5, lr}
 8009cf2:	4605      	mov	r5, r0
 8009cf4:	2405      	movs	r4, #5
 8009cf6:	4628      	mov	r0, r5
 8009cf8:	f7ff ff4c 	bl	8009b94 <_CreateStaticDevice>
 8009cfc:	b910      	cbnz	r0, 8009d04 <GUI_MEMDEV_Paint1Static+0x14>
 8009cfe:	3c01      	subs	r4, #1
 8009d00:	d1f9      	bne.n	8009cf6 <GUI_MEMDEV_Paint1Static+0x6>
 8009d02:	bd38      	pop	{r3, r4, r5, pc}
 8009d04:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009d08:	f007 b9da 	b.w	80110c0 <GUI_MEMDEV_Write>

08009d0c <GUI_MEMDEV_SetOrg>:
 8009d0c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009d0e:	460d      	mov	r5, r1
 8009d10:	4614      	mov	r4, r2
 8009d12:	b918      	cbnz	r0, 8009d1c <GUI_MEMDEV_SetOrg+0x10>
 8009d14:	4b11      	ldr	r3, [pc, #68]	; (8009d5c <GUI_MEMDEV_SetOrg+0x50>)
 8009d16:	6818      	ldr	r0, [r3, #0]
 8009d18:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8009d1a:	b1e8      	cbz	r0, 8009d58 <GUI_MEMDEV_SetOrg+0x4c>
 8009d1c:	f004 fdd8 	bl	800e8d0 <GUI_ALLOC_LockH>
 8009d20:	b2a4      	uxth	r4, r4
 8009d22:	b2ad      	uxth	r5, r5
 8009d24:	80c4      	strh	r4, [r0, #6]
 8009d26:	8085      	strh	r5, [r0, #4]
 8009d28:	9000      	str	r0, [sp, #0]
 8009d2a:	f002 fb85 	bl	800c438 <LCD_SetClipRectMax>
 8009d2e:	9900      	ldr	r1, [sp, #0]
 8009d30:	6948      	ldr	r0, [r1, #20]
 8009d32:	b170      	cbz	r0, 8009d52 <GUI_MEMDEV_SetOrg+0x46>
 8009d34:	f004 fdcc 	bl	800e8d0 <GUI_ALLOC_LockH>
 8009d38:	9b00      	ldr	r3, [sp, #0]
 8009d3a:	9001      	str	r0, [sp, #4]
 8009d3c:	891a      	ldrh	r2, [r3, #8]
 8009d3e:	8959      	ldrh	r1, [r3, #10]
 8009d40:	8082      	strh	r2, [r0, #4]
 8009d42:	80c1      	strh	r1, [r0, #6]
 8009d44:	b112      	cbz	r2, 8009d4c <GUI_MEMDEV_SetOrg+0x40>
 8009d46:	b109      	cbz	r1, 8009d4c <GUI_MEMDEV_SetOrg+0x40>
 8009d48:	8005      	strh	r5, [r0, #0]
 8009d4a:	8044      	strh	r4, [r0, #2]
 8009d4c:	a801      	add	r0, sp, #4
 8009d4e:	f004 fdcd 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8009d52:	4668      	mov	r0, sp
 8009d54:	f004 fdca 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8009d58:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 8009d5a:	bf00      	nop
 8009d5c:	20000270 	.word	0x20000270

08009d60 <GUI_MEMDEV_GetYSize>:
 8009d60:	b513      	push	{r0, r1, r4, lr}
 8009d62:	b920      	cbnz	r0, 8009d6e <GUI_MEMDEV_GetYSize+0xe>
 8009d64:	4b08      	ldr	r3, [pc, #32]	; (8009d88 <GUI_MEMDEV_GetYSize+0x28>)
 8009d66:	6818      	ldr	r0, [r3, #0]
 8009d68:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8009d6a:	4604      	mov	r4, r0
 8009d6c:	b148      	cbz	r0, 8009d82 <GUI_MEMDEV_GetYSize+0x22>
 8009d6e:	f004 fdaf 	bl	800e8d0 <GUI_ALLOC_LockH>
 8009d72:	a902      	add	r1, sp, #8
 8009d74:	f9b0 400a 	ldrsh.w	r4, [r0, #10]
 8009d78:	f841 0d04 	str.w	r0, [r1, #-4]!
 8009d7c:	4608      	mov	r0, r1
 8009d7e:	f004 fdb5 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8009d82:	4620      	mov	r0, r4
 8009d84:	bd1c      	pop	{r2, r3, r4, pc}
 8009d86:	bf00      	nop
 8009d88:	20000270 	.word	0x20000270

08009d8c <GUI_MEMDEV_GetDataPtr>:
 8009d8c:	b513      	push	{r0, r1, r4, lr}
 8009d8e:	f004 fd9f 	bl	800e8d0 <GUI_ALLOC_LockH>
 8009d92:	4604      	mov	r4, r0
 8009d94:	a802      	add	r0, sp, #8
 8009d96:	f840 4d04 	str.w	r4, [r0, #-4]!
 8009d9a:	f004 fda7 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8009d9e:	f104 0018 	add.w	r0, r4, #24
 8009da2:	bd1c      	pop	{r2, r3, r4, pc}

08009da4 <GUI_MEMDEV_Draw>:
 8009da4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009da8:	461e      	mov	r6, r3
 8009daa:	4b46      	ldr	r3, [pc, #280]	; (8009ec4 <GUI_MEMDEV_Draw+0x120>)
 8009dac:	b087      	sub	sp, #28
 8009dae:	4604      	mov	r4, r0
 8009db0:	6818      	ldr	r0, [r3, #0]
 8009db2:	9102      	str	r1, [sp, #8]
 8009db4:	7c45      	ldrb	r5, [r0, #17]
 8009db6:	4944      	ldr	r1, [pc, #272]	; (8009ec8 <GUI_MEMDEV_Draw+0x124>)
 8009db8:	4693      	mov	fp, r2
 8009dba:	574a      	ldrsb	r2, [r1, r5]
 8009dbc:	2a01      	cmp	r2, #1
 8009dbe:	4628      	mov	r0, r5
 8009dc0:	dd06      	ble.n	8009dd0 <GUI_MEMDEV_Draw+0x2c>
 8009dc2:	f001 ffdc 	bl	800bd7e <LCD_GetXSizeEx>
 8009dc6:	4680      	mov	r8, r0
 8009dc8:	4628      	mov	r0, r5
 8009dca:	f001 ffdb 	bl	800bd84 <LCD_GetYSizeEx>
 8009dce:	e005      	b.n	8009ddc <GUI_MEMDEV_Draw+0x38>
 8009dd0:	f001 ffdb 	bl	800bd8a <LCD_GetVXSizeEx>
 8009dd4:	4680      	mov	r8, r0
 8009dd6:	4628      	mov	r0, r5
 8009dd8:	f001 ffda 	bl	800bd90 <LCD_GetVYSizeEx>
 8009ddc:	4605      	mov	r5, r0
 8009dde:	b32c      	cbz	r4, 8009e2c <GUI_MEMDEV_Draw+0x88>
 8009de0:	a804      	add	r0, sp, #16
 8009de2:	a905      	add	r1, sp, #20
 8009de4:	f003 fb56 	bl	800d494 <GUI_GetOrg>
 8009de8:	9b04      	ldr	r3, [sp, #16]
 8009dea:	f9b4 9000 	ldrsh.w	r9, [r4]
 8009dee:	f9b4 7002 	ldrsh.w	r7, [r4, #2]
 8009df2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8009df6:	eb08 0103 	add.w	r1, r8, r3
 8009dfa:	9b05      	ldr	r3, [sp, #20]
 8009dfc:	1e4a      	subs	r2, r1, #1
 8009dfe:	18ed      	adds	r5, r5, r3
 8009e00:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8009e04:	1e6b      	subs	r3, r5, #1
 8009e06:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8009e0a:	ea27 77e7 	bic.w	r7, r7, r7, asr #31
 8009e0e:	4282      	cmp	r2, r0
 8009e10:	bfd4      	ite	le
 8009e12:	ebc9 0002 	rsble	r0, r9, r2
 8009e16:	ebc9 0000 	rsbgt	r0, r9, r0
 8009e1a:	428b      	cmp	r3, r1
 8009e1c:	bfd4      	ite	le
 8009e1e:	ebc7 0103 	rsble	r1, r7, r3
 8009e22:	ebc7 0101 	rsbgt	r1, r7, r1
 8009e26:	1c42      	adds	r2, r0, #1
 8009e28:	1c4d      	adds	r5, r1, #1
 8009e2a:	e002      	b.n	8009e32 <GUI_MEMDEV_Draw+0x8e>
 8009e2c:	4642      	mov	r2, r8
 8009e2e:	4627      	mov	r7, r4
 8009e30:	46a1      	mov	r9, r4
 8009e32:	b906      	cbnz	r6, 8009e36 <GUI_MEMDEV_Draw+0x92>
 8009e34:	426e      	negs	r6, r5
 8009e36:	2a00      	cmp	r2, #0
 8009e38:	dd3f      	ble.n	8009eba <GUI_MEMDEV_Draw+0x116>
 8009e3a:	2d00      	cmp	r5, #0
 8009e3c:	dd3d      	ble.n	8009eba <GUI_MEMDEV_Draw+0x116>
 8009e3e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8009e40:	4648      	mov	r0, r9
 8009e42:	9400      	str	r4, [sp, #0]
 8009e44:	4639      	mov	r1, r7
 8009e46:	4633      	mov	r3, r6
 8009e48:	f000 fe0a 	bl	800aa60 <GUI_MEMDEV_CreateEx>
 8009e4c:	4604      	mov	r4, r0
 8009e4e:	b920      	cbnz	r0, 8009e5a <GUI_MEMDEV_Draw+0xb6>
 8009e50:	4658      	mov	r0, fp
 8009e52:	9a02      	ldr	r2, [sp, #8]
 8009e54:	4790      	blx	r2
 8009e56:	2001      	movs	r0, #1
 8009e58:	e030      	b.n	8009ebc <GUI_MEMDEV_Draw+0x118>
 8009e5a:	f7ff ff81 	bl	8009d60 <GUI_MEMDEV_GetYSize>
 8009e5e:	4682      	mov	sl, r0
 8009e60:	f1ca 0600 	rsb	r6, sl, #0
 8009e64:	4620      	mov	r0, r4
 8009e66:	f000 fe35 	bl	800aad4 <GUI_MEMDEV_Select>
 8009e6a:	46a8      	mov	r8, r5
 8009e6c:	9603      	str	r6, [sp, #12]
 8009e6e:	2600      	movs	r6, #0
 8009e70:	45d0      	cmp	r8, sl
 8009e72:	da03      	bge.n	8009e7c <GUI_MEMDEV_Draw+0xd8>
 8009e74:	4620      	mov	r0, r4
 8009e76:	4641      	mov	r1, r8
 8009e78:	f007 fa1e 	bl	80112b8 <GUI_MEMDEV_ReduceYSize>
 8009e7c:	b13e      	cbz	r6, 8009e8e <GUI_MEMDEV_Draw+0xea>
 8009e7e:	4620      	mov	r0, r4
 8009e80:	4649      	mov	r1, r9
 8009e82:	19f2      	adds	r2, r6, r7
 8009e84:	f7ff ff42 	bl	8009d0c <GUI_MEMDEV_SetOrg>
 8009e88:	4620      	mov	r0, r4
 8009e8a:	f007 fa2b 	bl	80112e4 <GUI_MEMDEV_Clear>
 8009e8e:	4658      	mov	r0, fp
 8009e90:	9a02      	ldr	r2, [sp, #8]
 8009e92:	4790      	blx	r2
 8009e94:	4b0d      	ldr	r3, [pc, #52]	; (8009ecc <GUI_MEMDEV_Draw+0x128>)
 8009e96:	6819      	ldr	r1, [r3, #0]
 8009e98:	b109      	cbz	r1, 8009e9e <GUI_MEMDEV_Draw+0xfa>
 8009e9a:	2000      	movs	r0, #0
 8009e9c:	4788      	blx	r1
 8009e9e:	4620      	mov	r0, r4
 8009ea0:	f000 fe90 	bl	800abc4 <GUI_MEMDEV_CopyToLCD>
 8009ea4:	4456      	add	r6, sl
 8009ea6:	9803      	ldr	r0, [sp, #12]
 8009ea8:	42ae      	cmp	r6, r5
 8009eaa:	4480      	add	r8, r0
 8009eac:	dbe0      	blt.n	8009e70 <GUI_MEMDEV_Draw+0xcc>
 8009eae:	4620      	mov	r0, r4
 8009eb0:	f000 fdb4 	bl	800aa1c <GUI_MEMDEV_Delete>
 8009eb4:	2000      	movs	r0, #0
 8009eb6:	f000 fe0d 	bl	800aad4 <GUI_MEMDEV_Select>
 8009eba:	2000      	movs	r0, #0
 8009ebc:	b007      	add	sp, #28
 8009ebe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009ec2:	bf00      	nop
 8009ec4:	20000270 	.word	0x20000270
 8009ec8:	2000ddbc 	.word	0x2000ddbc
 8009ecc:	2000d7f0 	.word	0x2000d7f0

08009ed0 <_GetDevData>:
 8009ed0:	4802      	ldr	r0, [pc, #8]	; (8009edc <_GetDevData+0xc>)
 8009ed2:	2901      	cmp	r1, #1
 8009ed4:	bf18      	it	ne
 8009ed6:	2000      	movne	r0, #0
 8009ed8:	4770      	bx	lr
 8009eda:	bf00      	nop
 8009edc:	080225a8 	.word	0x080225a8

08009ee0 <_GetDevFunc>:
 8009ee0:	4802      	ldr	r0, [pc, #8]	; (8009eec <_GetDevFunc+0xc>)
 8009ee2:	2916      	cmp	r1, #22
 8009ee4:	bf18      	it	ne
 8009ee6:	2000      	movne	r0, #0
 8009ee8:	4770      	bx	lr
 8009eea:	bf00      	nop
 8009eec:	08010ed1 	.word	0x08010ed1

08009ef0 <_GetDevProp>:
 8009ef0:	2908      	cmp	r1, #8
 8009ef2:	bf0c      	ite	eq
 8009ef4:	2020      	moveq	r0, #32
 8009ef6:	2000      	movne	r0, #0
 8009ef8:	4770      	bx	lr

08009efa <_SetOrg>:
 8009efa:	6800      	ldr	r0, [r0, #0]
 8009efc:	b508      	push	{r3, lr}
 8009efe:	68c3      	ldr	r3, [r0, #12]
 8009f00:	6a1b      	ldr	r3, [r3, #32]
 8009f02:	4798      	blx	r3
 8009f04:	bd08      	pop	{r3, pc}

08009f06 <_GetRect>:
 8009f06:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009f08:	6880      	ldr	r0, [r0, #8]
 8009f0a:	460c      	mov	r4, r1
 8009f0c:	f004 fce0 	bl	800e8d0 <GUI_ALLOC_LockH>
 8009f10:	4603      	mov	r3, r0
 8009f12:	a802      	add	r0, sp, #8
 8009f14:	8899      	ldrh	r1, [r3, #4]
 8009f16:	891d      	ldrh	r5, [r3, #8]
 8009f18:	88da      	ldrh	r2, [r3, #6]
 8009f1a:	f840 3d04 	str.w	r3, [r0, #-4]!
 8009f1e:	895b      	ldrh	r3, [r3, #10]
 8009f20:	8021      	strh	r1, [r4, #0]
 8009f22:	1949      	adds	r1, r1, r5
 8009f24:	3901      	subs	r1, #1
 8009f26:	8062      	strh	r2, [r4, #2]
 8009f28:	18d2      	adds	r2, r2, r3
 8009f2a:	80a1      	strh	r1, [r4, #4]
 8009f2c:	1e51      	subs	r1, r2, #1
 8009f2e:	80e1      	strh	r1, [r4, #6]
 8009f30:	f004 fcdc 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8009f34:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
	...

08009f38 <_XY2PTR>:
 8009f38:	4b0e      	ldr	r3, [pc, #56]	; (8009f74 <_XY2PTR+0x3c>)
 8009f3a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009f3c:	4605      	mov	r5, r0
 8009f3e:	6818      	ldr	r0, [r3, #0]
 8009f40:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8009f42:	460e      	mov	r6, r1
 8009f44:	f004 fcc4 	bl	800e8d0 <GUI_ALLOC_LockH>
 8009f48:	4602      	mov	r2, r0
 8009f4a:	a802      	add	r0, sp, #8
 8009f4c:	f9b2 4006 	ldrsh.w	r4, [r2, #6]
 8009f50:	68d3      	ldr	r3, [r2, #12]
 8009f52:	f840 2d04 	str.w	r2, [r0, #-4]!
 8009f56:	f102 0118 	add.w	r1, r2, #24
 8009f5a:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 8009f5e:	1b36      	subs	r6, r6, r4
 8009f60:	fb03 1106 	mla	r1, r3, r6, r1
 8009f64:	1aad      	subs	r5, r5, r2
 8009f66:	eb01 0485 	add.w	r4, r1, r5, lsl #2
 8009f6a:	f004 fcbf 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8009f6e:	4620      	mov	r0, r4
 8009f70:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
 8009f72:	bf00      	nop
 8009f74:	20000270 	.word	0x20000270

08009f78 <_GetPixelIndex>:
 8009f78:	b508      	push	{r3, lr}
 8009f7a:	4608      	mov	r0, r1
 8009f7c:	4611      	mov	r1, r2
 8009f7e:	f7ff ffdb 	bl	8009f38 <_XY2PTR>
 8009f82:	6800      	ldr	r0, [r0, #0]
 8009f84:	bd08      	pop	{r3, pc}
	...

08009f88 <_XorPixel>:
 8009f88:	4b15      	ldr	r3, [pc, #84]	; (8009fe0 <_XorPixel+0x58>)
 8009f8a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009f8c:	6818      	ldr	r0, [r3, #0]
 8009f8e:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8009f90:	4615      	mov	r5, r2
 8009f92:	460e      	mov	r6, r1
 8009f94:	f004 fc9c 	bl	800e8d0 <GUI_ALLOC_LockH>
 8009f98:	4629      	mov	r1, r5
 8009f9a:	9000      	str	r0, [sp, #0]
 8009f9c:	4630      	mov	r0, r6
 8009f9e:	f7ff ffcb 	bl	8009f38 <_XY2PTR>
 8009fa2:	9900      	ldr	r1, [sp, #0]
 8009fa4:	680a      	ldr	r2, [r1, #0]
 8009fa6:	6913      	ldr	r3, [r2, #16]
 8009fa8:	4604      	mov	r4, r0
 8009faa:	6898      	ldr	r0, [r3, #8]
 8009fac:	4780      	blx	r0
 8009fae:	6821      	ldr	r1, [r4, #0]
 8009fb0:	9b00      	ldr	r3, [sp, #0]
 8009fb2:	ea81 0200 	eor.w	r2, r1, r0
 8009fb6:	6022      	str	r2, [r4, #0]
 8009fb8:	6958      	ldr	r0, [r3, #20]
 8009fba:	b160      	cbz	r0, 8009fd6 <_XorPixel+0x4e>
 8009fbc:	f004 fc88 	bl	800e8d0 <GUI_ALLOC_LockH>
 8009fc0:	ac02      	add	r4, sp, #8
 8009fc2:	6882      	ldr	r2, [r0, #8]
 8009fc4:	f844 0d04 	str.w	r0, [r4, #-4]!
 8009fc8:	6813      	ldr	r3, [r2, #0]
 8009fca:	4631      	mov	r1, r6
 8009fcc:	462a      	mov	r2, r5
 8009fce:	4798      	blx	r3
 8009fd0:	4620      	mov	r0, r4
 8009fd2:	f004 fc8b 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8009fd6:	4668      	mov	r0, sp
 8009fd8:	f004 fc88 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8009fdc:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
 8009fde:	bf00      	nop
 8009fe0:	20000270 	.word	0x20000270

08009fe4 <_SetPixelIndex>:
 8009fe4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009fe6:	461c      	mov	r4, r3
 8009fe8:	4b10      	ldr	r3, [pc, #64]	; (800a02c <_SetPixelIndex+0x48>)
 8009fea:	6818      	ldr	r0, [r3, #0]
 8009fec:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8009fee:	460e      	mov	r6, r1
 8009ff0:	4615      	mov	r5, r2
 8009ff2:	f004 fc6d 	bl	800e8d0 <GUI_ALLOC_LockH>
 8009ff6:	4629      	mov	r1, r5
 8009ff8:	9000      	str	r0, [sp, #0]
 8009ffa:	4630      	mov	r0, r6
 8009ffc:	f7ff ff9c 	bl	8009f38 <_XY2PTR>
 800a000:	9900      	ldr	r1, [sp, #0]
 800a002:	6004      	str	r4, [r0, #0]
 800a004:	6948      	ldr	r0, [r1, #20]
 800a006:	b160      	cbz	r0, 800a022 <_SetPixelIndex+0x3e>
 800a008:	f004 fc62 	bl	800e8d0 <GUI_ALLOC_LockH>
 800a00c:	ac02      	add	r4, sp, #8
 800a00e:	6883      	ldr	r3, [r0, #8]
 800a010:	f844 0d04 	str.w	r0, [r4, #-4]!
 800a014:	681b      	ldr	r3, [r3, #0]
 800a016:	4631      	mov	r1, r6
 800a018:	462a      	mov	r2, r5
 800a01a:	4798      	blx	r3
 800a01c:	4620      	mov	r0, r4
 800a01e:	f004 fc65 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800a022:	4668      	mov	r0, sp
 800a024:	f004 fc62 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800a028:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
 800a02a:	bf00      	nop
 800a02c:	20000270 	.word	0x20000270

0800a030 <_DrawVLine>:
 800a030:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a034:	461e      	mov	r6, r3
 800a036:	4b2b      	ldr	r3, [pc, #172]	; (800a0e4 <_DrawVLine+0xb4>)
 800a038:	6818      	ldr	r0, [r3, #0]
 800a03a:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800a03c:	460f      	mov	r7, r1
 800a03e:	4614      	mov	r4, r2
 800a040:	f004 fc46 	bl	800e8d0 <GUI_ALLOC_LockH>
 800a044:	9000      	str	r0, [sp, #0]
 800a046:	6940      	ldr	r0, [r0, #20]
 800a048:	b108      	cbz	r0, 800a04e <_DrawVLine+0x1e>
 800a04a:	f004 fc41 	bl	800e8d0 <GUI_ALLOC_LockH>
 800a04e:	9001      	str	r0, [sp, #4]
 800a050:	4621      	mov	r1, r4
 800a052:	4638      	mov	r0, r7
 800a054:	f7ff ff70 	bl	8009f38 <_XY2PTR>
 800a058:	4a22      	ldr	r2, [pc, #136]	; (800a0e4 <_DrawVLine+0xb4>)
 800a05a:	9b00      	ldr	r3, [sp, #0]
 800a05c:	4605      	mov	r5, r0
 800a05e:	6810      	ldr	r0, [r2, #0]
 800a060:	f8d3 800c 	ldr.w	r8, [r3, #12]
 800a064:	7c02      	ldrb	r2, [r0, #16]
 800a066:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
 800a068:	07d2      	lsls	r2, r2, #31
 800a06a:	f8d1 9000 	ldr.w	r9, [r1]
 800a06e:	d51f      	bpl.n	800a0b0 <_DrawVLine+0x80>
 800a070:	6818      	ldr	r0, [r3, #0]
 800a072:	6902      	ldr	r2, [r0, #16]
 800a074:	6891      	ldr	r1, [r2, #8]
 800a076:	4788      	blx	r1
 800a078:	4680      	mov	r8, r0
 800a07a:	9801      	ldr	r0, [sp, #4]
 800a07c:	b128      	cbz	r0, 800a08a <_DrawVLine+0x5a>
 800a07e:	6883      	ldr	r3, [r0, #8]
 800a080:	4639      	mov	r1, r7
 800a082:	f8d3 c000 	ldr.w	ip, [r3]
 800a086:	4622      	mov	r2, r4
 800a088:	47e0      	blx	ip
 800a08a:	9900      	ldr	r1, [sp, #0]
 800a08c:	6828      	ldr	r0, [r5, #0]
 800a08e:	68cb      	ldr	r3, [r1, #12]
 800a090:	3401      	adds	r4, #1
 800a092:	ea80 0208 	eor.w	r2, r0, r8
 800a096:	42b4      	cmp	r4, r6
 800a098:	602a      	str	r2, [r5, #0]
 800a09a:	441d      	add	r5, r3
 800a09c:	dded      	ble.n	800a07a <_DrawVLine+0x4a>
 800a09e:	4668      	mov	r0, sp
 800a0a0:	f004 fc24 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800a0a4:	9801      	ldr	r0, [sp, #4]
 800a0a6:	b1d0      	cbz	r0, 800a0de <_DrawVLine+0xae>
 800a0a8:	a801      	add	r0, sp, #4
 800a0aa:	f004 fc1f 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800a0ae:	e016      	b.n	800a0de <_DrawVLine+0xae>
 800a0b0:	9b01      	ldr	r3, [sp, #4]
 800a0b2:	b163      	cbz	r3, 800a0ce <_DrawVLine+0x9e>
 800a0b4:	9801      	ldr	r0, [sp, #4]
 800a0b6:	6881      	ldr	r1, [r0, #8]
 800a0b8:	4622      	mov	r2, r4
 800a0ba:	680b      	ldr	r3, [r1, #0]
 800a0bc:	3401      	adds	r4, #1
 800a0be:	4639      	mov	r1, r7
 800a0c0:	4798      	blx	r3
 800a0c2:	42b4      	cmp	r4, r6
 800a0c4:	f8c5 9000 	str.w	r9, [r5]
 800a0c8:	4445      	add	r5, r8
 800a0ca:	ddf3      	ble.n	800a0b4 <_DrawVLine+0x84>
 800a0cc:	e7e7      	b.n	800a09e <_DrawVLine+0x6e>
 800a0ce:	1b34      	subs	r4, r6, r4
 800a0d0:	3401      	adds	r4, #1
 800a0d2:	3c01      	subs	r4, #1
 800a0d4:	f8c5 9000 	str.w	r9, [r5]
 800a0d8:	4445      	add	r5, r8
 800a0da:	d1fa      	bne.n	800a0d2 <_DrawVLine+0xa2>
 800a0dc:	e7df      	b.n	800a09e <_DrawVLine+0x6e>
 800a0de:	e8bd 83fe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
 800a0e2:	bf00      	nop
 800a0e4:	20000270 	.word	0x20000270

0800a0e8 <_FillRect>:
 800a0e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a0ec:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800a1a0 <_FillRect+0xb8>
 800a0f0:	4614      	mov	r4, r2
 800a0f2:	f8d8 2000 	ldr.w	r2, [r8]
 800a0f6:	b085      	sub	sp, #20
 800a0f8:	6e10      	ldr	r0, [r2, #96]	; 0x60
 800a0fa:	f8dd 9038 	ldr.w	r9, [sp, #56]	; 0x38
 800a0fe:	461d      	mov	r5, r3
 800a100:	460f      	mov	r7, r1
 800a102:	f004 fbe5 	bl	800e8d0 <GUI_ALLOC_LockH>
 800a106:	4621      	mov	r1, r4
 800a108:	9002      	str	r0, [sp, #8]
 800a10a:	4638      	mov	r0, r7
 800a10c:	f7ff ff14 	bl	8009f38 <_XY2PTR>
 800a110:	f8d8 3000 	ldr.w	r3, [r8]
 800a114:	4606      	mov	r6, r0
 800a116:	9802      	ldr	r0, [sp, #8]
 800a118:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800a11a:	f8d0 a00c 	ldr.w	sl, [r0, #12]
 800a11e:	6940      	ldr	r0, [r0, #20]
 800a120:	f8d2 b000 	ldr.w	fp, [r2]
 800a124:	1be9      	subs	r1, r5, r7
 800a126:	1c4d      	adds	r5, r1, #1
 800a128:	b338      	cbz	r0, 800a17a <_FillRect+0x92>
 800a12a:	f004 fbd1 	bl	800e8d0 <GUI_ALLOC_LockH>
 800a12e:	f10d 0810 	add.w	r8, sp, #16
 800a132:	ebc4 0109 	rsb	r1, r4, r9
 800a136:	f848 0d04 	str.w	r0, [r8, #-4]!
 800a13a:	1c4b      	adds	r3, r1, #1
 800a13c:	9300      	str	r3, [sp, #0]
 800a13e:	4639      	mov	r1, r7
 800a140:	4622      	mov	r2, r4
 800a142:	462b      	mov	r3, r5
 800a144:	f007 f8a3 	bl	801128e <GUI_USAGE_AddRect>
 800a148:	4640      	mov	r0, r8
 800a14a:	f004 fbcf 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800a14e:	e014      	b.n	800a17a <_FillRect+0x92>
 800a150:	4813      	ldr	r0, [pc, #76]	; (800a1a0 <_FillRect+0xb8>)
 800a152:	6802      	ldr	r2, [r0, #0]
 800a154:	7c11      	ldrb	r1, [r2, #16]
 800a156:	07c9      	lsls	r1, r1, #31
 800a158:	d512      	bpl.n	800a180 <_FillRect+0x98>
 800a15a:	9a02      	ldr	r2, [sp, #8]
 800a15c:	6811      	ldr	r1, [r2, #0]
 800a15e:	6908      	ldr	r0, [r1, #16]
 800a160:	6883      	ldr	r3, [r0, #8]
 800a162:	4798      	blx	r3
 800a164:	4632      	mov	r2, r6
 800a166:	462b      	mov	r3, r5
 800a168:	6811      	ldr	r1, [r2, #0]
 800a16a:	3b01      	subs	r3, #1
 800a16c:	ea81 0100 	eor.w	r1, r1, r0
 800a170:	f842 1b04 	str.w	r1, [r2], #4
 800a174:	d1f8      	bne.n	800a168 <_FillRect+0x80>
 800a176:	4456      	add	r6, sl
 800a178:	3401      	adds	r4, #1
 800a17a:	454c      	cmp	r4, r9
 800a17c:	dde8      	ble.n	800a150 <_FillRect+0x68>
 800a17e:	e008      	b.n	800a192 <_FillRect+0xaa>
 800a180:	2d00      	cmp	r5, #0
 800a182:	ddf8      	ble.n	800a176 <_FillRect+0x8e>
 800a184:	462b      	mov	r3, r5
 800a186:	4630      	mov	r0, r6
 800a188:	3b01      	subs	r3, #1
 800a18a:	f840 bb04 	str.w	fp, [r0], #4
 800a18e:	d1fb      	bne.n	800a188 <_FillRect+0xa0>
 800a190:	e7f1      	b.n	800a176 <_FillRect+0x8e>
 800a192:	a802      	add	r0, sp, #8
 800a194:	f004 fbaa 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800a198:	b005      	add	sp, #20
 800a19a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a19e:	bf00      	nop
 800a1a0:	20000270 	.word	0x20000270

0800a1a4 <_DrawHLine>:
 800a1a4:	b507      	push	{r0, r1, r2, lr}
 800a1a6:	9200      	str	r2, [sp, #0]
 800a1a8:	f7ff ff9e 	bl	800a0e8 <_FillRect>
 800a1ac:	bd0e      	pop	{r1, r2, r3, pc}
	...

0800a1b0 <_DrawBitmap>:
 800a1b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a1b4:	469a      	mov	sl, r3
 800a1b6:	4b98      	ldr	r3, [pc, #608]	; (800a418 <_DrawBitmap+0x268>)
 800a1b8:	4681      	mov	r9, r0
 800a1ba:	6818      	ldr	r0, [r3, #0]
 800a1bc:	b093      	sub	sp, #76	; 0x4c
 800a1be:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800a1c0:	9208      	str	r2, [sp, #32]
 800a1c2:	460c      	mov	r4, r1
 800a1c4:	f8dd b07c 	ldr.w	fp, [sp, #124]	; 0x7c
 800a1c8:	9d21      	ldr	r5, [sp, #132]	; 0x84
 800a1ca:	2800      	cmp	r0, #0
 800a1cc:	f000 8372 	beq.w	800a8b4 <_DrawBitmap+0x704>
 800a1d0:	f004 fb7e 	bl	800e8d0 <GUI_ALLOC_LockH>
 800a1d4:	9010      	str	r0, [sp, #64]	; 0x40
 800a1d6:	6940      	ldr	r0, [r0, #20]
 800a1d8:	b108      	cbz	r0, 800a1de <_DrawBitmap+0x2e>
 800a1da:	f004 fb79 	bl	800e8d0 <GUI_ALLOC_LockH>
 800a1de:	9011      	str	r0, [sp, #68]	; 0x44
 800a1e0:	a812      	add	r0, sp, #72	; 0x48
 800a1e2:	f850 1d08 	ldr.w	r1, [r0, #-8]!
 800a1e6:	68ca      	ldr	r2, [r1, #12]
 800a1e8:	920c      	str	r2, [sp, #48]	; 0x30
 800a1ea:	f004 fb7f 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800a1ee:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800a1f0:	9811      	ldr	r0, [sp, #68]	; 0x44
 800a1f2:	18e4      	adds	r4, r4, r3
 800a1f4:	9405      	str	r4, [sp, #20]
 800a1f6:	b168      	cbz	r0, 800a214 <_DrawBitmap+0x64>
 800a1f8:	4987      	ldr	r1, [pc, #540]	; (800a418 <_DrawBitmap+0x268>)
 800a1fa:	680a      	ldr	r2, [r1, #0]
 800a1fc:	7c13      	ldrb	r3, [r2, #16]
 800a1fe:	f003 0102 	and.w	r1, r3, #2
 800a202:	b2ca      	uxtb	r2, r1
 800a204:	b932      	cbnz	r2, 800a214 <_DrawBitmap+0x64>
 800a206:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800a208:	9a08      	ldr	r2, [sp, #32]
 800a20a:	9300      	str	r3, [sp, #0]
 800a20c:	4621      	mov	r1, r4
 800a20e:	4653      	mov	r3, sl
 800a210:	f007 f83d 	bl	801128e <GUI_USAGE_AddRect>
 800a214:	9805      	ldr	r0, [sp, #20]
 800a216:	9908      	ldr	r1, [sp, #32]
 800a218:	f7ff fe8e 	bl	8009f38 <_XY2PTR>
 800a21c:	4680      	mov	r8, r0
 800a21e:	981d      	ldr	r0, [sp, #116]	; 0x74
 800a220:	2817      	cmp	r0, #23
 800a222:	dd5b      	ble.n	800a2dc <_DrawBitmap+0x12c>
 800a224:	ea4f 078a 	mov.w	r7, sl, lsl #2
 800a228:	9707      	str	r7, [sp, #28]
 800a22a:	2700      	movs	r7, #0
 800a22c:	991c      	ldr	r1, [sp, #112]	; 0x70
 800a22e:	9811      	ldr	r0, [sp, #68]	; 0x44
 800a230:	428f      	cmp	r7, r1
 800a232:	da4f      	bge.n	800a2d4 <_DrawBitmap+0x124>
 800a234:	b130      	cbz	r0, 800a244 <_DrawBitmap+0x94>
 800a236:	6883      	ldr	r3, [r0, #8]
 800a238:	9a08      	ldr	r2, [sp, #32]
 800a23a:	685c      	ldr	r4, [r3, #4]
 800a23c:	9905      	ldr	r1, [sp, #20]
 800a23e:	18ba      	adds	r2, r7, r2
 800a240:	4653      	mov	r3, sl
 800a242:	47a0      	blx	r4
 800a244:	f8d9 0010 	ldr.w	r0, [r9, #16]
 800a248:	68c1      	ldr	r1, [r0, #12]
 800a24a:	b129      	cbz	r1, 800a258 <_DrawBitmap+0xa8>
 800a24c:	4640      	mov	r0, r8
 800a24e:	4659      	mov	r1, fp
 800a250:	9a07      	ldr	r2, [sp, #28]
 800a252:	f7f5 ff99 	bl	8000188 <memcpy>
 800a256:	e037      	b.n	800a2c8 <_DrawBitmap+0x118>
 800a258:	4644      	mov	r4, r8
 800a25a:	4655      	mov	r5, sl
 800a25c:	465e      	mov	r6, fp
 800a25e:	1d33      	adds	r3, r6, #4
 800a260:	9306      	str	r3, [sp, #24]
 800a262:	461a      	mov	r2, r3
 800a264:	4629      	mov	r1, r5
 800a266:	f04f 0e00 	mov.w	lr, #0
 800a26a:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 800a26e:	b908      	cbnz	r0, 800a274 <_DrawBitmap+0xc4>
 800a270:	f10e 0e01 	add.w	lr, lr, #1
 800a274:	3901      	subs	r1, #1
 800a276:	b1a0      	cbz	r0, 800a2a2 <_DrawBitmap+0xf2>
 800a278:	f1be 0f00 	cmp.w	lr, #0
 800a27c:	d015      	beq.n	800a2aa <_DrawBitmap+0xfa>
 800a27e:	ea4f 038e 	mov.w	r3, lr, lsl #2
 800a282:	4620      	mov	r0, r4
 800a284:	4631      	mov	r1, r6
 800a286:	461a      	mov	r2, r3
 800a288:	9304      	str	r3, [sp, #16]
 800a28a:	f8cd e00c 	str.w	lr, [sp, #12]
 800a28e:	f7f5 ff7b 	bl	8000188 <memcpy>
 800a292:	9804      	ldr	r0, [sp, #16]
 800a294:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800a298:	1824      	adds	r4, r4, r0
 800a29a:	1836      	adds	r6, r6, r0
 800a29c:	ebcc 0505 	rsb	r5, ip, r5
 800a2a0:	e010      	b.n	800a2c4 <_DrawBitmap+0x114>
 800a2a2:	3204      	adds	r2, #4
 800a2a4:	2900      	cmp	r1, #0
 800a2a6:	d1e0      	bne.n	800a26a <_DrawBitmap+0xba>
 800a2a8:	e7e6      	b.n	800a278 <_DrawBitmap+0xc8>
 800a2aa:	6830      	ldr	r0, [r6, #0]
 800a2ac:	0e06      	lsrs	r6, r0, #24
 800a2ae:	2eff      	cmp	r6, #255	; 0xff
 800a2b0:	d005      	beq.n	800a2be <_DrawBitmap+0x10e>
 800a2b2:	43f3      	mvns	r3, r6
 800a2b4:	6821      	ldr	r1, [r4, #0]
 800a2b6:	b2da      	uxtb	r2, r3
 800a2b8:	f002 fcac 	bl	800cc14 <GUI__MixColors>
 800a2bc:	6020      	str	r0, [r4, #0]
 800a2be:	9e06      	ldr	r6, [sp, #24]
 800a2c0:	3404      	adds	r4, #4
 800a2c2:	3d01      	subs	r5, #1
 800a2c4:	2d00      	cmp	r5, #0
 800a2c6:	d1ca      	bne.n	800a25e <_DrawBitmap+0xae>
 800a2c8:	991e      	ldr	r1, [sp, #120]	; 0x78
 800a2ca:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800a2cc:	448b      	add	fp, r1
 800a2ce:	4490      	add	r8, r2
 800a2d0:	3701      	adds	r7, #1
 800a2d2:	e7ab      	b.n	800a22c <_DrawBitmap+0x7c>
 800a2d4:	2800      	cmp	r0, #0
 800a2d6:	f040 82ea 	bne.w	800a8ae <_DrawBitmap+0x6fe>
 800a2da:	e2eb      	b.n	800a8b4 <_DrawBitmap+0x704>
 800a2dc:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 800a2de:	2c10      	cmp	r4, #16
 800a2e0:	d137      	bne.n	800a352 <_DrawBitmap+0x1a2>
 800a2e2:	f10b 0702 	add.w	r7, fp, #2
 800a2e6:	f1a8 0804 	sub.w	r8, r8, #4
 800a2ea:	2500      	movs	r5, #0
 800a2ec:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800a2ee:	42a5      	cmp	r5, r4
 800a2f0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 800a2f2:	f280 8099 	bge.w	800a428 <_DrawBitmap+0x278>
 800a2f6:	9e08      	ldr	r6, [sp, #32]
 800a2f8:	19aa      	adds	r2, r5, r6
 800a2fa:	9207      	str	r2, [sp, #28]
 800a2fc:	b12c      	cbz	r4, 800a30a <_DrawBitmap+0x15a>
 800a2fe:	68a3      	ldr	r3, [r4, #8]
 800a300:	9905      	ldr	r1, [sp, #20]
 800a302:	685e      	ldr	r6, [r3, #4]
 800a304:	4620      	mov	r0, r4
 800a306:	4653      	mov	r3, sl
 800a308:	47b0      	blx	r6
 800a30a:	f8cd 8018 	str.w	r8, [sp, #24]
 800a30e:	46bb      	mov	fp, r7
 800a310:	4656      	mov	r6, sl
 800a312:	9a05      	ldr	r2, [sp, #20]
 800a314:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800a318:	eb02 000a 	add.w	r0, r2, sl
 800a31c:	1b81      	subs	r1, r0, r6
 800a31e:	685a      	ldr	r2, [r3, #4]
 800a320:	f83b 0c02 	ldrh.w	r0, [fp, #-2]
 800a324:	9104      	str	r1, [sp, #16]
 800a326:	4790      	blx	r2
 800a328:	9906      	ldr	r1, [sp, #24]
 800a32a:	f841 0f04 	str.w	r0, [r1, #4]!
 800a32e:	9106      	str	r1, [sp, #24]
 800a330:	9904      	ldr	r1, [sp, #16]
 800a332:	b124      	cbz	r4, 800a33e <_DrawBitmap+0x18e>
 800a334:	68a0      	ldr	r0, [r4, #8]
 800a336:	9a07      	ldr	r2, [sp, #28]
 800a338:	6803      	ldr	r3, [r0, #0]
 800a33a:	4620      	mov	r0, r4
 800a33c:	4798      	blx	r3
 800a33e:	3e01      	subs	r6, #1
 800a340:	f10b 0b02 	add.w	fp, fp, #2
 800a344:	d1e5      	bne.n	800a312 <_DrawBitmap+0x162>
 800a346:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 800a348:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800a34a:	3501      	adds	r5, #1
 800a34c:	193f      	adds	r7, r7, r4
 800a34e:	4490      	add	r8, r2
 800a350:	e7cc      	b.n	800a2ec <_DrawBitmap+0x13c>
 800a352:	991d      	ldr	r1, [sp, #116]	; 0x74
 800a354:	2908      	cmp	r1, #8
 800a356:	d16b      	bne.n	800a430 <_DrawBitmap+0x280>
 800a358:	9e08      	ldr	r6, [sp, #32]
 800a35a:	f108 0804 	add.w	r8, r8, #4
 800a35e:	9b08      	ldr	r3, [sp, #32]
 800a360:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800a362:	9c11      	ldr	r4, [sp, #68]	; 0x44
 800a364:	1af1      	subs	r1, r6, r3
 800a366:	4291      	cmp	r1, r2
 800a368:	f1a8 0004 	sub.w	r0, r8, #4
 800a36c:	da5c      	bge.n	800a428 <_DrawBitmap+0x278>
 800a36e:	4b2a      	ldr	r3, [pc, #168]	; (800a418 <_DrawBitmap+0x268>)
 800a370:	6819      	ldr	r1, [r3, #0]
 800a372:	7c0a      	ldrb	r2, [r1, #16]
 800a374:	b35d      	cbz	r5, 800a3ce <_DrawBitmap+0x21e>
 800a376:	f012 0303 	ands.w	r3, r2, #3
 800a37a:	d004      	beq.n	800a386 <_DrawBitmap+0x1d6>
 800a37c:	2b02      	cmp	r3, #2
 800a37e:	d14d      	bne.n	800a41c <_DrawBitmap+0x26c>
 800a380:	46c1      	mov	r9, r8
 800a382:	9f05      	ldr	r7, [sp, #20]
 800a384:	e01c      	b.n	800a3c0 <_DrawBitmap+0x210>
 800a386:	f81b 4003 	ldrb.w	r4, [fp, r3]
 800a38a:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800a38e:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 800a392:	3301      	adds	r3, #1
 800a394:	4553      	cmp	r3, sl
 800a396:	d1f6      	bne.n	800a386 <_DrawBitmap+0x1d6>
 800a398:	e040      	b.n	800a41c <_DrawBitmap+0x26c>
 800a39a:	f855 1020 	ldr.w	r1, [r5, r0, lsl #2]
 800a39e:	f849 1c04 	str.w	r1, [r9, #-4]
 800a3a2:	b12c      	cbz	r4, 800a3b0 <_DrawBitmap+0x200>
 800a3a4:	68a2      	ldr	r2, [r4, #8]
 800a3a6:	4620      	mov	r0, r4
 800a3a8:	6813      	ldr	r3, [r2, #0]
 800a3aa:	4639      	mov	r1, r7
 800a3ac:	4632      	mov	r2, r6
 800a3ae:	4798      	blx	r3
 800a3b0:	9805      	ldr	r0, [sp, #20]
 800a3b2:	3701      	adds	r7, #1
 800a3b4:	eb00 010a 	add.w	r1, r0, sl
 800a3b8:	42b9      	cmp	r1, r7
 800a3ba:	f109 0904 	add.w	r9, r9, #4
 800a3be:	d02d      	beq.n	800a41c <_DrawBitmap+0x26c>
 800a3c0:	9a05      	ldr	r2, [sp, #20]
 800a3c2:	ebc2 030b 	rsb	r3, r2, fp
 800a3c6:	5dd8      	ldrb	r0, [r3, r7]
 800a3c8:	2800      	cmp	r0, #0
 800a3ca:	d0f1      	beq.n	800a3b0 <_DrawBitmap+0x200>
 800a3cc:	e7e5      	b.n	800a39a <_DrawBitmap+0x1ea>
 800a3ce:	f012 0303 	ands.w	r3, r2, #3
 800a3d2:	d004      	beq.n	800a3de <_DrawBitmap+0x22e>
 800a3d4:	2b02      	cmp	r3, #2
 800a3d6:	d121      	bne.n	800a41c <_DrawBitmap+0x26c>
 800a3d8:	46c1      	mov	r9, r8
 800a3da:	9f05      	ldr	r7, [sp, #20]
 800a3dc:	e015      	b.n	800a40a <_DrawBitmap+0x25a>
 800a3de:	4659      	mov	r1, fp
 800a3e0:	4652      	mov	r2, sl
 800a3e2:	f7f5 fed1 	bl	8000188 <memcpy>
 800a3e6:	e019      	b.n	800a41c <_DrawBitmap+0x26c>
 800a3e8:	f849 2c04 	str.w	r2, [r9, #-4]
 800a3ec:	b12c      	cbz	r4, 800a3fa <_DrawBitmap+0x24a>
 800a3ee:	68a3      	ldr	r3, [r4, #8]
 800a3f0:	4620      	mov	r0, r4
 800a3f2:	681b      	ldr	r3, [r3, #0]
 800a3f4:	4639      	mov	r1, r7
 800a3f6:	4632      	mov	r2, r6
 800a3f8:	4798      	blx	r3
 800a3fa:	9805      	ldr	r0, [sp, #20]
 800a3fc:	3701      	adds	r7, #1
 800a3fe:	eb00 010a 	add.w	r1, r0, sl
 800a402:	42b9      	cmp	r1, r7
 800a404:	f109 0904 	add.w	r9, r9, #4
 800a408:	d008      	beq.n	800a41c <_DrawBitmap+0x26c>
 800a40a:	9805      	ldr	r0, [sp, #20]
 800a40c:	ebc0 010b 	rsb	r1, r0, fp
 800a410:	5dca      	ldrb	r2, [r1, r7]
 800a412:	2a00      	cmp	r2, #0
 800a414:	d0f1      	beq.n	800a3fa <_DrawBitmap+0x24a>
 800a416:	e7e7      	b.n	800a3e8 <_DrawBitmap+0x238>
 800a418:	20000270 	.word	0x20000270
 800a41c:	981e      	ldr	r0, [sp, #120]	; 0x78
 800a41e:	990c      	ldr	r1, [sp, #48]	; 0x30
 800a420:	4483      	add	fp, r0
 800a422:	3601      	adds	r6, #1
 800a424:	4488      	add	r8, r1
 800a426:	e79a      	b.n	800a35e <_DrawBitmap+0x1ae>
 800a428:	2c00      	cmp	r4, #0
 800a42a:	f040 8240 	bne.w	800a8ae <_DrawBitmap+0x6fe>
 800a42e:	e241      	b.n	800a8b4 <_DrawBitmap+0x704>
 800a430:	4ab0      	ldr	r2, [pc, #704]	; (800a6f4 <_DrawBitmap+0x544>)
 800a432:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800a434:	9c20      	ldr	r4, [sp, #128]	; 0x80
 800a436:	2d00      	cmp	r5, #0
 800a438:	bf14      	ite	ne
 800a43a:	46a9      	movne	r9, r5
 800a43c:	4691      	moveq	r9, r2
 800a43e:	9a08      	ldr	r2, [sp, #32]
 800a440:	0058      	lsls	r0, r3, #1
 800a442:	00a1      	lsls	r1, r4, #2
 800a444:	f108 0804 	add.w	r8, r8, #4
 800a448:	900d      	str	r0, [sp, #52]	; 0x34
 800a44a:	910e      	str	r1, [sp, #56]	; 0x38
 800a44c:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 800a450:	9206      	str	r2, [sp, #24]
 800a452:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a454:	9806      	ldr	r0, [sp, #24]
 800a456:	9908      	ldr	r1, [sp, #32]
 800a458:	1f1c      	subs	r4, r3, #4
 800a45a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800a45c:	1a42      	subs	r2, r0, r1
 800a45e:	429a      	cmp	r2, r3
 800a460:	f280 8223 	bge.w	800a8aa <_DrawBitmap+0x6fa>
 800a464:	991d      	ldr	r1, [sp, #116]	; 0x74
 800a466:	2902      	cmp	r1, #2
 800a468:	f000 80a1 	beq.w	800a5ae <_DrawBitmap+0x3fe>
 800a46c:	2904      	cmp	r1, #4
 800a46e:	f000 8147 	beq.w	800a700 <_DrawBitmap+0x550>
 800a472:	2901      	cmp	r1, #1
 800a474:	f040 820f 	bne.w	800a896 <_DrawBitmap+0x6e6>
 800a478:	f8df 8280 	ldr.w	r8, [pc, #640]	; 800a6fc <_DrawBitmap+0x54c>
 800a47c:	f8d8 5000 	ldr.w	r5, [r8]
 800a480:	6e28      	ldr	r0, [r5, #96]	; 0x60
 800a482:	f004 fa25 	bl	800e8d0 <GUI_ALLOC_LockH>
 800a486:	f89b 3000 	ldrb.w	r3, [fp]
 800a48a:	4a9b      	ldr	r2, [pc, #620]	; (800a6f8 <_DrawBitmap+0x548>)
 800a48c:	9920      	ldr	r1, [sp, #128]	; 0x80
 800a48e:	5cd5      	ldrb	r5, [r2, r3]
 800a490:	9010      	str	r0, [sp, #64]	; 0x40
 800a492:	f1c1 0708 	rsb	r7, r1, #8
 800a496:	fa45 f501 	asr.w	r5, r5, r1
 800a49a:	f8d8 1000 	ldr.w	r1, [r8]
 800a49e:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 800a4a2:	7c0b      	ldrb	r3, [r1, #16]
 800a4a4:	f003 0203 	and.w	r2, r3, #3
 800a4a8:	2a02      	cmp	r2, #2
 800a4aa:	4656      	mov	r6, sl
 800a4ac:	d01d      	beq.n	800a4ea <_DrawBitmap+0x33a>
 800a4ae:	2a03      	cmp	r2, #3
 800a4b0:	d059      	beq.n	800a566 <_DrawBitmap+0x3b6>
 800a4b2:	2a01      	cmp	r2, #1
 800a4b4:	d057      	beq.n	800a566 <_DrawBitmap+0x3b6>
 800a4b6:	465a      	mov	r2, fp
 800a4b8:	42be      	cmp	r6, r7
 800a4ba:	bf38      	it	cc
 800a4bc:	4637      	movcc	r7, r6
 800a4be:	1bf6      	subs	r6, r6, r7
 800a4c0:	463b      	mov	r3, r7
 800a4c2:	4621      	mov	r1, r4
 800a4c4:	f005 0001 	and.w	r0, r5, #1
 800a4c8:	086d      	lsrs	r5, r5, #1
 800a4ca:	f859 0020 	ldr.w	r0, [r9, r0, lsl #2]
 800a4ce:	3b01      	subs	r3, #1
 800a4d0:	f841 0b04 	str.w	r0, [r1], #4
 800a4d4:	d1f6      	bne.n	800a4c4 <_DrawBitmap+0x314>
 800a4d6:	eb04 0487 	add.w	r4, r4, r7, lsl #2
 800a4da:	2e00      	cmp	r6, #0
 800a4dc:	d063      	beq.n	800a5a6 <_DrawBitmap+0x3f6>
 800a4de:	f812 7f01 	ldrb.w	r7, [r2, #1]!
 800a4e2:	4d85      	ldr	r5, [pc, #532]	; (800a6f8 <_DrawBitmap+0x548>)
 800a4e4:	5ded      	ldrb	r5, [r5, r7]
 800a4e6:	2708      	movs	r7, #8
 800a4e8:	e7e6      	b.n	800a4b8 <_DrawBitmap+0x308>
 800a4ea:	f8d9 0004 	ldr.w	r0, [r9, #4]
 800a4ee:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800a4f2:	900b      	str	r0, [sp, #44]	; 0x2c
 800a4f4:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800a4f8:	42be      	cmp	r6, r7
 800a4fa:	bf38      	it	cc
 800a4fc:	4637      	movcc	r7, r6
 800a4fe:	1bf6      	subs	r6, r6, r7
 800a500:	f1bc 0f00 	cmp.w	ip, #0
 800a504:	d022      	beq.n	800a54c <_DrawBitmap+0x39c>
 800a506:	b91d      	cbnz	r5, 800a510 <_DrawBitmap+0x360>
 800a508:	eb04 0487 	add.w	r4, r4, r7, lsl #2
 800a50c:	44b8      	add	r8, r7
 800a50e:	e021      	b.n	800a554 <_DrawBitmap+0x3a4>
 800a510:	07e8      	lsls	r0, r5, #31
 800a512:	d50c      	bpl.n	800a52e <_DrawBitmap+0x37e>
 800a514:	f8dc 0008 	ldr.w	r0, [ip, #8]
 800a518:	9a06      	ldr	r2, [sp, #24]
 800a51a:	6803      	ldr	r3, [r0, #0]
 800a51c:	f8cd c00c 	str.w	ip, [sp, #12]
 800a520:	4660      	mov	r0, ip
 800a522:	4641      	mov	r1, r8
 800a524:	4798      	blx	r3
 800a526:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800a528:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800a52c:	6021      	str	r1, [r4, #0]
 800a52e:	3404      	adds	r4, #4
 800a530:	3f01      	subs	r7, #1
 800a532:	f108 0801 	add.w	r8, r8, #1
 800a536:	d00d      	beq.n	800a554 <_DrawBitmap+0x3a4>
 800a538:	086d      	lsrs	r5, r5, #1
 800a53a:	e7e4      	b.n	800a506 <_DrawBitmap+0x356>
 800a53c:	07e9      	lsls	r1, r5, #31
 800a53e:	bf44      	itt	mi
 800a540:	980b      	ldrmi	r0, [sp, #44]	; 0x2c
 800a542:	6020      	strmi	r0, [r4, #0]
 800a544:	3404      	adds	r4, #4
 800a546:	3f01      	subs	r7, #1
 800a548:	d004      	beq.n	800a554 <_DrawBitmap+0x3a4>
 800a54a:	086d      	lsrs	r5, r5, #1
 800a54c:	2d00      	cmp	r5, #0
 800a54e:	d1f5      	bne.n	800a53c <_DrawBitmap+0x38c>
 800a550:	eb04 0487 	add.w	r4, r4, r7, lsl #2
 800a554:	b33e      	cbz	r6, 800a5a6 <_DrawBitmap+0x3f6>
 800a556:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800a558:	4f67      	ldr	r7, [pc, #412]	; (800a6f8 <_DrawBitmap+0x548>)
 800a55a:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a55e:	5c3d      	ldrb	r5, [r7, r0]
 800a560:	9209      	str	r2, [sp, #36]	; 0x24
 800a562:	2708      	movs	r7, #8
 800a564:	e7c8      	b.n	800a4f8 <_DrawBitmap+0x348>
 800a566:	6802      	ldr	r2, [r0, #0]
 800a568:	6911      	ldr	r1, [r2, #16]
 800a56a:	6888      	ldr	r0, [r1, #8]
 800a56c:	4780      	blx	r0
 800a56e:	4659      	mov	r1, fp
 800a570:	42be      	cmp	r6, r7
 800a572:	bf38      	it	cc
 800a574:	4637      	movcc	r7, r6
 800a576:	1bf6      	subs	r6, r6, r7
 800a578:	1d23      	adds	r3, r4, #4
 800a57a:	46be      	mov	lr, r7
 800a57c:	07ea      	lsls	r2, r5, #31
 800a57e:	d504      	bpl.n	800a58a <_DrawBitmap+0x3da>
 800a580:	f853 2c04 	ldr.w	r2, [r3, #-4]
 800a584:	4042      	eors	r2, r0
 800a586:	f843 2c04 	str.w	r2, [r3, #-4]
 800a58a:	086d      	lsrs	r5, r5, #1
 800a58c:	3304      	adds	r3, #4
 800a58e:	f1be 0e01 	subs.w	lr, lr, #1
 800a592:	d1f3      	bne.n	800a57c <_DrawBitmap+0x3cc>
 800a594:	eb04 0487 	add.w	r4, r4, r7, lsl #2
 800a598:	b12e      	cbz	r6, 800a5a6 <_DrawBitmap+0x3f6>
 800a59a:	f811 7f01 	ldrb.w	r7, [r1, #1]!
 800a59e:	4d56      	ldr	r5, [pc, #344]	; (800a6f8 <_DrawBitmap+0x548>)
 800a5a0:	5ded      	ldrb	r5, [r5, r7]
 800a5a2:	2708      	movs	r7, #8
 800a5a4:	e7e4      	b.n	800a570 <_DrawBitmap+0x3c0>
 800a5a6:	a810      	add	r0, sp, #64	; 0x40
 800a5a8:	f004 f9a0 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800a5ac:	e173      	b.n	800a896 <_DrawBitmap+0x6e6>
 800a5ae:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800a5b0:	4b52      	ldr	r3, [pc, #328]	; (800a6fc <_DrawBitmap+0x54c>)
 800a5b2:	980d      	ldr	r0, [sp, #52]	; 0x34
 800a5b4:	f89b 1000 	ldrb.w	r1, [fp]
 800a5b8:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 800a5bc:	f1c6 0204 	rsb	r2, r6, #4
 800a5c0:	b2d5      	uxtb	r5, r2
 800a5c2:	681a      	ldr	r2, [r3, #0]
 800a5c4:	fa01 f100 	lsl.w	r1, r1, r0
 800a5c8:	b2ce      	uxtb	r6, r1
 800a5ca:	7c11      	ldrb	r1, [r2, #16]
 800a5cc:	f001 0003 	and.w	r0, r1, #3
 800a5d0:	2801      	cmp	r0, #1
 800a5d2:	d06a      	beq.n	800a6aa <_DrawBitmap+0x4fa>
 800a5d4:	d308      	bcc.n	800a5e8 <_DrawBitmap+0x438>
 800a5d6:	2802      	cmp	r0, #2
 800a5d8:	f040 815d 	bne.w	800a896 <_DrawBitmap+0x6e6>
 800a5dc:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 800a5e0:	4657      	mov	r7, sl
 800a5e2:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800a5e6:	e040      	b.n	800a66a <_DrawBitmap+0x4ba>
 800a5e8:	465a      	mov	r2, fp
 800a5ea:	4653      	mov	r3, sl
 800a5ec:	429d      	cmp	r5, r3
 800a5ee:	bfc8      	it	gt
 800a5f0:	b2dd      	uxtbgt	r5, r3
 800a5f2:	1b5b      	subs	r3, r3, r5
 800a5f4:	4629      	mov	r1, r5
 800a5f6:	4620      	mov	r0, r4
 800a5f8:	09b7      	lsrs	r7, r6, #6
 800a5fa:	3901      	subs	r1, #1
 800a5fc:	f859 7027 	ldr.w	r7, [r9, r7, lsl #2]
 800a600:	00b6      	lsls	r6, r6, #2
 800a602:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 800a606:	f840 7b04 	str.w	r7, [r0], #4
 800a60a:	b2f6      	uxtb	r6, r6
 800a60c:	d1f4      	bne.n	800a5f8 <_DrawBitmap+0x448>
 800a60e:	3d01      	subs	r5, #1
 800a610:	b2e8      	uxtb	r0, r5
 800a612:	1c45      	adds	r5, r0, #1
 800a614:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 800a618:	2b00      	cmp	r3, #0
 800a61a:	f000 813c 	beq.w	800a896 <_DrawBitmap+0x6e6>
 800a61e:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 800a622:	2504      	movs	r5, #4
 800a624:	e7e2      	b.n	800a5ec <_DrawBitmap+0x43c>
 800a626:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 800a62a:	d127      	bne.n	800a67c <_DrawBitmap+0x4cc>
 800a62c:	9907      	ldr	r1, [sp, #28]
 800a62e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800a630:	1c48      	adds	r0, r1, #1
 800a632:	9007      	str	r0, [sp, #28]
 800a634:	1d13      	adds	r3, r2, #4
 800a636:	9a07      	ldr	r2, [sp, #28]
 800a638:	9309      	str	r3, [sp, #36]	; 0x24
 800a63a:	eb05 0108 	add.w	r1, r5, r8
 800a63e:	b2c8      	uxtb	r0, r1
 800a640:	b2d3      	uxtb	r3, r2
 800a642:	00b6      	lsls	r6, r6, #2
 800a644:	4298      	cmp	r0, r3
 800a646:	b2f6      	uxtb	r6, r6
 800a648:	d1ed      	bne.n	800a626 <_DrawBitmap+0x476>
 800a64a:	3d01      	subs	r5, #1
 800a64c:	b2ed      	uxtb	r5, r5
 800a64e:	1c69      	adds	r1, r5, #1
 800a650:	f108 0801 	add.w	r8, r8, #1
 800a654:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 800a658:	44a8      	add	r8, r5
 800a65a:	2f00      	cmp	r7, #0
 800a65c:	f000 811b 	beq.w	800a896 <_DrawBitmap+0x6e6>
 800a660:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800a662:	f810 6f01 	ldrb.w	r6, [r0, #1]!
 800a666:	2504      	movs	r5, #4
 800a668:	900b      	str	r0, [sp, #44]	; 0x2c
 800a66a:	42bd      	cmp	r5, r7
 800a66c:	bfc8      	it	gt
 800a66e:	b2fd      	uxtbgt	r5, r7
 800a670:	1d23      	adds	r3, r4, #4
 800a672:	1b7f      	subs	r7, r7, r5
 800a674:	9309      	str	r3, [sp, #36]	; 0x24
 800a676:	f8cd 801c 	str.w	r8, [sp, #28]
 800a67a:	e7d4      	b.n	800a626 <_DrawBitmap+0x476>
 800a67c:	09b2      	lsrs	r2, r6, #6
 800a67e:	9809      	ldr	r0, [sp, #36]	; 0x24
 800a680:	f859 1022 	ldr.w	r1, [r9, r2, lsl #2]
 800a684:	f840 1c04 	str.w	r1, [r0, #-4]
 800a688:	f1bc 0f00 	cmp.w	ip, #0
 800a68c:	d0ce      	beq.n	800a62c <_DrawBitmap+0x47c>
 800a68e:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800a692:	9907      	ldr	r1, [sp, #28]
 800a694:	681a      	ldr	r2, [r3, #0]
 800a696:	f8cd c00c 	str.w	ip, [sp, #12]
 800a69a:	920f      	str	r2, [sp, #60]	; 0x3c
 800a69c:	4660      	mov	r0, ip
 800a69e:	9a06      	ldr	r2, [sp, #24]
 800a6a0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800a6a2:	4798      	blx	r3
 800a6a4:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800a6a8:	e7c0      	b.n	800a62c <_DrawBitmap+0x47c>
 800a6aa:	4658      	mov	r0, fp
 800a6ac:	4653      	mov	r3, sl
 800a6ae:	429d      	cmp	r5, r3
 800a6b0:	bfc8      	it	gt
 800a6b2:	b2dd      	uxtbgt	r5, r3
 800a6b4:	1b5b      	subs	r3, r3, r5
 800a6b6:	1d22      	adds	r2, r4, #4
 800a6b8:	462f      	mov	r7, r5
 800a6ba:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 800a6be:	d005      	beq.n	800a6cc <_DrawBitmap+0x51c>
 800a6c0:	f852 1c04 	ldr.w	r1, [r2, #-4]
 800a6c4:	f081 01ff 	eor.w	r1, r1, #255	; 0xff
 800a6c8:	f842 1c04 	str.w	r1, [r2, #-4]
 800a6cc:	3f01      	subs	r7, #1
 800a6ce:	00b6      	lsls	r6, r6, #2
 800a6d0:	3204      	adds	r2, #4
 800a6d2:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 800a6d6:	b2f6      	uxtb	r6, r6
 800a6d8:	d1ef      	bne.n	800a6ba <_DrawBitmap+0x50a>
 800a6da:	3d01      	subs	r5, #1
 800a6dc:	b2e9      	uxtb	r1, r5
 800a6de:	1c4d      	adds	r5, r1, #1
 800a6e0:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 800a6e4:	2b00      	cmp	r3, #0
 800a6e6:	f000 80d6 	beq.w	800a896 <_DrawBitmap+0x6e6>
 800a6ea:	f810 6f01 	ldrb.w	r6, [r0, #1]!
 800a6ee:	2504      	movs	r5, #4
 800a6f0:	e7dd      	b.n	800a6ae <_DrawBitmap+0x4fe>
 800a6f2:	bf00      	nop
 800a6f4:	08022568 	.word	0x08022568
 800a6f8:	0802d044 	.word	0x0802d044
 800a6fc:	20000270 	.word	0x20000270
 800a700:	496e      	ldr	r1, [pc, #440]	; (800a8bc <_DrawBitmap+0x70c>)
 800a702:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800a704:	680a      	ldr	r2, [r1, #0]
 800a706:	f89b 3000 	ldrb.w	r3, [fp]
 800a70a:	7c10      	ldrb	r0, [r2, #16]
 800a70c:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800a70e:	f000 0103 	and.w	r1, r0, #3
 800a712:	fa03 f305 	lsl.w	r3, r3, r5
 800a716:	2901      	cmp	r1, #1
 800a718:	b2dd      	uxtb	r5, r3
 800a71a:	f000 8096 	beq.w	800a84a <_DrawBitmap+0x69a>
 800a71e:	d303      	bcc.n	800a728 <_DrawBitmap+0x578>
 800a720:	2902      	cmp	r1, #2
 800a722:	f040 80b8 	bne.w	800a896 <_DrawBitmap+0x6e6>
 800a726:	e031      	b.n	800a78c <_DrawBitmap+0x5dc>
 800a728:	9920      	ldr	r1, [sp, #128]	; 0x80
 800a72a:	b159      	cbz	r1, 800a744 <_DrawBitmap+0x594>
 800a72c:	092d      	lsrs	r5, r5, #4
 800a72e:	f10a 33ff 	add.w	r3, sl, #4294967295
 800a732:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 800a736:	6020      	str	r0, [r4, #0]
 800a738:	f10b 0201 	add.w	r2, fp, #1
 800a73c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800a73e:	f89b 5001 	ldrb.w	r5, [fp, #1]
 800a742:	e001      	b.n	800a748 <_DrawBitmap+0x598>
 800a744:	4653      	mov	r3, sl
 800a746:	465a      	mov	r2, fp
 800a748:	2b01      	cmp	r3, #1
 800a74a:	dd17      	ble.n	800a77c <_DrawBitmap+0x5cc>
 800a74c:	1058      	asrs	r0, r3, #1
 800a74e:	f104 0108 	add.w	r1, r4, #8
 800a752:	f003 0301 	and.w	r3, r3, #1
 800a756:	1816      	adds	r6, r2, r0
 800a758:	092f      	lsrs	r7, r5, #4
 800a75a:	f005 050f 	and.w	r5, r5, #15
 800a75e:	f859 7027 	ldr.w	r7, [r9, r7, lsl #2]
 800a762:	f841 7c08 	str.w	r7, [r1, #-8]
 800a766:	f859 5025 	ldr.w	r5, [r9, r5, lsl #2]
 800a76a:	f841 5c04 	str.w	r5, [r1, #-4]
 800a76e:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 800a772:	3108      	adds	r1, #8
 800a774:	42b2      	cmp	r2, r6
 800a776:	d1ef      	bne.n	800a758 <_DrawBitmap+0x5a8>
 800a778:	eb04 04c0 	add.w	r4, r4, r0, lsl #3
 800a77c:	2b00      	cmp	r3, #0
 800a77e:	f000 808a 	beq.w	800a896 <_DrawBitmap+0x6e6>
 800a782:	092d      	lsrs	r5, r5, #4
 800a784:	f859 2025 	ldr.w	r2, [r9, r5, lsl #2]
 800a788:	6022      	str	r2, [r4, #0]
 800a78a:	e084      	b.n	800a896 <_DrawBitmap+0x6e6>
 800a78c:	9f20      	ldr	r7, [sp, #128]	; 0x80
 800a78e:	b1bf      	cbz	r7, 800a7c0 <_DrawBitmap+0x610>
 800a790:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 800a794:	d00a      	beq.n	800a7ac <_DrawBitmap+0x5fc>
 800a796:	092b      	lsrs	r3, r5, #4
 800a798:	f859 5023 	ldr.w	r5, [r9, r3, lsl #2]
 800a79c:	6025      	str	r5, [r4, #0]
 800a79e:	b12e      	cbz	r6, 800a7ac <_DrawBitmap+0x5fc>
 800a7a0:	68b4      	ldr	r4, [r6, #8]
 800a7a2:	9905      	ldr	r1, [sp, #20]
 800a7a4:	6827      	ldr	r7, [r4, #0]
 800a7a6:	9a06      	ldr	r2, [sp, #24]
 800a7a8:	4630      	mov	r0, r6
 800a7aa:	47b8      	blx	r7
 800a7ac:	9a05      	ldr	r2, [sp, #20]
 800a7ae:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800a7b0:	f89b 5001 	ldrb.w	r5, [fp, #1]
 800a7b4:	1c57      	adds	r7, r2, #1
 800a7b6:	f10a 3cff 	add.w	ip, sl, #4294967295
 800a7ba:	f10b 0801 	add.w	r8, fp, #1
 800a7be:	e00f      	b.n	800a7e0 <_DrawBitmap+0x630>
 800a7c0:	46d4      	mov	ip, sl
 800a7c2:	46d8      	mov	r8, fp
 800a7c4:	9f05      	ldr	r7, [sp, #20]
 800a7c6:	e00b      	b.n	800a7e0 <_DrawBitmap+0x630>
 800a7c8:	f015 0ff0 	tst.w	r5, #240	; 0xf0
 800a7cc:	d10c      	bne.n	800a7e8 <_DrawBitmap+0x638>
 800a7ce:	f015 050f 	ands.w	r5, r5, #15
 800a7d2:	d11a      	bne.n	800a80a <_DrawBitmap+0x65a>
 800a7d4:	f818 5f01 	ldrb.w	r5, [r8, #1]!
 800a7d8:	3408      	adds	r4, #8
 800a7da:	3702      	adds	r7, #2
 800a7dc:	f1ac 0c02 	sub.w	ip, ip, #2
 800a7e0:	f1bc 0f01 	cmp.w	ip, #1
 800a7e4:	dcf0      	bgt.n	800a7c8 <_DrawBitmap+0x618>
 800a7e6:	e020      	b.n	800a82a <_DrawBitmap+0x67a>
 800a7e8:	092a      	lsrs	r2, r5, #4
 800a7ea:	f859 0022 	ldr.w	r0, [r9, r2, lsl #2]
 800a7ee:	6020      	str	r0, [r4, #0]
 800a7f0:	2e00      	cmp	r6, #0
 800a7f2:	d0ec      	beq.n	800a7ce <_DrawBitmap+0x61e>
 800a7f4:	68b1      	ldr	r1, [r6, #8]
 800a7f6:	9a06      	ldr	r2, [sp, #24]
 800a7f8:	680b      	ldr	r3, [r1, #0]
 800a7fa:	f8cd c00c 	str.w	ip, [sp, #12]
 800a7fe:	4630      	mov	r0, r6
 800a800:	4639      	mov	r1, r7
 800a802:	4798      	blx	r3
 800a804:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800a808:	e7e1      	b.n	800a7ce <_DrawBitmap+0x61e>
 800a80a:	f859 2025 	ldr.w	r2, [r9, r5, lsl #2]
 800a80e:	6062      	str	r2, [r4, #4]
 800a810:	2e00      	cmp	r6, #0
 800a812:	d0df      	beq.n	800a7d4 <_DrawBitmap+0x624>
 800a814:	68b0      	ldr	r0, [r6, #8]
 800a816:	9a06      	ldr	r2, [sp, #24]
 800a818:	6803      	ldr	r3, [r0, #0]
 800a81a:	f8cd c00c 	str.w	ip, [sp, #12]
 800a81e:	4630      	mov	r0, r6
 800a820:	1c79      	adds	r1, r7, #1
 800a822:	4798      	blx	r3
 800a824:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800a828:	e7d4      	b.n	800a7d4 <_DrawBitmap+0x624>
 800a82a:	f1bc 0f00 	cmp.w	ip, #0
 800a82e:	d032      	beq.n	800a896 <_DrawBitmap+0x6e6>
 800a830:	092d      	lsrs	r5, r5, #4
 800a832:	d030      	beq.n	800a896 <_DrawBitmap+0x6e6>
 800a834:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 800a838:	6020      	str	r0, [r4, #0]
 800a83a:	b366      	cbz	r6, 800a896 <_DrawBitmap+0x6e6>
 800a83c:	68b1      	ldr	r1, [r6, #8]
 800a83e:	9a06      	ldr	r2, [sp, #24]
 800a840:	680b      	ldr	r3, [r1, #0]
 800a842:	4630      	mov	r0, r6
 800a844:	4639      	mov	r1, r7
 800a846:	4798      	blx	r3
 800a848:	e025      	b.n	800a896 <_DrawBitmap+0x6e6>
 800a84a:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800a84c:	f1c6 0002 	rsb	r0, r6, #2
 800a850:	b2c3      	uxtb	r3, r0
 800a852:	465e      	mov	r6, fp
 800a854:	4652      	mov	r2, sl
 800a856:	4293      	cmp	r3, r2
 800a858:	bfc8      	it	gt
 800a85a:	b2d3      	uxtbgt	r3, r2
 800a85c:	1ad2      	subs	r2, r2, r3
 800a85e:	1d20      	adds	r0, r4, #4
 800a860:	461f      	mov	r7, r3
 800a862:	f015 0fc0 	tst.w	r5, #192	; 0xc0
 800a866:	d005      	beq.n	800a874 <_DrawBitmap+0x6c4>
 800a868:	f850 1c04 	ldr.w	r1, [r0, #-4]
 800a86c:	f081 01ff 	eor.w	r1, r1, #255	; 0xff
 800a870:	f840 1c04 	str.w	r1, [r0, #-4]
 800a874:	3f01      	subs	r7, #1
 800a876:	012d      	lsls	r5, r5, #4
 800a878:	3004      	adds	r0, #4
 800a87a:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 800a87e:	b2ed      	uxtb	r5, r5
 800a880:	d1ef      	bne.n	800a862 <_DrawBitmap+0x6b2>
 800a882:	3b01      	subs	r3, #1
 800a884:	b2d9      	uxtb	r1, r3
 800a886:	1c48      	adds	r0, r1, #1
 800a888:	eb04 0480 	add.w	r4, r4, r0, lsl #2
 800a88c:	b11a      	cbz	r2, 800a896 <_DrawBitmap+0x6e6>
 800a88e:	f816 5f01 	ldrb.w	r5, [r6, #1]!
 800a892:	2302      	movs	r3, #2
 800a894:	e7df      	b.n	800a856 <_DrawBitmap+0x6a6>
 800a896:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 800a898:	9806      	ldr	r0, [sp, #24]
 800a89a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800a89c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800a89e:	44a3      	add	fp, r4
 800a8a0:	1c43      	adds	r3, r0, #1
 800a8a2:	1854      	adds	r4, r2, r1
 800a8a4:	9306      	str	r3, [sp, #24]
 800a8a6:	940a      	str	r4, [sp, #40]	; 0x28
 800a8a8:	e5d3      	b.n	800a452 <_DrawBitmap+0x2a2>
 800a8aa:	9811      	ldr	r0, [sp, #68]	; 0x44
 800a8ac:	b110      	cbz	r0, 800a8b4 <_DrawBitmap+0x704>
 800a8ae:	a811      	add	r0, sp, #68	; 0x44
 800a8b0:	f004 f81c 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800a8b4:	b013      	add	sp, #76	; 0x4c
 800a8b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a8ba:	bf00      	nop
 800a8bc:	20000270 	.word	0x20000270

0800a8c0 <GUI_MEMDEV__WriteToActiveAt>:
 800a8c0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a8c4:	460e      	mov	r6, r1
 800a8c6:	4690      	mov	r8, r2
 800a8c8:	4607      	mov	r7, r0
 800a8ca:	f004 f801 	bl	800e8d0 <GUI_ALLOC_LockH>
 800a8ce:	ac02      	add	r4, sp, #8
 800a8d0:	6803      	ldr	r3, [r0, #0]
 800a8d2:	f844 0d04 	str.w	r0, [r4, #-4]!
 800a8d6:	68d8      	ldr	r0, [r3, #12]
 800a8d8:	2116      	movs	r1, #22
 800a8da:	6a42      	ldr	r2, [r0, #36]	; 0x24
 800a8dc:	2000      	movs	r0, #0
 800a8de:	4790      	blx	r2
 800a8e0:	4605      	mov	r5, r0
 800a8e2:	4620      	mov	r0, r4
 800a8e4:	f004 f802 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800a8e8:	b11d      	cbz	r5, 800a8f2 <GUI_MEMDEV__WriteToActiveAt+0x32>
 800a8ea:	4638      	mov	r0, r7
 800a8ec:	4631      	mov	r1, r6
 800a8ee:	4642      	mov	r2, r8
 800a8f0:	47a8      	blx	r5
 800a8f2:	e8bd 81fc 	ldmia.w	sp!, {r2, r3, r4, r5, r6, r7, r8, pc}
	...

0800a8f8 <GUI_MEMDEV__CreateFixed>:
 800a8f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a8fc:	461d      	mov	r5, r3
 800a8fe:	4b3c      	ldr	r3, [pc, #240]	; (800a9f0 <GUI_MEMDEV__CreateFixed+0xf8>)
 800a900:	b087      	sub	sp, #28
 800a902:	681c      	ldr	r4, [r3, #0]
 800a904:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800a906:	7c63      	ldrb	r3, [r4, #17]
 800a908:	4683      	mov	fp, r0
 800a90a:	468a      	mov	sl, r1
 800a90c:	4690      	mov	r8, r2
 800a90e:	9811      	ldr	r0, [sp, #68]	; 0x44
 800a910:	9912      	ldr	r1, [sp, #72]	; 0x48
 800a912:	2200      	movs	r2, #0
 800a914:	f003 faca 	bl	800deac <GUI_DEVICE_Create>
 800a918:	4604      	mov	r4, r0
 800a91a:	b378      	cbz	r0, 800a97c <GUI_MEMDEV__CreateFixed+0x84>
 800a91c:	6900      	ldr	r0, [r0, #16]
 800a91e:	6881      	ldr	r1, [r0, #8]
 800a920:	4788      	blx	r1
 800a922:	f001 fac9 	bl	800beb8 <LCD__GetBPPDevice>
 800a926:	fb08 f600 	mul.w	r6, r8, r0
 800a92a:	1df2      	adds	r2, r6, #7
 800a92c:	08d6      	lsrs	r6, r2, #3
 800a92e:	9003      	str	r0, [sp, #12]
 800a930:	f004 f93e 	bl	800ebb0 <GUI_ALLOC_RequestSize>
 800a934:	f017 0901 	ands.w	r9, r7, #1
 800a938:	d104      	bne.n	800a944 <GUI_MEMDEV__CreateFixed+0x4c>
 800a93a:	2704      	movs	r7, #4
 800a93c:	fb90 f0f7 	sdiv	r0, r0, r7
 800a940:	2303      	movs	r3, #3
 800a942:	4358      	muls	r0, r3
 800a944:	2d00      	cmp	r5, #0
 800a946:	dc06      	bgt.n	800a956 <GUI_MEMDEV__CreateFixed+0x5e>
 800a948:	3818      	subs	r0, #24
 800a94a:	426d      	negs	r5, r5
 800a94c:	fbb0 f0f6 	udiv	r0, r0, r6
 800a950:	42a8      	cmp	r0, r5
 800a952:	bfb8      	it	lt
 800a954:	4605      	movlt	r5, r0
 800a956:	f1b9 0f00 	cmp.w	r9, #0
 800a95a:	d109      	bne.n	800a970 <GUI_MEMDEV__CreateFixed+0x78>
 800a95c:	f8cd 9000 	str.w	r9, [sp]
 800a960:	4658      	mov	r0, fp
 800a962:	4651      	mov	r1, sl
 800a964:	4642      	mov	r2, r8
 800a966:	462b      	mov	r3, r5
 800a968:	f006 fc54 	bl	8011214 <GUI_USAGE_BM_Create>
 800a96c:	4607      	mov	r7, r0
 800a96e:	e000      	b.n	800a972 <GUI_MEMDEV__CreateFixed+0x7a>
 800a970:	2700      	movs	r7, #0
 800a972:	2d00      	cmp	r5, #0
 800a974:	dc05      	bgt.n	800a982 <GUI_MEMDEV__CreateFixed+0x8a>
 800a976:	4620      	mov	r0, r4
 800a978:	f003 fa96 	bl	800dea8 <GUI_DEVICE_Delete>
 800a97c:	f04f 0900 	mov.w	r9, #0
 800a980:	e031      	b.n	800a9e6 <GUI_MEMDEV__CreateFixed+0xee>
 800a982:	fb06 f005 	mul.w	r0, r6, r5
 800a986:	3018      	adds	r0, #24
 800a988:	f1b9 0f00 	cmp.w	r9, #0
 800a98c:	d002      	beq.n	800a994 <GUI_MEMDEV__CreateFixed+0x9c>
 800a98e:	f004 f9ed 	bl	800ed6c <GUI_ALLOC_AllocNoInit>
 800a992:	e001      	b.n	800a998 <GUI_MEMDEV__CreateFixed+0xa0>
 800a994:	f004 fa10 	bl	800edb8 <GUI_ALLOC_AllocZero>
 800a998:	4681      	mov	r9, r0
 800a99a:	b940      	cbnz	r0, 800a9ae <GUI_MEMDEV__CreateFixed+0xb6>
 800a99c:	4620      	mov	r0, r4
 800a99e:	f003 fa83 	bl	800dea8 <GUI_DEVICE_Delete>
 800a9a2:	2f00      	cmp	r7, #0
 800a9a4:	d0ea      	beq.n	800a97c <GUI_MEMDEV__CreateFixed+0x84>
 800a9a6:	4638      	mov	r0, r7
 800a9a8:	f003 ffcc 	bl	800e944 <GUI_ALLOC_Free>
 800a9ac:	e01b      	b.n	800a9e6 <GUI_MEMDEV__CreateFixed+0xee>
 800a9ae:	f003 ff8f 	bl	800e8d0 <GUI_ALLOC_LockH>
 800a9b2:	9a03      	ldr	r2, [sp, #12]
 800a9b4:	4601      	mov	r1, r0
 800a9b6:	a806      	add	r0, sp, #24
 800a9b8:	610a      	str	r2, [r1, #16]
 800a9ba:	f840 1d04 	str.w	r1, [r0, #-4]!
 800a9be:	f8a1 b004 	strh.w	fp, [r1, #4]
 800a9c2:	600c      	str	r4, [r1, #0]
 800a9c4:	f8a1 a006 	strh.w	sl, [r1, #6]
 800a9c8:	f8a1 8008 	strh.w	r8, [r1, #8]
 800a9cc:	814d      	strh	r5, [r1, #10]
 800a9ce:	60ce      	str	r6, [r1, #12]
 800a9d0:	614f      	str	r7, [r1, #20]
 800a9d2:	f003 ff8b 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800a9d6:	4806      	ldr	r0, [pc, #24]	; (800a9f0 <GUI_MEMDEV__CreateFixed+0xf8>)
 800a9d8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800a9da:	6801      	ldr	r1, [r0, #0]
 800a9dc:	6123      	str	r3, [r4, #16]
 800a9de:	f8c4 9008 	str.w	r9, [r4, #8]
 800a9e2:	7c4a      	ldrb	r2, [r1, #17]
 800a9e4:	61a2      	str	r2, [r4, #24]
 800a9e6:	4648      	mov	r0, r9
 800a9e8:	b007      	add	sp, #28
 800a9ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a9ee:	bf00      	nop
 800a9f0:	20000270 	.word	0x20000270

0800a9f4 <GUI_MEMDEV_GetBitsPerPixel>:
 800a9f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a9f6:	4605      	mov	r5, r0
 800a9f8:	b170      	cbz	r0, 800aa18 <GUI_MEMDEV_GetBitsPerPixel+0x24>
 800a9fa:	f003 ff69 	bl	800e8d0 <GUI_ALLOC_LockH>
 800a9fe:	ac02      	add	r4, sp, #8
 800aa00:	6803      	ldr	r3, [r0, #0]
 800aa02:	f844 0d04 	str.w	r0, [r4, #-4]!
 800aa06:	6918      	ldr	r0, [r3, #16]
 800aa08:	6881      	ldr	r1, [r0, #8]
 800aa0a:	4788      	blx	r1
 800aa0c:	f001 fa54 	bl	800beb8 <LCD__GetBPPDevice>
 800aa10:	4605      	mov	r5, r0
 800aa12:	4620      	mov	r0, r4
 800aa14:	f003 ff6a 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800aa18:	4628      	mov	r0, r5
 800aa1a:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800aa1c <GUI_MEMDEV_Delete>:
 800aa1c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800aa1e:	4604      	mov	r4, r0
 800aa20:	b1d0      	cbz	r0, 800aa58 <GUI_MEMDEV_Delete+0x3c>
 800aa22:	4b0e      	ldr	r3, [pc, #56]	; (800aa5c <GUI_MEMDEV_Delete+0x40>)
 800aa24:	6818      	ldr	r0, [r3, #0]
 800aa26:	6e01      	ldr	r1, [r0, #96]	; 0x60
 800aa28:	42a1      	cmp	r1, r4
 800aa2a:	d101      	bne.n	800aa30 <GUI_MEMDEV_Delete+0x14>
 800aa2c:	f002 fbc6 	bl	800d1bc <GUI_SelectLCD>
 800aa30:	4620      	mov	r0, r4
 800aa32:	f003 ff4d 	bl	800e8d0 <GUI_ALLOC_LockH>
 800aa36:	9001      	str	r0, [sp, #4]
 800aa38:	6940      	ldr	r0, [r0, #20]
 800aa3a:	b108      	cbz	r0, 800aa40 <GUI_MEMDEV_Delete+0x24>
 800aa3c:	f006 fc14 	bl	8011268 <GUI_USAGE_DecUseCnt>
 800aa40:	ad02      	add	r5, sp, #8
 800aa42:	f855 2d04 	ldr.w	r2, [r5, #-4]!
 800aa46:	6810      	ldr	r0, [r2, #0]
 800aa48:	f003 fa2e 	bl	800dea8 <GUI_DEVICE_Delete>
 800aa4c:	4628      	mov	r0, r5
 800aa4e:	f003 ff4d 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800aa52:	4620      	mov	r0, r4
 800aa54:	f003 ff76 	bl	800e944 <GUI_ALLOC_Free>
 800aa58:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 800aa5a:	bf00      	nop
 800aa5c:	20000270 	.word	0x20000270

0800aa60 <GUI_MEMDEV_CreateEx>:
 800aa60:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800aa64:	469a      	mov	sl, r3
 800aa66:	4b18      	ldr	r3, [pc, #96]	; (800aac8 <GUI_MEMDEV_CreateEx+0x68>)
 800aa68:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800aa6a:	4607      	mov	r7, r0
 800aa6c:	6818      	ldr	r0, [r3, #0]
 800aa6e:	4688      	mov	r8, r1
 800aa70:	7c40      	ldrb	r0, [r0, #17]
 800aa72:	4916      	ldr	r1, [pc, #88]	; (800aacc <GUI_MEMDEV_CreateEx+0x6c>)
 800aa74:	f851 4020 	ldr.w	r4, [r1, r0, lsl #2]
 800aa78:	4691      	mov	r9, r2
 800aa7a:	68e2      	ldr	r2, [r4, #12]
 800aa7c:	6816      	ldr	r6, [r2, #0]
 800aa7e:	2e04      	cmp	r6, #4
 800aa80:	d005      	beq.n	800aa8e <GUI_MEMDEV_CreateEx+0x2e>
 800aa82:	6824      	ldr	r4, [r4, #0]
 800aa84:	2c00      	cmp	r4, #0
 800aa86:	d1f8      	bne.n	800aa7a <GUI_MEMDEV_CreateEx+0x1a>
 800aa88:	f003 f9fe 	bl	800de88 <GUI_DEVICE__GetpDriver>
 800aa8c:	4604      	mov	r4, r0
 800aa8e:	68e3      	ldr	r3, [r4, #12]
 800aa90:	4620      	mov	r0, r4
 800aa92:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800aa94:	2101      	movs	r1, #1
 800aa96:	4790      	blx	r2
 800aa98:	4606      	mov	r6, r0
 800aa9a:	b188      	cbz	r0, 800aac0 <GUI_MEMDEV_CreateEx+0x60>
 800aa9c:	6924      	ldr	r4, [r4, #16]
 800aa9e:	68a0      	ldr	r0, [r4, #8]
 800aaa0:	4780      	blx	r0
 800aaa2:	3001      	adds	r0, #1
 800aaa4:	bf04      	itt	eq
 800aaa6:	4c0a      	ldreq	r4, [pc, #40]	; (800aad0 <GUI_MEMDEV_CreateEx+0x70>)
 800aaa8:	f045 0501 	orreq.w	r5, r5, #1
 800aaac:	e88d 0060 	stmia.w	sp, {r5, r6}
 800aab0:	9402      	str	r4, [sp, #8]
 800aab2:	4638      	mov	r0, r7
 800aab4:	4641      	mov	r1, r8
 800aab6:	464a      	mov	r2, r9
 800aab8:	4653      	mov	r3, sl
 800aaba:	f7ff ff1d 	bl	800a8f8 <GUI_MEMDEV__CreateFixed>
 800aabe:	e7ff      	b.n	800aac0 <GUI_MEMDEV_CreateEx+0x60>
 800aac0:	b004      	add	sp, #16
 800aac2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800aac6:	bf00      	nop
 800aac8:	20000270 	.word	0x20000270
 800aacc:	2000dde0 	.word	0x2000dde0
 800aad0:	0802d168 	.word	0x0802d168

0800aad4 <GUI_MEMDEV_Select>:
 800aad4:	4b11      	ldr	r3, [pc, #68]	; (800ab1c <GUI_MEMDEV_Select+0x48>)
 800aad6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800aad8:	681a      	ldr	r2, [r3, #0]
 800aada:	4604      	mov	r4, r0
 800aadc:	6e16      	ldr	r6, [r2, #96]	; 0x60
 800aade:	461f      	mov	r7, r3
 800aae0:	b910      	cbnz	r0, 800aae8 <GUI_MEMDEV_Select+0x14>
 800aae2:	f002 fb6b 	bl	800d1bc <GUI_SelectLCD>
 800aae6:	e016      	b.n	800ab16 <GUI_MEMDEV_Select+0x42>
 800aae8:	b10e      	cbz	r6, 800aaee <GUI_MEMDEV_Select+0x1a>
 800aaea:	f002 fb67 	bl	800d1bc <GUI_SelectLCD>
 800aaee:	f7fe ff75 	bl	80099dc <WM_Deactivate>
 800aaf2:	4620      	mov	r0, r4
 800aaf4:	f003 feec 	bl	800e8d0 <GUI_ALLOC_LockH>
 800aaf8:	ad02      	add	r5, sp, #8
 800aafa:	6839      	ldr	r1, [r7, #0]
 800aafc:	f845 0d04 	str.w	r0, [r5, #-4]!
 800ab00:	660c      	str	r4, [r1, #96]	; 0x60
 800ab02:	6800      	ldr	r0, [r0, #0]
 800ab04:	f003 f9fa 	bl	800defc <GUI_DEVICE_Link>
 800ab08:	4628      	mov	r0, r5
 800ab0a:	f003 feef 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800ab0e:	f001 f879 	bl	800bc04 <LCD_UpdateColorIndices>
 800ab12:	f001 fc91 	bl	800c438 <LCD_SetClipRectMax>
 800ab16:	4630      	mov	r0, r6
 800ab18:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800ab1a:	bf00      	nop
 800ab1c:	20000270 	.word	0x20000270

0800ab20 <GUI_MEMDEV_CopyToLCDAt>:
 800ab20:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ab24:	460c      	mov	r4, r1
 800ab26:	b085      	sub	sp, #20
 800ab28:	4615      	mov	r5, r2
 800ab2a:	4606      	mov	r6, r0
 800ab2c:	2800      	cmp	r0, #0
 800ab2e:	d042      	beq.n	800abb6 <GUI_MEMDEV_CopyToLCDAt+0x96>
 800ab30:	2000      	movs	r0, #0
 800ab32:	f002 fae3 	bl	800d0fc <GUI_SetDrawMode>
 800ab36:	4b21      	ldr	r3, [pc, #132]	; (800abbc <GUI_MEMDEV_CopyToLCDAt+0x9c>)
 800ab38:	4607      	mov	r7, r0
 800ab3a:	6818      	ldr	r0, [r3, #0]
 800ab3c:	f8d0 8060 	ldr.w	r8, [r0, #96]	; 0x60
 800ab40:	4630      	mov	r0, r6
 800ab42:	f003 fec5 	bl	800e8d0 <GUI_ALLOC_LockH>
 800ab46:	6801      	ldr	r1, [r0, #0]
 800ab48:	9001      	str	r0, [sp, #4]
 800ab4a:	6988      	ldr	r0, [r1, #24]
 800ab4c:	f002 fb22 	bl	800d194 <GUI_SelectLayer>
 800ab50:	4a1b      	ldr	r2, [pc, #108]	; (800abc0 <GUI_MEMDEV_CopyToLCDAt+0xa0>)
 800ab52:	4294      	cmp	r4, r2
 800ab54:	4681      	mov	r9, r0
 800ab56:	d104      	bne.n	800ab62 <GUI_MEMDEV_CopyToLCDAt+0x42>
 800ab58:	9d01      	ldr	r5, [sp, #4]
 800ab5a:	f9b5 4004 	ldrsh.w	r4, [r5, #4]
 800ab5e:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 800ab62:	9b01      	ldr	r3, [sp, #4]
 800ab64:	f8ad 4008 	strh.w	r4, [sp, #8]
 800ab68:	8918      	ldrh	r0, [r3, #8]
 800ab6a:	895b      	ldrh	r3, [r3, #10]
 800ab6c:	f8ad 500a 	strh.w	r5, [sp, #10]
 800ab70:	1e41      	subs	r1, r0, #1
 800ab72:	1e58      	subs	r0, r3, #1
 800ab74:	190a      	adds	r2, r1, r4
 800ab76:	1941      	adds	r1, r0, r5
 800ab78:	f8ad 200c 	strh.w	r2, [sp, #12]
 800ab7c:	f8ad 100e 	strh.w	r1, [sp, #14]
 800ab80:	f7fe ff24 	bl	80099cc <WM_Activate>
 800ab84:	a801      	add	r0, sp, #4
 800ab86:	f003 feb1 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800ab8a:	a802      	add	r0, sp, #8
 800ab8c:	f7fe fd46 	bl	800961c <WM__InitIVRSearch>
 800ab90:	b948      	cbnz	r0, 800aba6 <GUI_MEMDEV_CopyToLCDAt+0x86>
 800ab92:	4648      	mov	r0, r9
 800ab94:	f002 fafe 	bl	800d194 <GUI_SelectLayer>
 800ab98:	4640      	mov	r0, r8
 800ab9a:	f7ff ff9b 	bl	800aad4 <GUI_MEMDEV_Select>
 800ab9e:	4638      	mov	r0, r7
 800aba0:	f002 faac 	bl	800d0fc <GUI_SetDrawMode>
 800aba4:	e007      	b.n	800abb6 <GUI_MEMDEV_CopyToLCDAt+0x96>
 800aba6:	4630      	mov	r0, r6
 800aba8:	4621      	mov	r1, r4
 800abaa:	462a      	mov	r2, r5
 800abac:	f005 fe04 	bl	80107b8 <GUI_MEMDEV__WriteToActiveOpaque>
 800abb0:	f7fe fc74 	bl	800949c <WM__GetNextIVR>
 800abb4:	e7ec      	b.n	800ab90 <GUI_MEMDEV_CopyToLCDAt+0x70>
 800abb6:	b005      	add	sp, #20
 800abb8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800abbc:	20000270 	.word	0x20000270
 800abc0:	fffff001 	.word	0xfffff001

0800abc4 <GUI_MEMDEV_CopyToLCD>:
 800abc4:	4901      	ldr	r1, [pc, #4]	; (800abcc <GUI_MEMDEV_CopyToLCD+0x8>)
 800abc6:	460a      	mov	r2, r1
 800abc8:	f7ff bfaa 	b.w	800ab20 <GUI_MEMDEV_CopyToLCDAt>
 800abcc:	fffff001 	.word	0xfffff001

0800abd0 <_SetPhysRAMAddr>:
 800abd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800abd2:	4604      	mov	r4, r0
 800abd4:	460e      	mov	r6, r1
 800abd6:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800abda:	212a      	movs	r1, #42	; 0x2a
 800abdc:	4615      	mov	r5, r2
 800abde:	4798      	blx	r3
 800abe0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800abe2:	f8d4 7090 	ldr.w	r7, [r4, #144]	; 0x90
 800abe6:	1872      	adds	r2, r6, r1
 800abe8:	f3c2 210f 	ubfx	r1, r2, #8, #16
 800abec:	4620      	mov	r0, r4
 800abee:	47b8      	blx	r7
 800abf0:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800abf2:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800abf6:	b2b7      	uxth	r7, r6
 800abf8:	1839      	adds	r1, r7, r0
 800abfa:	b2c9      	uxtb	r1, r1
 800abfc:	4620      	mov	r0, r4
 800abfe:	4798      	blx	r3
 800ac00:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ac02:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ac06:	18b6      	adds	r6, r6, r2
 800ac08:	4620      	mov	r0, r4
 800ac0a:	f3c6 210f 	ubfx	r1, r6, #8, #16
 800ac0e:	4798      	blx	r3
 800ac10:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800ac12:	f8d4 2090 	ldr.w	r2, [r4, #144]	; 0x90
 800ac16:	1839      	adds	r1, r7, r0
 800ac18:	b2c9      	uxtb	r1, r1
 800ac1a:	4620      	mov	r0, r4
 800ac1c:	4790      	blx	r2
 800ac1e:	f8d4 608c 	ldr.w	r6, [r4, #140]	; 0x8c
 800ac22:	4620      	mov	r0, r4
 800ac24:	212b      	movs	r1, #43	; 0x2b
 800ac26:	47b0      	blx	r6
 800ac28:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ac2a:	f8d4 2090 	ldr.w	r2, [r4, #144]	; 0x90
 800ac2e:	18e9      	adds	r1, r5, r3
 800ac30:	4620      	mov	r0, r4
 800ac32:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800ac36:	4790      	blx	r2
 800ac38:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800ac3a:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ac3e:	b2ae      	uxth	r6, r5
 800ac40:	1831      	adds	r1, r6, r0
 800ac42:	b2c9      	uxtb	r1, r1
 800ac44:	4620      	mov	r0, r4
 800ac46:	4798      	blx	r3
 800ac48:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800ac4a:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ac4e:	18a9      	adds	r1, r5, r2
 800ac50:	4620      	mov	r0, r4
 800ac52:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800ac56:	4798      	blx	r3
 800ac58:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800ac5a:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ac5e:	1832      	adds	r2, r6, r0
 800ac60:	b2d1      	uxtb	r1, r2
 800ac62:	4620      	mov	r0, r4
 800ac64:	4798      	blx	r3
 800ac66:	f8d4 208c 	ldr.w	r2, [r4, #140]	; 0x8c
 800ac6a:	4620      	mov	r0, r4
 800ac6c:	212c      	movs	r1, #44	; 0x2c
 800ac6e:	4790      	blx	r2
 800ac70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800ac72 <_SetRect>:
 800ac72:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ac76:	4604      	mov	r4, r0
 800ac78:	4688      	mov	r8, r1
 800ac7a:	461f      	mov	r7, r3
 800ac7c:	212a      	movs	r1, #42	; 0x2a
 800ac7e:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800ac82:	9d06      	ldr	r5, [sp, #24]
 800ac84:	4616      	mov	r6, r2
 800ac86:	4798      	blx	r3
 800ac88:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ac8a:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ac8e:	eb08 0201 	add.w	r2, r8, r1
 800ac92:	4620      	mov	r0, r4
 800ac94:	f3c2 210f 	ubfx	r1, r2, #8, #16
 800ac98:	4798      	blx	r3
 800ac9a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800ac9c:	f8d4 2090 	ldr.w	r2, [r4, #144]	; 0x90
 800aca0:	eb08 0100 	add.w	r1, r8, r0
 800aca4:	b2c9      	uxtb	r1, r1
 800aca6:	4620      	mov	r0, r4
 800aca8:	4790      	blx	r2
 800acaa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800acac:	f8d4 2090 	ldr.w	r2, [r4, #144]	; 0x90
 800acb0:	18f9      	adds	r1, r7, r3
 800acb2:	4620      	mov	r0, r4
 800acb4:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800acb8:	4790      	blx	r2
 800acba:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800acbc:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800acc0:	1839      	adds	r1, r7, r0
 800acc2:	b2c9      	uxtb	r1, r1
 800acc4:	4620      	mov	r0, r4
 800acc6:	4798      	blx	r3
 800acc8:	f8d4 208c 	ldr.w	r2, [r4, #140]	; 0x8c
 800accc:	4620      	mov	r0, r4
 800acce:	212b      	movs	r1, #43	; 0x2b
 800acd0:	4790      	blx	r2
 800acd2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800acd4:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800acd8:	1831      	adds	r1, r6, r0
 800acda:	f3c1 210f 	ubfx	r1, r1, #8, #16
 800acde:	4620      	mov	r0, r4
 800ace0:	4798      	blx	r3
 800ace2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800ace4:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ace8:	18b1      	adds	r1, r6, r2
 800acea:	4620      	mov	r0, r4
 800acec:	b2c9      	uxtb	r1, r1
 800acee:	4798      	blx	r3
 800acf0:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800acf2:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800acf6:	182a      	adds	r2, r5, r0
 800acf8:	f3c2 210f 	ubfx	r1, r2, #8, #16
 800acfc:	4620      	mov	r0, r4
 800acfe:	4798      	blx	r3
 800ad00:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ad02:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ad06:	186a      	adds	r2, r5, r1
 800ad08:	4620      	mov	r0, r4
 800ad0a:	b2d1      	uxtb	r1, r2
 800ad0c:	4798      	blx	r3
 800ad0e:	f8d4 208c 	ldr.w	r2, [r4, #140]	; 0x8c
 800ad12:	4620      	mov	r0, r4
 800ad14:	212c      	movs	r1, #44	; 0x2c
 800ad16:	4790      	blx	r2
 800ad18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ad1c <_SetOrientation>:
 800ad1c:	b513      	push	{r0, r1, r4, lr}
 800ad1e:	4a0d      	ldr	r2, [pc, #52]	; (800ad54 <_SetOrientation+0x38>)
 800ad20:	4604      	mov	r4, r0
 800ad22:	6851      	ldr	r1, [r2, #4]
 800ad24:	6810      	ldr	r0, [r2, #0]
 800ad26:	f8d4 208c 	ldr.w	r2, [r4, #140]	; 0x8c
 800ad2a:	466b      	mov	r3, sp
 800ad2c:	c303      	stmia	r3!, {r0, r1}
 800ad2e:	4620      	mov	r0, r4
 800ad30:	2136      	movs	r1, #54	; 0x36
 800ad32:	4790      	blx	r2
 800ad34:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800ad36:	a902      	add	r1, sp, #8
 800ad38:	180b      	adds	r3, r1, r0
 800ad3a:	8ca0      	ldrh	r0, [r4, #36]	; 0x24
 800ad3c:	f813 2c08 	ldrb.w	r2, [r3, #-8]
 800ad40:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ad44:	f020 01e0 	bic.w	r1, r0, #224	; 0xe0
 800ad48:	430a      	orrs	r2, r1
 800ad4a:	4620      	mov	r0, r4
 800ad4c:	b291      	uxth	r1, r2
 800ad4e:	4798      	blx	r3
 800ad50:	bd1c      	pop	{r2, r3, r4, pc}
 800ad52:	bf00      	nop
 800ad54:	08019548 	.word	0x08019548

0800ad58 <_ReadPixel_16bpp_B8>:
 800ad58:	b513      	push	{r0, r1, r4, lr}
 800ad5a:	4604      	mov	r4, r0
 800ad5c:	f8d0 310c 	ldr.w	r3, [r0, #268]	; 0x10c
 800ad60:	202e      	movs	r0, #46	; 0x2e
 800ad62:	4798      	blx	r3
 800ad64:	6a21      	ldr	r1, [r4, #32]
 800ad66:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
 800ad6a:	4668      	mov	r0, sp
 800ad6c:	3103      	adds	r1, #3
 800ad6e:	4790      	blx	r2
 800ad70:	6a20      	ldr	r0, [r4, #32]
 800ad72:	ab00      	add	r3, sp, #0
 800ad74:	181b      	adds	r3, r3, r0
 800ad76:	f81d 2000 	ldrb.w	r2, [sp, r0]
 800ad7a:	7859      	ldrb	r1, [r3, #1]
 800ad7c:	789b      	ldrb	r3, [r3, #2]
 800ad7e:	08d0      	lsrs	r0, r2, #3
 800ad80:	02c2      	lsls	r2, r0, #11
 800ad82:	0889      	lsrs	r1, r1, #2
 800ad84:	ea42 1141 	orr.w	r1, r2, r1, lsl #5
 800ad88:	ea41 00d3 	orr.w	r0, r1, r3, lsr #3
 800ad8c:	bd1c      	pop	{r2, r3, r4, pc}

0800ad8e <_ReadPixel_16bpp_B16_I>:
 800ad8e:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ad90:	4604      	mov	r4, r0
 800ad92:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800ad96:	202e      	movs	r0, #46	; 0x2e
 800ad98:	4798      	blx	r3
 800ad9a:	6a21      	ldr	r1, [r4, #32]
 800ad9c:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
 800ada0:	4668      	mov	r0, sp
 800ada2:	3102      	adds	r1, #2
 800ada4:	4790      	blx	r2
 800ada6:	6a20      	ldr	r0, [r4, #32]
 800ada8:	ab00      	add	r3, sp, #0
 800adaa:	eb03 0140 	add.w	r1, r3, r0, lsl #1
 800adae:	f83d 0010 	ldrh.w	r0, [sp, r0, lsl #1]
 800adb2:	884a      	ldrh	r2, [r1, #2]
 800adb4:	f402 437c 	and.w	r3, r2, #64512	; 0xfc00
 800adb8:	f3c2 01c4 	ubfx	r1, r2, #3, #5
 800adbc:	ea41 1253 	orr.w	r2, r1, r3, lsr #5
 800adc0:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
 800adc4:	ea42 2003 	orr.w	r0, r2, r3, lsl #8
 800adc8:	b004      	add	sp, #16
 800adca:	bd10      	pop	{r4, pc}

0800adcc <_SetReg_B8>:
 800adcc:	b538      	push	{r3, r4, r5, lr}
 800adce:	4604      	mov	r4, r0
 800add0:	460d      	mov	r5, r1
 800add2:	f8d0 310c 	ldr.w	r3, [r0, #268]	; 0x10c
 800add6:	0a08      	lsrs	r0, r1, #8
 800add8:	4798      	blx	r3
 800adda:	f8d4 110c 	ldr.w	r1, [r4, #268]	; 0x10c
 800adde:	b2e8      	uxtb	r0, r5
 800ade0:	4788      	blx	r1
 800ade2:	bd38      	pop	{r3, r4, r5, pc}

0800ade4 <_SetReg_B16>:
 800ade4:	b508      	push	{r3, lr}
 800ade6:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800adea:	4608      	mov	r0, r1
 800adec:	4798      	blx	r3
 800adee:	bd08      	pop	{r3, pc}

0800adf0 <_WritePara_B8>:
 800adf0:	b508      	push	{r3, lr}
 800adf2:	f8d0 3110 	ldr.w	r3, [r0, #272]	; 0x110
 800adf6:	b2c8      	uxtb	r0, r1
 800adf8:	4798      	blx	r3
 800adfa:	bd08      	pop	{r3, pc}

0800adfc <_WritePara_B16>:
 800adfc:	b508      	push	{r3, lr}
 800adfe:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800ae02:	4608      	mov	r0, r1
 800ae04:	4798      	blx	r3
 800ae06:	bd08      	pop	{r3, pc}

0800ae08 <_SetInterface>:
 800ae08:	2908      	cmp	r1, #8
 800ae0a:	d006      	beq.n	800ae1a <_SetInterface+0x12>
 800ae0c:	2910      	cmp	r1, #16
 800ae0e:	d10a      	bne.n	800ae26 <_SetInterface+0x1e>
 800ae10:	4b05      	ldr	r3, [pc, #20]	; (800ae28 <_SetInterface+0x20>)
 800ae12:	4906      	ldr	r1, [pc, #24]	; (800ae2c <_SetInterface+0x24>)
 800ae14:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
 800ae18:	e003      	b.n	800ae22 <_SetInterface+0x1a>
 800ae1a:	4a05      	ldr	r2, [pc, #20]	; (800ae30 <_SetInterface+0x28>)
 800ae1c:	4905      	ldr	r1, [pc, #20]	; (800ae34 <_SetInterface+0x2c>)
 800ae1e:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
 800ae22:	f8c0 1090 	str.w	r1, [r0, #144]	; 0x90
 800ae26:	4770      	bx	lr
 800ae28:	0800ade5 	.word	0x0800ade5
 800ae2c:	0800adfd 	.word	0x0800adfd
 800ae30:	0800adcd 	.word	0x0800adcd
 800ae34:	0800adf1 	.word	0x0800adf1

0800ae38 <_ReadRect_16bpp_B16_I>:
 800ae38:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ae3a:	b087      	sub	sp, #28
 800ae3c:	6884      	ldr	r4, [r0, #8]
 800ae3e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 800ae40:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 800ae42:	9700      	str	r7, [sp, #0]
 800ae44:	1a58      	subs	r0, r3, r1
 800ae46:	1abd      	subs	r5, r7, r2
 800ae48:	3001      	adds	r0, #1
 800ae4a:	3501      	adds	r5, #1
 800ae4c:	4345      	muls	r5, r0
 800ae4e:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800ae52:	4620      	mov	r0, r4
 800ae54:	47b8      	blx	r7
 800ae56:	202e      	movs	r0, #46	; 0x2e
 800ae58:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 800ae5c:	4798      	blx	r3
 800ae5e:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
 800ae62:	6a21      	ldr	r1, [r4, #32]
 800ae64:	a802      	add	r0, sp, #8
 800ae66:	4790      	blx	r2
 800ae68:	2102      	movs	r1, #2
 800ae6a:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800ae6e:	a802      	add	r0, sp, #8
 800ae70:	4798      	blx	r3
 800ae72:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800ae76:	f401 407c 	and.w	r0, r1, #64512	; 0xfc00
 800ae7a:	f3c1 02c4 	ubfx	r2, r1, #3, #5
 800ae7e:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800ae82:	ea42 1350 	orr.w	r3, r2, r0, lsr #5
 800ae86:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800ae8a:	ea43 2200 	orr.w	r2, r3, r0, lsl #8
 800ae8e:	3d01      	subs	r5, #1
 800ae90:	f826 2b02 	strh.w	r2, [r6], #2
 800ae94:	d1e8      	bne.n	800ae68 <_ReadRect_16bpp_B16_I+0x30>
 800ae96:	b007      	add	sp, #28
 800ae98:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ae9a <_ReadRect_16bpp_B8>:
 800ae9a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ae9c:	b085      	sub	sp, #20
 800ae9e:	6884      	ldr	r4, [r0, #8]
 800aea0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800aea2:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800aea4:	9700      	str	r7, [sp, #0]
 800aea6:	1a58      	subs	r0, r3, r1
 800aea8:	1abd      	subs	r5, r7, r2
 800aeaa:	3001      	adds	r0, #1
 800aeac:	3501      	adds	r5, #1
 800aeae:	4345      	muls	r5, r0
 800aeb0:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800aeb4:	4620      	mov	r0, r4
 800aeb6:	47b8      	blx	r7
 800aeb8:	202e      	movs	r0, #46	; 0x2e
 800aeba:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 800aebe:	4798      	blx	r3
 800aec0:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
 800aec4:	6a21      	ldr	r1, [r4, #32]
 800aec6:	a802      	add	r0, sp, #8
 800aec8:	4790      	blx	r2
 800aeca:	2103      	movs	r1, #3
 800aecc:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800aed0:	a802      	add	r0, sp, #8
 800aed2:	4798      	blx	r3
 800aed4:	f89d 2008 	ldrb.w	r2, [sp, #8]
 800aed8:	f89d 1009 	ldrb.w	r1, [sp, #9]
 800aedc:	08d3      	lsrs	r3, r2, #3
 800aede:	0888      	lsrs	r0, r1, #2
 800aee0:	f89d 200a 	ldrb.w	r2, [sp, #10]
 800aee4:	02d9      	lsls	r1, r3, #11
 800aee6:	ea41 1040 	orr.w	r0, r1, r0, lsl #5
 800aeea:	ea40 03d2 	orr.w	r3, r0, r2, lsr #3
 800aeee:	3d01      	subs	r5, #1
 800aef0:	f826 3b02 	strh.w	r3, [r6], #2
 800aef4:	d1e9      	bne.n	800aeca <_ReadRect_16bpp_B8+0x30>
 800aef6:	b005      	add	sp, #20
 800aef8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800aefc <GUIDRV_FlexColor_SetFunc66709>:
 800aefc:	b510      	push	{r4, lr}
 800aefe:	4604      	mov	r4, r0
 800af00:	f000 fda8 	bl	800ba54 <GUIDRV_FlexColor__InitOnce>
 800af04:	68a3      	ldr	r3, [r4, #8]
 800af06:	4a12      	ldr	r2, [pc, #72]	; (800af50 <GUIDRV_FlexColor_SetFunc66709+0x54>)
 800af08:	4912      	ldr	r1, [pc, #72]	; (800af54 <GUIDRV_FlexColor_SetFunc66709+0x58>)
 800af0a:	4813      	ldr	r0, [pc, #76]	; (800af58 <GUIDRV_FlexColor_SetFunc66709+0x5c>)
 800af0c:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
 800af10:	f8c3 10b0 	str.w	r1, [r3, #176]	; 0xb0
 800af14:	4a11      	ldr	r2, [pc, #68]	; (800af5c <GUIDRV_FlexColor_SetFunc66709+0x60>)
 800af16:	4912      	ldr	r1, [pc, #72]	; (800af60 <GUIDRV_FlexColor_SetFunc66709+0x64>)
 800af18:	f8c3 00a8 	str.w	r0, [r3, #168]	; 0xa8
 800af1c:	2000      	movs	r0, #0
 800af1e:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 800af22:	f8c3 00bc 	str.w	r0, [r3, #188]	; 0xbc
 800af26:	680a      	ldr	r2, [r1, #0]
 800af28:	f8c3 00cc 	str.w	r0, [r3, #204]	; 0xcc
 800af2c:	480d      	ldr	r0, [pc, #52]	; (800af64 <GUIDRV_FlexColor_SetFunc66709+0x68>)
 800af2e:	490e      	ldr	r1, [pc, #56]	; (800af68 <GUIDRV_FlexColor_SetFunc66709+0x6c>)
 800af30:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
 800af34:	6802      	ldr	r2, [r0, #0]
 800af36:	f8c3 10c8 	str.w	r1, [r3, #200]	; 0xc8
 800af3a:	8cd9      	ldrh	r1, [r3, #38]	; 0x26
 800af3c:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
 800af40:	4a0a      	ldr	r2, [pc, #40]	; (800af6c <GUIDRV_FlexColor_SetFunc66709+0x70>)
 800af42:	f021 0003 	bic.w	r0, r1, #3
 800af46:	84d8      	strh	r0, [r3, #38]	; 0x26
 800af48:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 800af4c:	bd10      	pop	{r4, pc}
 800af4e:	bf00      	nop
 800af50:	0800abd1 	.word	0x0800abd1
 800af54:	0800ad1d 	.word	0x0800ad1d
 800af58:	0800ac73 	.word	0x0800ac73
 800af5c:	0800ad59 	.word	0x0800ad59
 800af60:	20000254 	.word	0x20000254
 800af64:	20000258 	.word	0x20000258
 800af68:	0800ae9b 	.word	0x0800ae9b
 800af6c:	0800ae09 	.word	0x0800ae09

0800af70 <_ReadData>:
 800af70:	b508      	push	{r3, lr}
 800af72:	f8d0 30b4 	ldr.w	r3, [r0, #180]	; 0xb4
 800af76:	4798      	blx	r3
 800af78:	bd08      	pop	{r3, pc}

0800af7a <_WriteData>:
 800af7a:	b508      	push	{r3, lr}
 800af7c:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800af80:	b288      	uxth	r0, r1
 800af82:	4798      	blx	r3
 800af84:	bd08      	pop	{r3, pc}
	...

0800af88 <_DrawBitmap>:
 800af88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800af8c:	b08d      	sub	sp, #52	; 0x34
 800af8e:	469a      	mov	sl, r3
 800af90:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 800af92:	6884      	ldr	r4, [r0, #8]
 800af94:	9009      	str	r0, [sp, #36]	; 0x24
 800af96:	1e6b      	subs	r3, r5, #1
 800af98:	2b01      	cmp	r3, #1
 800af9a:	9108      	str	r1, [sp, #32]
 800af9c:	920a      	str	r2, [sp, #40]	; 0x28
 800af9e:	940b      	str	r4, [sp, #44]	; 0x2c
 800afa0:	d903      	bls.n	800afaa <_DrawBitmap+0x22>
 800afa2:	2d04      	cmp	r5, #4
 800afa4:	d001      	beq.n	800afaa <_DrawBitmap+0x22>
 800afa6:	2d08      	cmp	r5, #8
 800afa8:	d106      	bne.n	800afb8 <_DrawBitmap+0x30>
 800afaa:	4891      	ldr	r0, [pc, #580]	; (800b1f0 <_DrawBitmap+0x268>)
 800afac:	6801      	ldr	r1, [r0, #0]
 800afae:	7c0a      	ldrb	r2, [r1, #16]
 800afb0:	f002 0703 	and.w	r7, r2, #3
 800afb4:	2f02      	cmp	r7, #2
 800afb6:	d010      	beq.n	800afda <_DrawBitmap+0x52>
 800afb8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800afba:	9816      	ldr	r0, [sp, #88]	; 0x58
 800afbc:	9d08      	ldr	r5, [sp, #32]
 800afbe:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 800afc0:	183a      	adds	r2, r7, r0
 800afc2:	1929      	adds	r1, r5, r4
 800afc4:	1e55      	subs	r5, r2, #1
 800afc6:	9500      	str	r5, [sp, #0]
 800afc8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800afca:	eb01 030a 	add.w	r3, r1, sl
 800afce:	f8d5 40a8 	ldr.w	r4, [r5, #168]	; 0xa8
 800afd2:	4628      	mov	r0, r5
 800afd4:	463a      	mov	r2, r7
 800afd6:	3b01      	subs	r3, #1
 800afd8:	47a0      	blx	r4
 800afda:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 800afde:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800afe0:	9c16      	ldr	r4, [sp, #88]	; 0x58
 800afe2:	ebc7 010b 	rsb	r1, r7, fp
 800afe6:	42a1      	cmp	r1, r4
 800afe8:	f280 825b 	bge.w	800b4a2 <_DrawBitmap+0x51a>
 800afec:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800afee:	1e5f      	subs	r7, r3, #1
 800aff0:	2f0f      	cmp	r7, #15
 800aff2:	f200 824f 	bhi.w	800b494 <_DrawBitmap+0x50c>
 800aff6:	e8df f017 	tbh	[pc, r7, lsl #1]
 800affa:	0010      	.short	0x0010
 800affc:	024d00ba 	.word	0x024d00ba
 800b000:	024d0145 	.word	0x024d0145
 800b004:	024d024d 	.word	0x024d024d
 800b008:	024d01df 	.word	0x024d01df
 800b00c:	024d024d 	.word	0x024d024d
 800b010:	024d024d 	.word	0x024d024d
 800b014:	024d024d 	.word	0x024d024d
 800b018:	0247      	.short	0x0247
 800b01a:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 800b01c:	4d74      	ldr	r5, [pc, #464]	; (800b1f0 <_DrawBitmap+0x268>)
 800b01e:	6872      	ldr	r2, [r6, #4]
 800b020:	6837      	ldr	r7, [r6, #0]
 800b022:	682e      	ldr	r6, [r5, #0]
 800b024:	991a      	ldr	r1, [sp, #104]	; 0x68
 800b026:	9207      	str	r2, [sp, #28]
 800b028:	9808      	ldr	r0, [sp, #32]
 800b02a:	7c32      	ldrb	r2, [r6, #16]
 800b02c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800b02e:	1843      	adds	r3, r0, r1
 800b030:	f002 0103 	and.w	r1, r2, #3
 800b034:	2902      	cmp	r1, #2
 800b036:	68a4      	ldr	r4, [r4, #8]
 800b038:	9305      	str	r3, [sp, #20]
 800b03a:	d01d      	beq.n	800b078 <_DrawBitmap+0xf0>
 800b03c:	2903      	cmp	r1, #3
 800b03e:	d070      	beq.n	800b122 <_DrawBitmap+0x19a>
 800b040:	2901      	cmp	r1, #1
 800b042:	d06e      	beq.n	800b122 <_DrawBitmap+0x19a>
 800b044:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800b046:	f8dd 8064 	ldr.w	r8, [sp, #100]	; 0x64
 800b04a:	4656      	mov	r6, sl
 800b04c:	f898 1000 	ldrb.w	r1, [r8]
 800b050:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800b054:	2280      	movs	r2, #128	; 0x80
 800b056:	fa42 f205 	asr.w	r2, r2, r5
 800b05a:	4211      	tst	r1, r2
 800b05c:	bf16      	itet	ne
 800b05e:	9907      	ldrne	r1, [sp, #28]
 800b060:	b2b8      	uxtheq	r0, r7
 800b062:	b288      	uxthne	r0, r1
 800b064:	3501      	adds	r5, #1
 800b066:	4798      	blx	r3
 800b068:	2d08      	cmp	r5, #8
 800b06a:	bf04      	itt	eq
 800b06c:	f108 0801 	addeq.w	r8, r8, #1
 800b070:	2500      	moveq	r5, #0
 800b072:	3e01      	subs	r6, #1
 800b074:	d1ea      	bne.n	800b04c <_DrawBitmap+0xc4>
 800b076:	e20d      	b.n	800b494 <_DrawBitmap+0x50c>
 800b078:	6ee6      	ldr	r6, [r4, #108]	; 0x6c
 800b07a:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800b07e:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800b080:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 800b084:	9606      	str	r6, [sp, #24]
 800b086:	2500      	movs	r5, #0
 800b088:	9203      	str	r2, [sp, #12]
 800b08a:	464e      	mov	r6, r9
 800b08c:	462b      	mov	r3, r5
 800b08e:	9803      	ldr	r0, [sp, #12]
 800b090:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800b094:	7801      	ldrb	r1, [r0, #0]
 800b096:	fa4c f708 	asr.w	r7, ip, r8
 800b09a:	ea11 0c07 	ands.w	ip, r1, r7
 800b09e:	d00b      	beq.n	800b0b8 <_DrawBitmap+0x130>
 800b0a0:	b913      	cbnz	r3, 800b0a8 <_DrawBitmap+0x120>
 800b0a2:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800b0a4:	46b1      	mov	r9, r6
 800b0a6:	9006      	str	r0, [sp, #24]
 800b0a8:	9906      	ldr	r1, [sp, #24]
 800b0aa:	9b07      	ldr	r3, [sp, #28]
 800b0ac:	f821 3b02 	strh.w	r3, [r1], #2
 800b0b0:	3501      	adds	r5, #1
 800b0b2:	9106      	str	r1, [sp, #24]
 800b0b4:	2301      	movs	r3, #1
 800b0b6:	e017      	b.n	800b0e8 <_DrawBitmap+0x160>
 800b0b8:	2b01      	cmp	r3, #1
 800b0ba:	d114      	bne.n	800b0e6 <_DrawBitmap+0x15e>
 800b0bc:	f8cd b000 	str.w	fp, [sp]
 800b0c0:	1e73      	subs	r3, r6, #1
 800b0c2:	f8cd c010 	str.w	ip, [sp, #16]
 800b0c6:	4620      	mov	r0, r4
 800b0c8:	4649      	mov	r1, r9
 800b0ca:	465a      	mov	r2, fp
 800b0cc:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800b0d0:	47b8      	blx	r7
 800b0d2:	4629      	mov	r1, r5
 800b0d4:	f8d4 2138 	ldr.w	r2, [r4, #312]	; 0x138
 800b0d8:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800b0da:	4790      	blx	r2
 800b0dc:	f8dd c010 	ldr.w	ip, [sp, #16]
 800b0e0:	4665      	mov	r5, ip
 800b0e2:	4663      	mov	r3, ip
 800b0e4:	e000      	b.n	800b0e8 <_DrawBitmap+0x160>
 800b0e6:	4663      	mov	r3, ip
 800b0e8:	f108 0801 	add.w	r8, r8, #1
 800b0ec:	3601      	adds	r6, #1
 800b0ee:	f1b8 0f08 	cmp.w	r8, #8
 800b0f2:	d104      	bne.n	800b0fe <_DrawBitmap+0x176>
 800b0f4:	9f03      	ldr	r7, [sp, #12]
 800b0f6:	1c7a      	adds	r2, r7, #1
 800b0f8:	9203      	str	r2, [sp, #12]
 800b0fa:	f04f 0800 	mov.w	r8, #0
 800b0fe:	9805      	ldr	r0, [sp, #20]
 800b100:	eb00 010a 	add.w	r1, r0, sl
 800b104:	42b1      	cmp	r1, r6
 800b106:	d1c2      	bne.n	800b08e <_DrawBitmap+0x106>
 800b108:	f10a 33ff 	add.w	r3, sl, #4294967295
 800b10c:	18c3      	adds	r3, r0, r3
 800b10e:	2d00      	cmp	r5, #0
 800b110:	f000 81c0 	beq.w	800b494 <_DrawBitmap+0x50c>
 800b114:	f8cd b000 	str.w	fp, [sp]
 800b118:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800b11c:	4620      	mov	r0, r4
 800b11e:	4649      	mov	r1, r9
 800b120:	e143      	b.n	800b3aa <_DrawBitmap+0x422>
 800b122:	9e1a      	ldr	r6, [sp, #104]	; 0x68
 800b124:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800b126:	46d0      	mov	r8, sl
 800b128:	2380      	movs	r3, #128	; 0x80
 800b12a:	9805      	ldr	r0, [sp, #20]
 800b12c:	782f      	ldrb	r7, [r5, #0]
 800b12e:	fa43 f306 	asr.w	r3, r3, r6
 800b132:	eb00 090a 	add.w	r9, r0, sl
 800b136:	421f      	tst	r7, r3
 800b138:	ebc8 0909 	rsb	r9, r8, r9
 800b13c:	d00e      	beq.n	800b15c <_DrawBitmap+0x1d4>
 800b13e:	f8d4 70ec 	ldr.w	r7, [r4, #236]	; 0xec
 800b142:	9809      	ldr	r0, [sp, #36]	; 0x24
 800b144:	4649      	mov	r1, r9
 800b146:	465a      	mov	r2, fp
 800b148:	47b8      	blx	r7
 800b14a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800b14c:	f8d4 70f0 	ldr.w	r7, [r4, #240]	; 0xf0
 800b150:	ea80 0301 	eor.w	r3, r0, r1
 800b154:	465a      	mov	r2, fp
 800b156:	9809      	ldr	r0, [sp, #36]	; 0x24
 800b158:	4649      	mov	r1, r9
 800b15a:	47b8      	blx	r7
 800b15c:	3601      	adds	r6, #1
 800b15e:	2e08      	cmp	r6, #8
 800b160:	d101      	bne.n	800b166 <_DrawBitmap+0x1de>
 800b162:	3501      	adds	r5, #1
 800b164:	2600      	movs	r6, #0
 800b166:	f1b8 0801 	subs.w	r8, r8, #1
 800b16a:	d1dd      	bne.n	800b128 <_DrawBitmap+0x1a0>
 800b16c:	e192      	b.n	800b494 <_DrawBitmap+0x50c>
 800b16e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800b170:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800b172:	68a4      	ldr	r4, [r4, #8]
 800b174:	2a00      	cmp	r2, #0
 800b176:	f000 818d 	beq.w	800b494 <_DrawBitmap+0x50c>
 800b17a:	491d      	ldr	r1, [pc, #116]	; (800b1f0 <_DrawBitmap+0x268>)
 800b17c:	9819      	ldr	r0, [sp, #100]	; 0x64
 800b17e:	680f      	ldr	r7, [r1, #0]
 800b180:	7803      	ldrb	r3, [r0, #0]
 800b182:	7c3d      	ldrb	r5, [r7, #16]
 800b184:	9305      	str	r3, [sp, #20]
 800b186:	f015 0203 	ands.w	r2, r5, #3
 800b18a:	d012      	beq.n	800b1b2 <_DrawBitmap+0x22a>
 800b18c:	2a02      	cmp	r2, #2
 800b18e:	f040 8181 	bne.w	800b494 <_DrawBitmap+0x50c>
 800b192:	9e08      	ldr	r6, [sp, #32]
 800b194:	981a      	ldr	r0, [sp, #104]	; 0x68
 800b196:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 800b198:	9919      	ldr	r1, [sp, #100]	; 0x64
 800b19a:	9307      	str	r3, [sp, #28]
 800b19c:	eb06 0900 	add.w	r9, r6, r0
 800b1a0:	2500      	movs	r5, #0
 800b1a2:	f8cd 900c 	str.w	r9, [sp, #12]
 800b1a6:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 800b1aa:	9106      	str	r1, [sp, #24]
 800b1ac:	464e      	mov	r6, r9
 800b1ae:	462b      	mov	r3, r5
 800b1b0:	e040      	b.n	800b234 <_DrawBitmap+0x2ac>
 800b1b2:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800b1b4:	9f19      	ldr	r7, [sp, #100]	; 0x64
 800b1b6:	4656      	mov	r6, sl
 800b1b8:	f1c5 0103 	rsb	r1, r5, #3
 800b1bc:	004b      	lsls	r3, r1, #1
 800b1be:	f1c3 0006 	rsb	r0, r3, #6
 800b1c2:	22c0      	movs	r2, #192	; 0xc0
 800b1c4:	9905      	ldr	r1, [sp, #20]
 800b1c6:	fa42 f200 	asr.w	r2, r2, r0
 800b1ca:	400a      	ands	r2, r1
 800b1cc:	fa22 f203 	lsr.w	r2, r2, r3
 800b1d0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 800b1d2:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800b1d6:	f830 0022 	ldrh.w	r0, [r0, r2, lsl #2]
 800b1da:	3501      	adds	r5, #1
 800b1dc:	4798      	blx	r3
 800b1de:	2d04      	cmp	r5, #4
 800b1e0:	d103      	bne.n	800b1ea <_DrawBitmap+0x262>
 800b1e2:	787d      	ldrb	r5, [r7, #1]
 800b1e4:	3701      	adds	r7, #1
 800b1e6:	9505      	str	r5, [sp, #20]
 800b1e8:	2500      	movs	r5, #0
 800b1ea:	3e01      	subs	r6, #1
 800b1ec:	d1e4      	bne.n	800b1b8 <_DrawBitmap+0x230>
 800b1ee:	e151      	b.n	800b494 <_DrawBitmap+0x50c>
 800b1f0:	20000270 	.word	0x20000270
 800b1f4:	b913      	cbnz	r3, 800b1fc <_DrawBitmap+0x274>
 800b1f6:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 800b1f8:	9603      	str	r6, [sp, #12]
 800b1fa:	9107      	str	r1, [sp, #28]
 800b1fc:	981b      	ldr	r0, [sp, #108]	; 0x6c
 800b1fe:	9f07      	ldr	r7, [sp, #28]
 800b200:	f850 302c 	ldr.w	r3, [r0, ip, lsl #2]
 800b204:	f827 3b02 	strh.w	r3, [r7], #2
 800b208:	3501      	adds	r5, #1
 800b20a:	9707      	str	r7, [sp, #28]
 800b20c:	2301      	movs	r3, #1
 800b20e:	f108 0801 	add.w	r8, r8, #1
 800b212:	3601      	adds	r6, #1
 800b214:	f1b8 0f04 	cmp.w	r8, #4
 800b218:	d107      	bne.n	800b22a <_DrawBitmap+0x2a2>
 800b21a:	9a06      	ldr	r2, [sp, #24]
 800b21c:	9806      	ldr	r0, [sp, #24]
 800b21e:	7851      	ldrb	r1, [r2, #1]
 800b220:	1c47      	adds	r7, r0, #1
 800b222:	9105      	str	r1, [sp, #20]
 800b224:	9706      	str	r7, [sp, #24]
 800b226:	f04f 0800 	mov.w	r8, #0
 800b22a:	eb09 020a 	add.w	r2, r9, sl
 800b22e:	42b2      	cmp	r2, r6
 800b230:	f000 80b0 	beq.w	800b394 <_DrawBitmap+0x40c>
 800b234:	f1c8 0703 	rsb	r7, r8, #3
 800b238:	007a      	lsls	r2, r7, #1
 800b23a:	f1c2 0006 	rsb	r0, r2, #6
 800b23e:	f04f 0cc0 	mov.w	ip, #192	; 0xc0
 800b242:	9f05      	ldr	r7, [sp, #20]
 800b244:	fa4c f100 	asr.w	r1, ip, r0
 800b248:	ea01 0007 	and.w	r0, r1, r7
 800b24c:	fa30 fc02 	lsrs.w	ip, r0, r2
 800b250:	d1d0      	bne.n	800b1f4 <_DrawBitmap+0x26c>
 800b252:	2b01      	cmp	r3, #1
 800b254:	d114      	bne.n	800b280 <_DrawBitmap+0x2f8>
 800b256:	f8cd b000 	str.w	fp, [sp]
 800b25a:	1e73      	subs	r3, r6, #1
 800b25c:	f8cd c010 	str.w	ip, [sp, #16]
 800b260:	4620      	mov	r0, r4
 800b262:	9903      	ldr	r1, [sp, #12]
 800b264:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800b268:	465a      	mov	r2, fp
 800b26a:	47b8      	blx	r7
 800b26c:	4629      	mov	r1, r5
 800b26e:	f8d4 2138 	ldr.w	r2, [r4, #312]	; 0x138
 800b272:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800b274:	4790      	blx	r2
 800b276:	f8dd c010 	ldr.w	ip, [sp, #16]
 800b27a:	4665      	mov	r5, ip
 800b27c:	4663      	mov	r3, ip
 800b27e:	e7c6      	b.n	800b20e <_DrawBitmap+0x286>
 800b280:	4663      	mov	r3, ip
 800b282:	e7c4      	b.n	800b20e <_DrawBitmap+0x286>
 800b284:	9809      	ldr	r0, [sp, #36]	; 0x24
 800b286:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800b288:	6884      	ldr	r4, [r0, #8]
 800b28a:	2a00      	cmp	r2, #0
 800b28c:	f000 8102 	beq.w	800b494 <_DrawBitmap+0x50c>
 800b290:	4b85      	ldr	r3, [pc, #532]	; (800b4a8 <_DrawBitmap+0x520>)
 800b292:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800b294:	681f      	ldr	r7, [r3, #0]
 800b296:	7829      	ldrb	r1, [r5, #0]
 800b298:	7c38      	ldrb	r0, [r7, #16]
 800b29a:	9105      	str	r1, [sp, #20]
 800b29c:	f010 0203 	ands.w	r2, r0, #3
 800b2a0:	d012      	beq.n	800b2c8 <_DrawBitmap+0x340>
 800b2a2:	2a02      	cmp	r2, #2
 800b2a4:	f040 80f6 	bne.w	800b494 <_DrawBitmap+0x50c>
 800b2a8:	9e08      	ldr	r6, [sp, #32]
 800b2aa:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800b2ac:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800b2ae:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 800b2b0:	9306      	str	r3, [sp, #24]
 800b2b2:	eb06 0905 	add.w	r9, r6, r5
 800b2b6:	2500      	movs	r5, #0
 800b2b8:	9107      	str	r1, [sp, #28]
 800b2ba:	f8cd 900c 	str.w	r9, [sp, #12]
 800b2be:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 800b2c2:	464e      	mov	r6, r9
 800b2c4:	462b      	mov	r3, r5
 800b2c6:	e03d      	b.n	800b344 <_DrawBitmap+0x3bc>
 800b2c8:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800b2ca:	9f19      	ldr	r7, [sp, #100]	; 0x64
 800b2cc:	4656      	mov	r6, sl
 800b2ce:	f1c5 0301 	rsb	r3, r5, #1
 800b2d2:	009b      	lsls	r3, r3, #2
 800b2d4:	f1c3 0004 	rsb	r0, r3, #4
 800b2d8:	21f0      	movs	r1, #240	; 0xf0
 800b2da:	fa41 f200 	asr.w	r2, r1, r0
 800b2de:	9805      	ldr	r0, [sp, #20]
 800b2e0:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800b2e2:	4002      	ands	r2, r0
 800b2e4:	fa22 f203 	lsr.w	r2, r2, r3
 800b2e8:	3501      	adds	r5, #1
 800b2ea:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800b2ee:	f831 0022 	ldrh.w	r0, [r1, r2, lsl #2]
 800b2f2:	4798      	blx	r3
 800b2f4:	2d02      	cmp	r5, #2
 800b2f6:	d103      	bne.n	800b300 <_DrawBitmap+0x378>
 800b2f8:	787d      	ldrb	r5, [r7, #1]
 800b2fa:	3701      	adds	r7, #1
 800b2fc:	9505      	str	r5, [sp, #20]
 800b2fe:	2500      	movs	r5, #0
 800b300:	3e01      	subs	r6, #1
 800b302:	d1e4      	bne.n	800b2ce <_DrawBitmap+0x346>
 800b304:	e0c6      	b.n	800b494 <_DrawBitmap+0x50c>
 800b306:	b913      	cbnz	r3, 800b30e <_DrawBitmap+0x386>
 800b308:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800b30a:	9603      	str	r6, [sp, #12]
 800b30c:	9007      	str	r0, [sp, #28]
 800b30e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800b310:	9f07      	ldr	r7, [sp, #28]
 800b312:	f851 302c 	ldr.w	r3, [r1, ip, lsl #2]
 800b316:	f827 3b02 	strh.w	r3, [r7], #2
 800b31a:	3501      	adds	r5, #1
 800b31c:	9707      	str	r7, [sp, #28]
 800b31e:	2301      	movs	r3, #1
 800b320:	f108 0801 	add.w	r8, r8, #1
 800b324:	3601      	adds	r6, #1
 800b326:	f1b8 0f02 	cmp.w	r8, #2
 800b32a:	d107      	bne.n	800b33c <_DrawBitmap+0x3b4>
 800b32c:	9a06      	ldr	r2, [sp, #24]
 800b32e:	9906      	ldr	r1, [sp, #24]
 800b330:	7850      	ldrb	r0, [r2, #1]
 800b332:	1c4f      	adds	r7, r1, #1
 800b334:	9005      	str	r0, [sp, #20]
 800b336:	9706      	str	r7, [sp, #24]
 800b338:	f04f 0800 	mov.w	r8, #0
 800b33c:	eb09 020a 	add.w	r2, r9, sl
 800b340:	42b2      	cmp	r2, r6
 800b342:	d027      	beq.n	800b394 <_DrawBitmap+0x40c>
 800b344:	f1c8 0701 	rsb	r7, r8, #1
 800b348:	00b8      	lsls	r0, r7, #2
 800b34a:	f1c0 0204 	rsb	r2, r0, #4
 800b34e:	f04f 0cf0 	mov.w	ip, #240	; 0xf0
 800b352:	9f05      	ldr	r7, [sp, #20]
 800b354:	fa4c f102 	asr.w	r1, ip, r2
 800b358:	ea01 0207 	and.w	r2, r1, r7
 800b35c:	fa32 fc00 	lsrs.w	ip, r2, r0
 800b360:	d1d1      	bne.n	800b306 <_DrawBitmap+0x37e>
 800b362:	2b01      	cmp	r3, #1
 800b364:	d114      	bne.n	800b390 <_DrawBitmap+0x408>
 800b366:	f8cd b000 	str.w	fp, [sp]
 800b36a:	1e73      	subs	r3, r6, #1
 800b36c:	f8cd c010 	str.w	ip, [sp, #16]
 800b370:	4620      	mov	r0, r4
 800b372:	9903      	ldr	r1, [sp, #12]
 800b374:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800b378:	465a      	mov	r2, fp
 800b37a:	47b8      	blx	r7
 800b37c:	4629      	mov	r1, r5
 800b37e:	f8d4 2138 	ldr.w	r2, [r4, #312]	; 0x138
 800b382:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800b384:	4790      	blx	r2
 800b386:	f8dd c010 	ldr.w	ip, [sp, #16]
 800b38a:	4665      	mov	r5, ip
 800b38c:	4663      	mov	r3, ip
 800b38e:	e7c7      	b.n	800b320 <_DrawBitmap+0x398>
 800b390:	4663      	mov	r3, ip
 800b392:	e7c5      	b.n	800b320 <_DrawBitmap+0x398>
 800b394:	f10a 33ff 	add.w	r3, sl, #4294967295
 800b398:	444b      	add	r3, r9
 800b39a:	2d00      	cmp	r5, #0
 800b39c:	d07a      	beq.n	800b494 <_DrawBitmap+0x50c>
 800b39e:	f8cd b000 	str.w	fp, [sp]
 800b3a2:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800b3a6:	9903      	ldr	r1, [sp, #12]
 800b3a8:	4620      	mov	r0, r4
 800b3aa:	465a      	mov	r2, fp
 800b3ac:	47b0      	blx	r6
 800b3ae:	f8d4 2138 	ldr.w	r2, [r4, #312]	; 0x138
 800b3b2:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800b3b4:	4629      	mov	r1, r5
 800b3b6:	e06c      	b.n	800b492 <_DrawBitmap+0x50a>
 800b3b8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800b3ba:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800b3bc:	68ac      	ldr	r4, [r5, #8]
 800b3be:	2900      	cmp	r1, #0
 800b3c0:	d068      	beq.n	800b494 <_DrawBitmap+0x50c>
 800b3c2:	4b39      	ldr	r3, [pc, #228]	; (800b4a8 <_DrawBitmap+0x520>)
 800b3c4:	681f      	ldr	r7, [r3, #0]
 800b3c6:	7c38      	ldrb	r0, [r7, #16]
 800b3c8:	f010 0203 	ands.w	r2, r0, #3
 800b3cc:	d009      	beq.n	800b3e2 <_DrawBitmap+0x45a>
 800b3ce:	2a02      	cmp	r2, #2
 800b3d0:	d160      	bne.n	800b494 <_DrawBitmap+0x50c>
 800b3d2:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800b3d6:	f8d4 c06c 	ldr.w	ip, [r4, #108]	; 0x6c
 800b3da:	2600      	movs	r6, #0
 800b3dc:	464f      	mov	r7, r9
 800b3de:	4633      	mov	r3, r6
 800b3e0:	e020      	b.n	800b424 <_DrawBitmap+0x49c>
 800b3e2:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800b3e4:	9919      	ldr	r1, [sp, #100]	; 0x64
 800b3e6:	eb01 000a 	add.w	r0, r1, sl
 800b3ea:	1b42      	subs	r2, r0, r5
 800b3ec:	2a00      	cmp	r2, #0
 800b3ee:	dd51      	ble.n	800b494 <_DrawBitmap+0x50c>
 800b3f0:	f815 1b01 	ldrb.w	r1, [r5], #1
 800b3f4:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800b3f6:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800b3fa:	f837 0021 	ldrh.w	r0, [r7, r1, lsl #2]
 800b3fe:	4798      	blx	r3
 800b400:	e7f0      	b.n	800b3e4 <_DrawBitmap+0x45c>
 800b402:	b913      	cbnz	r3, 800b40a <_DrawBitmap+0x482>
 800b404:	f8d4 c06c 	ldr.w	ip, [r4, #108]	; 0x6c
 800b408:	46b9      	mov	r9, r7
 800b40a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800b40c:	f851 0028 	ldr.w	r0, [r1, r8, lsl #2]
 800b410:	f82c 0b02 	strh.w	r0, [ip], #2
 800b414:	3601      	adds	r6, #1
 800b416:	2301      	movs	r3, #1
 800b418:	9d08      	ldr	r5, [sp, #32]
 800b41a:	3701      	adds	r7, #1
 800b41c:	eb0a 0205 	add.w	r2, sl, r5
 800b420:	42ba      	cmp	r2, r7
 800b422:	d020      	beq.n	800b466 <_DrawBitmap+0x4de>
 800b424:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800b426:	9908      	ldr	r1, [sp, #32]
 800b428:	1a68      	subs	r0, r5, r1
 800b42a:	f810 8007 	ldrb.w	r8, [r0, r7]
 800b42e:	f1b8 0f00 	cmp.w	r8, #0
 800b432:	d1e6      	bne.n	800b402 <_DrawBitmap+0x47a>
 800b434:	2b01      	cmp	r3, #1
 800b436:	d114      	bne.n	800b462 <_DrawBitmap+0x4da>
 800b438:	f8cd b000 	str.w	fp, [sp]
 800b43c:	1e7b      	subs	r3, r7, #1
 800b43e:	f8cd c010 	str.w	ip, [sp, #16]
 800b442:	4620      	mov	r0, r4
 800b444:	4649      	mov	r1, r9
 800b446:	465a      	mov	r2, fp
 800b448:	f8d4 50a8 	ldr.w	r5, [r4, #168]	; 0xa8
 800b44c:	47a8      	blx	r5
 800b44e:	4631      	mov	r1, r6
 800b450:	f8d4 2138 	ldr.w	r2, [r4, #312]	; 0x138
 800b454:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800b456:	4790      	blx	r2
 800b458:	4646      	mov	r6, r8
 800b45a:	4643      	mov	r3, r8
 800b45c:	f8dd c010 	ldr.w	ip, [sp, #16]
 800b460:	e7da      	b.n	800b418 <_DrawBitmap+0x490>
 800b462:	4643      	mov	r3, r8
 800b464:	e7d8      	b.n	800b418 <_DrawBitmap+0x490>
 800b466:	f10a 33ff 	add.w	r3, sl, #4294967295
 800b46a:	18eb      	adds	r3, r5, r3
 800b46c:	b196      	cbz	r6, 800b494 <_DrawBitmap+0x50c>
 800b46e:	f8cd b000 	str.w	fp, [sp]
 800b472:	4620      	mov	r0, r4
 800b474:	4649      	mov	r1, r9
 800b476:	465a      	mov	r2, fp
 800b478:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800b47c:	47b8      	blx	r7
 800b47e:	f8d4 2138 	ldr.w	r2, [r4, #312]	; 0x138
 800b482:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800b484:	4631      	mov	r1, r6
 800b486:	e004      	b.n	800b492 <_DrawBitmap+0x50a>
 800b488:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800b48a:	f8d0 2138 	ldr.w	r2, [r0, #312]	; 0x138
 800b48e:	9819      	ldr	r0, [sp, #100]	; 0x64
 800b490:	4651      	mov	r1, sl
 800b492:	4790      	blx	r2
 800b494:	9c19      	ldr	r4, [sp, #100]	; 0x64
 800b496:	9d18      	ldr	r5, [sp, #96]	; 0x60
 800b498:	1967      	adds	r7, r4, r5
 800b49a:	9719      	str	r7, [sp, #100]	; 0x64
 800b49c:	f10b 0b01 	add.w	fp, fp, #1
 800b4a0:	e59d      	b.n	800afde <_DrawBitmap+0x56>
 800b4a2:	b00d      	add	sp, #52	; 0x34
 800b4a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b4a8:	20000270 	.word	0x20000270

0800b4ac <_FillRect>:
 800b4ac:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b4b0:	4f38      	ldr	r7, [pc, #224]	; (800b594 <_FillRect+0xe8>)
 800b4b2:	6884      	ldr	r4, [r0, #8]
 800b4b4:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800b4b8:	4682      	mov	sl, r0
 800b4ba:	6838      	ldr	r0, [r7, #0]
 800b4bc:	7c00      	ldrb	r0, [r0, #16]
 800b4be:	07c0      	lsls	r0, r0, #31
 800b4c0:	460e      	mov	r6, r1
 800b4c2:	4615      	mov	r5, r2
 800b4c4:	4698      	mov	r8, r3
 800b4c6:	d53d      	bpl.n	800b544 <_FillRect+0x98>
 800b4c8:	454d      	cmp	r5, r9
 800b4ca:	dc61      	bgt.n	800b590 <_FillRect+0xe4>
 800b4cc:	f8d4 c0c4 	ldr.w	ip, [r4, #196]	; 0xc4
 800b4d0:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800b4d2:	f1bc 0f00 	cmp.w	ip, #0
 800b4d6:	d101      	bne.n	800b4dc <_FillRect+0x30>
 800b4d8:	46b3      	mov	fp, r6
 800b4da:	e007      	b.n	800b4ec <_FillRect+0x40>
 800b4dc:	e88d 00a0 	stmia.w	sp, {r5, r7}
 800b4e0:	4650      	mov	r0, sl
 800b4e2:	4631      	mov	r1, r6
 800b4e4:	462a      	mov	r2, r5
 800b4e6:	4643      	mov	r3, r8
 800b4e8:	47e0      	blx	ip
 800b4ea:	e00d      	b.n	800b508 <_FillRect+0x5c>
 800b4ec:	45c3      	cmp	fp, r8
 800b4ee:	dc0a      	bgt.n	800b506 <_FillRect+0x5a>
 800b4f0:	4659      	mov	r1, fp
 800b4f2:	f8d4 30ec 	ldr.w	r3, [r4, #236]	; 0xec
 800b4f6:	4650      	mov	r0, sl
 800b4f8:	462a      	mov	r2, r5
 800b4fa:	4798      	blx	r3
 800b4fc:	f10b 0b01 	add.w	fp, fp, #1
 800b500:	f827 0b02 	strh.w	r0, [r7], #2
 800b504:	e7f2      	b.n	800b4ec <_FillRect+0x40>
 800b506:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800b508:	ebc6 0108 	rsb	r1, r6, r8
 800b50c:	f101 0b01 	add.w	fp, r1, #1
 800b510:	3f02      	subs	r7, #2
 800b512:	465b      	mov	r3, fp
 800b514:	b13b      	cbz	r3, 800b526 <_FillRect+0x7a>
 800b516:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800b518:	8879      	ldrh	r1, [r7, #2]
 800b51a:	ea81 0200 	eor.w	r2, r1, r0
 800b51e:	f827 2f02 	strh.w	r2, [r7, #2]!
 800b522:	3b01      	subs	r3, #1
 800b524:	e7f6      	b.n	800b514 <_FillRect+0x68>
 800b526:	9500      	str	r5, [sp, #0]
 800b528:	462a      	mov	r2, r5
 800b52a:	4620      	mov	r0, r4
 800b52c:	4631      	mov	r1, r6
 800b52e:	4643      	mov	r3, r8
 800b530:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800b534:	47b8      	blx	r7
 800b536:	f8d4 2138 	ldr.w	r2, [r4, #312]	; 0x138
 800b53a:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800b53c:	4659      	mov	r1, fp
 800b53e:	4790      	blx	r2
 800b540:	3501      	adds	r5, #1
 800b542:	e7c1      	b.n	800b4c8 <_FillRect+0x1c>
 800b544:	1a5e      	subs	r6, r3, r1
 800b546:	ebc2 0509 	rsb	r5, r2, r9
 800b54a:	1c70      	adds	r0, r6, #1
 800b54c:	f8cd 9000 	str.w	r9, [sp]
 800b550:	3501      	adds	r5, #1
 800b552:	4345      	muls	r5, r0
 800b554:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800b558:	4620      	mov	r0, r4
 800b55a:	47b0      	blx	r6
 800b55c:	683b      	ldr	r3, [r7, #0]
 800b55e:	6ea7      	ldr	r7, [r4, #104]	; 0x68
 800b560:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 800b562:	f8d1 8000 	ldr.w	r8, [r1]
 800b566:	2001      	movs	r0, #1
 800b568:	b195      	cbz	r5, 800b590 <_FillRect+0xe4>
 800b56a:	2dfa      	cmp	r5, #250	; 0xfa
 800b56c:	bf34      	ite	cc
 800b56e:	462e      	movcc	r6, r5
 800b570:	26fa      	movcs	r6, #250	; 0xfa
 800b572:	b128      	cbz	r0, 800b580 <_FillRect+0xd4>
 800b574:	4638      	mov	r0, r7
 800b576:	fa1f f188 	uxth.w	r1, r8
 800b57a:	4632      	mov	r2, r6
 800b57c:	f001 f829 	bl	800c5d2 <GUI__memset16>
 800b580:	4638      	mov	r0, r7
 800b582:	f8d4 2138 	ldr.w	r2, [r4, #312]	; 0x138
 800b586:	4631      	mov	r1, r6
 800b588:	4790      	blx	r2
 800b58a:	1bad      	subs	r5, r5, r6
 800b58c:	2000      	movs	r0, #0
 800b58e:	e7eb      	b.n	800b568 <_FillRect+0xbc>
 800b590:	e8bd 8ffe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b594:	20000270 	.word	0x20000270

0800b598 <GUIDRV_FlexColor_SetMode16bppC0B16>:
 800b598:	b510      	push	{r4, lr}
 800b59a:	4604      	mov	r4, r0
 800b59c:	f000 fa5a 	bl	800ba54 <GUIDRV_FlexColor__InitOnce>
 800b5a0:	68a4      	ldr	r4, [r4, #8]
 800b5a2:	4b10      	ldr	r3, [pc, #64]	; (800b5e4 <GUIDRV_FlexColor_SetMode16bppC0B16+0x4c>)
 800b5a4:	4810      	ldr	r0, [pc, #64]	; (800b5e8 <GUIDRV_FlexColor_SetMode16bppC0B16+0x50>)
 800b5a6:	4911      	ldr	r1, [pc, #68]	; (800b5ec <GUIDRV_FlexColor_SetMode16bppC0B16+0x54>)
 800b5a8:	f8c4 30e4 	str.w	r3, [r4, #228]	; 0xe4
 800b5ac:	f8c4 00e8 	str.w	r0, [r4, #232]	; 0xe8
 800b5b0:	4b0f      	ldr	r3, [pc, #60]	; (800b5f0 <GUIDRV_FlexColor_SetMode16bppC0B16+0x58>)
 800b5b2:	f8c4 10ec 	str.w	r1, [r4, #236]	; 0xec
 800b5b6:	4a0f      	ldr	r2, [pc, #60]	; (800b5f4 <GUIDRV_FlexColor_SetMode16bppC0B16+0x5c>)
 800b5b8:	f8d4 10c4 	ldr.w	r1, [r4, #196]	; 0xc4
 800b5bc:	480e      	ldr	r0, [pc, #56]	; (800b5f8 <GUIDRV_FlexColor_SetMode16bppC0B16+0x60>)
 800b5be:	f8c4 20f0 	str.w	r2, [r4, #240]	; 0xf0
 800b5c2:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
 800b5c6:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
 800b5ca:	f8c4 10fc 	str.w	r1, [r4, #252]	; 0xfc
 800b5ce:	4620      	mov	r0, r4
 800b5d0:	f8d4 2094 	ldr.w	r2, [r4, #148]	; 0x94
 800b5d4:	2110      	movs	r1, #16
 800b5d6:	4790      	blx	r2
 800b5d8:	4808      	ldr	r0, [pc, #32]	; (800b5fc <GUIDRV_FlexColor_SetMode16bppC0B16+0x64>)
 800b5da:	2310      	movs	r3, #16
 800b5dc:	63a3      	str	r3, [r4, #56]	; 0x38
 800b5de:	6460      	str	r0, [r4, #68]	; 0x44
 800b5e0:	bd10      	pop	{r4, pc}
 800b5e2:	bf00      	nop
 800b5e4:	0800af89 	.word	0x0800af89
 800b5e8:	0800b4ad 	.word	0x0800b4ad
 800b5ec:	0800b99f 	.word	0x0800b99f
 800b5f0:	0800af71 	.word	0x0800af71
 800b5f4:	0800b90b 	.word	0x0800b90b
 800b5f8:	0800af7b 	.word	0x0800af7b
 800b5fc:	0802d36c 	.word	0x0802d36c

0800b600 <_Log2PhysX_X0Y0S0>:
 800b600:	4608      	mov	r0, r1
 800b602:	4770      	bx	lr

0800b604 <_Log2PhysX_X1Y0S0>:
 800b604:	6800      	ldr	r0, [r0, #0]
 800b606:	1a41      	subs	r1, r0, r1
 800b608:	1e48      	subs	r0, r1, #1
 800b60a:	4770      	bx	lr

0800b60c <_Log2PhysX_X0Y1S0>:
 800b60c:	4608      	mov	r0, r1
 800b60e:	4770      	bx	lr

0800b610 <_Log2PhysX_X1Y1S0>:
 800b610:	6800      	ldr	r0, [r0, #0]
 800b612:	1a41      	subs	r1, r0, r1
 800b614:	1e48      	subs	r0, r1, #1
 800b616:	4770      	bx	lr

0800b618 <_Log2PhysX_X0Y0S1>:
 800b618:	4610      	mov	r0, r2
 800b61a:	4770      	bx	lr

0800b61c <_Log2PhysX_X1Y0S1>:
 800b61c:	6840      	ldr	r0, [r0, #4]
 800b61e:	1a81      	subs	r1, r0, r2
 800b620:	1e48      	subs	r0, r1, #1
 800b622:	4770      	bx	lr

0800b624 <_Log2PhysX_X0Y1S1>:
 800b624:	4610      	mov	r0, r2
 800b626:	4770      	bx	lr

0800b628 <_Log2PhysX_X1Y1S1>:
 800b628:	6840      	ldr	r0, [r0, #4]
 800b62a:	1a81      	subs	r1, r0, r2
 800b62c:	1e48      	subs	r0, r1, #1
 800b62e:	4770      	bx	lr

0800b630 <_Log2PhysY_X0Y0S0>:
 800b630:	4610      	mov	r0, r2
 800b632:	4770      	bx	lr

0800b634 <_Log2PhysY_X1Y0S0>:
 800b634:	4610      	mov	r0, r2
 800b636:	4770      	bx	lr

0800b638 <_Log2PhysY_X0Y1S0>:
 800b638:	6840      	ldr	r0, [r0, #4]
 800b63a:	1a81      	subs	r1, r0, r2
 800b63c:	1e48      	subs	r0, r1, #1
 800b63e:	4770      	bx	lr

0800b640 <_Log2PhysY_X1Y1S0>:
 800b640:	6840      	ldr	r0, [r0, #4]
 800b642:	1a81      	subs	r1, r0, r2
 800b644:	1e48      	subs	r0, r1, #1
 800b646:	4770      	bx	lr

0800b648 <_Log2PhysY_X0Y0S1>:
 800b648:	4608      	mov	r0, r1
 800b64a:	4770      	bx	lr

0800b64c <_Log2PhysY_X1Y0S1>:
 800b64c:	4608      	mov	r0, r1
 800b64e:	4770      	bx	lr

0800b650 <_Log2PhysY_X0Y1S1>:
 800b650:	6800      	ldr	r0, [r0, #0]
 800b652:	1a41      	subs	r1, r0, r1
 800b654:	1e48      	subs	r0, r1, #1
 800b656:	4770      	bx	lr

0800b658 <_Log2PhysY_X1Y1S1>:
 800b658:	6800      	ldr	r0, [r0, #0]
 800b65a:	1a41      	subs	r1, r0, r1
 800b65c:	1e48      	subs	r0, r1, #1
 800b65e:	4770      	bx	lr

0800b660 <_SetPixelIndex>:
 800b660:	b510      	push	{r4, lr}
 800b662:	6884      	ldr	r4, [r0, #8]
 800b664:	f8d4 40f0 	ldr.w	r4, [r4, #240]	; 0xf0
 800b668:	47a0      	blx	r4
 800b66a:	bd10      	pop	{r4, pc}

0800b66c <_GetPixelIndex>:
 800b66c:	b508      	push	{r3, lr}
 800b66e:	6883      	ldr	r3, [r0, #8]
 800b670:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 800b674:	4798      	blx	r3
 800b676:	bd08      	pop	{r3, pc}

0800b678 <_XorPixel>:
 800b678:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b67a:	4604      	mov	r4, r0
 800b67c:	460f      	mov	r7, r1
 800b67e:	4616      	mov	r6, r2
 800b680:	6885      	ldr	r5, [r0, #8]
 800b682:	f7ff fff3 	bl	800b66c <_GetPixelIndex>
 800b686:	9001      	str	r0, [sp, #4]
 800b688:	f8dd e004 	ldr.w	lr, [sp, #4]
 800b68c:	6aab      	ldr	r3, [r5, #40]	; 0x28
 800b68e:	4620      	mov	r0, r4
 800b690:	4639      	mov	r1, r7
 800b692:	4632      	mov	r2, r6
 800b694:	ea8e 0303 	eor.w	r3, lr, r3
 800b698:	f7ff ffe2 	bl	800b660 <_SetPixelIndex>
 800b69c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

0800b69e <_DrawHLine>:
 800b69e:	b513      	push	{r0, r1, r4, lr}
 800b6a0:	6884      	ldr	r4, [r0, #8]
 800b6a2:	9200      	str	r2, [sp, #0]
 800b6a4:	f8d4 40e8 	ldr.w	r4, [r4, #232]	; 0xe8
 800b6a8:	47a0      	blx	r4
 800b6aa:	bd1c      	pop	{r2, r3, r4, pc}

0800b6ac <_DrawVLine>:
 800b6ac:	b513      	push	{r0, r1, r4, lr}
 800b6ae:	6884      	ldr	r4, [r0, #8]
 800b6b0:	9300      	str	r3, [sp, #0]
 800b6b2:	f8d4 40e8 	ldr.w	r4, [r4, #232]	; 0xe8
 800b6b6:	460b      	mov	r3, r1
 800b6b8:	47a0      	blx	r4
 800b6ba:	bd1c      	pop	{r2, r3, r4, pc}

0800b6bc <_FillRect>:
 800b6bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b6be:	9c06      	ldr	r4, [sp, #24]
 800b6c0:	6885      	ldr	r5, [r0, #8]
 800b6c2:	9400      	str	r4, [sp, #0]
 800b6c4:	f8d5 40e8 	ldr.w	r4, [r5, #232]	; 0xe8
 800b6c8:	47a0      	blx	r4
 800b6ca:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800b6cc <_DrawBitmap>:
 800b6cc:	b530      	push	{r4, r5, lr}
 800b6ce:	b087      	sub	sp, #28
 800b6d0:	6885      	ldr	r5, [r0, #8]
 800b6d2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800b6d4:	9400      	str	r4, [sp, #0]
 800b6d6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800b6d8:	9401      	str	r4, [sp, #4]
 800b6da:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800b6dc:	9402      	str	r4, [sp, #8]
 800b6de:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800b6e0:	9403      	str	r4, [sp, #12]
 800b6e2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800b6e4:	9404      	str	r4, [sp, #16]
 800b6e6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 800b6e8:	9405      	str	r4, [sp, #20]
 800b6ea:	f8d5 40e4 	ldr.w	r4, [r5, #228]	; 0xe4
 800b6ee:	47a0      	blx	r4
 800b6f0:	b007      	add	sp, #28
 800b6f2:	bd30      	pop	{r4, r5, pc}

0800b6f4 <_GetDevFunc_SetRect>:
 800b6f4:	4770      	bx	lr
	...

0800b6f8 <_GetDevFunc_SetRectOutside>:
 800b6f8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b6fa:	9e07      	ldr	r6, [sp, #28]
 800b6fc:	6884      	ldr	r4, [r0, #8]
 800b6fe:	4d0b      	ldr	r5, [pc, #44]	; (800b72c <_GetDevFunc_SetRectOutside+0x34>)
 800b700:	b176      	cbz	r6, 800b720 <_GetDevFunc_SetRectOutside+0x28>
 800b702:	6828      	ldr	r0, [r5, #0]
 800b704:	b988      	cbnz	r0, 800b72a <_GetDevFunc_SetRectOutside+0x32>
 800b706:	9e06      	ldr	r6, [sp, #24]
 800b708:	9600      	str	r6, [sp, #0]
 800b70a:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800b70e:	4620      	mov	r0, r4
 800b710:	47b0      	blx	r6
 800b712:	f8d4 10a8 	ldr.w	r1, [r4, #168]	; 0xa8
 800b716:	4a06      	ldr	r2, [pc, #24]	; (800b730 <_GetDevFunc_SetRectOutside+0x38>)
 800b718:	6029      	str	r1, [r5, #0]
 800b71a:	f8c4 20a8 	str.w	r2, [r4, #168]	; 0xa8
 800b71e:	e004      	b.n	800b72a <_GetDevFunc_SetRectOutside+0x32>
 800b720:	682b      	ldr	r3, [r5, #0]
 800b722:	b113      	cbz	r3, 800b72a <_GetDevFunc_SetRectOutside+0x32>
 800b724:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800b728:	602e      	str	r6, [r5, #0]
 800b72a:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
 800b72c:	2000d7f4 	.word	0x2000d7f4
 800b730:	0800b6f5 	.word	0x0800b6f5

0800b734 <_ReadPixelCust_16bpp>:
 800b734:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800b736:	b508      	push	{r3, lr}
 800b738:	f8d0 30d4 	ldr.w	r3, [r0, #212]	; 0xd4
 800b73c:	6990      	ldr	r0, [r2, #24]
 800b73e:	4798      	blx	r3
 800b740:	bd08      	pop	{r3, pc}

0800b742 <_ReadPixelCust_18bpp>:
 800b742:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800b744:	b508      	push	{r3, lr}
 800b746:	f8d0 30d8 	ldr.w	r3, [r0, #216]	; 0xd8
 800b74a:	6990      	ldr	r0, [r2, #24]
 800b74c:	4798      	blx	r3
 800b74e:	bd08      	pop	{r3, pc}

0800b750 <_ReadRectCust_16bpp>:
 800b750:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b754:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800b756:	6884      	ldr	r4, [r0, #8]
 800b758:	9500      	str	r5, [sp, #0]
 800b75a:	4688      	mov	r8, r1
 800b75c:	4617      	mov	r7, r2
 800b75e:	4699      	mov	r9, r3
 800b760:	4620      	mov	r0, r4
 800b762:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800b766:	47b0      	blx	r6
 800b768:	1bed      	subs	r5, r5, r7
 800b76a:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800b76c:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 800b770:	ebc8 0009 	rsb	r0, r8, r9
 800b774:	f100 0801 	add.w	r8, r0, #1
 800b778:	1c6a      	adds	r2, r5, #1
 800b77a:	6988      	ldr	r0, [r1, #24]
 800b77c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b77e:	fb02 f208 	mul.w	r2, r2, r8
 800b782:	4798      	blx	r3
 800b784:	e8bd 83fe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}

0800b788 <_ReadRectCust_18bpp>:
 800b788:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b78c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800b78e:	6884      	ldr	r4, [r0, #8]
 800b790:	9500      	str	r5, [sp, #0]
 800b792:	4688      	mov	r8, r1
 800b794:	4617      	mov	r7, r2
 800b796:	4699      	mov	r9, r3
 800b798:	4620      	mov	r0, r4
 800b79a:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800b79e:	47b0      	blx	r6
 800b7a0:	1bed      	subs	r5, r5, r7
 800b7a2:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800b7a4:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 800b7a8:	ebc8 0009 	rsb	r0, r8, r9
 800b7ac:	f100 0801 	add.w	r8, r0, #1
 800b7b0:	1c6a      	adds	r2, r5, #1
 800b7b2:	6988      	ldr	r0, [r1, #24]
 800b7b4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b7b6:	fb02 f208 	mul.w	r2, r2, r8
 800b7ba:	4798      	blx	r3
 800b7bc:	e8bd 83fe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}

0800b7c0 <_GetDevFunc>:
 800b7c0:	3901      	subs	r1, #1
 800b7c2:	2917      	cmp	r1, #23
 800b7c4:	d824      	bhi.n	800b810 <_GetDevFunc+0x50>
 800b7c6:	e8df f001 	tbb	[pc, r1]
 800b7ca:	2310      	.short	0x2310
 800b7cc:	23232323 	.word	0x23232323
 800b7d0:	0c232323 	.word	0x0c232323
 800b7d4:	23150e25 	.word	0x23150e25
 800b7d8:	23232323 	.word	0x23232323
 800b7dc:	1f232323 	.word	0x1f232323
 800b7e0:	211a      	.short	0x211a
 800b7e2:	480d      	ldr	r0, [pc, #52]	; (800b818 <_GetDevFunc+0x58>)
 800b7e4:	4770      	bx	lr
 800b7e6:	480d      	ldr	r0, [pc, #52]	; (800b81c <_GetDevFunc+0x5c>)
 800b7e8:	4770      	bx	lr
 800b7ea:	6803      	ldr	r3, [r0, #0]
 800b7ec:	6898      	ldr	r0, [r3, #8]
 800b7ee:	f8d0 00fc 	ldr.w	r0, [r0, #252]	; 0xfc
 800b7f2:	4770      	bx	lr
 800b7f4:	6802      	ldr	r2, [r0, #0]
 800b7f6:	6891      	ldr	r1, [r2, #8]
 800b7f8:	f8d1 00f4 	ldr.w	r0, [r1, #244]	; 0xf4
 800b7fc:	4770      	bx	lr
 800b7fe:	6803      	ldr	r3, [r0, #0]
 800b800:	6898      	ldr	r0, [r3, #8]
 800b802:	f8d0 00f8 	ldr.w	r0, [r0, #248]	; 0xf8
 800b806:	4770      	bx	lr
 800b808:	4805      	ldr	r0, [pc, #20]	; (800b820 <_GetDevFunc+0x60>)
 800b80a:	4770      	bx	lr
 800b80c:	4805      	ldr	r0, [pc, #20]	; (800b824 <_GetDevFunc+0x64>)
 800b80e:	4770      	bx	lr
 800b810:	2000      	movs	r0, #0
 800b812:	4770      	bx	lr
 800b814:	4804      	ldr	r0, [pc, #16]	; (800b828 <_GetDevFunc+0x68>)
 800b816:	4770      	bx	lr
 800b818:	0800bb83 	.word	0x0800bb83
 800b81c:	0800bb25 	.word	0x0800bb25
 800b820:	0800ba89 	.word	0x0800ba89
 800b824:	0800b6f9 	.word	0x0800b6f9
 800b828:	0800bb6f 	.word	0x0800bb6f

0800b82c <_GetDevProp>:
 800b82c:	3901      	subs	r1, #1
 800b82e:	6880      	ldr	r0, [r0, #8]
 800b830:	290d      	cmp	r1, #13
 800b832:	d826      	bhi.n	800b882 <_GetDevProp+0x56>
 800b834:	e8df f001 	tbb	[pc, r1]
 800b838:	0f0d0b09 	.word	0x0f0d0b09
 800b83c:	11252525 	.word	0x11252525
 800b840:	13282807 	.word	0x13282807
 800b844:	1f19      	.short	0x1f19
 800b846:	2000      	movs	r0, #0
 800b848:	4770      	bx	lr
 800b84a:	6800      	ldr	r0, [r0, #0]
 800b84c:	4770      	bx	lr
 800b84e:	6840      	ldr	r0, [r0, #4]
 800b850:	4770      	bx	lr
 800b852:	6880      	ldr	r0, [r0, #8]
 800b854:	4770      	bx	lr
 800b856:	68c0      	ldr	r0, [r0, #12]
 800b858:	4770      	bx	lr
 800b85a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800b85c:	4770      	bx	lr
 800b85e:	b1a0      	cbz	r0, 800b88a <_GetDevProp+0x5e>
 800b860:	6b42      	ldr	r2, [r0, #52]	; 0x34
 800b862:	f012 0001 	ands.w	r0, r2, #1
 800b866:	d010      	beq.n	800b88a <_GetDevProp+0x5e>
 800b868:	e00e      	b.n	800b888 <_GetDevProp+0x5c>
 800b86a:	b170      	cbz	r0, 800b88a <_GetDevProp+0x5e>
 800b86c:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800b86e:	f010 0002 	ands.w	r0, r0, #2
 800b872:	d109      	bne.n	800b888 <_GetDevProp+0x5c>
 800b874:	4770      	bx	lr
 800b876:	b140      	cbz	r0, 800b88a <_GetDevProp+0x5e>
 800b878:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800b87a:	f013 0004 	ands.w	r0, r3, #4
 800b87e:	d103      	bne.n	800b888 <_GetDevProp+0x5c>
 800b880:	4770      	bx	lr
 800b882:	f04f 30ff 	mov.w	r0, #4294967295
 800b886:	4770      	bx	lr
 800b888:	2001      	movs	r0, #1
 800b88a:	4770      	bx	lr

0800b88c <_GetDevData>:
 800b88c:	6883      	ldr	r3, [r0, #8]
 800b88e:	2901      	cmp	r1, #1
 800b890:	bf0c      	ite	eq
 800b892:	6c58      	ldreq	r0, [r3, #68]	; 0x44
 800b894:	2000      	movne	r0, #0
 800b896:	4770      	bx	lr

0800b898 <_GetRect>:
 800b898:	6883      	ldr	r3, [r0, #8]
 800b89a:	6818      	ldr	r0, [r3, #0]
 800b89c:	685b      	ldr	r3, [r3, #4]
 800b89e:	2200      	movs	r2, #0
 800b8a0:	800a      	strh	r2, [r1, #0]
 800b8a2:	804a      	strh	r2, [r1, #2]
 800b8a4:	1e42      	subs	r2, r0, #1
 800b8a6:	1e58      	subs	r0, r3, #1
 800b8a8:	808a      	strh	r2, [r1, #4]
 800b8aa:	80c8      	strh	r0, [r1, #6]
 800b8ac:	4770      	bx	lr
	...

0800b8b0 <GUIDRV_FlexColor__SetLog2Phys>:
 800b8b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b8b2:	4d10      	ldr	r5, [pc, #64]	; (800b8f4 <GUIDRV_FlexColor__SetLog2Phys+0x44>)
 800b8b4:	462e      	mov	r6, r5
 800b8b6:	4607      	mov	r7, r0
 800b8b8:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800b8ba:	b091      	sub	sp, #68	; 0x44
 800b8bc:	466c      	mov	r4, sp
 800b8be:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b8c0:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 800b8c4:	3520      	adds	r5, #32
 800b8c6:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800b8ca:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b8cc:	ac08      	add	r4, sp, #32
 800b8ce:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b8d0:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800b8d4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800b8d8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800b8da:	aa10      	add	r2, sp, #64	; 0x40
 800b8dc:	eb02 0083 	add.w	r0, r2, r3, lsl #2
 800b8e0:	f850 1c40 	ldr.w	r1, [r0, #-64]
 800b8e4:	f8c7 1100 	str.w	r1, [r7, #256]	; 0x100
 800b8e8:	f850 3c20 	ldr.w	r3, [r0, #-32]
 800b8ec:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
 800b8f0:	b011      	add	sp, #68	; 0x44
 800b8f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b8f4:	08019550 	.word	0x08019550

0800b8f8 <_SetOrg>:
 800b8f8:	b507      	push	{r0, r1, r2, lr}
 800b8fa:	6980      	ldr	r0, [r0, #24]
 800b8fc:	e88d 0006 	stmia.w	sp, {r1, r2}
 800b900:	2103      	movs	r1, #3
 800b902:	466a      	mov	r2, sp
 800b904:	f7f6 fda2 	bl	800244c <LCD_X_DisplayDriver>
 800b908:	bd0e      	pop	{r1, r2, r3, pc}

0800b90a <GUIDRV_FlexColor__SetPixelIndexNoCache>:
 800b90a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b90e:	6884      	ldr	r4, [r0, #8]
 800b910:	4698      	mov	r8, r3
 800b912:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800b914:	f003 0002 	and.w	r0, r3, #2
 800b918:	b285      	uxth	r5, r0
 800b91a:	4689      	mov	r9, r1
 800b91c:	4617      	mov	r7, r2
 800b91e:	2d00      	cmp	r5, #0
 800b920:	d032      	beq.n	800b988 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x7e>
 800b922:	f8d4 6100 	ldr.w	r6, [r4, #256]	; 0x100
 800b926:	4620      	mov	r0, r4
 800b928:	47b0      	blx	r6
 800b92a:	463a      	mov	r2, r7
 800b92c:	4606      	mov	r6, r0
 800b92e:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 800b932:	4649      	mov	r1, r9
 800b934:	4620      	mov	r0, r4
 800b936:	4798      	blx	r3
 800b938:	6921      	ldr	r1, [r4, #16]
 800b93a:	69a2      	ldr	r2, [r4, #24]
 800b93c:	428e      	cmp	r6, r1
 800b93e:	4605      	mov	r5, r0
 800b940:	bfac      	ite	ge
 800b942:	2100      	movge	r1, #0
 800b944:	2101      	movlt	r1, #1
 800b946:	6960      	ldr	r0, [r4, #20]
 800b948:	4296      	cmp	r6, r2
 800b94a:	bfd4      	ite	le
 800b94c:	460f      	movle	r7, r1
 800b94e:	f041 0701 	orrgt.w	r7, r1, #1
 800b952:	4285      	cmp	r5, r0
 800b954:	bfac      	ite	ge
 800b956:	463b      	movge	r3, r7
 800b958:	f047 0301 	orrlt.w	r3, r7, #1
 800b95c:	b913      	cbnz	r3, 800b964 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x5a>
 800b95e:	69e2      	ldr	r2, [r4, #28]
 800b960:	4295      	cmp	r5, r2
 800b962:	dd0a      	ble.n	800b97a <GUIDRV_FlexColor__SetPixelIndexNoCache+0x70>
 800b964:	6861      	ldr	r1, [r4, #4]
 800b966:	6823      	ldr	r3, [r4, #0]
 800b968:	1e4f      	subs	r7, r1, #1
 800b96a:	9700      	str	r7, [sp, #0]
 800b96c:	2100      	movs	r1, #0
 800b96e:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800b972:	4620      	mov	r0, r4
 800b974:	460a      	mov	r2, r1
 800b976:	3b01      	subs	r3, #1
 800b978:	47b8      	blx	r7
 800b97a:	f8d4 70ac 	ldr.w	r7, [r4, #172]	; 0xac
 800b97e:	4620      	mov	r0, r4
 800b980:	4631      	mov	r1, r6
 800b982:	462a      	mov	r2, r5
 800b984:	47b8      	blx	r7
 800b986:	e003      	b.n	800b990 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x86>
 800b988:	f8d4 50ac 	ldr.w	r5, [r4, #172]	; 0xac
 800b98c:	4620      	mov	r0, r4
 800b98e:	47a8      	blx	r5
 800b990:	f8d4 20a4 	ldr.w	r2, [r4, #164]	; 0xa4
 800b994:	4620      	mov	r0, r4
 800b996:	4641      	mov	r1, r8
 800b998:	4790      	blx	r2
 800b99a:	e8bd 83fe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}

0800b99e <GUIDRV_FlexColor__GetPixelIndexNoCache>:
 800b99e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b9a0:	6884      	ldr	r4, [r0, #8]
 800b9a2:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800b9a4:	f003 0002 	and.w	r0, r3, #2
 800b9a8:	b285      	uxth	r5, r0
 800b9aa:	460f      	mov	r7, r1
 800b9ac:	4616      	mov	r6, r2
 800b9ae:	2d00      	cmp	r5, #0
 800b9b0:	d045      	beq.n	800ba3e <GUIDRV_FlexColor__GetPixelIndexNoCache+0xa0>
 800b9b2:	f8d4 5100 	ldr.w	r5, [r4, #256]	; 0x100
 800b9b6:	4620      	mov	r0, r4
 800b9b8:	47a8      	blx	r5
 800b9ba:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 800b9be:	4632      	mov	r2, r6
 800b9c0:	4605      	mov	r5, r0
 800b9c2:	4639      	mov	r1, r7
 800b9c4:	4620      	mov	r0, r4
 800b9c6:	4798      	blx	r3
 800b9c8:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 800b9cc:	4606      	mov	r6, r0
 800b9ce:	b11b      	cbz	r3, 800b9d8 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x3a>
 800b9d0:	4620      	mov	r0, r4
 800b9d2:	2101      	movs	r1, #1
 800b9d4:	2200      	movs	r2, #0
 800b9d6:	4798      	blx	r3
 800b9d8:	6920      	ldr	r0, [r4, #16]
 800b9da:	69a2      	ldr	r2, [r4, #24]
 800b9dc:	6963      	ldr	r3, [r4, #20]
 800b9de:	4285      	cmp	r5, r0
 800b9e0:	bfac      	ite	ge
 800b9e2:	2000      	movge	r0, #0
 800b9e4:	2001      	movlt	r0, #1
 800b9e6:	4295      	cmp	r5, r2
 800b9e8:	bfd4      	ite	le
 800b9ea:	4601      	movle	r1, r0
 800b9ec:	f040 0101 	orrgt.w	r1, r0, #1
 800b9f0:	429e      	cmp	r6, r3
 800b9f2:	bfac      	ite	ge
 800b9f4:	460a      	movge	r2, r1
 800b9f6:	f041 0201 	orrlt.w	r2, r1, #1
 800b9fa:	b912      	cbnz	r2, 800ba02 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x64>
 800b9fc:	69e0      	ldr	r0, [r4, #28]
 800b9fe:	4286      	cmp	r6, r0
 800ba00:	dd0a      	ble.n	800ba18 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x7a>
 800ba02:	6867      	ldr	r7, [r4, #4]
 800ba04:	6823      	ldr	r3, [r4, #0]
 800ba06:	1e79      	subs	r1, r7, #1
 800ba08:	9100      	str	r1, [sp, #0]
 800ba0a:	2100      	movs	r1, #0
 800ba0c:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800ba10:	4620      	mov	r0, r4
 800ba12:	460a      	mov	r2, r1
 800ba14:	3b01      	subs	r3, #1
 800ba16:	47b8      	blx	r7
 800ba18:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 800ba1c:	4629      	mov	r1, r5
 800ba1e:	4620      	mov	r0, r4
 800ba20:	4632      	mov	r2, r6
 800ba22:	4798      	blx	r3
 800ba24:	f8d4 50a0 	ldr.w	r5, [r4, #160]	; 0xa0
 800ba28:	4620      	mov	r0, r4
 800ba2a:	47a8      	blx	r5
 800ba2c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 800ba30:	4605      	mov	r5, r0
 800ba32:	b16b      	cbz	r3, 800ba50 <GUIDRV_FlexColor__GetPixelIndexNoCache+0xb2>
 800ba34:	4620      	mov	r0, r4
 800ba36:	2100      	movs	r1, #0
 800ba38:	2201      	movs	r2, #1
 800ba3a:	4798      	blx	r3
 800ba3c:	e008      	b.n	800ba50 <GUIDRV_FlexColor__GetPixelIndexNoCache+0xb2>
 800ba3e:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 800ba42:	4620      	mov	r0, r4
 800ba44:	4798      	blx	r3
 800ba46:	f8d4 10a0 	ldr.w	r1, [r4, #160]	; 0xa0
 800ba4a:	4620      	mov	r0, r4
 800ba4c:	4788      	blx	r1
 800ba4e:	4605      	mov	r5, r0
 800ba50:	4628      	mov	r0, r5
 800ba52:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

0800ba54 <GUIDRV_FlexColor__InitOnce>:
 800ba54:	b538      	push	{r3, r4, r5, lr}
 800ba56:	6885      	ldr	r5, [r0, #8]
 800ba58:	4604      	mov	r4, r0
 800ba5a:	b995      	cbnz	r5, 800ba82 <GUIDRV_FlexColor__InitOnce+0x2e>
 800ba5c:	f44f 70ba 	mov.w	r0, #372	; 0x174
 800ba60:	f003 f8bc 	bl	800ebdc <GUI_ALLOC_GetFixedBlock>
 800ba64:	4629      	mov	r1, r5
 800ba66:	60a0      	str	r0, [r4, #8]
 800ba68:	f44f 72ba 	mov.w	r2, #372	; 0x174
 800ba6c:	f000 fdde 	bl	800c62c <GUI__memset>
 800ba70:	68a3      	ldr	r3, [r4, #8]
 800ba72:	4904      	ldr	r1, [pc, #16]	; (800ba84 <GUIDRV_FlexColor__InitOnce+0x30>)
 800ba74:	641c      	str	r4, [r3, #64]	; 0x40
 800ba76:	2202      	movs	r2, #2
 800ba78:	2001      	movs	r0, #1
 800ba7a:	84da      	strh	r2, [r3, #38]	; 0x26
 800ba7c:	6218      	str	r0, [r3, #32]
 800ba7e:	f8c3 1108 	str.w	r1, [r3, #264]	; 0x108
 800ba82:	bd38      	pop	{r3, r4, r5, pc}
 800ba84:	0800b8b1 	.word	0x0800b8b1

0800ba88 <_SetDevFunc>:
 800ba88:	b570      	push	{r4, r5, r6, lr}
 800ba8a:	4606      	mov	r6, r0
 800ba8c:	460d      	mov	r5, r1
 800ba8e:	4614      	mov	r4, r2
 800ba90:	f7ff ffe0 	bl	800ba54 <GUIDRV_FlexColor__InitOnce>
 800ba94:	68b3      	ldr	r3, [r6, #8]
 800ba96:	2b00      	cmp	r3, #0
 800ba98:	d03a      	beq.n	800bb10 <_SetDevFunc+0x88>
 800ba9a:	2d26      	cmp	r5, #38	; 0x26
 800ba9c:	d002      	beq.n	800baa4 <_SetDevFunc+0x1c>
 800ba9e:	2d27      	cmp	r5, #39	; 0x27
 800baa0:	d136      	bne.n	800bb10 <_SetDevFunc+0x88>
 800baa2:	e014      	b.n	800bace <_SetDevFunc+0x46>
 800baa4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800baa6:	2a10      	cmp	r2, #16
 800baa8:	d009      	beq.n	800babe <_SetDevFunc+0x36>
 800baaa:	2a12      	cmp	r2, #18
 800baac:	d130      	bne.n	800bb10 <_SetDevFunc+0x88>
 800baae:	4819      	ldr	r0, [pc, #100]	; (800bb14 <_SetDevFunc+0x8c>)
 800bab0:	f8c3 40d8 	str.w	r4, [r3, #216]	; 0xd8
 800bab4:	f8c3 00bc 	str.w	r0, [r3, #188]	; 0xbc
 800bab8:	f8c3 00c0 	str.w	r0, [r3, #192]	; 0xc0
 800babc:	bd70      	pop	{r4, r5, r6, pc}
 800babe:	4916      	ldr	r1, [pc, #88]	; (800bb18 <_SetDevFunc+0x90>)
 800bac0:	f8c3 40d4 	str.w	r4, [r3, #212]	; 0xd4
 800bac4:	f8c3 10b8 	str.w	r1, [r3, #184]	; 0xb8
 800bac8:	f8c3 10b4 	str.w	r1, [r3, #180]	; 0xb4
 800bacc:	bd70      	pop	{r4, r5, r6, pc}
 800bace:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800bad0:	2a10      	cmp	r2, #16
 800bad2:	d002      	beq.n	800bada <_SetDevFunc+0x52>
 800bad4:	2a12      	cmp	r2, #18
 800bad6:	d11b      	bne.n	800bb10 <_SetDevFunc+0x88>
 800bad8:	e00d      	b.n	800baf6 <_SetDevFunc+0x6e>
 800bada:	b13c      	cbz	r4, 800baec <_SetDevFunc+0x64>
 800badc:	490f      	ldr	r1, [pc, #60]	; (800bb1c <_SetDevFunc+0x94>)
 800bade:	f8c3 40dc 	str.w	r4, [r3, #220]	; 0xdc
 800bae2:	f8c3 10c8 	str.w	r1, [r3, #200]	; 0xc8
 800bae6:	f8c3 10c4 	str.w	r1, [r3, #196]	; 0xc4
 800baea:	bd70      	pop	{r4, r5, r6, pc}
 800baec:	f8c3 40c8 	str.w	r4, [r3, #200]	; 0xc8
 800baf0:	f8c3 40c4 	str.w	r4, [r3, #196]	; 0xc4
 800baf4:	bd70      	pop	{r4, r5, r6, pc}
 800baf6:	b13c      	cbz	r4, 800bb08 <_SetDevFunc+0x80>
 800baf8:	4809      	ldr	r0, [pc, #36]	; (800bb20 <_SetDevFunc+0x98>)
 800bafa:	f8c3 40e0 	str.w	r4, [r3, #224]	; 0xe0
 800bafe:	f8c3 00cc 	str.w	r0, [r3, #204]	; 0xcc
 800bb02:	f8c3 00d0 	str.w	r0, [r3, #208]	; 0xd0
 800bb06:	bd70      	pop	{r4, r5, r6, pc}
 800bb08:	f8c3 40cc 	str.w	r4, [r3, #204]	; 0xcc
 800bb0c:	f8c3 40d0 	str.w	r4, [r3, #208]	; 0xd0
 800bb10:	bd70      	pop	{r4, r5, r6, pc}
 800bb12:	bf00      	nop
 800bb14:	0800b743 	.word	0x0800b743
 800bb18:	0800b735 	.word	0x0800b735
 800bb1c:	0800b751 	.word	0x0800b751
 800bb20:	0800b789 	.word	0x0800b789

0800bb24 <_GetDevFunc_Init>:
 800bb24:	b538      	push	{r3, r4, r5, lr}
 800bb26:	4605      	mov	r5, r0
 800bb28:	f7ff ff94 	bl	800ba54 <GUIDRV_FlexColor__InitOnce>
 800bb2c:	68ac      	ldr	r4, [r5, #8]
 800bb2e:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800bb32:	f003 f853 	bl	800ebdc <GUI_ALLOC_GetFixedBlock>
 800bb36:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800bb38:	6821      	ldr	r1, [r4, #0]
 800bb3a:	66a0      	str	r0, [r4, #104]	; 0x68
 800bb3c:	1dd8      	adds	r0, r3, #7
 800bb3e:	10c0      	asrs	r0, r0, #3
 800bb40:	4348      	muls	r0, r1
 800bb42:	f003 f84b 	bl	800ebdc <GUI_ALLOC_GetFixedBlock>
 800bb46:	2101      	movs	r1, #1
 800bb48:	66e0      	str	r0, [r4, #108]	; 0x6c
 800bb4a:	2200      	movs	r2, #0
 800bb4c:	69a8      	ldr	r0, [r5, #24]
 800bb4e:	f7f6 fc7d 	bl	800244c <LCD_X_DisplayDriver>
 800bb52:	f8d4 2108 	ldr.w	r2, [r4, #264]	; 0x108
 800bb56:	4605      	mov	r5, r0
 800bb58:	4620      	mov	r0, r4
 800bb5a:	4790      	blx	r2
 800bb5c:	4620      	mov	r0, r4
 800bb5e:	f8d4 30b0 	ldr.w	r3, [r4, #176]	; 0xb0
 800bb62:	4798      	blx	r3
 800bb64:	2d00      	cmp	r5, #0
 800bb66:	bfd4      	ite	le
 800bb68:	2000      	movle	r0, #0
 800bb6a:	2001      	movgt	r0, #1
 800bb6c:	bd38      	pop	{r3, r4, r5, pc}

0800bb6e <_GetDevFunc_SetSize>:
 800bb6e:	b570      	push	{r4, r5, r6, lr}
 800bb70:	4604      	mov	r4, r0
 800bb72:	460d      	mov	r5, r1
 800bb74:	4616      	mov	r6, r2
 800bb76:	f7ff ff6d 	bl	800ba54 <GUIDRV_FlexColor__InitOnce>
 800bb7a:	68a3      	ldr	r3, [r4, #8]
 800bb7c:	e883 0060 	stmia.w	r3, {r5, r6}
 800bb80:	bd70      	pop	{r4, r5, r6, pc}

0800bb82 <_GetDevFunc_SetVSize>:
 800bb82:	b570      	push	{r4, r5, r6, lr}
 800bb84:	4604      	mov	r4, r0
 800bb86:	460d      	mov	r5, r1
 800bb88:	4616      	mov	r6, r2
 800bb8a:	f7ff ff63 	bl	800ba54 <GUIDRV_FlexColor__InitOnce>
 800bb8e:	68a3      	ldr	r3, [r4, #8]
 800bb90:	609d      	str	r5, [r3, #8]
 800bb92:	60de      	str	r6, [r3, #12]
 800bb94:	bd70      	pop	{r4, r5, r6, pc}

0800bb96 <GUIDRV_FlexColor_Config>:
 800bb96:	b538      	push	{r3, r4, r5, lr}
 800bb98:	460c      	mov	r4, r1
 800bb9a:	4605      	mov	r5, r0
 800bb9c:	f7ff ff5a 	bl	800ba54 <GUIDRV_FlexColor__InitOnce>
 800bba0:	6822      	ldr	r2, [r4, #0]
 800bba2:	68ab      	ldr	r3, [r5, #8]
 800bba4:	68a1      	ldr	r1, [r4, #8]
 800bba6:	6860      	ldr	r0, [r4, #4]
 800bba8:	62da      	str	r2, [r3, #44]	; 0x2c
 800bbaa:	074a      	lsls	r2, r1, #29
 800bbac:	6318      	str	r0, [r3, #48]	; 0x30
 800bbae:	6359      	str	r1, [r3, #52]	; 0x34
 800bbb0:	d507      	bpl.n	800bbc2 <GUIDRV_FlexColor_Config+0x2c>
 800bbb2:	e893 0006 	ldmia.w	r3, {r1, r2}
 800bbb6:	6898      	ldr	r0, [r3, #8]
 800bbb8:	601a      	str	r2, [r3, #0]
 800bbba:	68da      	ldr	r2, [r3, #12]
 800bbbc:	6059      	str	r1, [r3, #4]
 800bbbe:	609a      	str	r2, [r3, #8]
 800bbc0:	60d8      	str	r0, [r3, #12]
 800bbc2:	89a1      	ldrh	r1, [r4, #12]
 800bbc4:	6920      	ldr	r0, [r4, #16]
 800bbc6:	8499      	strh	r1, [r3, #36]	; 0x24
 800bbc8:	b110      	cbz	r0, 800bbd0 <GUIDRV_FlexColor_Config+0x3a>
 800bbca:	ea20 72e0 	bic.w	r2, r0, r0, asr #31
 800bbce:	621a      	str	r2, [r3, #32]
 800bbd0:	bd38      	pop	{r3, r4, r5, pc}

0800bbd2 <GUIDRV_FlexColor_SetFunc>:
 800bbd2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bbd6:	4604      	mov	r4, r0
 800bbd8:	461f      	mov	r7, r3
 800bbda:	4616      	mov	r6, r2
 800bbdc:	4688      	mov	r8, r1
 800bbde:	f7ff ff39 	bl	800ba54 <GUIDRV_FlexColor__InitOnce>
 800bbe2:	68a5      	ldr	r5, [r4, #8]
 800bbe4:	4641      	mov	r1, r8
 800bbe6:	2268      	movs	r2, #104	; 0x68
 800bbe8:	f505 7086 	add.w	r0, r5, #268	; 0x10c
 800bbec:	f7f4 facc 	bl	8000188 <memcpy>
 800bbf0:	4620      	mov	r0, r4
 800bbf2:	47b0      	blx	r6
 800bbf4:	4620      	mov	r0, r4
 800bbf6:	47b8      	blx	r7
 800bbf8:	6923      	ldr	r3, [r4, #16]
 800bbfa:	6898      	ldr	r0, [r3, #8]
 800bbfc:	4780      	blx	r0
 800bbfe:	62a8      	str	r0, [r5, #40]	; 0x28
 800bc00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bc04 <LCD_UpdateColorIndices>:
 800bc04:	b510      	push	{r4, lr}
 800bc06:	4c07      	ldr	r4, [pc, #28]	; (800bc24 <LCD_UpdateColorIndices+0x20>)
 800bc08:	6823      	ldr	r3, [r4, #0]
 800bc0a:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800bc0c:	f000 fc6c 	bl	800c4e8 <LCD_Color2Index>
 800bc10:	f000 fc8a 	bl	800c528 <LCD_SetColorIndex>
 800bc14:	6820      	ldr	r0, [r4, #0]
 800bc16:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800bc18:	f000 fc66 	bl	800c4e8 <LCD_Color2Index>
 800bc1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bc20:	f000 bca0 	b.w	800c564 <LCD_SetBkColorIndex>
 800bc24:	20000270 	.word	0x20000270

0800bc28 <LCD_SetClipRectEx>:
 800bc28:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bc2a:	4c09      	ldr	r4, [pc, #36]	; (800bc50 <LCD_SetClipRectEx+0x28>)
 800bc2c:	6823      	ldr	r3, [r4, #0]
 800bc2e:	4605      	mov	r5, r0
 800bc30:	7c5a      	ldrb	r2, [r3, #17]
 800bc32:	4808      	ldr	r0, [pc, #32]	; (800bc54 <LCD_SetClipRectEx+0x2c>)
 800bc34:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 800bc38:	68c1      	ldr	r1, [r0, #12]
 800bc3a:	6b0b      	ldr	r3, [r1, #48]	; 0x30
 800bc3c:	4669      	mov	r1, sp
 800bc3e:	4798      	blx	r3
 800bc40:	6820      	ldr	r0, [r4, #0]
 800bc42:	4629      	mov	r1, r5
 800bc44:	3008      	adds	r0, #8
 800bc46:	466a      	mov	r2, sp
 800bc48:	f000 fdd6 	bl	800c7f8 <GUI__IntersectRects>
 800bc4c:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 800bc4e:	bf00      	nop
 800bc50:	20000270 	.word	0x20000270
 800bc54:	2000dde0 	.word	0x2000dde0

0800bc58 <LCD_SetVSizeEx>:
 800bc58:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bc5a:	460d      	mov	r5, r1
 800bc5c:	4614      	mov	r4, r2
 800bc5e:	f002 f913 	bl	800de88 <GUI_DEVICE__GetpDriver>
 800bc62:	9001      	str	r0, [sp, #4]
 800bc64:	b908      	cbnz	r0, 800bc6a <LCD_SetVSizeEx+0x12>
 800bc66:	2001      	movs	r0, #1
 800bc68:	e00c      	b.n	800bc84 <LCD_SetVSizeEx+0x2c>
 800bc6a:	68c3      	ldr	r3, [r0, #12]
 800bc6c:	210a      	movs	r1, #10
 800bc6e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800bc70:	a801      	add	r0, sp, #4
 800bc72:	4790      	blx	r2
 800bc74:	4603      	mov	r3, r0
 800bc76:	2800      	cmp	r0, #0
 800bc78:	d0f5      	beq.n	800bc66 <LCD_SetVSizeEx+0xe>
 800bc7a:	9801      	ldr	r0, [sp, #4]
 800bc7c:	4629      	mov	r1, r5
 800bc7e:	4622      	mov	r2, r4
 800bc80:	4798      	blx	r3
 800bc82:	2000      	movs	r0, #0
 800bc84:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800bc86 <LCD_SetSizeEx>:
 800bc86:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bc88:	460d      	mov	r5, r1
 800bc8a:	4614      	mov	r4, r2
 800bc8c:	f002 f8fc 	bl	800de88 <GUI_DEVICE__GetpDriver>
 800bc90:	9001      	str	r0, [sp, #4]
 800bc92:	b908      	cbnz	r0, 800bc98 <LCD_SetSizeEx+0x12>
 800bc94:	2001      	movs	r0, #1
 800bc96:	e00c      	b.n	800bcb2 <LCD_SetSizeEx+0x2c>
 800bc98:	68c3      	ldr	r3, [r0, #12]
 800bc9a:	210b      	movs	r1, #11
 800bc9c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800bc9e:	a801      	add	r0, sp, #4
 800bca0:	4790      	blx	r2
 800bca2:	4603      	mov	r3, r0
 800bca4:	2800      	cmp	r0, #0
 800bca6:	d0f5      	beq.n	800bc94 <LCD_SetSizeEx+0xe>
 800bca8:	9801      	ldr	r0, [sp, #4]
 800bcaa:	4629      	mov	r1, r5
 800bcac:	4622      	mov	r2, r4
 800bcae:	4798      	blx	r3
 800bcb0:	2000      	movs	r0, #0
 800bcb2:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800bcb4 <LCD_SetPosEx>:
 800bcb4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bcb6:	460d      	mov	r5, r1
 800bcb8:	4614      	mov	r4, r2
 800bcba:	f002 f8e5 	bl	800de88 <GUI_DEVICE__GetpDriver>
 800bcbe:	9001      	str	r0, [sp, #4]
 800bcc0:	b908      	cbnz	r0, 800bcc6 <LCD_SetPosEx+0x12>
 800bcc2:	2001      	movs	r0, #1
 800bcc4:	e00c      	b.n	800bce0 <LCD_SetPosEx+0x2c>
 800bcc6:	68c3      	ldr	r3, [r0, #12]
 800bcc8:	2103      	movs	r1, #3
 800bcca:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800bccc:	a801      	add	r0, sp, #4
 800bcce:	4790      	blx	r2
 800bcd0:	4603      	mov	r3, r0
 800bcd2:	2800      	cmp	r0, #0
 800bcd4:	d0f5      	beq.n	800bcc2 <LCD_SetPosEx+0xe>
 800bcd6:	9801      	ldr	r0, [sp, #4]
 800bcd8:	4629      	mov	r1, r5
 800bcda:	4622      	mov	r2, r4
 800bcdc:	4798      	blx	r3
 800bcde:	2000      	movs	r0, #0
 800bce0:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800bce2 <LCD_SetLUTEntryEx>:
 800bce2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bce4:	460d      	mov	r5, r1
 800bce6:	4614      	mov	r4, r2
 800bce8:	f002 f8ce 	bl	800de88 <GUI_DEVICE__GetpDriver>
 800bcec:	9001      	str	r0, [sp, #4]
 800bcee:	b908      	cbnz	r0, 800bcf4 <LCD_SetLUTEntryEx+0x12>
 800bcf0:	2001      	movs	r0, #1
 800bcf2:	e00c      	b.n	800bd0e <LCD_SetLUTEntryEx+0x2c>
 800bcf4:	68c3      	ldr	r3, [r0, #12]
 800bcf6:	2110      	movs	r1, #16
 800bcf8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800bcfa:	a801      	add	r0, sp, #4
 800bcfc:	4790      	blx	r2
 800bcfe:	4603      	mov	r3, r0
 800bd00:	2800      	cmp	r0, #0
 800bd02:	d0f5      	beq.n	800bcf0 <LCD_SetLUTEntryEx+0xe>
 800bd04:	9801      	ldr	r0, [sp, #4]
 800bd06:	4629      	mov	r1, r5
 800bd08:	4622      	mov	r2, r4
 800bd0a:	4798      	blx	r3
 800bd0c:	2000      	movs	r0, #0
 800bd0e:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800bd10 <LCD_GetPosEx>:
 800bd10:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bd12:	460d      	mov	r5, r1
 800bd14:	4614      	mov	r4, r2
 800bd16:	f002 f8b7 	bl	800de88 <GUI_DEVICE__GetpDriver>
 800bd1a:	9001      	str	r0, [sp, #4]
 800bd1c:	b908      	cbnz	r0, 800bd22 <LCD_GetPosEx+0x12>
 800bd1e:	2001      	movs	r0, #1
 800bd20:	e00c      	b.n	800bd3c <LCD_GetPosEx+0x2c>
 800bd22:	68c3      	ldr	r3, [r0, #12]
 800bd24:	2104      	movs	r1, #4
 800bd26:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800bd28:	a801      	add	r0, sp, #4
 800bd2a:	4790      	blx	r2
 800bd2c:	4603      	mov	r3, r0
 800bd2e:	2800      	cmp	r0, #0
 800bd30:	d0f5      	beq.n	800bd1e <LCD_GetPosEx+0xe>
 800bd32:	9801      	ldr	r0, [sp, #4]
 800bd34:	4629      	mov	r1, r5
 800bd36:	4622      	mov	r2, r4
 800bd38:	4798      	blx	r3
 800bd3a:	2000      	movs	r0, #0
 800bd3c:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800bd3e <_GetDevProp>:
 800bd3e:	2801      	cmp	r0, #1
 800bd40:	b510      	push	{r4, lr}
 800bd42:	460c      	mov	r4, r1
 800bd44:	dc08      	bgt.n	800bd58 <_GetDevProp+0x1a>
 800bd46:	f002 f89f 	bl	800de88 <GUI_DEVICE__GetpDriver>
 800bd4a:	b120      	cbz	r0, 800bd56 <_GetDevProp+0x18>
 800bd4c:	68c1      	ldr	r1, [r0, #12]
 800bd4e:	6a8a      	ldr	r2, [r1, #40]	; 0x28
 800bd50:	4621      	mov	r1, r4
 800bd52:	4790      	blx	r2
 800bd54:	bd10      	pop	{r4, pc}
 800bd56:	bd10      	pop	{r4, pc}
 800bd58:	2000      	movs	r0, #0
 800bd5a:	bd10      	pop	{r4, pc}

0800bd5c <_GetMaxValue>:
 800bd5c:	b538      	push	{r3, r4, r5, lr}
 800bd5e:	4604      	mov	r4, r0
 800bd60:	4621      	mov	r1, r4
 800bd62:	2001      	movs	r0, #1
 800bd64:	f7ff ffeb 	bl	800bd3e <_GetDevProp>
 800bd68:	4621      	mov	r1, r4
 800bd6a:	4605      	mov	r5, r0
 800bd6c:	2000      	movs	r0, #0
 800bd6e:	f7ff ffe6 	bl	800bd3e <_GetDevProp>
 800bd72:	42a8      	cmp	r0, r5
 800bd74:	bfb8      	it	lt
 800bd76:	4628      	movlt	r0, r5
 800bd78:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 800bd7c:	bd38      	pop	{r3, r4, r5, pc}

0800bd7e <LCD_GetXSizeEx>:
 800bd7e:	2101      	movs	r1, #1
 800bd80:	f7ff bfdd 	b.w	800bd3e <_GetDevProp>

0800bd84 <LCD_GetYSizeEx>:
 800bd84:	2102      	movs	r1, #2
 800bd86:	f7ff bfda 	b.w	800bd3e <_GetDevProp>

0800bd8a <LCD_GetVXSizeEx>:
 800bd8a:	2103      	movs	r1, #3
 800bd8c:	f7ff bfd7 	b.w	800bd3e <_GetDevProp>

0800bd90 <LCD_GetVYSizeEx>:
 800bd90:	2104      	movs	r1, #4
 800bd92:	f7ff bfd4 	b.w	800bd3e <_GetDevProp>

0800bd96 <LCD_GetBitsPerPixelEx>:
 800bd96:	2108      	movs	r1, #8
 800bd98:	f7ff bfd1 	b.w	800bd3e <_GetDevProp>

0800bd9c <LCD_GetNumColorsEx>:
 800bd9c:	2109      	movs	r1, #9
 800bd9e:	f7ff bfce 	b.w	800bd3e <_GetDevProp>
	...

0800bda4 <LCD_GetXSize>:
 800bda4:	4b02      	ldr	r3, [pc, #8]	; (800bdb0 <LCD_GetXSize+0xc>)
 800bda6:	6818      	ldr	r0, [r3, #0]
 800bda8:	7c40      	ldrb	r0, [r0, #17]
 800bdaa:	f7ff bfe8 	b.w	800bd7e <LCD_GetXSizeEx>
 800bdae:	bf00      	nop
 800bdb0:	20000270 	.word	0x20000270

0800bdb4 <LCD_GetYSize>:
 800bdb4:	4b02      	ldr	r3, [pc, #8]	; (800bdc0 <LCD_GetYSize+0xc>)
 800bdb6:	6818      	ldr	r0, [r3, #0]
 800bdb8:	7c40      	ldrb	r0, [r0, #17]
 800bdba:	f7ff bfe3 	b.w	800bd84 <LCD_GetYSizeEx>
 800bdbe:	bf00      	nop
 800bdc0:	20000270 	.word	0x20000270

0800bdc4 <LCD_GetNumColors>:
 800bdc4:	4b02      	ldr	r3, [pc, #8]	; (800bdd0 <LCD_GetNumColors+0xc>)
 800bdc6:	6818      	ldr	r0, [r3, #0]
 800bdc8:	7c40      	ldrb	r0, [r0, #17]
 800bdca:	f7ff bfe7 	b.w	800bd9c <LCD_GetNumColorsEx>
 800bdce:	bf00      	nop
 800bdd0:	20000270 	.word	0x20000270

0800bdd4 <GUI_GetBitsPerPixelEx>:
 800bdd4:	b508      	push	{r3, lr}
 800bdd6:	4b04      	ldr	r3, [pc, #16]	; (800bde8 <GUI_GetBitsPerPixelEx+0x14>)
 800bdd8:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800bddc:	68c1      	ldr	r1, [r0, #12]
 800bdde:	6a8a      	ldr	r2, [r1, #40]	; 0x28
 800bde0:	2108      	movs	r1, #8
 800bde2:	4790      	blx	r2
 800bde4:	bd08      	pop	{r3, pc}
 800bde6:	bf00      	nop
 800bde8:	2000dde0 	.word	0x2000dde0

0800bdec <LCD_GetPaletteEx>:
 800bdec:	b508      	push	{r3, lr}
 800bdee:	f002 f84b 	bl	800de88 <GUI_DEVICE__GetpDriver>
 800bdf2:	b120      	cbz	r0, 800bdfe <LCD_GetPaletteEx+0x12>
 800bdf4:	68c1      	ldr	r1, [r0, #12]
 800bdf6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800bdf8:	2102      	movs	r1, #2
 800bdfa:	4790      	blx	r2
 800bdfc:	bd08      	pop	{r3, pc}
 800bdfe:	bd08      	pop	{r3, pc}

0800be00 <LCD_GetPalette>:
 800be00:	4b02      	ldr	r3, [pc, #8]	; (800be0c <LCD_GetPalette+0xc>)
 800be02:	6818      	ldr	r0, [r3, #0]
 800be04:	7c40      	ldrb	r0, [r0, #17]
 800be06:	f7ff bff1 	b.w	800bdec <LCD_GetPaletteEx>
 800be0a:	bf00      	nop
 800be0c:	20000270 	.word	0x20000270

0800be10 <GUI_GetpfIndex2ColorEx>:
 800be10:	4b02      	ldr	r3, [pc, #8]	; (800be1c <GUI_GetpfIndex2ColorEx+0xc>)
 800be12:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800be16:	6901      	ldr	r1, [r0, #16]
 800be18:	6848      	ldr	r0, [r1, #4]
 800be1a:	4770      	bx	lr
 800be1c:	2000dde0 	.word	0x2000dde0

0800be20 <GUI_GetpfColor2IndexEx>:
 800be20:	4b02      	ldr	r3, [pc, #8]	; (800be2c <GUI_GetpfColor2IndexEx+0xc>)
 800be22:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800be26:	6901      	ldr	r1, [r0, #16]
 800be28:	6808      	ldr	r0, [r1, #0]
 800be2a:	4770      	bx	lr
 800be2c:	2000dde0 	.word	0x2000dde0

0800be30 <LCD_GetVXSizeMax>:
 800be30:	2003      	movs	r0, #3
 800be32:	f7ff bf93 	b.w	800bd5c <_GetMaxValue>

0800be36 <LCD__GetBPP>:
 800be36:	2800      	cmp	r0, #0
 800be38:	d03d      	beq.n	800beb6 <LCD__GetBPP+0x80>
 800be3a:	f030 0301 	bics.w	r3, r0, #1
 800be3e:	d02b      	beq.n	800be98 <LCD__GetBPP+0x62>
 800be40:	f030 0303 	bics.w	r3, r0, #3
 800be44:	d02a      	beq.n	800be9c <LCD__GetBPP+0x66>
 800be46:	f030 0307 	bics.w	r3, r0, #7
 800be4a:	d029      	beq.n	800bea0 <LCD__GetBPP+0x6a>
 800be4c:	f030 030f 	bics.w	r3, r0, #15
 800be50:	d028      	beq.n	800bea4 <LCD__GetBPP+0x6e>
 800be52:	f030 031f 	bics.w	r3, r0, #31
 800be56:	d027      	beq.n	800bea8 <LCD__GetBPP+0x72>
 800be58:	f030 03ff 	bics.w	r3, r0, #255	; 0xff
 800be5c:	d026      	beq.n	800beac <LCD__GetBPP+0x76>
 800be5e:	f420 73ff 	bic.w	r3, r0, #510	; 0x1fe
 800be62:	f023 0101 	bic.w	r1, r3, #1
 800be66:	2900      	cmp	r1, #0
 800be68:	d022      	beq.n	800beb0 <LCD__GetBPP+0x7a>
 800be6a:	f420 627f 	bic.w	r2, r0, #4080	; 0xff0
 800be6e:	f022 030f 	bic.w	r3, r2, #15
 800be72:	2b00      	cmp	r3, #0
 800be74:	d01c      	beq.n	800beb0 <LCD__GetBPP+0x7a>
 800be76:	f420 41ff 	bic.w	r1, r0, #32640	; 0x7f80
 800be7a:	f021 027f 	bic.w	r2, r1, #127	; 0x7f
 800be7e:	b1ba      	cbz	r2, 800beb0 <LCD__GetBPP+0x7a>
 800be80:	0c03      	lsrs	r3, r0, #16
 800be82:	0419      	lsls	r1, r3, #16
 800be84:	b1a1      	cbz	r1, 800beb0 <LCD__GetBPP+0x7a>
 800be86:	0c82      	lsrs	r2, r0, #18
 800be88:	0493      	lsls	r3, r2, #18
 800be8a:	b19b      	cbz	r3, 800beb4 <LCD__GetBPP+0x7e>
 800be8c:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800be90:	bf0c      	ite	eq
 800be92:	2018      	moveq	r0, #24
 800be94:	2020      	movne	r0, #32
 800be96:	4770      	bx	lr
 800be98:	2001      	movs	r0, #1
 800be9a:	4770      	bx	lr
 800be9c:	2002      	movs	r0, #2
 800be9e:	4770      	bx	lr
 800bea0:	2003      	movs	r0, #3
 800bea2:	4770      	bx	lr
 800bea4:	2004      	movs	r0, #4
 800bea6:	4770      	bx	lr
 800bea8:	2005      	movs	r0, #5
 800beaa:	4770      	bx	lr
 800beac:	2008      	movs	r0, #8
 800beae:	4770      	bx	lr
 800beb0:	2010      	movs	r0, #16
 800beb2:	4770      	bx	lr
 800beb4:	2012      	movs	r0, #18
 800beb6:	4770      	bx	lr

0800beb8 <LCD__GetBPPDevice>:
 800beb8:	b508      	push	{r3, lr}
 800beba:	f7ff ffbc 	bl	800be36 <LCD__GetBPP>
 800bebe:	2801      	cmp	r0, #1
 800bec0:	d00f      	beq.n	800bee2 <LCD__GetBPPDevice+0x2a>
 800bec2:	1e83      	subs	r3, r0, #2
 800bec4:	2b06      	cmp	r3, #6
 800bec6:	d909      	bls.n	800bedc <LCD__GetBPPDevice+0x24>
 800bec8:	f1a0 0109 	sub.w	r1, r0, #9
 800becc:	2907      	cmp	r1, #7
 800bece:	d907      	bls.n	800bee0 <LCD__GetBPPDevice+0x28>
 800bed0:	3811      	subs	r0, #17
 800bed2:	280f      	cmp	r0, #15
 800bed4:	bf94      	ite	ls
 800bed6:	2020      	movls	r0, #32
 800bed8:	2000      	movhi	r0, #0
 800beda:	bd08      	pop	{r3, pc}
 800bedc:	2008      	movs	r0, #8
 800bede:	bd08      	pop	{r3, pc}
 800bee0:	2010      	movs	r0, #16
 800bee2:	bd08      	pop	{r3, pc}

0800bee4 <_SetDrawMode>:
 800bee4:	b570      	push	{r4, r5, r6, lr}
 800bee6:	4b08      	ldr	r3, [pc, #32]	; (800bf08 <_SetDrawMode+0x24>)
 800bee8:	681b      	ldr	r3, [r3, #0]
 800beea:	7c1a      	ldrb	r2, [r3, #16]
 800beec:	ea80 0102 	eor.w	r1, r0, r2
 800bef0:	0749      	lsls	r1, r1, #29
 800bef2:	d505      	bpl.n	800bf00 <_SetDrawMode+0x1c>
 800bef4:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 800bef6:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 800bef8:	6826      	ldr	r6, [r4, #0]
 800befa:	680d      	ldr	r5, [r1, #0]
 800befc:	6025      	str	r5, [r4, #0]
 800befe:	600e      	str	r6, [r1, #0]
 800bf00:	7418      	strb	r0, [r3, #16]
 800bf02:	4610      	mov	r0, r2
 800bf04:	bd70      	pop	{r4, r5, r6, pc}
 800bf06:	bf00      	nop
 800bf08:	20000270 	.word	0x20000270

0800bf0c <LCD_SetDrawMode>:
 800bf0c:	b508      	push	{r3, lr}
 800bf0e:	4b02      	ldr	r3, [pc, #8]	; (800bf18 <LCD_SetDrawMode+0xc>)
 800bf10:	6819      	ldr	r1, [r3, #0]
 800bf12:	688a      	ldr	r2, [r1, #8]
 800bf14:	4790      	blx	r2
 800bf16:	bd08      	pop	{r3, pc}
 800bf18:	2000025c 	.word	0x2000025c

0800bf1c <LCD_DrawPixel>:
 800bf1c:	b538      	push	{r3, r4, r5, lr}
 800bf1e:	4b14      	ldr	r3, [pc, #80]	; (800bf70 <LCD_DrawPixel+0x54>)
 800bf20:	681b      	ldr	r3, [r3, #0]
 800bf22:	460a      	mov	r2, r1
 800bf24:	f9b3 100a 	ldrsh.w	r1, [r3, #10]
 800bf28:	428a      	cmp	r2, r1
 800bf2a:	4604      	mov	r4, r0
 800bf2c:	db1e      	blt.n	800bf6c <LCD_DrawPixel+0x50>
 800bf2e:	f9b3 000e 	ldrsh.w	r0, [r3, #14]
 800bf32:	4282      	cmp	r2, r0
 800bf34:	dc1a      	bgt.n	800bf6c <LCD_DrawPixel+0x50>
 800bf36:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 800bf3a:	428c      	cmp	r4, r1
 800bf3c:	db16      	blt.n	800bf6c <LCD_DrawPixel+0x50>
 800bf3e:	f9b3 000c 	ldrsh.w	r0, [r3, #12]
 800bf42:	4284      	cmp	r4, r0
 800bf44:	dc12      	bgt.n	800bf6c <LCD_DrawPixel+0x50>
 800bf46:	7c19      	ldrb	r1, [r3, #16]
 800bf48:	7c58      	ldrb	r0, [r3, #17]
 800bf4a:	f011 0f01 	tst.w	r1, #1
 800bf4e:	4909      	ldr	r1, [pc, #36]	; (800bf74 <LCD_DrawPixel+0x58>)
 800bf50:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 800bf54:	d004      	beq.n	800bf60 <LCD_DrawPixel+0x44>
 800bf56:	68c1      	ldr	r1, [r0, #12]
 800bf58:	69cb      	ldr	r3, [r1, #28]
 800bf5a:	4621      	mov	r1, r4
 800bf5c:	4798      	blx	r3
 800bf5e:	bd38      	pop	{r3, r4, r5, pc}
 800bf60:	68c5      	ldr	r5, [r0, #12]
 800bf62:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bf64:	69ad      	ldr	r5, [r5, #24]
 800bf66:	681b      	ldr	r3, [r3, #0]
 800bf68:	4621      	mov	r1, r4
 800bf6a:	47a8      	blx	r5
 800bf6c:	bd38      	pop	{r3, r4, r5, pc}
 800bf6e:	bf00      	nop
 800bf70:	20000270 	.word	0x20000270
 800bf74:	2000dde0 	.word	0x2000dde0

0800bf78 <LCD_DrawHLine>:
 800bf78:	b538      	push	{r3, r4, r5, lr}
 800bf7a:	4b10      	ldr	r3, [pc, #64]	; (800bfbc <LCD_DrawHLine+0x44>)
 800bf7c:	681c      	ldr	r4, [r3, #0]
 800bf7e:	460d      	mov	r5, r1
 800bf80:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800bf84:	428d      	cmp	r5, r1
 800bf86:	db17      	blt.n	800bfb8 <LCD_DrawHLine+0x40>
 800bf88:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 800bf8c:	429d      	cmp	r5, r3
 800bf8e:	dc13      	bgt.n	800bfb8 <LCD_DrawHLine+0x40>
 800bf90:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800bf94:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800bf98:	4288      	cmp	r0, r1
 800bf9a:	bfa8      	it	ge
 800bf9c:	4601      	movge	r1, r0
 800bf9e:	429a      	cmp	r2, r3
 800bfa0:	bfb8      	it	lt
 800bfa2:	4613      	movlt	r3, r2
 800bfa4:	428b      	cmp	r3, r1
 800bfa6:	db07      	blt.n	800bfb8 <LCD_DrawHLine+0x40>
 800bfa8:	7c60      	ldrb	r0, [r4, #17]
 800bfaa:	4a05      	ldr	r2, [pc, #20]	; (800bfc0 <LCD_DrawHLine+0x48>)
 800bfac:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 800bfb0:	68c4      	ldr	r4, [r0, #12]
 800bfb2:	462a      	mov	r2, r5
 800bfb4:	68a4      	ldr	r4, [r4, #8]
 800bfb6:	47a0      	blx	r4
 800bfb8:	bd38      	pop	{r3, r4, r5, pc}
 800bfba:	bf00      	nop
 800bfbc:	20000270 	.word	0x20000270
 800bfc0:	2000dde0 	.word	0x2000dde0

0800bfc4 <LCD_DrawVLine>:
 800bfc4:	b538      	push	{r3, r4, r5, lr}
 800bfc6:	4b10      	ldr	r3, [pc, #64]	; (800c008 <LCD_DrawVLine+0x44>)
 800bfc8:	681c      	ldr	r4, [r3, #0]
 800bfca:	4605      	mov	r5, r0
 800bfcc:	4610      	mov	r0, r2
 800bfce:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800bfd2:	4295      	cmp	r5, r2
 800bfd4:	db17      	blt.n	800c006 <LCD_DrawVLine+0x42>
 800bfd6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800bfda:	429d      	cmp	r5, r3
 800bfdc:	dc13      	bgt.n	800c006 <LCD_DrawVLine+0x42>
 800bfde:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800bfe2:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 800bfe6:	4291      	cmp	r1, r2
 800bfe8:	bfa8      	it	ge
 800bfea:	460a      	movge	r2, r1
 800bfec:	4298      	cmp	r0, r3
 800bfee:	bfb8      	it	lt
 800bff0:	4603      	movlt	r3, r0
 800bff2:	4293      	cmp	r3, r2
 800bff4:	db07      	blt.n	800c006 <LCD_DrawVLine+0x42>
 800bff6:	7c64      	ldrb	r4, [r4, #17]
 800bff8:	4904      	ldr	r1, [pc, #16]	; (800c00c <LCD_DrawVLine+0x48>)
 800bffa:	f851 0024 	ldr.w	r0, [r1, r4, lsl #2]
 800bffe:	68c4      	ldr	r4, [r0, #12]
 800c000:	4629      	mov	r1, r5
 800c002:	68e4      	ldr	r4, [r4, #12]
 800c004:	47a0      	blx	r4
 800c006:	bd38      	pop	{r3, r4, r5, pc}
 800c008:	20000270 	.word	0x20000270
 800c00c:	2000dde0 	.word	0x2000dde0

0800c010 <LCD_FillRect>:
 800c010:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c012:	460e      	mov	r6, r1
 800c014:	4911      	ldr	r1, [pc, #68]	; (800c05c <LCD_FillRect+0x4c>)
 800c016:	680c      	ldr	r4, [r1, #0]
 800c018:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800c01c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800c020:	4288      	cmp	r0, r1
 800c022:	bfa8      	it	ge
 800c024:	4601      	movge	r1, r0
 800c026:	42aa      	cmp	r2, r5
 800c028:	bfb8      	it	lt
 800c02a:	4615      	movlt	r5, r2
 800c02c:	428d      	cmp	r5, r1
 800c02e:	db14      	blt.n	800c05a <LCD_FillRect+0x4a>
 800c030:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800c034:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 800c038:	4296      	cmp	r6, r2
 800c03a:	bfa8      	it	ge
 800c03c:	4632      	movge	r2, r6
 800c03e:	4283      	cmp	r3, r0
 800c040:	bfa8      	it	ge
 800c042:	4603      	movge	r3, r0
 800c044:	4293      	cmp	r3, r2
 800c046:	db08      	blt.n	800c05a <LCD_FillRect+0x4a>
 800c048:	7c64      	ldrb	r4, [r4, #17]
 800c04a:	4805      	ldr	r0, [pc, #20]	; (800c060 <LCD_FillRect+0x50>)
 800c04c:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 800c050:	68c4      	ldr	r4, [r0, #12]
 800c052:	9300      	str	r3, [sp, #0]
 800c054:	6924      	ldr	r4, [r4, #16]
 800c056:	462b      	mov	r3, r5
 800c058:	47a0      	blx	r4
 800c05a:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
 800c05c:	20000270 	.word	0x20000270
 800c060:	2000dde0 	.word	0x2000dde0

0800c064 <LCD__DrawBitmap_1bpp>:
 800c064:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c068:	4e69      	ldr	r6, [pc, #420]	; (800c210 <LCD__DrawBitmap_1bpp+0x1ac>)
 800c06a:	b08f      	sub	sp, #60	; 0x3c
 800c06c:	6836      	ldr	r6, [r6, #0]
 800c06e:	9008      	str	r0, [sp, #32]
 800c070:	4688      	mov	r8, r1
 800c072:	4615      	mov	r5, r2
 800c074:	469b      	mov	fp, r3
 800c076:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800c078:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800c07a:	b166      	cbz	r6, 800c096 <LCD__DrawBitmap_1bpp+0x32>
 800c07c:	9d18      	ldr	r5, [sp, #96]	; 0x60
 800c07e:	9404      	str	r4, [sp, #16]
 800c080:	9500      	str	r5, [sp, #0]
 800c082:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800c084:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 800c086:	9501      	str	r5, [sp, #4]
 800c088:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800c08a:	9405      	str	r4, [sp, #20]
 800c08c:	9502      	str	r5, [sp, #8]
 800c08e:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 800c090:	9503      	str	r5, [sp, #12]
 800c092:	6834      	ldr	r4, [r6, #0]
 800c094:	e054      	b.n	800c140 <LCD__DrawBitmap_1bpp+0xdc>
 800c096:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800c098:	9918      	ldr	r1, [sp, #96]	; 0x60
 800c09a:	430b      	orrs	r3, r1
 800c09c:	2b01      	cmp	r3, #1
 800c09e:	d151      	bne.n	800c144 <LCD__DrawBitmap_1bpp+0xe0>
 800c0a0:	485c      	ldr	r0, [pc, #368]	; (800c214 <LCD__DrawBitmap_1bpp+0x1b0>)
 800c0a2:	6800      	ldr	r0, [r0, #0]
 800c0a4:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800c0a8:	ebc8 0102 	rsb	r1, r8, r2
 800c0ac:	2900      	cmp	r1, #0
 800c0ae:	dd08      	ble.n	800c0c2 <LCD__DrawBitmap_1bpp+0x5e>
 800c0b0:	ebc1 030b 	rsb	r3, r1, fp
 800c0b4:	2b00      	cmp	r3, #0
 800c0b6:	f340 80a8 	ble.w	800c20a <LCD__DrawBitmap_1bpp+0x1a6>
 800c0ba:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 800c0bc:	fb01 4406 	mla	r4, r1, r6, r4
 800c0c0:	e001      	b.n	800c0c6 <LCD__DrawBitmap_1bpp+0x62>
 800c0c2:	465b      	mov	r3, fp
 800c0c4:	4642      	mov	r2, r8
 800c0c6:	44d8      	add	r8, fp
 800c0c8:	f9b0 100e 	ldrsh.w	r1, [r0, #14]
 800c0cc:	f108 3cff 	add.w	ip, r8, #4294967295
 800c0d0:	ebc1 080c 	rsb	r8, r1, ip
 800c0d4:	f1b8 0f00 	cmp.w	r8, #0
 800c0d8:	dd04      	ble.n	800c0e4 <LCD__DrawBitmap_1bpp+0x80>
 800c0da:	ebc8 0303 	rsb	r3, r8, r3
 800c0de:	2b00      	cmp	r3, #0
 800c0e0:	f340 8093 	ble.w	800c20a <LCD__DrawBitmap_1bpp+0x1a6>
 800c0e4:	9e08      	ldr	r6, [sp, #32]
 800c0e6:	1971      	adds	r1, r6, r5
 800c0e8:	f9b0 600c 	ldrsh.w	r6, [r0, #12]
 800c0ec:	3901      	subs	r1, #1
 800c0ee:	1b89      	subs	r1, r1, r6
 800c0f0:	9e08      	ldr	r6, [sp, #32]
 800c0f2:	2900      	cmp	r1, #0
 800c0f4:	bfc8      	it	gt
 800c0f6:	ebc1 0505 	rsbgt	r5, r1, r5
 800c0fa:	1bf1      	subs	r1, r6, r7
 800c0fc:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800c100:	42b1      	cmp	r1, r6
 800c102:	da0b      	bge.n	800c11c <LCD__DrawBitmap_1bpp+0xb8>
 800c104:	ebc1 0c06 	rsb	ip, r1, r6
 800c108:	4467      	add	r7, ip
 800c10a:	1b8e      	subs	r6, r1, r6
 800c10c:	f02c 0c07 	bic.w	ip, ip, #7
 800c110:	eb04 04e7 	add.w	r4, r4, r7, asr #3
 800c114:	19ad      	adds	r5, r5, r6
 800c116:	4461      	add	r1, ip
 800c118:	f007 0707 	and.w	r7, r7, #7
 800c11c:	2d00      	cmp	r5, #0
 800c11e:	dd74      	ble.n	800c20a <LCD__DrawBitmap_1bpp+0x1a6>
 800c120:	7c46      	ldrb	r6, [r0, #17]
 800c122:	483d      	ldr	r0, [pc, #244]	; (800c218 <LCD__DrawBitmap_1bpp+0x1b4>)
 800c124:	f850 0026 	ldr.w	r0, [r0, r6, lsl #2]
 800c128:	68c6      	ldr	r6, [r0, #12]
 800c12a:	9300      	str	r3, [sp, #0]
 800c12c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800c12e:	9403      	str	r4, [sp, #12]
 800c130:	9301      	str	r3, [sp, #4]
 800c132:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 800c134:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800c136:	9704      	str	r7, [sp, #16]
 800c138:	9302      	str	r3, [sp, #8]
 800c13a:	9405      	str	r4, [sp, #20]
 800c13c:	6874      	ldr	r4, [r6, #4]
 800c13e:	462b      	mov	r3, r5
 800c140:	47a0      	blx	r4
 800c142:	e062      	b.n	800c20a <LCD__DrawBitmap_1bpp+0x1a6>
 800c144:	981a      	ldr	r0, [sp, #104]	; 0x68
 800c146:	f1c0 0208 	rsb	r2, r0, #8
 800c14a:	920c      	str	r2, [sp, #48]	; 0x30
 800c14c:	4637      	mov	r7, r6
 800c14e:	455e      	cmp	r6, fp
 800c150:	da5b      	bge.n	800c20a <LCD__DrawBitmap_1bpp+0x1a6>
 800c152:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800c154:	4a2f      	ldr	r2, [pc, #188]	; (800c214 <LCD__DrawBitmap_1bpp+0x1b0>)
 800c156:	eb08 0103 	add.w	r1, r8, r3
 800c15a:	1e48      	subs	r0, r1, #1
 800c15c:	6813      	ldr	r3, [r2, #0]
 800c15e:	900b      	str	r0, [sp, #44]	; 0x2c
 800c160:	910a      	str	r1, [sp, #40]	; 0x28
 800c162:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 800c166:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800c168:	4281      	cmp	r1, r0
 800c16a:	db48      	blt.n	800c1fe <LCD__DrawBitmap_1bpp+0x19a>
 800c16c:	f9b3 200e 	ldrsh.w	r2, [r3, #14]
 800c170:	4590      	cmp	r8, r2
 800c172:	dc44      	bgt.n	800c1fe <LCD__DrawBitmap_1bpp+0x19a>
 800c174:	f04f 0900 	mov.w	r9, #0
 800c178:	f8dd a020 	ldr.w	sl, [sp, #32]
 800c17c:	9409      	str	r4, [sp, #36]	; 0x24
 800c17e:	46cc      	mov	ip, r9
 800c180:	45a9      	cmp	r9, r5
 800c182:	da3c      	bge.n	800c1fe <LCD__DrawBitmap_1bpp+0x19a>
 800c184:	f1bc 0f00 	cmp.w	ip, #0
 800c188:	d105      	bne.n	800c196 <LCD__DrawBitmap_1bpp+0x132>
 800c18a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800c18c:	f810 7b01 	ldrb.w	r7, [r0], #1
 800c190:	f04f 0c08 	mov.w	ip, #8
 800c194:	9009      	str	r0, [sp, #36]	; 0x24
 800c196:	990c      	ldr	r1, [sp, #48]	; 0x30
 800c198:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800c19a:	fa47 f201 	asr.w	r2, r7, r1
 800c19e:	f012 0fff 	tst.w	r2, #255	; 0xff
 800c1a2:	fa07 f703 	lsl.w	r7, r7, r3
 800c1a6:	b2ff      	uxtb	r7, r7
 800c1a8:	ebc3 0c0c 	rsb	ip, r3, ip
 800c1ac:	d106      	bne.n	800c1bc <LCD__DrawBitmap_1bpp+0x158>
 800c1ae:	4819      	ldr	r0, [pc, #100]	; (800c214 <LCD__DrawBitmap_1bpp+0x1b0>)
 800c1b0:	6801      	ldr	r1, [r0, #0]
 800c1b2:	7c0b      	ldrb	r3, [r1, #16]
 800c1b4:	f003 0002 	and.w	r0, r3, #2
 800c1b8:	b2c1      	uxtb	r1, r0
 800c1ba:	b9d9      	cbnz	r1, 800c1f4 <LCD__DrawBitmap_1bpp+0x190>
 800c1bc:	4b15      	ldr	r3, [pc, #84]	; (800c214 <LCD__DrawBitmap_1bpp+0x1b0>)
 800c1be:	6818      	ldr	r0, [r3, #0]
 800c1c0:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 800c1c2:	981d      	ldr	r0, [sp, #116]	; 0x74
 800c1c4:	6819      	ldr	r1, [r3, #0]
 800c1c6:	b2d2      	uxtb	r2, r2
 800c1c8:	910d      	str	r1, [sp, #52]	; 0x34
 800c1ca:	b108      	cbz	r0, 800c1d0 <LCD__DrawBitmap_1bpp+0x16c>
 800c1cc:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 800c1d0:	601a      	str	r2, [r3, #0]
 800c1d2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800c1d4:	f8cd c01c 	str.w	ip, [sp, #28]
 800c1d8:	1e5a      	subs	r2, r3, #1
 800c1da:	4650      	mov	r0, sl
 800c1dc:	4641      	mov	r1, r8
 800c1de:	4452      	add	r2, sl
 800c1e0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c1e2:	f7ff ff15 	bl	800c010 <LCD_FillRect>
 800c1e6:	490b      	ldr	r1, [pc, #44]	; (800c214 <LCD__DrawBitmap_1bpp+0x1b0>)
 800c1e8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800c1ea:	6808      	ldr	r0, [r1, #0]
 800c1ec:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800c1f0:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 800c1f2:	601a      	str	r2, [r3, #0]
 800c1f4:	9918      	ldr	r1, [sp, #96]	; 0x60
 800c1f6:	f109 0901 	add.w	r9, r9, #1
 800c1fa:	448a      	add	sl, r1
 800c1fc:	e7c0      	b.n	800c180 <LCD__DrawBitmap_1bpp+0x11c>
 800c1fe:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800c200:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 800c204:	3601      	adds	r6, #1
 800c206:	18e4      	adds	r4, r4, r3
 800c208:	e7a1      	b.n	800c14e <LCD__DrawBitmap_1bpp+0xea>
 800c20a:	b00f      	add	sp, #60	; 0x3c
 800c20c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c210:	2000ddc0 	.word	0x2000ddc0
 800c214:	20000270 	.word	0x20000270
 800c218:	2000dde0 	.word	0x2000dde0

0800c21c <LCD_DrawBitmap>:
 800c21c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c220:	f8df c210 	ldr.w	ip, [pc, #528]	; 800c434 <LCD_DrawBitmap+0x218>
 800c224:	b091      	sub	sp, #68	; 0x44
 800c226:	f8dc c000 	ldr.w	ip, [ip]
 800c22a:	9207      	str	r2, [sp, #28]
 800c22c:	4605      	mov	r5, r0
 800c22e:	4688      	mov	r8, r1
 800c230:	469b      	mov	fp, r3
 800c232:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 800c234:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 800c236:	f1bc 0f00 	cmp.w	ip, #0
 800c23a:	d00c      	beq.n	800c256 <LCD_DrawBitmap+0x3a>
 800c23c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800c23e:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800c240:	9500      	str	r5, [sp, #0]
 800c242:	9701      	str	r7, [sp, #4]
 800c244:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 800c246:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 800c248:	9602      	str	r6, [sp, #8]
 800c24a:	9503      	str	r5, [sp, #12]
 800c24c:	9404      	str	r4, [sp, #16]
 800c24e:	9705      	str	r7, [sp, #20]
 800c250:	f8dc 4000 	ldr.w	r4, [ip]
 800c254:	e081      	b.n	800c35a <LCD_DrawBitmap+0x13e>
 800c256:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800c258:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800c25a:	433b      	orrs	r3, r7
 800c25c:	2b01      	cmp	r3, #1
 800c25e:	d17e      	bne.n	800c35e <LCD_DrawBitmap+0x142>
 800c260:	4872      	ldr	r0, [pc, #456]	; (800c42c <LCD_DrawBitmap+0x210>)
 800c262:	6800      	ldr	r0, [r0, #0]
 800c264:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800c268:	1a53      	subs	r3, r2, r1
 800c26a:	2b00      	cmp	r3, #0
 800c26c:	dd08      	ble.n	800c280 <LCD_DrawBitmap+0x64>
 800c26e:	ebc3 010b 	rsb	r1, r3, fp
 800c272:	2900      	cmp	r1, #0
 800c274:	f340 80d6 	ble.w	800c424 <LCD_DrawBitmap+0x208>
 800c278:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800c27a:	fb03 4407 	mla	r4, r3, r7, r4
 800c27e:	e001      	b.n	800c284 <LCD_DrawBitmap+0x68>
 800c280:	4659      	mov	r1, fp
 800c282:	4642      	mov	r2, r8
 800c284:	eb08 0c0b 	add.w	ip, r8, fp
 800c288:	f9b0 300e 	ldrsh.w	r3, [r0, #14]
 800c28c:	f10c 38ff 	add.w	r8, ip, #4294967295
 800c290:	ebc3 0808 	rsb	r8, r3, r8
 800c294:	f1b8 0f00 	cmp.w	r8, #0
 800c298:	dd04      	ble.n	800c2a4 <LCD_DrawBitmap+0x88>
 800c29a:	ebc8 0101 	rsb	r1, r8, r1
 800c29e:	2900      	cmp	r1, #0
 800c2a0:	f340 80c0 	ble.w	800c424 <LCD_DrawBitmap+0x208>
 800c2a4:	9f07      	ldr	r7, [sp, #28]
 800c2a6:	f9b0 c00c 	ldrsh.w	ip, [r0, #12]
 800c2aa:	19eb      	adds	r3, r5, r7
 800c2ac:	3b01      	subs	r3, #1
 800c2ae:	ebcc 0303 	rsb	r3, ip, r3
 800c2b2:	2b00      	cmp	r3, #0
 800c2b4:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 800c2b8:	bfc4      	itt	gt
 800c2ba:	ebc3 0707 	rsbgt	r7, r3, r7
 800c2be:	9707      	strgt	r7, [sp, #28]
 800c2c0:	4565      	cmp	r5, ip
 800c2c2:	da33      	bge.n	800c32c <LCD_DrawBitmap+0x110>
 800c2c4:	9f07      	ldr	r7, [sp, #28]
 800c2c6:	ebc5 030c 	rsb	r3, r5, ip
 800c2ca:	1aff      	subs	r7, r7, r3
 800c2cc:	2e08      	cmp	r6, #8
 800c2ce:	9707      	str	r7, [sp, #28]
 800c2d0:	d027      	beq.n	800c322 <LCD_DrawBitmap+0x106>
 800c2d2:	dc0d      	bgt.n	800c2f0 <LCD_DrawBitmap+0xd4>
 800c2d4:	2e02      	cmp	r6, #2
 800c2d6:	d014      	beq.n	800c302 <LCD_DrawBitmap+0xe6>
 800c2d8:	2e04      	cmp	r6, #4
 800c2da:	d01a      	beq.n	800c312 <LCD_DrawBitmap+0xf6>
 800c2dc:	2e01      	cmp	r6, #1
 800c2de:	d126      	bne.n	800c32e <LCD_DrawBitmap+0x112>
 800c2e0:	f023 0c07 	bic.w	ip, r3, #7
 800c2e4:	eb04 04e3 	add.w	r4, r4, r3, asr #3
 800c2e8:	4465      	add	r5, ip
 800c2ea:	f003 0307 	and.w	r3, r3, #7
 800c2ee:	e01e      	b.n	800c32e <LCD_DrawBitmap+0x112>
 800c2f0:	2e18      	cmp	r6, #24
 800c2f2:	d018      	beq.n	800c326 <LCD_DrawBitmap+0x10a>
 800c2f4:	2e20      	cmp	r6, #32
 800c2f6:	d016      	beq.n	800c326 <LCD_DrawBitmap+0x10a>
 800c2f8:	2e10      	cmp	r6, #16
 800c2fa:	d118      	bne.n	800c32e <LCD_DrawBitmap+0x112>
 800c2fc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800c300:	e013      	b.n	800c32a <LCD_DrawBitmap+0x10e>
 800c302:	f023 0c03 	bic.w	ip, r3, #3
 800c306:	eb04 04a3 	add.w	r4, r4, r3, asr #2
 800c30a:	4465      	add	r5, ip
 800c30c:	f003 0303 	and.w	r3, r3, #3
 800c310:	e00d      	b.n	800c32e <LCD_DrawBitmap+0x112>
 800c312:	f023 0701 	bic.w	r7, r3, #1
 800c316:	eb04 0463 	add.w	r4, r4, r3, asr #1
 800c31a:	19ed      	adds	r5, r5, r7
 800c31c:	f003 0301 	and.w	r3, r3, #1
 800c320:	e005      	b.n	800c32e <LCD_DrawBitmap+0x112>
 800c322:	18e4      	adds	r4, r4, r3
 800c324:	e001      	b.n	800c32a <LCD_DrawBitmap+0x10e>
 800c326:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800c32a:	4665      	mov	r5, ip
 800c32c:	2300      	movs	r3, #0
 800c32e:	9f07      	ldr	r7, [sp, #28]
 800c330:	2f00      	cmp	r7, #0
 800c332:	dd77      	ble.n	800c424 <LCD_DrawBitmap+0x208>
 800c334:	f890 e011 	ldrb.w	lr, [r0, #17]
 800c338:	483d      	ldr	r0, [pc, #244]	; (800c430 <LCD_DrawBitmap+0x214>)
 800c33a:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800c33c:	f850 002e 	ldr.w	r0, [r0, lr, lsl #2]
 800c340:	f8d0 e00c 	ldr.w	lr, [r0, #12]
 800c344:	9403      	str	r4, [sp, #12]
 800c346:	e88d 0042 	stmia.w	sp, {r1, r6}
 800c34a:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
 800c34c:	9304      	str	r3, [sp, #16]
 800c34e:	9702      	str	r7, [sp, #8]
 800c350:	9405      	str	r4, [sp, #20]
 800c352:	f8de 4004 	ldr.w	r4, [lr, #4]
 800c356:	9b07      	ldr	r3, [sp, #28]
 800c358:	4629      	mov	r1, r5
 800c35a:	47a0      	blx	r4
 800c35c:	e062      	b.n	800c424 <LCD_DrawBitmap+0x208>
 800c35e:	f1c6 0708 	rsb	r7, r6, #8
 800c362:	970e      	str	r7, [sp, #56]	; 0x38
 800c364:	46e0      	mov	r8, ip
 800c366:	460f      	mov	r7, r1
 800c368:	45dc      	cmp	ip, fp
 800c36a:	da5b      	bge.n	800c424 <LCD_DrawBitmap+0x208>
 800c36c:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800c36e:	4b2f      	ldr	r3, [pc, #188]	; (800c42c <LCD_DrawBitmap+0x210>)
 800c370:	1878      	adds	r0, r7, r1
 800c372:	1e42      	subs	r2, r0, #1
 800c374:	900c      	str	r0, [sp, #48]	; 0x30
 800c376:	6818      	ldr	r0, [r3, #0]
 800c378:	920d      	str	r2, [sp, #52]	; 0x34
 800c37a:	990d      	ldr	r1, [sp, #52]	; 0x34
 800c37c:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800c380:	4291      	cmp	r1, r2
 800c382:	db49      	blt.n	800c418 <LCD_DrawBitmap+0x1fc>
 800c384:	f9b0 300e 	ldrsh.w	r3, [r0, #14]
 800c388:	429f      	cmp	r7, r3
 800c38a:	dc45      	bgt.n	800c418 <LCD_DrawBitmap+0x1fc>
 800c38c:	f04f 0900 	mov.w	r9, #0
 800c390:	940b      	str	r4, [sp, #44]	; 0x2c
 800c392:	46aa      	mov	sl, r5
 800c394:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800c398:	9807      	ldr	r0, [sp, #28]
 800c39a:	4581      	cmp	r9, r0
 800c39c:	da3c      	bge.n	800c418 <LCD_DrawBitmap+0x1fc>
 800c39e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c3a0:	b92a      	cbnz	r2, 800c3ae <LCD_DrawBitmap+0x192>
 800c3a2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800c3a4:	f811 8b01 	ldrb.w	r8, [r1], #1
 800c3a8:	2308      	movs	r3, #8
 800c3aa:	910b      	str	r1, [sp, #44]	; 0x2c
 800c3ac:	930a      	str	r3, [sp, #40]	; 0x28
 800c3ae:	980e      	ldr	r0, [sp, #56]	; 0x38
 800c3b0:	990a      	ldr	r1, [sp, #40]	; 0x28
 800c3b2:	fa48 f200 	asr.w	r2, r8, r0
 800c3b6:	1b8b      	subs	r3, r1, r6
 800c3b8:	fa08 f806 	lsl.w	r8, r8, r6
 800c3bc:	f012 0fff 	tst.w	r2, #255	; 0xff
 800c3c0:	fa5f f888 	uxtb.w	r8, r8
 800c3c4:	930a      	str	r3, [sp, #40]	; 0x28
 800c3c6:	d106      	bne.n	800c3d6 <LCD_DrawBitmap+0x1ba>
 800c3c8:	4818      	ldr	r0, [pc, #96]	; (800c42c <LCD_DrawBitmap+0x210>)
 800c3ca:	6801      	ldr	r1, [r0, #0]
 800c3cc:	7c0b      	ldrb	r3, [r1, #16]
 800c3ce:	f003 0002 	and.w	r0, r3, #2
 800c3d2:	b2c1      	uxtb	r1, r0
 800c3d4:	b9d9      	cbnz	r1, 800c40e <LCD_DrawBitmap+0x1f2>
 800c3d6:	4b15      	ldr	r3, [pc, #84]	; (800c42c <LCD_DrawBitmap+0x210>)
 800c3d8:	6818      	ldr	r0, [r3, #0]
 800c3da:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 800c3dc:	981f      	ldr	r0, [sp, #124]	; 0x7c
 800c3de:	6819      	ldr	r1, [r3, #0]
 800c3e0:	b2d2      	uxtb	r2, r2
 800c3e2:	910f      	str	r1, [sp, #60]	; 0x3c
 800c3e4:	b108      	cbz	r0, 800c3ea <LCD_DrawBitmap+0x1ce>
 800c3e6:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 800c3ea:	601a      	str	r2, [r3, #0]
 800c3ec:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800c3ee:	f8cd c020 	str.w	ip, [sp, #32]
 800c3f2:	1e5a      	subs	r2, r3, #1
 800c3f4:	4650      	mov	r0, sl
 800c3f6:	4639      	mov	r1, r7
 800c3f8:	4452      	add	r2, sl
 800c3fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c3fc:	f7ff fe08 	bl	800c010 <LCD_FillRect>
 800c400:	490a      	ldr	r1, [pc, #40]	; (800c42c <LCD_DrawBitmap+0x210>)
 800c402:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800c404:	6808      	ldr	r0, [r1, #0]
 800c406:	f8dd c020 	ldr.w	ip, [sp, #32]
 800c40a:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 800c40c:	601a      	str	r2, [r3, #0]
 800c40e:	991a      	ldr	r1, [sp, #104]	; 0x68
 800c410:	f109 0901 	add.w	r9, r9, #1
 800c414:	448a      	add	sl, r1
 800c416:	e7bf      	b.n	800c398 <LCD_DrawBitmap+0x17c>
 800c418:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800c41a:	f10c 0c01 	add.w	ip, ip, #1
 800c41e:	19e4      	adds	r4, r4, r7
 800c420:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 800c422:	e7a1      	b.n	800c368 <LCD_DrawBitmap+0x14c>
 800c424:	b011      	add	sp, #68	; 0x44
 800c426:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c42a:	bf00      	nop
 800c42c:	20000270 	.word	0x20000270
 800c430:	2000dde0 	.word	0x2000dde0
 800c434:	2000ddc0 	.word	0x2000ddc0

0800c438 <LCD_SetClipRectMax>:
 800c438:	b508      	push	{r3, lr}
 800c43a:	4b05      	ldr	r3, [pc, #20]	; (800c450 <LCD_SetClipRectMax+0x18>)
 800c43c:	4805      	ldr	r0, [pc, #20]	; (800c454 <LCD_SetClipRectMax+0x1c>)
 800c43e:	6819      	ldr	r1, [r3, #0]
 800c440:	7c4a      	ldrb	r2, [r1, #17]
 800c442:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 800c446:	68c3      	ldr	r3, [r0, #12]
 800c448:	3108      	adds	r1, #8
 800c44a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800c44c:	4790      	blx	r2
 800c44e:	bd08      	pop	{r3, pc}
 800c450:	20000270 	.word	0x20000270
 800c454:	2000dde0 	.word	0x2000dde0

0800c458 <emWin_LCD_Init>:
 800c458:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c45a:	f7ff ffed 	bl	800c438 <LCD_SetClipRectMax>
 800c45e:	f005 fdb5 	bl	8011fcc <LCD_InitColors>
 800c462:	4604      	mov	r4, r0
 800c464:	2800      	cmp	r0, #0
 800c466:	d13c      	bne.n	800c4e2 <emWin_LCD_Init+0x8a>
 800c468:	4605      	mov	r5, r0
 800c46a:	4628      	mov	r0, r5
 800c46c:	f001 fd0c 	bl	800de88 <GUI_DEVICE__GetpDriver>
 800c470:	9001      	str	r0, [sp, #4]
 800c472:	b148      	cbz	r0, 800c488 <emWin_LCD_Init+0x30>
 800c474:	68c3      	ldr	r3, [r0, #12]
 800c476:	210c      	movs	r1, #12
 800c478:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800c47a:	a801      	add	r0, sp, #4
 800c47c:	4790      	blx	r2
 800c47e:	4601      	mov	r1, r0
 800c480:	b370      	cbz	r0, 800c4e0 <emWin_LCD_Init+0x88>
 800c482:	9801      	ldr	r0, [sp, #4]
 800c484:	4788      	blx	r1
 800c486:	4304      	orrs	r4, r0
 800c488:	3501      	adds	r5, #1
 800c48a:	2d02      	cmp	r5, #2
 800c48c:	d1ed      	bne.n	800c46a <emWin_LCD_Init+0x12>
 800c48e:	bb44      	cbnz	r4, 800c4e2 <emWin_LCD_Init+0x8a>
 800c490:	f005 fde0 	bl	8012054 <LCD_InitLUT>
 800c494:	2401      	movs	r4, #1
 800c496:	4620      	mov	r0, r4
 800c498:	f001 fcf6 	bl	800de88 <GUI_DEVICE__GetpDriver>
 800c49c:	9001      	str	r0, [sp, #4]
 800c49e:	b1d0      	cbz	r0, 800c4d6 <emWin_LCD_Init+0x7e>
 800c4a0:	4620      	mov	r0, r4
 800c4a2:	f000 fe77 	bl	800d194 <GUI_SelectLayer>
 800c4a6:	2004      	movs	r0, #4
 800c4a8:	f7ff fd30 	bl	800bf0c <LCD_SetDrawMode>
 800c4ac:	f643 72ff 	movw	r2, #16383	; 0x3fff
 800c4b0:	2000      	movs	r0, #0
 800c4b2:	4601      	mov	r1, r0
 800c4b4:	4613      	mov	r3, r2
 800c4b6:	f7ff fdab 	bl	800c010 <LCD_FillRect>
 800c4ba:	2000      	movs	r0, #0
 800c4bc:	f7ff fd26 	bl	800bf0c <LCD_SetDrawMode>
 800c4c0:	a802      	add	r0, sp, #8
 800c4c2:	210e      	movs	r1, #14
 800c4c4:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 800c4c8:	68da      	ldr	r2, [r3, #12]
 800c4ca:	6a53      	ldr	r3, [r2, #36]	; 0x24
 800c4cc:	4798      	blx	r3
 800c4ce:	4601      	mov	r1, r0
 800c4d0:	b108      	cbz	r0, 800c4d6 <emWin_LCD_Init+0x7e>
 800c4d2:	9801      	ldr	r0, [sp, #4]
 800c4d4:	4788      	blx	r1
 800c4d6:	f114 34ff 	adds.w	r4, r4, #4294967295
 800c4da:	d2dc      	bcs.n	800c496 <emWin_LCD_Init+0x3e>
 800c4dc:	2400      	movs	r4, #0
 800c4de:	e000      	b.n	800c4e2 <emWin_LCD_Init+0x8a>
 800c4e0:	2401      	movs	r4, #1
 800c4e2:	4620      	mov	r0, r4
 800c4e4:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
	...

0800c4e8 <LCD_Color2Index>:
 800c4e8:	b508      	push	{r3, lr}
 800c4ea:	4b05      	ldr	r3, [pc, #20]	; (800c500 <LCD_Color2Index+0x18>)
 800c4ec:	6819      	ldr	r1, [r3, #0]
 800c4ee:	4b05      	ldr	r3, [pc, #20]	; (800c504 <LCD_Color2Index+0x1c>)
 800c4f0:	7c4a      	ldrb	r2, [r1, #17]
 800c4f2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800c4f6:	690a      	ldr	r2, [r1, #16]
 800c4f8:	6813      	ldr	r3, [r2, #0]
 800c4fa:	4798      	blx	r3
 800c4fc:	bd08      	pop	{r3, pc}
 800c4fe:	bf00      	nop
 800c500:	20000270 	.word	0x20000270
 800c504:	2000dde0 	.word	0x2000dde0

0800c508 <LCD_Index2Color>:
 800c508:	b508      	push	{r3, lr}
 800c50a:	4b05      	ldr	r3, [pc, #20]	; (800c520 <LCD_Index2Color+0x18>)
 800c50c:	6819      	ldr	r1, [r3, #0]
 800c50e:	4b05      	ldr	r3, [pc, #20]	; (800c524 <LCD_Index2Color+0x1c>)
 800c510:	7c4a      	ldrb	r2, [r1, #17]
 800c512:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800c516:	690a      	ldr	r2, [r1, #16]
 800c518:	6853      	ldr	r3, [r2, #4]
 800c51a:	4798      	blx	r3
 800c51c:	bd08      	pop	{r3, pc}
 800c51e:	bf00      	nop
 800c520:	20000270 	.word	0x20000270
 800c524:	2000dde0 	.word	0x2000dde0

0800c528 <LCD_SetColorIndex>:
 800c528:	4b05      	ldr	r3, [pc, #20]	; (800c540 <LCD_SetColorIndex+0x18>)
 800c52a:	6819      	ldr	r1, [r3, #0]
 800c52c:	7c0a      	ldrb	r2, [r1, #16]
 800c52e:	f002 0304 	and.w	r3, r2, #4
 800c532:	b2da      	uxtb	r2, r3
 800c534:	b10a      	cbz	r2, 800c53a <LCD_SetColorIndex+0x12>
 800c536:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800c538:	e000      	b.n	800c53c <LCD_SetColorIndex+0x14>
 800c53a:	6bc9      	ldr	r1, [r1, #60]	; 0x3c
 800c53c:	6008      	str	r0, [r1, #0]
 800c53e:	4770      	bx	lr
 800c540:	20000270 	.word	0x20000270

0800c544 <_SetColor>:
 800c544:	b508      	push	{r3, lr}
 800c546:	4b06      	ldr	r3, [pc, #24]	; (800c560 <_SetColor+0x1c>)
 800c548:	681b      	ldr	r3, [r3, #0]
 800c54a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800c54c:	4281      	cmp	r1, r0
 800c54e:	d006      	beq.n	800c55e <_SetColor+0x1a>
 800c550:	6318      	str	r0, [r3, #48]	; 0x30
 800c552:	f7ff ffc9 	bl	800c4e8 <LCD_Color2Index>
 800c556:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800c55a:	f7ff bfe5 	b.w	800c528 <LCD_SetColorIndex>
 800c55e:	bd08      	pop	{r3, pc}
 800c560:	20000270 	.word	0x20000270

0800c564 <LCD_SetBkColorIndex>:
 800c564:	4b05      	ldr	r3, [pc, #20]	; (800c57c <LCD_SetBkColorIndex+0x18>)
 800c566:	6819      	ldr	r1, [r3, #0]
 800c568:	7c0a      	ldrb	r2, [r1, #16]
 800c56a:	f002 0304 	and.w	r3, r2, #4
 800c56e:	b2da      	uxtb	r2, r3
 800c570:	b10a      	cbz	r2, 800c576 <LCD_SetBkColorIndex+0x12>
 800c572:	6bc9      	ldr	r1, [r1, #60]	; 0x3c
 800c574:	e000      	b.n	800c578 <LCD_SetBkColorIndex+0x14>
 800c576:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800c578:	6008      	str	r0, [r1, #0]
 800c57a:	4770      	bx	lr
 800c57c:	20000270 	.word	0x20000270

0800c580 <_SetBkColor>:
 800c580:	b508      	push	{r3, lr}
 800c582:	4b06      	ldr	r3, [pc, #24]	; (800c59c <_SetBkColor+0x1c>)
 800c584:	681b      	ldr	r3, [r3, #0]
 800c586:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800c588:	4281      	cmp	r1, r0
 800c58a:	d006      	beq.n	800c59a <_SetBkColor+0x1a>
 800c58c:	6358      	str	r0, [r3, #52]	; 0x34
 800c58e:	f7ff ffab 	bl	800c4e8 <LCD_Color2Index>
 800c592:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800c596:	f7ff bfe5 	b.w	800c564 <LCD_SetBkColorIndex>
 800c59a:	bd08      	pop	{r3, pc}
 800c59c:	20000270 	.word	0x20000270

0800c5a0 <LCD_SetBkColor>:
 800c5a0:	b508      	push	{r3, lr}
 800c5a2:	4b02      	ldr	r3, [pc, #8]	; (800c5ac <LCD_SetBkColor+0xc>)
 800c5a4:	6819      	ldr	r1, [r3, #0]
 800c5a6:	684a      	ldr	r2, [r1, #4]
 800c5a8:	4790      	blx	r2
 800c5aa:	bd08      	pop	{r3, pc}
 800c5ac:	2000025c 	.word	0x2000025c

0800c5b0 <LCD_SetColor>:
 800c5b0:	b508      	push	{r3, lr}
 800c5b2:	4b02      	ldr	r3, [pc, #8]	; (800c5bc <LCD_SetColor+0xc>)
 800c5b4:	6819      	ldr	r1, [r3, #0]
 800c5b6:	680a      	ldr	r2, [r1, #0]
 800c5b8:	4790      	blx	r2
 800c5ba:	bd08      	pop	{r3, pc}
 800c5bc:	2000025c 	.word	0x2000025c

0800c5c0 <GUI__strlen>:
 800c5c0:	f04f 33ff 	mov.w	r3, #4294967295
 800c5c4:	b118      	cbz	r0, 800c5ce <GUI__strlen+0xe>
 800c5c6:	3301      	adds	r3, #1
 800c5c8:	5cc2      	ldrb	r2, [r0, r3]
 800c5ca:	2a00      	cmp	r2, #0
 800c5cc:	d1fb      	bne.n	800c5c6 <GUI__strlen+0x6>
 800c5ce:	4618      	mov	r0, r3
 800c5d0:	4770      	bx	lr

0800c5d2 <GUI__memset16>:
 800c5d2:	0783      	lsls	r3, r0, #30
 800c5d4:	b570      	push	{r4, r5, r6, lr}
 800c5d6:	bf44      	itt	mi
 800c5d8:	f820 1b02 	strhmi.w	r1, [r0], #2
 800c5dc:	3a01      	submi	r2, #1
 800c5de:	0853      	lsrs	r3, r2, #1
 800c5e0:	d020      	beq.n	800c624 <GUI__memset16+0x52>
 800c5e2:	f04f 1501 	mov.w	r5, #65537	; 0x10001
 800c5e6:	434d      	muls	r5, r1
 800c5e8:	2b03      	cmp	r3, #3
 800c5ea:	dc02      	bgt.n	800c5f2 <GUI__memset16+0x20>
 800c5ec:	4606      	mov	r6, r0
 800c5ee:	461c      	mov	r4, r3
 800c5f0:	e011      	b.n	800c616 <GUI__memset16+0x44>
 800c5f2:	4604      	mov	r4, r0
 800c5f4:	461e      	mov	r6, r3
 800c5f6:	3e04      	subs	r6, #4
 800c5f8:	6025      	str	r5, [r4, #0]
 800c5fa:	6065      	str	r5, [r4, #4]
 800c5fc:	60a5      	str	r5, [r4, #8]
 800c5fe:	60e5      	str	r5, [r4, #12]
 800c600:	3410      	adds	r4, #16
 800c602:	2e03      	cmp	r6, #3
 800c604:	dcf7      	bgt.n	800c5f6 <GUI__memset16+0x24>
 800c606:	3b04      	subs	r3, #4
 800c608:	089c      	lsrs	r4, r3, #2
 800c60a:	1c66      	adds	r6, r4, #1
 800c60c:	eb00 1006 	add.w	r0, r0, r6, lsl #4
 800c610:	eba3 0384 	sub.w	r3, r3, r4, lsl #2
 800c614:	e7ea      	b.n	800c5ec <GUI__memset16+0x1a>
 800c616:	b11c      	cbz	r4, 800c620 <GUI__memset16+0x4e>
 800c618:	f846 5b04 	str.w	r5, [r6], #4
 800c61c:	3c01      	subs	r4, #1
 800c61e:	e7fa      	b.n	800c616 <GUI__memset16+0x44>
 800c620:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800c624:	07d3      	lsls	r3, r2, #31
 800c626:	bf48      	it	mi
 800c628:	8001      	strhmi	r1, [r0, #0]
 800c62a:	bd70      	pop	{r4, r5, r6, pc}

0800c62c <GUI__memset>:
 800c62c:	b570      	push	{r4, r5, r6, lr}
 800c62e:	b12a      	cbz	r2, 800c63c <GUI__memset+0x10>
 800c630:	0783      	lsls	r3, r0, #30
 800c632:	d003      	beq.n	800c63c <GUI__memset+0x10>
 800c634:	f800 1b01 	strb.w	r1, [r0], #1
 800c638:	3a01      	subs	r2, #1
 800c63a:	e7f8      	b.n	800c62e <GUI__memset+0x2>
 800c63c:	0893      	lsrs	r3, r2, #2
 800c63e:	d101      	bne.n	800c644 <GUI__memset+0x18>
 800c640:	1882      	adds	r2, r0, r2
 800c642:	e017      	b.n	800c674 <GUI__memset+0x48>
 800c644:	f04f 3401 	mov.w	r4, #16843009	; 0x1010101
 800c648:	f002 0203 	and.w	r2, r2, #3
 800c64c:	434c      	muls	r4, r1
 800c64e:	2b03      	cmp	r3, #3
 800c650:	dd06      	ble.n	800c660 <GUI__memset+0x34>
 800c652:	6004      	str	r4, [r0, #0]
 800c654:	6044      	str	r4, [r0, #4]
 800c656:	6084      	str	r4, [r0, #8]
 800c658:	60c4      	str	r4, [r0, #12]
 800c65a:	3b04      	subs	r3, #4
 800c65c:	3010      	adds	r0, #16
 800c65e:	e7f6      	b.n	800c64e <GUI__memset+0x22>
 800c660:	4605      	mov	r5, r0
 800c662:	461e      	mov	r6, r3
 800c664:	b11b      	cbz	r3, 800c66e <GUI__memset+0x42>
 800c666:	f840 4b04 	str.w	r4, [r0], #4
 800c66a:	3b01      	subs	r3, #1
 800c66c:	e7fa      	b.n	800c664 <GUI__memset+0x38>
 800c66e:	eb05 0086 	add.w	r0, r5, r6, lsl #2
 800c672:	e7e5      	b.n	800c640 <GUI__memset+0x14>
 800c674:	4290      	cmp	r0, r2
 800c676:	d002      	beq.n	800c67e <GUI__memset+0x52>
 800c678:	f800 1b01 	strb.w	r1, [r0], #1
 800c67c:	e7fa      	b.n	800c674 <GUI__memset+0x48>
 800c67e:	bd70      	pop	{r4, r5, r6, pc}

0800c680 <GUI__SetText>:
 800c680:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c682:	6807      	ldr	r7, [r0, #0]
 800c684:	4605      	mov	r5, r0
 800c686:	4638      	mov	r0, r7
 800c688:	460e      	mov	r6, r1
 800c68a:	f005 fd3b 	bl	8012104 <GUI__strcmp_hp>
 800c68e:	b908      	cbnz	r0, 800c694 <GUI__SetText+0x14>
 800c690:	2000      	movs	r0, #0
 800c692:	e02e      	b.n	800c6f2 <GUI__SetText+0x72>
 800c694:	4630      	mov	r0, r6
 800c696:	f7ff ff93 	bl	800c5c0 <GUI__strlen>
 800c69a:	1c44      	adds	r4, r0, #1
 800c69c:	4638      	mov	r0, r7
 800c69e:	f002 f945 	bl	800e92c <GUI_ALLOC_GetSize>
 800c6a2:	4284      	cmp	r4, r0
 800c6a4:	d10f      	bne.n	800c6c6 <GUI__SetText+0x46>
 800c6a6:	2c00      	cmp	r4, #0
 800c6a8:	d0f2      	beq.n	800c690 <GUI__SetText+0x10>
 800c6aa:	4638      	mov	r0, r7
 800c6ac:	f002 f910 	bl	800e8d0 <GUI_ALLOC_LockH>
 800c6b0:	ad02      	add	r5, sp, #8
 800c6b2:	4631      	mov	r1, r6
 800c6b4:	f845 0d04 	str.w	r0, [r5, #-4]!
 800c6b8:	4622      	mov	r2, r4
 800c6ba:	f7f3 fd65 	bl	8000188 <memcpy>
 800c6be:	4628      	mov	r0, r5
 800c6c0:	f002 f914 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800c6c4:	e014      	b.n	800c6f0 <GUI__SetText+0x70>
 800c6c6:	4620      	mov	r0, r4
 800c6c8:	f002 fb50 	bl	800ed6c <GUI_ALLOC_AllocNoInit>
 800c6cc:	4607      	mov	r7, r0
 800c6ce:	2800      	cmp	r0, #0
 800c6d0:	d0de      	beq.n	800c690 <GUI__SetText+0x10>
 800c6d2:	f002 f8fd 	bl	800e8d0 <GUI_ALLOC_LockH>
 800c6d6:	ac02      	add	r4, sp, #8
 800c6d8:	4631      	mov	r1, r6
 800c6da:	f844 0d04 	str.w	r0, [r4, #-4]!
 800c6de:	f007 fa61 	bl	8013ba4 <strcpy>
 800c6e2:	4620      	mov	r0, r4
 800c6e4:	f002 f902 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800c6e8:	4628      	mov	r0, r5
 800c6ea:	f002 fb43 	bl	800ed74 <GUI_ALLOC_FreePtr>
 800c6ee:	602f      	str	r7, [r5, #0]
 800c6f0:	2001      	movs	r0, #1
 800c6f2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

0800c6f4 <GUI__ReduceRect>:
 800c6f4:	880b      	ldrh	r3, [r1, #0]
 800c6f6:	b292      	uxth	r2, r2
 800c6f8:	18d3      	adds	r3, r2, r3
 800c6fa:	8003      	strh	r3, [r0, #0]
 800c6fc:	888b      	ldrh	r3, [r1, #4]
 800c6fe:	1a9b      	subs	r3, r3, r2
 800c700:	8083      	strh	r3, [r0, #4]
 800c702:	884b      	ldrh	r3, [r1, #2]
 800c704:	88c9      	ldrh	r1, [r1, #6]
 800c706:	18d3      	adds	r3, r2, r3
 800c708:	1a8a      	subs	r2, r1, r2
 800c70a:	8043      	strh	r3, [r0, #2]
 800c70c:	80c2      	strh	r2, [r0, #6]
 800c70e:	4770      	bx	lr

0800c710 <GUI__ManageCacheEx>:
 800c710:	2801      	cmp	r0, #1
 800c712:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c714:	4604      	mov	r4, r0
 800c716:	460d      	mov	r5, r1
 800c718:	dc5f      	bgt.n	800c7da <GUI__ManageCacheEx+0xca>
 800c71a:	2901      	cmp	r1, #1
 800c71c:	d004      	beq.n	800c728 <GUI__ManageCacheEx+0x18>
 800c71e:	2902      	cmp	r1, #2
 800c720:	d020      	beq.n	800c764 <GUI__ManageCacheEx+0x54>
 800c722:	2900      	cmp	r1, #0
 800c724:	d034      	beq.n	800c790 <GUI__ManageCacheEx+0x80>
 800c726:	e058      	b.n	800c7da <GUI__ManageCacheEx+0xca>
 800c728:	4e2d      	ldr	r6, [pc, #180]	; (800c7e0 <GUI__ManageCacheEx+0xd0>)
 800c72a:	f856 7020 	ldr.w	r7, [r6, r0, lsl #2]
 800c72e:	b9af      	cbnz	r7, 800c75c <GUI__ManageCacheEx+0x4c>
 800c730:	f001 fbaa 	bl	800de88 <GUI_DEVICE__GetpDriver>
 800c734:	9001      	str	r0, [sp, #4]
 800c736:	2800      	cmp	r0, #0
 800c738:	d04f      	beq.n	800c7da <GUI__ManageCacheEx+0xca>
 800c73a:	68c2      	ldr	r2, [r0, #12]
 800c73c:	210d      	movs	r1, #13
 800c73e:	6a53      	ldr	r3, [r2, #36]	; 0x24
 800c740:	a801      	add	r0, sp, #4
 800c742:	4798      	blx	r3
 800c744:	4602      	mov	r2, r0
 800c746:	2800      	cmp	r0, #0
 800c748:	d047      	beq.n	800c7da <GUI__ManageCacheEx+0xca>
 800c74a:	4629      	mov	r1, r5
 800c74c:	9801      	ldr	r0, [sp, #4]
 800c74e:	4790      	blx	r2
 800c750:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 800c754:	1c41      	adds	r1, r0, #1
 800c756:	f846 1024 	str.w	r1, [r6, r4, lsl #2]
 800c75a:	e017      	b.n	800c78c <GUI__ManageCacheEx+0x7c>
 800c75c:	3701      	adds	r7, #1
 800c75e:	f846 7020 	str.w	r7, [r6, r0, lsl #2]
 800c762:	e03a      	b.n	800c7da <GUI__ManageCacheEx+0xca>
 800c764:	f001 fb90 	bl	800de88 <GUI_DEVICE__GetpDriver>
 800c768:	9001      	str	r0, [sp, #4]
 800c76a:	2800      	cmp	r0, #0
 800c76c:	d035      	beq.n	800c7da <GUI__ManageCacheEx+0xca>
 800c76e:	68c4      	ldr	r4, [r0, #12]
 800c770:	210d      	movs	r1, #13
 800c772:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c774:	a801      	add	r0, sp, #4
 800c776:	4798      	blx	r3
 800c778:	4604      	mov	r4, r0
 800c77a:	2800      	cmp	r0, #0
 800c77c:	d02d      	beq.n	800c7da <GUI__ManageCacheEx+0xca>
 800c77e:	4819      	ldr	r0, [pc, #100]	; (800c7e4 <GUI__ManageCacheEx+0xd4>)
 800c780:	6801      	ldr	r1, [r0, #0]
 800c782:	b101      	cbz	r1, 800c786 <GUI__ManageCacheEx+0x76>
 800c784:	4788      	blx	r1
 800c786:	9801      	ldr	r0, [sp, #4]
 800c788:	2102      	movs	r1, #2
 800c78a:	47a0      	blx	r4
 800c78c:	2000      	movs	r0, #0
 800c78e:	e025      	b.n	800c7dc <GUI__ManageCacheEx+0xcc>
 800c790:	4b13      	ldr	r3, [pc, #76]	; (800c7e0 <GUI__ManageCacheEx+0xd0>)
 800c792:	f853 1020 	ldr.w	r1, [r3, r0, lsl #2]
 800c796:	2901      	cmp	r1, #1
 800c798:	d001      	beq.n	800c79e <GUI__ManageCacheEx+0x8e>
 800c79a:	2001      	movs	r0, #1
 800c79c:	e014      	b.n	800c7c8 <GUI__ManageCacheEx+0xb8>
 800c79e:	f001 fb73 	bl	800de88 <GUI_DEVICE__GetpDriver>
 800c7a2:	9001      	str	r0, [sp, #4]
 800c7a4:	2800      	cmp	r0, #0
 800c7a6:	d0f8      	beq.n	800c79a <GUI__ManageCacheEx+0x8a>
 800c7a8:	68c0      	ldr	r0, [r0, #12]
 800c7aa:	210d      	movs	r1, #13
 800c7ac:	6a42      	ldr	r2, [r0, #36]	; 0x24
 800c7ae:	a801      	add	r0, sp, #4
 800c7b0:	4790      	blx	r2
 800c7b2:	4605      	mov	r5, r0
 800c7b4:	2800      	cmp	r0, #0
 800c7b6:	d0f0      	beq.n	800c79a <GUI__ManageCacheEx+0x8a>
 800c7b8:	4b0a      	ldr	r3, [pc, #40]	; (800c7e4 <GUI__ManageCacheEx+0xd4>)
 800c7ba:	6819      	ldr	r1, [r3, #0]
 800c7bc:	b101      	cbz	r1, 800c7c0 <GUI__ManageCacheEx+0xb0>
 800c7be:	4788      	blx	r1
 800c7c0:	9801      	ldr	r0, [sp, #4]
 800c7c2:	2100      	movs	r1, #0
 800c7c4:	47a8      	blx	r5
 800c7c6:	2000      	movs	r0, #0
 800c7c8:	4b05      	ldr	r3, [pc, #20]	; (800c7e0 <GUI__ManageCacheEx+0xd0>)
 800c7ca:	f853 2024 	ldr.w	r2, [r3, r4, lsl #2]
 800c7ce:	2a00      	cmp	r2, #0
 800c7d0:	bf18      	it	ne
 800c7d2:	3a01      	subne	r2, #1
 800c7d4:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 800c7d8:	e000      	b.n	800c7dc <GUI__ManageCacheEx+0xcc>
 800c7da:	2001      	movs	r0, #1
 800c7dc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800c7de:	bf00      	nop
 800c7e0:	2000d7fc 	.word	0x2000d7fc
 800c7e4:	2000d7f8 	.word	0x2000d7f8

0800c7e8 <GUI__ManageCache>:
 800c7e8:	4b02      	ldr	r3, [pc, #8]	; (800c7f4 <GUI__ManageCache+0xc>)
 800c7ea:	4601      	mov	r1, r0
 800c7ec:	6818      	ldr	r0, [r3, #0]
 800c7ee:	7c40      	ldrb	r0, [r0, #17]
 800c7f0:	f7ff bf8e 	b.w	800c710 <GUI__ManageCacheEx>
 800c7f4:	20000270 	.word	0x20000270

0800c7f8 <GUI__IntersectRects>:
 800c7f8:	b570      	push	{r4, r5, r6, lr}
 800c7fa:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800c7fe:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800c802:	f9b2 3000 	ldrsh.w	r3, [r2]
 800c806:	f9b1 4000 	ldrsh.w	r4, [r1]
 800c80a:	42b5      	cmp	r5, r6
 800c80c:	bfa8      	it	ge
 800c80e:	462e      	movge	r6, r5
 800c810:	429c      	cmp	r4, r3
 800c812:	bfb8      	it	lt
 800c814:	461c      	movlt	r4, r3
 800c816:	f9b2 5004 	ldrsh.w	r5, [r2, #4]
 800c81a:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 800c81e:	b2b3      	uxth	r3, r6
 800c820:	f9b1 6004 	ldrsh.w	r6, [r1, #4]
 800c824:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 800c828:	8043      	strh	r3, [r0, #2]
 800c82a:	42ae      	cmp	r6, r5
 800c82c:	bfb8      	it	lt
 800c82e:	4635      	movlt	r5, r6
 800c830:	b2a4      	uxth	r4, r4
 800c832:	b2ad      	uxth	r5, r5
 800c834:	4291      	cmp	r1, r2
 800c836:	bfb8      	it	lt
 800c838:	460a      	movlt	r2, r1
 800c83a:	8004      	strh	r4, [r0, #0]
 800c83c:	8085      	strh	r5, [r0, #4]
 800c83e:	b224      	sxth	r4, r4
 800c840:	b22d      	sxth	r5, r5
 800c842:	b291      	uxth	r1, r2
 800c844:	42a5      	cmp	r5, r4
 800c846:	80c1      	strh	r1, [r0, #6]
 800c848:	db06      	blt.n	800c858 <GUI__IntersectRects+0x60>
 800c84a:	b208      	sxth	r0, r1
 800c84c:	b21b      	sxth	r3, r3
 800c84e:	4298      	cmp	r0, r3
 800c850:	bfb4      	ite	lt
 800c852:	2000      	movlt	r0, #0
 800c854:	2001      	movge	r0, #1
 800c856:	bd70      	pop	{r4, r5, r6, pc}
 800c858:	2000      	movs	r0, #0
 800c85a:	bd70      	pop	{r4, r5, r6, pc}

0800c85c <GUI__IntersectRect>:
 800c85c:	880b      	ldrh	r3, [r1, #0]
 800c85e:	b510      	push	{r4, lr}
 800c860:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c864:	b21a      	sxth	r2, r3
 800c866:	4294      	cmp	r4, r2
 800c868:	bfb8      	it	lt
 800c86a:	8003      	strhlt	r3, [r0, #0]
 800c86c:	884b      	ldrh	r3, [r1, #2]
 800c86e:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800c872:	b21a      	sxth	r2, r3
 800c874:	4294      	cmp	r4, r2
 800c876:	bfb8      	it	lt
 800c878:	8043      	strhlt	r3, [r0, #2]
 800c87a:	888b      	ldrh	r3, [r1, #4]
 800c87c:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800c880:	b21a      	sxth	r2, r3
 800c882:	4294      	cmp	r4, r2
 800c884:	bfc8      	it	gt
 800c886:	8083      	strhgt	r3, [r0, #4]
 800c888:	88cb      	ldrh	r3, [r1, #6]
 800c88a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800c88e:	b21a      	sxth	r2, r3
 800c890:	4291      	cmp	r1, r2
 800c892:	bfc8      	it	gt
 800c894:	80c3      	strhgt	r3, [r0, #6]
 800c896:	bd10      	pop	{r4, pc}

0800c898 <_GetTwinArcPara>:
 800c898:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c89c:	fb01 f901 	mul.w	r9, r1, r1
 800c8a0:	1e47      	subs	r7, r0, #1
 800c8a2:	4604      	mov	r4, r0
 800c8a4:	fb00 f000 	mul.w	r0, r0, r0
 800c8a8:	ebc9 0000 	rsb	r0, r9, r0
 800c8ac:	460d      	mov	r5, r1
 800c8ae:	4692      	mov	sl, r2
 800c8b0:	4698      	mov	r8, r3
 800c8b2:	9e08      	ldr	r6, [sp, #32]
 800c8b4:	f005 fc39 	bl	801212a <GUI__sqrt32>
 800c8b8:	42bd      	cmp	r5, r7
 800c8ba:	f8ca 0000 	str.w	r0, [sl]
 800c8be:	da10      	bge.n	800c8e2 <_GetTwinArcPara+0x4a>
 800c8c0:	fb07 f107 	mul.w	r1, r7, r7
 800c8c4:	ebc9 0001 	rsb	r0, r9, r1
 800c8c8:	f005 fc2f 	bl	801212a <GUI__sqrt32>
 800c8cc:	3c02      	subs	r4, #2
 800c8ce:	42a5      	cmp	r5, r4
 800c8d0:	f8c8 0000 	str.w	r0, [r8]
 800c8d4:	da03      	bge.n	800c8de <_GetTwinArcPara+0x46>
 800c8d6:	1e42      	subs	r2, r0, #1
 800c8d8:	6032      	str	r2, [r6, #0]
 800c8da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c8de:	2300      	movs	r3, #0
 800c8e0:	e002      	b.n	800c8e8 <_GetTwinArcPara+0x50>
 800c8e2:	2300      	movs	r3, #0
 800c8e4:	f8c8 3000 	str.w	r3, [r8]
 800c8e8:	6033      	str	r3, [r6, #0]
 800c8ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800c8f0 <GUI__DrawTwinArc2>:
 800c8f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c8f4:	461c      	mov	r4, r3
 800c8f6:	4b50      	ldr	r3, [pc, #320]	; (800ca38 <GUI__DrawTwinArc2+0x148>)
 800c8f8:	681b      	ldr	r3, [r3, #0]
 800c8fa:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 800c8fc:	eb00 0805 	add.w	r8, r0, r5
 800c900:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800c902:	eb01 0905 	add.w	r9, r1, r5
 800c906:	1815      	adds	r5, r2, r0
 800c908:	b08b      	sub	sp, #44	; 0x2c
 800c90a:	1929      	adds	r1, r5, r4
 800c90c:	1e4a      	subs	r2, r1, #1
 800c90e:	a808      	add	r0, sp, #32
 800c910:	f8ad 8020 	strh.w	r8, [sp, #32]
 800c914:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800c918:	f8ad 5022 	strh.w	r5, [sp, #34]	; 0x22
 800c91c:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800c920:	f7fc fe7c 	bl	800961c <WM__InitIVRSearch>
 800c924:	2800      	cmp	r0, #0
 800c926:	f000 8083 	beq.w	800ca30 <GUI__DrawTwinArc2+0x140>
 800c92a:	2c00      	cmp	r4, #0
 800c92c:	dc02      	bgt.n	800c934 <GUI__DrawTwinArc2+0x44>
 800c92e:	f7fc fdb5 	bl	800949c <WM__GetNextIVR>
 800c932:	e7f7      	b.n	800c924 <GUI__DrawTwinArc2+0x34>
 800c934:	9814      	ldr	r0, [sp, #80]	; 0x50
 800c936:	f000 fc05 	bl	800d144 <GUI_SetColor>
 800c93a:	1e67      	subs	r7, r4, #1
 800c93c:	462e      	mov	r6, r5
 800c93e:	3601      	adds	r6, #1
 800c940:	b317      	cbz	r7, 800c988 <GUI__DrawTwinArc2+0x98>
 800c942:	ab07      	add	r3, sp, #28
 800c944:	4639      	mov	r1, r7
 800c946:	9300      	str	r3, [sp, #0]
 800c948:	4620      	mov	r0, r4
 800c94a:	aa05      	add	r2, sp, #20
 800c94c:	ab06      	add	r3, sp, #24
 800c94e:	f7ff ffa3 	bl	800c898 <_GetTwinArcPara>
 800c952:	f8dd b018 	ldr.w	fp, [sp, #24]
 800c956:	9905      	ldr	r1, [sp, #20]
 800c958:	eb08 0004 	add.w	r0, r8, r4
 800c95c:	ebc4 0309 	rsb	r3, r4, r9
 800c960:	ebcb 0200 	rsb	r2, fp, r0
 800c964:	eb03 0a01 	add.w	sl, r3, r1
 800c968:	1a40      	subs	r0, r0, r1
 800c96a:	3a01      	subs	r2, #1
 800c96c:	4631      	mov	r1, r6
 800c96e:	9303      	str	r3, [sp, #12]
 800c970:	f7ff fb02 	bl	800bf78 <LCD_DrawHLine>
 800c974:	9803      	ldr	r0, [sp, #12]
 800c976:	eb00 010b 	add.w	r1, r0, fp
 800c97a:	1c48      	adds	r0, r1, #1
 800c97c:	4652      	mov	r2, sl
 800c97e:	4631      	mov	r1, r6
 800c980:	f7ff fafa 	bl	800bf78 <LCD_DrawHLine>
 800c984:	3f01      	subs	r7, #1
 800c986:	e7da      	b.n	800c93e <GUI__DrawTwinArc2+0x4e>
 800c988:	2c01      	cmp	r4, #1
 800c98a:	d0d0      	beq.n	800c92e <GUI__DrawTwinArc2+0x3e>
 800c98c:	9815      	ldr	r0, [sp, #84]	; 0x54
 800c98e:	f000 fbd9 	bl	800d144 <GUI_SetColor>
 800c992:	1ea6      	subs	r6, r4, #2
 800c994:	b326      	cbz	r6, 800c9e0 <GUI__DrawTwinArc2+0xf0>
 800c996:	1961      	adds	r1, r4, r5
 800c998:	aa07      	add	r2, sp, #28
 800c99a:	ebc6 0a01 	rsb	sl, r6, r1
 800c99e:	9200      	str	r2, [sp, #0]
 800c9a0:	4631      	mov	r1, r6
 800c9a2:	4620      	mov	r0, r4
 800c9a4:	aa05      	add	r2, sp, #20
 800c9a6:	ab06      	add	r3, sp, #24
 800c9a8:	f7ff ff76 	bl	800c898 <_GetTwinArcPara>
 800c9ac:	f8dd b01c 	ldr.w	fp, [sp, #28]
 800c9b0:	9906      	ldr	r1, [sp, #24]
 800c9b2:	eb08 0004 	add.w	r0, r8, r4
 800c9b6:	ebc4 0309 	rsb	r3, r4, r9
 800c9ba:	ebcb 0200 	rsb	r2, fp, r0
 800c9be:	185f      	adds	r7, r3, r1
 800c9c0:	1a40      	subs	r0, r0, r1
 800c9c2:	3a01      	subs	r2, #1
 800c9c4:	4651      	mov	r1, sl
 800c9c6:	9303      	str	r3, [sp, #12]
 800c9c8:	f7ff fad6 	bl	800bf78 <LCD_DrawHLine>
 800c9cc:	9803      	ldr	r0, [sp, #12]
 800c9ce:	eb00 010b 	add.w	r1, r0, fp
 800c9d2:	1c48      	adds	r0, r1, #1
 800c9d4:	463a      	mov	r2, r7
 800c9d6:	4651      	mov	r1, sl
 800c9d8:	f7ff face 	bl	800bf78 <LCD_DrawHLine>
 800c9dc:	3e01      	subs	r6, #1
 800c9de:	e7d9      	b.n	800c994 <GUI__DrawTwinArc2+0xa4>
 800c9e0:	2c02      	cmp	r4, #2
 800c9e2:	d0a4      	beq.n	800c92e <GUI__DrawTwinArc2+0x3e>
 800c9e4:	9816      	ldr	r0, [sp, #88]	; 0x58
 800c9e6:	f000 fbad 	bl	800d144 <GUI_SetColor>
 800c9ea:	1ee6      	subs	r6, r4, #3
 800c9ec:	2e00      	cmp	r6, #0
 800c9ee:	d09e      	beq.n	800c92e <GUI__DrawTwinArc2+0x3e>
 800c9f0:	af07      	add	r7, sp, #28
 800c9f2:	4631      	mov	r1, r6
 800c9f4:	9700      	str	r7, [sp, #0]
 800c9f6:	4620      	mov	r0, r4
 800c9f8:	aa05      	add	r2, sp, #20
 800c9fa:	ab06      	add	r3, sp, #24
 800c9fc:	f7ff ff4c 	bl	800c898 <_GetTwinArcPara>
 800ca00:	eb04 0a05 	add.w	sl, r4, r5
 800ca04:	9807      	ldr	r0, [sp, #28]
 800ca06:	eb08 0304 	add.w	r3, r8, r4
 800ca0a:	ebc6 0a0a 	rsb	sl, r6, sl
 800ca0e:	ebc4 0b09 	rsb	fp, r4, r9
 800ca12:	1e5a      	subs	r2, r3, #1
 800ca14:	eb0b 0700 	add.w	r7, fp, r0
 800ca18:	4651      	mov	r1, sl
 800ca1a:	1a18      	subs	r0, r3, r0
 800ca1c:	f7ff faac 	bl	800bf78 <LCD_DrawHLine>
 800ca20:	f10b 0001 	add.w	r0, fp, #1
 800ca24:	4651      	mov	r1, sl
 800ca26:	463a      	mov	r2, r7
 800ca28:	f7ff faa6 	bl	800bf78 <LCD_DrawHLine>
 800ca2c:	3e01      	subs	r6, #1
 800ca2e:	e7dd      	b.n	800c9ec <GUI__DrawTwinArc2+0xfc>
 800ca30:	b00b      	add	sp, #44	; 0x2c
 800ca32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ca36:	bf00      	nop
 800ca38:	20000270 	.word	0x20000270

0800ca3c <GUI__DrawTwinArc4>:
 800ca3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ca40:	4d73      	ldr	r5, [pc, #460]	; (800cc10 <GUI__DrawTwinArc4+0x1d4>)
 800ca42:	682f      	ldr	r7, [r5, #0]
 800ca44:	6cfe      	ldr	r6, [r7, #76]	; 0x4c
 800ca46:	6d3d      	ldr	r5, [r7, #80]	; 0x50
 800ca48:	b08d      	sub	sp, #52	; 0x34
 800ca4a:	1980      	adds	r0, r0, r6
 800ca4c:	1949      	adds	r1, r1, r5
 800ca4e:	195f      	adds	r7, r3, r5
 800ca50:	9004      	str	r0, [sp, #16]
 800ca52:	1996      	adds	r6, r2, r6
 800ca54:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 800ca58:	a80a      	add	r0, sp, #40	; 0x28
 800ca5a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 800ca5c:	9105      	str	r1, [sp, #20]
 800ca5e:	460d      	mov	r5, r1
 800ca60:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 800ca64:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 800ca68:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 800ca6c:	f7fc fdd6 	bl	800961c <WM__InitIVRSearch>
 800ca70:	2800      	cmp	r0, #0
 800ca72:	f000 80ca 	beq.w	800cc0a <GUI__DrawTwinArc4+0x1ce>
 800ca76:	2c00      	cmp	r4, #0
 800ca78:	dc02      	bgt.n	800ca80 <GUI__DrawTwinArc4+0x44>
 800ca7a:	f7fc fd0f 	bl	800949c <WM__GetNextIVR>
 800ca7e:	e7f7      	b.n	800ca70 <GUI__DrawTwinArc4+0x34>
 800ca80:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800ca82:	f000 fb5f 	bl	800d144 <GUI_SetColor>
 800ca86:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800ca8a:	1e65      	subs	r5, r4, #1
 800ca8c:	f108 0801 	add.w	r8, r8, #1
 800ca90:	2d00      	cmp	r5, #0
 800ca92:	d035      	beq.n	800cb00 <GUI__DrawTwinArc4+0xc4>
 800ca94:	1b39      	subs	r1, r7, r4
 800ca96:	ab09      	add	r3, sp, #36	; 0x24
 800ca98:	eb01 0a05 	add.w	sl, r1, r5
 800ca9c:	9300      	str	r3, [sp, #0]
 800ca9e:	4629      	mov	r1, r5
 800caa0:	4620      	mov	r0, r4
 800caa2:	aa07      	add	r2, sp, #28
 800caa4:	ab08      	add	r3, sp, #32
 800caa6:	f7ff fef7 	bl	800c898 <_GetTwinArcPara>
 800caaa:	9804      	ldr	r0, [sp, #16]
 800caac:	9a08      	ldr	r2, [sp, #32]
 800caae:	9907      	ldr	r1, [sp, #28]
 800cab0:	1903      	adds	r3, r0, r4
 800cab2:	1a98      	subs	r0, r3, r2
 800cab4:	ebc4 0b06 	rsb	fp, r4, r6
 800cab8:	ebc1 0c03 	rsb	ip, r1, r3
 800cabc:	eb0b 0901 	add.w	r9, fp, r1
 800cac0:	1e43      	subs	r3, r0, #1
 800cac2:	eb0b 0102 	add.w	r1, fp, r2
 800cac6:	4660      	mov	r0, ip
 800cac8:	461a      	mov	r2, r3
 800caca:	f101 0b01 	add.w	fp, r1, #1
 800cace:	4641      	mov	r1, r8
 800cad0:	9302      	str	r3, [sp, #8]
 800cad2:	f8cd c00c 	str.w	ip, [sp, #12]
 800cad6:	f7ff fa4f 	bl	800bf78 <LCD_DrawHLine>
 800cada:	4658      	mov	r0, fp
 800cadc:	4641      	mov	r1, r8
 800cade:	464a      	mov	r2, r9
 800cae0:	f7ff fa4a 	bl	800bf78 <LCD_DrawHLine>
 800cae4:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800cae8:	9a02      	ldr	r2, [sp, #8]
 800caea:	4660      	mov	r0, ip
 800caec:	4651      	mov	r1, sl
 800caee:	f7ff fa43 	bl	800bf78 <LCD_DrawHLine>
 800caf2:	4658      	mov	r0, fp
 800caf4:	4651      	mov	r1, sl
 800caf6:	464a      	mov	r2, r9
 800caf8:	f7ff fa3e 	bl	800bf78 <LCD_DrawHLine>
 800cafc:	3d01      	subs	r5, #1
 800cafe:	e7c5      	b.n	800ca8c <GUI__DrawTwinArc4+0x50>
 800cb00:	2c01      	cmp	r4, #1
 800cb02:	d0ba      	beq.n	800ca7a <GUI__DrawTwinArc4+0x3e>
 800cb04:	9818      	ldr	r0, [sp, #96]	; 0x60
 800cb06:	f000 fb1d 	bl	800d144 <GUI_SetColor>
 800cb0a:	1ea5      	subs	r5, r4, #2
 800cb0c:	2d00      	cmp	r5, #0
 800cb0e:	d03b      	beq.n	800cb88 <GUI__DrawTwinArc4+0x14c>
 800cb10:	9805      	ldr	r0, [sp, #20]
 800cb12:	a909      	add	r1, sp, #36	; 0x24
 800cb14:	ebc4 0e07 	rsb	lr, r4, r7
 800cb18:	eb04 0800 	add.w	r8, r4, r0
 800cb1c:	9100      	str	r1, [sp, #0]
 800cb1e:	4620      	mov	r0, r4
 800cb20:	4629      	mov	r1, r5
 800cb22:	aa07      	add	r2, sp, #28
 800cb24:	ab08      	add	r3, sp, #32
 800cb26:	eb0e 0905 	add.w	r9, lr, r5
 800cb2a:	f7ff feb5 	bl	800c898 <_GetTwinArcPara>
 800cb2e:	9b04      	ldr	r3, [sp, #16]
 800cb30:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800cb32:	9908      	ldr	r1, [sp, #32]
 800cb34:	1918      	adds	r0, r3, r4
 800cb36:	1a83      	subs	r3, r0, r2
 800cb38:	ebc4 0a06 	rsb	sl, r4, r6
 800cb3c:	ebc1 0c00 	rsb	ip, r1, r0
 800cb40:	3b01      	subs	r3, #1
 800cb42:	ebc5 0b08 	rsb	fp, r5, r8
 800cb46:	eb0a 0002 	add.w	r0, sl, r2
 800cb4a:	eb0a 0801 	add.w	r8, sl, r1
 800cb4e:	461a      	mov	r2, r3
 800cb50:	f100 0a01 	add.w	sl, r0, #1
 800cb54:	4659      	mov	r1, fp
 800cb56:	4660      	mov	r0, ip
 800cb58:	9302      	str	r3, [sp, #8]
 800cb5a:	f8cd c00c 	str.w	ip, [sp, #12]
 800cb5e:	f7ff fa0b 	bl	800bf78 <LCD_DrawHLine>
 800cb62:	4650      	mov	r0, sl
 800cb64:	4659      	mov	r1, fp
 800cb66:	4642      	mov	r2, r8
 800cb68:	f7ff fa06 	bl	800bf78 <LCD_DrawHLine>
 800cb6c:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800cb70:	9a02      	ldr	r2, [sp, #8]
 800cb72:	4660      	mov	r0, ip
 800cb74:	4649      	mov	r1, r9
 800cb76:	f7ff f9ff 	bl	800bf78 <LCD_DrawHLine>
 800cb7a:	4650      	mov	r0, sl
 800cb7c:	4649      	mov	r1, r9
 800cb7e:	4642      	mov	r2, r8
 800cb80:	f7ff f9fa 	bl	800bf78 <LCD_DrawHLine>
 800cb84:	3d01      	subs	r5, #1
 800cb86:	e7c1      	b.n	800cb0c <GUI__DrawTwinArc4+0xd0>
 800cb88:	2c02      	cmp	r4, #2
 800cb8a:	f43f af76 	beq.w	800ca7a <GUI__DrawTwinArc4+0x3e>
 800cb8e:	9819      	ldr	r0, [sp, #100]	; 0x64
 800cb90:	f000 fad8 	bl	800d144 <GUI_SetColor>
 800cb94:	1ee5      	subs	r5, r4, #3
 800cb96:	2d00      	cmp	r5, #0
 800cb98:	f43f af6f 	beq.w	800ca7a <GUI__DrawTwinArc4+0x3e>
 800cb9c:	9b05      	ldr	r3, [sp, #20]
 800cb9e:	aa09      	add	r2, sp, #36	; 0x24
 800cba0:	4629      	mov	r1, r5
 800cba2:	eb04 0b03 	add.w	fp, r4, r3
 800cba6:	9200      	str	r2, [sp, #0]
 800cba8:	4620      	mov	r0, r4
 800cbaa:	aa07      	add	r2, sp, #28
 800cbac:	ab08      	add	r3, sp, #32
 800cbae:	f7ff fe73 	bl	800c898 <_GetTwinArcPara>
 800cbb2:	9804      	ldr	r0, [sp, #16]
 800cbb4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800cbb6:	1901      	adds	r1, r0, r4
 800cbb8:	ebc2 0c01 	rsb	ip, r2, r1
 800cbbc:	1e4b      	subs	r3, r1, #1
 800cbbe:	ebc5 0b0b 	rsb	fp, r5, fp
 800cbc2:	ebc4 0a06 	rsb	sl, r4, r6
 800cbc6:	eb0a 0802 	add.w	r8, sl, r2
 800cbca:	4660      	mov	r0, ip
 800cbcc:	461a      	mov	r2, r3
 800cbce:	f10a 0a01 	add.w	sl, sl, #1
 800cbd2:	4659      	mov	r1, fp
 800cbd4:	9302      	str	r3, [sp, #8]
 800cbd6:	f8cd c00c 	str.w	ip, [sp, #12]
 800cbda:	f7ff f9cd 	bl	800bf78 <LCD_DrawHLine>
 800cbde:	4650      	mov	r0, sl
 800cbe0:	4659      	mov	r1, fp
 800cbe2:	4642      	mov	r2, r8
 800cbe4:	f7ff f9c8 	bl	800bf78 <LCD_DrawHLine>
 800cbe8:	ebc4 0907 	rsb	r9, r4, r7
 800cbec:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800cbf0:	9a02      	ldr	r2, [sp, #8]
 800cbf2:	44a9      	add	r9, r5
 800cbf4:	4660      	mov	r0, ip
 800cbf6:	4649      	mov	r1, r9
 800cbf8:	f7ff f9be 	bl	800bf78 <LCD_DrawHLine>
 800cbfc:	4650      	mov	r0, sl
 800cbfe:	4649      	mov	r1, r9
 800cc00:	4642      	mov	r2, r8
 800cc02:	f7ff f9b9 	bl	800bf78 <LCD_DrawHLine>
 800cc06:	3d01      	subs	r5, #1
 800cc08:	e7c5      	b.n	800cb96 <GUI__DrawTwinArc4+0x15a>
 800cc0a:	b00d      	add	sp, #52	; 0x34
 800cc0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cc10:	20000270 	.word	0x20000270

0800cc14 <GUI__MixColors>:
 800cc14:	f001 437f 	and.w	r3, r1, #4278190080	; 0xff000000
 800cc18:	f1b3 4f7f 	cmp.w	r3, #4278190080	; 0xff000000
 800cc1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cc1e:	d027      	beq.n	800cc70 <GUI__MixColors+0x5c>
 800cc20:	43d5      	mvns	r5, r2
 800cc22:	b2eb      	uxtb	r3, r5
 800cc24:	b2cd      	uxtb	r5, r1
 800cc26:	b2c6      	uxtb	r6, r0
 800cc28:	435d      	muls	r5, r3
 800cc2a:	fb06 5502 	mla	r5, r6, r2, r5
 800cc2e:	f401 467f 	and.w	r6, r1, #65280	; 0xff00
 800cc32:	435e      	muls	r6, r3
 800cc34:	f400 447f 	and.w	r4, r0, #65280	; 0xff00
 800cc38:	fb04 6402 	mla	r4, r4, r2, r6
 800cc3c:	0a26      	lsrs	r6, r4, #8
 800cc3e:	f401 047f 	and.w	r4, r1, #16711680	; 0xff0000
 800cc42:	f400 077f 	and.w	r7, r0, #16711680	; 0xff0000
 800cc46:	435c      	muls	r4, r3
 800cc48:	0e09      	lsrs	r1, r1, #24
 800cc4a:	434b      	muls	r3, r1
 800cc4c:	0e00      	lsrs	r0, r0, #24
 800cc4e:	fb07 4402 	mla	r4, r7, r2, r4
 800cc52:	0a24      	lsrs	r4, r4, #8
 800cc54:	fb00 3202 	mla	r2, r0, r2, r3
 800cc58:	f406 407f 	and.w	r0, r6, #65280	; 0xff00
 800cc5c:	f3c5 2307 	ubfx	r3, r5, #8, #8
 800cc60:	0411      	lsls	r1, r2, #16
 800cc62:	4318      	orrs	r0, r3
 800cc64:	f404 027f 	and.w	r2, r4, #16711680	; 0xff0000
 800cc68:	4310      	orrs	r0, r2
 800cc6a:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 800cc6e:	4308      	orrs	r0, r1
 800cc70:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800cc74 <_OnExit>:
 800cc74:	b570      	push	{r4, r5, r6, lr}
 800cc76:	4c0a      	ldr	r4, [pc, #40]	; (800cca0 <_OnExit+0x2c>)
 800cc78:	4d0a      	ldr	r5, [pc, #40]	; (800cca4 <_OnExit+0x30>)
 800cc7a:	6820      	ldr	r0, [r4, #0]
 800cc7c:	4e0a      	ldr	r6, [pc, #40]	; (800cca8 <_OnExit+0x34>)
 800cc7e:	f001 fe13 	bl	800e8a8 <GUI_ALLOC_FreeFixedBlock>
 800cc82:	6828      	ldr	r0, [r5, #0]
 800cc84:	f001 fe10 	bl	800e8a8 <GUI_ALLOC_FreeFixedBlock>
 800cc88:	6830      	ldr	r0, [r6, #0]
 800cc8a:	f001 fe0d 	bl	800e8a8 <GUI_ALLOC_FreeFixedBlock>
 800cc8e:	4a07      	ldr	r2, [pc, #28]	; (800ccac <_OnExit+0x38>)
 800cc90:	4807      	ldr	r0, [pc, #28]	; (800ccb0 <_OnExit+0x3c>)
 800cc92:	2300      	movs	r3, #0
 800cc94:	6033      	str	r3, [r6, #0]
 800cc96:	602b      	str	r3, [r5, #0]
 800cc98:	6023      	str	r3, [r4, #0]
 800cc9a:	6013      	str	r3, [r2, #0]
 800cc9c:	6003      	str	r3, [r0, #0]
 800cc9e:	bd70      	pop	{r4, r5, r6, pc}
 800cca0:	2000d808 	.word	0x2000d808
 800cca4:	2000d804 	.word	0x2000d804
 800cca8:	2000d80c 	.word	0x2000d80c
 800ccac:	2000d810 	.word	0x2000d810
 800ccb0:	2000d820 	.word	0x2000d820

0800ccb4 <GUI__GetAlphaBuffer>:
 800ccb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ccb8:	4698      	mov	r8, r3
 800ccba:	4b2a      	ldr	r3, [pc, #168]	; (800cd64 <GUI__GetAlphaBuffer+0xb0>)
 800ccbc:	4616      	mov	r6, r2
 800ccbe:	681a      	ldr	r2, [r3, #0]
 800ccc0:	4605      	mov	r5, r0
 800ccc2:	460f      	mov	r7, r1
 800ccc4:	b932      	cbnz	r2, 800ccd4 <GUI__GetAlphaBuffer+0x20>
 800ccc6:	2001      	movs	r0, #1
 800ccc8:	6018      	str	r0, [r3, #0]
 800ccca:	4927      	ldr	r1, [pc, #156]	; (800cd68 <GUI__GetAlphaBuffer+0xb4>)
 800cccc:	4827      	ldr	r0, [pc, #156]	; (800cd6c <GUI__GetAlphaBuffer+0xb8>)
 800ccce:	6001      	str	r1, [r0, #0]
 800ccd0:	f001 f9fc 	bl	800e0cc <GUI__RegisterExit>
 800ccd4:	4c26      	ldr	r4, [pc, #152]	; (800cd70 <GUI__GetAlphaBuffer+0xbc>)
 800ccd6:	6823      	ldr	r3, [r4, #0]
 800ccd8:	b933      	cbnz	r3, 800cce8 <GUI__GetAlphaBuffer+0x34>
 800ccda:	4a26      	ldr	r2, [pc, #152]	; (800cd74 <GUI__GetAlphaBuffer+0xc0>)
 800ccdc:	6810      	ldr	r0, [r2, #0]
 800ccde:	6020      	str	r0, [r4, #0]
 800cce0:	b910      	cbnz	r0, 800cce8 <GUI__GetAlphaBuffer+0x34>
 800cce2:	f7ff f8a5 	bl	800be30 <LCD_GetVXSizeMax>
 800cce6:	6020      	str	r0, [r4, #0]
 800cce8:	f1b8 0f00 	cmp.w	r8, #0
 800ccec:	d002      	beq.n	800ccf4 <GUI__GetAlphaBuffer+0x40>
 800ccee:	6821      	ldr	r1, [r4, #0]
 800ccf0:	f8c8 1000 	str.w	r1, [r8]
 800ccf4:	b195      	cbz	r5, 800cd1c <GUI__GetAlphaBuffer+0x68>
 800ccf6:	4c20      	ldr	r4, [pc, #128]	; (800cd78 <GUI__GetAlphaBuffer+0xc4>)
 800ccf8:	6823      	ldr	r3, [r4, #0]
 800ccfa:	b953      	cbnz	r3, 800cd12 <GUI__GetAlphaBuffer+0x5e>
 800ccfc:	4a1c      	ldr	r2, [pc, #112]	; (800cd70 <GUI__GetAlphaBuffer+0xbc>)
 800ccfe:	6810      	ldr	r0, [r2, #0]
 800cd00:	0080      	lsls	r0, r0, #2
 800cd02:	f001 ff6b 	bl	800ebdc <GUI_ALLOC_GetFixedBlock>
 800cd06:	6020      	str	r0, [r4, #0]
 800cd08:	f1d0 0401 	rsbs	r4, r0, #1
 800cd0c:	bf38      	it	cc
 800cd0e:	2400      	movcc	r4, #0
 800cd10:	e000      	b.n	800cd14 <GUI__GetAlphaBuffer+0x60>
 800cd12:	2400      	movs	r4, #0
 800cd14:	4918      	ldr	r1, [pc, #96]	; (800cd78 <GUI__GetAlphaBuffer+0xc4>)
 800cd16:	680b      	ldr	r3, [r1, #0]
 800cd18:	602b      	str	r3, [r5, #0]
 800cd1a:	e000      	b.n	800cd1e <GUI__GetAlphaBuffer+0x6a>
 800cd1c:	462c      	mov	r4, r5
 800cd1e:	b177      	cbz	r7, 800cd3e <GUI__GetAlphaBuffer+0x8a>
 800cd20:	4d16      	ldr	r5, [pc, #88]	; (800cd7c <GUI__GetAlphaBuffer+0xc8>)
 800cd22:	682a      	ldr	r2, [r5, #0]
 800cd24:	b942      	cbnz	r2, 800cd38 <GUI__GetAlphaBuffer+0x84>
 800cd26:	4812      	ldr	r0, [pc, #72]	; (800cd70 <GUI__GetAlphaBuffer+0xbc>)
 800cd28:	6801      	ldr	r1, [r0, #0]
 800cd2a:	0088      	lsls	r0, r1, #2
 800cd2c:	f001 ff56 	bl	800ebdc <GUI_ALLOC_GetFixedBlock>
 800cd30:	6028      	str	r0, [r5, #0]
 800cd32:	2800      	cmp	r0, #0
 800cd34:	bf08      	it	eq
 800cd36:	2401      	moveq	r4, #1
 800cd38:	4b10      	ldr	r3, [pc, #64]	; (800cd7c <GUI__GetAlphaBuffer+0xc8>)
 800cd3a:	681a      	ldr	r2, [r3, #0]
 800cd3c:	603a      	str	r2, [r7, #0]
 800cd3e:	b176      	cbz	r6, 800cd5e <GUI__GetAlphaBuffer+0xaa>
 800cd40:	4d0f      	ldr	r5, [pc, #60]	; (800cd80 <GUI__GetAlphaBuffer+0xcc>)
 800cd42:	6828      	ldr	r0, [r5, #0]
 800cd44:	b940      	cbnz	r0, 800cd58 <GUI__GetAlphaBuffer+0xa4>
 800cd46:	490a      	ldr	r1, [pc, #40]	; (800cd70 <GUI__GetAlphaBuffer+0xbc>)
 800cd48:	680b      	ldr	r3, [r1, #0]
 800cd4a:	0098      	lsls	r0, r3, #2
 800cd4c:	f001 ff46 	bl	800ebdc <GUI_ALLOC_GetFixedBlock>
 800cd50:	6028      	str	r0, [r5, #0]
 800cd52:	2800      	cmp	r0, #0
 800cd54:	bf08      	it	eq
 800cd56:	2401      	moveq	r4, #1
 800cd58:	4a09      	ldr	r2, [pc, #36]	; (800cd80 <GUI__GetAlphaBuffer+0xcc>)
 800cd5a:	6810      	ldr	r0, [r2, #0]
 800cd5c:	6030      	str	r0, [r6, #0]
 800cd5e:	4620      	mov	r0, r4
 800cd60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cd64:	2000d820 	.word	0x2000d820
 800cd68:	0800cc75 	.word	0x0800cc75
 800cd6c:	2000d818 	.word	0x2000d818
 800cd70:	2000d810 	.word	0x2000d810
 800cd74:	2000dde8 	.word	0x2000dde8
 800cd78:	2000d808 	.word	0x2000d808
 800cd7c:	2000d804 	.word	0x2000d804
 800cd80:	2000d80c 	.word	0x2000d80c

0800cd84 <GUI__DoAlphaBlending>:
 800cd84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cd88:	b093      	sub	sp, #76	; 0x4c
 800cd8a:	2400      	movs	r4, #0
 800cd8c:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800cd8e:	900a      	str	r0, [sp, #40]	; 0x28
 800cd90:	910b      	str	r1, [sp, #44]	; 0x2c
 800cd92:	4617      	mov	r7, r2
 800cd94:	4698      	mov	r8, r3
 800cd96:	6034      	str	r4, [r6, #0]
 800cd98:	a80f      	add	r0, sp, #60	; 0x3c
 800cd9a:	a910      	add	r1, sp, #64	; 0x40
 800cd9c:	4622      	mov	r2, r4
 800cd9e:	ab11      	add	r3, sp, #68	; 0x44
 800cda0:	f7ff ff88 	bl	800ccb4 <GUI__GetAlphaBuffer>
 800cda4:	4605      	mov	r5, r0
 800cda6:	2800      	cmp	r0, #0
 800cda8:	f040 80c4 	bne.w	800cf34 <GUI__DoAlphaBlending+0x1b0>
 800cdac:	4c63      	ldr	r4, [pc, #396]	; (800cf3c <GUI__DoAlphaBlending+0x1b8>)
 800cdae:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800cdb0:	6823      	ldr	r3, [r4, #0]
 800cdb2:	4963      	ldr	r1, [pc, #396]	; (800cf40 <GUI__DoAlphaBlending+0x1bc>)
 800cdb4:	7c58      	ldrb	r0, [r3, #17]
 800cdb6:	4590      	cmp	r8, r2
 800cdb8:	bfa8      	it	ge
 800cdba:	4690      	movge	r8, r2
 800cdbc:	f851 2020 	ldr.w	r2, [r1, r0, lsl #2]
 800cdc0:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800cdc4:	6913      	ldr	r3, [r2, #16]
 800cdc6:	9206      	str	r2, [sp, #24]
 800cdc8:	930c      	str	r3, [sp, #48]	; 0x30
 800cdca:	f7ff f803 	bl	800bdd4 <GUI_GetBitsPerPixelEx>
 800cdce:	9007      	str	r0, [sp, #28]
 800cdd0:	6820      	ldr	r0, [r4, #0]
 800cdd2:	4c5c      	ldr	r4, [pc, #368]	; (800cf44 <GUI__DoAlphaBlending+0x1c0>)
 800cdd4:	7c40      	ldrb	r0, [r0, #17]
 800cdd6:	f7ff f81b 	bl	800be10 <GUI_GetpfIndex2ColorEx>
 800cdda:	42a0      	cmp	r0, r4
 800cddc:	9004      	str	r0, [sp, #16]
 800cdde:	d005      	beq.n	800cdec <GUI__DoAlphaBlending+0x68>
 800cde0:	4d59      	ldr	r5, [pc, #356]	; (800cf48 <GUI__DoAlphaBlending+0x1c4>)
 800cde2:	1b41      	subs	r1, r0, r5
 800cde4:	bf18      	it	ne
 800cde6:	2101      	movne	r1, #1
 800cde8:	9105      	str	r1, [sp, #20]
 800cdea:	e000      	b.n	800cdee <GUI__DoAlphaBlending+0x6a>
 800cdec:	9505      	str	r5, [sp, #20]
 800cdee:	2500      	movs	r5, #0
 800cdf0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800cdf2:	46ab      	mov	fp, r5
 800cdf4:	1d3a      	adds	r2, r7, #4
 800cdf6:	6838      	ldr	r0, [r7, #0]
 800cdf8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800cdfa:	920d      	str	r2, [sp, #52]	; 0x34
 800cdfc:	4798      	blx	r3
 800cdfe:	4681      	mov	r9, r0
 800ce00:	0e00      	lsrs	r0, r0, #24
 800ce02:	9008      	str	r0, [sp, #32]
 800ce04:	f000 8088 	beq.w	800cf18 <GUI__DoAlphaBlending+0x194>
 800ce08:	f1bb 0f00 	cmp.w	fp, #0
 800ce0c:	d142      	bne.n	800ce94 <GUI__DoAlphaBlending+0x110>
 800ce0e:	4a4b      	ldr	r2, [pc, #300]	; (800cf3c <GUI__DoAlphaBlending+0x1b8>)
 800ce10:	990a      	ldr	r1, [sp, #40]	; 0x28
 800ce12:	6813      	ldr	r3, [r2, #0]
 800ce14:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800ce16:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 800ce1a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ce1c:	eb05 0801 	add.w	r8, r5, r1
 800ce20:	990a      	ldr	r1, [sp, #40]	; 0x28
 800ce22:	4540      	cmp	r0, r8
 800ce24:	bfc8      	it	gt
 800ce26:	ebc8 0b00 	rsbgt	fp, r8, r0
 800ce2a:	eb01 0c02 	add.w	ip, r1, r2
 800ce2e:	9906      	ldr	r1, [sp, #24]
 800ce30:	f8cd c00c 	str.w	ip, [sp, #12]
 800ce34:	eb0b 0a05 	add.w	sl, fp, r5
 800ce38:	9101      	str	r1, [sp, #4]
 800ce3a:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
 800ce3e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800ce40:	bfc8      	it	gt
 800ce42:	4680      	movgt	r8, r0
 800ce44:	eb03 000a 	add.w	r0, r3, sl
 800ce48:	f10c 32ff 	add.w	r2, ip, #4294967295
 800ce4c:	9000      	str	r0, [sp, #0]
 800ce4e:	460b      	mov	r3, r1
 800ce50:	4640      	mov	r0, r8
 800ce52:	f005 f881 	bl	8011f58 <GUI_ReadRectEx>
 800ce56:	9a07      	ldr	r2, [sp, #28]
 800ce58:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800ce5a:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800ce5e:	2a17      	cmp	r2, #23
 800ce60:	dc06      	bgt.n	800ce70 <GUI__DoAlphaBlending+0xec>
 800ce62:	4450      	add	r0, sl
 800ce64:	ebcb 0104 	rsb	r1, fp, r4
 800ce68:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ce6a:	f005 fa2f 	bl	80122cc <GUI__ExpandPixelIndicesEx>
 800ce6e:	e001      	b.n	800ce74 <GUI__DoAlphaBlending+0xf0>
 800ce70:	9a05      	ldr	r2, [sp, #20]
 800ce72:	b912      	cbnz	r2, 800ce7a <GUI__DoAlphaBlending+0xf6>
 800ce74:	f04f 0b01 	mov.w	fp, #1
 800ce78:	e00c      	b.n	800ce94 <GUI__DoAlphaBlending+0x110>
 800ce7a:	ebc8 0b0c 	rsb	fp, r8, ip
 800ce7e:	4482      	add	sl, r0
 800ce80:	f8da 0000 	ldr.w	r0, [sl]
 800ce84:	9b04      	ldr	r3, [sp, #16]
 800ce86:	4798      	blx	r3
 800ce88:	f1bb 0b01 	subs.w	fp, fp, #1
 800ce8c:	f84a 0b04 	str.w	r0, [sl], #4
 800ce90:	d1f6      	bne.n	800ce80 <GUI__DoAlphaBlending+0xfc>
 800ce92:	e7ef      	b.n	800ce74 <GUI__DoAlphaBlending+0xf0>
 800ce94:	492d      	ldr	r1, [pc, #180]	; (800cf4c <GUI__DoAlphaBlending+0x1c8>)
 800ce96:	f8dd 8040 	ldr.w	r8, [sp, #64]	; 0x40
 800ce9a:	f8d1 c000 	ldr.w	ip, [r1]
 800ce9e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800cea0:	ea4f 0a85 	mov.w	sl, r5, lsl #2
 800cea4:	f1bc 0f00 	cmp.w	ip, #0
 800cea8:	d023      	beq.n	800cef2 <GUI__DoAlphaBlending+0x16e>
 800ceaa:	4451      	add	r1, sl
 800ceac:	eb08 020a 	add.w	r2, r8, sl
 800ceb0:	910f      	str	r1, [sp, #60]	; 0x3c
 800ceb2:	9210      	str	r2, [sp, #64]	; 0x40
 800ceb4:	4623      	mov	r3, r4
 800ceb6:	4638      	mov	r0, r7
 800ceb8:	47e0      	blx	ip
 800ceba:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800cebc:	9910      	ldr	r1, [sp, #64]	; 0x40
 800cebe:	2300      	movs	r3, #0
 800cec0:	58fd      	ldr	r5, [r7, r3]
 800cec2:	f005 407f 	and.w	r0, r5, #4278190080	; 0xff000000
 800cec6:	f1b0 4f7f 	cmp.w	r0, #4278190080	; 0xff000000
 800ceca:	58d0      	ldr	r0, [r2, r3]
 800cecc:	d101      	bne.n	800ced2 <GUI__DoAlphaBlending+0x14e>
 800cece:	50c8      	str	r0, [r1, r3]
 800ced0:	e005      	b.n	800cede <GUI__DoAlphaBlending+0x15a>
 800ced2:	f000 407f 	and.w	r0, r0, #4278190080	; 0xff000000
 800ced6:	f1b0 4f7f 	cmp.w	r0, #4278190080	; 0xff000000
 800ceda:	bf08      	it	eq
 800cedc:	50cd      	streq	r5, [r1, r3]
 800cede:	3304      	adds	r3, #4
 800cee0:	3c01      	subs	r4, #1
 800cee2:	d1ed      	bne.n	800cec0 <GUI__DoAlphaBlending+0x13c>
 800cee4:	6832      	ldr	r2, [r6, #0]
 800cee6:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 800ceea:	f042 0101 	orr.w	r1, r2, #1
 800ceee:	6031      	str	r1, [r6, #0]
 800cef0:	e01e      	b.n	800cf30 <GUI__DoAlphaBlending+0x1ac>
 800cef2:	9f08      	ldr	r7, [sp, #32]
 800cef4:	2fff      	cmp	r7, #255	; 0xff
 800cef6:	d104      	bne.n	800cf02 <GUI__DoAlphaBlending+0x17e>
 800cef8:	f851 700a 	ldr.w	r7, [r1, sl]
 800cefc:	f848 700a 	str.w	r7, [r8, sl]
 800cf00:	e011      	b.n	800cf26 <GUI__DoAlphaBlending+0x1a2>
 800cf02:	9808      	ldr	r0, [sp, #32]
 800cf04:	f851 100a 	ldr.w	r1, [r1, sl]
 800cf08:	43c2      	mvns	r2, r0
 800cf0a:	b2d2      	uxtb	r2, r2
 800cf0c:	4648      	mov	r0, r9
 800cf0e:	f7ff fe81 	bl	800cc14 <GUI__MixColors>
 800cf12:	f848 000a 	str.w	r0, [r8, sl]
 800cf16:	e002      	b.n	800cf1e <GUI__DoAlphaBlending+0x19a>
 800cf18:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800cf1a:	f847 9025 	str.w	r9, [r7, r5, lsl #2]
 800cf1e:	6833      	ldr	r3, [r6, #0]
 800cf20:	f043 0101 	orr.w	r1, r3, #1
 800cf24:	6031      	str	r1, [r6, #0]
 800cf26:	3501      	adds	r5, #1
 800cf28:	3c01      	subs	r4, #1
 800cf2a:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800cf2c:	f47f af62 	bne.w	800cdf4 <GUI__DoAlphaBlending+0x70>
 800cf30:	9810      	ldr	r0, [sp, #64]	; 0x40
 800cf32:	e000      	b.n	800cf36 <GUI__DoAlphaBlending+0x1b2>
 800cf34:	4620      	mov	r0, r4
 800cf36:	b013      	add	sp, #76	; 0x4c
 800cf38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cf3c:	20000270 	.word	0x20000270
 800cf40:	2000dde0 	.word	0x2000dde0
 800cf44:	0800ee9b 	.word	0x0800ee9b
 800cf48:	0800ee99 	.word	0x0800ee99
 800cf4c:	2000d814 	.word	0x2000d814

0800cf50 <GUI__AllocAlphaBuffer>:
 800cf50:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800cf52:	b108      	cbz	r0, 800cf58 <GUI__AllocAlphaBuffer+0x8>
 800cf54:	aa03      	add	r2, sp, #12
 800cf56:	e000      	b.n	800cf5a <GUI__AllocAlphaBuffer+0xa>
 800cf58:	4602      	mov	r2, r0
 800cf5a:	a801      	add	r0, sp, #4
 800cf5c:	a902      	add	r1, sp, #8
 800cf5e:	2300      	movs	r3, #0
 800cf60:	f7ff fea8 	bl	800ccb4 <GUI__GetAlphaBuffer>
 800cf64:	b005      	add	sp, #20
 800cf66:	bd00      	pop	{pc}

0800cf68 <GUI_SignalEvent>:
 800cf68:	b508      	push	{r3, lr}
 800cf6a:	4b02      	ldr	r3, [pc, #8]	; (800cf74 <GUI_SignalEvent+0xc>)
 800cf6c:	6818      	ldr	r0, [r3, #0]
 800cf6e:	b100      	cbz	r0, 800cf72 <GUI_SignalEvent+0xa>
 800cf70:	4780      	blx	r0
 800cf72:	bd08      	pop	{r3, pc}
 800cf74:	2000d824 	.word	0x2000d824

0800cf78 <_Unlink>:
 800cf78:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cf7a:	4605      	mov	r5, r0
 800cf7c:	b1f0      	cbz	r0, 800cfbc <_Unlink+0x44>
 800cf7e:	f001 fca7 	bl	800e8d0 <GUI_ALLOC_LockH>
 800cf82:	4b0f      	ldr	r3, [pc, #60]	; (800cfc0 <_Unlink+0x48>)
 800cf84:	9000      	str	r0, [sp, #0]
 800cf86:	681c      	ldr	r4, [r3, #0]
 800cf88:	42ac      	cmp	r4, r5
 800cf8a:	d104      	bne.n	800cf96 <_Unlink+0x1e>
 800cf8c:	6840      	ldr	r0, [r0, #4]
 800cf8e:	6018      	str	r0, [r3, #0]
 800cf90:	e011      	b.n	800cfb6 <_Unlink+0x3e>
 800cf92:	f001 fcab 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800cf96:	b174      	cbz	r4, 800cfb6 <_Unlink+0x3e>
 800cf98:	4620      	mov	r0, r4
 800cf9a:	f001 fc99 	bl	800e8d0 <GUI_ALLOC_LockH>
 800cf9e:	4601      	mov	r1, r0
 800cfa0:	a802      	add	r0, sp, #8
 800cfa2:	684c      	ldr	r4, [r1, #4]
 800cfa4:	f840 1d04 	str.w	r1, [r0, #-4]!
 800cfa8:	42ac      	cmp	r4, r5
 800cfaa:	d1f2      	bne.n	800cf92 <_Unlink+0x1a>
 800cfac:	9a00      	ldr	r2, [sp, #0]
 800cfae:	6853      	ldr	r3, [r2, #4]
 800cfb0:	604b      	str	r3, [r1, #4]
 800cfb2:	f001 fc9b 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800cfb6:	4668      	mov	r0, sp
 800cfb8:	f001 fc98 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800cfbc:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 800cfbe:	bf00      	nop
 800cfc0:	2000d82c 	.word	0x2000d82c

0800cfc4 <GUI_TIMER__GetFirstTimer>:
 800cfc4:	2300      	movs	r3, #0
 800cfc6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cfc8:	6003      	str	r3, [r0, #0]
 800cfca:	4605      	mov	r5, r0
 800cfcc:	4807      	ldr	r0, [pc, #28]	; (800cfec <GUI_TIMER__GetFirstTimer+0x28>)
 800cfce:	6804      	ldr	r4, [r0, #0]
 800cfd0:	b154      	cbz	r4, 800cfe8 <GUI_TIMER__GetFirstTimer+0x24>
 800cfd2:	4620      	mov	r0, r4
 800cfd4:	f001 fc7c 	bl	800e8d0 <GUI_ALLOC_LockH>
 800cfd8:	a902      	add	r1, sp, #8
 800cfda:	6902      	ldr	r2, [r0, #16]
 800cfdc:	f841 0d04 	str.w	r0, [r1, #-4]!
 800cfe0:	602a      	str	r2, [r5, #0]
 800cfe2:	4608      	mov	r0, r1
 800cfe4:	f001 fc82 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800cfe8:	4620      	mov	r0, r4
 800cfea:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 800cfec:	2000d828 	.word	0x2000d828

0800cff0 <GUI_TIMER__GetNextTimerLin>:
 800cff0:	2300      	movs	r3, #0
 800cff2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cff4:	600b      	str	r3, [r1, #0]
 800cff6:	460d      	mov	r5, r1
 800cff8:	4604      	mov	r4, r0
 800cffa:	b180      	cbz	r0, 800d01e <GUI_TIMER__GetNextTimerLin+0x2e>
 800cffc:	f001 fc68 	bl	800e8d0 <GUI_ALLOC_LockH>
 800d000:	6884      	ldr	r4, [r0, #8]
 800d002:	9001      	str	r0, [sp, #4]
 800d004:	b144      	cbz	r4, 800d018 <GUI_TIMER__GetNextTimerLin+0x28>
 800d006:	a801      	add	r0, sp, #4
 800d008:	f001 fc70 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800d00c:	4620      	mov	r0, r4
 800d00e:	f001 fc5f 	bl	800e8d0 <GUI_ALLOC_LockH>
 800d012:	9001      	str	r0, [sp, #4]
 800d014:	6900      	ldr	r0, [r0, #16]
 800d016:	6028      	str	r0, [r5, #0]
 800d018:	a801      	add	r0, sp, #4
 800d01a:	f001 fc67 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800d01e:	4620      	mov	r0, r4
 800d020:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
	...

0800d024 <GUI_TIMER_Delete>:
 800d024:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d026:	4604      	mov	r4, r0
 800d028:	b348      	cbz	r0, 800d07e <GUI_TIMER_Delete+0x5a>
 800d02a:	4e15      	ldr	r6, [pc, #84]	; (800d080 <GUI_TIMER_Delete+0x5c>)
 800d02c:	6835      	ldr	r5, [r6, #0]
 800d02e:	4285      	cmp	r5, r0
 800d030:	d10b      	bne.n	800d04a <GUI_TIMER_Delete+0x26>
 800d032:	f001 fc4d 	bl	800e8d0 <GUI_ALLOC_LockH>
 800d036:	a902      	add	r1, sp, #8
 800d038:	f841 0d04 	str.w	r0, [r1, #-4]!
 800d03c:	6880      	ldr	r0, [r0, #8]
 800d03e:	6030      	str	r0, [r6, #0]
 800d040:	4608      	mov	r0, r1
 800d042:	e014      	b.n	800d06e <GUI_TIMER_Delete+0x4a>
 800d044:	4668      	mov	r0, sp
 800d046:	f001 fc51 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800d04a:	4628      	mov	r0, r5
 800d04c:	f001 fc40 	bl	800e8d0 <GUI_ALLOC_LockH>
 800d050:	6885      	ldr	r5, [r0, #8]
 800d052:	9000      	str	r0, [sp, #0]
 800d054:	42a5      	cmp	r5, r4
 800d056:	d1f5      	bne.n	800d044 <GUI_TIMER_Delete+0x20>
 800d058:	4620      	mov	r0, r4
 800d05a:	f001 fc39 	bl	800e8d0 <GUI_ALLOC_LockH>
 800d05e:	9b00      	ldr	r3, [sp, #0]
 800d060:	6882      	ldr	r2, [r0, #8]
 800d062:	9001      	str	r0, [sp, #4]
 800d064:	609a      	str	r2, [r3, #8]
 800d066:	a801      	add	r0, sp, #4
 800d068:	f001 fc40 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800d06c:	4668      	mov	r0, sp
 800d06e:	f001 fc3d 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800d072:	4620      	mov	r0, r4
 800d074:	f7ff ff80 	bl	800cf78 <_Unlink>
 800d078:	4620      	mov	r0, r4
 800d07a:	f001 fc63 	bl	800e944 <GUI_ALLOC_Free>
 800d07e:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
 800d080:	2000d828 	.word	0x2000d828

0800d084 <GUI_TIMER_GetFlag>:
 800d084:	b513      	push	{r0, r1, r4, lr}
 800d086:	460c      	mov	r4, r1
 800d088:	b168      	cbz	r0, 800d0a6 <GUI_TIMER_GetFlag+0x22>
 800d08a:	f001 fc21 	bl	800e8d0 <GUI_ALLOC_LockH>
 800d08e:	ab02      	add	r3, sp, #8
 800d090:	8982      	ldrh	r2, [r0, #12]
 800d092:	f843 0d04 	str.w	r0, [r3, #-4]!
 800d096:	4214      	tst	r4, r2
 800d098:	4618      	mov	r0, r3
 800d09a:	bf0c      	ite	eq
 800d09c:	2400      	moveq	r4, #0
 800d09e:	2401      	movne	r4, #1
 800d0a0:	f001 fc24 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800d0a4:	e000      	b.n	800d0a8 <GUI_TIMER_GetFlag+0x24>
 800d0a6:	2401      	movs	r4, #1
 800d0a8:	4620      	mov	r0, r4
 800d0aa:	bd1c      	pop	{r2, r3, r4, pc}

0800d0ac <GUI_TOUCH_StoreStateEx>:
 800d0ac:	b538      	push	{r3, r4, r5, lr}
 800d0ae:	4d08      	ldr	r5, [pc, #32]	; (800d0d0 <GUI_TOUCH_StoreStateEx+0x24>)
 800d0b0:	220c      	movs	r2, #12
 800d0b2:	4629      	mov	r1, r5
 800d0b4:	4604      	mov	r4, r0
 800d0b6:	f006 fc21 	bl	80138fc <memcmp>
 800d0ba:	b140      	cbz	r0, 800d0ce <GUI_TOUCH_StoreStateEx+0x22>
 800d0bc:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 800d0c0:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 800d0c4:	4620      	mov	r0, r4
 800d0c6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d0ca:	f000 b911 	b.w	800d2f0 <GUI_PID_StoreState>
 800d0ce:	bd38      	pop	{r3, r4, r5, pc}
 800d0d0:	2000d830 	.word	0x2000d830

0800d0d4 <GUI_SetTextMode>:
 800d0d4:	4b03      	ldr	r3, [pc, #12]	; (800d0e4 <GUI_SetTextMode+0x10>)
 800d0d6:	6819      	ldr	r1, [r3, #0]
 800d0d8:	f9b1 202a 	ldrsh.w	r2, [r1, #42]	; 0x2a
 800d0dc:	8548      	strh	r0, [r1, #42]	; 0x2a
 800d0de:	4610      	mov	r0, r2
 800d0e0:	4770      	bx	lr
 800d0e2:	bf00      	nop
 800d0e4:	20000270 	.word	0x20000270

0800d0e8 <GUI_SetFont>:
 800d0e8:	4b03      	ldr	r3, [pc, #12]	; (800d0f8 <GUI_SetFont+0x10>)
 800d0ea:	681a      	ldr	r2, [r3, #0]
 800d0ec:	69d1      	ldr	r1, [r2, #28]
 800d0ee:	b100      	cbz	r0, 800d0f2 <GUI_SetFont+0xa>
 800d0f0:	61d0      	str	r0, [r2, #28]
 800d0f2:	4608      	mov	r0, r1
 800d0f4:	4770      	bx	lr
 800d0f6:	bf00      	nop
 800d0f8:	20000270 	.word	0x20000270

0800d0fc <GUI_SetDrawMode>:
 800d0fc:	f7fe bf06 	b.w	800bf0c <LCD_SetDrawMode>

0800d100 <GL_SetDefault>:
 800d100:	b508      	push	{r3, lr}
 800d102:	2000      	movs	r0, #0
 800d104:	f000 f81c 	bl	800d140 <GUI_SetBkColor>
 800d108:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 800d10c:	f000 f81a 	bl	800d144 <GUI_SetColor>
 800d110:	2001      	movs	r0, #1
 800d112:	f000 f8b9 	bl	800d288 <GUI_SetPenSize>
 800d116:	2000      	movs	r0, #0
 800d118:	f005 fc96 	bl	8012a48 <GUI_SetTextAlign>
 800d11c:	2000      	movs	r0, #0
 800d11e:	f7ff ffd9 	bl	800d0d4 <GUI_SetTextMode>
 800d122:	2000      	movs	r0, #0
 800d124:	f7ff ffea 	bl	800d0fc <GUI_SetDrawMode>
 800d128:	4b04      	ldr	r3, [pc, #16]	; (800d13c <GL_SetDefault+0x3c>)
 800d12a:	6818      	ldr	r0, [r3, #0]
 800d12c:	f7ff ffdc 	bl	800d0e8 <GUI_SetFont>
 800d130:	2000      	movs	r0, #0
 800d132:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800d136:	f005 bcab 	b.w	8012a90 <GUI_SetLineStyle>
 800d13a:	bf00      	nop
 800d13c:	20000274 	.word	0x20000274

0800d140 <GUI_SetBkColor>:
 800d140:	f7ff ba2e 	b.w	800c5a0 <LCD_SetBkColor>

0800d144 <GUI_SetColor>:
 800d144:	f7ff ba34 	b.w	800c5b0 <LCD_SetColor>

0800d148 <GUI__AlphaSuppressMixing>:
 800d148:	4b07      	ldr	r3, [pc, #28]	; (800d168 <GUI__AlphaSuppressMixing+0x20>)
 800d14a:	b510      	push	{r4, lr}
 800d14c:	681c      	ldr	r4, [r3, #0]
 800d14e:	b120      	cbz	r0, 800d15a <GUI__AlphaSuppressMixing+0x12>
 800d150:	2201      	movs	r2, #1
 800d152:	601a      	str	r2, [r3, #0]
 800d154:	f04f 30ff 	mov.w	r0, #4294967295
 800d158:	e002      	b.n	800d160 <GUI__AlphaSuppressMixing+0x18>
 800d15a:	6018      	str	r0, [r3, #0]
 800d15c:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 800d160:	f004 ffb2 	bl	80120c8 <LCD_AA_SetAndMask>
 800d164:	4620      	mov	r0, r4
 800d166:	bd10      	pop	{r4, pc}
 800d168:	2000d83c 	.word	0x2000d83c

0800d16c <GUI_GetCursorLayer>:
 800d16c:	2801      	cmp	r0, #1
 800d16e:	d803      	bhi.n	800d178 <GUI_GetCursorLayer+0xc>
 800d170:	4b02      	ldr	r3, [pc, #8]	; (800d17c <GUI_GetCursorLayer+0x10>)
 800d172:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800d176:	4770      	bx	lr
 800d178:	2000      	movs	r0, #0
 800d17a:	4770      	bx	lr
 800d17c:	2000d840 	.word	0x2000d840

0800d180 <GUI_GetLayerPosEx>:
 800d180:	b538      	push	{r3, r4, r5, lr}
 800d182:	460d      	mov	r5, r1
 800d184:	4614      	mov	r4, r2
 800d186:	f7fe fdc3 	bl	800bd10 <LCD_GetPosEx>
 800d18a:	b110      	cbz	r0, 800d192 <GUI_GetLayerPosEx+0x12>
 800d18c:	2300      	movs	r3, #0
 800d18e:	602b      	str	r3, [r5, #0]
 800d190:	6023      	str	r3, [r4, #0]
 800d192:	bd38      	pop	{r3, r4, r5, pc}

0800d194 <GUI_SelectLayer>:
 800d194:	b538      	push	{r3, r4, r5, lr}
 800d196:	4b06      	ldr	r3, [pc, #24]	; (800d1b0 <GUI_SelectLayer+0x1c>)
 800d198:	4604      	mov	r4, r0
 800d19a:	6818      	ldr	r0, [r3, #0]
 800d19c:	2c01      	cmp	r4, #1
 800d19e:	7c45      	ldrb	r5, [r0, #17]
 800d1a0:	d802      	bhi.n	800d1a8 <GUI_SelectLayer+0x14>
 800d1a2:	7444      	strb	r4, [r0, #17]
 800d1a4:	f000 f80a 	bl	800d1bc <GUI_SelectLCD>
 800d1a8:	4902      	ldr	r1, [pc, #8]	; (800d1b4 <GUI_SelectLayer+0x20>)
 800d1aa:	4628      	mov	r0, r5
 800d1ac:	600c      	str	r4, [r1, #0]
 800d1ae:	bd38      	pop	{r3, r4, r5, pc}
 800d1b0:	20000270 	.word	0x20000270
 800d1b4:	2000dd90 	.word	0x2000dd90

0800d1b8 <GUI_SetLayerPosEx>:
 800d1b8:	f7fe bd7c 	b.w	800bcb4 <LCD_SetPosEx>

0800d1bc <GUI_SelectLCD>:
 800d1bc:	b508      	push	{r3, lr}
 800d1be:	f004 fdbb 	bl	8011d38 <LCD_SelectLCD>
 800d1c2:	f7fe fd1f 	bl	800bc04 <LCD_UpdateColorIndices>
 800d1c6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800d1ca:	f7fc bbff 	b.w	80099cc <WM_Activate>
	...

0800d1d0 <GUI_SaveContext_W>:
 800d1d0:	b508      	push	{r3, lr}
 800d1d2:	4b03      	ldr	r3, [pc, #12]	; (800d1e0 <GUI_SaveContext_W+0x10>)
 800d1d4:	2270      	movs	r2, #112	; 0x70
 800d1d6:	6819      	ldr	r1, [r3, #0]
 800d1d8:	f7f2 ffd6 	bl	8000188 <memcpy>
 800d1dc:	bd08      	pop	{r3, pc}
 800d1de:	bf00      	nop
 800d1e0:	20000270 	.word	0x20000270

0800d1e4 <GUI_RestoreContext>:
 800d1e4:	b508      	push	{r3, lr}
 800d1e6:	4b03      	ldr	r3, [pc, #12]	; (800d1f4 <GUI_RestoreContext+0x10>)
 800d1e8:	4601      	mov	r1, r0
 800d1ea:	2270      	movs	r2, #112	; 0x70
 800d1ec:	6818      	ldr	r0, [r3, #0]
 800d1ee:	f7f2 ffcb 	bl	8000188 <memcpy>
 800d1f2:	bd08      	pop	{r3, pc}
 800d1f4:	20000270 	.word	0x20000270

0800d1f8 <GUI_RectsIntersect>:
 800d1f8:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800d1fc:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800d200:	429a      	cmp	r2, r3
 800d202:	dc14      	bgt.n	800d22e <GUI_RectsIntersect+0x36>
 800d204:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800d208:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800d20c:	429a      	cmp	r2, r3
 800d20e:	dc0e      	bgt.n	800d22e <GUI_RectsIntersect+0x36>
 800d210:	f9b0 2000 	ldrsh.w	r2, [r0]
 800d214:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800d218:	429a      	cmp	r2, r3
 800d21a:	dc08      	bgt.n	800d22e <GUI_RectsIntersect+0x36>
 800d21c:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800d220:	f9b1 1000 	ldrsh.w	r1, [r1]
 800d224:	4291      	cmp	r1, r2
 800d226:	bfcc      	ite	gt
 800d228:	2000      	movgt	r0, #0
 800d22a:	2001      	movle	r0, #1
 800d22c:	4770      	bx	lr
 800d22e:	2000      	movs	r0, #0
 800d230:	4770      	bx	lr

0800d232 <GUI_ALLOC_Realloc>:
 800d232:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d234:	4604      	mov	r4, r0
 800d236:	4608      	mov	r0, r1
 800d238:	460e      	mov	r6, r1
 800d23a:	f001 fd97 	bl	800ed6c <GUI_ALLOC_AllocNoInit>
 800d23e:	4605      	mov	r5, r0
 800d240:	b1f8      	cbz	r0, 800d282 <GUI_ALLOC_Realloc+0x50>
 800d242:	b1f4      	cbz	r4, 800d282 <GUI_ALLOC_Realloc+0x50>
 800d244:	4620      	mov	r0, r4
 800d246:	f001 fb71 	bl	800e92c <GUI_ALLOC_GetSize>
 800d24a:	42b0      	cmp	r0, r6
 800d24c:	bfb4      	ite	lt
 800d24e:	4607      	movlt	r7, r0
 800d250:	4637      	movge	r7, r6
 800d252:	4628      	mov	r0, r5
 800d254:	f001 fb3c 	bl	800e8d0 <GUI_ALLOC_LockH>
 800d258:	9000      	str	r0, [sp, #0]
 800d25a:	4620      	mov	r0, r4
 800d25c:	f001 fb38 	bl	800e8d0 <GUI_ALLOC_LockH>
 800d260:	ae02      	add	r6, sp, #8
 800d262:	4601      	mov	r1, r0
 800d264:	463a      	mov	r2, r7
 800d266:	9001      	str	r0, [sp, #4]
 800d268:	f856 0d08 	ldr.w	r0, [r6, #-8]!
 800d26c:	f7f2 ff8c 	bl	8000188 <memcpy>
 800d270:	4668      	mov	r0, sp
 800d272:	f001 fb3b 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800d276:	a801      	add	r0, sp, #4
 800d278:	f001 fb38 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800d27c:	4620      	mov	r0, r4
 800d27e:	f001 fb61 	bl	800e944 <GUI_ALLOC_Free>
 800d282:	4628      	mov	r0, r5
 800d284:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
	...

0800d288 <GUI_SetPenSize>:
 800d288:	4b02      	ldr	r3, [pc, #8]	; (800d294 <GUI_SetPenSize+0xc>)
 800d28a:	6819      	ldr	r1, [r3, #0]
 800d28c:	7e0a      	ldrb	r2, [r1, #24]
 800d28e:	7608      	strb	r0, [r1, #24]
 800d290:	4610      	mov	r0, r2
 800d292:	4770      	bx	lr
 800d294:	20000270 	.word	0x20000270

0800d298 <GUI_PID_GetState>:
 800d298:	4a12      	ldr	r2, [pc, #72]	; (800d2e4 <GUI_PID_GetState+0x4c>)
 800d29a:	4913      	ldr	r1, [pc, #76]	; (800d2e8 <GUI_PID_GetState+0x50>)
 800d29c:	6813      	ldr	r3, [r2, #0]
 800d29e:	b570      	push	{r4, r5, r6, lr}
 800d2a0:	4604      	mov	r4, r0
 800d2a2:	6808      	ldr	r0, [r1, #0]
 800d2a4:	4d11      	ldr	r5, [pc, #68]	; (800d2ec <GUI_PID_GetState+0x54>)
 800d2a6:	4283      	cmp	r3, r0
 800d2a8:	4616      	mov	r6, r2
 800d2aa:	d10a      	bne.n	800d2c2 <GUI_PID_GetState+0x2a>
 800d2ac:	42ab      	cmp	r3, r5
 800d2ae:	d103      	bne.n	800d2b8 <GUI_PID_GetState+0x20>
 800d2b0:	333c      	adds	r3, #60	; 0x3c
 800d2b2:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800d2b6:	e001      	b.n	800d2bc <GUI_PID_GetState+0x24>
 800d2b8:	e913 0007 	ldmdb	r3, {r0, r1, r2}
 800d2bc:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800d2c0:	e00a      	b.n	800d2d8 <GUI_PID_GetState+0x40>
 800d2c2:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800d2c6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800d2ca:	f105 023c 	add.w	r2, r5, #60	; 0x3c
 800d2ce:	4293      	cmp	r3, r2
 800d2d0:	bf18      	it	ne
 800d2d2:	f103 050c 	addne.w	r5, r3, #12
 800d2d6:	6035      	str	r5, [r6, #0]
 800d2d8:	7a23      	ldrb	r3, [r4, #8]
 800d2da:	1c18      	adds	r0, r3, #0
 800d2dc:	bf18      	it	ne
 800d2de:	2001      	movne	r0, #1
 800d2e0:	bd70      	pop	{r4, r5, r6, pc}
 800d2e2:	bf00      	nop
 800d2e4:	20000264 	.word	0x20000264
 800d2e8:	20000260 	.word	0x20000260
 800d2ec:	2000d848 	.word	0x2000d848

0800d2f0 <GUI_PID_StoreState>:
 800d2f0:	b570      	push	{r4, r5, r6, lr}
 800d2f2:	4b20      	ldr	r3, [pc, #128]	; (800d374 <GUI_PID_StoreState+0x84>)
 800d2f4:	4a20      	ldr	r2, [pc, #128]	; (800d378 <GUI_PID_StoreState+0x88>)
 800d2f6:	4921      	ldr	r1, [pc, #132]	; (800d37c <GUI_PID_StoreState+0x8c>)
 800d2f8:	4d21      	ldr	r5, [pc, #132]	; (800d380 <GUI_PID_StoreState+0x90>)
 800d2fa:	601a      	str	r2, [r3, #0]
 800d2fc:	680c      	ldr	r4, [r1, #0]
 800d2fe:	682b      	ldr	r3, [r5, #0]
 800d300:	429c      	cmp	r4, r3
 800d302:	d01d      	beq.n	800d340 <GUI_PID_StoreState+0x50>
 800d304:	4a1f      	ldr	r2, [pc, #124]	; (800d384 <GUI_PID_StoreState+0x94>)
 800d306:	7a01      	ldrb	r1, [r0, #8]
 800d308:	4293      	cmp	r3, r2
 800d30a:	4615      	mov	r5, r2
 800d30c:	bf14      	ite	ne
 800d30e:	f1a3 020c 	subne.w	r2, r3, #12
 800d312:	f103 023c 	addeq.w	r2, r3, #60	; 0x3c
 800d316:	7a16      	ldrb	r6, [r2, #8]
 800d318:	428e      	cmp	r6, r1
 800d31a:	d111      	bne.n	800d340 <GUI_PID_StoreState+0x50>
 800d31c:	4294      	cmp	r4, r2
 800d31e:	d00f      	beq.n	800d340 <GUI_PID_StoreState+0x50>
 800d320:	42aa      	cmp	r2, r5
 800d322:	d001      	beq.n	800d328 <GUI_PID_StoreState+0x38>
 800d324:	3a0c      	subs	r2, #12
 800d326:	e000      	b.n	800d32a <GUI_PID_StoreState+0x3a>
 800d328:	4a17      	ldr	r2, [pc, #92]	; (800d388 <GUI_PID_StoreState+0x98>)
 800d32a:	7a15      	ldrb	r5, [r2, #8]
 800d32c:	428d      	cmp	r5, r1
 800d32e:	d107      	bne.n	800d340 <GUI_PID_StoreState+0x50>
 800d330:	4914      	ldr	r1, [pc, #80]	; (800d384 <GUI_PID_StoreState+0x94>)
 800d332:	428b      	cmp	r3, r1
 800d334:	d001      	beq.n	800d33a <GUI_PID_StoreState+0x4a>
 800d336:	3b0c      	subs	r3, #12
 800d338:	e000      	b.n	800d33c <GUI_PID_StoreState+0x4c>
 800d33a:	333c      	adds	r3, #60	; 0x3c
 800d33c:	4a10      	ldr	r2, [pc, #64]	; (800d380 <GUI_PID_StoreState+0x90>)
 800d33e:	6013      	str	r3, [r2, #0]
 800d340:	c807      	ldmia	r0, {r0, r1, r2}
 800d342:	4d0f      	ldr	r5, [pc, #60]	; (800d380 <GUI_PID_StoreState+0x90>)
 800d344:	682b      	ldr	r3, [r5, #0]
 800d346:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800d34a:	480f      	ldr	r0, [pc, #60]	; (800d388 <GUI_PID_StoreState+0x98>)
 800d34c:	4283      	cmp	r3, r0
 800d34e:	d001      	beq.n	800d354 <GUI_PID_StoreState+0x64>
 800d350:	330c      	adds	r3, #12
 800d352:	e000      	b.n	800d356 <GUI_PID_StoreState+0x66>
 800d354:	4b0b      	ldr	r3, [pc, #44]	; (800d384 <GUI_PID_StoreState+0x94>)
 800d356:	429c      	cmp	r4, r3
 800d358:	602b      	str	r3, [r5, #0]
 800d35a:	d106      	bne.n	800d36a <GUI_PID_StoreState+0x7a>
 800d35c:	4284      	cmp	r4, r0
 800d35e:	d001      	beq.n	800d364 <GUI_PID_StoreState+0x74>
 800d360:	340c      	adds	r4, #12
 800d362:	e000      	b.n	800d366 <GUI_PID_StoreState+0x76>
 800d364:	4c07      	ldr	r4, [pc, #28]	; (800d384 <GUI_PID_StoreState+0x94>)
 800d366:	4905      	ldr	r1, [pc, #20]	; (800d37c <GUI_PID_StoreState+0x8c>)
 800d368:	600c      	str	r4, [r1, #0]
 800d36a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d36e:	f7ff bdfb 	b.w	800cf68 <GUI_SignalEvent>
 800d372:	bf00      	nop
 800d374:	2000ddec 	.word	0x2000ddec
 800d378:	08010169 	.word	0x08010169
 800d37c:	20000264 	.word	0x20000264
 800d380:	20000260 	.word	0x20000260
 800d384:	2000d848 	.word	0x2000d848
 800d388:	2000d884 	.word	0x2000d884

0800d38c <GUI_PID_IsEmpty>:
 800d38c:	4b03      	ldr	r3, [pc, #12]	; (800d39c <GUI_PID_IsEmpty+0x10>)
 800d38e:	4904      	ldr	r1, [pc, #16]	; (800d3a0 <GUI_PID_IsEmpty+0x14>)
 800d390:	6818      	ldr	r0, [r3, #0]
 800d392:	680a      	ldr	r2, [r1, #0]
 800d394:	1a83      	subs	r3, r0, r2
 800d396:	4258      	negs	r0, r3
 800d398:	4158      	adcs	r0, r3
 800d39a:	4770      	bx	lr
 800d39c:	20000264 	.word	0x20000264
 800d3a0:	20000260 	.word	0x20000260

0800d3a4 <GUI_StoreKey>:
 800d3a4:	4b02      	ldr	r3, [pc, #8]	; (800d3b0 <GUI_StoreKey+0xc>)
 800d3a6:	681a      	ldr	r2, [r3, #0]
 800d3a8:	b902      	cbnz	r2, 800d3ac <GUI_StoreKey+0x8>
 800d3aa:	6018      	str	r0, [r3, #0]
 800d3ac:	f7ff bddc 	b.w	800cf68 <GUI_SignalEvent>
 800d3b0:	2000d890 	.word	0x2000d890

0800d3b4 <GUI_PollKeyMsg>:
 800d3b4:	4a0a      	ldr	r2, [pc, #40]	; (800d3e0 <GUI_PollKeyMsg+0x2c>)
 800d3b6:	490b      	ldr	r1, [pc, #44]	; (800d3e4 <GUI_PollKeyMsg+0x30>)
 800d3b8:	6813      	ldr	r3, [r2, #0]
 800d3ba:	6808      	ldr	r0, [r1, #0]
 800d3bc:	4283      	cmp	r3, r0
 800d3be:	b510      	push	{r4, lr}
 800d3c0:	d00c      	beq.n	800d3dc <GUI_PollKeyMsg+0x28>
 800d3c2:	4c09      	ldr	r4, [pc, #36]	; (800d3e8 <GUI_PollKeyMsg+0x34>)
 800d3c4:	42a3      	cmp	r3, r4
 800d3c6:	e893 0003 	ldmia.w	r3, {r0, r1}
 800d3ca:	d001      	beq.n	800d3d0 <GUI_PollKeyMsg+0x1c>
 800d3cc:	3308      	adds	r3, #8
 800d3ce:	e000      	b.n	800d3d2 <GUI_PollKeyMsg+0x1e>
 800d3d0:	4b06      	ldr	r3, [pc, #24]	; (800d3ec <GUI_PollKeyMsg+0x38>)
 800d3d2:	6013      	str	r3, [r2, #0]
 800d3d4:	f003 f924 	bl	8010620 <WM_OnKey>
 800d3d8:	2001      	movs	r0, #1
 800d3da:	bd10      	pop	{r4, pc}
 800d3dc:	2000      	movs	r0, #0
 800d3de:	bd10      	pop	{r4, pc}
 800d3e0:	2000026c 	.word	0x2000026c
 800d3e4:	20000268 	.word	0x20000268
 800d3e8:	2000d8e4 	.word	0x2000d8e4
 800d3ec:	2000d894 	.word	0x2000d894

0800d3f0 <GUI_MoveRect>:
 800d3f0:	b168      	cbz	r0, 800d40e <GUI_MoveRect+0x1e>
 800d3f2:	8803      	ldrh	r3, [r0, #0]
 800d3f4:	b289      	uxth	r1, r1
 800d3f6:	18cb      	adds	r3, r1, r3
 800d3f8:	8003      	strh	r3, [r0, #0]
 800d3fa:	8883      	ldrh	r3, [r0, #4]
 800d3fc:	18c9      	adds	r1, r1, r3
 800d3fe:	8843      	ldrh	r3, [r0, #2]
 800d400:	8081      	strh	r1, [r0, #4]
 800d402:	b292      	uxth	r2, r2
 800d404:	18d1      	adds	r1, r2, r3
 800d406:	88c3      	ldrh	r3, [r0, #6]
 800d408:	8041      	strh	r1, [r0, #2]
 800d40a:	18d2      	adds	r2, r2, r3
 800d40c:	80c2      	strh	r2, [r0, #6]
 800d40e:	4770      	bx	lr

0800d410 <GUI_MergeRect>:
 800d410:	b510      	push	{r4, lr}
 800d412:	b338      	cbz	r0, 800d464 <GUI_MergeRect+0x54>
 800d414:	b309      	cbz	r1, 800d45a <GUI_MergeRect+0x4a>
 800d416:	b30a      	cbz	r2, 800d45c <GUI_MergeRect+0x4c>
 800d418:	f9b1 4000 	ldrsh.w	r4, [r1]
 800d41c:	f9b2 3000 	ldrsh.w	r3, [r2]
 800d420:	429c      	cmp	r4, r3
 800d422:	bfb8      	it	lt
 800d424:	4623      	movlt	r3, r4
 800d426:	8003      	strh	r3, [r0, #0]
 800d428:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800d42c:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800d430:	429c      	cmp	r4, r3
 800d432:	bfb8      	it	lt
 800d434:	4623      	movlt	r3, r4
 800d436:	8043      	strh	r3, [r0, #2]
 800d438:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
 800d43c:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 800d440:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 800d444:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 800d448:	429c      	cmp	r4, r3
 800d44a:	bfa8      	it	ge
 800d44c:	4623      	movge	r3, r4
 800d44e:	4291      	cmp	r1, r2
 800d450:	bfa8      	it	ge
 800d452:	460a      	movge	r2, r1
 800d454:	8083      	strh	r3, [r0, #4]
 800d456:	80c2      	strh	r2, [r0, #6]
 800d458:	bd10      	pop	{r4, pc}
 800d45a:	4611      	mov	r1, r2
 800d45c:	680b      	ldr	r3, [r1, #0]
 800d45e:	6003      	str	r3, [r0, #0]
 800d460:	6849      	ldr	r1, [r1, #4]
 800d462:	6041      	str	r1, [r0, #4]
 800d464:	bd10      	pop	{r4, pc}
	...

0800d468 <GUI_GotoXY>:
 800d468:	4b02      	ldr	r3, [pc, #8]	; (800d474 <GUI_GotoXY+0xc>)
 800d46a:	681a      	ldr	r2, [r3, #0]
 800d46c:	8450      	strh	r0, [r2, #34]	; 0x22
 800d46e:	8491      	strh	r1, [r2, #36]	; 0x24
 800d470:	2000      	movs	r0, #0
 800d472:	4770      	bx	lr
 800d474:	20000270 	.word	0x20000270

0800d478 <GUI_GetYSizeOfFont>:
 800d478:	7e02      	ldrb	r2, [r0, #24]
 800d47a:	7ec0      	ldrb	r0, [r0, #27]
 800d47c:	4350      	muls	r0, r2
 800d47e:	4770      	bx	lr

0800d480 <GUI_GetStringDistX>:
 800d480:	b510      	push	{r4, lr}
 800d482:	4604      	mov	r4, r0
 800d484:	f004 ff0a 	bl	801229c <GUI__GetNumChars>
 800d488:	4601      	mov	r1, r0
 800d48a:	4620      	mov	r0, r4
 800d48c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d490:	f001 b87a 	b.w	800e588 <GUI__GetLineDistX>

0800d494 <GUI_GetOrg>:
 800d494:	4b04      	ldr	r3, [pc, #16]	; (800d4a8 <GUI_GetOrg+0x14>)
 800d496:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d49a:	6002      	str	r2, [r0, #0]
 800d49c:	4803      	ldr	r0, [pc, #12]	; (800d4ac <GUI_GetOrg+0x18>)
 800d49e:	f9b0 3000 	ldrsh.w	r3, [r0]
 800d4a2:	600b      	str	r3, [r1, #0]
 800d4a4:	4770      	bx	lr
 800d4a6:	bf00      	nop
 800d4a8:	2000ddd0 	.word	0x2000ddd0
 800d4ac:	2000ddc8 	.word	0x2000ddc8

0800d4b0 <GUI_GetFontSizeY>:
 800d4b0:	f004 bf02 	b.w	80122b8 <GUI__GetFontSizeY>

0800d4b4 <GUI_GetClientRect>:
 800d4b4:	b108      	cbz	r0, 800d4ba <GUI_GetClientRect+0x6>
 800d4b6:	f7fb b981 	b.w	80087bc <WM_GetClientRect>
 800d4ba:	4770      	bx	lr

0800d4bc <GUI_FillRectEx>:
 800d4bc:	4603      	mov	r3, r0
 800d4be:	f9b0 0000 	ldrsh.w	r0, [r0]
 800d4c2:	f9b3 1002 	ldrsh.w	r1, [r3, #2]
 800d4c6:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 800d4ca:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800d4ce:	f000 b801 	b.w	800d4d4 <GUI_FillRect>
	...

0800d4d4 <GUI_FillRect>:
 800d4d4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d4d6:	4c0f      	ldr	r4, [pc, #60]	; (800d514 <GUI_FillRect+0x40>)
 800d4d8:	6826      	ldr	r6, [r4, #0]
 800d4da:	6cf5      	ldr	r5, [r6, #76]	; 0x4c
 800d4dc:	1947      	adds	r7, r0, r5
 800d4de:	6d30      	ldr	r0, [r6, #80]	; 0x50
 800d4e0:	f8ad 7000 	strh.w	r7, [sp]
 800d4e4:	180e      	adds	r6, r1, r0
 800d4e6:	181c      	adds	r4, r3, r0
 800d4e8:	1955      	adds	r5, r2, r5
 800d4ea:	4668      	mov	r0, sp
 800d4ec:	f8ad 5004 	strh.w	r5, [sp, #4]
 800d4f0:	f8ad 6002 	strh.w	r6, [sp, #2]
 800d4f4:	f8ad 4006 	strh.w	r4, [sp, #6]
 800d4f8:	f7fc f890 	bl	800961c <WM__InitIVRSearch>
 800d4fc:	b140      	cbz	r0, 800d510 <GUI_FillRect+0x3c>
 800d4fe:	4638      	mov	r0, r7
 800d500:	4631      	mov	r1, r6
 800d502:	462a      	mov	r2, r5
 800d504:	4623      	mov	r3, r4
 800d506:	f7fe fd83 	bl	800c010 <LCD_FillRect>
 800d50a:	f7fb ffc7 	bl	800949c <WM__GetNextIVR>
 800d50e:	e7f5      	b.n	800d4fc <GUI_FillRect+0x28>
 800d510:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800d512:	bf00      	nop
 800d514:	20000270 	.word	0x20000270

0800d518 <GUI_Exec1>:
 800d518:	4b08      	ldr	r3, [pc, #32]	; (800d53c <GUI_Exec1+0x24>)
 800d51a:	6818      	ldr	r0, [r3, #0]
 800d51c:	b510      	push	{r4, lr}
 800d51e:	b120      	cbz	r0, 800d52a <GUI_Exec1+0x12>
 800d520:	4780      	blx	r0
 800d522:	1c04      	adds	r4, r0, #0
 800d524:	bf18      	it	ne
 800d526:	2401      	movne	r4, #1
 800d528:	e000      	b.n	800d52c <GUI_Exec1+0x14>
 800d52a:	4604      	mov	r4, r0
 800d52c:	f7fc f9a2 	bl	8009874 <WM_Exec>
 800d530:	2800      	cmp	r0, #0
 800d532:	bf0c      	ite	eq
 800d534:	4620      	moveq	r0, r4
 800d536:	2001      	movne	r0, #1
 800d538:	bd10      	pop	{r4, pc}
 800d53a:	bf00      	nop
 800d53c:	2000ddcc 	.word	0x2000ddcc

0800d540 <GUI_Exec>:
 800d540:	b510      	push	{r4, lr}
 800d542:	2400      	movs	r4, #0
 800d544:	f7ff ffe8 	bl	800d518 <GUI_Exec1>
 800d548:	b108      	cbz	r0, 800d54e <GUI_Exec+0xe>
 800d54a:	2401      	movs	r4, #1
 800d54c:	e7fa      	b.n	800d544 <GUI_Exec+0x4>
 800d54e:	4620      	mov	r0, r4
 800d550:	bd10      	pop	{r4, pc}
	...

0800d554 <GUI_DrawVLine>:
 800d554:	4b0e      	ldr	r3, [pc, #56]	; (800d590 <GUI_DrawVLine+0x3c>)
 800d556:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d558:	681c      	ldr	r4, [r3, #0]
 800d55a:	6ce6      	ldr	r6, [r4, #76]	; 0x4c
 800d55c:	1986      	adds	r6, r0, r6
 800d55e:	6d20      	ldr	r0, [r4, #80]	; 0x50
 800d560:	180d      	adds	r5, r1, r0
 800d562:	1814      	adds	r4, r2, r0
 800d564:	b2b1      	uxth	r1, r6
 800d566:	4668      	mov	r0, sp
 800d568:	f8ad 1000 	strh.w	r1, [sp]
 800d56c:	f8ad 1004 	strh.w	r1, [sp, #4]
 800d570:	f8ad 5002 	strh.w	r5, [sp, #2]
 800d574:	f8ad 4006 	strh.w	r4, [sp, #6]
 800d578:	f7fc f850 	bl	800961c <WM__InitIVRSearch>
 800d57c:	b138      	cbz	r0, 800d58e <GUI_DrawVLine+0x3a>
 800d57e:	4630      	mov	r0, r6
 800d580:	4629      	mov	r1, r5
 800d582:	4622      	mov	r2, r4
 800d584:	f7fe fd1e 	bl	800bfc4 <LCD_DrawVLine>
 800d588:	f7fb ff88 	bl	800949c <WM__GetNextIVR>
 800d58c:	e7f6      	b.n	800d57c <GUI_DrawVLine+0x28>
 800d58e:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
 800d590:	20000270 	.word	0x20000270

0800d594 <GUI_DrawPixel>:
 800d594:	4b0f      	ldr	r3, [pc, #60]	; (800d5d4 <GUI_DrawPixel+0x40>)
 800d596:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d598:	681a      	ldr	r2, [r3, #0]
 800d59a:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 800d59c:	6d14      	ldr	r4, [r2, #80]	; 0x50
 800d59e:	1945      	adds	r5, r0, r5
 800d5a0:	b2a8      	uxth	r0, r5
 800d5a2:	190c      	adds	r4, r1, r4
 800d5a4:	b2a1      	uxth	r1, r4
 800d5a6:	f8ad 0004 	strh.w	r0, [sp, #4]
 800d5aa:	f8ad 0000 	strh.w	r0, [sp]
 800d5ae:	4668      	mov	r0, sp
 800d5b0:	f8ad 1006 	strh.w	r1, [sp, #6]
 800d5b4:	f8ad 1002 	strh.w	r1, [sp, #2]
 800d5b8:	f7fc f830 	bl	800961c <WM__InitIVRSearch>
 800d5bc:	b148      	cbz	r0, 800d5d2 <GUI_DrawPixel+0x3e>
 800d5be:	4b05      	ldr	r3, [pc, #20]	; (800d5d4 <GUI_DrawPixel+0x40>)
 800d5c0:	681a      	ldr	r2, [r3, #0]
 800d5c2:	6e50      	ldr	r0, [r2, #100]	; 0x64
 800d5c4:	4621      	mov	r1, r4
 800d5c6:	6843      	ldr	r3, [r0, #4]
 800d5c8:	4628      	mov	r0, r5
 800d5ca:	4798      	blx	r3
 800d5cc:	f7fb ff66 	bl	800949c <WM__GetNextIVR>
 800d5d0:	e7f4      	b.n	800d5bc <GUI_DrawPixel+0x28>
 800d5d2:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 800d5d4:	20000270 	.word	0x20000270

0800d5d8 <GUI_DrawHLine>:
 800d5d8:	4b10      	ldr	r3, [pc, #64]	; (800d61c <GUI_DrawHLine+0x44>)
 800d5da:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d5dc:	681d      	ldr	r5, [r3, #0]
 800d5de:	6cec      	ldr	r4, [r5, #76]	; 0x4c
 800d5e0:	190e      	adds	r6, r1, r4
 800d5e2:	6d29      	ldr	r1, [r5, #80]	; 0x50
 800d5e4:	f8ad 6000 	strh.w	r6, [sp]
 800d5e8:	1845      	adds	r5, r0, r1
 800d5ea:	b2a8      	uxth	r0, r5
 800d5ec:	1914      	adds	r4, r2, r4
 800d5ee:	f8ad 0002 	strh.w	r0, [sp, #2]
 800d5f2:	f8ad 0006 	strh.w	r0, [sp, #6]
 800d5f6:	4668      	mov	r0, sp
 800d5f8:	f8ad 4004 	strh.w	r4, [sp, #4]
 800d5fc:	f7fc f80e 	bl	800961c <WM__InitIVRSearch>
 800d600:	b150      	cbz	r0, 800d618 <GUI_DrawHLine+0x40>
 800d602:	4a06      	ldr	r2, [pc, #24]	; (800d61c <GUI_DrawHLine+0x44>)
 800d604:	6813      	ldr	r3, [r2, #0]
 800d606:	6e59      	ldr	r1, [r3, #100]	; 0x64
 800d608:	4630      	mov	r0, r6
 800d60a:	680b      	ldr	r3, [r1, #0]
 800d60c:	4622      	mov	r2, r4
 800d60e:	4629      	mov	r1, r5
 800d610:	4798      	blx	r3
 800d612:	f7fb ff43 	bl	800949c <WM__GetNextIVR>
 800d616:	e7f3      	b.n	800d600 <GUI_DrawHLine+0x28>
 800d618:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
 800d61a:	bf00      	nop
 800d61c:	20000270 	.word	0x20000270

0800d620 <_DrawGradient>:
 800d620:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d624:	b091      	sub	sp, #68	; 0x44
 800d626:	4688      	mov	r8, r1
 800d628:	4614      	mov	r4, r2
 800d62a:	991c      	ldr	r1, [sp, #112]	; 0x70
 800d62c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800d62e:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800d630:	f8dd a06c 	ldr.w	sl, [sp, #108]	; 0x6c
 800d634:	9102      	str	r1, [sp, #8]
 800d636:	4605      	mov	r5, r0
 800d638:	461e      	mov	r6, r3
 800d63a:	9201      	str	r2, [sp, #4]
 800d63c:	f005 fa4b 	bl	8012ad6 <GUI_GetColor>
 800d640:	4557      	cmp	r7, sl
 800d642:	900b      	str	r0, [sp, #44]	; 0x2c
 800d644:	d109      	bne.n	800d65a <_DrawGradient+0x3a>
 800d646:	4638      	mov	r0, r7
 800d648:	f7fe ffb2 	bl	800c5b0 <LCD_SetColor>
 800d64c:	9901      	ldr	r1, [sp, #4]
 800d64e:	b111      	cbz	r1, 800d656 <_DrawGradient+0x36>
 800d650:	4628      	mov	r0, r5
 800d652:	4641      	mov	r1, r8
 800d654:	e0b6      	b.n	800d7c4 <_DrawGradient+0x1a4>
 800d656:	4640      	mov	r0, r8
 800d658:	e0ba      	b.n	800d7d0 <_DrawGradient+0x1b0>
 800d65a:	fa5f fc87 	uxtb.w	ip, r7
 800d65e:	f3c7 2907 	ubfx	r9, r7, #8, #8
 800d662:	f8cd c01c 	str.w	ip, [sp, #28]
 800d666:	f3c7 4e07 	ubfx	lr, r7, #16, #8
 800d66a:	ea4f 6c17 	mov.w	ip, r7, lsr #24
 800d66e:	f8cd 9020 	str.w	r9, [sp, #32]
 800d672:	f8dd 901c 	ldr.w	r9, [sp, #28]
 800d676:	f8cd e024 	str.w	lr, [sp, #36]	; 0x24
 800d67a:	fa5f f08a 	uxtb.w	r0, sl
 800d67e:	f8cd c028 	str.w	ip, [sp, #40]	; 0x28
 800d682:	ebc9 0100 	rsb	r1, r9, r0
 800d686:	ebb6 0308 	subs.w	r3, r6, r8
 800d68a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 800d68e:	f8dd e020 	ldr.w	lr, [sp, #32]
 800d692:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
 800d696:	910d      	str	r1, [sp, #52]	; 0x34
 800d698:	bf08      	it	eq
 800d69a:	2301      	moveq	r3, #1
 800d69c:	f3ca 4007 	ubfx	r0, sl, #16, #8
 800d6a0:	f3ca 2207 	ubfx	r2, sl, #8, #8
 800d6a4:	ebcc 0100 	rsb	r1, ip, r0
 800d6a8:	ebc9 6a1a 	rsb	sl, r9, sl, lsr #24
 800d6ac:	9303      	str	r3, [sp, #12]
 800d6ae:	4638      	mov	r0, r7
 800d6b0:	ebce 0302 	rsb	r3, lr, r2
 800d6b4:	2700      	movs	r7, #0
 800d6b6:	930c      	str	r3, [sp, #48]	; 0x30
 800d6b8:	910e      	str	r1, [sp, #56]	; 0x38
 800d6ba:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 800d6be:	f108 33ff 	add.w	r3, r8, #4294967295
 800d6c2:	9706      	str	r7, [sp, #24]
 800d6c4:	9705      	str	r7, [sp, #20]
 800d6c6:	9704      	str	r7, [sp, #16]
 800d6c8:	f04f 0901 	mov.w	r9, #1
 800d6cc:	f103 0a01 	add.w	sl, r3, #1
 800d6d0:	45b2      	cmp	sl, r6
 800d6d2:	dc6c      	bgt.n	800d7ae <_DrawGradient+0x18e>
 800d6d4:	f8dd b00c 	ldr.w	fp, [sp, #12]
 800d6d8:	f8dd e028 	ldr.w	lr, [sp, #40]	; 0x28
 800d6dc:	f8dd c018 	ldr.w	ip, [sp, #24]
 800d6e0:	fb97 f2fb 	sdiv	r2, r7, fp
 800d6e4:	eb0e 0102 	add.w	r1, lr, r2
 800d6e8:	f8dd e00c 	ldr.w	lr, [sp, #12]
 800d6ec:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 800d6f0:	fb9c f2fe 	sdiv	r2, ip, lr
 800d6f4:	445a      	add	r2, fp
 800d6f6:	f8dd c014 	ldr.w	ip, [sp, #20]
 800d6fa:	b2d2      	uxtb	r2, r2
 800d6fc:	0412      	lsls	r2, r2, #16
 800d6fe:	ea42 6b01 	orr.w	fp, r2, r1, lsl #24
 800d702:	fb9c f1fe 	sdiv	r1, ip, lr
 800d706:	f8dd c020 	ldr.w	ip, [sp, #32]
 800d70a:	eb0c 0201 	add.w	r2, ip, r1
 800d70e:	f8dd c010 	ldr.w	ip, [sp, #16]
 800d712:	b2d1      	uxtb	r1, r2
 800d714:	fb9c f2fe 	sdiv	r2, ip, lr
 800d718:	f8dd e01c 	ldr.w	lr, [sp, #28]
 800d71c:	4472      	add	r2, lr
 800d71e:	b2d2      	uxtb	r2, r2
 800d720:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
 800d724:	45c2      	cmp	sl, r8
 800d726:	ea4b 0b01 	orr.w	fp, fp, r1
 800d72a:	dd25      	ble.n	800d778 <_DrawGradient+0x158>
 800d72c:	4583      	cmp	fp, r0
 800d72e:	d102      	bne.n	800d736 <_DrawGradient+0x116>
 800d730:	f109 0901 	add.w	r9, r9, #1
 800d734:	e020      	b.n	800d778 <_DrawGradient+0x158>
 800d736:	9300      	str	r3, [sp, #0]
 800d738:	f7fe ff3a 	bl	800c5b0 <LCD_SetColor>
 800d73c:	f1b9 0f01 	cmp.w	r9, #1
 800d740:	9b00      	ldr	r3, [sp, #0]
 800d742:	d00f      	beq.n	800d764 <_DrawGradient+0x144>
 800d744:	9a01      	ldr	r2, [sp, #4]
 800d746:	ebc9 010a 	rsb	r1, r9, sl
 800d74a:	b112      	cbz	r2, 800d752 <_DrawGradient+0x132>
 800d74c:	4628      	mov	r0, r5
 800d74e:	4622      	mov	r2, r4
 800d750:	e003      	b.n	800d75a <_DrawGradient+0x13a>
 800d752:	4608      	mov	r0, r1
 800d754:	461a      	mov	r2, r3
 800d756:	4629      	mov	r1, r5
 800d758:	4623      	mov	r3, r4
 800d75a:	f7fe fc59 	bl	800c010 <LCD_FillRect>
 800d75e:	f04f 0901 	mov.w	r9, #1
 800d762:	e009      	b.n	800d778 <_DrawGradient+0x158>
 800d764:	9801      	ldr	r0, [sp, #4]
 800d766:	b110      	cbz	r0, 800d76e <_DrawGradient+0x14e>
 800d768:	4628      	mov	r0, r5
 800d76a:	4619      	mov	r1, r3
 800d76c:	e001      	b.n	800d772 <_DrawGradient+0x152>
 800d76e:	4618      	mov	r0, r3
 800d770:	4629      	mov	r1, r5
 800d772:	4622      	mov	r2, r4
 800d774:	9b02      	ldr	r3, [sp, #8]
 800d776:	4798      	blx	r3
 800d778:	f8dd c010 	ldr.w	ip, [sp, #16]
 800d77c:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 800d780:	44f4      	add	ip, lr
 800d782:	f8cd c010 	str.w	ip, [sp, #16]
 800d786:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
 800d78a:	f8dd c014 	ldr.w	ip, [sp, #20]
 800d78e:	44f4      	add	ip, lr
 800d790:	f8cd c014 	str.w	ip, [sp, #20]
 800d794:	f8dd e038 	ldr.w	lr, [sp, #56]	; 0x38
 800d798:	f8dd c018 	ldr.w	ip, [sp, #24]
 800d79c:	44f4      	add	ip, lr
 800d79e:	f8dd e03c 	ldr.w	lr, [sp, #60]	; 0x3c
 800d7a2:	f8cd c018 	str.w	ip, [sp, #24]
 800d7a6:	4477      	add	r7, lr
 800d7a8:	4658      	mov	r0, fp
 800d7aa:	4653      	mov	r3, sl
 800d7ac:	e78e      	b.n	800d6cc <_DrawGradient+0xac>
 800d7ae:	f7fe feff 	bl	800c5b0 <LCD_SetColor>
 800d7b2:	f1b9 0f01 	cmp.w	r9, #1
 800d7b6:	d00f      	beq.n	800d7d8 <_DrawGradient+0x1b8>
 800d7b8:	9801      	ldr	r0, [sp, #4]
 800d7ba:	ebc9 0106 	rsb	r1, r9, r6
 800d7be:	b130      	cbz	r0, 800d7ce <_DrawGradient+0x1ae>
 800d7c0:	4628      	mov	r0, r5
 800d7c2:	3101      	adds	r1, #1
 800d7c4:	4622      	mov	r2, r4
 800d7c6:	4633      	mov	r3, r6
 800d7c8:	f7fe fc22 	bl	800c010 <LCD_FillRect>
 800d7cc:	e00e      	b.n	800d7ec <_DrawGradient+0x1cc>
 800d7ce:	1c48      	adds	r0, r1, #1
 800d7d0:	4629      	mov	r1, r5
 800d7d2:	4632      	mov	r2, r6
 800d7d4:	4623      	mov	r3, r4
 800d7d6:	e7f7      	b.n	800d7c8 <_DrawGradient+0x1a8>
 800d7d8:	9a01      	ldr	r2, [sp, #4]
 800d7da:	b112      	cbz	r2, 800d7e2 <_DrawGradient+0x1c2>
 800d7dc:	4628      	mov	r0, r5
 800d7de:	4631      	mov	r1, r6
 800d7e0:	e001      	b.n	800d7e6 <_DrawGradient+0x1c6>
 800d7e2:	4630      	mov	r0, r6
 800d7e4:	4629      	mov	r1, r5
 800d7e6:	4622      	mov	r2, r4
 800d7e8:	9b02      	ldr	r3, [sp, #8]
 800d7ea:	4798      	blx	r3
 800d7ec:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800d7ee:	b011      	add	sp, #68	; 0x44
 800d7f0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d7f4:	f7fe bedc 	b.w	800c5b0 <LCD_SetColor>

0800d7f8 <GUI_DrawGradientV>:
 800d7f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d7fc:	4c15      	ldr	r4, [pc, #84]	; (800d854 <GUI_DrawGradientV+0x5c>)
 800d7fe:	6824      	ldr	r4, [r4, #0]
 800d800:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 800d802:	eb00 0905 	add.w	r9, r0, r5
 800d806:	6d20      	ldr	r0, [r4, #80]	; 0x50
 800d808:	b087      	sub	sp, #28
 800d80a:	eb01 0800 	add.w	r8, r1, r0
 800d80e:	181c      	adds	r4, r3, r0
 800d810:	1955      	adds	r5, r2, r5
 800d812:	a804      	add	r0, sp, #16
 800d814:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800d816:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800d818:	f8ad 9010 	strh.w	r9, [sp, #16]
 800d81c:	f8ad 5014 	strh.w	r5, [sp, #20]
 800d820:	f8ad 8012 	strh.w	r8, [sp, #18]
 800d824:	f8ad 4016 	strh.w	r4, [sp, #22]
 800d828:	f7fb fef8 	bl	800961c <WM__InitIVRSearch>
 800d82c:	b170      	cbz	r0, 800d84c <GUI_DrawGradientV+0x54>
 800d82e:	4b0a      	ldr	r3, [pc, #40]	; (800d858 <GUI_DrawGradientV+0x60>)
 800d830:	9700      	str	r7, [sp, #0]
 800d832:	2101      	movs	r1, #1
 800d834:	9302      	str	r3, [sp, #8]
 800d836:	9103      	str	r1, [sp, #12]
 800d838:	4648      	mov	r0, r9
 800d83a:	4641      	mov	r1, r8
 800d83c:	462a      	mov	r2, r5
 800d83e:	4623      	mov	r3, r4
 800d840:	9601      	str	r6, [sp, #4]
 800d842:	f7ff feed 	bl	800d620 <_DrawGradient>
 800d846:	f7fb fe29 	bl	800949c <WM__GetNextIVR>
 800d84a:	e7ef      	b.n	800d82c <GUI_DrawGradientV+0x34>
 800d84c:	b007      	add	sp, #28
 800d84e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d852:	bf00      	nop
 800d854:	20000270 	.word	0x20000270
 800d858:	0800bf79 	.word	0x0800bf79

0800d85c <GUI_DrawGradientH>:
 800d85c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d860:	4c15      	ldr	r4, [pc, #84]	; (800d8b8 <GUI_DrawGradientH+0x5c>)
 800d862:	6825      	ldr	r5, [r4, #0]
 800d864:	6cec      	ldr	r4, [r5, #76]	; 0x4c
 800d866:	eb00 0804 	add.w	r8, r0, r4
 800d86a:	6d28      	ldr	r0, [r5, #80]	; 0x50
 800d86c:	b087      	sub	sp, #28
 800d86e:	eb01 0900 	add.w	r9, r1, r0
 800d872:	181d      	adds	r5, r3, r0
 800d874:	1914      	adds	r4, r2, r4
 800d876:	a804      	add	r0, sp, #16
 800d878:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800d87a:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800d87c:	f8ad 8010 	strh.w	r8, [sp, #16]
 800d880:	f8ad 4014 	strh.w	r4, [sp, #20]
 800d884:	f8ad 9012 	strh.w	r9, [sp, #18]
 800d888:	f8ad 5016 	strh.w	r5, [sp, #22]
 800d88c:	f7fb fec6 	bl	800961c <WM__InitIVRSearch>
 800d890:	b170      	cbz	r0, 800d8b0 <GUI_DrawGradientH+0x54>
 800d892:	4b0a      	ldr	r3, [pc, #40]	; (800d8bc <GUI_DrawGradientH+0x60>)
 800d894:	9700      	str	r7, [sp, #0]
 800d896:	2100      	movs	r1, #0
 800d898:	9302      	str	r3, [sp, #8]
 800d89a:	9103      	str	r1, [sp, #12]
 800d89c:	4648      	mov	r0, r9
 800d89e:	4641      	mov	r1, r8
 800d8a0:	462a      	mov	r2, r5
 800d8a2:	4623      	mov	r3, r4
 800d8a4:	9601      	str	r6, [sp, #4]
 800d8a6:	f7ff febb 	bl	800d620 <_DrawGradient>
 800d8aa:	f7fb fdf7 	bl	800949c <WM__GetNextIVR>
 800d8ae:	e7ef      	b.n	800d890 <GUI_DrawGradientH+0x34>
 800d8b0:	b007      	add	sp, #28
 800d8b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d8b6:	bf00      	nop
 800d8b8:	20000270 	.word	0x20000270
 800d8bc:	0800bfc5 	.word	0x0800bfc5

0800d8c0 <_DrawBitmap>:
 800d8c0:	b510      	push	{r4, lr}
 800d8c2:	b086      	sub	sp, #24
 800d8c4:	9c08      	ldr	r4, [sp, #32]
 800d8c6:	9400      	str	r4, [sp, #0]
 800d8c8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800d8ca:	9401      	str	r4, [sp, #4]
 800d8cc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800d8ce:	9402      	str	r4, [sp, #8]
 800d8d0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800d8d2:	9403      	str	r4, [sp, #12]
 800d8d4:	4c03      	ldr	r4, [pc, #12]	; (800d8e4 <_DrawBitmap+0x24>)
 800d8d6:	9404      	str	r4, [sp, #16]
 800d8d8:	4c03      	ldr	r4, [pc, #12]	; (800d8e8 <_DrawBitmap+0x28>)
 800d8da:	9405      	str	r4, [sp, #20]
 800d8dc:	f004 fdae 	bl	801243c <GUI__DrawBitmap16bpp>
 800d8e0:	b006      	add	sp, #24
 800d8e2:	bd10      	pop	{r4, pc}
 800d8e4:	0800eec5 	.word	0x0800eec5
 800d8e8:	0802d180 	.word	0x0802d180

0800d8ec <GL_DrawBitmap>:
 800d8ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d8f0:	68c6      	ldr	r6, [r0, #12]
 800d8f2:	b087      	sub	sp, #28
 800d8f4:	4604      	mov	r4, r0
 800d8f6:	2000      	movs	r0, #0
 800d8f8:	4688      	mov	r8, r1
 800d8fa:	4617      	mov	r7, r2
 800d8fc:	f7ff fbfe 	bl	800d0fc <GUI_SetDrawMode>
 800d900:	4605      	mov	r5, r0
 800d902:	b126      	cbz	r6, 800d90e <GL_DrawBitmap+0x22>
 800d904:	7933      	ldrb	r3, [r6, #4]
 800d906:	b113      	cbz	r3, 800d90e <GL_DrawBitmap+0x22>
 800d908:	f040 0002 	orr.w	r0, r0, #2
 800d90c:	e001      	b.n	800d912 <GL_DrawBitmap+0x26>
 800d90e:	f025 0002 	bic.w	r0, r5, #2
 800d912:	f7ff fbf3 	bl	800d0fc <GUI_SetDrawMode>
 800d916:	6921      	ldr	r1, [r4, #16]
 800d918:	b169      	cbz	r1, 800d936 <GL_DrawBitmap+0x4a>
 800d91a:	68a0      	ldr	r0, [r4, #8]
 800d91c:	8822      	ldrh	r2, [r4, #0]
 800d91e:	8863      	ldrh	r3, [r4, #2]
 800d920:	9000      	str	r0, [sp, #0]
 800d922:	68e4      	ldr	r4, [r4, #12]
 800d924:	2001      	movs	r0, #1
 800d926:	9002      	str	r0, [sp, #8]
 800d928:	9003      	str	r0, [sp, #12]
 800d92a:	9401      	str	r4, [sp, #4]
 800d92c:	680c      	ldr	r4, [r1, #0]
 800d92e:	4640      	mov	r0, r8
 800d930:	4639      	mov	r1, r7
 800d932:	47a0      	blx	r4
 800d934:	e020      	b.n	800d978 <GL_DrawBitmap+0x8c>
 800d936:	f8df 9050 	ldr.w	r9, [pc, #80]	; 800d988 <GL_DrawBitmap+0x9c>
 800d93a:	4a12      	ldr	r2, [pc, #72]	; (800d984 <GL_DrawBitmap+0x98>)
 800d93c:	f8d9 3000 	ldr.w	r3, [r9]
 800d940:	6816      	ldr	r6, [r2, #0]
 800d942:	68e0      	ldr	r0, [r4, #12]
 800d944:	7c5a      	ldrb	r2, [r3, #17]
 800d946:	4621      	mov	r1, r4
 800d948:	47b0      	blx	r6
 800d94a:	b928      	cbnz	r0, 800d958 <GL_DrawBitmap+0x6c>
 800d94c:	88e1      	ldrh	r1, [r4, #6]
 800d94e:	2901      	cmp	r1, #1
 800d950:	bf04      	itt	eq
 800d952:	f8d9 1000 	ldreq.w	r1, [r9]
 800d956:	6b88      	ldreq	r0, [r1, #56]	; 0x38
 800d958:	2101      	movs	r1, #1
 800d95a:	8822      	ldrh	r2, [r4, #0]
 800d95c:	8863      	ldrh	r3, [r4, #2]
 800d95e:	9100      	str	r1, [sp, #0]
 800d960:	9101      	str	r1, [sp, #4]
 800d962:	88e1      	ldrh	r1, [r4, #6]
 800d964:	9102      	str	r1, [sp, #8]
 800d966:	88a1      	ldrh	r1, [r4, #4]
 800d968:	9103      	str	r1, [sp, #12]
 800d96a:	68a1      	ldr	r1, [r4, #8]
 800d96c:	9005      	str	r0, [sp, #20]
 800d96e:	9104      	str	r1, [sp, #16]
 800d970:	4640      	mov	r0, r8
 800d972:	4639      	mov	r1, r7
 800d974:	f7fe fc52 	bl	800c21c <LCD_DrawBitmap>
 800d978:	4628      	mov	r0, r5
 800d97a:	b007      	add	sp, #28
 800d97c:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d980:	f7ff bbbc 	b.w	800d0fc <GUI_SetDrawMode>
 800d984:	20000278 	.word	0x20000278
 800d988:	20000270 	.word	0x20000270

0800d98c <GUI_DrawBitmap>:
 800d98c:	4b11      	ldr	r3, [pc, #68]	; (800d9d4 <GUI_DrawBitmap+0x48>)
 800d98e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d990:	4606      	mov	r6, r0
 800d992:	6818      	ldr	r0, [r3, #0]
 800d994:	6cc5      	ldr	r5, [r0, #76]	; 0x4c
 800d996:	6d04      	ldr	r4, [r0, #80]	; 0x50
 800d998:	8870      	ldrh	r0, [r6, #2]
 800d99a:	194d      	adds	r5, r1, r5
 800d99c:	8831      	ldrh	r1, [r6, #0]
 800d99e:	f8ad 5000 	strh.w	r5, [sp]
 800d9a2:	1914      	adds	r4, r2, r4
 800d9a4:	1e4a      	subs	r2, r1, #1
 800d9a6:	1e41      	subs	r1, r0, #1
 800d9a8:	1953      	adds	r3, r2, r5
 800d9aa:	4668      	mov	r0, sp
 800d9ac:	190a      	adds	r2, r1, r4
 800d9ae:	f8ad 3004 	strh.w	r3, [sp, #4]
 800d9b2:	f8ad 4002 	strh.w	r4, [sp, #2]
 800d9b6:	f8ad 2006 	strh.w	r2, [sp, #6]
 800d9ba:	f7fb fe2f 	bl	800961c <WM__InitIVRSearch>
 800d9be:	b138      	cbz	r0, 800d9d0 <GUI_DrawBitmap+0x44>
 800d9c0:	4630      	mov	r0, r6
 800d9c2:	4629      	mov	r1, r5
 800d9c4:	4622      	mov	r2, r4
 800d9c6:	f7ff ff91 	bl	800d8ec <GL_DrawBitmap>
 800d9ca:	f7fb fd67 	bl	800949c <WM__GetNextIVR>
 800d9ce:	e7f6      	b.n	800d9be <GUI_DrawBitmap+0x32>
 800d9d0:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
 800d9d2:	bf00      	nop
 800d9d4:	20000270 	.word	0x20000270

0800d9d8 <GUI_WrapGetNumLines>:
 800d9d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d9da:	4605      	mov	r5, r0
 800d9dc:	460e      	mov	r6, r1
 800d9de:	4617      	mov	r7, r2
 800d9e0:	2400      	movs	r4, #0
 800d9e2:	4628      	mov	r0, r5
 800d9e4:	4631      	mov	r1, r6
 800d9e6:	463a      	mov	r2, r7
 800d9e8:	f004 fc42 	bl	8012270 <GUI__WrapGetNumBytesToNextLine>
 800d9ec:	b110      	cbz	r0, 800d9f4 <GUI_WrapGetNumLines+0x1c>
 800d9ee:	182d      	adds	r5, r5, r0
 800d9f0:	3401      	adds	r4, #1
 800d9f2:	e7f6      	b.n	800d9e2 <GUI_WrapGetNumLines+0xa>
 800d9f4:	4620      	mov	r0, r4
 800d9f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800d9f8 <GUI_DispStringInRectWrap>:
 800d9f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d9fc:	b089      	sub	sp, #36	; 0x24
 800d9fe:	460c      	mov	r4, r1
 800da00:	9202      	str	r2, [sp, #8]
 800da02:	9303      	str	r3, [sp, #12]
 800da04:	4605      	mov	r5, r0
 800da06:	2800      	cmp	r0, #0
 800da08:	f000 808e 	beq.w	800db28 <GUI_DispStringInRectWrap+0x130>
 800da0c:	f8b1 9000 	ldrh.w	r9, [r1]
 800da10:	f8b1 a004 	ldrh.w	sl, [r1, #4]
 800da14:	884e      	ldrh	r6, [r1, #2]
 800da16:	f8b1 b006 	ldrh.w	fp, [r1, #6]
 800da1a:	fa0f f28a 	sxth.w	r2, sl
 800da1e:	fa0f f389 	sxth.w	r3, r9
 800da22:	1ad0      	subs	r0, r2, r3
 800da24:	1c41      	adds	r1, r0, #1
 800da26:	9101      	str	r1, [sp, #4]
 800da28:	f000 fe48 	bl	800e6bc <GUI_GetFontDistY>
 800da2c:	9a02      	ldr	r2, [sp, #8]
 800da2e:	f012 080c 	ands.w	r8, r2, #12
 800da32:	4607      	mov	r7, r0
 800da34:	d01e      	beq.n	800da74 <GUI_DispStringInRectWrap+0x7c>
 800da36:	4628      	mov	r0, r5
 800da38:	9901      	ldr	r1, [sp, #4]
 800da3a:	9a03      	ldr	r2, [sp, #12]
 800da3c:	f7ff ffcc 	bl	800d9d8 <GUI_WrapGetNumLines>
 800da40:	f1b8 0f08 	cmp.w	r8, #8
 800da44:	d005      	beq.n	800da52 <GUI_DispStringInRectWrap+0x5a>
 800da46:	f1b8 0f0c 	cmp.w	r8, #12
 800da4a:	d007      	beq.n	800da5c <GUI_DispStringInRectWrap+0x64>
 800da4c:	f1b8 0f04 	cmp.w	r8, #4
 800da50:	d110      	bne.n	800da74 <GUI_DispStringInRectWrap+0x7c>
 800da52:	f10b 0101 	add.w	r1, fp, #1
 800da56:	fb07 1610 	mls	r6, r7, r0, r1
 800da5a:	e00a      	b.n	800da72 <GUI_DispStringInRectWrap+0x7a>
 800da5c:	b233      	sxth	r3, r6
 800da5e:	fa0f f18b 	sxth.w	r1, fp
 800da62:	1aca      	subs	r2, r1, r3
 800da64:	1c51      	adds	r1, r2, #1
 800da66:	fb07 1010 	mls	r0, r7, r0, r1
 800da6a:	2302      	movs	r3, #2
 800da6c:	fb90 f2f3 	sdiv	r2, r0, r3
 800da70:	1996      	adds	r6, r2, r6
 800da72:	b2b6      	uxth	r6, r6
 800da74:	4620      	mov	r0, r4
 800da76:	f7fa fa8b 	bl	8007f90 <WM_SetUserClipRect>
 800da7a:	4680      	mov	r8, r0
 800da7c:	b178      	cbz	r0, 800da9e <GUI_DispStringInRectWrap+0xa6>
 800da7e:	a804      	add	r0, sp, #16
 800da80:	4621      	mov	r1, r4
 800da82:	4642      	mov	r2, r8
 800da84:	f8ad 9010 	strh.w	r9, [sp, #16]
 800da88:	f8ad 6012 	strh.w	r6, [sp, #18]
 800da8c:	f8ad a014 	strh.w	sl, [sp, #20]
 800da90:	f8ad b016 	strh.w	fp, [sp, #22]
 800da94:	f7fe feb0 	bl	800c7f8 <GUI__IntersectRects>
 800da98:	a804      	add	r0, sp, #16
 800da9a:	f7fa fa79 	bl	8007f90 <WM_SetUserClipRect>
 800da9e:	9a03      	ldr	r2, [sp, #12]
 800daa0:	9901      	ldr	r1, [sp, #4]
 800daa2:	4628      	mov	r0, r5
 800daa4:	f004 fbb4 	bl	8012210 <GUI__WrapGetNumCharsDisp>
 800daa8:	4683      	mov	fp, r0
 800daaa:	1e78      	subs	r0, r7, #1
 800daac:	1983      	adds	r3, r0, r6
 800daae:	4659      	mov	r1, fp
 800dab0:	4628      	mov	r0, r5
 800dab2:	f8ad 301e 	strh.w	r3, [sp, #30]
 800dab6:	f8ad 9018 	strh.w	r9, [sp, #24]
 800daba:	f8ad 601a 	strh.w	r6, [sp, #26]
 800dabe:	f8ad a01c 	strh.w	sl, [sp, #28]
 800dac2:	f000 fd61 	bl	800e588 <GUI__GetLineDistX>
 800dac6:	9a02      	ldr	r2, [sp, #8]
 800dac8:	f002 0303 	and.w	r3, r2, #3
 800dacc:	2b01      	cmp	r3, #1
 800dace:	d013      	beq.n	800daf8 <GUI_DispStringInRectWrap+0x100>
 800dad0:	2b02      	cmp	r3, #2
 800dad2:	d004      	beq.n	800dade <GUI_DispStringInRectWrap+0xe6>
 800dad4:	b9ab      	cbnz	r3, 800db02 <GUI_DispStringInRectWrap+0x10a>
 800dad6:	8821      	ldrh	r1, [r4, #0]
 800dad8:	f8ad 1018 	strh.w	r1, [sp, #24]
 800dadc:	e011      	b.n	800db02 <GUI_DispStringInRectWrap+0x10a>
 800dade:	8822      	ldrh	r2, [r4, #0]
 800dae0:	f9b4 e004 	ldrsh.w	lr, [r4, #4]
 800dae4:	b211      	sxth	r1, r2
 800dae6:	ebc1 010e 	rsb	r1, r1, lr
 800daea:	1a08      	subs	r0, r1, r0
 800daec:	fb90 f3f3 	sdiv	r3, r0, r3
 800daf0:	189a      	adds	r2, r3, r2
 800daf2:	f8ad 2018 	strh.w	r2, [sp, #24]
 800daf6:	e004      	b.n	800db02 <GUI_DispStringInRectWrap+0x10a>
 800daf8:	88a1      	ldrh	r1, [r4, #4]
 800dafa:	1c4b      	adds	r3, r1, #1
 800dafc:	1a18      	subs	r0, r3, r0
 800dafe:	f8ad 0018 	strh.w	r0, [sp, #24]
 800db02:	4628      	mov	r0, r5
 800db04:	4659      	mov	r1, fp
 800db06:	aa06      	add	r2, sp, #24
 800db08:	f000 fd6c 	bl	800e5e4 <GUI__DispLine>
 800db0c:	4628      	mov	r0, r5
 800db0e:	9a03      	ldr	r2, [sp, #12]
 800db10:	9901      	ldr	r1, [sp, #4]
 800db12:	f004 fbad 	bl	8012270 <GUI__WrapGetNumBytesToNextLine>
 800db16:	182d      	adds	r5, r5, r0
 800db18:	19f6      	adds	r6, r6, r7
 800db1a:	782a      	ldrb	r2, [r5, #0]
 800db1c:	b2b6      	uxth	r6, r6
 800db1e:	2a00      	cmp	r2, #0
 800db20:	d1bd      	bne.n	800da9e <GUI_DispStringInRectWrap+0xa6>
 800db22:	4640      	mov	r0, r8
 800db24:	f7fa fa34 	bl	8007f90 <WM_SetUserClipRect>
 800db28:	b009      	add	sp, #36	; 0x24
 800db2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800db30 <GUI__DispStringInRect>:
 800db30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800db34:	b087      	sub	sp, #28
 800db36:	460c      	mov	r4, r1
 800db38:	9001      	str	r0, [sp, #4]
 800db3a:	4691      	mov	r9, r2
 800db3c:	461e      	mov	r6, r3
 800db3e:	f000 fdbd 	bl	800e6bc <GUI_GetFontDistY>
 800db42:	9f01      	ldr	r7, [sp, #4]
 800db44:	4680      	mov	r8, r0
 800db46:	b124      	cbz	r4, 800db52 <GUI__DispStringInRect+0x22>
 800db48:	6820      	ldr	r0, [r4, #0]
 800db4a:	6861      	ldr	r1, [r4, #4]
 800db4c:	aa04      	add	r2, sp, #16
 800db4e:	c203      	stmia	r2!, {r0, r1}
 800db50:	e002      	b.n	800db58 <GUI__DispStringInRect+0x28>
 800db52:	a804      	add	r0, sp, #16
 800db54:	f7ff fcae 	bl	800d4b4 <GUI_GetClientRect>
 800db58:	f019 0a0c 	ands.w	sl, r9, #12
 800db5c:	d102      	bne.n	800db64 <GUI__DispStringInRect+0x34>
 800db5e:	f9bd 4012 	ldrsh.w	r4, [sp, #18]
 800db62:	e034      	b.n	800dbce <GUI__DispStringInRect+0x9e>
 800db64:	4634      	mov	r4, r6
 800db66:	2500      	movs	r5, #0
 800db68:	b1a4      	cbz	r4, 800db94 <GUI__DispStringInRect+0x64>
 800db6a:	4621      	mov	r1, r4
 800db6c:	9801      	ldr	r0, [sp, #4]
 800db6e:	f000 fce1 	bl	800e534 <GUI__GetLineNumChars>
 800db72:	f8dd b004 	ldr.w	fp, [sp, #4]
 800db76:	4601      	mov	r1, r0
 800db78:	1a24      	subs	r4, r4, r0
 800db7a:	4658      	mov	r0, fp
 800db7c:	f004 ff52 	bl	8012a24 <GUI_UC__NumChars2NumBytes>
 800db80:	eb0b 0300 	add.w	r3, fp, r0
 800db84:	a806      	add	r0, sp, #24
 800db86:	3501      	adds	r5, #1
 800db88:	f840 3d14 	str.w	r3, [r0, #-20]!
 800db8c:	f004 fb7a 	bl	8012284 <GUI__HandleEOLine>
 800db90:	2800      	cmp	r0, #0
 800db92:	d0e9      	beq.n	800db68 <GUI__DispStringInRect+0x38>
 800db94:	f1ba 0f08 	cmp.w	sl, #8
 800db98:	d005      	beq.n	800dba6 <GUI__DispStringInRect+0x76>
 800db9a:	f1ba 0f0c 	cmp.w	sl, #12
 800db9e:	d008      	beq.n	800dbb2 <GUI__DispStringInRect+0x82>
 800dba0:	f1ba 0f04 	cmp.w	sl, #4
 800dba4:	d112      	bne.n	800dbcc <GUI__DispStringInRect+0x9c>
 800dba6:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 800dbaa:	fb08 0215 	mls	r2, r8, r5, r0
 800dbae:	1c54      	adds	r4, r2, #1
 800dbb0:	e00d      	b.n	800dbce <GUI__DispStringInRect+0x9e>
 800dbb2:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 800dbb6:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 800dbba:	1a0a      	subs	r2, r1, r0
 800dbbc:	1c54      	adds	r4, r2, #1
 800dbbe:	fb08 4515 	mls	r5, r8, r5, r4
 800dbc2:	2302      	movs	r3, #2
 800dbc4:	fb95 f1f3 	sdiv	r1, r5, r3
 800dbc8:	1844      	adds	r4, r0, r1
 800dbca:	e000      	b.n	800dbce <GUI__DispStringInRect+0x9e>
 800dbcc:	2400      	movs	r4, #0
 800dbce:	9701      	str	r7, [sp, #4]
 800dbd0:	2500      	movs	r5, #0
 800dbd2:	2e00      	cmp	r6, #0
 800dbd4:	d04b      	beq.n	800dc6e <GUI__DispStringInRect+0x13e>
 800dbd6:	4631      	mov	r1, r6
 800dbd8:	9801      	ldr	r0, [sp, #4]
 800dbda:	f000 fcab 	bl	800e534 <GUI__GetLineNumChars>
 800dbde:	4607      	mov	r7, r0
 800dbe0:	1a36      	subs	r6, r6, r0
 800dbe2:	4639      	mov	r1, r7
 800dbe4:	9801      	ldr	r0, [sp, #4]
 800dbe6:	f000 fccf 	bl	800e588 <GUI__GetLineDistX>
 800dbea:	f009 0303 	and.w	r3, r9, #3
 800dbee:	2b01      	cmp	r3, #1
 800dbf0:	d00f      	beq.n	800dc12 <GUI__DispStringInRect+0xe2>
 800dbf2:	2b02      	cmp	r3, #2
 800dbf4:	d003      	beq.n	800dbfe <GUI__DispStringInRect+0xce>
 800dbf6:	b983      	cbnz	r3, 800dc1a <GUI__DispStringInRect+0xea>
 800dbf8:	f9bd 5010 	ldrsh.w	r5, [sp, #16]
 800dbfc:	e00d      	b.n	800dc1a <GUI__DispStringInRect+0xea>
 800dbfe:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 800dc02:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800dc06:	1a6a      	subs	r2, r5, r1
 800dc08:	1a15      	subs	r5, r2, r0
 800dc0a:	fb95 f3f3 	sdiv	r3, r5, r3
 800dc0e:	18cd      	adds	r5, r1, r3
 800dc10:	e003      	b.n	800dc1a <GUI__DispStringInRect+0xea>
 800dc12:	f9bd 1014 	ldrsh.w	r1, [sp, #20]
 800dc16:	1a0a      	subs	r2, r1, r0
 800dc18:	1c55      	adds	r5, r2, #1
 800dc1a:	4b16      	ldr	r3, [pc, #88]	; (800dc74 <GUI__DispStringInRect+0x144>)
 800dc1c:	6819      	ldr	r1, [r3, #0]
 800dc1e:	b2aa      	uxth	r2, r5
 800dc20:	b2a3      	uxth	r3, r4
 800dc22:	3801      	subs	r0, #1
 800dc24:	844a      	strh	r2, [r1, #34]	; 0x22
 800dc26:	848b      	strh	r3, [r1, #36]	; 0x24
 800dc28:	f8ad 2008 	strh.w	r2, [sp, #8]
 800dc2c:	1941      	adds	r1, r0, r5
 800dc2e:	f108 32ff 	add.w	r2, r8, #4294967295
 800dc32:	f8ad 100c 	strh.w	r1, [sp, #12]
 800dc36:	f8ad 300a 	strh.w	r3, [sp, #10]
 800dc3a:	4639      	mov	r1, r7
 800dc3c:	1913      	adds	r3, r2, r4
 800dc3e:	9801      	ldr	r0, [sp, #4]
 800dc40:	f8ad 300e 	strh.w	r3, [sp, #14]
 800dc44:	aa02      	add	r2, sp, #8
 800dc46:	f000 fccd 	bl	800e5e4 <GUI__DispLine>
 800dc4a:	f8dd a004 	ldr.w	sl, [sp, #4]
 800dc4e:	4639      	mov	r1, r7
 800dc50:	4650      	mov	r0, sl
 800dc52:	f004 fee7 	bl	8012a24 <GUI_UC__NumChars2NumBytes>
 800dc56:	af06      	add	r7, sp, #24
 800dc58:	4450      	add	r0, sl
 800dc5a:	f847 0d14 	str.w	r0, [r7, #-20]!
 800dc5e:	f000 fd2d 	bl	800e6bc <GUI_GetFontDistY>
 800dc62:	1824      	adds	r4, r4, r0
 800dc64:	4638      	mov	r0, r7
 800dc66:	f004 fb0d 	bl	8012284 <GUI__HandleEOLine>
 800dc6a:	2800      	cmp	r0, #0
 800dc6c:	d0b1      	beq.n	800dbd2 <GUI__DispStringInRect+0xa2>
 800dc6e:	b007      	add	sp, #28
 800dc70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dc74:	20000270 	.word	0x20000270

0800dc78 <GUI_DispStringInRectMax>:
 800dc78:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800dc7c:	460d      	mov	r5, r1
 800dc7e:	4690      	mov	r8, r2
 800dc80:	461f      	mov	r7, r3
 800dc82:	4606      	mov	r6, r0
 800dc84:	b1c8      	cbz	r0, 800dcba <GUI_DispStringInRectMax+0x42>
 800dc86:	b909      	cbnz	r1, 800dc8c <GUI_DispStringInRectMax+0x14>
 800dc88:	2400      	movs	r4, #0
 800dc8a:	e00d      	b.n	800dca8 <GUI_DispStringInRectMax+0x30>
 800dc8c:	4608      	mov	r0, r1
 800dc8e:	f7fa f97f 	bl	8007f90 <WM_SetUserClipRect>
 800dc92:	4604      	mov	r4, r0
 800dc94:	2800      	cmp	r0, #0
 800dc96:	d0f7      	beq.n	800dc88 <GUI_DispStringInRectMax+0x10>
 800dc98:	4668      	mov	r0, sp
 800dc9a:	4629      	mov	r1, r5
 800dc9c:	4622      	mov	r2, r4
 800dc9e:	f7fe fdab 	bl	800c7f8 <GUI__IntersectRects>
 800dca2:	4668      	mov	r0, sp
 800dca4:	f7fa f974 	bl	8007f90 <WM_SetUserClipRect>
 800dca8:	4630      	mov	r0, r6
 800dcaa:	4629      	mov	r1, r5
 800dcac:	4642      	mov	r2, r8
 800dcae:	463b      	mov	r3, r7
 800dcb0:	f7ff ff3e 	bl	800db30 <GUI__DispStringInRect>
 800dcb4:	4620      	mov	r0, r4
 800dcb6:	f7fa f96b 	bl	8007f90 <WM_SetUserClipRect>
 800dcba:	e8bd 81fc 	ldmia.w	sp!, {r2, r3, r4, r5, r6, r7, r8, pc}

0800dcbe <GUI_DispStringInRect>:
 800dcbe:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800dcc2:	f7ff bfd9 	b.w	800dc78 <GUI_DispStringInRectMax>
	...

0800dcc8 <GUI_DispStringHCenterAt>:
 800dcc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dcca:	4b0b      	ldr	r3, [pc, #44]	; (800dcf8 <GUI_DispStringHCenterAt+0x30>)
 800dccc:	4605      	mov	r5, r0
 800dcce:	6818      	ldr	r0, [r3, #0]
 800dcd0:	460f      	mov	r7, r1
 800dcd2:	f9b0 102c 	ldrsh.w	r1, [r0, #44]	; 0x2c
 800dcd6:	f041 0002 	orr.w	r0, r1, #2
 800dcda:	4616      	mov	r6, r2
 800dcdc:	f004 feb4 	bl	8012a48 <GUI_SetTextAlign>
 800dce0:	4639      	mov	r1, r7
 800dce2:	4604      	mov	r4, r0
 800dce4:	4632      	mov	r2, r6
 800dce6:	4628      	mov	r0, r5
 800dce8:	f000 f810 	bl	800dd0c <GUI_DispStringAt>
 800dcec:	4620      	mov	r0, r4
 800dcee:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800dcf2:	f004 bea9 	b.w	8012a48 <GUI_SetTextAlign>
 800dcf6:	bf00      	nop
 800dcf8:	20000270 	.word	0x20000270

0800dcfc <GUI_DispStringAtCEOL>:
 800dcfc:	b508      	push	{r3, lr}
 800dcfe:	f000 f805 	bl	800dd0c <GUI_DispStringAt>
 800dd02:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800dd06:	f000 b891 	b.w	800de2c <GUI_DispCEOL>
	...

0800dd0c <GUI_DispStringAt>:
 800dd0c:	4b02      	ldr	r3, [pc, #8]	; (800dd18 <GUI_DispStringAt+0xc>)
 800dd0e:	681b      	ldr	r3, [r3, #0]
 800dd10:	8459      	strh	r1, [r3, #34]	; 0x22
 800dd12:	849a      	strh	r2, [r3, #36]	; 0x24
 800dd14:	f000 b802 	b.w	800dd1c <GUI_DispString>
 800dd18:	20000270 	.word	0x20000270

0800dd1c <GUI_DispString>:
 800dd1c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd20:	4604      	mov	r4, r0
 800dd22:	2800      	cmp	r0, #0
 800dd24:	d07d      	beq.n	800de22 <GUI_DispString+0x106>
 800dd26:	4d40      	ldr	r5, [pc, #256]	; (800de28 <GUI_DispString+0x10c>)
 800dd28:	f000 fcc8 	bl	800e6bc <GUI_GetFontDistY>
 800dd2c:	682b      	ldr	r3, [r5, #0]
 800dd2e:	4680      	mov	r8, r0
 800dd30:	f8b3 9022 	ldrh.w	r9, [r3, #34]	; 0x22
 800dd34:	f000 fcaa 	bl	800e68c <GUI_GetYAdjust>
 800dd38:	6829      	ldr	r1, [r5, #0]
 800dd3a:	8c8a      	ldrh	r2, [r1, #36]	; 0x24
 800dd3c:	b287      	uxth	r7, r0
 800dd3e:	1bd0      	subs	r0, r2, r7
 800dd40:	8488      	strh	r0, [r1, #36]	; 0x24
 800dd42:	7823      	ldrb	r3, [r4, #0]
 800dd44:	2b00      	cmp	r3, #0
 800dd46:	d060      	beq.n	800de0a <GUI_DispString+0xee>
 800dd48:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800dd4c:	4620      	mov	r0, r4
 800dd4e:	f000 fbf1 	bl	800e534 <GUI__GetLineNumChars>
 800dd52:	4e35      	ldr	r6, [pc, #212]	; (800de28 <GUI_DispString+0x10c>)
 800dd54:	4605      	mov	r5, r0
 800dd56:	4629      	mov	r1, r5
 800dd58:	4620      	mov	r0, r4
 800dd5a:	f000 fc15 	bl	800e588 <GUI__GetLineDistX>
 800dd5e:	6833      	ldr	r3, [r6, #0]
 800dd60:	8d99      	ldrh	r1, [r3, #44]	; 0x2c
 800dd62:	f001 0203 	and.w	r2, r1, #3
 800dd66:	2a01      	cmp	r2, #1
 800dd68:	d006      	beq.n	800dd78 <GUI_DispString+0x5c>
 800dd6a:	2a02      	cmp	r2, #2
 800dd6c:	d001      	beq.n	800dd72 <GUI_DispString+0x56>
 800dd6e:	2600      	movs	r6, #0
 800dd70:	e003      	b.n	800dd7a <GUI_DispString+0x5e>
 800dd72:	fb90 f6f2 	sdiv	r6, r0, r2
 800dd76:	e000      	b.n	800dd7a <GUI_DispString+0x5e>
 800dd78:	4606      	mov	r6, r0
 800dd7a:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800dd7c:	1b8a      	subs	r2, r1, r6
 800dd7e:	b296      	uxth	r6, r2
 800dd80:	b2b1      	uxth	r1, r6
 800dd82:	8459      	strh	r1, [r3, #34]	; 0x22
 800dd84:	fa1f fa80 	uxth.w	sl, r0
 800dd88:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 800dd8a:	f8ad 1000 	strh.w	r1, [sp]
 800dd8e:	f10a 30ff 	add.w	r0, sl, #4294967295
 800dd92:	1832      	adds	r2, r6, r0
 800dd94:	fa1f fb88 	uxth.w	fp, r8
 800dd98:	1e5e      	subs	r6, r3, #1
 800dd9a:	eb0b 0106 	add.w	r1, fp, r6
 800dd9e:	4e22      	ldr	r6, [pc, #136]	; (800de28 <GUI_DispString+0x10c>)
 800dda0:	f8ad 2004 	strh.w	r2, [sp, #4]
 800dda4:	f8ad 1006 	strh.w	r1, [sp, #6]
 800dda8:	4620      	mov	r0, r4
 800ddaa:	4629      	mov	r1, r5
 800ddac:	466a      	mov	r2, sp
 800ddae:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ddb2:	f000 fc17 	bl	800e5e4 <GUI__DispLine>
 800ddb6:	6830      	ldr	r0, [r6, #0]
 800ddb8:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800ddbc:	4629      	mov	r1, r5
 800ddbe:	8482      	strh	r2, [r0, #36]	; 0x24
 800ddc0:	4620      	mov	r0, r4
 800ddc2:	f004 fe2f 	bl	8012a24 <GUI_UC__NumChars2NumBytes>
 800ddc6:	5c23      	ldrb	r3, [r4, r0]
 800ddc8:	2b0a      	cmp	r3, #10
 800ddca:	eb04 0200 	add.w	r2, r4, r0
 800ddce:	d001      	beq.n	800ddd4 <GUI_DispString+0xb8>
 800ddd0:	2b0d      	cmp	r3, #13
 800ddd2:	d112      	bne.n	800ddfa <GUI_DispString+0xde>
 800ddd4:	6833      	ldr	r3, [r6, #0]
 800ddd6:	8d99      	ldrh	r1, [r3, #44]	; 0x2c
 800ddd8:	f001 0003 	and.w	r0, r1, #3
 800dddc:	1e41      	subs	r1, r0, #1
 800ddde:	2901      	cmp	r1, #1
 800dde0:	bf8a      	itet	hi
 800dde2:	8c19      	ldrhhi	r1, [r3, #32]
 800dde4:	f8a3 9022 	strhls.w	r9, [r3, #34]	; 0x22
 800dde8:	8459      	strhhi	r1, [r3, #34]	; 0x22
 800ddea:	7810      	ldrb	r0, [r2, #0]
 800ddec:	280a      	cmp	r0, #10
 800ddee:	d10a      	bne.n	800de06 <GUI_DispString+0xea>
 800ddf0:	8c99      	ldrh	r1, [r3, #36]	; 0x24
 800ddf2:	448b      	add	fp, r1
 800ddf4:	f8a3 b024 	strh.w	fp, [r3, #36]	; 0x24
 800ddf8:	e005      	b.n	800de06 <GUI_DispString+0xea>
 800ddfa:	f8bd 0000 	ldrh.w	r0, [sp]
 800ddfe:	6831      	ldr	r1, [r6, #0]
 800de00:	4482      	add	sl, r0
 800de02:	f8a1 a022 	strh.w	sl, [r1, #34]	; 0x22
 800de06:	7813      	ldrb	r3, [r2, #0]
 800de08:	b94b      	cbnz	r3, 800de1e <GUI_DispString+0x102>
 800de0a:	4a07      	ldr	r2, [pc, #28]	; (800de28 <GUI_DispString+0x10c>)
 800de0c:	6810      	ldr	r0, [r2, #0]
 800de0e:	8c81      	ldrh	r1, [r0, #36]	; 0x24
 800de10:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800de12:	187f      	adds	r7, r7, r1
 800de14:	f023 0203 	bic.w	r2, r3, #3
 800de18:	8487      	strh	r7, [r0, #36]	; 0x24
 800de1a:	8582      	strh	r2, [r0, #44]	; 0x2c
 800de1c:	e001      	b.n	800de22 <GUI_DispString+0x106>
 800de1e:	1c54      	adds	r4, r2, #1
 800de20:	e78f      	b.n	800dd42 <GUI_DispString+0x26>
 800de22:	e8bd 8ffe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800de26:	bf00      	nop
 800de28:	20000270 	.word	0x20000270

0800de2c <GUI_DispCEOL>:
 800de2c:	b570      	push	{r4, r5, r6, lr}
 800de2e:	4c0a      	ldr	r4, [pc, #40]	; (800de58 <GUI_DispCEOL+0x2c>)
 800de30:	6823      	ldr	r3, [r4, #0]
 800de32:	f9b3 5024 	ldrsh.w	r5, [r3, #36]	; 0x24
 800de36:	f000 fc29 	bl	800e68c <GUI_GetYAdjust>
 800de3a:	6822      	ldr	r2, [r4, #0]
 800de3c:	1a29      	subs	r1, r5, r0
 800de3e:	69d0      	ldr	r0, [r2, #28]
 800de40:	7e43      	ldrb	r3, [r0, #25]
 800de42:	f9b2 0022 	ldrsh.w	r0, [r2, #34]	; 0x22
 800de46:	18cb      	adds	r3, r1, r3
 800de48:	f44f 627a 	mov.w	r2, #4000	; 0xfa0
 800de4c:	3b01      	subs	r3, #1
 800de4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800de52:	f000 b8f9 	b.w	800e048 <GUI_ClearRect>
 800de56:	bf00      	nop
 800de58:	20000270 	.word	0x20000270

0800de5c <_UnlinkDevice>:
 800de5c:	4b09      	ldr	r3, [pc, #36]	; (800de84 <_UnlinkDevice+0x28>)
 800de5e:	6982      	ldr	r2, [r0, #24]
 800de60:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800de64:	4281      	cmp	r1, r0
 800de66:	bf04      	itt	eq
 800de68:	6801      	ldreq	r1, [r0, #0]
 800de6a:	f843 1022 	streq.w	r1, [r3, r2, lsl #2]
 800de6e:	6843      	ldr	r3, [r0, #4]
 800de70:	b10b      	cbz	r3, 800de76 <_UnlinkDevice+0x1a>
 800de72:	6802      	ldr	r2, [r0, #0]
 800de74:	601a      	str	r2, [r3, #0]
 800de76:	6801      	ldr	r1, [r0, #0]
 800de78:	b101      	cbz	r1, 800de7c <_UnlinkDevice+0x20>
 800de7a:	604b      	str	r3, [r1, #4]
 800de7c:	2300      	movs	r3, #0
 800de7e:	6003      	str	r3, [r0, #0]
 800de80:	6043      	str	r3, [r0, #4]
 800de82:	4770      	bx	lr
 800de84:	2000dde0 	.word	0x2000dde0

0800de88 <GUI_DEVICE__GetpDriver>:
 800de88:	2801      	cmp	r0, #1
 800de8a:	dc09      	bgt.n	800dea0 <GUI_DEVICE__GetpDriver+0x18>
 800de8c:	4b05      	ldr	r3, [pc, #20]	; (800dea4 <GUI_DEVICE__GetpDriver+0x1c>)
 800de8e:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800de92:	b120      	cbz	r0, 800de9e <GUI_DEVICE__GetpDriver+0x16>
 800de94:	68c1      	ldr	r1, [r0, #12]
 800de96:	680a      	ldr	r2, [r1, #0]
 800de98:	b11a      	cbz	r2, 800dea2 <GUI_DEVICE__GetpDriver+0x1a>
 800de9a:	6800      	ldr	r0, [r0, #0]
 800de9c:	e7f9      	b.n	800de92 <GUI_DEVICE__GetpDriver+0xa>
 800de9e:	4770      	bx	lr
 800dea0:	2000      	movs	r0, #0
 800dea2:	4770      	bx	lr
 800dea4:	2000dde0 	.word	0x2000dde0

0800dea8 <GUI_DEVICE_Delete>:
 800dea8:	f000 bcfe 	b.w	800e8a8 <GUI_ALLOC_FreeFixedBlock>

0800deac <GUI_DEVICE_Create>:
 800deac:	2b01      	cmp	r3, #1
 800deae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800deb0:	4606      	mov	r6, r0
 800deb2:	460d      	mov	r5, r1
 800deb4:	4617      	mov	r7, r2
 800deb6:	461c      	mov	r4, r3
 800deb8:	dd01      	ble.n	800debe <GUI_DEVICE_Create+0x12>
 800deba:	2000      	movs	r0, #0
 800debc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800debe:	201c      	movs	r0, #28
 800dec0:	f000 fe8c 	bl	800ebdc <GUI_ALLOC_GetFixedBlock>
 800dec4:	2800      	cmp	r0, #0
 800dec6:	d0f8      	beq.n	800deba <GUI_DEVICE_Create+0xe>
 800dec8:	b10d      	cbz	r5, 800dece <GUI_DEVICE_Create+0x22>
 800deca:	6105      	str	r5, [r0, #16]
 800decc:	e009      	b.n	800dee2 <GUI_DEVICE_Create+0x36>
 800dece:	4b09      	ldr	r3, [pc, #36]	; (800def4 <GUI_DEVICE_Create+0x48>)
 800ded0:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 800ded4:	b12b      	cbz	r3, 800dee2 <GUI_DEVICE_Create+0x36>
 800ded6:	681a      	ldr	r2, [r3, #0]
 800ded8:	b10a      	cbz	r2, 800dede <GUI_DEVICE_Create+0x32>
 800deda:	4613      	mov	r3, r2
 800dedc:	e7fb      	b.n	800ded6 <GUI_DEVICE_Create+0x2a>
 800dede:	6919      	ldr	r1, [r3, #16]
 800dee0:	6101      	str	r1, [r0, #16]
 800dee2:	2200      	movs	r2, #0
 800dee4:	6184      	str	r4, [r0, #24]
 800dee6:	8287      	strh	r7, [r0, #20]
 800dee8:	60c6      	str	r6, [r0, #12]
 800deea:	6002      	str	r2, [r0, #0]
 800deec:	6042      	str	r2, [r0, #4]
 800deee:	6082      	str	r2, [r0, #8]
 800def0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800def2:	bf00      	nop
 800def4:	2000dde0 	.word	0x2000dde0

0800def8 <GUI_DEVICE_Unlink>:
 800def8:	f7ff bfb0 	b.w	800de5c <_UnlinkDevice>

0800defc <GUI_DEVICE_Link>:
 800defc:	b510      	push	{r4, lr}
 800defe:	b330      	cbz	r0, 800df4e <GUI_DEVICE_Link+0x52>
 800df00:	6982      	ldr	r2, [r0, #24]
 800df02:	2a01      	cmp	r2, #1
 800df04:	dc23      	bgt.n	800df4e <GUI_DEVICE_Link+0x52>
 800df06:	4919      	ldr	r1, [pc, #100]	; (800df6c <GUI_DEVICE_Link+0x70>)
 800df08:	f851 3022 	ldr.w	r3, [r1, r2, lsl #2]
 800df0c:	b913      	cbnz	r3, 800df14 <GUI_DEVICE_Link+0x18>
 800df0e:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
 800df12:	e01a      	b.n	800df4a <GUI_DEVICE_Link+0x4e>
 800df14:	685c      	ldr	r4, [r3, #4]
 800df16:	b10c      	cbz	r4, 800df1c <GUI_DEVICE_Link+0x20>
 800df18:	4623      	mov	r3, r4
 800df1a:	e7fb      	b.n	800df14 <GUI_DEVICE_Link+0x18>
 800df1c:	68c1      	ldr	r1, [r0, #12]
 800df1e:	680c      	ldr	r4, [r1, #0]
 800df20:	68d9      	ldr	r1, [r3, #12]
 800df22:	6809      	ldr	r1, [r1, #0]
 800df24:	42a1      	cmp	r1, r4
 800df26:	dd03      	ble.n	800df30 <GUI_DEVICE_Link+0x34>
 800df28:	681b      	ldr	r3, [r3, #0]
 800df2a:	2b00      	cmp	r3, #0
 800df2c:	d1f8      	bne.n	800df20 <GUI_DEVICE_Link+0x24>
 800df2e:	e00e      	b.n	800df4e <GUI_DEVICE_Link+0x52>
 800df30:	d102      	bne.n	800df38 <GUI_DEVICE_Link+0x3c>
 800df32:	8a84      	ldrh	r4, [r0, #20]
 800df34:	2c01      	cmp	r4, #1
 800df36:	d011      	beq.n	800df5c <GUI_DEVICE_Link+0x60>
 800df38:	6859      	ldr	r1, [r3, #4]
 800df3a:	b199      	cbz	r1, 800df64 <GUI_DEVICE_Link+0x68>
 800df3c:	6008      	str	r0, [r1, #0]
 800df3e:	6041      	str	r1, [r0, #4]
 800df40:	6058      	str	r0, [r3, #4]
 800df42:	4298      	cmp	r0, r3
 800df44:	bf08      	it	eq
 800df46:	2300      	moveq	r3, #0
 800df48:	6003      	str	r3, [r0, #0]
 800df4a:	2000      	movs	r0, #0
 800df4c:	bd10      	pop	{r4, pc}
 800df4e:	2001      	movs	r0, #1
 800df50:	bd10      	pop	{r4, pc}
 800df52:	4623      	mov	r3, r4
 800df54:	68e4      	ldr	r4, [r4, #12]
 800df56:	6824      	ldr	r4, [r4, #0]
 800df58:	428c      	cmp	r4, r1
 800df5a:	dbed      	blt.n	800df38 <GUI_DEVICE_Link+0x3c>
 800df5c:	681c      	ldr	r4, [r3, #0]
 800df5e:	2c00      	cmp	r4, #0
 800df60:	d1f7      	bne.n	800df52 <GUI_DEVICE_Link+0x56>
 800df62:	e7e9      	b.n	800df38 <GUI_DEVICE_Link+0x3c>
 800df64:	4901      	ldr	r1, [pc, #4]	; (800df6c <GUI_DEVICE_Link+0x70>)
 800df66:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
 800df6a:	e7e9      	b.n	800df40 <GUI_DEVICE_Link+0x44>
 800df6c:	2000dde0 	.word	0x2000dde0

0800df70 <GUI_DEVICE_CreateAndLink>:
 800df70:	b538      	push	{r3, r4, r5, lr}
 800df72:	461d      	mov	r5, r3
 800df74:	f7ff ff9a 	bl	800deac <GUI_DEVICE_Create>
 800df78:	4604      	mov	r4, r0
 800df7a:	b148      	cbz	r0, 800df90 <GUI_DEVICE_CreateAndLink+0x20>
 800df7c:	f7ff ffbe 	bl	800defc <GUI_DEVICE_Link>
 800df80:	68e3      	ldr	r3, [r4, #12]
 800df82:	6818      	ldr	r0, [r3, #0]
 800df84:	b920      	cbnz	r0, 800df90 <GUI_DEVICE_CreateAndLink+0x20>
 800df86:	4903      	ldr	r1, [pc, #12]	; (800df94 <GUI_DEVICE_CreateAndLink+0x24>)
 800df88:	3516      	adds	r5, #22
 800df8a:	680a      	ldr	r2, [r1, #0]
 800df8c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800df90:	4620      	mov	r0, r4
 800df92:	bd38      	pop	{r3, r4, r5, pc}
 800df94:	20000270 	.word	0x20000270

0800df98 <_OnExit>:
 800df98:	b510      	push	{r4, lr}
 800df9a:	4b07      	ldr	r3, [pc, #28]	; (800dfb8 <_OnExit+0x20>)
 800df9c:	4807      	ldr	r0, [pc, #28]	; (800dfbc <_OnExit+0x24>)
 800df9e:	2400      	movs	r4, #0
 800dfa0:	4621      	mov	r1, r4
 800dfa2:	2270      	movs	r2, #112	; 0x70
 800dfa4:	601c      	str	r4, [r3, #0]
 800dfa6:	f7fe fb41 	bl	800c62c <GUI__memset>
 800dfaa:	4805      	ldr	r0, [pc, #20]	; (800dfc0 <_OnExit+0x28>)
 800dfac:	4621      	mov	r1, r4
 800dfae:	2208      	movs	r2, #8
 800dfb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800dfb4:	f7fe bb3a 	b.w	800c62c <GUI__memset>
 800dfb8:	2000d968 	.word	0x2000d968
 800dfbc:	2000d8f0 	.word	0x2000d8f0
 800dfc0:	2000dde0 	.word	0x2000dde0

0800dfc4 <_InitContext.constprop.0>:
 800dfc4:	b538      	push	{r3, r4, r5, lr}
 800dfc6:	4d19      	ldr	r5, [pc, #100]	; (800e02c <_InitContext.constprop.0+0x68>)
 800dfc8:	4c19      	ldr	r4, [pc, #100]	; (800e030 <_InitContext.constprop.0+0x6c>)
 800dfca:	682b      	ldr	r3, [r5, #0]
 800dfcc:	1d1a      	adds	r2, r3, #4
 800dfce:	7c59      	ldrb	r1, [r3, #17]
 800dfd0:	63da      	str	r2, [r3, #60]	; 0x3c
 800dfd2:	f103 0008 	add.w	r0, r3, #8
 800dfd6:	639b      	str	r3, [r3, #56]	; 0x38
 800dfd8:	641b      	str	r3, [r3, #64]	; 0x40
 800dfda:	4b16      	ldr	r3, [pc, #88]	; (800e034 <_InitContext.constprop.0+0x70>)
 800dfdc:	6160      	str	r0, [r4, #20]
 800dfde:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800dfe2:	68c2      	ldr	r2, [r0, #12]
 800dfe4:	f104 0108 	add.w	r1, r4, #8
 800dfe8:	6b13      	ldr	r3, [r2, #48]	; 0x30
 800dfea:	4798      	blx	r3
 800dfec:	4912      	ldr	r1, [pc, #72]	; (800e038 <_InitContext.constprop.0+0x74>)
 800dfee:	4813      	ldr	r0, [pc, #76]	; (800e03c <_InitContext.constprop.0+0x78>)
 800dff0:	682b      	ldr	r3, [r5, #0]
 800dff2:	680a      	ldr	r2, [r1, #0]
 800dff4:	6660      	str	r0, [r4, #100]	; 0x64
 800dff6:	3308      	adds	r3, #8
 800dff8:	2001      	movs	r0, #1
 800dffa:	6163      	str	r3, [r4, #20]
 800dffc:	61e2      	str	r2, [r4, #28]
 800dffe:	7620      	strb	r0, [r4, #24]
 800e000:	f7fa fbb0 	bl	8008764 <WM_GetDesktopWindow>
 800e004:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 800e008:	2103      	movs	r1, #3
 800e00a:	64a0      	str	r0, [r4, #72]	; 0x48
 800e00c:	2000      	movs	r0, #0
 800e00e:	f884 1068 	strb.w	r1, [r4, #104]	; 0x68
 800e012:	6322      	str	r2, [r4, #48]	; 0x30
 800e014:	6362      	str	r2, [r4, #52]	; 0x34
 800e016:	f7fe fac3 	bl	800c5a0 <LCD_SetBkColor>
 800e01a:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 800e01e:	f7fe fac7 	bl	800c5b0 <LCD_SetColor>
 800e022:	4807      	ldr	r0, [pc, #28]	; (800e040 <_InitContext.constprop.0+0x7c>)
 800e024:	4b07      	ldr	r3, [pc, #28]	; (800e044 <_InitContext.constprop.0+0x80>)
 800e026:	6018      	str	r0, [r3, #0]
 800e028:	bd38      	pop	{r3, r4, r5, pc}
 800e02a:	bf00      	nop
 800e02c:	20000270 	.word	0x20000270
 800e030:	2000d8f0 	.word	0x2000d8f0
 800e034:	2000dde0 	.word	0x2000dde0
 800e038:	20000274 	.word	0x20000274
 800e03c:	0802d160 	.word	0x0802d160
 800e040:	0802e400 	.word	0x0802e400
 800e044:	2000dddc 	.word	0x2000dddc

0800e048 <GUI_ClearRect>:
 800e048:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800e04c:	4607      	mov	r7, r0
 800e04e:	2004      	movs	r0, #4
 800e050:	469a      	mov	sl, r3
 800e052:	460e      	mov	r6, r1
 800e054:	4691      	mov	r9, r2
 800e056:	f7fd ff59 	bl	800bf0c <LCD_SetDrawMode>
 800e05a:	4b13      	ldr	r3, [pc, #76]	; (800e0a8 <GUI_ClearRect+0x60>)
 800e05c:	681c      	ldr	r4, [r3, #0]
 800e05e:	4680      	mov	r8, r0
 800e060:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 800e062:	6d20      	ldr	r0, [r4, #80]	; 0x50
 800e064:	197f      	adds	r7, r7, r5
 800e066:	1836      	adds	r6, r6, r0
 800e068:	eb0a 0400 	add.w	r4, sl, r0
 800e06c:	444d      	add	r5, r9
 800e06e:	4668      	mov	r0, sp
 800e070:	f8ad 7000 	strh.w	r7, [sp]
 800e074:	f8ad 5004 	strh.w	r5, [sp, #4]
 800e078:	f8ad 6002 	strh.w	r6, [sp, #2]
 800e07c:	f8ad 4006 	strh.w	r4, [sp, #6]
 800e080:	f7fb facc 	bl	800961c <WM__InitIVRSearch>
 800e084:	b920      	cbnz	r0, 800e090 <GUI_ClearRect+0x48>
 800e086:	4640      	mov	r0, r8
 800e088:	f7fd ff40 	bl	800bf0c <LCD_SetDrawMode>
 800e08c:	e8bd 87fc 	ldmia.w	sp!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
 800e090:	4638      	mov	r0, r7
 800e092:	4631      	mov	r1, r6
 800e094:	462a      	mov	r2, r5
 800e096:	4623      	mov	r3, r4
 800e098:	f7fd ffba 	bl	800c010 <LCD_FillRect>
 800e09c:	f7fb f9fe 	bl	800949c <WM__GetNextIVR>
 800e0a0:	2800      	cmp	r0, #0
 800e0a2:	d1f5      	bne.n	800e090 <GUI_ClearRect+0x48>
 800e0a4:	e7ef      	b.n	800e086 <GUI_ClearRect+0x3e>
 800e0a6:	bf00      	nop
 800e0a8:	20000270 	.word	0x20000270

0800e0ac <GUI_Clear>:
 800e0ac:	2000      	movs	r0, #0
 800e0ae:	b510      	push	{r4, lr}
 800e0b0:	4601      	mov	r1, r0
 800e0b2:	f7ff f9d9 	bl	800d468 <GUI_GotoXY>
 800e0b6:	4804      	ldr	r0, [pc, #16]	; (800e0c8 <GUI_Clear+0x1c>)
 800e0b8:	f643 72ff 	movw	r2, #16383	; 0x3fff
 800e0bc:	4601      	mov	r1, r0
 800e0be:	4613      	mov	r3, r2
 800e0c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e0c4:	f7ff bfc0 	b.w	800e048 <GUI_ClearRect>
 800e0c8:	ffffc001 	.word	0xffffc001

0800e0cc <GUI__RegisterExit>:
 800e0cc:	b480      	push	{r7}
 800e0ce:	b083      	sub	sp, #12
 800e0d0:	af00      	add	r7, sp, #0
 800e0d2:	6078      	str	r0, [r7, #4]
 800e0d4:	f64d 03ec 	movw	r3, #55532	; 0xd8ec
 800e0d8:	f2c2 0300 	movt	r3, #8192	; 0x2000
 800e0dc:	681a      	ldr	r2, [r3, #0]
 800e0de:	687b      	ldr	r3, [r7, #4]
 800e0e0:	605a      	str	r2, [r3, #4]
 800e0e2:	f64d 03ec 	movw	r3, #55532	; 0xd8ec
 800e0e6:	f2c2 0300 	movt	r3, #8192	; 0x2000
 800e0ea:	687a      	ldr	r2, [r7, #4]
 800e0ec:	601a      	str	r2, [r3, #0]
 800e0ee:	f107 070c 	add.w	r7, r7, #12
 800e0f2:	46bd      	mov	sp, r7
 800e0f4:	bc80      	pop	{r7}
 800e0f6:	4770      	bx	lr

0800e0f8 <GUI__Config>:
 800e0f8:	b508      	push	{r3, lr}
 800e0fa:	4b08      	ldr	r3, [pc, #32]	; (800e11c <GUI__Config+0x24>)
 800e0fc:	681a      	ldr	r2, [r3, #0]
 800e0fe:	b962      	cbnz	r2, 800e11a <GUI__Config+0x22>
 800e100:	2001      	movs	r0, #1
 800e102:	6018      	str	r0, [r3, #0]
 800e104:	f7f4 f9cc 	bl	80024a0 <GUI_X_Config>
 800e108:	f7f4 f95a 	bl	80023c0 <LCD_X_Config>
 800e10c:	4804      	ldr	r0, [pc, #16]	; (800e120 <GUI__Config+0x28>)
 800e10e:	4905      	ldr	r1, [pc, #20]	; (800e124 <GUI__Config+0x2c>)
 800e110:	6001      	str	r1, [r0, #0]
 800e112:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800e116:	f7ff bfd9 	b.w	800e0cc <GUI__RegisterExit>
 800e11a:	bd08      	pop	{r3, pc}
 800e11c:	2000d968 	.word	0x2000d968
 800e120:	2000d960 	.word	0x2000d960
 800e124:	0800df99 	.word	0x0800df99

0800e128 <GUI_Init>:
 800e128:	b580      	push	{r7, lr}
 800e12a:	b082      	sub	sp, #8
 800e12c:	af00      	add	r7, sp, #0
 800e12e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800e132:	f2ce 0300 	movt	r3, #57344	; 0xe000
 800e136:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800e13a:	f2ce 0200 	movt	r2, #57344	; 0xe000
 800e13e:	6812      	ldr	r2, [r2, #0]
 800e140:	f022 0201 	bic.w	r2, r2, #1
 800e144:	601a      	str	r2, [r3, #0]
 800e146:	f243 0308 	movw	r3, #12296	; 0x3008
 800e14a:	f2c4 0302 	movt	r3, #16386	; 0x4002
 800e14e:	f04f 0201 	mov.w	r2, #1
 800e152:	601a      	str	r2, [r3, #0]
 800e154:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 800e158:	f2c4 0302 	movt	r3, #16386	; 0x4002
 800e15c:	f24a 52c2 	movw	r2, #42434	; 0xa5c2
 800e160:	f2cf 4207 	movt	r2, #62471	; 0xf407
 800e164:	601a      	str	r2, [r3, #0]
 800e166:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 800e16a:	f2c4 0302 	movt	r3, #16386	; 0x4002
 800e16e:	681a      	ldr	r2, [r3, #0]
 800e170:	f24b 53cd 	movw	r3, #46541	; 0xb5cd
 800e174:	f2cb 53e8 	movt	r3, #46568	; 0xb5e8
 800e178:	429a      	cmp	r2, r3
 800e17a:	d000      	beq.n	800e17e <GUI_Init+0x56>
 800e17c:	e7fe      	b.n	800e17c <GUI_Init+0x54>
 800e17e:	f7ff ffbb 	bl	800e0f8 <GUI__Config>
 800e182:	f64d 53be 	movw	r3, #56766	; 0xddbe
 800e186:	f2c2 0300 	movt	r3, #8192	; 0x2000
 800e18a:	f04f 022e 	mov.w	r2, #46	; 0x2e
 800e18e:	701a      	strb	r2, [r3, #0]
 800e190:	f7f4 f98e 	bl	80024b0 <GUI_X_Init>
 800e194:	f7ff ff16 	bl	800dfc4 <_InitContext.constprop.0>
 800e198:	f7fe f95e 	bl	800c458 <emWin_LCD_Init>
 800e19c:	6078      	str	r0, [r7, #4]
 800e19e:	f04f 0000 	mov.w	r0, #0
 800e1a2:	f04f 0100 	mov.w	r1, #0
 800e1a6:	f004 fc59 	bl	8012a5c <GUI_SetOrg>
 800e1aa:	f7fb fc79 	bl	8009aa0 <WM_Init>
 800e1ae:	687b      	ldr	r3, [r7, #4]
 800e1b0:	4618      	mov	r0, r3
 800e1b2:	f107 0708 	add.w	r7, r7, #8
 800e1b6:	46bd      	mov	sp, r7
 800e1b8:	bd80      	pop	{r7, pc}
 800e1ba:	bf00      	nop

0800e1bc <GUIPROP__FindChar>:
 800e1bc:	b138      	cbz	r0, 800e1ce <GUIPROP__FindChar+0x12>
 800e1be:	8803      	ldrh	r3, [r0, #0]
 800e1c0:	428b      	cmp	r3, r1
 800e1c2:	d802      	bhi.n	800e1ca <GUIPROP__FindChar+0xe>
 800e1c4:	8842      	ldrh	r2, [r0, #2]
 800e1c6:	428a      	cmp	r2, r1
 800e1c8:	d201      	bcs.n	800e1ce <GUIPROP__FindChar+0x12>
 800e1ca:	6880      	ldr	r0, [r0, #8]
 800e1cc:	e7f6      	b.n	800e1bc <GUIPROP__FindChar>
 800e1ce:	4770      	bx	lr

0800e1d0 <GUIPROP_DispChar>:
 800e1d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e1d4:	4c38      	ldr	r4, [pc, #224]	; (800e2b8 <GUIPROP_DispChar+0xe8>)
 800e1d6:	6823      	ldr	r3, [r4, #0]
 800e1d8:	4605      	mov	r5, r0
 800e1da:	69d8      	ldr	r0, [r3, #28]
 800e1dc:	f9b3 902a 	ldrsh.w	r9, [r3, #42]	; 0x2a
 800e1e0:	69c0      	ldr	r0, [r0, #28]
 800e1e2:	b089      	sub	sp, #36	; 0x24
 800e1e4:	4629      	mov	r1, r5
 800e1e6:	f7ff ffe9 	bl	800e1bc <GUIPROP__FindChar>
 800e1ea:	2800      	cmp	r0, #0
 800e1ec:	d061      	beq.n	800e2b2 <GUIPROP_DispChar+0xe2>
 800e1ee:	f8b0 8000 	ldrh.w	r8, [r0]
 800e1f2:	6847      	ldr	r7, [r0, #4]
 800e1f4:	ebc8 0805 	rsb	r8, r8, r5
 800e1f8:	eb07 06c8 	add.w	r6, r7, r8, lsl #3
 800e1fc:	4648      	mov	r0, r9
 800e1fe:	f896 b002 	ldrb.w	fp, [r6, #2]
 800e202:	f7fd fe83 	bl	800bf0c <LCD_SetDrawMode>
 800e206:	6825      	ldr	r5, [r4, #0]
 800e208:	f817 2038 	ldrb.w	r2, [r7, r8, lsl #3]
 800e20c:	f8d5 e01c 	ldr.w	lr, [r5, #28]
 800e210:	f9b5 1024 	ldrsh.w	r1, [r5, #36]	; 0x24
 800e214:	f89e c01a 	ldrb.w	ip, [lr, #26]
 800e218:	f89e 3018 	ldrb.w	r3, [lr, #24]
 800e21c:	4682      	mov	sl, r0
 800e21e:	f9b5 0022 	ldrsh.w	r0, [r5, #34]	; 0x22
 800e222:	f8cd c000 	str.w	ip, [sp]
 800e226:	f89e e01b 	ldrb.w	lr, [lr, #27]
 800e22a:	f8cd b00c 	str.w	fp, [sp, #12]
 800e22e:	f04f 0c01 	mov.w	ip, #1
 800e232:	f8cd e004 	str.w	lr, [sp, #4]
 800e236:	f8cd c008 	str.w	ip, [sp, #8]
 800e23a:	9306      	str	r3, [sp, #24]
 800e23c:	6873      	ldr	r3, [r6, #4]
 800e23e:	9304      	str	r3, [sp, #16]
 800e240:	6bad      	ldr	r5, [r5, #56]	; 0x38
 800e242:	9b06      	ldr	r3, [sp, #24]
 800e244:	9505      	str	r5, [sp, #20]
 800e246:	f7fd ffe9 	bl	800c21c <LCD_DrawBitmap>
 800e24a:	6821      	ldr	r1, [r4, #0]
 800e24c:	69ca      	ldr	r2, [r1, #28]
 800e24e:	f892 b019 	ldrb.w	fp, [r2, #25]
 800e252:	7e10      	ldrb	r0, [r2, #24]
 800e254:	4583      	cmp	fp, r0
 800e256:	d920      	bls.n	800e29a <GUIPROP_DispChar+0xca>
 800e258:	f1b9 0f02 	cmp.w	r9, #2
 800e25c:	7ed5      	ldrb	r5, [r2, #27]
 800e25e:	d01c      	beq.n	800e29a <GUIPROP_DispChar+0xca>
 800e260:	9007      	str	r0, [sp, #28]
 800e262:	f004 fc38 	bl	8012ad6 <GUI_GetColor>
 800e266:	4681      	mov	r9, r0
 800e268:	f004 fc2e 	bl	8012ac8 <GUI_GetBkColor>
 800e26c:	f7fe ff6a 	bl	800d144 <GUI_SetColor>
 800e270:	6824      	ldr	r4, [r4, #0]
 800e272:	f817 7038 	ldrb.w	r7, [r7, r8, lsl #3]
 800e276:	69e1      	ldr	r1, [r4, #28]
 800e278:	f9b4 3024 	ldrsh.w	r3, [r4, #36]	; 0x24
 800e27c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800e280:	7eca      	ldrb	r2, [r1, #27]
 800e282:	9907      	ldr	r1, [sp, #28]
 800e284:	fb07 0202 	mla	r2, r7, r2, r0
 800e288:	fb01 3105 	mla	r1, r1, r5, r3
 800e28c:	fb0b 3305 	mla	r3, fp, r5, r3
 800e290:	f7fd febe 	bl	800c010 <LCD_FillRect>
 800e294:	4648      	mov	r0, r9
 800e296:	f7fe ff55 	bl	800d144 <GUI_SetColor>
 800e29a:	4650      	mov	r0, sl
 800e29c:	f7fd fe36 	bl	800bf0c <LCD_SetDrawMode>
 800e2a0:	4805      	ldr	r0, [pc, #20]	; (800e2b8 <GUIPROP_DispChar+0xe8>)
 800e2a2:	6803      	ldr	r3, [r0, #0]
 800e2a4:	7870      	ldrb	r0, [r6, #1]
 800e2a6:	69da      	ldr	r2, [r3, #28]
 800e2a8:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800e2aa:	7e92      	ldrb	r2, [r2, #26]
 800e2ac:	fb00 1202 	mla	r2, r0, r2, r1
 800e2b0:	845a      	strh	r2, [r3, #34]	; 0x22
 800e2b2:	b009      	add	sp, #36	; 0x24
 800e2b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e2b8:	20000270 	.word	0x20000270

0800e2bc <GUIPROP_GetCharDistX>:
 800e2bc:	4b0d      	ldr	r3, [pc, #52]	; (800e2f4 <GUIPROP_GetCharDistX+0x38>)
 800e2be:	b570      	push	{r4, r5, r6, lr}
 800e2c0:	4606      	mov	r6, r0
 800e2c2:	6818      	ldr	r0, [r3, #0]
 800e2c4:	69c5      	ldr	r5, [r0, #28]
 800e2c6:	460c      	mov	r4, r1
 800e2c8:	69e8      	ldr	r0, [r5, #28]
 800e2ca:	4631      	mov	r1, r6
 800e2cc:	f7ff ff76 	bl	800e1bc <GUIPROP__FindChar>
 800e2d0:	b170      	cbz	r0, 800e2f0 <GUIPROP_GetCharDistX+0x34>
 800e2d2:	8801      	ldrh	r1, [r0, #0]
 800e2d4:	6842      	ldr	r2, [r0, #4]
 800e2d6:	1a76      	subs	r6, r6, r1
 800e2d8:	eb02 03c6 	add.w	r3, r2, r6, lsl #3
 800e2dc:	7ea9      	ldrb	r1, [r5, #26]
 800e2de:	7858      	ldrb	r0, [r3, #1]
 800e2e0:	fb10 f001 	smulbb	r0, r0, r1
 800e2e4:	b124      	cbz	r4, 800e2f0 <GUIPROP_GetCharDistX+0x34>
 800e2e6:	f812 2036 	ldrb.w	r2, [r2, r6, lsl #3]
 800e2ea:	fb12 f301 	smulbb	r3, r2, r1
 800e2ee:	6023      	str	r3, [r4, #0]
 800e2f0:	bd70      	pop	{r4, r5, r6, pc}
 800e2f2:	bf00      	nop
 800e2f4:	20000270 	.word	0x20000270

0800e2f8 <GUIPROP_GetFontInfo>:
 800e2f8:	2301      	movs	r3, #1
 800e2fa:	800b      	strh	r3, [r1, #0]
 800e2fc:	4770      	bx	lr

0800e2fe <GUIPROP_IsInFont>:
 800e2fe:	b508      	push	{r3, lr}
 800e300:	69c0      	ldr	r0, [r0, #28]
 800e302:	f7ff ff5b 	bl	800e1bc <GUIPROP__FindChar>
 800e306:	3000      	adds	r0, #0
 800e308:	bf18      	it	ne
 800e30a:	2001      	movne	r0, #1
 800e30c:	bd08      	pop	{r3, pc}
	...

0800e310 <GUIMONO_DispChar>:
 800e310:	4b52      	ldr	r3, [pc, #328]	; (800e45c <GUIMONO_DispChar+0x14c>)
 800e312:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e316:	681b      	ldr	r3, [r3, #0]
 800e318:	69d9      	ldr	r1, [r3, #28]
 800e31a:	8c5f      	ldrh	r7, [r3, #34]	; 0x22
 800e31c:	69cc      	ldr	r4, [r1, #28]
 800e31e:	8c9d      	ldrh	r5, [r3, #36]	; 0x24
 800e320:	89a2      	ldrh	r2, [r4, #12]
 800e322:	4290      	cmp	r0, r2
 800e324:	b08b      	sub	sp, #44	; 0x2c
 800e326:	d308      	bcc.n	800e33a <GUIMONO_DispChar+0x2a>
 800e328:	89e6      	ldrh	r6, [r4, #14]
 800e32a:	4286      	cmp	r6, r0
 800e32c:	d305      	bcc.n	800e33a <GUIMONO_DispChar+0x2a>
 800e32e:	f8d4 9000 	ldr.w	r9, [r4]
 800e332:	1a82      	subs	r2, r0, r2
 800e334:	f04f 3bff 	mov.w	fp, #4294967295
 800e338:	e015      	b.n	800e366 <GUIMONO_DispChar+0x56>
 800e33a:	68a2      	ldr	r2, [r4, #8]
 800e33c:	f8d4 9004 	ldr.w	r9, [r4, #4]
 800e340:	2a00      	cmp	r2, #0
 800e342:	f000 8081 	beq.w	800e448 <GUIMONO_DispChar+0x138>
 800e346:	8816      	ldrh	r6, [r2, #0]
 800e348:	42b0      	cmp	r0, r6
 800e34a:	d37d      	bcc.n	800e448 <GUIMONO_DispChar+0x138>
 800e34c:	f8b2 c002 	ldrh.w	ip, [r2, #2]
 800e350:	4584      	cmp	ip, r0
 800e352:	d379      	bcc.n	800e448 <GUIMONO_DispChar+0x138>
 800e354:	6852      	ldr	r2, [r2, #4]
 800e356:	1b80      	subs	r0, r0, r6
 800e358:	b280      	uxth	r0, r0
 800e35a:	eb02 0680 	add.w	r6, r2, r0, lsl #2
 800e35e:	f932 2020 	ldrsh.w	r2, [r2, r0, lsl #2]
 800e362:	f9b6 b002 	ldrsh.w	fp, [r6, #2]
 800e366:	1c50      	adds	r0, r2, #1
 800e368:	d06e      	beq.n	800e448 <GUIMONO_DispChar+0x138>
 800e36a:	f8b3 a02a 	ldrh.w	sl, [r3, #42]	; 0x2a
 800e36e:	f891 8018 	ldrb.w	r8, [r1, #24]
 800e372:	7ca6      	ldrb	r6, [r4, #18]
 800e374:	fa0f f38a 	sxth.w	r3, sl
 800e378:	fb18 f106 	smulbb	r1, r8, r6
 800e37c:	4618      	mov	r0, r3
 800e37e:	7c26      	ldrb	r6, [r4, #16]
 800e380:	9107      	str	r1, [sp, #28]
 800e382:	9308      	str	r3, [sp, #32]
 800e384:	9206      	str	r2, [sp, #24]
 800e386:	f7fd fdc1 	bl	800bf0c <LCD_SetDrawMode>
 800e38a:	9009      	str	r0, [sp, #36]	; 0x24
 800e38c:	4833      	ldr	r0, [pc, #204]	; (800e45c <GUIMONO_DispChar+0x14c>)
 800e38e:	6803      	ldr	r3, [r0, #0]
 800e390:	69da      	ldr	r2, [r3, #28]
 800e392:	7e91      	ldrb	r1, [r2, #26]
 800e394:	9100      	str	r1, [sp, #0]
 800e396:	7ed0      	ldrb	r0, [r2, #27]
 800e398:	2201      	movs	r2, #1
 800e39a:	9001      	str	r0, [sp, #4]
 800e39c:	9202      	str	r2, [sp, #8]
 800e39e:	7ca1      	ldrb	r1, [r4, #18]
 800e3a0:	9806      	ldr	r0, [sp, #24]
 800e3a2:	9a07      	ldr	r2, [sp, #28]
 800e3a4:	9103      	str	r1, [sp, #12]
 800e3a6:	fb02 9100 	mla	r1, r2, r0, r9
 800e3aa:	9104      	str	r1, [sp, #16]
 800e3ac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e3ae:	b23f      	sxth	r7, r7
 800e3b0:	b22d      	sxth	r5, r5
 800e3b2:	9305      	str	r3, [sp, #20]
 800e3b4:	4638      	mov	r0, r7
 800e3b6:	4629      	mov	r1, r5
 800e3b8:	4632      	mov	r2, r6
 800e3ba:	4643      	mov	r3, r8
 800e3bc:	f7fd ff2e 	bl	800c21c <LCD_DrawBitmap>
 800e3c0:	f1bb 3fff 	cmp.w	fp, #4294967295
 800e3c4:	d01b      	beq.n	800e3fe <GUIMONO_DispChar+0xee>
 800e3c6:	f04a 0002 	orr.w	r0, sl, #2
 800e3ca:	b200      	sxth	r0, r0
 800e3cc:	f7fd fd9e 	bl	800bf0c <LCD_SetDrawMode>
 800e3d0:	4a22      	ldr	r2, [pc, #136]	; (800e45c <GUIMONO_DispChar+0x14c>)
 800e3d2:	6813      	ldr	r3, [r2, #0]
 800e3d4:	69d8      	ldr	r0, [r3, #28]
 800e3d6:	7e81      	ldrb	r1, [r0, #26]
 800e3d8:	9100      	str	r1, [sp, #0]
 800e3da:	7ec2      	ldrb	r2, [r0, #27]
 800e3dc:	2001      	movs	r0, #1
 800e3de:	9201      	str	r2, [sp, #4]
 800e3e0:	9002      	str	r0, [sp, #8]
 800e3e2:	9a07      	ldr	r2, [sp, #28]
 800e3e4:	7ca1      	ldrb	r1, [r4, #18]
 800e3e6:	fb02 900b 	mla	r0, r2, fp, r9
 800e3ea:	9103      	str	r1, [sp, #12]
 800e3ec:	9004      	str	r0, [sp, #16]
 800e3ee:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e3f0:	4638      	mov	r0, r7
 800e3f2:	9305      	str	r3, [sp, #20]
 800e3f4:	4629      	mov	r1, r5
 800e3f6:	4632      	mov	r2, r6
 800e3f8:	4643      	mov	r3, r8
 800e3fa:	f7fd ff0f 	bl	800c21c <LCD_DrawBitmap>
 800e3fe:	f8df 805c 	ldr.w	r8, [pc, #92]	; 800e45c <GUIMONO_DispChar+0x14c>
 800e402:	f8d8 1000 	ldr.w	r1, [r8]
 800e406:	69c8      	ldr	r0, [r1, #28]
 800e408:	7e42      	ldrb	r2, [r0, #25]
 800e40a:	7e03      	ldrb	r3, [r0, #24]
 800e40c:	429a      	cmp	r2, r3
 800e40e:	d917      	bls.n	800e440 <GUIMONO_DispChar+0x130>
 800e410:	9908      	ldr	r1, [sp, #32]
 800e412:	2902      	cmp	r1, #2
 800e414:	d014      	beq.n	800e440 <GUIMONO_DispChar+0x130>
 800e416:	f08a 0004 	eor.w	r0, sl, #4
 800e41a:	b200      	sxth	r0, r0
 800e41c:	f7fd fd76 	bl	800bf0c <LCD_SetDrawMode>
 800e420:	f8d8 2000 	ldr.w	r2, [r8]
 800e424:	69d3      	ldr	r3, [r2, #28]
 800e426:	f893 e018 	ldrb.w	lr, [r3, #24]
 800e42a:	7ed9      	ldrb	r1, [r3, #27]
 800e42c:	7e9a      	ldrb	r2, [r3, #26]
 800e42e:	7e5b      	ldrb	r3, [r3, #25]
 800e430:	4638      	mov	r0, r7
 800e432:	fb0e 5101 	mla	r1, lr, r1, r5
 800e436:	fb06 7202 	mla	r2, r6, r2, r7
 800e43a:	18eb      	adds	r3, r5, r3
 800e43c:	f7fd fde8 	bl	800c010 <LCD_FillRect>
 800e440:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e442:	b2c0      	uxtb	r0, r0
 800e444:	f7fd fd62 	bl	800bf0c <LCD_SetDrawMode>
 800e448:	4904      	ldr	r1, [pc, #16]	; (800e45c <GUIMONO_DispChar+0x14c>)
 800e44a:	7c60      	ldrb	r0, [r4, #17]
 800e44c:	680b      	ldr	r3, [r1, #0]
 800e44e:	8c5a      	ldrh	r2, [r3, #34]	; 0x22
 800e450:	1881      	adds	r1, r0, r2
 800e452:	8459      	strh	r1, [r3, #34]	; 0x22
 800e454:	b00b      	add	sp, #44	; 0x2c
 800e456:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e45a:	bf00      	nop
 800e45c:	20000270 	.word	0x20000270

0800e460 <GUIMONO_GetCharDistX>:
 800e460:	4b04      	ldr	r3, [pc, #16]	; (800e474 <GUIMONO_GetCharDistX+0x14>)
 800e462:	6818      	ldr	r0, [r3, #0]
 800e464:	69c2      	ldr	r2, [r0, #28]
 800e466:	69d3      	ldr	r3, [r2, #28]
 800e468:	b109      	cbz	r1, 800e46e <GUIMONO_GetCharDistX+0xe>
 800e46a:	7c18      	ldrb	r0, [r3, #16]
 800e46c:	6008      	str	r0, [r1, #0]
 800e46e:	7c58      	ldrb	r0, [r3, #17]
 800e470:	4770      	bx	lr
 800e472:	bf00      	nop
 800e474:	20000270 	.word	0x20000270

0800e478 <GUIMONO_GetFontInfo>:
 800e478:	2302      	movs	r3, #2
 800e47a:	800b      	strh	r3, [r1, #0]
 800e47c:	4770      	bx	lr

0800e47e <GUIMONO_IsInFont>:
 800e47e:	69c3      	ldr	r3, [r0, #28]
 800e480:	899a      	ldrh	r2, [r3, #12]
 800e482:	428a      	cmp	r2, r1
 800e484:	d802      	bhi.n	800e48c <GUIMONO_IsInFont+0xe>
 800e486:	89d8      	ldrh	r0, [r3, #14]
 800e488:	4288      	cmp	r0, r1
 800e48a:	d20f      	bcs.n	800e4ac <GUIMONO_IsInFont+0x2e>
 800e48c:	689b      	ldr	r3, [r3, #8]
 800e48e:	b90b      	cbnz	r3, 800e494 <GUIMONO_IsInFont+0x16>
 800e490:	2000      	movs	r0, #0
 800e492:	4770      	bx	lr
 800e494:	881a      	ldrh	r2, [r3, #0]
 800e496:	4291      	cmp	r1, r2
 800e498:	d3fa      	bcc.n	800e490 <GUIMONO_IsInFont+0x12>
 800e49a:	8858      	ldrh	r0, [r3, #2]
 800e49c:	4288      	cmp	r0, r1
 800e49e:	d3f7      	bcc.n	800e490 <GUIMONO_IsInFont+0x12>
 800e4a0:	1a89      	subs	r1, r1, r2
 800e4a2:	685b      	ldr	r3, [r3, #4]
 800e4a4:	f933 2021 	ldrsh.w	r2, [r3, r1, lsl #2]
 800e4a8:	2a00      	cmp	r2, #0
 800e4aa:	dbf1      	blt.n	800e490 <GUIMONO_IsInFont+0x12>
 800e4ac:	2001      	movs	r0, #1
 800e4ae:	4770      	bx	lr

0800e4b0 <_Log2VisBuffered>:
 800e4b0:	4770      	bx	lr
	...

0800e4b4 <_DispLine>:
 800e4b4:	b513      	push	{r0, r1, r4, lr}
 800e4b6:	4614      	mov	r4, r2
 800e4b8:	ab02      	add	r3, sp, #8
 800e4ba:	4a1b      	ldr	r2, [pc, #108]	; (800e528 <_DispLine+0x74>)
 800e4bc:	f843 1d08 	str.w	r1, [r3, #-8]!
 800e4c0:	9001      	str	r0, [sp, #4]
 800e4c2:	4669      	mov	r1, sp
 800e4c4:	6813      	ldr	r3, [r2, #0]
 800e4c6:	4798      	blx	r3
 800e4c8:	9001      	str	r0, [sp, #4]
 800e4ca:	4818      	ldr	r0, [pc, #96]	; (800e52c <_DispLine+0x78>)
 800e4cc:	6801      	ldr	r1, [r0, #0]
 800e4ce:	6948      	ldr	r0, [r1, #20]
 800e4d0:	b960      	cbnz	r0, 800e4ec <_DispLine+0x38>
 800e4d2:	2001      	movs	r0, #1
 800e4d4:	f7fe f988 	bl	800c7e8 <GUI__ManageCache>
 800e4d8:	4a14      	ldr	r2, [pc, #80]	; (800e52c <_DispLine+0x78>)
 800e4da:	6813      	ldr	r3, [r2, #0]
 800e4dc:	69d8      	ldr	r0, [r3, #28]
 800e4de:	6941      	ldr	r1, [r0, #20]
 800e4e0:	b1c1      	cbz	r1, 800e514 <_DispLine+0x60>
 800e4e2:	688b      	ldr	r3, [r1, #8]
 800e4e4:	9801      	ldr	r0, [sp, #4]
 800e4e6:	9900      	ldr	r1, [sp, #0]
 800e4e8:	4798      	blx	r3
 800e4ea:	e018      	b.n	800e51e <_DispLine+0x6a>
 800e4ec:	4621      	mov	r1, r4
 800e4ee:	f7fe fe83 	bl	800d1f8 <GUI_RectsIntersect>
 800e4f2:	2800      	cmp	r0, #0
 800e4f4:	d1ed      	bne.n	800e4d2 <_DispLine+0x1e>
 800e4f6:	e015      	b.n	800e524 <_DispLine+0x70>
 800e4f8:	a801      	add	r0, sp, #4
 800e4fa:	f004 fa7f 	bl	80129fc <GUI_UC__GetCharCodeInc>
 800e4fe:	490b      	ldr	r1, [pc, #44]	; (800e52c <_DispLine+0x78>)
 800e500:	680a      	ldr	r2, [r1, #0]
 800e502:	69d3      	ldr	r3, [r2, #28]
 800e504:	6819      	ldr	r1, [r3, #0]
 800e506:	4604      	mov	r4, r0
 800e508:	4788      	blx	r1
 800e50a:	4809      	ldr	r0, [pc, #36]	; (800e530 <_DispLine+0x7c>)
 800e50c:	6802      	ldr	r2, [r0, #0]
 800e50e:	b10a      	cbz	r2, 800e514 <_DispLine+0x60>
 800e510:	4620      	mov	r0, r4
 800e512:	4790      	blx	r2
 800e514:	9a00      	ldr	r2, [sp, #0]
 800e516:	1e53      	subs	r3, r2, #1
 800e518:	2b00      	cmp	r3, #0
 800e51a:	9300      	str	r3, [sp, #0]
 800e51c:	daec      	bge.n	800e4f8 <_DispLine+0x44>
 800e51e:	2000      	movs	r0, #0
 800e520:	f7fe f962 	bl	800c7e8 <GUI__ManageCache>
 800e524:	bd1c      	pop	{r2, r3, r4, pc}
 800e526:	bf00      	nop
 800e528:	2000027c 	.word	0x2000027c
 800e52c:	20000270 	.word	0x20000270
 800e530:	2000ddd4 	.word	0x2000ddd4

0800e534 <GUI__GetLineNumChars>:
 800e534:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e536:	460d      	mov	r5, r1
 800e538:	9001      	str	r0, [sp, #4]
 800e53a:	4604      	mov	r4, r0
 800e53c:	b190      	cbz	r0, 800e564 <GUI__GetLineNumChars+0x30>
 800e53e:	4b0a      	ldr	r3, [pc, #40]	; (800e568 <GUI__GetLineNumChars+0x34>)
 800e540:	681a      	ldr	r2, [r3, #0]
 800e542:	69d4      	ldr	r4, [r2, #28]
 800e544:	6964      	ldr	r4, [r4, #20]
 800e546:	b15c      	cbz	r4, 800e560 <GUI__GetLineNumChars+0x2c>
 800e548:	6864      	ldr	r4, [r4, #4]
 800e54a:	b14c      	cbz	r4, 800e560 <GUI__GetLineNumChars+0x2c>
 800e54c:	47a0      	blx	r4
 800e54e:	4604      	mov	r4, r0
 800e550:	e008      	b.n	800e564 <GUI__GetLineNumChars+0x30>
 800e552:	a801      	add	r0, sp, #4
 800e554:	f004 fa52 	bl	80129fc <GUI_UC__GetCharCodeInc>
 800e558:	b120      	cbz	r0, 800e564 <GUI__GetLineNumChars+0x30>
 800e55a:	280a      	cmp	r0, #10
 800e55c:	d002      	beq.n	800e564 <GUI__GetLineNumChars+0x30>
 800e55e:	3401      	adds	r4, #1
 800e560:	42ac      	cmp	r4, r5
 800e562:	dbf6      	blt.n	800e552 <GUI__GetLineNumChars+0x1e>
 800e564:	4620      	mov	r0, r4
 800e566:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 800e568:	20000270 	.word	0x20000270

0800e56c <GUI__GetOverlap>:
 800e56c:	b513      	push	{r0, r1, r4, lr}
 800e56e:	a902      	add	r1, sp, #8
 800e570:	2400      	movs	r4, #0
 800e572:	f841 4d04 	str.w	r4, [r1, #-4]!
 800e576:	f000 f8b3 	bl	800e6e0 <GUI_GetCharDistXEx>
 800e57a:	9b01      	ldr	r3, [sp, #4]
 800e57c:	4283      	cmp	r3, r0
 800e57e:	bfcc      	ite	gt
 800e580:	ebc0 0003 	rsbgt	r0, r0, r3
 800e584:	4620      	movle	r0, r4
 800e586:	bd1c      	pop	{r2, r3, r4, pc}

0800e588 <GUI__GetLineDistX>:
 800e588:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e58a:	4a14      	ldr	r2, [pc, #80]	; (800e5dc <GUI__GetLineDistX+0x54>)
 800e58c:	9001      	str	r0, [sp, #4]
 800e58e:	ab02      	add	r3, sp, #8
 800e590:	6815      	ldr	r5, [r2, #0]
 800e592:	f843 1d08 	str.w	r1, [r3, #-8]!
 800e596:	4669      	mov	r1, sp
 800e598:	47a8      	blx	r5
 800e59a:	4605      	mov	r5, r0
 800e59c:	9001      	str	r0, [sp, #4]
 800e59e:	b1e0      	cbz	r0, 800e5da <GUI__GetLineDistX+0x52>
 800e5a0:	490f      	ldr	r1, [pc, #60]	; (800e5e0 <GUI__GetLineDistX+0x58>)
 800e5a2:	680c      	ldr	r4, [r1, #0]
 800e5a4:	69e3      	ldr	r3, [r4, #28]
 800e5a6:	695c      	ldr	r4, [r3, #20]
 800e5a8:	b124      	cbz	r4, 800e5b4 <GUI__GetLineDistX+0x2c>
 800e5aa:	6824      	ldr	r4, [r4, #0]
 800e5ac:	b114      	cbz	r4, 800e5b4 <GUI__GetLineDistX+0x2c>
 800e5ae:	9900      	ldr	r1, [sp, #0]
 800e5b0:	47a0      	blx	r4
 800e5b2:	e012      	b.n	800e5da <GUI__GetLineDistX+0x52>
 800e5b4:	4625      	mov	r5, r4
 800e5b6:	9800      	ldr	r0, [sp, #0]
 800e5b8:	1e42      	subs	r2, r0, #1
 800e5ba:	2a00      	cmp	r2, #0
 800e5bc:	9200      	str	r2, [sp, #0]
 800e5be:	db07      	blt.n	800e5d0 <GUI__GetLineDistX+0x48>
 800e5c0:	a801      	add	r0, sp, #4
 800e5c2:	f004 fa1b 	bl	80129fc <GUI_UC__GetCharCodeInc>
 800e5c6:	4604      	mov	r4, r0
 800e5c8:	f000 f880 	bl	800e6cc <GUI_GetCharDistX>
 800e5cc:	182d      	adds	r5, r5, r0
 800e5ce:	e7f2      	b.n	800e5b6 <GUI__GetLineDistX+0x2e>
 800e5d0:	4620      	mov	r0, r4
 800e5d2:	f7ff ffcb 	bl	800e56c <GUI__GetOverlap>
 800e5d6:	1828      	adds	r0, r5, r0
 800e5d8:	e7ff      	b.n	800e5da <GUI__GetLineDistX+0x52>
 800e5da:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 800e5dc:	2000027c 	.word	0x2000027c
 800e5e0:	20000270 	.word	0x20000270

0800e5e4 <GUI__DispLine>:
 800e5e4:	4b27      	ldr	r3, [pc, #156]	; (800e684 <GUI__DispLine+0xa0>)
 800e5e6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e5e8:	4605      	mov	r5, r0
 800e5ea:	6818      	ldr	r0, [r3, #0]
 800e5ec:	460c      	mov	r4, r1
 800e5ee:	b160      	cbz	r0, 800e60a <GUI__DispLine+0x26>
 800e5f0:	2000      	movs	r0, #0
 800e5f2:	f7fb f813 	bl	800961c <WM__InitIVRSearch>
 800e5f6:	2800      	cmp	r0, #0
 800e5f8:	d042      	beq.n	800e680 <GUI__DispLine+0x9c>
 800e5fa:	4628      	mov	r0, r5
 800e5fc:	4621      	mov	r1, r4
 800e5fe:	466a      	mov	r2, sp
 800e600:	f7ff ff58 	bl	800e4b4 <_DispLine>
 800e604:	f7fa ff4a 	bl	800949c <WM__GetNextIVR>
 800e608:	e7f5      	b.n	800e5f6 <GUI__DispLine+0x12>
 800e60a:	6810      	ldr	r0, [r2, #0]
 800e60c:	6851      	ldr	r1, [r2, #4]
 800e60e:	466b      	mov	r3, sp
 800e610:	c303      	stmia	r3!, {r0, r1}
 800e612:	491d      	ldr	r1, [pc, #116]	; (800e688 <GUI__DispLine+0xa4>)
 800e614:	f8bd 3000 	ldrh.w	r3, [sp]
 800e618:	6808      	ldr	r0, [r1, #0]
 800e61a:	f8b0 204c 	ldrh.w	r2, [r0, #76]	; 0x4c
 800e61e:	f8b0 0050 	ldrh.w	r0, [r0, #80]	; 0x50
 800e622:	18d1      	adds	r1, r2, r3
 800e624:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e628:	f8ad 1000 	strh.w	r1, [sp]
 800e62c:	18c1      	adds	r1, r0, r3
 800e62e:	f8ad 1002 	strh.w	r1, [sp, #2]
 800e632:	f8bd 1006 	ldrh.w	r1, [sp, #6]
 800e636:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800e63a:	1840      	adds	r0, r0, r1
 800e63c:	18d2      	adds	r2, r2, r3
 800e63e:	f8ad 0006 	strh.w	r0, [sp, #6]
 800e642:	4668      	mov	r0, sp
 800e644:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e648:	f7fa ffe8 	bl	800961c <WM__InitIVRSearch>
 800e64c:	4b0e      	ldr	r3, [pc, #56]	; (800e688 <GUI__DispLine+0xa4>)
 800e64e:	681b      	ldr	r3, [r3, #0]
 800e650:	b940      	cbnz	r0, 800e664 <GUI__DispLine+0x80>
 800e652:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800e654:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800e656:	1a88      	subs	r0, r1, r2
 800e658:	8c99      	ldrh	r1, [r3, #36]	; 0x24
 800e65a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800e65c:	8458      	strh	r0, [r3, #34]	; 0x22
 800e65e:	1a88      	subs	r0, r1, r2
 800e660:	8498      	strh	r0, [r3, #36]	; 0x24
 800e662:	e00d      	b.n	800e680 <GUI__DispLine+0x9c>
 800e664:	f8bd 2000 	ldrh.w	r2, [sp]
 800e668:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800e66c:	845a      	strh	r2, [r3, #34]	; 0x22
 800e66e:	8499      	strh	r1, [r3, #36]	; 0x24
 800e670:	4628      	mov	r0, r5
 800e672:	4621      	mov	r1, r4
 800e674:	466a      	mov	r2, sp
 800e676:	f7ff ff1d 	bl	800e4b4 <_DispLine>
 800e67a:	f7fa ff0f 	bl	800949c <WM__GetNextIVR>
 800e67e:	e7e5      	b.n	800e64c <GUI__DispLine+0x68>
 800e680:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 800e682:	bf00      	nop
 800e684:	2000ddc0 	.word	0x2000ddc0
 800e688:	20000270 	.word	0x20000270

0800e68c <GUI_GetYAdjust>:
 800e68c:	4b0a      	ldr	r3, [pc, #40]	; (800e6b8 <GUI_GetYAdjust+0x2c>)
 800e68e:	6818      	ldr	r0, [r3, #0]
 800e690:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e692:	f002 010c 	and.w	r1, r2, #12
 800e696:	2908      	cmp	r1, #8
 800e698:	d007      	beq.n	800e6aa <GUI_GetYAdjust+0x1e>
 800e69a:	290c      	cmp	r1, #12
 800e69c:	d005      	beq.n	800e6aa <GUI_GetYAdjust+0x1e>
 800e69e:	2904      	cmp	r1, #4
 800e6a0:	d107      	bne.n	800e6b2 <GUI_GetYAdjust+0x26>
 800e6a2:	69c3      	ldr	r3, [r0, #28]
 800e6a4:	7e18      	ldrb	r0, [r3, #24]
 800e6a6:	3801      	subs	r0, #1
 800e6a8:	4770      	bx	lr
 800e6aa:	69c2      	ldr	r2, [r0, #28]
 800e6ac:	7e11      	ldrb	r1, [r2, #24]
 800e6ae:	0848      	lsrs	r0, r1, #1
 800e6b0:	4770      	bx	lr
 800e6b2:	2000      	movs	r0, #0
 800e6b4:	4770      	bx	lr
 800e6b6:	bf00      	nop
 800e6b8:	20000270 	.word	0x20000270

0800e6bc <GUI_GetFontDistY>:
 800e6bc:	4b02      	ldr	r3, [pc, #8]	; (800e6c8 <GUI_GetFontDistY+0xc>)
 800e6be:	6818      	ldr	r0, [r3, #0]
 800e6c0:	69c1      	ldr	r1, [r0, #28]
 800e6c2:	7e48      	ldrb	r0, [r1, #25]
 800e6c4:	4770      	bx	lr
 800e6c6:	bf00      	nop
 800e6c8:	20000270 	.word	0x20000270

0800e6cc <GUI_GetCharDistX>:
 800e6cc:	b508      	push	{r3, lr}
 800e6ce:	4b03      	ldr	r3, [pc, #12]	; (800e6dc <GUI_GetCharDistX+0x10>)
 800e6d0:	6819      	ldr	r1, [r3, #0]
 800e6d2:	69ca      	ldr	r2, [r1, #28]
 800e6d4:	2100      	movs	r1, #0
 800e6d6:	6853      	ldr	r3, [r2, #4]
 800e6d8:	4798      	blx	r3
 800e6da:	bd08      	pop	{r3, pc}
 800e6dc:	20000270 	.word	0x20000270

0800e6e0 <GUI_GetCharDistXEx>:
 800e6e0:	b508      	push	{r3, lr}
 800e6e2:	4b03      	ldr	r3, [pc, #12]	; (800e6f0 <GUI_GetCharDistXEx+0x10>)
 800e6e4:	681a      	ldr	r2, [r3, #0]
 800e6e6:	69d3      	ldr	r3, [r2, #28]
 800e6e8:	685a      	ldr	r2, [r3, #4]
 800e6ea:	4790      	blx	r2
 800e6ec:	bd08      	pop	{r3, pc}
 800e6ee:	bf00      	nop
 800e6f0:	20000270 	.word	0x20000270

0800e6f4 <_PushFreeBlock>:
 800e6f4:	4b07      	ldr	r3, [pc, #28]	; (800e714 <_PushFreeBlock+0x20>)
 800e6f6:	685a      	ldr	r2, [r3, #4]
 800e6f8:	1c51      	adds	r1, r2, #1
 800e6fa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800e6fc:	b510      	push	{r4, lr}
 800e6fe:	6059      	str	r1, [r3, #4]
 800e700:	eb02 04c0 	add.w	r4, r2, r0, lsl #3
 800e704:	6a19      	ldr	r1, [r3, #32]
 800e706:	6061      	str	r1, [r4, #4]
 800e708:	2100      	movs	r1, #0
 800e70a:	f802 1030 	strb.w	r1, [r2, r0, lsl #3]
 800e70e:	6218      	str	r0, [r3, #32]
 800e710:	bd10      	pop	{r4, pc}
 800e712:	bf00      	nop
 800e714:	2000ddf0 	.word	0x2000ddf0

0800e718 <_OnExit>:
 800e718:	b538      	push	{r3, r4, r5, lr}
 800e71a:	4d0b      	ldr	r5, [pc, #44]	; (800e748 <_OnExit+0x30>)
 800e71c:	2400      	movs	r4, #0
 800e71e:	f105 003c 	add.w	r0, r5, #60	; 0x3c
 800e722:	4621      	mov	r1, r4
 800e724:	2280      	movs	r2, #128	; 0x80
 800e726:	f885 4024 	strb.w	r4, [r5, #36]	; 0x24
 800e72a:	f7fd ff7f 	bl	800c62c <GUI__memset>
 800e72e:	4628      	mov	r0, r5
 800e730:	4621      	mov	r1, r4
 800e732:	22bc      	movs	r2, #188	; 0xbc
 800e734:	f7fd ff7a 	bl	800c62c <GUI__memset>
 800e738:	4804      	ldr	r0, [pc, #16]	; (800e74c <_OnExit+0x34>)
 800e73a:	4621      	mov	r1, r4
 800e73c:	220c      	movs	r2, #12
 800e73e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e742:	f7fd bf73 	b.w	800c62c <GUI__memset>
 800e746:	bf00      	nop
 800e748:	2000ddf0 	.word	0x2000ddf0
 800e74c:	2000d96c 	.word	0x2000d96c

0800e750 <_RemoveFreeBlock>:
 800e750:	b510      	push	{r4, lr}
 800e752:	6841      	ldr	r1, [r0, #4]
 800e754:	230f      	movs	r3, #15
 800e756:	4a0c      	ldr	r2, [pc, #48]	; (800e788 <_RemoveFreeBlock+0x38>)
 800e758:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 800e75c:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800e75e:	42a1      	cmp	r1, r4
 800e760:	d202      	bcs.n	800e768 <_RemoveFreeBlock+0x18>
 800e762:	f113 33ff 	adds.w	r3, r3, #4294967295
 800e766:	d2f6      	bcs.n	800e756 <_RemoveFreeBlock+0x6>
 800e768:	6814      	ldr	r4, [r2, #0]
 800e76a:	1a61      	subs	r1, r4, r1
 800e76c:	6011      	str	r1, [r2, #0]
 800e76e:	6882      	ldr	r2, [r0, #8]
 800e770:	68c0      	ldr	r0, [r0, #12]
 800e772:	b102      	cbz	r2, 800e776 <_RemoveFreeBlock+0x26>
 800e774:	6050      	str	r0, [r2, #4]
 800e776:	b108      	cbz	r0, 800e77c <_RemoveFreeBlock+0x2c>
 800e778:	6002      	str	r2, [r0, #0]
 800e77a:	bd10      	pop	{r4, pc}
 800e77c:	4902      	ldr	r1, [pc, #8]	; (800e788 <_RemoveFreeBlock+0x38>)
 800e77e:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 800e782:	641a      	str	r2, [r3, #64]	; 0x40
 800e784:	bd10      	pop	{r4, pc}
 800e786:	bf00      	nop
 800e788:	2000ddf0 	.word	0x2000ddf0

0800e78c <_AddFreeMemory>:
 800e78c:	4b21      	ldr	r3, [pc, #132]	; (800e814 <_AddFreeMemory+0x88>)
 800e78e:	689a      	ldr	r2, [r3, #8]
 800e790:	b570      	push	{r4, r5, r6, lr}
 800e792:	6b5e      	ldr	r6, [r3, #52]	; 0x34
 800e794:	4605      	mov	r5, r0
 800e796:	460c      	mov	r4, r1
 800e798:	1808      	adds	r0, r1, r0
 800e79a:	1e51      	subs	r1, r2, #1
 800e79c:	1872      	adds	r2, r6, r1
 800e79e:	4290      	cmp	r0, r2
 800e7a0:	461e      	mov	r6, r3
 800e7a2:	d805      	bhi.n	800e7b0 <_AddFreeMemory+0x24>
 800e7a4:	5963      	ldr	r3, [r4, r5]
 800e7a6:	b91b      	cbnz	r3, 800e7b0 <_AddFreeMemory+0x24>
 800e7a8:	6841      	ldr	r1, [r0, #4]
 800e7aa:	186d      	adds	r5, r5, r1
 800e7ac:	f7ff ffd0 	bl	800e750 <_RemoveFreeBlock>
 800e7b0:	6b70      	ldr	r0, [r6, #52]	; 0x34
 800e7b2:	4284      	cmp	r4, r0
 800e7b4:	d90a      	bls.n	800e7cc <_AddFreeMemory+0x40>
 800e7b6:	f854 6c04 	ldr.w	r6, [r4, #-4]
 800e7ba:	1ba6      	subs	r6, r4, r6
 800e7bc:	6832      	ldr	r2, [r6, #0]
 800e7be:	b92a      	cbnz	r2, 800e7cc <_AddFreeMemory+0x40>
 800e7c0:	4630      	mov	r0, r6
 800e7c2:	6874      	ldr	r4, [r6, #4]
 800e7c4:	f7ff ffc4 	bl	800e750 <_RemoveFreeBlock>
 800e7c8:	192d      	adds	r5, r5, r4
 800e7ca:	4634      	mov	r4, r6
 800e7cc:	230f      	movs	r3, #15
 800e7ce:	4811      	ldr	r0, [pc, #68]	; (800e814 <_AddFreeMemory+0x88>)
 800e7d0:	eb00 01c3 	add.w	r1, r0, r3, lsl #3
 800e7d4:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800e7d6:	4295      	cmp	r5, r2
 800e7d8:	d202      	bcs.n	800e7e0 <_AddFreeMemory+0x54>
 800e7da:	f113 33ff 	adds.w	r3, r3, #4294967295
 800e7de:	d2f6      	bcs.n	800e7ce <_AddFreeMemory+0x42>
 800e7e0:	eb00 00c3 	add.w	r0, r0, r3, lsl #3
 800e7e4:	1961      	adds	r1, r4, r5
 800e7e6:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800e7e8:	6124      	str	r4, [r4, #16]
 800e7ea:	2000      	movs	r0, #0
 800e7ec:	e884 0021 	stmia.w	r4, {r0, r5}
 800e7f0:	60a2      	str	r2, [r4, #8]
 800e7f2:	f841 5c04 	str.w	r5, [r1, #-4]
 800e7f6:	f104 0108 	add.w	r1, r4, #8
 800e7fa:	b102      	cbz	r2, 800e7fe <_AddFreeMemory+0x72>
 800e7fc:	6051      	str	r1, [r2, #4]
 800e7fe:	60e0      	str	r0, [r4, #12]
 800e800:	4804      	ldr	r0, [pc, #16]	; (800e814 <_AddFreeMemory+0x88>)
 800e802:	6802      	ldr	r2, [r0, #0]
 800e804:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800e808:	6419      	str	r1, [r3, #64]	; 0x40
 800e80a:	18a9      	adds	r1, r5, r2
 800e80c:	6001      	str	r1, [r0, #0]
 800e80e:	4628      	mov	r0, r5
 800e810:	bd70      	pop	{r4, r5, r6, pc}
 800e812:	bf00      	nop
 800e814:	2000ddf0 	.word	0x2000ddf0

0800e818 <_RemoveHoles>:
 800e818:	4b22      	ldr	r3, [pc, #136]	; (800e8a4 <_RemoveHoles+0x8c>)
 800e81a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e81e:	4683      	mov	fp, r0
 800e820:	6898      	ldr	r0, [r3, #8]
 800e822:	6b5c      	ldr	r4, [r3, #52]	; 0x34
 800e824:	f100 3aff 	add.w	sl, r0, #4294967295
 800e828:	44a2      	add	sl, r4
 800e82a:	e894 0028 	ldmia.w	r4, {r3, r5}
 800e82e:	2b00      	cmp	r3, #0
 800e830:	d130      	bne.n	800e894 <_RemoveHoles+0x7c>
 800e832:	eb04 0805 	add.w	r8, r4, r5
 800e836:	45d0      	cmp	r8, sl
 800e838:	d22c      	bcs.n	800e894 <_RemoveHoles+0x7c>
 800e83a:	f854 9005 	ldr.w	r9, [r4, r5]
 800e83e:	f8d8 7004 	ldr.w	r7, [r8, #4]
 800e842:	f1b9 0f00 	cmp.w	r9, #0
 800e846:	d025      	beq.n	800e894 <_RemoveHoles+0x7c>
 800e848:	4e16      	ldr	r6, [pc, #88]	; (800e8a4 <_RemoveHoles+0x8c>)
 800e84a:	6b31      	ldr	r1, [r6, #48]	; 0x30
 800e84c:	f811 2039 	ldrb.w	r2, [r1, r9, lsl #3]
 800e850:	2a01      	cmp	r2, #1
 800e852:	d11f      	bne.n	800e894 <_RemoveHoles+0x7c>
 800e854:	6ab3      	ldr	r3, [r6, #40]	; 0x28
 800e856:	4620      	mov	r0, r4
 800e858:	9301      	str	r3, [sp, #4]
 800e85a:	f7ff ff79 	bl	800e750 <_RemoveFreeBlock>
 800e85e:	f8d8 0000 	ldr.w	r0, [r8]
 800e862:	6b31      	ldr	r1, [r6, #48]	; 0x30
 800e864:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
 800e868:	4620      	mov	r0, r4
 800e86a:	6054      	str	r4, [r2, #4]
 800e86c:	4641      	mov	r1, r8
 800e86e:	463a      	mov	r2, r7
 800e870:	f005 f876 	bl	8013960 <memmove>
 800e874:	9b01      	ldr	r3, [sp, #4]
 800e876:	4599      	cmp	r9, r3
 800e878:	d102      	bne.n	800e880 <_RemoveHoles+0x68>
 800e87a:	6b30      	ldr	r0, [r6, #48]	; 0x30
 800e87c:	1b41      	subs	r1, r0, r5
 800e87e:	6331      	str	r1, [r6, #48]	; 0x30
 800e880:	4628      	mov	r0, r5
 800e882:	19e1      	adds	r1, r4, r7
 800e884:	f7ff ff82 	bl	800e78c <_AddFreeMemory>
 800e888:	f1bb 0f00 	cmp.w	fp, #0
 800e88c:	d001      	beq.n	800e892 <_RemoveHoles+0x7a>
 800e88e:	4583      	cmp	fp, r0
 800e890:	d905      	bls.n	800e89e <_RemoveHoles+0x86>
 800e892:	463d      	mov	r5, r7
 800e894:	1964      	adds	r4, r4, r5
 800e896:	4554      	cmp	r4, sl
 800e898:	d3c7      	bcc.n	800e82a <_RemoveHoles+0x12>
 800e89a:	2001      	movs	r0, #1
 800e89c:	e000      	b.n	800e8a0 <_RemoveHoles+0x88>
 800e89e:	2000      	movs	r0, #0
 800e8a0:	e8bd 8ffe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e8a4:	2000ddf0 	.word	0x2000ddf0

0800e8a8 <GUI_ALLOC_FreeFixedBlock>:
 800e8a8:	b128      	cbz	r0, 800e8b6 <GUI_ALLOC_FreeFixedBlock+0xe>
 800e8aa:	4a03      	ldr	r2, [pc, #12]	; (800e8b8 <GUI_ALLOC_FreeFixedBlock+0x10>)
 800e8ac:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800e8ae:	6003      	str	r3, [r0, #0]
 800e8b0:	b103      	cbz	r3, 800e8b4 <GUI_ALLOC_FreeFixedBlock+0xc>
 800e8b2:	6058      	str	r0, [r3, #4]
 800e8b4:	6390      	str	r0, [r2, #56]	; 0x38
 800e8b6:	4770      	bx	lr
 800e8b8:	2000ddf0 	.word	0x2000ddf0

0800e8bc <GUI_ALLOC_h2p>:
 800e8bc:	b128      	cbz	r0, 800e8ca <GUI_ALLOC_h2p+0xe>
 800e8be:	4b03      	ldr	r3, [pc, #12]	; (800e8cc <GUI_ALLOC_h2p+0x10>)
 800e8c0:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800e8c2:	eb01 00c0 	add.w	r0, r1, r0, lsl #3
 800e8c6:	6840      	ldr	r0, [r0, #4]
 800e8c8:	3008      	adds	r0, #8
 800e8ca:	4770      	bx	lr
 800e8cc:	2000ddf0 	.word	0x2000ddf0

0800e8d0 <GUI_ALLOC_LockH>:
 800e8d0:	4b05      	ldr	r3, [pc, #20]	; (800e8e8 <GUI_ALLOC_LockH+0x18>)
 800e8d2:	6999      	ldr	r1, [r3, #24]
 800e8d4:	3101      	adds	r1, #1
 800e8d6:	6199      	str	r1, [r3, #24]
 800e8d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800e8da:	f813 1030 	ldrb.w	r1, [r3, r0, lsl #3]
 800e8de:	3101      	adds	r1, #1
 800e8e0:	f803 1030 	strb.w	r1, [r3, r0, lsl #3]
 800e8e4:	f7ff bfea 	b.w	800e8bc <GUI_ALLOC_h2p>
 800e8e8:	2000ddf0 	.word	0x2000ddf0

0800e8ec <GUI_ALLOC_UnlockH>:
 800e8ec:	b530      	push	{r4, r5, lr}
 800e8ee:	6802      	ldr	r2, [r0, #0]
 800e8f0:	4b09      	ldr	r3, [pc, #36]	; (800e918 <GUI_ALLOC_UnlockH+0x2c>)
 800e8f2:	f852 1c08 	ldr.w	r1, [r2, #-8]
 800e8f6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800e8f8:	f812 4031 	ldrb.w	r4, [r2, r1, lsl #3]
 800e8fc:	2c01      	cmp	r4, #1
 800e8fe:	d903      	bls.n	800e908 <GUI_ALLOC_UnlockH+0x1c>
 800e900:	699d      	ldr	r5, [r3, #24]
 800e902:	b10d      	cbz	r5, 800e908 <GUI_ALLOC_UnlockH+0x1c>
 800e904:	3d01      	subs	r5, #1
 800e906:	619d      	str	r5, [r3, #24]
 800e908:	2300      	movs	r3, #0
 800e90a:	3c01      	subs	r4, #1
 800e90c:	f802 4031 	strb.w	r4, [r2, r1, lsl #3]
 800e910:	6003      	str	r3, [r0, #0]
 800e912:	4618      	mov	r0, r3
 800e914:	bd30      	pop	{r4, r5, pc}
 800e916:	bf00      	nop
 800e918:	2000ddf0 	.word	0x2000ddf0

0800e91c <GUI_ALLOC_AssignMemory>:
 800e91c:	4b02      	ldr	r3, [pc, #8]	; (800e928 <GUI_ALLOC_AssignMemory+0xc>)
 800e91e:	f021 0103 	bic.w	r1, r1, #3
 800e922:	6018      	str	r0, [r3, #0]
 800e924:	6059      	str	r1, [r3, #4]
 800e926:	4770      	bx	lr
 800e928:	2000d96c 	.word	0x2000d96c

0800e92c <GUI_ALLOC_GetSize>:
 800e92c:	b130      	cbz	r0, 800e93c <GUI_ALLOC_GetSize+0x10>
 800e92e:	4b04      	ldr	r3, [pc, #16]	; (800e940 <GUI_ALLOC_GetSize+0x14>)
 800e930:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800e932:	eb01 00c0 	add.w	r0, r1, r0, lsl #3
 800e936:	6842      	ldr	r2, [r0, #4]
 800e938:	6850      	ldr	r0, [r2, #4]
 800e93a:	380c      	subs	r0, #12
 800e93c:	4770      	bx	lr
 800e93e:	bf00      	nop
 800e940:	2000ddf0 	.word	0x2000ddf0

0800e944 <GUI_ALLOC_Free>:
 800e944:	b510      	push	{r4, lr}
 800e946:	4604      	mov	r4, r0
 800e948:	b188      	cbz	r0, 800e96e <GUI_ALLOC_Free+0x2a>
 800e94a:	4b09      	ldr	r3, [pc, #36]	; (800e970 <GUI_ALLOC_Free+0x2c>)
 800e94c:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800e94e:	f810 1034 	ldrb.w	r1, [r0, r4, lsl #3]
 800e952:	eb00 02c4 	add.w	r2, r0, r4, lsl #3
 800e956:	b151      	cbz	r1, 800e96e <GUI_ALLOC_Free+0x2a>
 800e958:	2901      	cmp	r1, #1
 800e95a:	d808      	bhi.n	800e96e <GUI_ALLOC_Free+0x2a>
 800e95c:	6851      	ldr	r1, [r2, #4]
 800e95e:	6848      	ldr	r0, [r1, #4]
 800e960:	f7ff ff14 	bl	800e78c <_AddFreeMemory>
 800e964:	4620      	mov	r0, r4
 800e966:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e96a:	f7ff bec3 	b.w	800e6f4 <_PushFreeBlock>
 800e96e:	bd10      	pop	{r4, pc}
 800e970:	2000ddf0 	.word	0x2000ddf0

0800e974 <_EnlargeBlocks>:
 800e974:	4b24      	ldr	r3, [pc, #144]	; (800ea08 <_EnlargeBlocks+0x94>)
 800e976:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800e978:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e97c:	b93a      	cbnz	r2, 800e98e <_EnlargeBlocks+0x1a>
 800e97e:	4923      	ldr	r1, [pc, #140]	; (800ea0c <_EnlargeBlocks+0x98>)
 800e980:	688a      	ldr	r2, [r1, #8]
 800e982:	684b      	ldr	r3, [r1, #4]
 800e984:	3208      	adds	r2, #8
 800e986:	fbb3 f0f2 	udiv	r0, r3, r2
 800e98a:	1c85      	adds	r5, r0, #2
 800e98c:	e003      	b.n	800e996 <_EnlargeBlocks+0x22>
 800e98e:	68d8      	ldr	r0, [r3, #12]
 800e990:	1d05      	adds	r5, r0, #4
 800e992:	eb05 05d0 	add.w	r5, r5, r0, lsr #3
 800e996:	00e8      	lsls	r0, r5, #3
 800e998:	f000 f970 	bl	800ec7c <_Alloc>
 800e99c:	4680      	mov	r8, r0
 800e99e:	2800      	cmp	r0, #0
 800e9a0:	d02d      	beq.n	800e9fe <_EnlargeBlocks+0x8a>
 800e9a2:	4c19      	ldr	r4, [pc, #100]	; (800ea08 <_EnlargeBlocks+0x94>)
 800e9a4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e9a6:	68e2      	ldr	r2, [r4, #12]
 800e9a8:	6aa7      	ldr	r7, [r4, #40]	; 0x28
 800e9aa:	eb01 06c0 	add.w	r6, r1, r0, lsl #3
 800e9ae:	00d2      	lsls	r2, r2, #3
 800e9b0:	6876      	ldr	r6, [r6, #4]
 800e9b2:	3608      	adds	r6, #8
 800e9b4:	4630      	mov	r0, r6
 800e9b6:	f7f1 fbe7 	bl	8000188 <memcpy>
 800e9ba:	68e2      	ldr	r2, [r4, #12]
 800e9bc:	6326      	str	r6, [r4, #48]	; 0x30
 800e9be:	f8c4 8028 	str.w	r8, [r4, #40]	; 0x28
 800e9c2:	4613      	mov	r3, r2
 800e9c4:	eb06 04c2 	add.w	r4, r6, r2, lsl #3
 800e9c8:	2100      	movs	r1, #0
 800e9ca:	1e68      	subs	r0, r5, #1
 800e9cc:	4283      	cmp	r3, r0
 800e9ce:	d204      	bcs.n	800e9da <_EnlargeBlocks+0x66>
 800e9d0:	1860      	adds	r0, r4, r1
 800e9d2:	3301      	adds	r3, #1
 800e9d4:	6043      	str	r3, [r0, #4]
 800e9d6:	3108      	adds	r1, #8
 800e9d8:	e7f7      	b.n	800e9ca <_EnlargeBlocks+0x56>
 800e9da:	eb06 01c3 	add.w	r1, r6, r3, lsl #3
 800e9de:	2400      	movs	r4, #0
 800e9e0:	4b09      	ldr	r3, [pc, #36]	; (800ea08 <_EnlargeBlocks+0x94>)
 800e9e2:	604c      	str	r4, [r1, #4]
 800e9e4:	6858      	ldr	r0, [r3, #4]
 800e9e6:	621a      	str	r2, [r3, #32]
 800e9e8:	1a82      	subs	r2, r0, r2
 800e9ea:	1951      	adds	r1, r2, r5
 800e9ec:	6059      	str	r1, [r3, #4]
 800e9ee:	60dd      	str	r5, [r3, #12]
 800e9f0:	4638      	mov	r0, r7
 800e9f2:	b13f      	cbz	r7, 800ea04 <_EnlargeBlocks+0x90>
 800e9f4:	f7ff ffa6 	bl	800e944 <GUI_ALLOC_Free>
 800e9f8:	4620      	mov	r0, r4
 800e9fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e9fe:	2001      	movs	r0, #1
 800ea00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ea04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ea08:	2000ddf0 	.word	0x2000ddf0
 800ea0c:	2000d96c 	.word	0x2000d96c

0800ea10 <_InitOnce>:
 800ea10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ea12:	4b54      	ldr	r3, [pc, #336]	; (800eb64 <_InitOnce+0x154>)
 800ea14:	f893 1024 	ldrb.w	r1, [r3, #36]	; 0x24
 800ea18:	2900      	cmp	r1, #0
 800ea1a:	f040 80a2 	bne.w	800eb62 <_InitOnce+0x152>
 800ea1e:	4852      	ldr	r0, [pc, #328]	; (800eb68 <_InitOnce+0x158>)
 800ea20:	2201      	movs	r2, #1
 800ea22:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 800ea26:	6842      	ldr	r2, [r0, #4]
 800ea28:	6803      	ldr	r3, [r0, #0]
 800ea2a:	f5b2 5f20 	cmp.w	r2, #10240	; 0x2800
 800ea2e:	bf28      	it	cs
 800ea30:	f44f 5220 	movcs.w	r2, #10240	; 0x2800
 800ea34:	0894      	lsrs	r4, r2, #2
 800ea36:	2000      	movs	r0, #0
 800ea38:	42a0      	cmp	r0, r4
 800ea3a:	d009      	beq.n	800ea50 <_InitOnce+0x40>
 800ea3c:	1846      	adds	r6, r0, r1
 800ea3e:	25ff      	movs	r5, #255	; 0xff
 800ea40:	fbb6 f7f5 	udiv	r7, r6, r5
 800ea44:	fb05 6517 	mls	r5, r5, r7, r6
 800ea48:	f843 5020 	str.w	r5, [r3, r0, lsl #2]
 800ea4c:	3001      	adds	r0, #1
 800ea4e:	e7f3      	b.n	800ea38 <_InitOnce+0x28>
 800ea50:	2000      	movs	r0, #0
 800ea52:	42a0      	cmp	r0, r4
 800ea54:	d013      	beq.n	800ea7e <_InitOnce+0x6e>
 800ea56:	25ff      	movs	r5, #255	; 0xff
 800ea58:	1846      	adds	r6, r0, r1
 800ea5a:	fbb6 f7f5 	udiv	r7, r6, r5
 800ea5e:	fb05 6517 	mls	r5, r5, r7, r6
 800ea62:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 800ea66:	42af      	cmp	r7, r5
 800ea68:	d007      	beq.n	800ea7a <_InitOnce+0x6a>
 800ea6a:	493f      	ldr	r1, [pc, #252]	; (800eb68 <_InitOnce+0x158>)
 800ea6c:	688a      	ldr	r2, [r1, #8]
 800ea6e:	2a00      	cmp	r2, #0
 800ea70:	d150      	bne.n	800eb14 <_InitOnce+0x104>
 800ea72:	684b      	ldr	r3, [r1, #4]
 800ea74:	089c      	lsrs	r4, r3, #2
 800ea76:	608c      	str	r4, [r1, #8]
 800ea78:	e04c      	b.n	800eb14 <_InitOnce+0x104>
 800ea7a:	3001      	adds	r0, #1
 800ea7c:	e7e9      	b.n	800ea52 <_InitOnce+0x42>
 800ea7e:	3101      	adds	r1, #1
 800ea80:	2902      	cmp	r1, #2
 800ea82:	d1d8      	bne.n	800ea36 <_InitOnce+0x26>
 800ea84:	0854      	lsrs	r4, r2, #1
 800ea86:	2100      	movs	r1, #0
 800ea88:	2000      	movs	r0, #0
 800ea8a:	42a0      	cmp	r0, r4
 800ea8c:	d009      	beq.n	800eaa2 <_InitOnce+0x92>
 800ea8e:	1846      	adds	r6, r0, r1
 800ea90:	25ff      	movs	r5, #255	; 0xff
 800ea92:	fbb6 f7f5 	udiv	r7, r6, r5
 800ea96:	fb05 6517 	mls	r5, r5, r7, r6
 800ea9a:	f823 5010 	strh.w	r5, [r3, r0, lsl #1]
 800ea9e:	3001      	adds	r0, #1
 800eaa0:	e7f3      	b.n	800ea8a <_InitOnce+0x7a>
 800eaa2:	2000      	movs	r0, #0
 800eaa4:	42a0      	cmp	r0, r4
 800eaa6:	d00c      	beq.n	800eac2 <_InitOnce+0xb2>
 800eaa8:	25ff      	movs	r5, #255	; 0xff
 800eaaa:	1846      	adds	r6, r0, r1
 800eaac:	fbb6 f7f5 	udiv	r7, r6, r5
 800eab0:	fb05 6517 	mls	r5, r5, r7, r6
 800eab4:	f833 7010 	ldrh.w	r7, [r3, r0, lsl #1]
 800eab8:	b2ad      	uxth	r5, r5
 800eaba:	42af      	cmp	r7, r5
 800eabc:	d1d5      	bne.n	800ea6a <_InitOnce+0x5a>
 800eabe:	3001      	adds	r0, #1
 800eac0:	e7f0      	b.n	800eaa4 <_InitOnce+0x94>
 800eac2:	3101      	adds	r1, #1
 800eac4:	2902      	cmp	r1, #2
 800eac6:	d1df      	bne.n	800ea88 <_InitOnce+0x78>
 800eac8:	2100      	movs	r1, #0
 800eaca:	2000      	movs	r0, #0
 800eacc:	4290      	cmp	r0, r2
 800eace:	d008      	beq.n	800eae2 <_InitOnce+0xd2>
 800ead0:	1845      	adds	r5, r0, r1
 800ead2:	24ff      	movs	r4, #255	; 0xff
 800ead4:	fbb5 f6f4 	udiv	r6, r5, r4
 800ead8:	fb04 5516 	mls	r5, r4, r6, r5
 800eadc:	541d      	strb	r5, [r3, r0]
 800eade:	3001      	adds	r0, #1
 800eae0:	e7f4      	b.n	800eacc <_InitOnce+0xbc>
 800eae2:	2000      	movs	r0, #0
 800eae4:	4290      	cmp	r0, r2
 800eae6:	d00b      	beq.n	800eb00 <_InitOnce+0xf0>
 800eae8:	24ff      	movs	r4, #255	; 0xff
 800eaea:	1845      	adds	r5, r0, r1
 800eaec:	fbb5 f6f4 	udiv	r6, r5, r4
 800eaf0:	fb04 5516 	mls	r5, r4, r6, r5
 800eaf4:	5c1e      	ldrb	r6, [r3, r0]
 800eaf6:	b2ec      	uxtb	r4, r5
 800eaf8:	42a6      	cmp	r6, r4
 800eafa:	d1b6      	bne.n	800ea6a <_InitOnce+0x5a>
 800eafc:	3001      	adds	r0, #1
 800eafe:	e7f1      	b.n	800eae4 <_InitOnce+0xd4>
 800eb00:	3101      	adds	r1, #1
 800eb02:	2902      	cmp	r1, #2
 800eb04:	d1e1      	bne.n	800eaca <_InitOnce+0xba>
 800eb06:	2500      	movs	r5, #0
 800eb08:	4295      	cmp	r5, r2
 800eb0a:	d0ae      	beq.n	800ea6a <_InitOnce+0x5a>
 800eb0c:	2400      	movs	r4, #0
 800eb0e:	555c      	strb	r4, [r3, r5]
 800eb10:	3501      	adds	r5, #1
 800eb12:	e7f9      	b.n	800eb08 <_InitOnce+0xf8>
 800eb14:	4815      	ldr	r0, [pc, #84]	; (800eb6c <_InitOnce+0x15c>)
 800eb16:	4d16      	ldr	r5, [pc, #88]	; (800eb70 <_InitOnce+0x160>)
 800eb18:	6005      	str	r5, [r0, #0]
 800eb1a:	f7ff fad7 	bl	800e0cc <GUI__RegisterExit>
 800eb1e:	4911      	ldr	r1, [pc, #68]	; (800eb64 <_InitOnce+0x154>)
 800eb20:	205a      	movs	r0, #90	; 0x5a
 800eb22:	61c8      	str	r0, [r1, #28]
 800eb24:	2300      	movs	r3, #0
 800eb26:	4c0f      	ldr	r4, [pc, #60]	; (800eb64 <_InitOnce+0x154>)
 800eb28:	2510      	movs	r5, #16
 800eb2a:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
 800eb2e:	fa05 f503 	lsl.w	r5, r5, r3
 800eb32:	3301      	adds	r3, #1
 800eb34:	2b10      	cmp	r3, #16
 800eb36:	63d5      	str	r5, [r2, #60]	; 0x3c
 800eb38:	d1f5      	bne.n	800eb26 <_InitOnce+0x116>
 800eb3a:	480b      	ldr	r0, [pc, #44]	; (800eb68 <_InitOnce+0x158>)
 800eb3c:	6801      	ldr	r1, [r0, #0]
 800eb3e:	6840      	ldr	r0, [r0, #4]
 800eb40:	6361      	str	r1, [r4, #52]	; 0x34
 800eb42:	f1a0 0514 	sub.w	r5, r0, #20
 800eb46:	194b      	adds	r3, r1, r5
 800eb48:	2202      	movs	r2, #2
 800eb4a:	2501      	movs	r5, #1
 800eb4c:	60e2      	str	r2, [r4, #12]
 800eb4e:	6323      	str	r3, [r4, #48]	; 0x30
 800eb50:	60a0      	str	r0, [r4, #8]
 800eb52:	605d      	str	r5, [r3, #4]
 800eb54:	6225      	str	r5, [r4, #32]
 800eb56:	6065      	str	r5, [r4, #4]
 800eb58:	f7ff fe18 	bl	800e78c <_AddFreeMemory>
 800eb5c:	f7ff ff0a 	bl	800e974 <_EnlargeBlocks>
 800eb60:	62e5      	str	r5, [r4, #44]	; 0x2c
 800eb62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800eb64:	2000ddf0 	.word	0x2000ddf0
 800eb68:	2000d96c 	.word	0x2000d96c
 800eb6c:	2000d978 	.word	0x2000d978
 800eb70:	0800e719 	.word	0x0800e719

0800eb74 <GUI_ALLOC_GetMaxSize>:
 800eb74:	b508      	push	{r3, lr}
 800eb76:	f7ff ff4b 	bl	800ea10 <_InitOnce>
 800eb7a:	2200      	movs	r2, #0
 800eb7c:	4b0b      	ldr	r3, [pc, #44]	; (800ebac <GUI_ALLOC_GetMaxSize+0x38>)
 800eb7e:	18d0      	adds	r0, r2, r3
 800eb80:	f8d0 30b8 	ldr.w	r3, [r0, #184]	; 0xb8
 800eb84:	b113      	cbz	r3, 800eb8c <GUI_ALLOC_GetMaxSize+0x18>
 800eb86:	689b      	ldr	r3, [r3, #8]
 800eb88:	2000      	movs	r0, #0
 800eb8a:	e00b      	b.n	800eba4 <GUI_ALLOC_GetMaxSize+0x30>
 800eb8c:	3a08      	subs	r2, #8
 800eb8e:	f112 0f80 	cmn.w	r2, #128	; 0x80
 800eb92:	d1f3      	bne.n	800eb7c <GUI_ALLOC_GetMaxSize+0x8>
 800eb94:	e7f8      	b.n	800eb88 <GUI_ALLOC_GetMaxSize+0x14>
 800eb96:	6859      	ldr	r1, [r3, #4]
 800eb98:	689a      	ldr	r2, [r3, #8]
 800eb9a:	4288      	cmp	r0, r1
 800eb9c:	bf38      	it	cc
 800eb9e:	4608      	movcc	r0, r1
 800eba0:	b112      	cbz	r2, 800eba8 <GUI_ALLOC_GetMaxSize+0x34>
 800eba2:	6893      	ldr	r3, [r2, #8]
 800eba4:	2b00      	cmp	r3, #0
 800eba6:	d1f6      	bne.n	800eb96 <GUI_ALLOC_GetMaxSize+0x22>
 800eba8:	380c      	subs	r0, #12
 800ebaa:	bd08      	pop	{r3, pc}
 800ebac:	2000ddf0 	.word	0x2000ddf0

0800ebb0 <GUI_ALLOC_RequestSize>:
 800ebb0:	b508      	push	{r3, lr}
 800ebb2:	f7ff ffdf 	bl	800eb74 <GUI_ALLOC_GetMaxSize>
 800ebb6:	f5b0 0f80 	cmp.w	r0, #4194304	; 0x400000
 800ebba:	f04f 0364 	mov.w	r3, #100	; 0x64
 800ebbe:	4a06      	ldr	r2, [pc, #24]	; (800ebd8 <GUI_ALLOC_RequestSize+0x28>)
 800ebc0:	d904      	bls.n	800ebcc <GUI_ALLOC_RequestSize+0x1c>
 800ebc2:	fb90 f0f3 	sdiv	r0, r0, r3
 800ebc6:	69d3      	ldr	r3, [r2, #28]
 800ebc8:	4358      	muls	r0, r3
 800ebca:	bd08      	pop	{r3, pc}
 800ebcc:	69d1      	ldr	r1, [r2, #28]
 800ebce:	4348      	muls	r0, r1
 800ebd0:	fbb0 f0f3 	udiv	r0, r0, r3
 800ebd4:	bd08      	pop	{r3, pc}
 800ebd6:	bf00      	nop
 800ebd8:	2000ddf0 	.word	0x2000ddf0

0800ebdc <GUI_ALLOC_GetFixedBlock>:
 800ebdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ebde:	4605      	mov	r5, r0
 800ebe0:	f7ff ff16 	bl	800ea10 <_InitOnce>
 800ebe4:	4b24      	ldr	r3, [pc, #144]	; (800ec78 <GUI_ALLOC_GetFixedBlock+0x9c>)
 800ebe6:	1ce8      	adds	r0, r5, #3
 800ebe8:	f020 0103 	bic.w	r1, r0, #3
 800ebec:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800ebee:	6b98      	ldr	r0, [r3, #56]	; 0x38
 800ebf0:	1d0d      	adds	r5, r1, #4
 800ebf2:	4295      	cmp	r5, r2
 800ebf4:	bf38      	it	cc
 800ebf6:	4615      	movcc	r5, r2
 800ebf8:	4604      	mov	r4, r0
 800ebfa:	b12c      	cbz	r4, 800ec08 <GUI_ALLOC_GetFixedBlock+0x2c>
 800ebfc:	f854 2c04 	ldr.w	r2, [r4, #-4]
 800ec00:	42aa      	cmp	r2, r5
 800ec02:	d02a      	beq.n	800ec5a <GUI_ALLOC_GetFixedBlock+0x7e>
 800ec04:	6824      	ldr	r4, [r4, #0]
 800ec06:	e7f8      	b.n	800ebfa <GUI_ALLOC_GetFixedBlock+0x1e>
 800ec08:	6b5f      	ldr	r7, [r3, #52]	; 0x34
 800ec0a:	689b      	ldr	r3, [r3, #8]
 800ec0c:	18ff      	adds	r7, r7, r3
 800ec0e:	f857 6c04 	ldr.w	r6, [r7, #-4]
 800ec12:	1bbe      	subs	r6, r7, r6
 800ec14:	6830      	ldr	r0, [r6, #0]
 800ec16:	b128      	cbz	r0, 800ec24 <GUI_ALLOC_GetFixedBlock+0x48>
 800ec18:	4620      	mov	r0, r4
 800ec1a:	f7ff fdfd 	bl	800e818 <_RemoveHoles>
 800ec1e:	f857 1c04 	ldr.w	r1, [r7, #-4]
 800ec22:	1a7e      	subs	r6, r7, r1
 800ec24:	6832      	ldr	r2, [r6, #0]
 800ec26:	bb22      	cbnz	r2, 800ec72 <GUI_ALLOC_GetFixedBlock+0x96>
 800ec28:	6873      	ldr	r3, [r6, #4]
 800ec2a:	42ab      	cmp	r3, r5
 800ec2c:	db21      	blt.n	800ec72 <GUI_ALLOC_GetFixedBlock+0x96>
 800ec2e:	1d1c      	adds	r4, r3, #4
 800ec30:	1b60      	subs	r0, r4, r5
 800ec32:	1834      	adds	r4, r6, r0
 800ec34:	4630      	mov	r0, r6
 800ec36:	f7ff fd8b 	bl	800e750 <_RemoveFreeBlock>
 800ec3a:	490f      	ldr	r1, [pc, #60]	; (800ec78 <GUI_ALLOC_GetFixedBlock+0x9c>)
 800ec3c:	688a      	ldr	r2, [r1, #8]
 800ec3e:	6908      	ldr	r0, [r1, #16]
 800ec40:	1b53      	subs	r3, r2, r5
 800ec42:	182a      	adds	r2, r5, r0
 800ec44:	608b      	str	r3, [r1, #8]
 800ec46:	610a      	str	r2, [r1, #16]
 800ec48:	6871      	ldr	r1, [r6, #4]
 800ec4a:	1b48      	subs	r0, r1, r5
 800ec4c:	d002      	beq.n	800ec54 <GUI_ALLOC_GetFixedBlock+0x78>
 800ec4e:	4631      	mov	r1, r6
 800ec50:	f7ff fd9c 	bl	800e78c <_AddFreeMemory>
 800ec54:	f844 5c04 	str.w	r5, [r4, #-4]
 800ec58:	e00b      	b.n	800ec72 <GUI_ALLOC_GetFixedBlock+0x96>
 800ec5a:	6823      	ldr	r3, [r4, #0]
 800ec5c:	b10b      	cbz	r3, 800ec62 <GUI_ALLOC_GetFixedBlock+0x86>
 800ec5e:	6861      	ldr	r1, [r4, #4]
 800ec60:	6059      	str	r1, [r3, #4]
 800ec62:	6862      	ldr	r2, [r4, #4]
 800ec64:	b102      	cbz	r2, 800ec68 <GUI_ALLOC_GetFixedBlock+0x8c>
 800ec66:	6013      	str	r3, [r2, #0]
 800ec68:	42a0      	cmp	r0, r4
 800ec6a:	d102      	bne.n	800ec72 <GUI_ALLOC_GetFixedBlock+0x96>
 800ec6c:	6820      	ldr	r0, [r4, #0]
 800ec6e:	4b02      	ldr	r3, [pc, #8]	; (800ec78 <GUI_ALLOC_GetFixedBlock+0x9c>)
 800ec70:	6398      	str	r0, [r3, #56]	; 0x38
 800ec72:	4620      	mov	r0, r4
 800ec74:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ec76:	bf00      	nop
 800ec78:	2000ddf0 	.word	0x2000ddf0

0800ec7c <_Alloc>:
 800ec7c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ec80:	4604      	mov	r4, r0
 800ec82:	f7ff fec5 	bl	800ea10 <_InitOnce>
 800ec86:	4b38      	ldr	r3, [pc, #224]	; (800ed68 <_Alloc+0xec>)
 800ec88:	6bde      	ldr	r6, [r3, #60]	; 0x3c
 800ec8a:	42b4      	cmp	r4, r6
 800ec8c:	d302      	bcc.n	800ec94 <_Alloc+0x18>
 800ec8e:	1ce6      	adds	r6, r4, #3
 800ec90:	f026 0603 	bic.w	r6, r6, #3
 800ec94:	6818      	ldr	r0, [r3, #0]
 800ec96:	4c34      	ldr	r4, [pc, #208]	; (800ed68 <_Alloc+0xec>)
 800ec98:	360c      	adds	r6, #12
 800ec9a:	4286      	cmp	r6, r0
 800ec9c:	d860      	bhi.n	800ed60 <_Alloc+0xe4>
 800ec9e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800eca0:	6862      	ldr	r2, [r4, #4]
 800eca2:	428a      	cmp	r2, r1
 800eca4:	d910      	bls.n	800ecc8 <_Alloc+0x4c>
 800eca6:	4830      	ldr	r0, [pc, #192]	; (800ed68 <_Alloc+0xec>)
 800eca8:	6842      	ldr	r2, [r0, #4]
 800ecaa:	1e55      	subs	r5, r2, #1
 800ecac:	6045      	str	r5, [r0, #4]
 800ecae:	6a05      	ldr	r5, [r0, #32]
 800ecb0:	6b02      	ldr	r2, [r0, #48]	; 0x30
 800ecb2:	ea4f 08c5 	mov.w	r8, r5, lsl #3
 800ecb6:	eb02 0308 	add.w	r3, r2, r8
 800ecba:	6859      	ldr	r1, [r3, #4]
 800ecbc:	6201      	str	r1, [r0, #32]
 800ecbe:	2001      	movs	r0, #1
 800ecc0:	f802 0035 	strb.w	r0, [r2, r5, lsl #3]
 800ecc4:	b955      	cbnz	r5, 800ecdc <_Alloc+0x60>
 800ecc6:	e04b      	b.n	800ed60 <_Alloc+0xe4>
 800ecc8:	1e4d      	subs	r5, r1, #1
 800ecca:	62e5      	str	r5, [r4, #44]	; 0x2c
 800eccc:	f7ff fe52 	bl	800e974 <_EnlargeBlocks>
 800ecd0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ecd2:	1c59      	adds	r1, r3, #1
 800ecd4:	62e1      	str	r1, [r4, #44]	; 0x2c
 800ecd6:	2800      	cmp	r0, #0
 800ecd8:	d0e5      	beq.n	800eca6 <_Alloc+0x2a>
 800ecda:	e041      	b.n	800ed60 <_Alloc+0xe4>
 800ecdc:	230f      	movs	r3, #15
 800ecde:	4a22      	ldr	r2, [pc, #136]	; (800ed68 <_Alloc+0xec>)
 800ece0:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 800ece4:	6bc8      	ldr	r0, [r1, #60]	; 0x3c
 800ece6:	4286      	cmp	r6, r0
 800ece8:	d20b      	bcs.n	800ed02 <_Alloc+0x86>
 800ecea:	f113 33ff 	adds.w	r3, r3, #4294967295
 800ecee:	d2f6      	bcs.n	800ecde <_Alloc+0x62>
 800ecf0:	e007      	b.n	800ed02 <_Alloc+0x86>
 800ecf2:	688c      	ldr	r4, [r1, #8]
 800ecf4:	6860      	ldr	r0, [r4, #4]
 800ecf6:	4286      	cmp	r6, r0
 800ecf8:	d90a      	bls.n	800ed10 <_Alloc+0x94>
 800ecfa:	68a1      	ldr	r1, [r4, #8]
 800ecfc:	2900      	cmp	r1, #0
 800ecfe:	d1f8      	bne.n	800ecf2 <_Alloc+0x76>
 800ed00:	3301      	adds	r3, #1
 800ed02:	2b0f      	cmp	r3, #15
 800ed04:	d824      	bhi.n	800ed50 <_Alloc+0xd4>
 800ed06:	4a18      	ldr	r2, [pc, #96]	; (800ed68 <_Alloc+0xec>)
 800ed08:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 800ed0c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 800ed0e:	e7f5      	b.n	800ecfc <_Alloc+0x80>
 800ed10:	f8df 9054 	ldr.w	r9, [pc, #84]	; 800ed68 <_Alloc+0xec>
 800ed14:	6867      	ldr	r7, [r4, #4]
 800ed16:	f8d9 103c 	ldr.w	r1, [r9, #60]	; 0x3c
 800ed1a:	1bba      	subs	r2, r7, r6
 800ed1c:	310c      	adds	r1, #12
 800ed1e:	4620      	mov	r0, r4
 800ed20:	428a      	cmp	r2, r1
 800ed22:	bf38      	it	cc
 800ed24:	463e      	movcc	r6, r7
 800ed26:	f7ff fd13 	bl	800e750 <_RemoveFreeBlock>
 800ed2a:	f8d9 3030 	ldr.w	r3, [r9, #48]	; 0x30
 800ed2e:	19a1      	adds	r1, r4, r6
 800ed30:	eb03 0008 	add.w	r0, r3, r8
 800ed34:	2200      	movs	r2, #0
 800ed36:	42b7      	cmp	r7, r6
 800ed38:	6044      	str	r4, [r0, #4]
 800ed3a:	e884 0060 	stmia.w	r4, {r5, r6}
 800ed3e:	60a2      	str	r2, [r4, #8]
 800ed40:	6124      	str	r4, [r4, #16]
 800ed42:	f841 6c04 	str.w	r6, [r1, #-4]
 800ed46:	dd0c      	ble.n	800ed62 <_Alloc+0xe6>
 800ed48:	1bb8      	subs	r0, r7, r6
 800ed4a:	f7ff fd1f 	bl	800e78c <_AddFreeMemory>
 800ed4e:	e008      	b.n	800ed62 <_Alloc+0xe6>
 800ed50:	4630      	mov	r0, r6
 800ed52:	f7ff fd61 	bl	800e818 <_RemoveHoles>
 800ed56:	2800      	cmp	r0, #0
 800ed58:	d0c0      	beq.n	800ecdc <_Alloc+0x60>
 800ed5a:	4628      	mov	r0, r5
 800ed5c:	f7ff fcca 	bl	800e6f4 <_PushFreeBlock>
 800ed60:	2500      	movs	r5, #0
 800ed62:	4628      	mov	r0, r5
 800ed64:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ed68:	2000ddf0 	.word	0x2000ddf0

0800ed6c <GUI_ALLOC_AllocNoInit>:
 800ed6c:	b108      	cbz	r0, 800ed72 <GUI_ALLOC_AllocNoInit+0x6>
 800ed6e:	f7ff bf85 	b.w	800ec7c <_Alloc>
 800ed72:	4770      	bx	lr

0800ed74 <GUI_ALLOC_FreePtr>:
 800ed74:	b510      	push	{r4, lr}
 800ed76:	4604      	mov	r4, r0
 800ed78:	6800      	ldr	r0, [r0, #0]
 800ed7a:	f7ff fde3 	bl	800e944 <GUI_ALLOC_Free>
 800ed7e:	2300      	movs	r3, #0
 800ed80:	6023      	str	r3, [r4, #0]
 800ed82:	bd10      	pop	{r4, pc}

0800ed84 <GUI_ALLOC_FreePtrArray>:
 800ed84:	b570      	push	{r4, r5, r6, lr}
 800ed86:	4605      	mov	r5, r0
 800ed88:	460e      	mov	r6, r1
 800ed8a:	2400      	movs	r4, #0
 800ed8c:	42b4      	cmp	r4, r6
 800ed8e:	da05      	bge.n	800ed9c <GUI_ALLOC_FreePtrArray+0x18>
 800ed90:	eb05 0084 	add.w	r0, r5, r4, lsl #2
 800ed94:	f7ff ffee 	bl	800ed74 <GUI_ALLOC_FreePtr>
 800ed98:	3401      	adds	r4, #1
 800ed9a:	e7f7      	b.n	800ed8c <GUI_ALLOC_FreePtrArray+0x8>
 800ed9c:	bd70      	pop	{r4, r5, r6, pc}

0800ed9e <GUI_AddDecMin>:
 800ed9e:	b570      	push	{r4, r5, r6, lr}
 800eda0:	460c      	mov	r4, r1
 800eda2:	4605      	mov	r5, r0
 800eda4:	f003 ff26 	bl	8012bf4 <GUI_Long2Len>
 800eda8:	2200      	movs	r2, #0
 800edaa:	b2c1      	uxtb	r1, r0
 800edac:	4623      	mov	r3, r4
 800edae:	4628      	mov	r0, r5
 800edb0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800edb4:	f003 bf36 	b.w	8012c24 <GUI_AddDecShift>

0800edb8 <GUI_ALLOC_AllocZero>:
 800edb8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800edba:	4605      	mov	r5, r0
 800edbc:	f7ff ffd6 	bl	800ed6c <GUI_ALLOC_AllocNoInit>
 800edc0:	4606      	mov	r6, r0
 800edc2:	b158      	cbz	r0, 800eddc <GUI_ALLOC_AllocZero+0x24>
 800edc4:	f7ff fd84 	bl	800e8d0 <GUI_ALLOC_LockH>
 800edc8:	ac02      	add	r4, sp, #8
 800edca:	2100      	movs	r1, #0
 800edcc:	f844 0d04 	str.w	r0, [r4, #-4]!
 800edd0:	462a      	mov	r2, r5
 800edd2:	f7fd fc2b 	bl	800c62c <GUI__memset>
 800edd6:	4620      	mov	r0, r4
 800edd8:	f7ff fd88 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800eddc:	4630      	mov	r0, r6
 800edde:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

0800ede0 <GUI_ALLOC_AllocInit>:
 800ede0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ede2:	4605      	mov	r5, r0
 800ede4:	460c      	mov	r4, r1
 800ede6:	b909      	cbnz	r1, 800edec <GUI_ALLOC_AllocInit+0xc>
 800ede8:	2600      	movs	r6, #0
 800edea:	e013      	b.n	800ee14 <GUI_ALLOC_AllocInit+0x34>
 800edec:	4608      	mov	r0, r1
 800edee:	f7ff ffbd 	bl	800ed6c <GUI_ALLOC_AllocNoInit>
 800edf2:	4606      	mov	r6, r0
 800edf4:	2800      	cmp	r0, #0
 800edf6:	d0f7      	beq.n	800ede8 <GUI_ALLOC_AllocInit+0x8>
 800edf8:	f7ff fd6a 	bl	800e8d0 <GUI_ALLOC_LockH>
 800edfc:	4629      	mov	r1, r5
 800edfe:	9001      	str	r0, [sp, #4]
 800ee00:	4622      	mov	r2, r4
 800ee02:	b115      	cbz	r5, 800ee0a <GUI_ALLOC_AllocInit+0x2a>
 800ee04:	f7f1 f9c0 	bl	8000188 <memcpy>
 800ee08:	e001      	b.n	800ee0e <GUI_ALLOC_AllocInit+0x2e>
 800ee0a:	f7fd fc0f 	bl	800c62c <GUI__memset>
 800ee0e:	a801      	add	r0, sp, #4
 800ee10:	f7ff fd6c 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800ee14:	4630      	mov	r0, r6
 800ee16:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

0800ee18 <GUI_DrawRect>:
 800ee18:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800ee1c:	4c1d      	ldr	r4, [pc, #116]	; (800ee94 <GUI_DrawRect+0x7c>)
 800ee1e:	f8d4 e000 	ldr.w	lr, [r4]
 800ee22:	f8de 404c 	ldr.w	r4, [lr, #76]	; 0x4c
 800ee26:	f8de 6050 	ldr.w	r6, [lr, #80]	; 0x50
 800ee2a:	1905      	adds	r5, r0, r4
 800ee2c:	1914      	adds	r4, r2, r4
 800ee2e:	f89e 2018 	ldrb.w	r2, [lr, #24]
 800ee32:	1e50      	subs	r0, r2, #1
 800ee34:	198f      	adds	r7, r1, r6
 800ee36:	b281      	uxth	r1, r0
 800ee38:	1a78      	subs	r0, r7, r1
 800ee3a:	199e      	adds	r6, r3, r6
 800ee3c:	190a      	adds	r2, r1, r4
 800ee3e:	1a6b      	subs	r3, r5, r1
 800ee40:	f8ad 0002 	strh.w	r0, [sp, #2]
 800ee44:	1989      	adds	r1, r1, r6
 800ee46:	4668      	mov	r0, sp
 800ee48:	f8ad 3000 	strh.w	r3, [sp]
 800ee4c:	f8ad 2004 	strh.w	r2, [sp, #4]
 800ee50:	f8ad 1006 	strh.w	r1, [sp, #6]
 800ee54:	f7fa fbe2 	bl	800961c <WM__InitIVRSearch>
 800ee58:	b1d0      	cbz	r0, 800ee90 <GUI_DrawRect+0x78>
 800ee5a:	4628      	mov	r0, r5
 800ee5c:	4639      	mov	r1, r7
 800ee5e:	4622      	mov	r2, r4
 800ee60:	f7fd f88a 	bl	800bf78 <LCD_DrawHLine>
 800ee64:	f107 0901 	add.w	r9, r7, #1
 800ee68:	4628      	mov	r0, r5
 800ee6a:	4631      	mov	r1, r6
 800ee6c:	4622      	mov	r2, r4
 800ee6e:	f106 38ff 	add.w	r8, r6, #4294967295
 800ee72:	f7fd f881 	bl	800bf78 <LCD_DrawHLine>
 800ee76:	4628      	mov	r0, r5
 800ee78:	4649      	mov	r1, r9
 800ee7a:	4642      	mov	r2, r8
 800ee7c:	f7fd f8a2 	bl	800bfc4 <LCD_DrawVLine>
 800ee80:	4620      	mov	r0, r4
 800ee82:	4649      	mov	r1, r9
 800ee84:	4642      	mov	r2, r8
 800ee86:	f7fd f89d 	bl	800bfc4 <LCD_DrawVLine>
 800ee8a:	f7fa fb07 	bl	800949c <WM__GetNextIVR>
 800ee8e:	e7e3      	b.n	800ee58 <GUI_DrawRect+0x40>
 800ee90:	e8bd 83fe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
 800ee94:	20000270 	.word	0x20000270

0800ee98 <LCD_Index2Color_888>:
 800ee98:	4770      	bx	lr

0800ee9a <LCD_Index2Color_8888>:
 800ee9a:	4770      	bx	lr

0800ee9c <_Color2Index_8888>:
 800ee9c:	4770      	bx	lr

0800ee9e <_GetIndexMask_8888>:
 800ee9e:	f04f 30ff 	mov.w	r0, #4294967295
 800eea2:	4770      	bx	lr

0800eea4 <_Color2IndexBulk>:
 800eea4:	b510      	push	{r4, lr}
 800eea6:	f850 4b04 	ldr.w	r4, [r0], #4
 800eeaa:	3a01      	subs	r2, #1
 800eeac:	600c      	str	r4, [r1, #0]
 800eeae:	4419      	add	r1, r3
 800eeb0:	d1f9      	bne.n	800eea6 <_Color2IndexBulk+0x2>
 800eeb2:	bd10      	pop	{r4, pc}

0800eeb4 <_Index2ColorBulk>:
 800eeb4:	b510      	push	{r4, lr}
 800eeb6:	6804      	ldr	r4, [r0, #0]
 800eeb8:	3a01      	subs	r2, #1
 800eeba:	f841 4b04 	str.w	r4, [r1], #4
 800eebe:	4418      	add	r0, r3
 800eec0:	d1f9      	bne.n	800eeb6 <_Index2ColorBulk+0x2>
 800eec2:	bd10      	pop	{r4, pc}

0800eec4 <LCD_Index2Color_565>:
 800eec4:	f3c0 1345 	ubfx	r3, r0, #5, #6
 800eec8:	4a06      	ldr	r2, [pc, #24]	; (800eee4 <LCD_Index2Color_565+0x20>)
 800eeca:	5cd1      	ldrb	r1, [r2, r3]
 800eecc:	4b06      	ldr	r3, [pc, #24]	; (800eee8 <LCD_Index2Color_565+0x24>)
 800eece:	f3c0 22c4 	ubfx	r2, r0, #11, #5
 800eed2:	f000 001f 	and.w	r0, r0, #31
 800eed6:	5c9a      	ldrb	r2, [r3, r2]
 800eed8:	5c1b      	ldrb	r3, [r3, r0]
 800eeda:	0412      	lsls	r2, r2, #16
 800eedc:	eb02 2101 	add.w	r1, r2, r1, lsl #8
 800eee0:	18c8      	adds	r0, r1, r3
 800eee2:	4770      	bx	lr
 800eee4:	0802e1a0 	.word	0x0802e1a0
 800eee8:	0802e1e0 	.word	0x0802e1e0

0800eeec <_Color2Index_565>:
 800eeec:	f3c0 2307 	ubfx	r3, r0, #8, #8
 800eef0:	4a06      	ldr	r2, [pc, #24]	; (800ef0c <_Color2Index_565+0x20>)
 800eef2:	5cd1      	ldrb	r1, [r2, r3]
 800eef4:	4b06      	ldr	r3, [pc, #24]	; (800ef10 <_Color2Index_565+0x24>)
 800eef6:	f3c0 4207 	ubfx	r2, r0, #16, #8
 800eefa:	b2c0      	uxtb	r0, r0
 800eefc:	5c9a      	ldrb	r2, [r3, r2]
 800eefe:	5c1b      	ldrb	r3, [r3, r0]
 800ef00:	02d2      	lsls	r2, r2, #11
 800ef02:	eb02 1141 	add.w	r1, r2, r1, lsl #5
 800ef06:	18c8      	adds	r0, r1, r3
 800ef08:	4770      	bx	lr
 800ef0a:	bf00      	nop
 800ef0c:	0802e200 	.word	0x0802e200
 800ef10:	0802e300 	.word	0x0802e300

0800ef14 <_GetIndexMask_565>:
 800ef14:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800ef18:	4770      	bx	lr
	...

0800ef1c <_Color2IndexBulk>:
 800ef1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ef1e:	f850 4b04 	ldr.w	r4, [r0], #4
 800ef22:	4e09      	ldr	r6, [pc, #36]	; (800ef48 <_Color2IndexBulk+0x2c>)
 800ef24:	f3c4 2507 	ubfx	r5, r4, #8, #8
 800ef28:	5d77      	ldrb	r7, [r6, r5]
 800ef2a:	4d08      	ldr	r5, [pc, #32]	; (800ef4c <_Color2IndexBulk+0x30>)
 800ef2c:	f3c4 4607 	ubfx	r6, r4, #16, #8
 800ef30:	b2e4      	uxtb	r4, r4
 800ef32:	5dae      	ldrb	r6, [r5, r6]
 800ef34:	5d2d      	ldrb	r5, [r5, r4]
 800ef36:	02f6      	lsls	r6, r6, #11
 800ef38:	eb06 1647 	add.w	r6, r6, r7, lsl #5
 800ef3c:	1974      	adds	r4, r6, r5
 800ef3e:	3a01      	subs	r2, #1
 800ef40:	800c      	strh	r4, [r1, #0]
 800ef42:	4419      	add	r1, r3
 800ef44:	d1eb      	bne.n	800ef1e <_Color2IndexBulk+0x2>
 800ef46:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ef48:	0802e200 	.word	0x0802e200
 800ef4c:	0802e300 	.word	0x0802e300

0800ef50 <_Index2ColorBulk>:
 800ef50:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ef52:	1e54      	subs	r4, r2, #1
 800ef54:	fb04 0003 	mla	r0, r4, r3, r0
 800ef58:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800ef5c:	8804      	ldrh	r4, [r0, #0]
 800ef5e:	4e0a      	ldr	r6, [pc, #40]	; (800ef88 <_Index2ColorBulk+0x38>)
 800ef60:	f3c4 1545 	ubfx	r5, r4, #5, #6
 800ef64:	1ac0      	subs	r0, r0, r3
 800ef66:	5d77      	ldrb	r7, [r6, r5]
 800ef68:	4d08      	ldr	r5, [pc, #32]	; (800ef8c <_Index2ColorBulk+0x3c>)
 800ef6a:	0ae6      	lsrs	r6, r4, #11
 800ef6c:	f004 041f 	and.w	r4, r4, #31
 800ef70:	5dae      	ldrb	r6, [r5, r6]
 800ef72:	5d2d      	ldrb	r5, [r5, r4]
 800ef74:	0436      	lsls	r6, r6, #16
 800ef76:	eb06 2607 	add.w	r6, r6, r7, lsl #8
 800ef7a:	1974      	adds	r4, r6, r5
 800ef7c:	3a01      	subs	r2, #1
 800ef7e:	f841 4904 	str.w	r4, [r1], #-4
 800ef82:	d1eb      	bne.n	800ef5c <_Index2ColorBulk+0xc>
 800ef84:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ef86:	bf00      	nop
 800ef88:	0802e1a0 	.word	0x0802e1a0
 800ef8c:	0802e1e0 	.word	0x0802e1e0

0800ef90 <WIDGET_SetEffect>:
 800ef90:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ef92:	2300      	movs	r3, #0
 800ef94:	f44f 7240 	mov.w	r2, #768	; 0x300
 800ef98:	9103      	str	r1, [sp, #12]
 800ef9a:	4669      	mov	r1, sp
 800ef9c:	9302      	str	r3, [sp, #8]
 800ef9e:	9200      	str	r2, [sp, #0]
 800efa0:	f7fa f8a6 	bl	80090f0 <WM_SendMessage>
 800efa4:	b005      	add	sp, #20
 800efa6:	bd00      	pop	{pc}

0800efa8 <_DrawDown>:
 800efa8:	4770      	bx	lr

0800efaa <_DrawUp>:
 800efaa:	4770      	bx	lr

0800efac <_DrawDownRect>:
 800efac:	4770      	bx	lr

0800efae <_DrawUpRect>:
 800efae:	4770      	bx	lr

0800efb0 <_DrawFlat>:
 800efb0:	4770      	bx	lr

0800efb2 <_EffectRequiresRedraw>:
 800efb2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800efb4:	460d      	mov	r5, r1
 800efb6:	f100 0108 	add.w	r1, r0, #8
 800efba:	4602      	mov	r2, r0
 800efbc:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800efbe:	c903      	ldmia	r1, {r0, r1}
 800efc0:	681c      	ldr	r4, [r3, #0]
 800efc2:	e88d 0003 	stmia.w	sp, {r0, r1}
 800efc6:	4610      	mov	r0, r2
 800efc8:	4669      	mov	r1, sp
 800efca:	f001 f809 	bl	800ffe0 <WM__Screen2Client>
 800efce:	f9b5 0000 	ldrsh.w	r0, [r5]
 800efd2:	f9bd 3000 	ldrsh.w	r3, [sp]
 800efd6:	1902      	adds	r2, r0, r4
 800efd8:	429a      	cmp	r2, r3
 800efda:	dc17      	bgt.n	800f00c <_EffectRequiresRedraw+0x5a>
 800efdc:	f9b5 1004 	ldrsh.w	r1, [r5, #4]
 800efe0:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 800efe4:	1b08      	subs	r0, r1, r4
 800efe6:	4290      	cmp	r0, r2
 800efe8:	db10      	blt.n	800f00c <_EffectRequiresRedraw+0x5a>
 800efea:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800efee:	f9bd 0002 	ldrsh.w	r0, [sp, #2]
 800eff2:	1919      	adds	r1, r3, r4
 800eff4:	4281      	cmp	r1, r0
 800eff6:	dc09      	bgt.n	800f00c <_EffectRequiresRedraw+0x5a>
 800eff8:	f9b5 0006 	ldrsh.w	r0, [r5, #6]
 800effc:	f9bd 2006 	ldrsh.w	r2, [sp, #6]
 800f000:	1b04      	subs	r4, r0, r4
 800f002:	4294      	cmp	r4, r2
 800f004:	bfac      	ite	ge
 800f006:	2000      	movge	r0, #0
 800f008:	2001      	movlt	r0, #1
 800f00a:	e000      	b.n	800f00e <_EffectRequiresRedraw+0x5c>
 800f00c:	2001      	movs	r0, #1
 800f00e:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800f010 <WIDGET__RotateRect90>:
 800f010:	b570      	push	{r4, r5, r6, lr}
 800f012:	f9b0 3000 	ldrsh.w	r3, [r0]
 800f016:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 800f01a:	8815      	ldrh	r5, [r2, #0]
 800f01c:	8894      	ldrh	r4, [r2, #4]
 800f01e:	1af0      	subs	r0, r6, r3
 800f020:	b283      	uxth	r3, r0
 800f022:	88d0      	ldrh	r0, [r2, #6]
 800f024:	8852      	ldrh	r2, [r2, #2]
 800f026:	80cc      	strh	r4, [r1, #6]
 800f028:	1a18      	subs	r0, r3, r0
 800f02a:	1a9b      	subs	r3, r3, r2
 800f02c:	8008      	strh	r0, [r1, #0]
 800f02e:	808b      	strh	r3, [r1, #4]
 800f030:	804d      	strh	r5, [r1, #2]
 800f032:	bd70      	pop	{r4, r5, r6, pc}

0800f034 <WIDGET__GetClientRect>:
 800f034:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800f036:	b513      	push	{r0, r1, r4, lr}
 800f038:	f003 0008 	and.w	r0, r3, #8
 800f03c:	460c      	mov	r4, r1
 800f03e:	b281      	uxth	r1, r0
 800f040:	b179      	cbz	r1, 800f062 <WIDGET__GetClientRect+0x2e>
 800f042:	4668      	mov	r0, sp
 800f044:	f7f9 fbba 	bl	80087bc <WM_GetClientRect>
 800f048:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800f04c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800f050:	f8bd 0000 	ldrh.w	r0, [sp]
 800f054:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 800f058:	8022      	strh	r2, [r4, #0]
 800f05a:	80a3      	strh	r3, [r4, #4]
 800f05c:	8060      	strh	r0, [r4, #2]
 800f05e:	80e1      	strh	r1, [r4, #6]
 800f060:	e002      	b.n	800f068 <WIDGET__GetClientRect+0x34>
 800f062:	4620      	mov	r0, r4
 800f064:	f7f9 fbaa 	bl	80087bc <WM_GetClientRect>
 800f068:	bd1c      	pop	{r2, r3, r4, pc}

0800f06a <WIDGET__GetBkColor>:
 800f06a:	b508      	push	{r3, lr}
 800f06c:	f7f9 fb25 	bl	80086ba <WM_GetParent>
 800f070:	f7f9 fbb2 	bl	80087d8 <WM_GetBkColor>
 800f074:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 800f078:	4298      	cmp	r0, r3
 800f07a:	d103      	bne.n	800f084 <WIDGET__GetBkColor+0x1a>
 800f07c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800f080:	f7f8 ba20 	b.w	80074c4 <DIALOG_GetBkColor>
 800f084:	bd08      	pop	{r3, pc}

0800f086 <WIDGET__GetInsideRect>:
 800f086:	b538      	push	{r3, r4, r5, lr}
 800f088:	4604      	mov	r4, r0
 800f08a:	460d      	mov	r5, r1
 800f08c:	f7fa f83e 	bl	800910c <WM__GetClientRectWin>
 800f090:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f092:	681a      	ldr	r2, [r3, #0]
 800f094:	4628      	mov	r0, r5
 800f096:	4629      	mov	r1, r5
 800f098:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f09c:	f7fd bb2a 	b.w	800c6f4 <GUI__ReduceRect>

0800f0a0 <WIDGET__GetWindowSizeX>:
 800f0a0:	b513      	push	{r0, r1, r4, lr}
 800f0a2:	4604      	mov	r4, r0
 800f0a4:	f7ff fc14 	bl	800e8d0 <GUI_ALLOC_LockH>
 800f0a8:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800f0aa:	9001      	str	r0, [sp, #4]
 800f0ac:	f003 0008 	and.w	r0, r3, #8
 800f0b0:	b281      	uxth	r1, r0
 800f0b2:	4620      	mov	r0, r4
 800f0b4:	b111      	cbz	r1, 800f0bc <WIDGET__GetWindowSizeX+0x1c>
 800f0b6:	f7f9 fae1 	bl	800867c <WM_GetWindowSizeY>
 800f0ba:	e001      	b.n	800f0c0 <WIDGET__GetWindowSizeX+0x20>
 800f0bc:	f7f9 faca 	bl	8008654 <WM_GetWindowSizeX>
 800f0c0:	4604      	mov	r4, r0
 800f0c2:	a801      	add	r0, sp, #4
 800f0c4:	f7ff fc12 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800f0c8:	4620      	mov	r0, r4
 800f0ca:	bd1c      	pop	{r2, r3, r4, pc}

0800f0cc <WIDGET_SetState>:
 800f0cc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f0ce:	460c      	mov	r4, r1
 800f0d0:	4605      	mov	r5, r0
 800f0d2:	f7ff fbfd 	bl	800e8d0 <GUI_ALLOC_LockH>
 800f0d6:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800f0d8:	9001      	str	r0, [sp, #4]
 800f0da:	4294      	cmp	r4, r2
 800f0dc:	d003      	beq.n	800f0e6 <WIDGET_SetState+0x1a>
 800f0de:	8644      	strh	r4, [r0, #50]	; 0x32
 800f0e0:	4628      	mov	r0, r5
 800f0e2:	f7fa f85b 	bl	800919c <WM_InvalidateWindow>
 800f0e6:	a801      	add	r0, sp, #4
 800f0e8:	f7ff fc00 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800f0ec:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800f0ee <WIDGET_OrState>:
 800f0ee:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f0f0:	460c      	mov	r4, r1
 800f0f2:	4605      	mov	r5, r0
 800f0f4:	b178      	cbz	r0, 800f116 <WIDGET_OrState+0x28>
 800f0f6:	f7ff fbeb 	bl	800e8d0 <GUI_ALLOC_LockH>
 800f0fa:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800f0fc:	9001      	str	r0, [sp, #4]
 800f0fe:	ea04 0102 	and.w	r1, r4, r2
 800f102:	428c      	cmp	r4, r1
 800f104:	d004      	beq.n	800f110 <WIDGET_OrState+0x22>
 800f106:	4314      	orrs	r4, r2
 800f108:	8644      	strh	r4, [r0, #50]	; 0x32
 800f10a:	4628      	mov	r0, r5
 800f10c:	f7fa f846 	bl	800919c <WM_InvalidateWindow>
 800f110:	a801      	add	r0, sp, #4
 800f112:	f7ff fbeb 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800f116:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800f118 <WIDGET_AndState>:
 800f118:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f11a:	460d      	mov	r5, r1
 800f11c:	4604      	mov	r4, r0
 800f11e:	b170      	cbz	r0, 800f13e <WIDGET_AndState+0x26>
 800f120:	f7ff fbd6 	bl	800e8d0 <GUI_ALLOC_LockH>
 800f124:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800f126:	9001      	str	r0, [sp, #4]
 800f128:	ea22 0105 	bic.w	r1, r2, r5
 800f12c:	428a      	cmp	r2, r1
 800f12e:	d003      	beq.n	800f138 <WIDGET_AndState+0x20>
 800f130:	8641      	strh	r1, [r0, #50]	; 0x32
 800f132:	4620      	mov	r0, r4
 800f134:	f7fa f832 	bl	800919c <WM_InvalidateWindow>
 800f138:	a801      	add	r0, sp, #4
 800f13a:	f7ff fbd7 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800f13e:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800f140 <WIDGET__Init>:
 800f140:	4b02      	ldr	r3, [pc, #8]	; (800f14c <WIDGET__Init+0xc>)
 800f142:	8642      	strh	r2, [r0, #50]	; 0x32
 800f144:	681b      	ldr	r3, [r3, #0]
 800f146:	8601      	strh	r1, [r0, #48]	; 0x30
 800f148:	62c3      	str	r3, [r0, #44]	; 0x2c
 800f14a:	4770      	bx	lr
 800f14c:	20000280 	.word	0x20000280

0800f150 <WIDGET_HandleActive>:
 800f150:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f152:	460d      	mov	r5, r1
 800f154:	b085      	sub	sp, #20
 800f156:	4606      	mov	r6, r0
 800f158:	2800      	cmp	r0, #0
 800f15a:	f000 8093 	beq.w	800f284 <WIDGET_HandleActive+0x134>
 800f15e:	f7ff fbb7 	bl	800e8d0 <GUI_ALLOC_LockH>
 800f162:	682b      	ldr	r3, [r5, #0]
 800f164:	9002      	str	r0, [sp, #8]
 800f166:	2b15      	cmp	r3, #21
 800f168:	4602      	mov	r2, r0
 800f16a:	d030      	beq.n	800f1ce <WIDGET_HandleActive+0x7e>
 800f16c:	dc06      	bgt.n	800f17c <WIDGET_HandleActive+0x2c>
 800f16e:	2b11      	cmp	r3, #17
 800f170:	d030      	beq.n	800f1d4 <WIDGET_HandleActive+0x84>
 800f172:	2b14      	cmp	r3, #20
 800f174:	d07a      	beq.n	800f26c <WIDGET_HandleActive+0x11c>
 800f176:	2b0d      	cmp	r3, #13
 800f178:	d17d      	bne.n	800f276 <WIDGET_HandleActive+0x126>
 800f17a:	e03c      	b.n	800f1f6 <WIDGET_HandleActive+0xa6>
 800f17c:	2b1e      	cmp	r3, #30
 800f17e:	d048      	beq.n	800f212 <WIDGET_HandleActive+0xc2>
 800f180:	dc04      	bgt.n	800f18c <WIDGET_HandleActive+0x3c>
 800f182:	2b16      	cmp	r3, #22
 800f184:	d177      	bne.n	800f276 <WIDGET_HandleActive+0x126>
 800f186:	68eb      	ldr	r3, [r5, #12]
 800f188:	8603      	strh	r3, [r0, #48]	; 0x30
 800f18a:	e072      	b.n	800f272 <WIDGET_HandleActive+0x122>
 800f18c:	2b1f      	cmp	r3, #31
 800f18e:	d068      	beq.n	800f262 <WIDGET_HandleActive+0x112>
 800f190:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800f194:	d16f      	bne.n	800f276 <WIDGET_HandleActive+0x126>
 800f196:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800f198:	68ed      	ldr	r5, [r5, #12]
 800f19a:	6801      	ldr	r1, [r0, #0]
 800f19c:	62d5      	str	r5, [r2, #44]	; 0x2c
 800f19e:	682a      	ldr	r2, [r5, #0]
 800f1a0:	a802      	add	r0, sp, #8
 800f1a2:	1a8d      	subs	r5, r1, r2
 800f1a4:	f7ff fba2 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800f1a8:	4630      	mov	r0, r6
 800f1aa:	f7ff fb91 	bl	800e8d0 <GUI_ALLOC_LockH>
 800f1ae:	ac04      	add	r4, sp, #16
 800f1b0:	4269      	negs	r1, r5
 800f1b2:	f844 0d04 	str.w	r0, [r4, #-4]!
 800f1b6:	460a      	mov	r2, r1
 800f1b8:	462b      	mov	r3, r5
 800f1ba:	9500      	str	r5, [sp, #0]
 800f1bc:	f000 fe7a 	bl	800feb4 <WM__UpdateChildPositions>
 800f1c0:	4620      	mov	r0, r4
 800f1c2:	f7ff fb93 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800f1c6:	4630      	mov	r0, r6
 800f1c8:	f7f9 ffe8 	bl	800919c <WM_InvalidateWindow>
 800f1cc:	e051      	b.n	800f272 <WIDGET_HandleActive+0x122>
 800f1ce:	f9b0 0030 	ldrsh.w	r0, [r0, #48]	; 0x30
 800f1d2:	e049      	b.n	800f268 <WIDGET_HandleActive+0x118>
 800f1d4:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800f1d6:	f002 0310 	and.w	r3, r2, #16
 800f1da:	b298      	uxth	r0, r3
 800f1dc:	2800      	cmp	r0, #0
 800f1de:	d04a      	beq.n	800f276 <WIDGET_HandleActive+0x126>
 800f1e0:	68e9      	ldr	r1, [r5, #12]
 800f1e2:	7a0c      	ldrb	r4, [r1, #8]
 800f1e4:	2c00      	cmp	r4, #0
 800f1e6:	d046      	beq.n	800f276 <WIDGET_HandleActive+0x126>
 800f1e8:	a802      	add	r0, sp, #8
 800f1ea:	f7ff fb7f 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800f1ee:	4630      	mov	r0, r6
 800f1f0:	f7f8 ff96 	bl	8008120 <WM_SetFocus>
 800f1f4:	e03f      	b.n	800f276 <WIDGET_HandleActive+0x126>
 800f1f6:	68e8      	ldr	r0, [r5, #12]
 800f1f8:	68c1      	ldr	r1, [r0, #12]
 800f1fa:	2900      	cmp	r1, #0
 800f1fc:	d03b      	beq.n	800f276 <WIDGET_HandleActive+0x126>
 800f1fe:	7a0c      	ldrb	r4, [r1, #8]
 800f200:	2c00      	cmp	r4, #0
 800f202:	d038      	beq.n	800f276 <WIDGET_HandleActive+0x126>
 800f204:	a802      	add	r0, sp, #8
 800f206:	f7ff fb71 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800f20a:	4630      	mov	r0, r6
 800f20c:	f7f9 faf6 	bl	80087fc <WM_BringToTop>
 800f210:	e02f      	b.n	800f272 <WIDGET_HandleActive+0x122>
 800f212:	68ef      	ldr	r7, [r5, #12]
 800f214:	8e41      	ldrh	r1, [r0, #50]	; 0x32
 800f216:	2f01      	cmp	r7, #1
 800f218:	d10a      	bne.n	800f230 <WIDGET_HandleActive+0xe0>
 800f21a:	f001 0210 	and.w	r2, r1, #16
 800f21e:	b294      	uxth	r4, r2
 800f220:	b16c      	cbz	r4, 800f23e <WIDGET_HandleActive+0xee>
 800f222:	4630      	mov	r0, r6
 800f224:	f041 0101 	orr.w	r1, r1, #1
 800f228:	f7ff ff50 	bl	800f0cc <WIDGET_SetState>
 800f22c:	2708      	movs	r7, #8
 800f22e:	e008      	b.n	800f242 <WIDGET_HandleActive+0xf2>
 800f230:	f021 0101 	bic.w	r1, r1, #1
 800f234:	4630      	mov	r0, r6
 800f236:	f7ff ff49 	bl	800f0cc <WIDGET_SetState>
 800f23a:	2709      	movs	r7, #9
 800f23c:	e001      	b.n	800f242 <WIDGET_HandleActive+0xf2>
 800f23e:	f04f 37ff 	mov.w	r7, #4294967295
 800f242:	a802      	add	r0, sp, #8
 800f244:	f7ff fb52 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800f248:	1c7b      	adds	r3, r7, #1
 800f24a:	f04f 0400 	mov.w	r4, #0
 800f24e:	d005      	beq.n	800f25c <WIDGET_HandleActive+0x10c>
 800f250:	4630      	mov	r0, r6
 800f252:	4639      	mov	r1, r7
 800f254:	f7f9 f8e5 	bl	8008422 <WM_NotifyParent>
 800f258:	60ec      	str	r4, [r5, #12]
 800f25a:	e00d      	b.n	800f278 <WIDGET_HandleActive+0x128>
 800f25c:	2301      	movs	r3, #1
 800f25e:	60eb      	str	r3, [r5, #12]
 800f260:	e00a      	b.n	800f278 <WIDGET_HandleActive+0x128>
 800f262:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800f264:	f3c3 1000 	ubfx	r0, r3, #4, #1
 800f268:	60e8      	str	r0, [r5, #12]
 800f26a:	e002      	b.n	800f272 <WIDGET_HandleActive+0x122>
 800f26c:	68e9      	ldr	r1, [r5, #12]
 800f26e:	f7ff ff0a 	bl	800f086 <WIDGET__GetInsideRect>
 800f272:	2400      	movs	r4, #0
 800f274:	e000      	b.n	800f278 <WIDGET_HandleActive+0x128>
 800f276:	2401      	movs	r4, #1
 800f278:	9802      	ldr	r0, [sp, #8]
 800f27a:	b120      	cbz	r0, 800f286 <WIDGET_HandleActive+0x136>
 800f27c:	a802      	add	r0, sp, #8
 800f27e:	f7ff fb35 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800f282:	e000      	b.n	800f286 <WIDGET_HandleActive+0x136>
 800f284:	2401      	movs	r4, #1
 800f286:	4620      	mov	r0, r4
 800f288:	b005      	add	sp, #20
 800f28a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f28c <WIDGET__DrawFocusRect>:
 800f28c:	b513      	push	{r0, r1, r4, lr}
 800f28e:	4614      	mov	r4, r2
 800f290:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800f292:	460b      	mov	r3, r1
 800f294:	f002 0108 	and.w	r1, r2, #8
 800f298:	b28a      	uxth	r2, r1
 800f29a:	b122      	cbz	r2, 800f2a6 <WIDGET__DrawFocusRect+0x1a>
 800f29c:	461a      	mov	r2, r3
 800f29e:	4669      	mov	r1, sp
 800f2a0:	f7ff feb6 	bl	800f010 <WIDGET__RotateRect90>
 800f2a4:	466b      	mov	r3, sp
 800f2a6:	4618      	mov	r0, r3
 800f2a8:	4621      	mov	r1, r4
 800f2aa:	f003 fc1b 	bl	8012ae4 <GUI_DrawFocusRect>
 800f2ae:	bd1c      	pop	{r2, r3, r4, pc}

0800f2b0 <WIDGET__DrawVLine>:
 800f2b0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f2b2:	8e44      	ldrh	r4, [r0, #50]	; 0x32
 800f2b4:	f004 0408 	and.w	r4, r4, #8
 800f2b8:	b2a4      	uxth	r4, r4
 800f2ba:	b1ac      	cbz	r4, 800f2e8 <WIDGET__DrawVLine+0x38>
 800f2bc:	b289      	uxth	r1, r1
 800f2be:	f8ad 1000 	strh.w	r1, [sp]
 800f2c2:	f8ad 1004 	strh.w	r1, [sp, #4]
 800f2c6:	f8ad 2002 	strh.w	r2, [sp, #2]
 800f2ca:	a902      	add	r1, sp, #8
 800f2cc:	466a      	mov	r2, sp
 800f2ce:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f2d2:	f7ff fe9d 	bl	800f010 <WIDGET__RotateRect90>
 800f2d6:	f9bd 000a 	ldrsh.w	r0, [sp, #10]
 800f2da:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 800f2de:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800f2e2:	f7fe f979 	bl	800d5d8 <GUI_DrawHLine>
 800f2e6:	e004      	b.n	800f2f2 <WIDGET__DrawVLine+0x42>
 800f2e8:	4608      	mov	r0, r1
 800f2ea:	4611      	mov	r1, r2
 800f2ec:	461a      	mov	r2, r3
 800f2ee:	f7fe f931 	bl	800d554 <GUI_DrawVLine>
 800f2f2:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0800f2f4 <WIDGET__FillRectEx>:
 800f2f4:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800f2f6:	b507      	push	{r0, r1, r2, lr}
 800f2f8:	460a      	mov	r2, r1
 800f2fa:	f003 0108 	and.w	r1, r3, #8
 800f2fe:	b28b      	uxth	r3, r1
 800f300:	b11b      	cbz	r3, 800f30a <WIDGET__FillRectEx+0x16>
 800f302:	4669      	mov	r1, sp
 800f304:	f7ff fe84 	bl	800f010 <WIDGET__RotateRect90>
 800f308:	466a      	mov	r2, sp
 800f30a:	4610      	mov	r0, r2
 800f30c:	f7fe f8d6 	bl	800d4bc <GUI_FillRectEx>
 800f310:	bd0e      	pop	{r1, r2, r3, pc}

0800f312 <WIDGET__EFFECT_DrawDownRect>:
 800f312:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f314:	4605      	mov	r5, r0
 800f316:	460c      	mov	r4, r1
 800f318:	b919      	cbnz	r1, 800f322 <WIDGET__EFFECT_DrawDownRect+0x10>
 800f31a:	4668      	mov	r0, sp
 800f31c:	f7f9 fa4e 	bl	80087bc <WM_GetClientRect>
 800f320:	466c      	mov	r4, sp
 800f322:	8e6b      	ldrh	r3, [r5, #50]	; 0x32
 800f324:	f003 0008 	and.w	r0, r3, #8
 800f328:	b281      	uxth	r1, r0
 800f32a:	b129      	cbz	r1, 800f338 <WIDGET__EFFECT_DrawDownRect+0x26>
 800f32c:	4622      	mov	r2, r4
 800f32e:	4628      	mov	r0, r5
 800f330:	4669      	mov	r1, sp
 800f332:	f7ff fe6d 	bl	800f010 <WIDGET__RotateRect90>
 800f336:	466c      	mov	r4, sp
 800f338:	4628      	mov	r0, r5
 800f33a:	4621      	mov	r1, r4
 800f33c:	f7ff fe39 	bl	800efb2 <_EffectRequiresRedraw>
 800f340:	b118      	cbz	r0, 800f34a <WIDGET__EFFECT_DrawDownRect+0x38>
 800f342:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 800f344:	4620      	mov	r0, r4
 800f346:	6913      	ldr	r3, [r2, #16]
 800f348:	4798      	blx	r3
 800f34a:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800f34c <WIDGET__EFFECT_DrawUpRect>:
 800f34c:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800f34e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f350:	460c      	mov	r4, r1
 800f352:	f003 0108 	and.w	r1, r3, #8
 800f356:	b28a      	uxth	r2, r1
 800f358:	4605      	mov	r5, r0
 800f35a:	b122      	cbz	r2, 800f366 <WIDGET__EFFECT_DrawUpRect+0x1a>
 800f35c:	4622      	mov	r2, r4
 800f35e:	4669      	mov	r1, sp
 800f360:	f7ff fe56 	bl	800f010 <WIDGET__RotateRect90>
 800f364:	466c      	mov	r4, sp
 800f366:	4628      	mov	r0, r5
 800f368:	4621      	mov	r1, r4
 800f36a:	f7ff fe22 	bl	800efb2 <_EffectRequiresRedraw>
 800f36e:	b118      	cbz	r0, 800f378 <WIDGET__EFFECT_DrawUpRect+0x2c>
 800f370:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f372:	6883      	ldr	r3, [r0, #8]
 800f374:	4620      	mov	r0, r4
 800f376:	4798      	blx	r3
 800f378:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
	...

0800f37c <WIDGET_GetDefaultEffect>:
 800f37c:	4b01      	ldr	r3, [pc, #4]	; (800f384 <WIDGET_GetDefaultEffect+0x8>)
 800f37e:	6818      	ldr	r0, [r3, #0]
 800f380:	4770      	bx	lr
 800f382:	bf00      	nop
 800f384:	20000280 	.word	0x20000280

0800f388 <_Create>:
 800f388:	4770      	bx	lr

0800f38a <_Paint>:
 800f38a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f38e:	b08b      	sub	sp, #44	; 0x2c
 800f390:	4681      	mov	r9, r0
 800f392:	f7ff fa9d 	bl	800e8d0 <GUI_ALLOC_LockH>
 800f396:	ae02      	add	r6, sp, #8
 800f398:	a904      	add	r1, sp, #16
 800f39a:	9001      	str	r0, [sp, #4]
 800f39c:	f7ff fe4a 	bl	800f034 <WIDGET__GetClientRect>
 800f3a0:	4630      	mov	r0, r6
 800f3a2:	a904      	add	r1, sp, #16
 800f3a4:	2201      	movs	r2, #1
 800f3a6:	f7fd f9a5 	bl	800c6f4 <GUI__ReduceRect>
 800f3aa:	9b01      	ldr	r3, [sp, #4]
 800f3ac:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 800f3b0:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800f3b4:	f9b3 1060 	ldrsh.w	r1, [r3, #96]	; 0x60
 800f3b8:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 800f3ba:	1aa8      	subs	r0, r5, r2
 800f3bc:	1c47      	adds	r7, r0, #1
 800f3be:	2002      	movs	r0, #2
 800f3c0:	1a7d      	subs	r5, r7, r1
 800f3c2:	fb91 f7f0 	sdiv	r7, r1, r0
 800f3c6:	19d7      	adds	r7, r2, r7
 800f3c8:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800f3ca:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800f3cc:	4648      	mov	r0, r9
 800f3ce:	ebc3 0802 	rsb	r8, r3, r2
 800f3d2:	f1b8 0f01 	cmp.w	r8, #1
 800f3d6:	bfb8      	it	lt
 800f3d8:	f04f 0801 	movlt.w	r8, #1
 800f3dc:	f7f8 fe02 	bl	8007fe4 <WM_GetHasTrans>
 800f3e0:	b928      	cbnz	r0, 800f3ee <_Paint+0x64>
 800f3e2:	9901      	ldr	r1, [sp, #4]
 800f3e4:	6b88      	ldr	r0, [r1, #56]	; 0x38
 800f3e6:	f7fd f8db 	bl	800c5a0 <LCD_SetBkColor>
 800f3ea:	f7fe fe5f 	bl	800e0ac <GUI_Clear>
 800f3ee:	e896 0003 	ldmia.w	r6, {r0, r1}
 800f3f2:	aa06      	add	r2, sp, #24
 800f3f4:	e882 0003 	stmia.w	r2, {r0, r1}
 800f3f8:	9801      	ldr	r0, [sp, #4]
 800f3fa:	f8ad 7020 	strh.w	r7, [sp, #32]
 800f3fe:	f8b0 c060 	ldrh.w	ip, [r0, #96]	; 0x60
 800f402:	6d82      	ldr	r2, [r0, #88]	; 0x58
 800f404:	f04f 0e02 	mov.w	lr, #2
 800f408:	fa0f f98c 	sxth.w	r9, ip
 800f40c:	fb99 f1fe 	sdiv	r1, r9, lr
 800f410:	b2bb      	uxth	r3, r7
 800f412:	ebc1 0903 	rsb	r9, r1, r3
 800f416:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 800f418:	1a89      	subs	r1, r1, r2
 800f41a:	4369      	muls	r1, r5
 800f41c:	fbb1 f2f8 	udiv	r2, r1, r8
 800f420:	eb09 0102 	add.w	r1, r9, r2
 800f424:	b28a      	uxth	r2, r1
 800f426:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800f42a:	f8ad 2018 	strh.w	r2, [sp, #24]
 800f42e:	2605      	movs	r6, #5
 800f430:	4494      	add	ip, r2
 800f432:	195b      	adds	r3, r3, r5
 800f434:	198a      	adds	r2, r1, r6
 800f436:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800f43a:	fb92 f3fe 	sdiv	r3, r2, lr
 800f43e:	b299      	uxth	r1, r3
 800f440:	1e4a      	subs	r2, r1, #1
 800f442:	eb01 030e 	add.w	r3, r1, lr
 800f446:	a908      	add	r1, sp, #32
 800f448:	f8ad 601a 	strh.w	r6, [sp, #26]
 800f44c:	f8ad c01c 	strh.w	ip, [sp, #28]
 800f450:	f8ad 2022 	strh.w	r2, [sp, #34]	; 0x22
 800f454:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800f458:	f7ff ff5b 	bl	800f312 <WIDGET__EFFECT_DrawDownRect>
 800f45c:	2c00      	cmp	r4, #0
 800f45e:	da05      	bge.n	800f46c <_Paint+0xe2>
 800f460:	f108 0401 	add.w	r4, r8, #1
 800f464:	fb95 f6f6 	sdiv	r6, r5, r6
 800f468:	42b4      	cmp	r4, r6
 800f46a:	dc13      	bgt.n	800f494 <_Paint+0x10a>
 800f46c:	2c01      	cmp	r4, #1
 800f46e:	dc12      	bgt.n	800f496 <_Paint+0x10c>
 800f470:	9a01      	ldr	r2, [sp, #4]
 800f472:	6bd0      	ldr	r0, [r2, #60]	; 0x3c
 800f474:	f7fd f89c 	bl	800c5b0 <LCD_SetColor>
 800f478:	9801      	ldr	r0, [sp, #4]
 800f47a:	a906      	add	r1, sp, #24
 800f47c:	f7ff ff3a 	bl	800f2f4 <WIDGET__FillRectEx>
 800f480:	9801      	ldr	r0, [sp, #4]
 800f482:	a906      	add	r1, sp, #24
 800f484:	f7ff ff62 	bl	800f34c <WIDGET__EFFECT_DrawUpRect>
 800f488:	9b01      	ldr	r3, [sp, #4]
 800f48a:	f893 0034 	ldrb.w	r0, [r3, #52]	; 0x34
 800f48e:	07c1      	lsls	r1, r0, #31
 800f490:	d416      	bmi.n	800f4c0 <_Paint+0x136>
 800f492:	e020      	b.n	800f4d6 <_Paint+0x14c>
 800f494:	240b      	movs	r4, #11
 800f496:	9e01      	ldr	r6, [sp, #4]
 800f498:	6c70      	ldr	r0, [r6, #68]	; 0x44
 800f49a:	f7fd f889 	bl	800c5b0 <LCD_SetColor>
 800f49e:	2600      	movs	r6, #0
 800f4a0:	46b0      	mov	r8, r6
 800f4a2:	1e60      	subs	r0, r4, #1
 800f4a4:	fb96 f1f0 	sdiv	r1, r6, r0
 800f4a8:	2201      	movs	r2, #1
 800f4aa:	2303      	movs	r3, #3
 800f4ac:	9801      	ldr	r0, [sp, #4]
 800f4ae:	1879      	adds	r1, r7, r1
 800f4b0:	f108 0801 	add.w	r8, r8, #1
 800f4b4:	f7ff fefc 	bl	800f2b0 <WIDGET__DrawVLine>
 800f4b8:	45a0      	cmp	r8, r4
 800f4ba:	442e      	add	r6, r5
 800f4bc:	dbf1      	blt.n	800f4a2 <_Paint+0x118>
 800f4be:	e7d7      	b.n	800f470 <_Paint+0xe6>
 800f4c0:	8e59      	ldrh	r1, [r3, #50]	; 0x32
 800f4c2:	07ca      	lsls	r2, r1, #31
 800f4c4:	d507      	bpl.n	800f4d6 <_Paint+0x14c>
 800f4c6:	6c18      	ldr	r0, [r3, #64]	; 0x40
 800f4c8:	f7fd f872 	bl	800c5b0 <LCD_SetColor>
 800f4cc:	9801      	ldr	r0, [sp, #4]
 800f4ce:	a904      	add	r1, sp, #16
 800f4d0:	2200      	movs	r2, #0
 800f4d2:	f7ff fedb 	bl	800f28c <WIDGET__DrawFocusRect>
 800f4d6:	a801      	add	r0, sp, #4
 800f4d8:	f7ff fa08 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800f4dc:	b00b      	add	sp, #44	; 0x2c
 800f4de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800f4e2 <_Create>:
 800f4e2:	4770      	bx	lr

0800f4e4 <_GetButtonSize>:
 800f4e4:	b513      	push	{r0, r1, r4, lr}
 800f4e6:	f7ff f9f3 	bl	800e8d0 <GUI_ALLOC_LockH>
 800f4ea:	ab02      	add	r3, sp, #8
 800f4ec:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800f4ee:	f843 0d04 	str.w	r0, [r3, #-4]!
 800f4f2:	8854      	ldrh	r4, [r2, #2]
 800f4f4:	4618      	mov	r0, r3
 800f4f6:	f7ff f9f9 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800f4fa:	4620      	mov	r0, r4
 800f4fc:	bd1c      	pop	{r2, r3, r4, pc}
	...

0800f500 <_Paint>:
 800f500:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f504:	b08f      	sub	sp, #60	; 0x3c
 800f506:	2500      	movs	r5, #0
 800f508:	4681      	mov	r9, r0
 800f50a:	950a      	str	r5, [sp, #40]	; 0x28
 800f50c:	950b      	str	r5, [sp, #44]	; 0x2c
 800f50e:	f7ff f9df 	bl	800e8d0 <GUI_ALLOC_LockH>
 800f512:	f9b0 1060 	ldrsh.w	r1, [r0, #96]	; 0x60
 800f516:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800f518:	9102      	str	r1, [sp, #8]
 800f51a:	a90a      	add	r1, sp, #40	; 0x28
 800f51c:	8857      	ldrh	r7, [r2, #2]
 800f51e:	9007      	str	r0, [sp, #28]
 800f520:	f7ff fd88 	bl	800f034 <WIDGET__GetClientRect>
 800f524:	9e07      	ldr	r6, [sp, #28]
 800f526:	8e70      	ldrh	r0, [r6, #50]	; 0x32
 800f528:	f000 0301 	and.w	r3, r0, #1
 800f52c:	4648      	mov	r0, r9
 800f52e:	9301      	str	r3, [sp, #4]
 800f530:	f7f8 fcc8 	bl	8007ec4 <WM__IsEnabled>
 800f534:	eb06 0180 	add.w	r1, r6, r0, lsl #2
 800f538:	9807      	ldr	r0, [sp, #28]
 800f53a:	6c4e      	ldr	r6, [r1, #68]	; 0x44
 800f53c:	f8b0 1062 	ldrh.w	r1, [r0, #98]	; 0x62
 800f540:	8832      	ldrh	r2, [r6, #0]
 800f542:	f8d0 804c 	ldr.w	r8, [r0, #76]	; 0x4c
 800f546:	1cd3      	adds	r3, r2, #3
 800f548:	1d3c      	adds	r4, r7, #4
 800f54a:	1cfa      	adds	r2, r7, #3
 800f54c:	f8b0 7064 	ldrh.w	r7, [r0, #100]	; 0x64
 800f550:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800f554:	1e7b      	subs	r3, r7, #1
 800f556:	fb03 2201 	mla	r2, r3, r1, r2
 800f55a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800f55c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800f560:	f7fd f826 	bl	800c5b0 <LCD_SetColor>
 800f564:	9807      	ldr	r0, [sp, #28]
 800f566:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800f568:	f7fd fdbe 	bl	800d0e8 <GUI_SetFont>
 800f56c:	2002      	movs	r0, #2
 800f56e:	f7fd fdb1 	bl	800d0d4 <GUI_SetTextMode>
 800f572:	9f07      	ldr	r7, [sp, #28]
 800f574:	a908      	add	r1, sp, #32
 800f576:	6c38      	ldr	r0, [r7, #64]	; 0x40
 800f578:	f003 fa92 	bl	8012aa0 <GUI_GetFontInfo>
 800f57c:	f7ff f89e 	bl	800e6bc <GUI_GetFontDistY>
 800f580:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 800f584:	f89d 1022 	ldrb.w	r1, [sp, #34]	; 0x22
 800f588:	f8b6 b000 	ldrh.w	fp, [r6]
 800f58c:	1aca      	subs	r2, r1, r3
 800f58e:	f10b 0106 	add.w	r1, fp, #6
 800f592:	b2d7      	uxtb	r7, r2
 800f594:	42a3      	cmp	r3, r4
 800f596:	b28a      	uxth	r2, r1
 800f598:	9703      	str	r7, [sp, #12]
 800f59a:	9204      	str	r2, [sp, #16]
 800f59c:	dc04      	bgt.n	800f5a8 <_Paint+0xa8>
 800f59e:	1ae5      	subs	r5, r4, r3
 800f5a0:	2402      	movs	r4, #2
 800f5a2:	fb95 f7f4 	sdiv	r7, r5, r4
 800f5a6:	b2bd      	uxth	r5, r7
 800f5a8:	3b01      	subs	r3, #1
 800f5aa:	280c      	cmp	r0, #12
 800f5ac:	bfcc      	ite	gt
 800f5ae:	2703      	movgt	r7, #3
 800f5b0:	2702      	movle	r7, #2
 800f5b2:	1959      	adds	r1, r3, r5
 800f5b4:	b228      	sxth	r0, r5
 800f5b6:	42b8      	cmp	r0, r7
 800f5b8:	b28a      	uxth	r2, r1
 800f5ba:	4648      	mov	r0, r9
 800f5bc:	bfb8      	it	lt
 800f5be:	b2ef      	uxtblt	r7, r5
 800f5c0:	9205      	str	r2, [sp, #20]
 800f5c2:	f7f8 fd0f 	bl	8007fe4 <WM_GetHasTrans>
 800f5c6:	b950      	cbnz	r0, 800f5de <_Paint+0xde>
 800f5c8:	9c07      	ldr	r4, [sp, #28]
 800f5ca:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800f5cc:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 800f5d0:	4298      	cmp	r0, r3
 800f5d2:	bf08      	it	eq
 800f5d4:	4841      	ldreq	r0, [pc, #260]	; (800f6dc <_Paint+0x1dc>)
 800f5d6:	f7fc ffe3 	bl	800c5a0 <LCD_SetBkColor>
 800f5da:	f7fe fd67 	bl	800e0ac <GUI_Clear>
 800f5de:	2400      	movs	r4, #0
 800f5e0:	ab0e      	add	r3, sp, #56	; 0x38
 800f5e2:	f853 2d1c 	ldr.w	r2, [r3, #-28]!
 800f5e6:	f8b2 1064 	ldrh.w	r1, [r2, #100]	; 0x64
 800f5ea:	428c      	cmp	r4, r1
 800f5ec:	da64      	bge.n	800f6b8 <_Paint+0x1b8>
 800f5ee:	f8b2 a062 	ldrh.w	sl, [r2, #98]	; 0x62
 800f5f2:	4618      	mov	r0, r3
 800f5f4:	f7ff f97a 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800f5f8:	fb0a fa04 	mul.w	sl, sl, r4
 800f5fc:	2102      	movs	r1, #2
 800f5fe:	eb0a 0201 	add.w	r2, sl, r1
 800f602:	4630      	mov	r0, r6
 800f604:	f7fe f9c2 	bl	800d98c <GUI_DrawBitmap>
 800f608:	9a02      	ldr	r2, [sp, #8]
 800f60a:	42a2      	cmp	r2, r4
 800f60c:	d112      	bne.n	800f634 <_Paint+0x134>
 800f60e:	8831      	ldrh	r1, [r6, #0]
 800f610:	f8b8 0000 	ldrh.w	r0, [r8]
 800f614:	2302      	movs	r3, #2
 800f616:	1a0a      	subs	r2, r1, r0
 800f618:	fb92 f1f3 	sdiv	r1, r2, r3
 800f61c:	8870      	ldrh	r0, [r6, #2]
 800f61e:	f8b8 2002 	ldrh.w	r2, [r8, #2]
 800f622:	1a80      	subs	r0, r0, r2
 800f624:	fb90 f3f3 	sdiv	r3, r0, r3
 800f628:	1c9a      	adds	r2, r3, #2
 800f62a:	4640      	mov	r0, r8
 800f62c:	3102      	adds	r1, #2
 800f62e:	4452      	add	r2, sl
 800f630:	f7fe f9ac 	bl	800d98c <GUI_DrawBitmap>
 800f634:	4648      	mov	r0, r9
 800f636:	f7ff f94b 	bl	800e8d0 <GUI_ALLOC_LockH>
 800f63a:	4621      	mov	r1, r4
 800f63c:	9007      	str	r0, [sp, #28]
 800f63e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800f640:	f7f7 f899 	bl	8006776 <GUI_ARRAY_GetpItemLocked>
 800f644:	9006      	str	r0, [sp, #24]
 800f646:	2800      	cmp	r0, #0
 800f648:	d034      	beq.n	800f6b4 <_Paint+0x1b4>
 800f64a:	7803      	ldrb	r3, [r0, #0]
 800f64c:	b37b      	cbz	r3, 800f6ae <_Paint+0x1ae>
 800f64e:	9b05      	ldr	r3, [sp, #20]
 800f650:	9a04      	ldr	r2, [sp, #16]
 800f652:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800f656:	2100      	movs	r1, #0
 800f658:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 800f65c:	f8ad 1034 	strh.w	r1, [sp, #52]	; 0x34
 800f660:	f8ad 5032 	strh.w	r5, [sp, #50]	; 0x32
 800f664:	f7fd ff0c 	bl	800d480 <GUI_GetStringDistX>
 800f668:	f10b 0204 	add.w	r2, fp, #4
 800f66c:	1810      	adds	r0, r2, r0
 800f66e:	f8ad 0034 	strh.w	r0, [sp, #52]	; 0x34
 800f672:	2100      	movs	r1, #0
 800f674:	a80c      	add	r0, sp, #48	; 0x30
 800f676:	4652      	mov	r2, sl
 800f678:	f7fd feba 	bl	800d3f0 <GUI_MoveRect>
 800f67c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 800f680:	9b03      	ldr	r3, [sp, #12]
 800f682:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 800f686:	9806      	ldr	r0, [sp, #24]
 800f688:	1ad2      	subs	r2, r2, r3
 800f68a:	f7fe fb3f 	bl	800dd0c <GUI_DispStringAt>
 800f68e:	9901      	ldr	r1, [sp, #4]
 800f690:	b169      	cbz	r1, 800f6ae <_Paint+0x1ae>
 800f692:	9807      	ldr	r0, [sp, #28]
 800f694:	f9b0 2060 	ldrsh.w	r2, [r0, #96]	; 0x60
 800f698:	42a2      	cmp	r2, r4
 800f69a:	d002      	beq.n	800f6a2 <_Paint+0x1a2>
 800f69c:	f890 3066 	ldrb.w	r3, [r0, #102]	; 0x66
 800f6a0:	b12b      	cbz	r3, 800f6ae <_Paint+0x1ae>
 800f6a2:	b27a      	sxtb	r2, r7
 800f6a4:	a80a      	add	r0, sp, #40	; 0x28
 800f6a6:	a90c      	add	r1, sp, #48	; 0x30
 800f6a8:	4252      	negs	r2, r2
 800f6aa:	f7fd f823 	bl	800c6f4 <GUI__ReduceRect>
 800f6ae:	a806      	add	r0, sp, #24
 800f6b0:	f7ff f91c 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800f6b4:	3401      	adds	r4, #1
 800f6b6:	e793      	b.n	800f5e0 <_Paint+0xe0>
 800f6b8:	9801      	ldr	r0, [sp, #4]
 800f6ba:	b140      	cbz	r0, 800f6ce <_Paint+0x1ce>
 800f6bc:	6bd0      	ldr	r0, [r2, #60]	; 0x3c
 800f6be:	9300      	str	r3, [sp, #0]
 800f6c0:	f7fc ff76 	bl	800c5b0 <LCD_SetColor>
 800f6c4:	a80a      	add	r0, sp, #40	; 0x28
 800f6c6:	2100      	movs	r1, #0
 800f6c8:	f003 fa0c 	bl	8012ae4 <GUI_DrawFocusRect>
 800f6cc:	9b00      	ldr	r3, [sp, #0]
 800f6ce:	4618      	mov	r0, r3
 800f6d0:	f7ff f90c 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800f6d4:	b00f      	add	sp, #60	; 0x3c
 800f6d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f6da:	bf00      	nop
 800f6dc:	00c0c0c0 	.word	0x00c0c0c0

0800f6e0 <_Create>:
 800f6e0:	4770      	bx	lr

0800f6e2 <_Paint>:
 800f6e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f6e6:	b08b      	sub	sp, #44	; 0x2c
 800f6e8:	f7ff f8f2 	bl	800e8d0 <GUI_ALLOC_LockH>
 800f6ec:	9000      	str	r0, [sp, #0]
 800f6ee:	a806      	add	r0, sp, #24
 800f6f0:	f7f9 f864 	bl	80087bc <WM_GetClientRect>
 800f6f4:	9b00      	ldr	r3, [sp, #0]
 800f6f6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f6f8:	ad04      	add	r5, sp, #16
 800f6fa:	4628      	mov	r0, r5
 800f6fc:	a906      	add	r1, sp, #24
 800f6fe:	6812      	ldr	r2, [r2, #0]
 800f700:	f7fc fff8 	bl	800c6f4 <GUI__ReduceRect>
 800f704:	9800      	ldr	r0, [sp, #0]
 800f706:	6b41      	ldr	r1, [r0, #52]	; 0x34
 800f708:	f7f6 fe05 	bl	8006316 <PROGBAR__Value2Pos>
 800f70c:	4606      	mov	r6, r0
 800f70e:	9800      	ldr	r0, [sp, #0]
 800f710:	f890 1068 	ldrb.w	r1, [r0, #104]	; 0x68
 800f714:	07cb      	lsls	r3, r1, #31
 800f716:	d526      	bpl.n	800f766 <_Paint+0x84>
 800f718:	e895 0003 	ldmia.w	r5, {r0, r1}
 800f71c:	ac02      	add	r4, sp, #8
 800f71e:	e884 0003 	stmia.w	r4, {r0, r1}
 800f722:	4620      	mov	r0, r4
 800f724:	f8ad 600a 	strh.w	r6, [sp, #10]
 800f728:	f7f8 fc32 	bl	8007f90 <WM_SetUserClipRect>
 800f72c:	9f00      	ldr	r7, [sp, #0]
 800f72e:	6d38      	ldr	r0, [r7, #80]	; 0x50
 800f730:	f7fc ff36 	bl	800c5a0 <LCD_SetBkColor>
 800f734:	6db8      	ldr	r0, [r7, #88]	; 0x58
 800f736:	f7fc ff3b 	bl	800c5b0 <LCD_SetColor>
 800f73a:	f7fe fcb7 	bl	800e0ac <GUI_Clear>
 800f73e:	e895 0003 	ldmia.w	r5, {r0, r1}
 800f742:	3e01      	subs	r6, #1
 800f744:	e884 0003 	stmia.w	r4, {r0, r1}
 800f748:	4620      	mov	r0, r4
 800f74a:	f8ad 600e 	strh.w	r6, [sp, #14]
 800f74e:	f7f8 fc1f 	bl	8007f90 <WM_SetUserClipRect>
 800f752:	9c00      	ldr	r4, [sp, #0]
 800f754:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800f756:	f7fc ff23 	bl	800c5a0 <LCD_SetBkColor>
 800f75a:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800f75c:	f7fc ff28 	bl	800c5b0 <LCD_SetColor>
 800f760:	f7fe fca4 	bl	800e0ac <GUI_Clear>
 800f764:	e05a      	b.n	800f81c <_Paint+0x13a>
 800f766:	f7f6 fd90 	bl	800628a <PROGBAR__GetTextLocked>
 800f76a:	9001      	str	r0, [sp, #4]
 800f76c:	b140      	cbz	r0, 800f780 <_Paint+0x9e>
 800f76e:	9800      	ldr	r0, [sp, #0]
 800f770:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800f772:	f7fd fcb9 	bl	800d0e8 <GUI_SetFont>
 800f776:	9800      	ldr	r0, [sp, #0]
 800f778:	9a01      	ldr	r2, [sp, #4]
 800f77a:	a908      	add	r1, sp, #32
 800f77c:	f7f6 fd88 	bl	8006290 <PROGBAR__GetTextRect>
 800f780:	2002      	movs	r0, #2
 800f782:	f7fd fca7 	bl	800d0d4 <GUI_SetTextMode>
 800f786:	ad04      	add	r5, sp, #16
 800f788:	4681      	mov	r9, r0
 800f78a:	e895 0003 	ldmia.w	r5, {r0, r1}
 800f78e:	ac02      	add	r4, sp, #8
 800f790:	e884 0003 	stmia.w	r4, {r0, r1}
 800f794:	1e77      	subs	r7, r6, #1
 800f796:	4620      	mov	r0, r4
 800f798:	f8ad 700c 	strh.w	r7, [sp, #12]
 800f79c:	f7f8 fbf8 	bl	8007f90 <WM_SetUserClipRect>
 800f7a0:	f8dd 8000 	ldr.w	r8, [sp]
 800f7a4:	9f01      	ldr	r7, [sp, #4]
 800f7a6:	f8d8 0050 	ldr.w	r0, [r8, #80]	; 0x50
 800f7aa:	f9bd b020 	ldrsh.w	fp, [sp, #32]
 800f7ae:	f9bd a022 	ldrsh.w	sl, [sp, #34]	; 0x22
 800f7b2:	f7fc fef5 	bl	800c5a0 <LCD_SetBkColor>
 800f7b6:	f8d8 0058 	ldr.w	r0, [r8, #88]	; 0x58
 800f7ba:	f7fc fef9 	bl	800c5b0 <LCD_SetColor>
 800f7be:	f7fe fc75 	bl	800e0ac <GUI_Clear>
 800f7c2:	b137      	cbz	r7, 800f7d2 <_Paint+0xf0>
 800f7c4:	4658      	mov	r0, fp
 800f7c6:	4651      	mov	r1, sl
 800f7c8:	f7fd fe4e 	bl	800d468 <GUI_GotoXY>
 800f7cc:	4638      	mov	r0, r7
 800f7ce:	f7fe faa5 	bl	800dd1c <GUI_DispString>
 800f7d2:	e895 0003 	ldmia.w	r5, {r0, r1}
 800f7d6:	e884 0003 	stmia.w	r4, {r0, r1}
 800f7da:	4620      	mov	r0, r4
 800f7dc:	f8ad 6008 	strh.w	r6, [sp, #8]
 800f7e0:	f7f8 fbd6 	bl	8007f90 <WM_SetUserClipRect>
 800f7e4:	9d00      	ldr	r5, [sp, #0]
 800f7e6:	9c01      	ldr	r4, [sp, #4]
 800f7e8:	6d68      	ldr	r0, [r5, #84]	; 0x54
 800f7ea:	f9bd 7020 	ldrsh.w	r7, [sp, #32]
 800f7ee:	f9bd 6022 	ldrsh.w	r6, [sp, #34]	; 0x22
 800f7f2:	f7fc fed5 	bl	800c5a0 <LCD_SetBkColor>
 800f7f6:	6de8      	ldr	r0, [r5, #92]	; 0x5c
 800f7f8:	f7fc feda 	bl	800c5b0 <LCD_SetColor>
 800f7fc:	f7fe fc56 	bl	800e0ac <GUI_Clear>
 800f800:	b134      	cbz	r4, 800f810 <_Paint+0x12e>
 800f802:	4638      	mov	r0, r7
 800f804:	4631      	mov	r1, r6
 800f806:	f7fd fe2f 	bl	800d468 <GUI_GotoXY>
 800f80a:	4620      	mov	r0, r4
 800f80c:	f7fe fa86 	bl	800dd1c <GUI_DispString>
 800f810:	4648      	mov	r0, r9
 800f812:	f7fd fc5f 	bl	800d0d4 <GUI_SetTextMode>
 800f816:	a801      	add	r0, sp, #4
 800f818:	f7ff f868 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800f81c:	ac0a      	add	r4, sp, #40	; 0x28
 800f81e:	2000      	movs	r0, #0
 800f820:	f7f8 fbb6 	bl	8007f90 <WM_SetUserClipRect>
 800f824:	f854 0d28 	ldr.w	r0, [r4, #-40]!
 800f828:	a906      	add	r1, sp, #24
 800f82a:	f7ff fd72 	bl	800f312 <WIDGET__EFFECT_DrawDownRect>
 800f82e:	4668      	mov	r0, sp
 800f830:	f7ff f85c 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800f834:	b00b      	add	sp, #44	; 0x2c
 800f836:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f83a <GUI_DRAW__Draw>:
 800f83a:	e92d 43e3 	stmdb	sp!, {r0, r1, r5, r6, r7, r8, r9, lr}
 800f83e:	4688      	mov	r8, r1
 800f840:	4617      	mov	r7, r2
 800f842:	461e      	mov	r6, r3
 800f844:	4681      	mov	r9, r0
 800f846:	b170      	cbz	r0, 800f866 <GUI_DRAW__Draw+0x2c>
 800f848:	f7ff f842 	bl	800e8d0 <GUI_ALLOC_LockH>
 800f84c:	4605      	mov	r5, r0
 800f84e:	a802      	add	r0, sp, #8
 800f850:	682b      	ldr	r3, [r5, #0]
 800f852:	f840 5d04 	str.w	r5, [r0, #-4]!
 800f856:	681d      	ldr	r5, [r3, #0]
 800f858:	f7ff f848 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800f85c:	4648      	mov	r0, r9
 800f85e:	4641      	mov	r1, r8
 800f860:	463a      	mov	r2, r7
 800f862:	4633      	mov	r3, r6
 800f864:	47a8      	blx	r5
 800f866:	e8bd 83ec 	ldmia.w	sp!, {r2, r3, r5, r6, r7, r8, r9, pc}

0800f86a <FRAMEWIN__UpdateButtons>:
 800f86a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f86e:	b085      	sub	sp, #20
 800f870:	4604      	mov	r4, r0
 800f872:	9301      	str	r3, [sp, #4]
 800f874:	4693      	mov	fp, r2
 800f876:	460d      	mov	r5, r1
 800f878:	f7ff f82a 	bl	800e8d0 <GUI_ALLOC_LockH>
 800f87c:	f10d 0810 	add.w	r8, sp, #16
 800f880:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 800f882:	f848 0d08 	str.w	r0, [r8, #-8]!
 800f886:	688e      	ldr	r6, [r1, #8]
 800f888:	f7f7 fb32 	bl	8006ef0 <FRAMEWIN__CalcTitleHeight>
 800f88c:	4607      	mov	r7, r0
 800f88e:	4640      	mov	r0, r8
 800f890:	f7ff f82c 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800f894:	6832      	ldr	r2, [r6, #0]
 800f896:	2101      	movs	r1, #1
 800f898:	4620      	mov	r0, r4
 800f89a:	4790      	blx	r2
 800f89c:	2103      	movs	r1, #3
 800f89e:	6833      	ldr	r3, [r6, #0]
 800f8a0:	4681      	mov	r9, r0
 800f8a2:	4620      	mov	r0, r4
 800f8a4:	4798      	blx	r3
 800f8a6:	2100      	movs	r1, #0
 800f8a8:	4682      	mov	sl, r0
 800f8aa:	6832      	ldr	r2, [r6, #0]
 800f8ac:	4620      	mov	r0, r4
 800f8ae:	4790      	blx	r2
 800f8b0:	42af      	cmp	r7, r5
 800f8b2:	4680      	mov	r8, r0
 800f8b4:	d107      	bne.n	800f8c6 <FRAMEWIN__UpdateButtons+0x5c>
 800f8b6:	45d9      	cmp	r9, fp
 800f8b8:	d105      	bne.n	800f8c6 <FRAMEWIN__UpdateButtons+0x5c>
 800f8ba:	9801      	ldr	r0, [sp, #4]
 800f8bc:	4582      	cmp	sl, r0
 800f8be:	d102      	bne.n	800f8c6 <FRAMEWIN__UpdateButtons+0x5c>
 800f8c0:	990e      	ldr	r1, [sp, #56]	; 0x38
 800f8c2:	4588      	cmp	r8, r1
 800f8c4:	d041      	beq.n	800f94a <FRAMEWIN__UpdateButtons+0xe0>
 800f8c6:	4620      	mov	r0, r4
 800f8c8:	f7f8 ff22 	bl	8008710 <WM_GetFirstChild>
 800f8cc:	2600      	movs	r6, #0
 800f8ce:	1b7d      	subs	r5, r7, r5
 800f8d0:	4604      	mov	r4, r0
 800f8d2:	4637      	mov	r7, r6
 800f8d4:	2c00      	cmp	r4, #0
 800f8d6:	d038      	beq.n	800f94a <FRAMEWIN__UpdateButtons+0xe0>
 800f8d8:	4620      	mov	r0, r4
 800f8da:	f7fe fff9 	bl	800e8d0 <GUI_ALLOC_LockH>
 800f8de:	9003      	str	r0, [sp, #12]
 800f8e0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f8e2:	f403 7220 	and.w	r2, r3, #640	; 0x280
 800f8e6:	2a80      	cmp	r2, #128	; 0x80
 800f8e8:	d002      	beq.n	800f8f0 <FRAMEWIN__UpdateButtons+0x86>
 800f8ea:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 800f8ee:	d124      	bne.n	800f93a <FRAMEWIN__UpdateButtons+0xd0>
 800f8f0:	b125      	cbz	r5, 800f8fc <FRAMEWIN__UpdateButtons+0x92>
 800f8f2:	4620      	mov	r0, r4
 800f8f4:	4629      	mov	r1, r5
 800f8f6:	462a      	mov	r2, r5
 800f8f8:	f7f8 fd19 	bl	800832e <WM_ResizeWindow>
 800f8fc:	9803      	ldr	r0, [sp, #12]
 800f8fe:	6a81      	ldr	r1, [r0, #40]	; 0x28
 800f900:	060a      	lsls	r2, r1, #24
 800f902:	d50b      	bpl.n	800f91c <FRAMEWIN__UpdateButtons+0xb2>
 800f904:	9b01      	ldr	r3, [sp, #4]
 800f906:	ebca 0203 	rsb	r2, sl, r3
 800f90a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f90c:	fb07 2115 	mls	r1, r7, r5, r2
 800f910:	4620      	mov	r0, r4
 800f912:	ebc3 0208 	rsb	r2, r3, r8
 800f916:	3701      	adds	r7, #1
 800f918:	f7f8 fe3f 	bl	800859a <WM_MoveWindow>
 800f91c:	9803      	ldr	r0, [sp, #12]
 800f91e:	6a81      	ldr	r1, [r0, #40]	; 0x28
 800f920:	058b      	lsls	r3, r1, #22
 800f922:	d50a      	bpl.n	800f93a <FRAMEWIN__UpdateButtons+0xd0>
 800f924:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f926:	ebcb 0209 	rsb	r2, fp, r9
 800f92a:	fb06 2105 	mla	r1, r6, r5, r2
 800f92e:	4620      	mov	r0, r4
 800f930:	ebc3 0208 	rsb	r2, r3, r8
 800f934:	3601      	adds	r6, #1
 800f936:	f7f8 fe30 	bl	800859a <WM_MoveWindow>
 800f93a:	a803      	add	r0, sp, #12
 800f93c:	f7fe ffd6 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800f940:	4620      	mov	r0, r4
 800f942:	f7f8 fec2 	bl	80086ca <WM_GetNextSibling>
 800f946:	4604      	mov	r4, r0
 800f948:	e7c4      	b.n	800f8d4 <FRAMEWIN__UpdateButtons+0x6a>
 800f94a:	b005      	add	sp, #20
 800f94c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f950 <_GetBorderSize>:
 800f950:	b513      	push	{r0, r1, r4, lr}
 800f952:	f7fe ffbd 	bl	800e8d0 <GUI_ALLOC_LockH>
 800f956:	ab02      	add	r3, sp, #8
 800f958:	f9b0 4056 	ldrsh.w	r4, [r0, #86]	; 0x56
 800f95c:	f843 0d04 	str.w	r0, [r3, #-4]!
 800f960:	4618      	mov	r0, r3
 800f962:	f7fe ffc3 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800f966:	4620      	mov	r0, r4
 800f968:	bd1c      	pop	{r2, r3, r4, pc}
	...

0800f96c <_Create>:
 800f96c:	4901      	ldr	r1, [pc, #4]	; (800f974 <_Create+0x8>)
 800f96e:	f000 b8f1 	b.w	800fb54 <FRAMEWIN_SetOwnerDraw>
 800f972:	bf00      	nop
 800f974:	0800fa99 	.word	0x0800fa99

0800f978 <_Paint>:
 800f978:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f97c:	b093      	sub	sp, #76	; 0x4c
 800f97e:	4604      	mov	r4, r0
 800f980:	f7fe ffa6 	bl	800e8d0 <GUI_ALLOC_LockH>
 800f984:	9001      	str	r0, [sp, #4]
 800f986:	4620      	mov	r0, r4
 800f988:	f7f8 fe64 	bl	8008654 <WM_GetWindowSizeX>
 800f98c:	4680      	mov	r8, r0
 800f98e:	4620      	mov	r0, r4
 800f990:	f7f8 fe74 	bl	800867c <WM_GetWindowSizeY>
 800f994:	ae04      	add	r6, sp, #16
 800f996:	9b01      	ldr	r3, [sp, #4]
 800f998:	4631      	mov	r1, r6
 800f99a:	4681      	mov	r9, r0
 800f99c:	4620      	mov	r0, r4
 800f99e:	f8b3 5056 	ldrh.w	r5, [r3, #86]	; 0x56
 800f9a2:	f7f7 fafc 	bl	8006f9e <FRAMEWIN__CalcPositions>
 800f9a6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 800f9aa:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800f9ae:	f8ad 1008 	strh.w	r1, [sp, #8]
 800f9b2:	b20a      	sxth	r2, r1
 800f9b4:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 800f9b8:	920d      	str	r2, [sp, #52]	; 0x34
 800f9ba:	2001      	movs	r0, #1
 800f9bc:	1e4a      	subs	r2, r1, #1
 800f9be:	900a      	str	r0, [sp, #40]	; 0x28
 800f9c0:	b218      	sxth	r0, r3
 800f9c2:	f8ad 300c 	strh.w	r3, [sp, #12]
 800f9c6:	900f      	str	r0, [sp, #60]	; 0x3c
 800f9c8:	b293      	uxth	r3, r2
 800f9ca:	f8bd 0022 	ldrh.w	r0, [sp, #34]	; 0x22
 800f9ce:	f8ad 300a 	strh.w	r3, [sp, #10]
 800f9d2:	b21a      	sxth	r2, r3
 800f9d4:	b201      	sxth	r1, r0
 800f9d6:	f8ad 000e 	strh.w	r0, [sp, #14]
 800f9da:	1c53      	adds	r3, r2, #1
 800f9dc:	2000      	movs	r0, #0
 800f9de:	f8bd 7010 	ldrh.w	r7, [sp, #16]
 800f9e2:	9409      	str	r4, [sp, #36]	; 0x24
 800f9e4:	9611      	str	r6, [sp, #68]	; 0x44
 800f9e6:	9110      	str	r1, [sp, #64]	; 0x40
 800f9e8:	930e      	str	r3, [sp, #56]	; 0x38
 800f9ea:	f7f9 fe17 	bl	800961c <WM__InitIVRSearch>
 800f9ee:	b928      	cbnz	r0, 800f9fc <_Paint+0x84>
 800f9f0:	a801      	add	r0, sp, #4
 800f9f2:	f7fe ff7b 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800f9f6:	b013      	add	sp, #76	; 0x4c
 800f9f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f9fc:	b22d      	sxth	r5, r5
 800f9fe:	fa05 f787 	sxtah	r7, r5, r7
 800fa02:	a802      	add	r0, sp, #8
 800fa04:	f7f8 fac4 	bl	8007f90 <WM_SetUserClipRect>
 800fa08:	9c01      	ldr	r4, [sp, #4]
 800fa0a:	6e26      	ldr	r6, [r4, #96]	; 0x60
 800fa0c:	b10e      	cbz	r6, 800fa12 <_Paint+0x9a>
 800fa0e:	a809      	add	r0, sp, #36	; 0x24
 800fa10:	47b0      	blx	r6
 800fa12:	2000      	movs	r0, #0
 800fa14:	f7f8 fabc 	bl	8007f90 <WM_SetUserClipRect>
 800fa18:	481e      	ldr	r0, [pc, #120]	; (800fa94 <_Paint+0x11c>)
 800fa1a:	f7fc fdc9 	bl	800c5b0 <LCD_SetColor>
 800fa1e:	f108 34ff 	add.w	r4, r8, #4294967295
 800fa22:	2000      	movs	r0, #0
 800fa24:	4601      	mov	r1, r0
 800fa26:	4622      	mov	r2, r4
 800fa28:	1e6b      	subs	r3, r5, #1
 800fa2a:	f7fd fd53 	bl	800d4d4 <GUI_FillRect>
 800fa2e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800fa32:	f109 36ff 	add.w	r6, r9, #4294967295
 800fa36:	2000      	movs	r0, #0
 800fa38:	4601      	mov	r1, r0
 800fa3a:	3a01      	subs	r2, #1
 800fa3c:	4633      	mov	r3, r6
 800fa3e:	f7fd fd49 	bl	800d4d4 <GUI_FillRect>
 800fa42:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 800fa46:	2100      	movs	r1, #0
 800fa48:	3001      	adds	r0, #1
 800fa4a:	4622      	mov	r2, r4
 800fa4c:	4633      	mov	r3, r6
 800fa4e:	f7fd fd41 	bl	800d4d4 <GUI_FillRect>
 800fa52:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 800fa56:	2000      	movs	r0, #0
 800fa58:	3101      	adds	r1, #1
 800fa5a:	4622      	mov	r2, r4
 800fa5c:	4633      	mov	r3, r6
 800fa5e:	f7fd fd39 	bl	800d4d4 <GUI_FillRect>
 800fa62:	9b01      	ldr	r3, [sp, #4]
 800fa64:	8e5a      	ldrh	r2, [r3, #50]	; 0x32
 800fa66:	f002 0020 	and.w	r0, r2, #32
 800fa6a:	b281      	uxth	r1, r0
 800fa6c:	b141      	cbz	r1, 800fa80 <_Paint+0x108>
 800fa6e:	f9b3 3058 	ldrsh.w	r3, [r3, #88]	; 0x58
 800fa72:	18fb      	adds	r3, r7, r3
 800fa74:	2000      	movs	r0, #0
 800fa76:	4639      	mov	r1, r7
 800fa78:	4622      	mov	r2, r4
 800fa7a:	3b01      	subs	r3, #1
 800fa7c:	f7fd fd2a 	bl	800d4d4 <GUI_FillRect>
 800fa80:	2d01      	cmp	r5, #1
 800fa82:	dd01      	ble.n	800fa88 <_Paint+0x110>
 800fa84:	f003 fa96 	bl	8012fb4 <WIDGET_EFFECT_3D_DrawUp>
 800fa88:	f7f9 fd08 	bl	800949c <WM__GetNextIVR>
 800fa8c:	2800      	cmp	r0, #0
 800fa8e:	d1b8      	bne.n	800fa02 <_Paint+0x8a>
 800fa90:	e7ae      	b.n	800f9f0 <_Paint+0x78>
 800fa92:	bf00      	nop
 800fa94:	00aaaaaa 	.word	0x00aaaaaa

0800fa98 <FRAMEWIN_OwnerDraw>:
 800fa98:	b530      	push	{r4, r5, lr}
 800fa9a:	4604      	mov	r4, r0
 800fa9c:	b089      	sub	sp, #36	; 0x24
 800fa9e:	6800      	ldr	r0, [r0, #0]
 800faa0:	f7fe ff16 	bl	800e8d0 <GUI_ALLOC_LockH>
 800faa4:	f8b0 507c 	ldrh.w	r5, [r0, #124]	; 0x7c
 800faa8:	9000      	str	r0, [sp, #0]
 800faaa:	6f00      	ldr	r0, [r0, #112]	; 0x70
 800faac:	6a24      	ldr	r4, [r4, #32]
 800faae:	f3c5 05c0 	ubfx	r5, r5, #3, #1
 800fab2:	b108      	cbz	r0, 800fab8 <FRAMEWIN_OwnerDraw+0x20>
 800fab4:	f7fe ff0c 	bl	800e8d0 <GUI_ALLOC_LockH>
 800fab8:	4622      	mov	r2, r4
 800faba:	9001      	str	r0, [sp, #4]
 800fabc:	f852 0f0c 	ldr.w	r0, [r2, #12]!
 800fac0:	6851      	ldr	r1, [r2, #4]
 800fac2:	8922      	ldrh	r2, [r4, #8]
 800fac4:	ab06      	add	r3, sp, #24
 800fac6:	c303      	stmia	r3!, {r0, r1}
 800fac8:	88a0      	ldrh	r0, [r4, #4]
 800faca:	89e3      	ldrh	r3, [r4, #14]
 800facc:	1e41      	subs	r1, r0, #1
 800face:	1c50      	adds	r0, r2, #1
 800fad0:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 800fad4:	f8ad 1008 	strh.w	r1, [sp, #8]
 800fad8:	8a61      	ldrh	r1, [r4, #18]
 800fada:	f8ad 000c 	strh.w	r0, [sp, #12]
 800fade:	1c50      	adds	r0, r2, #1
 800fae0:	f8ad 100e 	strh.w	r1, [sp, #14]
 800fae4:	f8ad 0018 	strh.w	r0, [sp, #24]
 800fae8:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800faec:	9800      	ldr	r0, [sp, #0]
 800faee:	f8ad 300a 	strh.w	r3, [sp, #10]
 800faf2:	1e4a      	subs	r2, r1, #1
 800faf4:	3301      	adds	r3, #1
 800faf6:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800faf8:	f8ad 301a 	strh.w	r3, [sp, #26]
 800fafc:	f8ad 201c 	strh.w	r2, [sp, #28]
 800fb00:	f7fd faf2 	bl	800d0e8 <GUI_SetFont>
 800fb04:	9b00      	ldr	r3, [sp, #0]
 800fb06:	9801      	ldr	r0, [sp, #4]
 800fb08:	f9b3 305a 	ldrsh.w	r3, [r3, #90]	; 0x5a
 800fb0c:	a906      	add	r1, sp, #24
 800fb0e:	aa04      	add	r2, sp, #16
 800fb10:	f002 ff21 	bl	8012956 <GUI__CalcTextRect>
 800fb14:	9a00      	ldr	r2, [sp, #0]
 800fb16:	f105 010c 	add.w	r1, r5, #12
 800fb1a:	eb02 0081 	add.w	r0, r2, r1, lsl #2
 800fb1e:	350e      	adds	r5, #14
 800fb20:	6880      	ldr	r0, [r0, #8]
 800fb22:	f7fc fd3d 	bl	800c5a0 <LCD_SetBkColor>
 800fb26:	9b00      	ldr	r3, [sp, #0]
 800fb28:	eb03 0185 	add.w	r1, r3, r5, lsl #2
 800fb2c:	6888      	ldr	r0, [r1, #8]
 800fb2e:	f7fc fd3f 	bl	800c5b0 <LCD_SetColor>
 800fb32:	aa06      	add	r2, sp, #24
 800fb34:	9801      	ldr	r0, [sp, #4]
 800fb36:	a902      	add	r1, sp, #8
 800fb38:	ab04      	add	r3, sp, #16
 800fb3a:	f003 f921 	bl	8012d80 <WIDGET__FillStringInRect>
 800fb3e:	4668      	mov	r0, sp
 800fb40:	f7fe fed4 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800fb44:	9a01      	ldr	r2, [sp, #4]
 800fb46:	b112      	cbz	r2, 800fb4e <FRAMEWIN_OwnerDraw+0xb6>
 800fb48:	a801      	add	r0, sp, #4
 800fb4a:	f7fe fecf 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800fb4e:	2000      	movs	r0, #0
 800fb50:	b009      	add	sp, #36	; 0x24
 800fb52:	bd30      	pop	{r4, r5, pc}

0800fb54 <FRAMEWIN_SetOwnerDraw>:
 800fb54:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800fb56:	460c      	mov	r4, r1
 800fb58:	4605      	mov	r5, r0
 800fb5a:	b158      	cbz	r0, 800fb74 <FRAMEWIN_SetOwnerDraw+0x20>
 800fb5c:	f7fe feb8 	bl	800e8d0 <GUI_ALLOC_LockH>
 800fb60:	4602      	mov	r2, r0
 800fb62:	a802      	add	r0, sp, #8
 800fb64:	6614      	str	r4, [r2, #96]	; 0x60
 800fb66:	f840 2d04 	str.w	r2, [r0, #-4]!
 800fb6a:	f7fe febf 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800fb6e:	4628      	mov	r0, r5
 800fb70:	f7f9 fb14 	bl	800919c <WM_InvalidateWindow>
 800fb74:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800fb76 <_Create>:
 800fb76:	4770      	bx	lr

0800fb78 <_GetButtonSize>:
 800fb78:	b508      	push	{r3, lr}
 800fb7a:	f7ff fbff 	bl	800f37c <WIDGET_GetDefaultEffect>
 800fb7e:	4b03      	ldr	r3, [pc, #12]	; (800fb8c <_GetButtonSize+0x14>)
 800fb80:	6800      	ldr	r0, [r0, #0]
 800fb82:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800fb84:	880a      	ldrh	r2, [r1, #0]
 800fb86:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 800fb8a:	bd08      	pop	{r3, pc}
 800fb8c:	2000014c 	.word	0x2000014c

0800fb90 <_Paint>:
 800fb90:	b570      	push	{r4, r5, r6, lr}
 800fb92:	b088      	sub	sp, #32
 800fb94:	2300      	movs	r3, #0
 800fb96:	4604      	mov	r4, r0
 800fb98:	9302      	str	r3, [sp, #8]
 800fb9a:	9303      	str	r3, [sp, #12]
 800fb9c:	f7fe fe98 	bl	800e8d0 <GUI_ALLOC_LockH>
 800fba0:	9000      	str	r0, [sp, #0]
 800fba2:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800fba4:	6805      	ldr	r5, [r0, #0]
 800fba6:	4620      	mov	r0, r4
 800fba8:	f7f8 f98c 	bl	8007ec4 <WM__IsEnabled>
 800fbac:	4606      	mov	r6, r0
 800fbae:	4620      	mov	r0, r4
 800fbb0:	f7f8 fa18 	bl	8007fe4 <WM_GetHasTrans>
 800fbb4:	b960      	cbnz	r0, 800fbd0 <_Paint+0x40>
 800fbb6:	9900      	ldr	r1, [sp, #0]
 800fbb8:	6c08      	ldr	r0, [r1, #64]	; 0x40
 800fbba:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 800fbbe:	4290      	cmp	r0, r2
 800fbc0:	d102      	bne.n	800fbc8 <_Paint+0x38>
 800fbc2:	4620      	mov	r0, r4
 800fbc4:	f7ff fa51 	bl	800f06a <WIDGET__GetBkColor>
 800fbc8:	f7fc fcea 	bl	800c5a0 <LCD_SetBkColor>
 800fbcc:	f7fe fa6e 	bl	800e0ac <GUI_Clear>
 800fbd0:	9b00      	ldr	r3, [sp, #0]
 800fbd2:	6e58      	ldr	r0, [r3, #100]	; 0x64
 800fbd4:	8802      	ldrh	r2, [r0, #0]
 800fbd6:	8840      	ldrh	r0, [r0, #2]
 800fbd8:	0069      	lsls	r1, r5, #1
 800fbda:	b28b      	uxth	r3, r1
 800fbdc:	1e51      	subs	r1, r2, #1
 800fbde:	185a      	adds	r2, r3, r1
 800fbe0:	1e41      	subs	r1, r0, #1
 800fbe2:	185b      	adds	r3, r3, r1
 800fbe4:	a802      	add	r0, sp, #8
 800fbe6:	f8ad 300e 	strh.w	r3, [sp, #14]
 800fbea:	f8ad 200c 	strh.w	r2, [sp, #12]
 800fbee:	f7f8 f9cf 	bl	8007f90 <WM_SetUserClipRect>
 800fbf2:	9a00      	ldr	r2, [sp, #0]
 800fbf4:	eb02 0086 	add.w	r0, r2, r6, lsl #2
 800fbf8:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800fbfa:	f7fc fcd1 	bl	800c5a0 <LCD_SetBkColor>
 800fbfe:	f7fe fa55 	bl	800e0ac <GUI_Clear>
 800fc02:	9900      	ldr	r1, [sp, #0]
 800fc04:	f891 3075 	ldrb.w	r3, [r1, #117]	; 0x75
 800fc08:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 800fc0c:	eb01 0286 	add.w	r2, r1, r6, lsl #2
 800fc10:	6d96      	ldr	r6, [r2, #88]	; 0x58
 800fc12:	b15e      	cbz	r6, 800fc2c <_Paint+0x9c>
 800fc14:	4668      	mov	r0, sp
 800fc16:	f7fe fe69 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800fc1a:	4630      	mov	r0, r6
 800fc1c:	4629      	mov	r1, r5
 800fc1e:	462a      	mov	r2, r5
 800fc20:	f7fd feb4 	bl	800d98c <GUI_DrawBitmap>
 800fc24:	4620      	mov	r0, r4
 800fc26:	f7fe fe53 	bl	800e8d0 <GUI_ALLOC_LockH>
 800fc2a:	9000      	str	r0, [sp, #0]
 800fc2c:	a902      	add	r1, sp, #8
 800fc2e:	9800      	ldr	r0, [sp, #0]
 800fc30:	f7ff fb6f 	bl	800f312 <WIDGET__EFFECT_DrawDownRect>
 800fc34:	2000      	movs	r0, #0
 800fc36:	f7f8 f9ab 	bl	8007f90 <WM_SetUserClipRect>
 800fc3a:	9800      	ldr	r0, [sp, #0]
 800fc3c:	6f81      	ldr	r1, [r0, #120]	; 0x78
 800fc3e:	2900      	cmp	r1, #0
 800fc40:	f000 8082 	beq.w	800fd48 <_Paint+0x1b8>
 800fc44:	ac04      	add	r4, sp, #16
 800fc46:	4620      	mov	r0, r4
 800fc48:	f7f8 fdb8 	bl	80087bc <WM_GetClientRect>
 800fc4c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800fc50:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800fc54:	18d0      	adds	r0, r2, r3
 800fc56:	9b00      	ldr	r3, [sp, #0]
 800fc58:	f893 2056 	ldrb.w	r2, [r3, #86]	; 0x56
 800fc5c:	1c41      	adds	r1, r0, #1
 800fc5e:	1888      	adds	r0, r1, r2
 800fc60:	f8ad 0010 	strh.w	r0, [sp, #16]
 800fc64:	2002      	movs	r0, #2
 800fc66:	f7fd fa35 	bl	800d0d4 <GUI_SetTextMode>
 800fc6a:	9900      	ldr	r1, [sp, #0]
 800fc6c:	6c48      	ldr	r0, [r1, #68]	; 0x44
 800fc6e:	f7fc fc9f 	bl	800c5b0 <LCD_SetColor>
 800fc72:	9b00      	ldr	r3, [sp, #0]
 800fc74:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800fc76:	f7fd fa37 	bl	800d0e8 <GUI_SetFont>
 800fc7a:	9a00      	ldr	r2, [sp, #0]
 800fc7c:	6f90      	ldr	r0, [r2, #120]	; 0x78
 800fc7e:	f7fe fe27 	bl	800e8d0 <GUI_ALLOC_LockH>
 800fc82:	9b00      	ldr	r3, [sp, #0]
 800fc84:	9001      	str	r0, [sp, #4]
 800fc86:	4621      	mov	r1, r4
 800fc88:	f9b3 2054 	ldrsh.w	r2, [r3, #84]	; 0x54
 800fc8c:	f7fe f817 	bl	800dcbe <GUI_DispStringInRect>
 800fc90:	9800      	ldr	r0, [sp, #0]
 800fc92:	8e41      	ldrh	r1, [r0, #50]	; 0x32
 800fc94:	07cb      	lsls	r3, r1, #31
 800fc96:	d554      	bpl.n	800fd42 <_Paint+0x1b2>
 800fc98:	9801      	ldr	r0, [sp, #4]
 800fc9a:	f7fd fbf1 	bl	800d480 <GUI_GetStringDistX>
 800fc9e:	4605      	mov	r5, r0
 800fca0:	f7fd fc06 	bl	800d4b0 <GUI_GetFontSizeY>
 800fca4:	4603      	mov	r3, r0
 800fca6:	e894 0003 	ldmia.w	r4, {r0, r1}
 800fcaa:	aa08      	add	r2, sp, #32
 800fcac:	e902 0003 	stmdb	r2, {r0, r1}
 800fcb0:	9900      	ldr	r1, [sp, #0]
 800fcb2:	f8b1 2054 	ldrh.w	r2, [r1, #84]	; 0x54
 800fcb6:	f022 0003 	bic.w	r0, r2, #3
 800fcba:	b200      	sxth	r0, r0
 800fcbc:	2804      	cmp	r0, #4
 800fcbe:	d009      	beq.n	800fcd4 <_Paint+0x144>
 800fcc0:	280c      	cmp	r0, #12
 800fcc2:	d10c      	bne.n	800fcde <_Paint+0x14e>
 800fcc4:	f9bd 4016 	ldrsh.w	r4, [sp, #22]
 800fcc8:	1ae0      	subs	r0, r4, r3
 800fcca:	3001      	adds	r0, #1
 800fccc:	2402      	movs	r4, #2
 800fcce:	fb90 f0f4 	sdiv	r0, r0, r4
 800fcd2:	e002      	b.n	800fcda <_Paint+0x14a>
 800fcd4:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 800fcd8:	1ac0      	subs	r0, r0, r3
 800fcda:	f8ad 001a 	strh.w	r0, [sp, #26]
 800fcde:	f022 020c 	bic.w	r2, r2, #12
 800fce2:	b212      	sxth	r2, r2
 800fce4:	2a01      	cmp	r2, #1
 800fce6:	d00d      	beq.n	800fd04 <_Paint+0x174>
 800fce8:	2a02      	cmp	r2, #2
 800fcea:	d116      	bne.n	800fd1a <_Paint+0x18a>
 800fcec:	f9bd 4014 	ldrsh.w	r4, [sp, #20]
 800fcf0:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 800fcf4:	1a20      	subs	r0, r4, r0
 800fcf6:	1b40      	subs	r0, r0, r5
 800fcf8:	fb90 f2f2 	sdiv	r2, r0, r2
 800fcfc:	f8bd 0018 	ldrh.w	r0, [sp, #24]
 800fd00:	1810      	adds	r0, r2, r0
 800fd02:	e008      	b.n	800fd16 <_Paint+0x186>
 800fd04:	f8bd 0014 	ldrh.w	r0, [sp, #20]
 800fd08:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 800fd0c:	1882      	adds	r2, r0, r2
 800fd0e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 800fd12:	1a12      	subs	r2, r2, r0
 800fd14:	1b50      	subs	r0, r2, r5
 800fd16:	f8ad 0018 	strh.w	r0, [sp, #24]
 800fd1a:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 800fd1e:	1e50      	subs	r0, r2, #1
 800fd20:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800fd24:	1945      	adds	r5, r0, r5
 800fd26:	1e50      	subs	r0, r2, #1
 800fd28:	18c3      	adds	r3, r0, r3
 800fd2a:	6c88      	ldr	r0, [r1, #72]	; 0x48
 800fd2c:	f8ad 501c 	strh.w	r5, [sp, #28]
 800fd30:	f8ad 301e 	strh.w	r3, [sp, #30]
 800fd34:	f7fc fc3c 	bl	800c5b0 <LCD_SetColor>
 800fd38:	a806      	add	r0, sp, #24
 800fd3a:	f04f 31ff 	mov.w	r1, #4294967295
 800fd3e:	f002 fed1 	bl	8012ae4 <GUI_DrawFocusRect>
 800fd42:	a801      	add	r0, sp, #4
 800fd44:	f7fe fdd2 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800fd48:	4668      	mov	r0, sp
 800fd4a:	f7fe fdcf 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800fd4e:	b008      	add	sp, #32
 800fd50:	bd70      	pop	{r4, r5, r6, pc}

0800fd52 <_Create>:
 800fd52:	4770      	bx	lr

0800fd54 <_Paint>:
 800fd54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fd58:	b088      	sub	sp, #32
 800fd5a:	4604      	mov	r4, r0
 800fd5c:	f7fe fdb8 	bl	800e8d0 <GUI_ALLOC_LockH>
 800fd60:	f8b0 8032 	ldrh.w	r8, [r0, #50]	; 0x32
 800fd64:	9000      	str	r0, [sp, #0]
 800fd66:	4620      	mov	r0, r4
 800fd68:	f7f8 f8ac 	bl	8007ec4 <WM__IsEnabled>
 800fd6c:	9b00      	ldr	r3, [sp, #0]
 800fd6e:	f3c8 2500 	ubfx	r5, r8, #8, #1
 800fd72:	af02      	add	r7, sp, #8
 800fd74:	2800      	cmp	r0, #0
 800fd76:	bf14      	ite	ne
 800fd78:	462e      	movne	r6, r5
 800fd7a:	2602      	moveq	r6, #2
 800fd7c:	6d58      	ldr	r0, [r3, #84]	; 0x54
 800fd7e:	f7fd f9b3 	bl	800d0e8 <GUI_SetFont>
 800fd82:	4638      	mov	r0, r7
 800fd84:	f7fd fb96 	bl	800d4b4 <GUI_GetClientRect>
 800fd88:	e897 0003 	ldmia.w	r7, {r0, r1}
 800fd8c:	aa04      	add	r2, sp, #16
 800fd8e:	e882 0003 	stmia.w	r2, {r0, r1}
 800fd92:	9800      	ldr	r0, [sp, #0]
 800fd94:	b91d      	cbnz	r5, 800fd9e <_Paint+0x4a>
 800fd96:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800fd98:	6850      	ldr	r0, [r2, #4]
 800fd9a:	4780      	blx	r0
 800fd9c:	e003      	b.n	800fda6 <_Paint+0x52>
 800fd9e:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800fda0:	694b      	ldr	r3, [r1, #20]
 800fda2:	b123      	cbz	r3, 800fdae <_Paint+0x5a>
 800fda4:	4798      	blx	r3
 800fda6:	9900      	ldr	r1, [sp, #0]
 800fda8:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 800fdaa:	681a      	ldr	r2, [r3, #0]
 800fdac:	e00d      	b.n	800fdca <_Paint+0x76>
 800fdae:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800fdb0:	f7fc fbfe 	bl	800c5b0 <LCD_SetColor>
 800fdb4:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800fdb8:	f9bd 000a 	ldrsh.w	r0, [sp, #10]
 800fdbc:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 800fdc0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800fdc4:	f7ff f828 	bl	800ee18 <GUI_DrawRect>
 800fdc8:	2201      	movs	r2, #1
 800fdca:	a804      	add	r0, sp, #16
 800fdcc:	4601      	mov	r1, r0
 800fdce:	f7fc fc91 	bl	800c6f4 <GUI__ReduceRect>
 800fdd2:	9a00      	ldr	r2, [sp, #0]
 800fdd4:	eb02 0086 	add.w	r0, r2, r6, lsl #2
 800fdd8:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800fdda:	f7fc fbe1 	bl	800c5a0 <LCD_SetBkColor>
 800fdde:	9900      	ldr	r1, [sp, #0]
 800fde0:	eb01 0386 	add.w	r3, r1, r6, lsl #2
 800fde4:	6c18      	ldr	r0, [r3, #64]	; 0x40
 800fde6:	f7fc fbe3 	bl	800c5b0 <LCD_SetColor>
 800fdea:	a804      	add	r0, sp, #16
 800fdec:	f7f8 f8d0 	bl	8007f90 <WM_SetUserClipRect>
 800fdf0:	f7fe f95c 	bl	800e0ac <GUI_Clear>
 800fdf4:	2e02      	cmp	r6, #2
 800fdf6:	9e00      	ldr	r6, [sp, #0]
 800fdf8:	d005      	beq.n	800fe06 <_Paint+0xb2>
 800fdfa:	6f30      	ldr	r0, [r6, #112]	; 0x70
 800fdfc:	2800      	cmp	r0, #0
 800fdfe:	bf14      	ite	ne
 800fe00:	462b      	movne	r3, r5
 800fe02:	2300      	moveq	r3, #0
 800fe04:	e004      	b.n	800fe10 <_Paint+0xbc>
 800fe06:	6f72      	ldr	r2, [r6, #116]	; 0x74
 800fe08:	2a00      	cmp	r2, #0
 800fe0a:	bf14      	ite	ne
 800fe0c:	2302      	movne	r3, #2
 800fe0e:	2300      	moveq	r3, #0
 800fe10:	ae08      	add	r6, sp, #32
 800fe12:	4668      	mov	r0, sp
 800fe14:	f856 1d20 	ldr.w	r1, [r6, #-32]!
 800fe18:	eb01 0283 	add.w	r2, r1, r3, lsl #2
 800fe1c:	6ed6      	ldr	r6, [r2, #108]	; 0x6c
 800fe1e:	f7fe fd65 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800fe22:	2200      	movs	r2, #0
 800fe24:	4613      	mov	r3, r2
 800fe26:	4630      	mov	r0, r6
 800fe28:	4621      	mov	r1, r4
 800fe2a:	f7ff fd06 	bl	800f83a <GUI_DRAW__Draw>
 800fe2e:	4620      	mov	r0, r4
 800fe30:	f7fe fd4e 	bl	800e8d0 <GUI_ALLOC_LockH>
 800fe34:	6e83      	ldr	r3, [r0, #104]	; 0x68
 800fe36:	9000      	str	r0, [sp, #0]
 800fe38:	b31b      	cbz	r3, 800fe82 <_Paint+0x12e>
 800fe3a:	a804      	add	r0, sp, #16
 800fe3c:	c803      	ldmia	r0, {r0, r1}
 800fe3e:	ac06      	add	r4, sp, #24
 800fe40:	e884 0003 	stmia.w	r4, {r0, r1}
 800fe44:	b125      	cbz	r5, 800fe50 <_Paint+0xfc>
 800fe46:	2101      	movs	r1, #1
 800fe48:	4620      	mov	r0, r4
 800fe4a:	460a      	mov	r2, r1
 800fe4c:	f7fd fad0 	bl	800d3f0 <GUI_MoveRect>
 800fe50:	9a00      	ldr	r2, [sp, #0]
 800fe52:	4620      	mov	r0, r4
 800fe54:	f9b2 105e 	ldrsh.w	r1, [r2, #94]	; 0x5e
 800fe58:	f9b2 2060 	ldrsh.w	r2, [r2, #96]	; 0x60
 800fe5c:	f7fd fac8 	bl	800d3f0 <GUI_MoveRect>
 800fe60:	2002      	movs	r0, #2
 800fe62:	f7fd f937 	bl	800d0d4 <GUI_SetTextMode>
 800fe66:	9900      	ldr	r1, [sp, #0]
 800fe68:	6e88      	ldr	r0, [r1, #104]	; 0x68
 800fe6a:	f7fe fd31 	bl	800e8d0 <GUI_ALLOC_LockH>
 800fe6e:	9b00      	ldr	r3, [sp, #0]
 800fe70:	9001      	str	r0, [sp, #4]
 800fe72:	4621      	mov	r1, r4
 800fe74:	f9b3 205c 	ldrsh.w	r2, [r3, #92]	; 0x5c
 800fe78:	f7fd ff21 	bl	800dcbe <GUI_DispStringInRect>
 800fe7c:	a801      	add	r0, sp, #4
 800fe7e:	f7fe fd35 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800fe82:	f018 0f01 	tst.w	r8, #1
 800fe86:	d00c      	beq.n	800fea2 <_Paint+0x14e>
 800fe88:	9800      	ldr	r0, [sp, #0]
 800fe8a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800fe8c:	f7fc fb90 	bl	800c5b0 <LCD_SetColor>
 800fe90:	9a00      	ldr	r2, [sp, #0]
 800fe92:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 800fe94:	6809      	ldr	r1, [r1, #0]
 800fe96:	a802      	add	r0, sp, #8
 800fe98:	2902      	cmp	r1, #2
 800fe9a:	bfb8      	it	lt
 800fe9c:	2102      	movlt	r1, #2
 800fe9e:	f002 fe21 	bl	8012ae4 <GUI_DrawFocusRect>
 800fea2:	2000      	movs	r0, #0
 800fea4:	f7f8 f874 	bl	8007f90 <WM_SetUserClipRect>
 800fea8:	4668      	mov	r0, sp
 800feaa:	f7fe fd1f 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800feae:	b008      	add	sp, #32
 800feb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800feb4 <WM__UpdateChildPositions>:
 800feb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800feb8:	b089      	sub	sp, #36	; 0x24
 800feba:	69c4      	ldr	r4, [r0, #28]
 800febc:	9303      	str	r3, [sp, #12]
 800febe:	468a      	mov	sl, r1
 800fec0:	4693      	mov	fp, r2
 800fec2:	2c00      	cmp	r4, #0
 800fec4:	d075      	beq.n	800ffb2 <WM__UpdateChildPositions+0xfe>
 800fec6:	4620      	mov	r0, r4
 800fec8:	f7fe fd02 	bl	800e8d0 <GUI_ALLOC_LockH>
 800fecc:	4603      	mov	r3, r0
 800fece:	9005      	str	r0, [sp, #20]
 800fed0:	c803      	ldmia	r0, {r0, r1}
 800fed2:	aa08      	add	r2, sp, #32
 800fed4:	e902 0003 	stmdb	r2, {r0, r1}
 800fed8:	6a99      	ldr	r1, [r3, #40]	; 0x28
 800feda:	f8bd 8018 	ldrh.w	r8, [sp, #24]
 800fede:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800fee2:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 800fee6:	f8bd 501e 	ldrh.w	r5, [sp, #30]
 800feea:	f401 7020 	and.w	r0, r1, #640	; 0x280
 800feee:	2880      	cmp	r0, #128	; 0x80
 800fef0:	d009      	beq.n	800ff06 <WM__UpdateChildPositions+0x52>
 800fef2:	f5b0 7f20 	cmp.w	r0, #640	; 0x280
 800fef6:	d109      	bne.n	800ff0c <WM__UpdateChildPositions+0x58>
 800fef8:	9b03      	ldr	r3, [sp, #12]
 800fefa:	eb0a 0908 	add.w	r9, sl, r8
 800fefe:	fa1f fe89 	uxth.w	lr, r9
 800ff02:	199f      	adds	r7, r3, r6
 800ff04:	e009      	b.n	800ff1a <WM__UpdateChildPositions+0x66>
 800ff06:	9803      	ldr	r0, [sp, #12]
 800ff08:	b287      	uxth	r7, r0
 800ff0a:	e001      	b.n	800ff10 <WM__UpdateChildPositions+0x5c>
 800ff0c:	fa1f f78a 	uxth.w	r7, sl
 800ff10:	eb07 0c08 	add.w	ip, r7, r8
 800ff14:	fa1f fe8c 	uxth.w	lr, ip
 800ff18:	19bf      	adds	r7, r7, r6
 800ff1a:	f401 61a0 	and.w	r1, r1, #1280	; 0x500
 800ff1e:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 800ff22:	b2bb      	uxth	r3, r7
 800ff24:	d009      	beq.n	800ff3a <WM__UpdateChildPositions+0x86>
 800ff26:	f5b1 6fa0 	cmp.w	r1, #1280	; 0x500
 800ff2a:	d109      	bne.n	800ff40 <WM__UpdateChildPositions+0x8c>
 800ff2c:	9f12      	ldr	r7, [sp, #72]	; 0x48
 800ff2e:	eb0b 0902 	add.w	r9, fp, r2
 800ff32:	fa1f f189 	uxth.w	r1, r9
 800ff36:	1978      	adds	r0, r7, r5
 800ff38:	e009      	b.n	800ff4e <WM__UpdateChildPositions+0x9a>
 800ff3a:	9912      	ldr	r1, [sp, #72]	; 0x48
 800ff3c:	b288      	uxth	r0, r1
 800ff3e:	e001      	b.n	800ff44 <WM__UpdateChildPositions+0x90>
 800ff40:	fa1f f08b 	uxth.w	r0, fp
 800ff44:	eb00 0c02 	add.w	ip, r0, r2
 800ff48:	fa1f f18c 	uxth.w	r1, ip
 800ff4c:	1940      	adds	r0, r0, r5
 800ff4e:	fa0f f98e 	sxth.w	r9, lr
 800ff52:	fa0f f888 	sxth.w	r8, r8
 800ff56:	fa0f fc81 	sxth.w	ip, r1
 800ff5a:	b212      	sxth	r2, r2
 800ff5c:	ebb9 0108 	subs.w	r1, r9, r8
 800ff60:	9202      	str	r2, [sp, #8]
 800ff62:	b287      	uxth	r7, r0
 800ff64:	ebc2 020c 	rsb	r2, r2, ip
 800ff68:	d100      	bne.n	800ff6c <WM__UpdateChildPositions+0xb8>
 800ff6a:	b132      	cbz	r2, 800ff7a <WM__UpdateChildPositions+0xc6>
 800ff6c:	4620      	mov	r0, r4
 800ff6e:	e88d 1008 	stmia.w	sp, {r3, ip}
 800ff72:	f7f8 fb12 	bl	800859a <WM_MoveWindow>
 800ff76:	e89d 1008 	ldmia.w	sp, {r3, ip}
 800ff7a:	9902      	ldr	r1, [sp, #8]
 800ff7c:	b21b      	sxth	r3, r3
 800ff7e:	b236      	sxth	r6, r6
 800ff80:	ebc9 0903 	rsb	r9, r9, r3
 800ff84:	ebc6 0808 	rsb	r8, r6, r8
 800ff88:	b23f      	sxth	r7, r7
 800ff8a:	b22d      	sxth	r5, r5
 800ff8c:	1b4d      	subs	r5, r1, r5
 800ff8e:	ebcc 0e07 	rsb	lr, ip, r7
 800ff92:	eb19 0108 	adds.w	r1, r9, r8
 800ff96:	eb0e 0205 	add.w	r2, lr, r5
 800ff9a:	d100      	bne.n	800ff9e <WM__UpdateChildPositions+0xea>
 800ff9c:	b112      	cbz	r2, 800ffa4 <WM__UpdateChildPositions+0xf0>
 800ff9e:	4620      	mov	r0, r4
 800ffa0:	f7f8 f9c5 	bl	800832e <WM_ResizeWindow>
 800ffa4:	a808      	add	r0, sp, #32
 800ffa6:	f850 4d0c 	ldr.w	r4, [r0, #-12]!
 800ffaa:	6a24      	ldr	r4, [r4, #32]
 800ffac:	f7fe fc9e 	bl	800e8ec <GUI_ALLOC_UnlockH>
 800ffb0:	e787      	b.n	800fec2 <WM__UpdateChildPositions+0xe>
 800ffb2:	b009      	add	sp, #36	; 0x24
 800ffb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ffb8 <WM__SendMessageNoPara>:
 800ffb8:	b530      	push	{r4, r5, lr}
 800ffba:	b085      	sub	sp, #20
 800ffbc:	4604      	mov	r4, r0
 800ffbe:	2210      	movs	r2, #16
 800ffc0:	460d      	mov	r5, r1
 800ffc2:	4668      	mov	r0, sp
 800ffc4:	2100      	movs	r1, #0
 800ffc6:	f003 fd2f 	bl	8013a28 <memset>
 800ffca:	4620      	mov	r0, r4
 800ffcc:	f7fe fc76 	bl	800e8bc <GUI_ALLOC_h2p>
 800ffd0:	6903      	ldr	r3, [r0, #16]
 800ffd2:	b11b      	cbz	r3, 800ffdc <WM__SendMessageNoPara+0x24>
 800ffd4:	9401      	str	r4, [sp, #4]
 800ffd6:	9500      	str	r5, [sp, #0]
 800ffd8:	4668      	mov	r0, sp
 800ffda:	4798      	blx	r3
 800ffdc:	b005      	add	sp, #20
 800ffde:	bd30      	pop	{r4, r5, pc}

0800ffe0 <WM__Screen2Client>:
 800ffe0:	f9b0 3000 	ldrsh.w	r3, [r0]
 800ffe4:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800ffe8:	4608      	mov	r0, r1
 800ffea:	4252      	negs	r2, r2
 800ffec:	4259      	negs	r1, r3
 800ffee:	f7fd b9ff 	b.w	800d3f0 <GUI_MoveRect>

0800fff2 <WM__GetPrevSibling>:
 800fff2:	b538      	push	{r3, r4, r5, lr}
 800fff4:	4605      	mov	r5, r0
 800fff6:	f000 f82d 	bl	8010054 <WM__GetFirstSibling>
 800fffa:	4604      	mov	r4, r0
 800fffc:	b154      	cbz	r4, 8010014 <WM__GetPrevSibling+0x22>
 800fffe:	42ac      	cmp	r4, r5
 8010000:	d007      	beq.n	8010012 <WM__GetPrevSibling+0x20>
 8010002:	4620      	mov	r0, r4
 8010004:	f7fe fc5a 	bl	800e8bc <GUI_ALLOC_h2p>
 8010008:	6a03      	ldr	r3, [r0, #32]
 801000a:	42ab      	cmp	r3, r5
 801000c:	d002      	beq.n	8010014 <WM__GetPrevSibling+0x22>
 801000e:	461c      	mov	r4, r3
 8010010:	e7f4      	b.n	800fffc <WM__GetPrevSibling+0xa>
 8010012:	2400      	movs	r4, #0
 8010014:	4620      	mov	r0, r4
 8010016:	bd38      	pop	{r3, r4, r5, pc}

08010018 <WM__GetLastSibling>:
 8010018:	b510      	push	{r4, lr}
 801001a:	4604      	mov	r4, r0
 801001c:	b130      	cbz	r0, 801002c <WM__GetLastSibling+0x14>
 801001e:	4620      	mov	r0, r4
 8010020:	f7fe fc4c 	bl	800e8bc <GUI_ALLOC_h2p>
 8010024:	6a03      	ldr	r3, [r0, #32]
 8010026:	b10b      	cbz	r3, 801002c <WM__GetLastSibling+0x14>
 8010028:	461c      	mov	r4, r3
 801002a:	e7f8      	b.n	801001e <WM__GetLastSibling+0x6>
 801002c:	4620      	mov	r0, r4
 801002e:	bd10      	pop	{r4, pc}

08010030 <WM__GetFocussedChild>:
 8010030:	b538      	push	{r3, r4, r5, lr}
 8010032:	4d06      	ldr	r5, [pc, #24]	; (801004c <WM__GetFocussedChild+0x1c>)
 8010034:	4c06      	ldr	r4, [pc, #24]	; (8010050 <WM__GetFocussedChild+0x20>)
 8010036:	682b      	ldr	r3, [r5, #0]
 8010038:	4601      	mov	r1, r0
 801003a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 801003e:	f002 ffce 	bl	8012fde <WM__IsChild>
 8010042:	b110      	cbz	r0, 801004a <WM__GetFocussedChild+0x1a>
 8010044:	6828      	ldr	r0, [r5, #0]
 8010046:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 801004a:	bd38      	pop	{r3, r4, r5, pc}
 801004c:	2000dd90 	.word	0x2000dd90
 8010050:	2000dd80 	.word	0x2000dd80

08010054 <WM__GetFirstSibling>:
 8010054:	b508      	push	{r3, lr}
 8010056:	f7f8 fb30 	bl	80086ba <WM_GetParent>
 801005a:	b118      	cbz	r0, 8010064 <WM__GetFirstSibling+0x10>
 801005c:	f7fe fc2e 	bl	800e8bc <GUI_ALLOC_h2p>
 8010060:	69c0      	ldr	r0, [r0, #28]
 8010062:	bd08      	pop	{r3, pc}
 8010064:	bd08      	pop	{r3, pc}
	...

08010068 <WM_ValidateWindow>:
 8010068:	b507      	push	{r0, r1, r2, lr}
 801006a:	b178      	cbz	r0, 801008c <WM_ValidateWindow+0x24>
 801006c:	f7fe fc30 	bl	800e8d0 <GUI_ALLOC_LockH>
 8010070:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010072:	9001      	str	r0, [sp, #4]
 8010074:	069a      	lsls	r2, r3, #26
 8010076:	d506      	bpl.n	8010086 <WM_ValidateWindow+0x1e>
 8010078:	f023 0120 	bic.w	r1, r3, #32
 801007c:	6281      	str	r1, [r0, #40]	; 0x28
 801007e:	4804      	ldr	r0, [pc, #16]	; (8010090 <WM_ValidateWindow+0x28>)
 8010080:	8802      	ldrh	r2, [r0, #0]
 8010082:	1e53      	subs	r3, r2, #1
 8010084:	8003      	strh	r3, [r0, #0]
 8010086:	a801      	add	r0, sp, #4
 8010088:	f7fe fc30 	bl	800e8ec <GUI_ALLOC_UnlockH>
 801008c:	bd0e      	pop	{r1, r2, r3, pc}
 801008e:	bf00      	nop
 8010090:	2000dd88 	.word	0x2000dd88

08010094 <WM__IsInModalArea>:
 8010094:	4b12      	ldr	r3, [pc, #72]	; (80100e0 <WM__IsInModalArea+0x4c>)
 8010096:	6819      	ldr	r1, [r3, #0]
 8010098:	2900      	cmp	r1, #0
 801009a:	b570      	push	{r4, r5, r6, lr}
 801009c:	4604      	mov	r4, r0
 801009e:	da0f      	bge.n	80100c0 <WM__IsInModalArea+0x2c>
 80100a0:	4e10      	ldr	r6, [pc, #64]	; (80100e4 <WM__IsInModalArea+0x50>)
 80100a2:	4d11      	ldr	r5, [pc, #68]	; (80100e8 <WM__IsInModalArea+0x54>)
 80100a4:	6830      	ldr	r0, [r6, #0]
 80100a6:	eb05 03c0 	add.w	r3, r5, r0, lsl #3
 80100aa:	4620      	mov	r0, r4
 80100ac:	6859      	ldr	r1, [r3, #4]
 80100ae:	f7f7 ff12 	bl	8007ed6 <WM__IsAncestor>
 80100b2:	6831      	ldr	r1, [r6, #0]
 80100b4:	eb05 05c1 	add.w	r5, r5, r1, lsl #3
 80100b8:	686a      	ldr	r2, [r5, #4]
 80100ba:	686b      	ldr	r3, [r5, #4]
 80100bc:	b942      	cbnz	r2, 80100d0 <WM__IsInModalArea+0x3c>
 80100be:	e00c      	b.n	80100da <WM__IsInModalArea+0x46>
 80100c0:	4a0a      	ldr	r2, [pc, #40]	; (80100ec <WM__IsInModalArea+0x58>)
 80100c2:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 80100c6:	f7f7 ff06 	bl	8007ed6 <WM__IsAncestor>
 80100ca:	2800      	cmp	r0, #0
 80100cc:	d1e8      	bne.n	80100a0 <WM__IsInModalArea+0xc>
 80100ce:	bd70      	pop	{r4, r5, r6, pc}
 80100d0:	b918      	cbnz	r0, 80100da <WM__IsInModalArea+0x46>
 80100d2:	1ae1      	subs	r1, r4, r3
 80100d4:	4248      	negs	r0, r1
 80100d6:	4148      	adcs	r0, r1
 80100d8:	bd70      	pop	{r4, r5, r6, pc}
 80100da:	2001      	movs	r0, #1
 80100dc:	bd70      	pop	{r4, r5, r6, pc}
 80100de:	bf00      	nop
 80100e0:	2000029c 	.word	0x2000029c
 80100e4:	2000dd90 	.word	0x2000dd90
 80100e8:	2000decc 	.word	0x2000decc
 80100ec:	2000dd70 	.word	0x2000dd70

080100f0 <WM__SendPIDMessage>:
 80100f0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80100f2:	4605      	mov	r5, r0
 80100f4:	460c      	mov	r4, r1
 80100f6:	c90f      	ldmia	r1, {r0, r1, r2, r3}
 80100f8:	ae04      	add	r6, sp, #16
 80100fa:	e906 000f 	stmdb	r6, {r0, r1, r2, r3}
 80100fe:	230d      	movs	r3, #13
 8010100:	9502      	str	r5, [sp, #8]
 8010102:	9300      	str	r3, [sp, #0]
 8010104:	462e      	mov	r6, r5
 8010106:	4630      	mov	r0, r6
 8010108:	f7f8 fa54 	bl	80085b4 <WM_IsWindow>
 801010c:	b150      	cbz	r0, 8010124 <WM__SendPIDMessage+0x34>
 801010e:	4630      	mov	r0, r6
 8010110:	f7f8 fad3 	bl	80086ba <WM_GetParent>
 8010114:	4606      	mov	r6, r0
 8010116:	2800      	cmp	r0, #0
 8010118:	d0f5      	beq.n	8010106 <WM__SendPIDMessage+0x16>
 801011a:	4669      	mov	r1, sp
 801011c:	9403      	str	r4, [sp, #12]
 801011e:	f002 ff51 	bl	8012fc4 <WM__SendMessageIfEnabled>
 8010122:	e7f0      	b.n	8010106 <WM__SendPIDMessage+0x16>
 8010124:	4628      	mov	r0, r5
 8010126:	4621      	mov	r1, r4
 8010128:	f002 ff4c 	bl	8012fc4 <WM__SendMessageIfEnabled>
 801012c:	bd7f      	pop	{r0, r1, r2, r3, r4, r5, r6, pc}

0801012e <WM__SendTouchMessage>:
 801012e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010130:	68cc      	ldr	r4, [r1, #12]
 8010132:	4606      	mov	r6, r0
 8010134:	460d      	mov	r5, r1
 8010136:	b194      	cbz	r4, 801015e <WM__SendTouchMessage+0x30>
 8010138:	f7fe fbca 	bl	800e8d0 <GUI_ALLOC_LockH>
 801013c:	ab02      	add	r3, sp, #8
 801013e:	4602      	mov	r2, r0
 8010140:	f843 0d04 	str.w	r0, [r3, #-4]!
 8010144:	6821      	ldr	r1, [r4, #0]
 8010146:	f9b0 0000 	ldrsh.w	r0, [r0]
 801014a:	1a08      	subs	r0, r1, r0
 801014c:	f9b2 1002 	ldrsh.w	r1, [r2, #2]
 8010150:	6862      	ldr	r2, [r4, #4]
 8010152:	6020      	str	r0, [r4, #0]
 8010154:	1a50      	subs	r0, r2, r1
 8010156:	6060      	str	r0, [r4, #4]
 8010158:	4618      	mov	r0, r3
 801015a:	f7fe fbc7 	bl	800e8ec <GUI_ALLOC_UnlockH>
 801015e:	4630      	mov	r0, r6
 8010160:	4629      	mov	r1, r5
 8010162:	f7ff ffc5 	bl	80100f0 <WM__SendPIDMessage>
 8010166:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

08010168 <WM_HandlePID>:
 8010168:	b5f0      	push	{r4, r5, r6, r7, lr}
 801016a:	240c      	movs	r4, #12
 801016c:	b097      	sub	sp, #92	; 0x5c
 801016e:	2100      	movs	r1, #0
 8010170:	4622      	mov	r2, r4
 8010172:	a806      	add	r0, sp, #24
 8010174:	f003 fc58 	bl	8013a28 <memset>
 8010178:	f7fd f908 	bl	800d38c <GUI_PID_IsEmpty>
 801017c:	b108      	cbz	r0, 8010182 <WM_HandlePID+0x1a>
 801017e:	2400      	movs	r4, #0
 8010180:	e19b      	b.n	80104ba <WM_HandlePID+0x352>
 8010182:	a809      	add	r0, sp, #36	; 0x24
 8010184:	f7fd f888 	bl	800d298 <GUI_PID_GetState>
 8010188:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801018a:	1c5a      	adds	r2, r3, #1
 801018c:	d111      	bne.n	80101b2 <WM_HandlePID+0x4a>
 801018e:	980a      	ldr	r0, [sp, #40]	; 0x28
 8010190:	1c43      	adds	r3, r0, #1
 8010192:	d11d      	bne.n	80101d0 <WM_HandlePID+0x68>
 8010194:	4b8a      	ldr	r3, [pc, #552]	; (80103c0 <WM_HandlePID+0x258>)
 8010196:	4a8b      	ldr	r2, [pc, #556]	; (80103c4 <WM_HandlePID+0x25c>)
 8010198:	6819      	ldr	r1, [r3, #0]
 801019a:	434c      	muls	r4, r1
 801019c:	1913      	adds	r3, r2, r4
 801019e:	f89d 102c 	ldrb.w	r1, [sp, #44]	; 0x2c
 80101a2:	7a18      	ldrb	r0, [r3, #8]
 80101a4:	4288      	cmp	r0, r1
 80101a6:	d0ea      	beq.n	801017e <WM_HandlePID+0x16>
 80101a8:	5914      	ldr	r4, [r2, r4]
 80101aa:	685a      	ldr	r2, [r3, #4]
 80101ac:	9409      	str	r4, [sp, #36]	; 0x24
 80101ae:	920a      	str	r2, [sp, #40]	; 0x28
 80101b0:	e00e      	b.n	80101d0 <WM_HandlePID+0x68>
 80101b2:	2b00      	cmp	r3, #0
 80101b4:	db0c      	blt.n	80101d0 <WM_HandlePID+0x68>
 80101b6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80101b8:	2a00      	cmp	r2, #0
 80101ba:	db09      	blt.n	80101d0 <WM_HandlePID+0x68>
 80101bc:	4982      	ldr	r1, [pc, #520]	; (80103c8 <WM_HandlePID+0x260>)
 80101be:	f9b1 0000 	ldrsh.w	r0, [r1]
 80101c2:	181c      	adds	r4, r3, r0
 80101c4:	4b81      	ldr	r3, [pc, #516]	; (80103cc <WM_HandlePID+0x264>)
 80101c6:	9409      	str	r4, [sp, #36]	; 0x24
 80101c8:	f9b3 1000 	ldrsh.w	r1, [r3]
 80101cc:	1852      	adds	r2, r2, r1
 80101ce:	920a      	str	r2, [sp, #40]	; 0x28
 80101d0:	a804      	add	r0, sp, #16
 80101d2:	f000 fa51 	bl	8010678 <WM__AddCriticalHandle>
 80101d6:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 80101da:	4c79      	ldr	r4, [pc, #484]	; (80103c0 <WM_HandlePID+0x258>)
 80101dc:	2b01      	cmp	r3, #1
 80101de:	bf98      	it	ls
 80101e0:	6023      	strls	r3, [r4, #0]
 80101e2:	6820      	ldr	r0, [r4, #0]
 80101e4:	a901      	add	r1, sp, #4
 80101e6:	aa02      	add	r2, sp, #8
 80101e8:	f7fc ffca 	bl	800d180 <GUI_GetLayerPosEx>
 80101ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80101ee:	9901      	ldr	r1, [sp, #4]
 80101f0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80101f2:	9a02      	ldr	r2, [sp, #8]
 80101f4:	1a40      	subs	r0, r0, r1
 80101f6:	1a99      	subs	r1, r3, r2
 80101f8:	6823      	ldr	r3, [r4, #0]
 80101fa:	4c72      	ldr	r4, [pc, #456]	; (80103c4 <WM_HandlePID+0x25c>)
 80101fc:	9009      	str	r0, [sp, #36]	; 0x24
 80101fe:	220c      	movs	r2, #12
 8010200:	435a      	muls	r2, r3
 8010202:	18a3      	adds	r3, r4, r2
 8010204:	58a4      	ldr	r4, [r4, r2]
 8010206:	910a      	str	r1, [sp, #40]	; 0x28
 8010208:	4284      	cmp	r4, r0
 801020a:	d108      	bne.n	801021e <WM_HandlePID+0xb6>
 801020c:	685a      	ldr	r2, [r3, #4]
 801020e:	428a      	cmp	r2, r1
 8010210:	d105      	bne.n	801021e <WM_HandlePID+0xb6>
 8010212:	7a1c      	ldrb	r4, [r3, #8]
 8010214:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 8010218:	429c      	cmp	r4, r3
 801021a:	f000 814a 	beq.w	80104b2 <WM_HandlePID+0x34a>
 801021e:	4d6c      	ldr	r5, [pc, #432]	; (80103d0 <WM_HandlePID+0x268>)
 8010220:	f89d 202d 	ldrb.w	r2, [sp, #45]	; 0x2d
 8010224:	f002 fcb4 	bl	8012b90 <GUI_CURSOR_SetPositionEx>
 8010228:	682e      	ldr	r6, [r5, #0]
 801022a:	b116      	cbz	r6, 8010232 <WM_HandlePID+0xca>
 801022c:	a809      	add	r0, sp, #36	; 0x24
 801022e:	2100      	movs	r1, #0
 8010230:	47b0      	blx	r6
 8010232:	4963      	ldr	r1, [pc, #396]	; (80103c0 <WM_HandlePID+0x258>)
 8010234:	4a67      	ldr	r2, [pc, #412]	; (80103d4 <WM_HandlePID+0x26c>)
 8010236:	6808      	ldr	r0, [r1, #0]
 8010238:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 801023c:	b918      	cbnz	r0, 8010246 <WM_HandlePID+0xde>
 801023e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8010240:	990a      	ldr	r1, [sp, #40]	; 0x28
 8010242:	f000 f9d3 	bl	80105ec <WM_Screen2hWin>
 8010246:	4c64      	ldr	r4, [pc, #400]	; (80103d8 <WM_HandlePID+0x270>)
 8010248:	9005      	str	r0, [sp, #20]
 801024a:	6823      	ldr	r3, [r4, #0]
 801024c:	b113      	cbz	r3, 8010254 <WM_HandlePID+0xec>
 801024e:	9905      	ldr	r1, [sp, #20]
 8010250:	a809      	add	r0, sp, #36	; 0x24
 8010252:	4798      	blx	r3
 8010254:	4d5a      	ldr	r5, [pc, #360]	; (80103c0 <WM_HandlePID+0x258>)
 8010256:	4c61      	ldr	r4, [pc, #388]	; (80103dc <WM_HandlePID+0x274>)
 8010258:	682e      	ldr	r6, [r5, #0]
 801025a:	eb04 00c6 	add.w	r0, r4, r6, lsl #3
 801025e:	6842      	ldr	r2, [r0, #4]
 8010260:	9905      	ldr	r1, [sp, #20]
 8010262:	b302      	cbz	r2, 80102a6 <WM_HandlePID+0x13e>
 8010264:	428a      	cmp	r2, r1
 8010266:	d01e      	beq.n	80102a6 <WM_HandlePID+0x13e>
 8010268:	6840      	ldr	r0, [r0, #4]
 801026a:	f7ff ff13 	bl	8010094 <WM__IsInModalArea>
 801026e:	b1d0      	cbz	r0, 80102a6 <WM_HandlePID+0x13e>
 8010270:	682b      	ldr	r3, [r5, #0]
 8010272:	eb04 06c3 	add.w	r6, r4, r3, lsl #3
 8010276:	6870      	ldr	r0, [r6, #4]
 8010278:	f7f7 fe24 	bl	8007ec4 <WM__IsEnabled>
 801027c:	b198      	cbz	r0, 80102a6 <WM_HandlePID+0x13e>
 801027e:	a809      	add	r0, sp, #36	; 0x24
 8010280:	c807      	ldmia	r0, {r0, r1, r2}
 8010282:	ab06      	add	r3, sp, #24
 8010284:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8010288:	6829      	ldr	r1, [r5, #0]
 801028a:	9315      	str	r3, [sp, #84]	; 0x54
 801028c:	eb04 06c1 	add.w	r6, r4, r1, lsl #3
 8010290:	2212      	movs	r2, #18
 8010292:	6870      	ldr	r0, [r6, #4]
 8010294:	9212      	str	r2, [sp, #72]	; 0x48
 8010296:	a912      	add	r1, sp, #72	; 0x48
 8010298:	f7ff ff49 	bl	801012e <WM__SendTouchMessage>
 801029c:	682d      	ldr	r5, [r5, #0]
 801029e:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 80102a2:	2300      	movs	r3, #0
 80102a4:	6063      	str	r3, [r4, #4]
 80102a6:	9805      	ldr	r0, [sp, #20]
 80102a8:	f7ff fef4 	bl	8010094 <WM__IsInModalArea>
 80102ac:	b908      	cbnz	r0, 80102b2 <WM_HandlePID+0x14a>
 80102ae:	2400      	movs	r4, #0
 80102b0:	e0ef      	b.n	8010492 <WM_HandlePID+0x32a>
 80102b2:	4e43      	ldr	r6, [pc, #268]	; (80103c0 <WM_HandlePID+0x258>)
 80102b4:	4a49      	ldr	r2, [pc, #292]	; (80103dc <WM_HandlePID+0x274>)
 80102b6:	6830      	ldr	r0, [r6, #0]
 80102b8:	9905      	ldr	r1, [sp, #20]
 80102ba:	4c42      	ldr	r4, [pc, #264]	; (80103c4 <WM_HandlePID+0x25c>)
 80102bc:	eb02 05c0 	add.w	r5, r2, r0, lsl #3
 80102c0:	6069      	str	r1, [r5, #4]
 80102c2:	250c      	movs	r5, #12
 80102c4:	fb05 4300 	mla	r3, r5, r0, r4
 80102c8:	f89d 102c 	ldrb.w	r1, [sp, #44]	; 0x2c
 80102cc:	7a18      	ldrb	r0, [r3, #8]
 80102ce:	4288      	cmp	r0, r1
 80102d0:	d05a      	beq.n	8010388 <WM_HandlePID+0x220>
 80102d2:	9a05      	ldr	r2, [sp, #20]
 80102d4:	2a00      	cmp	r2, #0
 80102d6:	d057      	beq.n	8010388 <WM_HandlePID+0x220>
 80102d8:	9805      	ldr	r0, [sp, #20]
 80102da:	f7fe faf9 	bl	800e8d0 <GUI_ALLOC_LockH>
 80102de:	6831      	ldr	r1, [r6, #0]
 80102e0:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 80102e4:	9003      	str	r0, [sp, #12]
 80102e6:	fb05 4201 	mla	r2, r5, r1, r4
 80102ea:	f88d 3044 	strb.w	r3, [sp, #68]	; 0x44
 80102ee:	7a13      	ldrb	r3, [r2, #8]
 80102f0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80102f2:	f88d 3045 	strb.w	r3, [sp, #69]	; 0x45
 80102f6:	f9b0 1000 	ldrsh.w	r1, [r0]
 80102fa:	f9b0 0002 	ldrsh.w	r0, [r0, #2]
 80102fe:	1a53      	subs	r3, r2, r1
 8010300:	990a      	ldr	r1, [sp, #40]	; 0x28
 8010302:	930f      	str	r3, [sp, #60]	; 0x3c
 8010304:	1a0a      	subs	r2, r1, r0
 8010306:	eb0d 0005 	add.w	r0, sp, r5
 801030a:	9210      	str	r2, [sp, #64]	; 0x40
 801030c:	f7fe faee 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8010310:	6836      	ldr	r6, [r6, #0]
 8010312:	2011      	movs	r0, #17
 8010314:	fb05 4506 	mla	r5, r5, r6, r4
 8010318:	9012      	str	r0, [sp, #72]	; 0x48
 801031a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 801031e:	ac0c      	add	r4, sp, #48	; 0x30
 8010320:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8010324:	f89d 102c 	ldrb.w	r1, [sp, #44]	; 0x2c
 8010328:	f89d 4020 	ldrb.w	r4, [sp, #32]
 801032c:	7229      	strb	r1, [r5, #8]
 801032e:	ab0f      	add	r3, sp, #60	; 0x3c
 8010330:	9315      	str	r3, [sp, #84]	; 0x54
 8010332:	4d2b      	ldr	r5, [pc, #172]	; (80103e0 <WM_HandlePID+0x278>)
 8010334:	b124      	cbz	r4, 8010340 <WM_HandlePID+0x1d8>
 8010336:	eb05 03c6 	add.w	r3, r5, r6, lsl #3
 801033a:	685c      	ldr	r4, [r3, #4]
 801033c:	9a05      	ldr	r2, [sp, #20]
 801033e:	605a      	str	r2, [r3, #4]
 8010340:	eb05 00c6 	add.w	r0, r5, r6, lsl #3
 8010344:	a912      	add	r1, sp, #72	; 0x48
 8010346:	6846      	ldr	r6, [r0, #4]
 8010348:	9805      	ldr	r0, [sp, #20]
 801034a:	f002 fe3b 	bl	8012fc4 <WM__SendMessageIfEnabled>
 801034e:	491c      	ldr	r1, [pc, #112]	; (80103c0 <WM_HandlePID+0x258>)
 8010350:	680a      	ldr	r2, [r1, #0]
 8010352:	eb05 05c2 	add.w	r5, r5, r2, lsl #3
 8010356:	a90c      	add	r1, sp, #48	; 0x30
 8010358:	686b      	ldr	r3, [r5, #4]
 801035a:	429e      	cmp	r6, r3
 801035c:	bf18      	it	ne
 801035e:	686b      	ldrne	r3, [r5, #4]
 8010360:	4e18      	ldr	r6, [pc, #96]	; (80103c4 <WM_HandlePID+0x25c>)
 8010362:	bf18      	it	ne
 8010364:	9305      	strne	r3, [sp, #20]
 8010366:	200c      	movs	r0, #12
 8010368:	fb00 6502 	mla	r5, r0, r2, r6
 801036c:	c907      	ldmia	r1, {r0, r1, r2}
 801036e:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 8010372:	b14c      	cbz	r4, 8010388 <WM_HandlePID+0x220>
 8010374:	4620      	mov	r0, r4
 8010376:	f7f8 f91d 	bl	80085b4 <WM_IsWindow>
 801037a:	b128      	cbz	r0, 8010388 <WM_HandlePID+0x220>
 801037c:	4a10      	ldr	r2, [pc, #64]	; (80103c0 <WM_HandlePID+0x258>)
 801037e:	4b18      	ldr	r3, [pc, #96]	; (80103e0 <WM_HandlePID+0x278>)
 8010380:	6810      	ldr	r0, [r2, #0]
 8010382:	eb03 06c0 	add.w	r6, r3, r0, lsl #3
 8010386:	6074      	str	r4, [r6, #4]
 8010388:	4c0d      	ldr	r4, [pc, #52]	; (80103c0 <WM_HandlePID+0x258>)
 801038a:	4d0e      	ldr	r5, [pc, #56]	; (80103c4 <WM_HandlePID+0x25c>)
 801038c:	6822      	ldr	r2, [r4, #0]
 801038e:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 8010392:	200c      	movs	r0, #12
 8010394:	4350      	muls	r0, r2
 8010396:	1829      	adds	r1, r5, r0
 8010398:	7a0e      	ldrb	r6, [r1, #8]
 801039a:	ea53 0406 	orrs.w	r4, r3, r6
 801039e:	d05f      	beq.n	8010460 <WM_HandlePID+0x2f8>
 80103a0:	4c0f      	ldr	r4, [pc, #60]	; (80103e0 <WM_HandlePID+0x278>)
 80103a2:	eb04 06c2 	add.w	r6, r4, r2, lsl #3
 80103a6:	f44f 7710 	mov.w	r7, #576	; 0x240
 80103aa:	f8d6 e004 	ldr.w	lr, [r6, #4]
 80103ae:	9712      	str	r7, [sp, #72]	; 0x48
 80103b0:	9f05      	ldr	r7, [sp, #20]
 80103b2:	45be      	cmp	lr, r7
 80103b4:	d02a      	beq.n	801040c <WM_HandlePID+0x2a4>
 80103b6:	6876      	ldr	r6, [r6, #4]
 80103b8:	b346      	cbz	r6, 801040c <WM_HandlePID+0x2a4>
 80103ba:	b19b      	cbz	r3, 80103e4 <WM_HandlePID+0x27c>
 80103bc:	2300      	movs	r3, #0
 80103be:	e018      	b.n	80103f2 <WM_HandlePID+0x28a>
 80103c0:	2000dd90 	.word	0x2000dd90
 80103c4:	2000d988 	.word	0x2000d988
 80103c8:	2000ddd0 	.word	0x2000ddd0
 80103cc:	2000ddc8 	.word	0x2000ddc8
 80103d0:	2000d980 	.word	0x2000d980
 80103d4:	2000ddac 	.word	0x2000ddac
 80103d8:	2000d984 	.word	0x2000d984
 80103dc:	2000deac 	.word	0x2000deac
 80103e0:	2000debc 	.word	0x2000debc
 80103e4:	582d      	ldr	r5, [r5, r0]
 80103e6:	6849      	ldr	r1, [r1, #4]
 80103e8:	f88d 3020 	strb.w	r3, [sp, #32]
 80103ec:	9506      	str	r5, [sp, #24]
 80103ee:	9107      	str	r1, [sp, #28]
 80103f0:	ab06      	add	r3, sp, #24
 80103f2:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 80103f6:	a912      	add	r1, sp, #72	; 0x48
 80103f8:	6850      	ldr	r0, [r2, #4]
 80103fa:	9315      	str	r3, [sp, #84]	; 0x54
 80103fc:	f7ff fe97 	bl	801012e <WM__SendTouchMessage>
 8010400:	482f      	ldr	r0, [pc, #188]	; (80104c0 <WM_HandlePID+0x358>)
 8010402:	6806      	ldr	r6, [r0, #0]
 8010404:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
 8010408:	2500      	movs	r5, #0
 801040a:	6065      	str	r5, [r4, #4]
 801040c:	492c      	ldr	r1, [pc, #176]	; (80104c0 <WM_HandlePID+0x358>)
 801040e:	4b2d      	ldr	r3, [pc, #180]	; (80104c4 <WM_HandlePID+0x35c>)
 8010410:	680c      	ldr	r4, [r1, #0]
 8010412:	f89d 502c 	ldrb.w	r5, [sp, #44]	; 0x2c
 8010416:	9e05      	ldr	r6, [sp, #20]
 8010418:	220c      	movs	r2, #12
 801041a:	fb02 3004 	mla	r0, r2, r4, r3
 801041e:	7205      	strb	r5, [r0, #8]
 8010420:	2e00      	cmp	r6, #0
 8010422:	d035      	beq.n	8010490 <WM_HandlePID+0x328>
 8010424:	a909      	add	r1, sp, #36	; 0x24
 8010426:	c907      	ldmia	r1, {r0, r1, r2}
 8010428:	ab06      	add	r3, sp, #24
 801042a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 801042e:	4e26      	ldr	r6, [pc, #152]	; (80104c8 <WM_HandlePID+0x360>)
 8010430:	b125      	cbz	r5, 801043c <WM_HandlePID+0x2d4>
 8010432:	9d05      	ldr	r5, [sp, #20]
 8010434:	eb06 06c4 	add.w	r6, r6, r4, lsl #3
 8010438:	6075      	str	r5, [r6, #4]
 801043a:	e00a      	b.n	8010452 <WM_HandlePID+0x2ea>
 801043c:	4c23      	ldr	r4, [pc, #140]	; (80104cc <WM_HandlePID+0x364>)
 801043e:	7825      	ldrb	r5, [r4, #0]
 8010440:	b10d      	cbz	r5, 8010446 <WM_HandlePID+0x2de>
 8010442:	f7f7 ff5b 	bl	80082fc <WM_ReleaseCapture>
 8010446:	4a1e      	ldr	r2, [pc, #120]	; (80104c0 <WM_HandlePID+0x358>)
 8010448:	6810      	ldr	r0, [r2, #0]
 801044a:	eb06 01c0 	add.w	r1, r6, r0, lsl #3
 801044e:	2300      	movs	r3, #0
 8010450:	604b      	str	r3, [r1, #4]
 8010452:	ac06      	add	r4, sp, #24
 8010454:	9805      	ldr	r0, [sp, #20]
 8010456:	9415      	str	r4, [sp, #84]	; 0x54
 8010458:	a912      	add	r1, sp, #72	; 0x48
 801045a:	f7ff fe68 	bl	801012e <WM__SendTouchMessage>
 801045e:	e017      	b.n	8010490 <WM_HandlePID+0x328>
 8010460:	9a05      	ldr	r2, [sp, #20]
 8010462:	2a00      	cmp	r2, #0
 8010464:	f43f af23 	beq.w	80102ae <WM_HandlePID+0x146>
 8010468:	9805      	ldr	r0, [sp, #20]
 801046a:	f7f7 fd2b 	bl	8007ec4 <WM__IsEnabled>
 801046e:	2800      	cmp	r0, #0
 8010470:	f43f af1d 	beq.w	80102ae <WM_HandlePID+0x146>
 8010474:	ad09      	add	r5, sp, #36	; 0x24
 8010476:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 801047a:	ab06      	add	r3, sp, #24
 801047c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8010480:	2010      	movs	r0, #16
 8010482:	9012      	str	r0, [sp, #72]	; 0x48
 8010484:	a912      	add	r1, sp, #72	; 0x48
 8010486:	9805      	ldr	r0, [sp, #20]
 8010488:	9315      	str	r3, [sp, #84]	; 0x54
 801048a:	f7ff fe50 	bl	801012e <WM__SendTouchMessage>
 801048e:	e000      	b.n	8010492 <WM_HandlePID+0x32a>
 8010490:	2401      	movs	r4, #1
 8010492:	4a0b      	ldr	r2, [pc, #44]	; (80104c0 <WM_HandlePID+0x358>)
 8010494:	490b      	ldr	r1, [pc, #44]	; (80104c4 <WM_HandlePID+0x35c>)
 8010496:	6816      	ldr	r6, [r2, #0]
 8010498:	200c      	movs	r0, #12
 801049a:	ab09      	add	r3, sp, #36	; 0x24
 801049c:	fb00 1506 	mla	r5, r0, r6, r1
 80104a0:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 80104a4:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 80104a8:	4618      	mov	r0, r3
 80104aa:	4631      	mov	r1, r6
 80104ac:	f000 f8ae 	bl	801060c <WM_PID__SetPrevState>
 80104b0:	e000      	b.n	80104b4 <WM_HandlePID+0x34c>
 80104b2:	2400      	movs	r4, #0
 80104b4:	a804      	add	r0, sp, #16
 80104b6:	f000 f8e7 	bl	8010688 <WM__RemoveCriticalHandle>
 80104ba:	4620      	mov	r0, r4
 80104bc:	b017      	add	sp, #92	; 0x5c
 80104be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80104c0:	2000dd90 	.word	0x2000dd90
 80104c4:	2000d988 	.word	0x2000d988
 80104c8:	2000debc 	.word	0x2000debc
 80104cc:	2000dd94 	.word	0x2000dd94

080104d0 <WM_DeleteTimer>:
 80104d0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80104d2:	4605      	mov	r5, r0
 80104d4:	b168      	cbz	r0, 80104f2 <WM_DeleteTimer+0x22>
 80104d6:	f7fe f9fb 	bl	800e8d0 <GUI_ALLOC_LockH>
 80104da:	ac02      	add	r4, sp, #8
 80104dc:	f844 0d04 	str.w	r0, [r4, #-4]!
 80104e0:	6800      	ldr	r0, [r0, #0]
 80104e2:	f7fc fd9f 	bl	800d024 <GUI_TIMER_Delete>
 80104e6:	4620      	mov	r0, r4
 80104e8:	f7fe fa00 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80104ec:	4628      	mov	r0, r5
 80104ee:	f7fe fa29 	bl	800e944 <GUI_ALLOC_Free>
 80104f2:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

080104f4 <WM__DeleteAssocTimer>:
 80104f4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80104f6:	4605      	mov	r5, r0
 80104f8:	a801      	add	r0, sp, #4
 80104fa:	f7fc fd63 	bl	800cfc4 <GUI_TIMER__GetFirstTimer>
 80104fe:	4604      	mov	r4, r0
 8010500:	b1dc      	cbz	r4, 801053a <WM__DeleteAssocTimer+0x46>
 8010502:	4620      	mov	r0, r4
 8010504:	2101      	movs	r1, #1
 8010506:	f7fc fdbd 	bl	800d084 <GUI_TIMER_GetFlag>
 801050a:	9b01      	ldr	r3, [sp, #4]
 801050c:	b183      	cbz	r3, 8010530 <WM__DeleteAssocTimer+0x3c>
 801050e:	b178      	cbz	r0, 8010530 <WM__DeleteAssocTimer+0x3c>
 8010510:	4618      	mov	r0, r3
 8010512:	f7fe f9d3 	bl	800e8bc <GUI_ALLOC_h2p>
 8010516:	6840      	ldr	r0, [r0, #4]
 8010518:	42a8      	cmp	r0, r5
 801051a:	d109      	bne.n	8010530 <WM__DeleteAssocTimer+0x3c>
 801051c:	4620      	mov	r0, r4
 801051e:	a901      	add	r1, sp, #4
 8010520:	9e01      	ldr	r6, [sp, #4]
 8010522:	f7fc fd65 	bl	800cff0 <GUI_TIMER__GetNextTimerLin>
 8010526:	4604      	mov	r4, r0
 8010528:	4630      	mov	r0, r6
 801052a:	f7ff ffd1 	bl	80104d0 <WM_DeleteTimer>
 801052e:	e7e7      	b.n	8010500 <WM__DeleteAssocTimer+0xc>
 8010530:	4620      	mov	r0, r4
 8010532:	a901      	add	r1, sp, #4
 8010534:	f7fc fd5c 	bl	800cff0 <GUI_TIMER__GetNextTimerLin>
 8010538:	e7e1      	b.n	80104fe <WM__DeleteAssocTimer+0xa>
 801053a:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

0801053c <WM_SendToParent>:
 801053c:	b538      	push	{r3, r4, r5, lr}
 801053e:	4605      	mov	r5, r0
 8010540:	460c      	mov	r4, r1
 8010542:	b141      	cbz	r1, 8010556 <WM_SendToParent+0x1a>
 8010544:	f7f8 f8b9 	bl	80086ba <WM_GetParent>
 8010548:	b128      	cbz	r0, 8010556 <WM_SendToParent+0x1a>
 801054a:	4621      	mov	r1, r4
 801054c:	60a5      	str	r5, [r4, #8]
 801054e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010552:	f7f7 bc99 	b.w	8007e88 <WM__SendMessage>
 8010556:	bd38      	pop	{r3, r4, r5, pc}

08010558 <WM__IsInWindow>:
 8010558:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801055a:	f013 0302 	ands.w	r3, r3, #2
 801055e:	d012      	beq.n	8010586 <WM__IsInWindow+0x2e>
 8010560:	f9b0 3000 	ldrsh.w	r3, [r0]
 8010564:	4299      	cmp	r1, r3
 8010566:	db10      	blt.n	801058a <WM__IsInWindow+0x32>
 8010568:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801056c:	4299      	cmp	r1, r3
 801056e:	dc0c      	bgt.n	801058a <WM__IsInWindow+0x32>
 8010570:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8010574:	428a      	cmp	r2, r1
 8010576:	db08      	blt.n	801058a <WM__IsInWindow+0x32>
 8010578:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 801057c:	4282      	cmp	r2, r0
 801057e:	bfcc      	ite	gt
 8010580:	2000      	movgt	r0, #0
 8010582:	2001      	movle	r0, #1
 8010584:	4770      	bx	lr
 8010586:	4618      	mov	r0, r3
 8010588:	4770      	bx	lr
 801058a:	2000      	movs	r0, #0
 801058c:	4770      	bx	lr

0801058e <_Screen2hWin>:
 801058e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8010592:	460e      	mov	r6, r1
 8010594:	4617      	mov	r7, r2
 8010596:	4698      	mov	r8, r3
 8010598:	4605      	mov	r5, r0
 801059a:	b320      	cbz	r0, 80105e6 <_Screen2hWin+0x58>
 801059c:	f7fe f998 	bl	800e8d0 <GUI_ALLOC_LockH>
 80105a0:	4639      	mov	r1, r7
 80105a2:	4642      	mov	r2, r8
 80105a4:	4604      	mov	r4, r0
 80105a6:	9001      	str	r0, [sp, #4]
 80105a8:	f7ff ffd6 	bl	8010558 <WM__IsInWindow>
 80105ac:	4681      	mov	r9, r0
 80105ae:	b920      	cbnz	r0, 80105ba <_Screen2hWin+0x2c>
 80105b0:	a801      	add	r0, sp, #4
 80105b2:	f7fe f99b 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80105b6:	464d      	mov	r5, r9
 80105b8:	e015      	b.n	80105e6 <_Screen2hWin+0x58>
 80105ba:	69e4      	ldr	r4, [r4, #28]
 80105bc:	b91c      	cbnz	r4, 80105c6 <_Screen2hWin+0x38>
 80105be:	a801      	add	r0, sp, #4
 80105c0:	f7fe f994 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80105c4:	e00f      	b.n	80105e6 <_Screen2hWin+0x58>
 80105c6:	42b4      	cmp	r4, r6
 80105c8:	d0f9      	beq.n	80105be <_Screen2hWin+0x30>
 80105ca:	4620      	mov	r0, r4
 80105cc:	4631      	mov	r1, r6
 80105ce:	463a      	mov	r2, r7
 80105d0:	4643      	mov	r3, r8
 80105d2:	f7ff ffdc 	bl	801058e <_Screen2hWin>
 80105d6:	2800      	cmp	r0, #0
 80105d8:	bf18      	it	ne
 80105da:	4605      	movne	r5, r0
 80105dc:	4620      	mov	r0, r4
 80105de:	f7fe f96d 	bl	800e8bc <GUI_ALLOC_h2p>
 80105e2:	6a04      	ldr	r4, [r0, #32]
 80105e4:	e7ea      	b.n	80105bc <_Screen2hWin+0x2e>
 80105e6:	4628      	mov	r0, r5
 80105e8:	e8bd 83fe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}

080105ec <WM_Screen2hWin>:
 80105ec:	4b06      	ldr	r3, [pc, #24]	; (8010608 <WM_Screen2hWin+0x1c>)
 80105ee:	b570      	push	{r4, r5, r6, lr}
 80105f0:	4605      	mov	r5, r0
 80105f2:	6818      	ldr	r0, [r3, #0]
 80105f4:	460c      	mov	r4, r1
 80105f6:	f000 f833 	bl	8010660 <WM_GetDesktopWindowEx>
 80105fa:	2100      	movs	r1, #0
 80105fc:	462a      	mov	r2, r5
 80105fe:	4623      	mov	r3, r4
 8010600:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010604:	f7ff bfc3 	b.w	801058e <_Screen2hWin>
 8010608:	2000dd90 	.word	0x2000dd90

0801060c <WM_PID__SetPrevState>:
 801060c:	4b03      	ldr	r3, [pc, #12]	; (801061c <WM_PID__SetPrevState+0x10>)
 801060e:	220c      	movs	r2, #12
 8010610:	fb02 3301 	mla	r3, r2, r1, r3
 8010614:	c807      	ldmia	r0, {r0, r1, r2}
 8010616:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 801061a:	4770      	bx	lr
 801061c:	2000d9a0 	.word	0x2000d9a0

08010620 <WM_OnKey>:
 8010620:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010622:	4a09      	ldr	r2, [pc, #36]	; (8010648 <WM_OnKey+0x28>)
 8010624:	4603      	mov	r3, r0
 8010626:	6810      	ldr	r0, [r2, #0]
 8010628:	4a08      	ldr	r2, [pc, #32]	; (801064c <WM_OnKey+0x2c>)
 801062a:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 801062e:	b148      	cbz	r0, 8010644 <WM_OnKey+0x24>
 8010630:	9101      	str	r1, [sp, #4]
 8010632:	210e      	movs	r1, #14
 8010634:	9300      	str	r3, [sp, #0]
 8010636:	9102      	str	r1, [sp, #8]
 8010638:	ab00      	add	r3, sp, #0
 801063a:	a902      	add	r1, sp, #8
 801063c:	9305      	str	r3, [sp, #20]
 801063e:	f7f7 fc23 	bl	8007e88 <WM__SendMessage>
 8010642:	2001      	movs	r0, #1
 8010644:	b007      	add	sp, #28
 8010646:	bd00      	pop	{pc}
 8010648:	2000dd90 	.word	0x2000dd90
 801064c:	2000dd80 	.word	0x2000dd80

08010650 <WM_GetWindowOrgX>:
 8010650:	b508      	push	{r3, lr}
 8010652:	b120      	cbz	r0, 801065e <WM_GetWindowOrgX+0xe>
 8010654:	f7fe f932 	bl	800e8bc <GUI_ALLOC_h2p>
 8010658:	f9b0 0000 	ldrsh.w	r0, [r0]
 801065c:	bd08      	pop	{r3, pc}
 801065e:	bd08      	pop	{r3, pc}

08010660 <WM_GetDesktopWindowEx>:
 8010660:	2801      	cmp	r0, #1
 8010662:	d803      	bhi.n	801066c <WM_GetDesktopWindowEx+0xc>
 8010664:	4b02      	ldr	r3, [pc, #8]	; (8010670 <WM_GetDesktopWindowEx+0x10>)
 8010666:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 801066a:	4770      	bx	lr
 801066c:	2000      	movs	r0, #0
 801066e:	4770      	bx	lr
 8010670:	2000dd70 	.word	0x2000dd70

08010674 <WM_ForEachDesc>:
 8010674:	f002 bcc7 	b.w	8013006 <WM__ForEachDesc>

08010678 <WM__AddCriticalHandle>:
 8010678:	4b02      	ldr	r3, [pc, #8]	; (8010684 <WM__AddCriticalHandle+0xc>)
 801067a:	681a      	ldr	r2, [r3, #0]
 801067c:	6002      	str	r2, [r0, #0]
 801067e:	6018      	str	r0, [r3, #0]
 8010680:	4770      	bx	lr
 8010682:	bf00      	nop
 8010684:	2000dda4 	.word	0x2000dda4

08010688 <WM__RemoveCriticalHandle>:
 8010688:	4b08      	ldr	r3, [pc, #32]	; (80106ac <WM__RemoveCriticalHandle+0x24>)
 801068a:	681b      	ldr	r3, [r3, #0]
 801068c:	b163      	cbz	r3, 80106a8 <WM__RemoveCriticalHandle+0x20>
 801068e:	2200      	movs	r2, #0
 8010690:	4283      	cmp	r3, r0
 8010692:	d104      	bne.n	801069e <WM__RemoveCriticalHandle+0x16>
 8010694:	6818      	ldr	r0, [r3, #0]
 8010696:	b902      	cbnz	r2, 801069a <WM__RemoveCriticalHandle+0x12>
 8010698:	4a04      	ldr	r2, [pc, #16]	; (80106ac <WM__RemoveCriticalHandle+0x24>)
 801069a:	6010      	str	r0, [r2, #0]
 801069c:	4770      	bx	lr
 801069e:	6819      	ldr	r1, [r3, #0]
 80106a0:	461a      	mov	r2, r3
 80106a2:	b109      	cbz	r1, 80106a8 <WM__RemoveCriticalHandle+0x20>
 80106a4:	460b      	mov	r3, r1
 80106a6:	e7f3      	b.n	8010690 <WM__RemoveCriticalHandle+0x8>
 80106a8:	4770      	bx	lr
 80106aa:	bf00      	nop
 80106ac:	2000dda4 	.word	0x2000dda4

080106b0 <WM_BringToBottom>:
 80106b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80106b4:	4604      	mov	r4, r0
 80106b6:	b087      	sub	sp, #28
 80106b8:	2800      	cmp	r0, #0
 80106ba:	d03a      	beq.n	8010732 <WM_BringToBottom+0x82>
 80106bc:	f7fe f908 	bl	800e8d0 <GUI_ALLOC_LockH>
 80106c0:	4603      	mov	r3, r0
 80106c2:	9001      	str	r0, [sp, #4]
 80106c4:	c803      	ldmia	r0, {r0, r1}
 80106c6:	ad04      	add	r5, sp, #16
 80106c8:	e885 0003 	stmia.w	r5, {r0, r1}
 80106cc:	a801      	add	r0, sp, #4
 80106ce:	6a1e      	ldr	r6, [r3, #32]
 80106d0:	f8d3 9028 	ldr.w	r9, [r3, #40]	; 0x28
 80106d4:	f7fe f90a 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80106d8:	4620      	mov	r0, r4
 80106da:	f7ff fc8a 	bl	800fff2 <WM__GetPrevSibling>
 80106de:	4607      	mov	r7, r0
 80106e0:	b338      	cbz	r0, 8010732 <WM_BringToBottom+0x82>
 80106e2:	4620      	mov	r0, r4
 80106e4:	f7f7 ffe9 	bl	80086ba <WM_GetParent>
 80106e8:	f019 0f02 	tst.w	r9, #2
 80106ec:	4680      	mov	r8, r0
 80106ee:	d004      	beq.n	80106fa <WM_BringToBottom+0x4a>
 80106f0:	4628      	mov	r0, r5
 80106f2:	4641      	mov	r1, r8
 80106f4:	4632      	mov	r2, r6
 80106f6:	f7f8 fccc 	bl	8009092 <WM__InvalidateRectEx>
 80106fa:	4620      	mov	r0, r4
 80106fc:	f7fe f8e8 	bl	800e8d0 <GUI_ALLOC_LockH>
 8010700:	9001      	str	r0, [sp, #4]
 8010702:	4640      	mov	r0, r8
 8010704:	f7fe f8e4 	bl	800e8d0 <GUI_ALLOC_LockH>
 8010708:	9003      	str	r0, [sp, #12]
 801070a:	4638      	mov	r0, r7
 801070c:	f7fe f8e0 	bl	800e8d0 <GUI_ALLOC_LockH>
 8010710:	9b03      	ldr	r3, [sp, #12]
 8010712:	6206      	str	r6, [r0, #32]
 8010714:	9002      	str	r0, [sp, #8]
 8010716:	a806      	add	r0, sp, #24
 8010718:	69da      	ldr	r2, [r3, #28]
 801071a:	f850 1d14 	ldr.w	r1, [r0, #-20]!
 801071e:	61dc      	str	r4, [r3, #28]
 8010720:	620a      	str	r2, [r1, #32]
 8010722:	f7fe f8e3 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8010726:	a803      	add	r0, sp, #12
 8010728:	f7fe f8e0 	bl	800e8ec <GUI_ALLOC_UnlockH>
 801072c:	a802      	add	r0, sp, #8
 801072e:	f7fe f8dd 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8010732:	b007      	add	sp, #28
 8010734:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08010738 <_Convert16>:
 8010738:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801073c:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8010740:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 8010744:	4605      	mov	r5, r0
 8010746:	460e      	mov	r6, r1
 8010748:	4690      	mov	r8, r2
 801074a:	461f      	mov	r7, r3
 801074c:	4614      	mov	r4, r2
 801074e:	4689      	mov	r9, r1
 8010750:	f835 0b02 	ldrh.w	r0, [r5], #2
 8010754:	47d8      	blx	fp
 8010756:	47d0      	blx	sl
 8010758:	3c01      	subs	r4, #1
 801075a:	f849 0b04 	str.w	r0, [r9], #4
 801075e:	d1f7      	bne.n	8010750 <_Convert16+0x18>
 8010760:	2f1f      	cmp	r7, #31
 8010762:	d806      	bhi.n	8010772 <_Convert16+0x3a>
 8010764:	4630      	mov	r0, r6
 8010766:	4641      	mov	r1, r8
 8010768:	463a      	mov	r2, r7
 801076a:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801076e:	f001 bf87 	b.w	8012680 <GUI__CompactPixelIndices>
 8010772:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010776 <_Convert8>:
 8010776:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801077a:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 801077e:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 8010782:	4605      	mov	r5, r0
 8010784:	460e      	mov	r6, r1
 8010786:	4690      	mov	r8, r2
 8010788:	461f      	mov	r7, r3
 801078a:	4689      	mov	r9, r1
 801078c:	4604      	mov	r4, r0
 801078e:	f814 0b01 	ldrb.w	r0, [r4], #1
 8010792:	47d8      	blx	fp
 8010794:	47d0      	blx	sl
 8010796:	eb05 0308 	add.w	r3, r5, r8
 801079a:	429c      	cmp	r4, r3
 801079c:	f849 0b04 	str.w	r0, [r9], #4
 80107a0:	d1f5      	bne.n	801078e <_Convert8+0x18>
 80107a2:	2f1f      	cmp	r7, #31
 80107a4:	d806      	bhi.n	80107b4 <_Convert8+0x3e>
 80107a6:	4630      	mov	r0, r6
 80107a8:	4641      	mov	r1, r8
 80107aa:	463a      	mov	r2, r7
 80107ac:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80107b0:	f001 bf66 	b.w	8012680 <GUI__CompactPixelIndices>
 80107b4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

080107b8 <GUI_MEMDEV__WriteToActiveOpaque>:
 80107b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80107bc:	b09d      	sub	sp, #116	; 0x74
 80107be:	4680      	mov	r8, r0
 80107c0:	920d      	str	r2, [sp, #52]	; 0x34
 80107c2:	9110      	str	r1, [sp, #64]	; 0x40
 80107c4:	f7fe f884 	bl	800e8d0 <GUI_ALLOC_LockH>
 80107c8:	ab1c      	add	r3, sp, #112	; 0x70
 80107ca:	6944      	ldr	r4, [r0, #20]
 80107cc:	f843 0d1c 	str.w	r0, [r3, #-28]!
 80107d0:	4618      	mov	r0, r3
 80107d2:	f7fe f88b 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80107d6:	4640      	mov	r0, r8
 80107d8:	f7fa f90c 	bl	800a9f4 <GUI_MEMDEV_GetBitsPerPixel>
 80107dc:	2808      	cmp	r0, #8
 80107de:	4602      	mov	r2, r0
 80107e0:	dd02      	ble.n	80107e8 <GUI_MEMDEV__WriteToActiveOpaque+0x30>
 80107e2:	2c00      	cmp	r4, #0
 80107e4:	f000 81b5 	beq.w	8010b52 <GUI_MEMDEV__WriteToActiveOpaque+0x39a>
 80107e8:	2501      	movs	r5, #1
 80107ea:	2600      	movs	r6, #0
 80107ec:	4640      	mov	r0, r8
 80107ee:	951b      	str	r5, [sp, #108]	; 0x6c
 80107f0:	950b      	str	r5, [sp, #44]	; 0x2c
 80107f2:	961a      	str	r6, [sp, #104]	; 0x68
 80107f4:	f7fe f86c 	bl	800e8d0 <GUI_ALLOC_LockH>
 80107f8:	a91c      	add	r1, sp, #112	; 0x70
 80107fa:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80107fe:	f841 0d10 	str.w	r0, [r1, #-16]!
 8010802:	6904      	ldr	r4, [r0, #16]
 8010804:	f8b0 a008 	ldrh.w	sl, [r0, #8]
 8010808:	6945      	ldr	r5, [r0, #20]
 801080a:	68c7      	ldr	r7, [r0, #12]
 801080c:	6800      	ldr	r0, [r0, #0]
 801080e:	f8df b5f4 	ldr.w	fp, [pc, #1524]	; 8010e04 <GUI_MEMDEV__WriteToActiveOpaque+0x64c>
 8010812:	6903      	ldr	r3, [r0, #16]
 8010814:	f8db 0000 	ldr.w	r0, [fp]
 8010818:	9212      	str	r2, [sp, #72]	; 0x48
 801081a:	685a      	ldr	r2, [r3, #4]
 801081c:	7c40      	ldrb	r0, [r0, #17]
 801081e:	9211      	str	r2, [sp, #68]	; 0x44
 8010820:	9109      	str	r1, [sp, #36]	; 0x24
 8010822:	f7fb fad7 	bl	800bdd4 <GUI_GetBitsPerPixelEx>
 8010826:	f8db 1000 	ldr.w	r1, [fp]
 801082a:	900e      	str	r0, [sp, #56]	; 0x38
 801082c:	7c48      	ldrb	r0, [r1, #17]
 801082e:	f7fb faef 	bl	800be10 <GUI_GetpfIndex2ColorEx>
 8010832:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010834:	4602      	mov	r2, r0
 8010836:	4618      	mov	r0, r3
 8010838:	920a      	str	r2, [sp, #40]	; 0x28
 801083a:	f7fe f857 	bl	800e8ec <GUI_ALLOC_UnlockH>
 801083e:	2c08      	cmp	r4, #8
 8010840:	fa0f f98a 	sxth.w	r9, sl
 8010844:	4658      	mov	r0, fp
 8010846:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8010848:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801084a:	d904      	bls.n	8010856 <GUI_MEMDEV__WriteToActiveOpaque+0x9e>
 801084c:	2c10      	cmp	r4, #16
 801084e:	bf8c      	ite	hi
 8010850:	2104      	movhi	r1, #4
 8010852:	2102      	movls	r1, #2
 8010854:	e004      	b.n	8010860 <GUI_MEMDEV__WriteToActiveOpaque+0xa8>
 8010856:	2c01      	cmp	r4, #1
 8010858:	d102      	bne.n	8010860 <GUI_MEMDEV__WriteToActiveOpaque+0xa8>
 801085a:	940f      	str	r4, [sp, #60]	; 0x3c
 801085c:	ae1a      	add	r6, sp, #104	; 0x68
 801085e:	e000      	b.n	8010862 <GUI_MEMDEV__WriteToActiveOpaque+0xaa>
 8010860:	910f      	str	r1, [sp, #60]	; 0x3c
 8010862:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8010864:	4293      	cmp	r3, r2
 8010866:	f000 80d9 	beq.w	8010a1c <GUI_MEMDEV__WriteToActiveOpaque+0x264>
 801086a:	6803      	ldr	r3, [r0, #0]
 801086c:	7c58      	ldrb	r0, [r3, #17]
 801086e:	f7fb fad7 	bl	800be20 <GUI_GetpfColor2IndexEx>
 8010872:	9013      	str	r0, [sp, #76]	; 0x4c
 8010874:	fa0f f08a 	sxth.w	r0, sl
 8010878:	0080      	lsls	r0, r0, #2
 801087a:	f7fe fa77 	bl	800ed6c <GUI_ALLOC_AllocNoInit>
 801087e:	900c      	str	r0, [sp, #48]	; 0x30
 8010880:	2800      	cmp	r0, #0
 8010882:	f000 8322 	beq.w	8010eca <GUI_MEMDEV__WriteToActiveOpaque+0x712>
 8010886:	4640      	mov	r0, r8
 8010888:	f7f9 fa80 	bl	8009d8c <GUI_MEMDEV_GetDataPtr>
 801088c:	4680      	mov	r8, r0
 801088e:	2d00      	cmp	r5, #0
 8010890:	f000 80b5 	beq.w	80109fe <GUI_MEMDEV__WriteToActiveOpaque+0x246>
 8010894:	4628      	mov	r0, r5
 8010896:	f7fe f81b 	bl	800e8d0 <GUI_ALLOC_LockH>
 801089a:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
 801089e:	9019      	str	r0, [sp, #100]	; 0x64
 80108a0:	f04f 0a00 	mov.w	sl, #0
 80108a4:	9912      	ldr	r1, [sp, #72]	; 0x48
 80108a6:	458a      	cmp	sl, r1
 80108a8:	f280 80a5 	bge.w	80109f6 <GUI_MEMDEV__WriteToActiveOpaque+0x23e>
 80108ac:	9819      	ldr	r0, [sp, #100]	; 0x64
 80108ae:	6883      	ldr	r3, [r0, #8]
 80108b0:	2500      	movs	r5, #0
 80108b2:	9516      	str	r5, [sp, #88]	; 0x58
 80108b4:	a916      	add	r1, sp, #88	; 0x58
 80108b6:	695d      	ldr	r5, [r3, #20]
 80108b8:	4652      	mov	r2, sl
 80108ba:	47a8      	blx	r5
 80108bc:	4548      	cmp	r0, r9
 80108be:	4605      	mov	r5, r0
 80108c0:	d127      	bne.n	8010912 <GUI_MEMDEV__WriteToActiveOpaque+0x15a>
 80108c2:	980c      	ldr	r0, [sp, #48]	; 0x30
 80108c4:	f7fe f804 	bl	800e8d0 <GUI_ALLOC_LockH>
 80108c8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80108ca:	9017      	str	r0, [sp, #92]	; 0x5c
 80108cc:	4601      	mov	r1, r0
 80108ce:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80108d0:	9200      	str	r2, [sp, #0]
 80108d2:	2c08      	cmp	r4, #8
 80108d4:	9001      	str	r0, [sp, #4]
 80108d6:	464a      	mov	r2, r9
 80108d8:	4640      	mov	r0, r8
 80108da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80108dc:	d902      	bls.n	80108e4 <GUI_MEMDEV__WriteToActiveOpaque+0x12c>
 80108de:	f7ff ff2b 	bl	8010738 <_Convert16>
 80108e2:	e001      	b.n	80108e8 <GUI_MEMDEV__WriteToActiveOpaque+0x130>
 80108e4:	f7ff ff47 	bl	8010776 <_Convert8>
 80108e8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80108ea:	9810      	ldr	r0, [sp, #64]	; 0x40
 80108ec:	9502      	str	r5, [sp, #8]
 80108ee:	2301      	movs	r3, #1
 80108f0:	2100      	movs	r1, #0
 80108f2:	ad1c      	add	r5, sp, #112	; 0x70
 80108f4:	9103      	str	r1, [sp, #12]
 80108f6:	9300      	str	r3, [sp, #0]
 80108f8:	9301      	str	r3, [sp, #4]
 80108fa:	f855 2d14 	ldr.w	r2, [r5, #-20]!
 80108fe:	9605      	str	r6, [sp, #20]
 8010900:	9204      	str	r2, [sp, #16]
 8010902:	4659      	mov	r1, fp
 8010904:	464a      	mov	r2, r9
 8010906:	f7fb fc89 	bl	800c21c <LCD_DrawBitmap>
 801090a:	4628      	mov	r0, r5
 801090c:	f7fd ffee 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8010910:	e06b      	b.n	80109ea <GUI_MEMDEV__WriteToActiveOpaque+0x232>
 8010912:	2c01      	cmp	r4, #1
 8010914:	d15a      	bne.n	80109cc <GUI_MEMDEV__WriteToActiveOpaque+0x214>
 8010916:	2d00      	cmp	r5, #0
 8010918:	d067      	beq.n	80109ea <GUI_MEMDEV__WriteToActiveOpaque+0x232>
 801091a:	9916      	ldr	r1, [sp, #88]	; 0x58
 801091c:	9703      	str	r7, [sp, #12]
 801091e:	2008      	movs	r0, #8
 8010920:	fb91 f2f0 	sdiv	r2, r1, r0
 8010924:	eb08 0002 	add.w	r0, r8, r2
 8010928:	9004      	str	r0, [sp, #16]
 801092a:	9810      	ldr	r0, [sp, #64]	; 0x40
 801092c:	9605      	str	r6, [sp, #20]
 801092e:	2301      	movs	r3, #1
 8010930:	f001 0207 	and.w	r2, r1, #7
 8010934:	1840      	adds	r0, r0, r1
 8010936:	9300      	str	r3, [sp, #0]
 8010938:	9301      	str	r3, [sp, #4]
 801093a:	9302      	str	r3, [sp, #8]
 801093c:	9206      	str	r2, [sp, #24]
 801093e:	4659      	mov	r1, fp
 8010940:	462a      	mov	r2, r5
 8010942:	f7fb fb8f 	bl	800c064 <LCD__DrawBitmap_1bpp>
 8010946:	9819      	ldr	r0, [sp, #100]	; 0x64
 8010948:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801094a:	6881      	ldr	r1, [r0, #8]
 801094c:	195d      	adds	r5, r3, r5
 801094e:	9516      	str	r5, [sp, #88]	; 0x58
 8010950:	694b      	ldr	r3, [r1, #20]
 8010952:	4652      	mov	r2, sl
 8010954:	a916      	add	r1, sp, #88	; 0x58
 8010956:	4798      	blx	r3
 8010958:	4605      	mov	r5, r0
 801095a:	e7dc      	b.n	8010916 <GUI_MEMDEV__WriteToActiveOpaque+0x15e>
 801095c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801095e:	f7fd ffb7 	bl	800e8d0 <GUI_ALLOC_LockH>
 8010962:	2c08      	cmp	r4, #8
 8010964:	4601      	mov	r1, r0
 8010966:	9017      	str	r0, [sp, #92]	; 0x5c
 8010968:	9816      	ldr	r0, [sp, #88]	; 0x58
 801096a:	d932      	bls.n	80109d2 <GUI_MEMDEV__WriteToActiveOpaque+0x21a>
 801096c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801096e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010970:	9300      	str	r3, [sp, #0]
 8010972:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8010974:	9201      	str	r2, [sp, #4]
 8010976:	fb00 8003 	mla	r0, r0, r3, r8
 801097a:	462a      	mov	r2, r5
 801097c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801097e:	f7ff fedb 	bl	8010738 <_Convert16>
 8010982:	990e      	ldr	r1, [sp, #56]	; 0x38
 8010984:	2301      	movs	r3, #1
 8010986:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
 801098a:	2000      	movs	r0, #0
 801098c:	9300      	str	r3, [sp, #0]
 801098e:	9301      	str	r3, [sp, #4]
 8010990:	9102      	str	r1, [sp, #8]
 8010992:	9003      	str	r0, [sp, #12]
 8010994:	f85c 2d14 	ldr.w	r2, [ip, #-20]!
 8010998:	9916      	ldr	r1, [sp, #88]	; 0x58
 801099a:	9810      	ldr	r0, [sp, #64]	; 0x40
 801099c:	9204      	str	r2, [sp, #16]
 801099e:	1840      	adds	r0, r0, r1
 80109a0:	462a      	mov	r2, r5
 80109a2:	4659      	mov	r1, fp
 80109a4:	9605      	str	r6, [sp, #20]
 80109a6:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 80109aa:	f7fb fc37 	bl	800c21c <LCD_DrawBitmap>
 80109ae:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
 80109b2:	4660      	mov	r0, ip
 80109b4:	f7fd ff9a 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80109b8:	9819      	ldr	r0, [sp, #100]	; 0x64
 80109ba:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80109bc:	6882      	ldr	r2, [r0, #8]
 80109be:	195d      	adds	r5, r3, r5
 80109c0:	9516      	str	r5, [sp, #88]	; 0x58
 80109c2:	6953      	ldr	r3, [r2, #20]
 80109c4:	a916      	add	r1, sp, #88	; 0x58
 80109c6:	4652      	mov	r2, sl
 80109c8:	4798      	blx	r3
 80109ca:	4605      	mov	r5, r0
 80109cc:	2d00      	cmp	r5, #0
 80109ce:	d1c5      	bne.n	801095c <GUI_MEMDEV__WriteToActiveOpaque+0x1a4>
 80109d0:	e00b      	b.n	80109ea <GUI_MEMDEV__WriteToActiveOpaque+0x232>
 80109d2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80109d4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80109d6:	9200      	str	r2, [sp, #0]
 80109d8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80109da:	9301      	str	r3, [sp, #4]
 80109dc:	fb00 8002 	mla	r0, r0, r2, r8
 80109e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80109e2:	462a      	mov	r2, r5
 80109e4:	f7ff fec7 	bl	8010776 <_Convert8>
 80109e8:	e7cb      	b.n	8010982 <GUI_MEMDEV__WriteToActiveOpaque+0x1ca>
 80109ea:	44b8      	add	r8, r7
 80109ec:	f10a 0a01 	add.w	sl, sl, #1
 80109f0:	f10b 0b01 	add.w	fp, fp, #1
 80109f4:	e756      	b.n	80108a4 <GUI_MEMDEV__WriteToActiveOpaque+0xec>
 80109f6:	a819      	add	r0, sp, #100	; 0x64
 80109f8:	f7fd ff78 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80109fc:	e00c      	b.n	8010a18 <GUI_MEMDEV__WriteToActiveOpaque+0x260>
 80109fe:	2201      	movs	r2, #1
 8010a00:	9200      	str	r2, [sp, #0]
 8010a02:	9201      	str	r2, [sp, #4]
 8010a04:	9004      	str	r0, [sp, #16]
 8010a06:	9402      	str	r4, [sp, #8]
 8010a08:	9703      	str	r7, [sp, #12]
 8010a0a:	9605      	str	r6, [sp, #20]
 8010a0c:	9810      	ldr	r0, [sp, #64]	; 0x40
 8010a0e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8010a10:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010a12:	464a      	mov	r2, r9
 8010a14:	f7fb fc02 	bl	800c21c <LCD_DrawBitmap>
 8010a18:	980c      	ldr	r0, [sp, #48]	; 0x30
 8010a1a:	e254      	b.n	8010ec6 <GUI_MEMDEV__WriteToActiveOpaque+0x70e>
 8010a1c:	4640      	mov	r0, r8
 8010a1e:	f7f9 f9b5 	bl	8009d8c <GUI_MEMDEV_GetDataPtr>
 8010a22:	4680      	mov	r8, r0
 8010a24:	2d00      	cmp	r5, #0
 8010a26:	f000 8087 	beq.w	8010b38 <GUI_MEMDEV__WriteToActiveOpaque+0x380>
 8010a2a:	4628      	mov	r0, r5
 8010a2c:	f7fd ff50 	bl	800e8d0 <GUI_ALLOC_LockH>
 8010a30:	2500      	movs	r5, #0
 8010a32:	9019      	str	r0, [sp, #100]	; 0x64
 8010a34:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010a36:	428d      	cmp	r5, r1
 8010a38:	da7a      	bge.n	8010b30 <GUI_MEMDEV__WriteToActiveOpaque+0x378>
 8010a3a:	9819      	ldr	r0, [sp, #100]	; 0x64
 8010a3c:	6883      	ldr	r3, [r0, #8]
 8010a3e:	2200      	movs	r2, #0
 8010a40:	9216      	str	r2, [sp, #88]	; 0x58
 8010a42:	695b      	ldr	r3, [r3, #20]
 8010a44:	a916      	add	r1, sp, #88	; 0x58
 8010a46:	462a      	mov	r2, r5
 8010a48:	4798      	blx	r3
 8010a4a:	4548      	cmp	r0, r9
 8010a4c:	4682      	mov	sl, r0
 8010a4e:	d123      	bne.n	8010a98 <GUI_MEMDEV__WriteToActiveOpaque+0x2e0>
 8010a50:	46aa      	mov	sl, r5
 8010a52:	9819      	ldr	r0, [sp, #100]	; 0x64
 8010a54:	6881      	ldr	r1, [r0, #8]
 8010a56:	f10a 0b01 	add.w	fp, sl, #1
 8010a5a:	694b      	ldr	r3, [r1, #20]
 8010a5c:	465a      	mov	r2, fp
 8010a5e:	a916      	add	r1, sp, #88	; 0x58
 8010a60:	4798      	blx	r3
 8010a62:	4548      	cmp	r0, r9
 8010a64:	d101      	bne.n	8010a6a <GUI_MEMDEV__WriteToActiveOpaque+0x2b2>
 8010a66:	46da      	mov	sl, fp
 8010a68:	e7f3      	b.n	8010a52 <GUI_MEMDEV__WriteToActiveOpaque+0x29a>
 8010a6a:	ebc5 000a 	rsb	r0, r5, sl
 8010a6e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8010a70:	f8cd 8010 	str.w	r8, [sp, #16]
 8010a74:	f100 0b01 	add.w	fp, r0, #1
 8010a78:	2201      	movs	r2, #1
 8010a7a:	9200      	str	r2, [sp, #0]
 8010a7c:	9201      	str	r2, [sp, #4]
 8010a7e:	1949      	adds	r1, r1, r5
 8010a80:	9402      	str	r4, [sp, #8]
 8010a82:	9703      	str	r7, [sp, #12]
 8010a84:	9605      	str	r6, [sp, #20]
 8010a86:	9810      	ldr	r0, [sp, #64]	; 0x40
 8010a88:	464a      	mov	r2, r9
 8010a8a:	465b      	mov	r3, fp
 8010a8c:	f7fb fbc6 	bl	800c21c <LCD_DrawBitmap>
 8010a90:	fb07 880b 	mla	r8, r7, fp, r8
 8010a94:	4655      	mov	r5, sl
 8010a96:	e049      	b.n	8010b2c <GUI_MEMDEV__WriteToActiveOpaque+0x374>
 8010a98:	2c01      	cmp	r4, #1
 8010a9a:	d125      	bne.n	8010ae8 <GUI_MEMDEV__WriteToActiveOpaque+0x330>
 8010a9c:	f1ba 0f00 	cmp.w	sl, #0
 8010aa0:	d043      	beq.n	8010b2a <GUI_MEMDEV__WriteToActiveOpaque+0x372>
 8010aa2:	9816      	ldr	r0, [sp, #88]	; 0x58
 8010aa4:	9703      	str	r7, [sp, #12]
 8010aa6:	2208      	movs	r2, #8
 8010aa8:	fb90 f1f2 	sdiv	r1, r0, r2
 8010aac:	eb08 0201 	add.w	r2, r8, r1
 8010ab0:	f000 0107 	and.w	r1, r0, #7
 8010ab4:	9204      	str	r2, [sp, #16]
 8010ab6:	9106      	str	r1, [sp, #24]
 8010ab8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010aba:	990d      	ldr	r1, [sp, #52]	; 0x34
 8010abc:	9605      	str	r6, [sp, #20]
 8010abe:	2301      	movs	r3, #1
 8010ac0:	1810      	adds	r0, r2, r0
 8010ac2:	9300      	str	r3, [sp, #0]
 8010ac4:	4652      	mov	r2, sl
 8010ac6:	9301      	str	r3, [sp, #4]
 8010ac8:	9302      	str	r3, [sp, #8]
 8010aca:	1949      	adds	r1, r1, r5
 8010acc:	f7fb faca 	bl	800c064 <LCD__DrawBitmap_1bpp>
 8010ad0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8010ad2:	eb03 000a 	add.w	r0, r3, sl
 8010ad6:	9016      	str	r0, [sp, #88]	; 0x58
 8010ad8:	9819      	ldr	r0, [sp, #100]	; 0x64
 8010ada:	6882      	ldr	r2, [r0, #8]
 8010adc:	a916      	add	r1, sp, #88	; 0x58
 8010ade:	6953      	ldr	r3, [r2, #20]
 8010ae0:	462a      	mov	r2, r5
 8010ae2:	4798      	blx	r3
 8010ae4:	4682      	mov	sl, r0
 8010ae6:	e7d9      	b.n	8010a9c <GUI_MEMDEV__WriteToActiveOpaque+0x2e4>
 8010ae8:	f1ba 0f00 	cmp.w	sl, #0
 8010aec:	d01d      	beq.n	8010b2a <GUI_MEMDEV__WriteToActiveOpaque+0x372>
 8010aee:	9816      	ldr	r0, [sp, #88]	; 0x58
 8010af0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8010af2:	9402      	str	r4, [sp, #8]
 8010af4:	fb00 8201 	mla	r2, r0, r1, r8
 8010af8:	9204      	str	r2, [sp, #16]
 8010afa:	9910      	ldr	r1, [sp, #64]	; 0x40
 8010afc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010afe:	9703      	str	r7, [sp, #12]
 8010b00:	2301      	movs	r3, #1
 8010b02:	1808      	adds	r0, r1, r0
 8010b04:	9300      	str	r3, [sp, #0]
 8010b06:	1951      	adds	r1, r2, r5
 8010b08:	9301      	str	r3, [sp, #4]
 8010b0a:	4652      	mov	r2, sl
 8010b0c:	9605      	str	r6, [sp, #20]
 8010b0e:	f7fb fb85 	bl	800c21c <LCD_DrawBitmap>
 8010b12:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8010b14:	eb03 000a 	add.w	r0, r3, sl
 8010b18:	9016      	str	r0, [sp, #88]	; 0x58
 8010b1a:	9819      	ldr	r0, [sp, #100]	; 0x64
 8010b1c:	6881      	ldr	r1, [r0, #8]
 8010b1e:	462a      	mov	r2, r5
 8010b20:	694b      	ldr	r3, [r1, #20]
 8010b22:	a916      	add	r1, sp, #88	; 0x58
 8010b24:	4798      	blx	r3
 8010b26:	4682      	mov	sl, r0
 8010b28:	e7de      	b.n	8010ae8 <GUI_MEMDEV__WriteToActiveOpaque+0x330>
 8010b2a:	44b8      	add	r8, r7
 8010b2c:	3501      	adds	r5, #1
 8010b2e:	e781      	b.n	8010a34 <GUI_MEMDEV__WriteToActiveOpaque+0x27c>
 8010b30:	a819      	add	r0, sp, #100	; 0x64
 8010b32:	f7fd fedb 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8010b36:	e1c8      	b.n	8010eca <GUI_MEMDEV__WriteToActiveOpaque+0x712>
 8010b38:	2001      	movs	r0, #1
 8010b3a:	9000      	str	r0, [sp, #0]
 8010b3c:	9001      	str	r0, [sp, #4]
 8010b3e:	9402      	str	r4, [sp, #8]
 8010b40:	9703      	str	r7, [sp, #12]
 8010b42:	f8cd 8010 	str.w	r8, [sp, #16]
 8010b46:	9605      	str	r6, [sp, #20]
 8010b48:	9810      	ldr	r0, [sp, #64]	; 0x40
 8010b4a:	990d      	ldr	r1, [sp, #52]	; 0x34
 8010b4c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010b4e:	464a      	mov	r2, r9
 8010b50:	e03d      	b.n	8010bce <GUI_MEMDEV__WriteToActiveOpaque+0x416>
 8010b52:	4640      	mov	r0, r8
 8010b54:	920a      	str	r2, [sp, #40]	; 0x28
 8010b56:	f7fd febb 	bl	800e8d0 <GUI_ALLOC_LockH>
 8010b5a:	4605      	mov	r5, r0
 8010b5c:	a81c      	add	r0, sp, #112	; 0x70
 8010b5e:	f8b5 b008 	ldrh.w	fp, [r5, #8]
 8010b62:	f840 5d14 	str.w	r5, [r0, #-20]!
 8010b66:	682b      	ldr	r3, [r5, #0]
 8010b68:	8969      	ldrh	r1, [r5, #10]
 8010b6a:	f8d3 9010 	ldr.w	r9, [r3, #16]
 8010b6e:	68ee      	ldr	r6, [r5, #12]
 8010b70:	4ca4      	ldr	r4, [pc, #656]	; (8010e04 <GUI_MEMDEV__WriteToActiveOpaque+0x64c>)
 8010b72:	9111      	str	r1, [sp, #68]	; 0x44
 8010b74:	fa0f f78b 	sxth.w	r7, fp
 8010b78:	970e      	str	r7, [sp, #56]	; 0x38
 8010b7a:	fa0f fa81 	sxth.w	sl, r1
 8010b7e:	9609      	str	r6, [sp, #36]	; 0x24
 8010b80:	f7fd feb4 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8010b84:	f8d9 0004 	ldr.w	r0, [r9, #4]
 8010b88:	6822      	ldr	r2, [r4, #0]
 8010b8a:	900f      	str	r0, [sp, #60]	; 0x3c
 8010b8c:	4f9e      	ldr	r7, [pc, #632]	; (8010e08 <GUI_MEMDEV__WriteToActiveOpaque+0x650>)
 8010b8e:	7c50      	ldrb	r0, [r2, #17]
 8010b90:	f857 1020 	ldr.w	r1, [r7, r0, lsl #2]
 8010b94:	690e      	ldr	r6, [r1, #16]
 8010b96:	6837      	ldr	r7, [r6, #0]
 8010b98:	f7fb f91c 	bl	800bdd4 <GUI_GetBitsPerPixelEx>
 8010b9c:	2808      	cmp	r0, #8
 8010b9e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8010ba0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010ba2:	d904      	bls.n	8010bae <GUI_MEMDEV__WriteToActiveOpaque+0x3f6>
 8010ba4:	2810      	cmp	r0, #16
 8010ba6:	bf8c      	ite	hi
 8010ba8:	2404      	movhi	r4, #4
 8010baa:	2402      	movls	r4, #2
 8010bac:	e000      	b.n	8010bb0 <GUI_MEMDEV__WriteToActiveOpaque+0x3f8>
 8010bae:	2401      	movs	r4, #1
 8010bb0:	45b1      	cmp	r9, r6
 8010bb2:	d10f      	bne.n	8010bd4 <GUI_MEMDEV__WriteToActiveOpaque+0x41c>
 8010bb4:	2101      	movs	r1, #1
 8010bb6:	9100      	str	r1, [sp, #0]
 8010bb8:	9101      	str	r1, [sp, #4]
 8010bba:	9202      	str	r2, [sp, #8]
 8010bbc:	9303      	str	r3, [sp, #12]
 8010bbe:	3518      	adds	r5, #24
 8010bc0:	2300      	movs	r3, #0
 8010bc2:	9810      	ldr	r0, [sp, #64]	; 0x40
 8010bc4:	990d      	ldr	r1, [sp, #52]	; 0x34
 8010bc6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8010bc8:	9305      	str	r3, [sp, #20]
 8010bca:	9504      	str	r5, [sp, #16]
 8010bcc:	4653      	mov	r3, sl
 8010bce:	f7fb fb25 	bl	800c21c <LCD_DrawBitmap>
 8010bd2:	e17a      	b.n	8010eca <GUI_MEMDEV__WriteToActiveOpaque+0x712>
 8010bd4:	2a20      	cmp	r2, #32
 8010bd6:	f040 809c 	bne.w	8010d12 <GUI_MEMDEV__WriteToActiveOpaque+0x55a>
 8010bda:	fa0f f58b 	sxth.w	r5, fp
 8010bde:	fb05 f004 	mul.w	r0, r5, r4
 8010be2:	f7fe f8c3 	bl	800ed6c <GUI_ALLOC_AllocNoInit>
 8010be6:	900f      	str	r0, [sp, #60]	; 0x3c
 8010be8:	2800      	cmp	r0, #0
 8010bea:	f000 816e 	beq.w	8010eca <GUI_MEMDEV__WriteToActiveOpaque+0x712>
 8010bee:	f7fd fe6f 	bl	800e8d0 <GUI_ALLOC_LockH>
 8010bf2:	9019      	str	r0, [sp, #100]	; 0x64
 8010bf4:	4640      	mov	r0, r8
 8010bf6:	f7fd fe6b 	bl	800e8d0 <GUI_ALLOC_LockH>
 8010bfa:	9017      	str	r0, [sp, #92]	; 0x5c
 8010bfc:	f100 0b18 	add.w	fp, r0, #24
 8010c00:	6930      	ldr	r0, [r6, #16]
 8010c02:	ea4f 0ac4 	mov.w	sl, r4, lsl #3
 8010c06:	b348      	cbz	r0, 8010c5c <GUI_MEMDEV__WriteToActiveOpaque+0x4a4>
 8010c08:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
 8010c0c:	ea4f 0985 	mov.w	r9, r5, lsl #2
 8010c10:	2c02      	cmp	r4, #2
 8010c12:	d003      	beq.n	8010c1c <GUI_MEMDEV__WriteToActiveOpaque+0x464>
 8010c14:	2c04      	cmp	r4, #4
 8010c16:	d001      	beq.n	8010c1c <GUI_MEMDEV__WriteToActiveOpaque+0x464>
 8010c18:	2c01      	cmp	r4, #1
 8010c1a:	d106      	bne.n	8010c2a <GUI_MEMDEV__WriteToActiveOpaque+0x472>
 8010c1c:	4658      	mov	r0, fp
 8010c1e:	6937      	ldr	r7, [r6, #16]
 8010c20:	9919      	ldr	r1, [sp, #100]	; 0x64
 8010c22:	462a      	mov	r2, r5
 8010c24:	4623      	mov	r3, r4
 8010c26:	47b8      	blx	r7
 8010c28:	44cb      	add	fp, r9
 8010c2a:	9919      	ldr	r1, [sp, #100]	; 0x64
 8010c2c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8010c2e:	9104      	str	r1, [sp, #16]
 8010c30:	2301      	movs	r3, #1
 8010c32:	2000      	movs	r0, #0
 8010c34:	9300      	str	r3, [sp, #0]
 8010c36:	9301      	str	r3, [sp, #4]
 8010c38:	9003      	str	r0, [sp, #12]
 8010c3a:	9005      	str	r0, [sp, #20]
 8010c3c:	f8cd a008 	str.w	sl, [sp, #8]
 8010c40:	9810      	ldr	r0, [sp, #64]	; 0x40
 8010c42:	4641      	mov	r1, r8
 8010c44:	f7fb faea 	bl	800c21c <LCD_DrawBitmap>
 8010c48:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8010c4a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010c4c:	f108 0701 	add.w	r7, r8, #1
 8010c50:	fa02 f083 	sxtah	r0, r2, r3
 8010c54:	42b8      	cmp	r0, r7
 8010c56:	d054      	beq.n	8010d02 <GUI_MEMDEV__WriteToActiveOpaque+0x54a>
 8010c58:	46b8      	mov	r8, r7
 8010c5a:	e7d9      	b.n	8010c10 <GUI_MEMDEV__WriteToActiveOpaque+0x458>
 8010c5c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8010c5e:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8010c60:	2c02      	cmp	r4, #2
 8010c62:	9919      	ldr	r1, [sp, #100]	; 0x64
 8010c64:	d010      	beq.n	8010c88 <GUI_MEMDEV__WriteToActiveOpaque+0x4d0>
 8010c66:	2c04      	cmp	r4, #4
 8010c68:	d01c      	beq.n	8010ca4 <GUI_MEMDEV__WriteToActiveOpaque+0x4ec>
 8010c6a:	2c01      	cmp	r4, #1
 8010c6c:	d130      	bne.n	8010cd0 <GUI_MEMDEV__WriteToActiveOpaque+0x518>
 8010c6e:	4689      	mov	r9, r1
 8010c70:	f04f 0800 	mov.w	r8, #0
 8010c74:	f85b 0028 	ldr.w	r0, [fp, r8, lsl #2]
 8010c78:	47b8      	blx	r7
 8010c7a:	f809 0008 	strb.w	r0, [r9, r8]
 8010c7e:	f108 0801 	add.w	r8, r8, #1
 8010c82:	4545      	cmp	r5, r8
 8010c84:	d1f6      	bne.n	8010c74 <GUI_MEMDEV__WriteToActiveOpaque+0x4bc>
 8010c86:	e020      	b.n	8010cca <GUI_MEMDEV__WriteToActiveOpaque+0x512>
 8010c88:	4689      	mov	r9, r1
 8010c8a:	465b      	mov	r3, fp
 8010c8c:	46a8      	mov	r8, r5
 8010c8e:	f853 0b04 	ldr.w	r0, [r3], #4
 8010c92:	9309      	str	r3, [sp, #36]	; 0x24
 8010c94:	47b8      	blx	r7
 8010c96:	f1b8 0801 	subs.w	r8, r8, #1
 8010c9a:	f829 0b02 	strh.w	r0, [r9], #2
 8010c9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010ca0:	d1f5      	bne.n	8010c8e <GUI_MEMDEV__WriteToActiveOpaque+0x4d6>
 8010ca2:	e00e      	b.n	8010cc2 <GUI_MEMDEV__WriteToActiveOpaque+0x50a>
 8010ca4:	46a8      	mov	r8, r5
 8010ca6:	f04f 0900 	mov.w	r9, #0
 8010caa:	f85b 0009 	ldr.w	r0, [fp, r9]
 8010cae:	9109      	str	r1, [sp, #36]	; 0x24
 8010cb0:	47b8      	blx	r7
 8010cb2:	9909      	ldr	r1, [sp, #36]	; 0x24
 8010cb4:	f1b8 0801 	subs.w	r8, r8, #1
 8010cb8:	f841 0009 	str.w	r0, [r1, r9]
 8010cbc:	f109 0904 	add.w	r9, r9, #4
 8010cc0:	d1f3      	bne.n	8010caa <GUI_MEMDEV__WriteToActiveOpaque+0x4f2>
 8010cc2:	eb0b 0b85 	add.w	fp, fp, r5, lsl #2
 8010cc6:	4645      	mov	r5, r8
 8010cc8:	e002      	b.n	8010cd0 <GUI_MEMDEV__WriteToActiveOpaque+0x518>
 8010cca:	eb0b 0b85 	add.w	fp, fp, r5, lsl #2
 8010cce:	2500      	movs	r5, #0
 8010cd0:	9819      	ldr	r0, [sp, #100]	; 0x64
 8010cd2:	f8cd a008 	str.w	sl, [sp, #8]
 8010cd6:	2301      	movs	r3, #1
 8010cd8:	2200      	movs	r2, #0
 8010cda:	9300      	str	r3, [sp, #0]
 8010cdc:	9301      	str	r3, [sp, #4]
 8010cde:	9203      	str	r2, [sp, #12]
 8010ce0:	9004      	str	r0, [sp, #16]
 8010ce2:	9205      	str	r2, [sp, #20]
 8010ce4:	4631      	mov	r1, r6
 8010ce6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8010ce8:	9810      	ldr	r0, [sp, #64]	; 0x40
 8010cea:	f7fb fa97 	bl	800c21c <LCD_DrawBitmap>
 8010cee:	9911      	ldr	r1, [sp, #68]	; 0x44
 8010cf0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010cf2:	f106 0801 	add.w	r8, r6, #1
 8010cf6:	fa03 f281 	sxtah	r2, r3, r1
 8010cfa:	4542      	cmp	r2, r8
 8010cfc:	d001      	beq.n	8010d02 <GUI_MEMDEV__WriteToActiveOpaque+0x54a>
 8010cfe:	4646      	mov	r6, r8
 8010d00:	e7ae      	b.n	8010c60 <GUI_MEMDEV__WriteToActiveOpaque+0x4a8>
 8010d02:	a817      	add	r0, sp, #92	; 0x5c
 8010d04:	f7fd fdf2 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8010d08:	a819      	add	r0, sp, #100	; 0x64
 8010d0a:	f7fd fdef 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8010d0e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8010d10:	e0d9      	b.n	8010ec6 <GUI_MEMDEV__WriteToActiveOpaque+0x70e>
 8010d12:	2a10      	cmp	r2, #16
 8010d14:	f040 80d9 	bne.w	8010eca <GUI_MEMDEV__WriteToActiveOpaque+0x712>
 8010d18:	fa0f fa8b 	sxth.w	sl, fp
 8010d1c:	fb0a f004 	mul.w	r0, sl, r4
 8010d20:	f7fe f824 	bl	800ed6c <GUI_ALLOC_AllocNoInit>
 8010d24:	9012      	str	r0, [sp, #72]	; 0x48
 8010d26:	2800      	cmp	r0, #0
 8010d28:	f000 80cf 	beq.w	8010eca <GUI_MEMDEV__WriteToActiveOpaque+0x712>
 8010d2c:	f7fd fdd0 	bl	800e8d0 <GUI_ALLOC_LockH>
 8010d30:	9019      	str	r0, [sp, #100]	; 0x64
 8010d32:	4640      	mov	r0, r8
 8010d34:	f7fd fdcc 	bl	800e8d0 <GUI_ALLOC_LockH>
 8010d38:	9017      	str	r0, [sp, #92]	; 0x5c
 8010d3a:	6931      	ldr	r1, [r6, #16]
 8010d3c:	f100 0518 	add.w	r5, r0, #24
 8010d40:	b111      	cbz	r1, 8010d48 <GUI_MEMDEV__WriteToActiveOpaque+0x590>
 8010d42:	f8d9 2014 	ldr.w	r2, [r9, #20]
 8010d46:	b92a      	cbnz	r2, 8010d54 <GUI_MEMDEV__WriteToActiveOpaque+0x59c>
 8010d48:	ea4f 0ac4 	mov.w	sl, r4, lsl #3
 8010d4c:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8010d4e:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
 8010d52:	e085      	b.n	8010e60 <GUI_MEMDEV__WriteToActiveOpaque+0x6a8>
 8010d54:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8010d58:	0088      	lsls	r0, r1, #2
 8010d5a:	f7fe f807 	bl	800ed6c <GUI_ALLOC_AllocNoInit>
 8010d5e:	900f      	str	r0, [sp, #60]	; 0x3c
 8010d60:	b118      	cbz	r0, 8010d6a <GUI_MEMDEV__WriteToActiveOpaque+0x5b2>
 8010d62:	f7fd fdb5 	bl	800e8d0 <GUI_ALLOC_LockH>
 8010d66:	9018      	str	r0, [sp, #96]	; 0x60
 8010d68:	e001      	b.n	8010d6e <GUI_MEMDEV__WriteToActiveOpaque+0x5b6>
 8010d6a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8010d6c:	9718      	str	r7, [sp, #96]	; 0x60
 8010d6e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8010d70:	2b00      	cmp	r3, #0
 8010d72:	f000 80a1 	beq.w	8010eb8 <GUI_MEMDEV__WriteToActiveOpaque+0x700>
 8010d76:	fa0f fb8b 	sxth.w	fp, fp
 8010d7a:	ea4f 084b 	mov.w	r8, fp, lsl #1
 8010d7e:	00e7      	lsls	r7, r4, #3
 8010d80:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
 8010d84:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 8010d88:	9713      	str	r7, [sp, #76]	; 0x4c
 8010d8a:	2c02      	cmp	r4, #2
 8010d8c:	f8dd 8064 	ldr.w	r8, [sp, #100]	; 0x64
 8010d90:	d004      	beq.n	8010d9c <GUI_MEMDEV__WriteToActiveOpaque+0x5e4>
 8010d92:	2c04      	cmp	r4, #4
 8010d94:	d007      	beq.n	8010da6 <GUI_MEMDEV__WriteToActiveOpaque+0x5ee>
 8010d96:	2c01      	cmp	r4, #1
 8010d98:	d114      	bne.n	8010dc4 <GUI_MEMDEV__WriteToActiveOpaque+0x60c>
 8010d9a:	e004      	b.n	8010da6 <GUI_MEMDEV__WriteToActiveOpaque+0x5ee>
 8010d9c:	4628      	mov	r0, r5
 8010d9e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8010da0:	4652      	mov	r2, sl
 8010da2:	4623      	mov	r3, r4
 8010da4:	e003      	b.n	8010dae <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
 8010da6:	9918      	ldr	r1, [sp, #96]	; 0x60
 8010da8:	4628      	mov	r0, r5
 8010daa:	4652      	mov	r2, sl
 8010dac:	2302      	movs	r3, #2
 8010dae:	f8d9 7014 	ldr.w	r7, [r9, #20]
 8010db2:	47b8      	blx	r7
 8010db4:	4652      	mov	r2, sl
 8010db6:	9818      	ldr	r0, [sp, #96]	; 0x60
 8010db8:	6937      	ldr	r7, [r6, #16]
 8010dba:	4641      	mov	r1, r8
 8010dbc:	4623      	mov	r3, r4
 8010dbe:	47b8      	blx	r7
 8010dc0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8010dc2:	18ad      	adds	r5, r5, r2
 8010dc4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010dc6:	9919      	ldr	r1, [sp, #100]	; 0x64
 8010dc8:	9002      	str	r0, [sp, #8]
 8010dca:	2301      	movs	r3, #1
 8010dcc:	2700      	movs	r7, #0
 8010dce:	9300      	str	r3, [sp, #0]
 8010dd0:	9301      	str	r3, [sp, #4]
 8010dd2:	9703      	str	r7, [sp, #12]
 8010dd4:	9104      	str	r1, [sp, #16]
 8010dd6:	9705      	str	r7, [sp, #20]
 8010dd8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8010dda:	9810      	ldr	r0, [sp, #64]	; 0x40
 8010ddc:	4659      	mov	r1, fp
 8010dde:	f7fb fa1d 	bl	800c21c <LCD_DrawBitmap>
 8010de2:	9f11      	ldr	r7, [sp, #68]	; 0x44
 8010de4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010de6:	f10b 0801 	add.w	r8, fp, #1
 8010dea:	fa03 f287 	sxtah	r2, r3, r7
 8010dee:	4542      	cmp	r2, r8
 8010df0:	d001      	beq.n	8010df6 <GUI_MEMDEV__WriteToActiveOpaque+0x63e>
 8010df2:	46c3      	mov	fp, r8
 8010df4:	e7c9      	b.n	8010d8a <GUI_MEMDEV__WriteToActiveOpaque+0x5d2>
 8010df6:	a818      	add	r0, sp, #96	; 0x60
 8010df8:	f7fd fd78 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8010dfc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8010dfe:	f7fd fda1 	bl	800e944 <GUI_ALLOC_Free>
 8010e02:	e059      	b.n	8010eb8 <GUI_MEMDEV__WriteToActiveOpaque+0x700>
 8010e04:	20000270 	.word	0x20000270
 8010e08:	2000dde0 	.word	0x2000dde0
 8010e0c:	4683      	mov	fp, r0
 8010e0e:	462b      	mov	r3, r5
 8010e10:	46b1      	mov	r9, r6
 8010e12:	f833 0b02 	ldrh.w	r0, [r3], #2
 8010e16:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010e18:	9309      	str	r3, [sp, #36]	; 0x24
 8010e1a:	4790      	blx	r2
 8010e1c:	47b8      	blx	r7
 8010e1e:	f1b9 0901 	subs.w	r9, r9, #1
 8010e22:	f82b 0b02 	strh.w	r0, [fp], #2
 8010e26:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010e28:	d1f3      	bne.n	8010e12 <GUI_MEMDEV__WriteToActiveOpaque+0x65a>
 8010e2a:	eb05 0546 	add.w	r5, r5, r6, lsl #1
 8010e2e:	464e      	mov	r6, r9
 8010e30:	9919      	ldr	r1, [sp, #100]	; 0x64
 8010e32:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8010e34:	9104      	str	r1, [sp, #16]
 8010e36:	2301      	movs	r3, #1
 8010e38:	2000      	movs	r0, #0
 8010e3a:	9300      	str	r3, [sp, #0]
 8010e3c:	9301      	str	r3, [sp, #4]
 8010e3e:	9003      	str	r0, [sp, #12]
 8010e40:	9005      	str	r0, [sp, #20]
 8010e42:	f8cd a008 	str.w	sl, [sp, #8]
 8010e46:	9810      	ldr	r0, [sp, #64]	; 0x40
 8010e48:	4641      	mov	r1, r8
 8010e4a:	f7fb f9e7 	bl	800c21c <LCD_DrawBitmap>
 8010e4e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8010e50:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010e52:	f108 0901 	add.w	r9, r8, #1
 8010e56:	fa02 f083 	sxtah	r0, r2, r3
 8010e5a:	4548      	cmp	r0, r9
 8010e5c:	d02c      	beq.n	8010eb8 <GUI_MEMDEV__WriteToActiveOpaque+0x700>
 8010e5e:	46c8      	mov	r8, r9
 8010e60:	2c02      	cmp	r4, #2
 8010e62:	9819      	ldr	r0, [sp, #100]	; 0x64
 8010e64:	d0d2      	beq.n	8010e0c <GUI_MEMDEV__WriteToActiveOpaque+0x654>
 8010e66:	2c04      	cmp	r4, #4
 8010e68:	d012      	beq.n	8010e90 <GUI_MEMDEV__WriteToActiveOpaque+0x6d8>
 8010e6a:	2c01      	cmp	r4, #1
 8010e6c:	d1e0      	bne.n	8010e30 <GUI_MEMDEV__WriteToActiveOpaque+0x678>
 8010e6e:	4683      	mov	fp, r0
 8010e70:	4681      	mov	r9, r0
 8010e72:	462a      	mov	r2, r5
 8010e74:	f832 0b02 	ldrh.w	r0, [r2], #2
 8010e78:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8010e7a:	9209      	str	r2, [sp, #36]	; 0x24
 8010e7c:	4798      	blx	r3
 8010e7e:	47b8      	blx	r7
 8010e80:	f809 0b01 	strb.w	r0, [r9], #1
 8010e84:	eb0b 0106 	add.w	r1, fp, r6
 8010e88:	4589      	cmp	r9, r1
 8010e8a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010e8c:	d1f2      	bne.n	8010e74 <GUI_MEMDEV__WriteToActiveOpaque+0x6bc>
 8010e8e:	e00f      	b.n	8010eb0 <GUI_MEMDEV__WriteToActiveOpaque+0x6f8>
 8010e90:	4683      	mov	fp, r0
 8010e92:	4629      	mov	r1, r5
 8010e94:	46b1      	mov	r9, r6
 8010e96:	f831 0b02 	ldrh.w	r0, [r1], #2
 8010e9a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8010e9c:	9109      	str	r1, [sp, #36]	; 0x24
 8010e9e:	4798      	blx	r3
 8010ea0:	47b8      	blx	r7
 8010ea2:	f1b9 0901 	subs.w	r9, r9, #1
 8010ea6:	f84b 0b04 	str.w	r0, [fp], #4
 8010eaa:	9909      	ldr	r1, [sp, #36]	; 0x24
 8010eac:	d1f3      	bne.n	8010e96 <GUI_MEMDEV__WriteToActiveOpaque+0x6de>
 8010eae:	e7bc      	b.n	8010e2a <GUI_MEMDEV__WriteToActiveOpaque+0x672>
 8010eb0:	eb05 0546 	add.w	r5, r5, r6, lsl #1
 8010eb4:	2600      	movs	r6, #0
 8010eb6:	e7bb      	b.n	8010e30 <GUI_MEMDEV__WriteToActiveOpaque+0x678>
 8010eb8:	a817      	add	r0, sp, #92	; 0x5c
 8010eba:	f7fd fd17 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8010ebe:	a819      	add	r0, sp, #100	; 0x64
 8010ec0:	f7fd fd14 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8010ec4:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010ec6:	f7fd fd3d 	bl	800e944 <GUI_ALLOC_Free>
 8010eca:	b01d      	add	sp, #116	; 0x74
 8010ecc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010ed0 <GUI_MEMDEV__WriteToActiveAlpha>:
 8010ed0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ed4:	b093      	sub	sp, #76	; 0x4c
 8010ed6:	460e      	mov	r6, r1
 8010ed8:	4615      	mov	r5, r2
 8010eda:	900f      	str	r0, [sp, #60]	; 0x3c
 8010edc:	f7fd fcf8 	bl	800e8d0 <GUI_ALLOC_LockH>
 8010ee0:	4603      	mov	r3, r0
 8010ee2:	a812      	add	r0, sp, #72	; 0x48
 8010ee4:	681a      	ldr	r2, [r3, #0]
 8010ee6:	8919      	ldrh	r1, [r3, #8]
 8010ee8:	6914      	ldr	r4, [r2, #16]
 8010eea:	f840 3d08 	str.w	r3, [r0, #-8]!
 8010eee:	895f      	ldrh	r7, [r3, #10]
 8010ef0:	6863      	ldr	r3, [r4, #4]
 8010ef2:	4c58      	ldr	r4, [pc, #352]	; (8011054 <GUI_MEMDEV__WriteToActiveAlpha+0x184>)
 8010ef4:	910a      	str	r1, [sp, #40]	; 0x28
 8010ef6:	930c      	str	r3, [sp, #48]	; 0x30
 8010ef8:	f7fd fcf8 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8010efc:	6820      	ldr	r0, [r4, #0]
 8010efe:	f8df 815c 	ldr.w	r8, [pc, #348]	; 801105c <GUI_MEMDEV__WriteToActiveAlpha+0x18c>
 8010f02:	7c41      	ldrb	r1, [r0, #17]
 8010f04:	f858 0021 	ldr.w	r0, [r8, r1, lsl #2]
 8010f08:	68c2      	ldr	r2, [r0, #12]
 8010f0a:	2108      	movs	r1, #8
 8010f0c:	6a93      	ldr	r3, [r2, #40]	; 0x28
 8010f0e:	4798      	blx	r3
 8010f10:	2817      	cmp	r0, #23
 8010f12:	bf88      	it	hi
 8010f14:	2020      	movhi	r0, #32
 8010f16:	900b      	str	r0, [sp, #44]	; 0x2c
 8010f18:	6820      	ldr	r0, [r4, #0]
 8010f1a:	7c41      	ldrb	r1, [r0, #17]
 8010f1c:	f858 2021 	ldr.w	r2, [r8, r1, lsl #2]
 8010f20:	6913      	ldr	r3, [r2, #16]
 8010f22:	6858      	ldr	r0, [r3, #4]
 8010f24:	6819      	ldr	r1, [r3, #0]
 8010f26:	900d      	str	r0, [sp, #52]	; 0x34
 8010f28:	2000      	movs	r0, #0
 8010f2a:	9309      	str	r3, [sp, #36]	; 0x24
 8010f2c:	910e      	str	r1, [sp, #56]	; 0x38
 8010f2e:	f7fc f80f 	bl	800cf50 <GUI__AllocAlphaBuffer>
 8010f32:	2800      	cmp	r0, #0
 8010f34:	f040 808a 	bne.w	801104c <GUI_MEMDEV__WriteToActiveAlpha+0x17c>
 8010f38:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8010f3a:	6823      	ldr	r3, [r4, #0]
 8010f3c:	fa0f f882 	sxth.w	r8, r2
 8010f40:	eb06 0408 	add.w	r4, r6, r8
 8010f44:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8010f48:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8010f4c:	1e60      	subs	r0, r4, #1
 8010f4e:	1a84      	subs	r4, r0, r2
 8010f50:	2c00      	cmp	r4, #0
 8010f52:	bfcc      	ite	gt
 8010f54:	ebc4 0408 	rsbgt	r4, r4, r8
 8010f58:	4644      	movle	r4, r8
 8010f5a:	42b1      	cmp	r1, r6
 8010f5c:	bfc3      	ittte	gt
 8010f5e:	ebc6 0201 	rsbgt	r2, r6, r1
 8010f62:	ebc2 0404 	rsbgt	r4, r2, r4
 8010f66:	460e      	movgt	r6, r1
 8010f68:	2200      	movle	r2, #0
 8010f6a:	2c00      	cmp	r4, #0
 8010f6c:	dd6e      	ble.n	801104c <GUI_MEMDEV__WriteToActiveAlpha+0x17c>
 8010f6e:	b23f      	sxth	r7, r7
 8010f70:	19e8      	adds	r0, r5, r7
 8010f72:	1e41      	subs	r1, r0, #1
 8010f74:	f9b3 000e 	ldrsh.w	r0, [r3, #14]
 8010f78:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8010f7c:	1a09      	subs	r1, r1, r0
 8010f7e:	2900      	cmp	r1, #0
 8010f80:	bfc8      	it	gt
 8010f82:	ebc1 0707 	rsbgt	r7, r1, r7
 8010f86:	429d      	cmp	r5, r3
 8010f88:	bfbd      	ittte	lt
 8010f8a:	ebc5 0b03 	rsblt	fp, r5, r3
 8010f8e:	ebcb 0707 	rsblt	r7, fp, r7
 8010f92:	461d      	movlt	r5, r3
 8010f94:	f04f 0b00 	movge.w	fp, #0
 8010f98:	2f00      	cmp	r7, #0
 8010f9a:	dd57      	ble.n	801104c <GUI_MEMDEV__WriteToActiveAlpha+0x17c>
 8010f9c:	fb08 2b0b 	mla	fp, r8, fp, r2
 8010fa0:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8010fa4:	46a9      	mov	r9, r5
 8010fa6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8010fa8:	f7f8 fef0 	bl	8009d8c <GUI_MEMDEV_GetDataPtr>
 8010fac:	eb00 020b 	add.w	r2, r0, fp
 8010fb0:	980c      	ldr	r0, [sp, #48]	; 0x30
 8010fb2:	a911      	add	r1, sp, #68	; 0x44
 8010fb4:	9000      	str	r0, [sp, #0]
 8010fb6:	9101      	str	r1, [sp, #4]
 8010fb8:	4630      	mov	r0, r6
 8010fba:	4649      	mov	r1, r9
 8010fbc:	4623      	mov	r3, r4
 8010fbe:	f7fb fee1 	bl	800cd84 <GUI__DoAlphaBlending>
 8010fc2:	4682      	mov	sl, r0
 8010fc4:	2800      	cmp	r0, #0
 8010fc6:	d041      	beq.n	801104c <GUI_MEMDEV__WriteToActiveAlpha+0x17c>
 8010fc8:	4a23      	ldr	r2, [pc, #140]	; (8011058 <GUI_MEMDEV__WriteToActiveAlpha+0x188>)
 8010fca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010fcc:	4293      	cmp	r3, r2
 8010fce:	d01f      	beq.n	8011010 <GUI_MEMDEV__WriteToActiveAlpha+0x140>
 8010fd0:	4621      	mov	r1, r4
 8010fd2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8010fd4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010fd6:	f001 fbf4 	bl	80127c2 <GUI__CompactPixelIndicesEx>
 8010fda:	b9c8      	cbnz	r0, 8011010 <GUI_MEMDEV__WriteToActiveAlpha+0x140>
 8010fdc:	9809      	ldr	r0, [sp, #36]	; 0x24
 8010fde:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8010fe2:	f1bc 0f00 	cmp.w	ip, #0
 8010fe6:	d006      	beq.n	8010ff6 <GUI_MEMDEV__WriteToActiveAlpha+0x126>
 8010fe8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8010fea:	4650      	mov	r0, sl
 8010fec:	4651      	mov	r1, sl
 8010fee:	b212      	sxth	r2, r2
 8010ff0:	2304      	movs	r3, #4
 8010ff2:	47e0      	blx	ip
 8010ff4:	e00c      	b.n	8011010 <GUI_MEMDEV__WriteToActiveAlpha+0x140>
 8010ff6:	4652      	mov	r2, sl
 8010ff8:	4641      	mov	r1, r8
 8010ffa:	6810      	ldr	r0, [r2, #0]
 8010ffc:	9207      	str	r2, [sp, #28]
 8010ffe:	9108      	str	r1, [sp, #32]
 8011000:	990e      	ldr	r1, [sp, #56]	; 0x38
 8011002:	4788      	blx	r1
 8011004:	9b08      	ldr	r3, [sp, #32]
 8011006:	9a07      	ldr	r2, [sp, #28]
 8011008:	1e59      	subs	r1, r3, #1
 801100a:	f842 0b04 	str.w	r0, [r2], #4
 801100e:	d1f4      	bne.n	8010ffa <GUI_MEMDEV__WriteToActiveAlpha+0x12a>
 8011010:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8011012:	f8cd a010 	str.w	sl, [sp, #16]
 8011016:	2301      	movs	r3, #1
 8011018:	2100      	movs	r1, #0
 801101a:	f109 0e01 	add.w	lr, r9, #1
 801101e:	9300      	str	r3, [sp, #0]
 8011020:	9301      	str	r3, [sp, #4]
 8011022:	9002      	str	r0, [sp, #8]
 8011024:	9103      	str	r1, [sp, #12]
 8011026:	9105      	str	r1, [sp, #20]
 8011028:	4630      	mov	r0, r6
 801102a:	4622      	mov	r2, r4
 801102c:	4649      	mov	r1, r9
 801102e:	f8cd e020 	str.w	lr, [sp, #32]
 8011032:	f7fb f8f3 	bl	800c21c <LCD_DrawBitmap>
 8011036:	f8dd c020 	ldr.w	ip, [sp, #32]
 801103a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801103c:	1978      	adds	r0, r7, r5
 801103e:	2304      	movs	r3, #4
 8011040:	4560      	cmp	r0, ip
 8011042:	fb12 bb03 	smlabb	fp, r2, r3, fp
 8011046:	d001      	beq.n	801104c <GUI_MEMDEV__WriteToActiveAlpha+0x17c>
 8011048:	46e1      	mov	r9, ip
 801104a:	e7ac      	b.n	8010fa6 <GUI_MEMDEV__WriteToActiveAlpha+0xd6>
 801104c:	b013      	add	sp, #76	; 0x4c
 801104e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011052:	bf00      	nop
 8011054:	20000270 	.word	0x20000270
 8011058:	0800ee9b 	.word	0x0800ee9b
 801105c:	2000dde0 	.word	0x2000dde0

08011060 <GUI_MEMDEV_WriteAt>:
 8011060:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8011062:	460c      	mov	r4, r1
 8011064:	4615      	mov	r5, r2
 8011066:	4606      	mov	r6, r0
 8011068:	b330      	cbz	r0, 80110b8 <GUI_MEMDEV_WriteAt+0x58>
 801106a:	f7fd fc31 	bl	800e8d0 <GUI_ALLOC_LockH>
 801106e:	4a13      	ldr	r2, [pc, #76]	; (80110bc <GUI_MEMDEV_WriteAt+0x5c>)
 8011070:	8901      	ldrh	r1, [r0, #8]
 8011072:	9001      	str	r0, [sp, #4]
 8011074:	4294      	cmp	r4, r2
 8011076:	bf04      	itt	eq
 8011078:	f9b0 4004 	ldrsheq.w	r4, [r0, #4]
 801107c:	f9b0 5006 	ldrsheq.w	r5, [r0, #6]
 8011080:	8940      	ldrh	r0, [r0, #10]
 8011082:	f8ad 4008 	strh.w	r4, [sp, #8]
 8011086:	1e4b      	subs	r3, r1, #1
 8011088:	1e41      	subs	r1, r0, #1
 801108a:	191a      	adds	r2, r3, r4
 801108c:	a801      	add	r0, sp, #4
 801108e:	194b      	adds	r3, r1, r5
 8011090:	f8ad 200c 	strh.w	r2, [sp, #12]
 8011094:	f8ad 500a 	strh.w	r5, [sp, #10]
 8011098:	f8ad 300e 	strh.w	r3, [sp, #14]
 801109c:	f7fd fc26 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80110a0:	a802      	add	r0, sp, #8
 80110a2:	f7f8 fabb 	bl	800961c <WM__InitIVRSearch>
 80110a6:	b138      	cbz	r0, 80110b8 <GUI_MEMDEV_WriteAt+0x58>
 80110a8:	4630      	mov	r0, r6
 80110aa:	4621      	mov	r1, r4
 80110ac:	462a      	mov	r2, r5
 80110ae:	f7f9 fc07 	bl	800a8c0 <GUI_MEMDEV__WriteToActiveAt>
 80110b2:	f7f8 f9f3 	bl	800949c <WM__GetNextIVR>
 80110b6:	e7f6      	b.n	80110a6 <GUI_MEMDEV_WriteAt+0x46>
 80110b8:	bd7f      	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
 80110ba:	bf00      	nop
 80110bc:	fffff001 	.word	0xfffff001

080110c0 <GUI_MEMDEV_Write>:
 80110c0:	4901      	ldr	r1, [pc, #4]	; (80110c8 <GUI_MEMDEV_Write+0x8>)
 80110c2:	460a      	mov	r2, r1
 80110c4:	f7ff bfcc 	b.w	8011060 <GUI_MEMDEV_WriteAt>
 80110c8:	fffff001 	.word	0xfffff001

080110cc <GUI_USAGE_BM_AddPixel>:
 80110cc:	4603      	mov	r3, r0
 80110ce:	b510      	push	{r4, lr}
 80110d0:	f933 4b14 	ldrsh.w	r4, [r3], #20
 80110d4:	1b09      	subs	r1, r1, r4
 80110d6:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 80110da:	6900      	ldr	r0, [r0, #16]
 80110dc:	1b12      	subs	r2, r2, r4
 80110de:	fb00 3302 	mla	r3, r0, r2, r3
 80110e2:	10c8      	asrs	r0, r1, #3
 80110e4:	2280      	movs	r2, #128	; 0x80
 80110e6:	f001 0107 	and.w	r1, r1, #7
 80110ea:	fa42 f101 	asr.w	r1, r2, r1
 80110ee:	5c1a      	ldrb	r2, [r3, r0]
 80110f0:	4311      	orrs	r1, r2
 80110f2:	5419      	strb	r1, [r3, r0]
 80110f4:	bd10      	pop	{r4, pc}

080110f6 <GUI_USAGE_BM_GetNextDirty>:
 80110f6:	b570      	push	{r4, r5, r6, lr}
 80110f8:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 80110fc:	680b      	ldr	r3, [r1, #0]
 80110fe:	8886      	ldrh	r6, [r0, #4]
 8011100:	42a2      	cmp	r2, r4
 8011102:	da43      	bge.n	801118c <GUI_USAGE_BM_GetNextDirty+0x96>
 8011104:	b236      	sxth	r6, r6
 8011106:	42b3      	cmp	r3, r6
 8011108:	6905      	ldr	r5, [r0, #16]
 801110a:	da3f      	bge.n	801118c <GUI_USAGE_BM_GetNextDirty+0x96>
 801110c:	3014      	adds	r0, #20
 801110e:	fb05 0202 	mla	r2, r5, r2, r0
 8011112:	10dc      	asrs	r4, r3, #3
 8011114:	1e70      	subs	r0, r6, #1
 8011116:	1915      	adds	r5, r2, r4
 8011118:	ebc4 00e0 	rsb	r0, r4, r0, asr #3
 801111c:	5d14      	ldrb	r4, [r2, r4]
 801111e:	f003 0207 	and.w	r2, r3, #7
 8011122:	fa04 f402 	lsl.w	r4, r4, r2
 8011126:	b2e4      	uxtb	r4, r4
 8011128:	3501      	adds	r5, #1
 801112a:	b93c      	cbnz	r4, 801113c <GUI_USAGE_BM_GetNextDirty+0x46>
 801112c:	b378      	cbz	r0, 801118e <GUI_USAGE_BM_GetNextDirty+0x98>
 801112e:	3308      	adds	r3, #8
 8011130:	f815 4b01 	ldrb.w	r4, [r5], #1
 8011134:	3801      	subs	r0, #1
 8011136:	f023 0307 	bic.w	r3, r3, #7
 801113a:	e7f6      	b.n	801112a <GUI_USAGE_BM_GetNextDirty+0x34>
 801113c:	0622      	lsls	r2, r4, #24
 801113e:	d403      	bmi.n	8011148 <GUI_USAGE_BM_GetNextDirty+0x52>
 8011140:	0062      	lsls	r2, r4, #1
 8011142:	b2d4      	uxtb	r4, r2
 8011144:	3301      	adds	r3, #1
 8011146:	e7f9      	b.n	801113c <GUI_USAGE_BM_GetNextDirty+0x46>
 8011148:	2cff      	cmp	r4, #255	; 0xff
 801114a:	d008      	beq.n	801115e <GUI_USAGE_BM_GetNextDirty+0x68>
 801114c:	461a      	mov	r2, r3
 801114e:	f004 0640 	and.w	r6, r4, #64	; 0x40
 8011152:	b2f6      	uxtb	r6, r6
 8011154:	b126      	cbz	r6, 8011160 <GUI_USAGE_BM_GetNextDirty+0x6a>
 8011156:	0064      	lsls	r4, r4, #1
 8011158:	b2e4      	uxtb	r4, r4
 801115a:	3201      	adds	r2, #1
 801115c:	e7f7      	b.n	801114e <GUI_USAGE_BM_GetNextDirty+0x58>
 801115e:	1dda      	adds	r2, r3, #7
 8011160:	f002 0407 	and.w	r4, r2, #7
 8011164:	2c07      	cmp	r4, #7
 8011166:	d10d      	bne.n	8011184 <GUI_USAGE_BM_GetNextDirty+0x8e>
 8011168:	3801      	subs	r0, #1
 801116a:	d40b      	bmi.n	8011184 <GUI_USAGE_BM_GetNextDirty+0x8e>
 801116c:	f815 4b01 	ldrb.w	r4, [r5], #1
 8011170:	2cff      	cmp	r4, #255	; 0xff
 8011172:	d101      	bne.n	8011178 <GUI_USAGE_BM_GetNextDirty+0x82>
 8011174:	3208      	adds	r2, #8
 8011176:	e7f7      	b.n	8011168 <GUI_USAGE_BM_GetNextDirty+0x72>
 8011178:	0620      	lsls	r0, r4, #24
 801117a:	d503      	bpl.n	8011184 <GUI_USAGE_BM_GetNextDirty+0x8e>
 801117c:	0060      	lsls	r0, r4, #1
 801117e:	b2c4      	uxtb	r4, r0
 8011180:	3201      	adds	r2, #1
 8011182:	e7f9      	b.n	8011178 <GUI_USAGE_BM_GetNextDirty+0x82>
 8011184:	600b      	str	r3, [r1, #0]
 8011186:	1ad1      	subs	r1, r2, r3
 8011188:	1c48      	adds	r0, r1, #1
 801118a:	bd70      	pop	{r4, r5, r6, pc}
 801118c:	2000      	movs	r0, #0
 801118e:	bd70      	pop	{r4, r5, r6, pc}

08011190 <_GUI_USAGE_BM_Delete>:
 8011190:	f7fd bbd8 	b.w	800e944 <GUI_ALLOC_Free>

08011194 <GUI_USAGE_BM_Clear>:
 8011194:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8011198:	6902      	ldr	r2, [r0, #16]
 801119a:	2100      	movs	r1, #0
 801119c:	3014      	adds	r0, #20
 801119e:	435a      	muls	r2, r3
 80111a0:	f002 bc42 	b.w	8013a28 <memset>

080111a4 <GUI_USAGE_BM_AddHLine>:
 80111a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80111a6:	f9b0 4000 	ldrsh.w	r4, [r0]
 80111aa:	1b09      	subs	r1, r1, r4
 80111ac:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80111b0:	42a1      	cmp	r1, r4
 80111b2:	da2e      	bge.n	8011212 <GUI_USAGE_BM_AddHLine+0x6e>
 80111b4:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 80111b8:	f100 0614 	add.w	r6, r0, #20
 80111bc:	18cb      	adds	r3, r1, r3
 80111be:	6900      	ldr	r0, [r0, #16]
 80111c0:	1b52      	subs	r2, r2, r5
 80111c2:	1e5d      	subs	r5, r3, #1
 80111c4:	fb00 6202 	mla	r2, r0, r2, r6
 80111c8:	10cc      	asrs	r4, r1, #3
 80111ca:	f001 0607 	and.w	r6, r1, #7
 80111ce:	43eb      	mvns	r3, r5
 80111d0:	21ff      	movs	r1, #255	; 0xff
 80111d2:	fa41 f006 	asr.w	r0, r1, r6
 80111d6:	f003 0607 	and.w	r6, r3, #7
 80111da:	fa01 f306 	lsl.w	r3, r1, r6
 80111de:	ebd4 05e5 	rsbs	r5, r4, r5, asr #3
 80111e2:	b2de      	uxtb	r6, r3
 80111e4:	eb02 0704 	add.w	r7, r2, r4
 80111e8:	b2c0      	uxtb	r0, r0
 80111ea:	5d13      	ldrb	r3, [r2, r4]
 80111ec:	d103      	bne.n	80111f6 <GUI_USAGE_BM_AddHLine+0x52>
 80111ee:	4006      	ands	r6, r0
 80111f0:	4333      	orrs	r3, r6
 80111f2:	5513      	strb	r3, [r2, r4]
 80111f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80111f6:	4318      	orrs	r0, r3
 80111f8:	3d01      	subs	r5, #1
 80111fa:	5510      	strb	r0, [r2, r4]
 80111fc:	1c7c      	adds	r4, r7, #1
 80111fe:	2d00      	cmp	r5, #0
 8011200:	dd04      	ble.n	801120c <GUI_USAGE_BM_AddHLine+0x68>
 8011202:	4620      	mov	r0, r4
 8011204:	462a      	mov	r2, r5
 8011206:	f002 fc0f 	bl	8013a28 <memset>
 801120a:	1964      	adds	r4, r4, r5
 801120c:	7821      	ldrb	r1, [r4, #0]
 801120e:	430e      	orrs	r6, r1
 8011210:	7026      	strb	r6, [r4, #0]
 8011212:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08011214 <GUI_USAGE_BM_Create>:
 8011214:	e92d 4fd3 	stmdb	sp!, {r0, r1, r4, r6, r7, r8, r9, sl, fp, lr}
 8011218:	f102 060f 	add.w	r6, r2, #15
 801121c:	4682      	mov	sl, r0
 801121e:	1130      	asrs	r0, r6, #4
 8011220:	0046      	lsls	r6, r0, #1
 8011222:	fb06 f003 	mul.w	r0, r6, r3
 8011226:	3014      	adds	r0, #20
 8011228:	4689      	mov	r9, r1
 801122a:	4690      	mov	r8, r2
 801122c:	461f      	mov	r7, r3
 801122e:	f7fd fdc3 	bl	800edb8 <GUI_ALLOC_AllocZero>
 8011232:	4683      	mov	fp, r0
 8011234:	b198      	cbz	r0, 801125e <GUI_USAGE_BM_Create+0x4a>
 8011236:	f7fd fb4b 	bl	800e8d0 <GUI_ALLOC_LockH>
 801123a:	4b0a      	ldr	r3, [pc, #40]	; (8011264 <GUI_USAGE_BM_Create+0x50>)
 801123c:	4604      	mov	r4, r0
 801123e:	a802      	add	r0, sp, #8
 8011240:	2101      	movs	r1, #1
 8011242:	f840 4d04 	str.w	r4, [r0, #-4]!
 8011246:	f8a4 8004 	strh.w	r8, [r4, #4]
 801124a:	f8a4 a000 	strh.w	sl, [r4]
 801124e:	f8a4 9002 	strh.w	r9, [r4, #2]
 8011252:	80e7      	strh	r7, [r4, #6]
 8011254:	60a3      	str	r3, [r4, #8]
 8011256:	81a1      	strh	r1, [r4, #12]
 8011258:	6126      	str	r6, [r4, #16]
 801125a:	f7fd fb47 	bl	800e8ec <GUI_ALLOC_UnlockH>
 801125e:	4658      	mov	r0, fp
 8011260:	e8bd 8fdc 	ldmia.w	sp!, {r2, r3, r4, r6, r7, r8, r9, sl, fp, pc}
 8011264:	0802d314 	.word	0x0802d314

08011268 <GUI_USAGE_DecUseCnt>:
 8011268:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801126a:	4605      	mov	r5, r0
 801126c:	f7fd fb30 	bl	800e8d0 <GUI_ALLOC_LockH>
 8011270:	4602      	mov	r2, r0
 8011272:	a802      	add	r0, sp, #8
 8011274:	8994      	ldrh	r4, [r2, #12]
 8011276:	f840 2d04 	str.w	r2, [r0, #-4]!
 801127a:	1e61      	subs	r1, r4, #1
 801127c:	b28c      	uxth	r4, r1
 801127e:	8194      	strh	r4, [r2, #12]
 8011280:	f7fd fb34 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8011284:	b914      	cbnz	r4, 801128c <GUI_USAGE_DecUseCnt+0x24>
 8011286:	4628      	mov	r0, r5
 8011288:	f7fd fb5c 	bl	800e944 <GUI_ALLOC_Free>
 801128c:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0801128e <GUI_USAGE_AddRect>:
 801128e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011292:	4605      	mov	r5, r0
 8011294:	4689      	mov	r9, r1
 8011296:	4614      	mov	r4, r2
 8011298:	4698      	mov	r8, r3
 801129a:	68a8      	ldr	r0, [r5, #8]
 801129c:	4649      	mov	r1, r9
 801129e:	6846      	ldr	r6, [r0, #4]
 80112a0:	4643      	mov	r3, r8
 80112a2:	4628      	mov	r0, r5
 80112a4:	1c57      	adds	r7, r2, #1
 80112a6:	47b0      	blx	r6
 80112a8:	9908      	ldr	r1, [sp, #32]
 80112aa:	190b      	adds	r3, r1, r4
 80112ac:	42bb      	cmp	r3, r7
 80112ae:	463a      	mov	r2, r7
 80112b0:	d1f3      	bne.n	801129a <GUI_USAGE_AddRect+0xc>
 80112b2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	...

080112b8 <GUI_MEMDEV_ReduceYSize>:
 80112b8:	b513      	push	{r0, r1, r4, lr}
 80112ba:	460c      	mov	r4, r1
 80112bc:	b918      	cbnz	r0, 80112c6 <GUI_MEMDEV_ReduceYSize+0xe>
 80112be:	4b08      	ldr	r3, [pc, #32]	; (80112e0 <GUI_MEMDEV_ReduceYSize+0x28>)
 80112c0:	6818      	ldr	r0, [r3, #0]
 80112c2:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80112c4:	b150      	cbz	r0, 80112dc <GUI_MEMDEV_ReduceYSize+0x24>
 80112c6:	f7fd fb03 	bl	800e8d0 <GUI_ALLOC_LockH>
 80112ca:	f9b0 100a 	ldrsh.w	r1, [r0, #10]
 80112ce:	9001      	str	r0, [sp, #4]
 80112d0:	428c      	cmp	r4, r1
 80112d2:	bfb8      	it	lt
 80112d4:	8144      	strhlt	r4, [r0, #10]
 80112d6:	a801      	add	r0, sp, #4
 80112d8:	f7fd fb08 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80112dc:	bd1c      	pop	{r2, r3, r4, pc}
 80112de:	bf00      	nop
 80112e0:	20000270 	.word	0x20000270

080112e4 <GUI_MEMDEV_Clear>:
 80112e4:	b513      	push	{r0, r1, r4, lr}
 80112e6:	b918      	cbnz	r0, 80112f0 <GUI_MEMDEV_Clear+0xc>
 80112e8:	4b0d      	ldr	r3, [pc, #52]	; (8011320 <GUI_MEMDEV_Clear+0x3c>)
 80112ea:	6818      	ldr	r0, [r3, #0]
 80112ec:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80112ee:	b1a8      	cbz	r0, 801131c <GUI_MEMDEV_Clear+0x38>
 80112f0:	f7fd faee 	bl	800e8d0 <GUI_ALLOC_LockH>
 80112f4:	a902      	add	r1, sp, #8
 80112f6:	6944      	ldr	r4, [r0, #20]
 80112f8:	f841 0d08 	str.w	r0, [r1, #-8]!
 80112fc:	4668      	mov	r0, sp
 80112fe:	f7fd faf5 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8011302:	b15c      	cbz	r4, 801131c <GUI_MEMDEV_Clear+0x38>
 8011304:	4620      	mov	r0, r4
 8011306:	f7fd fae3 	bl	800e8d0 <GUI_ALLOC_LockH>
 801130a:	ac02      	add	r4, sp, #8
 801130c:	6883      	ldr	r3, [r0, #8]
 801130e:	f844 0d04 	str.w	r0, [r4, #-4]!
 8011312:	6899      	ldr	r1, [r3, #8]
 8011314:	4788      	blx	r1
 8011316:	4620      	mov	r0, r4
 8011318:	f7fd fae8 	bl	800e8ec <GUI_ALLOC_UnlockH>
 801131c:	bd1c      	pop	{r2, r3, r4, pc}
 801131e:	bf00      	nop
 8011320:	20000270 	.word	0x20000270

08011324 <_GetDevData>:
 8011324:	4802      	ldr	r0, [pc, #8]	; (8011330 <_GetDevData+0xc>)
 8011326:	2901      	cmp	r1, #1
 8011328:	bf18      	it	ne
 801132a:	2000      	movne	r0, #0
 801132c:	4770      	bx	lr
 801132e:	bf00      	nop
 8011330:	0802d36c 	.word	0x0802d36c

08011334 <_GetDevFunc>:
 8011334:	4802      	ldr	r0, [pc, #8]	; (8011340 <_GetDevFunc+0xc>)
 8011336:	2916      	cmp	r1, #22
 8011338:	bf18      	it	ne
 801133a:	2000      	movne	r0, #0
 801133c:	4770      	bx	lr
 801133e:	bf00      	nop
 8011340:	080107b9 	.word	0x080107b9

08011344 <_SetOrg>:
 8011344:	6800      	ldr	r0, [r0, #0]
 8011346:	b508      	push	{r3, lr}
 8011348:	68c3      	ldr	r3, [r0, #12]
 801134a:	6a1b      	ldr	r3, [r3, #32]
 801134c:	4798      	blx	r3
 801134e:	bd08      	pop	{r3, pc}

08011350 <_GetDevProp>:
 8011350:	6800      	ldr	r0, [r0, #0]
 8011352:	b508      	push	{r3, lr}
 8011354:	68c3      	ldr	r3, [r0, #12]
 8011356:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8011358:	4790      	blx	r2
 801135a:	bd08      	pop	{r3, pc}

0801135c <_GetRect>:
 801135c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801135e:	6880      	ldr	r0, [r0, #8]
 8011360:	460c      	mov	r4, r1
 8011362:	f7fd fab5 	bl	800e8d0 <GUI_ALLOC_LockH>
 8011366:	4603      	mov	r3, r0
 8011368:	a802      	add	r0, sp, #8
 801136a:	8899      	ldrh	r1, [r3, #4]
 801136c:	891d      	ldrh	r5, [r3, #8]
 801136e:	88da      	ldrh	r2, [r3, #6]
 8011370:	f840 3d04 	str.w	r3, [r0, #-4]!
 8011374:	895b      	ldrh	r3, [r3, #10]
 8011376:	8021      	strh	r1, [r4, #0]
 8011378:	1949      	adds	r1, r1, r5
 801137a:	3901      	subs	r1, #1
 801137c:	8062      	strh	r2, [r4, #2]
 801137e:	18d2      	adds	r2, r2, r3
 8011380:	80a1      	strh	r1, [r4, #4]
 8011382:	1e51      	subs	r1, r2, #1
 8011384:	80e1      	strh	r1, [r4, #6]
 8011386:	f7fd fab1 	bl	800e8ec <GUI_ALLOC_UnlockH>
 801138a:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0801138c <_XY2PTR>:
 801138c:	4b0e      	ldr	r3, [pc, #56]	; (80113c8 <_XY2PTR+0x3c>)
 801138e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011390:	4605      	mov	r5, r0
 8011392:	6818      	ldr	r0, [r3, #0]
 8011394:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8011396:	460e      	mov	r6, r1
 8011398:	f7fd fa9a 	bl	800e8d0 <GUI_ALLOC_LockH>
 801139c:	4602      	mov	r2, r0
 801139e:	a802      	add	r0, sp, #8
 80113a0:	f9b2 4006 	ldrsh.w	r4, [r2, #6]
 80113a4:	68d3      	ldr	r3, [r2, #12]
 80113a6:	f840 2d04 	str.w	r2, [r0, #-4]!
 80113aa:	f102 0118 	add.w	r1, r2, #24
 80113ae:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 80113b2:	1b36      	subs	r6, r6, r4
 80113b4:	fb03 1106 	mla	r1, r3, r6, r1
 80113b8:	1aad      	subs	r5, r5, r2
 80113ba:	eb01 0445 	add.w	r4, r1, r5, lsl #1
 80113be:	f7fd fa95 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80113c2:	4620      	mov	r0, r4
 80113c4:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
 80113c6:	bf00      	nop
 80113c8:	20000270 	.word	0x20000270

080113cc <_GetPixelIndex>:
 80113cc:	b508      	push	{r3, lr}
 80113ce:	4608      	mov	r0, r1
 80113d0:	4611      	mov	r1, r2
 80113d2:	f7ff ffdb 	bl	801138c <_XY2PTR>
 80113d6:	8800      	ldrh	r0, [r0, #0]
 80113d8:	bd08      	pop	{r3, pc}
	...

080113dc <_XorPixel>:
 80113dc:	4b14      	ldr	r3, [pc, #80]	; (8011430 <_XorPixel+0x54>)
 80113de:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80113e0:	4607      	mov	r7, r0
 80113e2:	6818      	ldr	r0, [r3, #0]
 80113e4:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80113e6:	4615      	mov	r5, r2
 80113e8:	460e      	mov	r6, r1
 80113ea:	f7fd fa71 	bl	800e8d0 <GUI_ALLOC_LockH>
 80113ee:	4629      	mov	r1, r5
 80113f0:	9000      	str	r0, [sp, #0]
 80113f2:	4630      	mov	r0, r6
 80113f4:	f7ff ffca 	bl	801138c <_XY2PTR>
 80113f8:	6939      	ldr	r1, [r7, #16]
 80113fa:	4604      	mov	r4, r0
 80113fc:	688a      	ldr	r2, [r1, #8]
 80113fe:	4790      	blx	r2
 8011400:	8823      	ldrh	r3, [r4, #0]
 8011402:	4058      	eors	r0, r3
 8011404:	8020      	strh	r0, [r4, #0]
 8011406:	9800      	ldr	r0, [sp, #0]
 8011408:	6940      	ldr	r0, [r0, #20]
 801140a:	b160      	cbz	r0, 8011426 <_XorPixel+0x4a>
 801140c:	f7fd fa60 	bl	800e8d0 <GUI_ALLOC_LockH>
 8011410:	ac02      	add	r4, sp, #8
 8011412:	6882      	ldr	r2, [r0, #8]
 8011414:	f844 0d04 	str.w	r0, [r4, #-4]!
 8011418:	6813      	ldr	r3, [r2, #0]
 801141a:	4631      	mov	r1, r6
 801141c:	462a      	mov	r2, r5
 801141e:	4798      	blx	r3
 8011420:	4620      	mov	r0, r4
 8011422:	f7fd fa63 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8011426:	4668      	mov	r0, sp
 8011428:	f7fd fa60 	bl	800e8ec <GUI_ALLOC_UnlockH>
 801142c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 801142e:	bf00      	nop
 8011430:	20000270 	.word	0x20000270

08011434 <_SetPixelIndex>:
 8011434:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011436:	461c      	mov	r4, r3
 8011438:	4b10      	ldr	r3, [pc, #64]	; (801147c <_SetPixelIndex+0x48>)
 801143a:	6818      	ldr	r0, [r3, #0]
 801143c:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801143e:	460e      	mov	r6, r1
 8011440:	4615      	mov	r5, r2
 8011442:	f7fd fa45 	bl	800e8d0 <GUI_ALLOC_LockH>
 8011446:	4629      	mov	r1, r5
 8011448:	9000      	str	r0, [sp, #0]
 801144a:	4630      	mov	r0, r6
 801144c:	f7ff ff9e 	bl	801138c <_XY2PTR>
 8011450:	9900      	ldr	r1, [sp, #0]
 8011452:	8004      	strh	r4, [r0, #0]
 8011454:	6948      	ldr	r0, [r1, #20]
 8011456:	b160      	cbz	r0, 8011472 <_SetPixelIndex+0x3e>
 8011458:	f7fd fa3a 	bl	800e8d0 <GUI_ALLOC_LockH>
 801145c:	ac02      	add	r4, sp, #8
 801145e:	6883      	ldr	r3, [r0, #8]
 8011460:	f844 0d04 	str.w	r0, [r4, #-4]!
 8011464:	681b      	ldr	r3, [r3, #0]
 8011466:	4631      	mov	r1, r6
 8011468:	462a      	mov	r2, r5
 801146a:	4798      	blx	r3
 801146c:	4620      	mov	r0, r4
 801146e:	f7fd fa3d 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8011472:	4668      	mov	r0, sp
 8011474:	f7fd fa3a 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8011478:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
 801147a:	bf00      	nop
 801147c:	20000270 	.word	0x20000270

08011480 <_DrawVLine>:
 8011480:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011484:	461e      	mov	r6, r3
 8011486:	4b2b      	ldr	r3, [pc, #172]	; (8011534 <_DrawVLine+0xb4>)
 8011488:	4681      	mov	r9, r0
 801148a:	6818      	ldr	r0, [r3, #0]
 801148c:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801148e:	460f      	mov	r7, r1
 8011490:	4614      	mov	r4, r2
 8011492:	f7fd fa1d 	bl	800e8d0 <GUI_ALLOC_LockH>
 8011496:	9000      	str	r0, [sp, #0]
 8011498:	6940      	ldr	r0, [r0, #20]
 801149a:	b108      	cbz	r0, 80114a0 <_DrawVLine+0x20>
 801149c:	f7fd fa18 	bl	800e8d0 <GUI_ALLOC_LockH>
 80114a0:	9001      	str	r0, [sp, #4]
 80114a2:	4621      	mov	r1, r4
 80114a4:	4638      	mov	r0, r7
 80114a6:	f7ff ff71 	bl	801138c <_XY2PTR>
 80114aa:	4a22      	ldr	r2, [pc, #136]	; (8011534 <_DrawVLine+0xb4>)
 80114ac:	9900      	ldr	r1, [sp, #0]
 80114ae:	6813      	ldr	r3, [r2, #0]
 80114b0:	f8d1 800c 	ldr.w	r8, [r1, #12]
 80114b4:	4605      	mov	r5, r0
 80114b6:	7c18      	ldrb	r0, [r3, #16]
 80114b8:	07c2      	lsls	r2, r0, #31
 80114ba:	d51f      	bpl.n	80114fc <_DrawVLine+0x7c>
 80114bc:	f8d9 0010 	ldr.w	r0, [r9, #16]
 80114c0:	6881      	ldr	r1, [r0, #8]
 80114c2:	4788      	blx	r1
 80114c4:	fa1f f880 	uxth.w	r8, r0
 80114c8:	9801      	ldr	r0, [sp, #4]
 80114ca:	b120      	cbz	r0, 80114d6 <_DrawVLine+0x56>
 80114cc:	6882      	ldr	r2, [r0, #8]
 80114ce:	4639      	mov	r1, r7
 80114d0:	6813      	ldr	r3, [r2, #0]
 80114d2:	4622      	mov	r2, r4
 80114d4:	4798      	blx	r3
 80114d6:	9a00      	ldr	r2, [sp, #0]
 80114d8:	8828      	ldrh	r0, [r5, #0]
 80114da:	68d3      	ldr	r3, [r2, #12]
 80114dc:	3401      	adds	r4, #1
 80114de:	ea88 0100 	eor.w	r1, r8, r0
 80114e2:	42b4      	cmp	r4, r6
 80114e4:	8029      	strh	r1, [r5, #0]
 80114e6:	441d      	add	r5, r3
 80114e8:	ddee      	ble.n	80114c8 <_DrawVLine+0x48>
 80114ea:	4668      	mov	r0, sp
 80114ec:	f7fd f9fe 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80114f0:	9801      	ldr	r0, [sp, #4]
 80114f2:	b1e8      	cbz	r0, 8011530 <_DrawVLine+0xb0>
 80114f4:	a801      	add	r0, sp, #4
 80114f6:	f7fd f9f9 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80114fa:	e019      	b.n	8011530 <_DrawVLine+0xb0>
 80114fc:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 80114fe:	9a01      	ldr	r2, [sp, #4]
 8011500:	f8d1 9000 	ldr.w	r9, [r1]
 8011504:	b162      	cbz	r2, 8011520 <_DrawVLine+0xa0>
 8011506:	9801      	ldr	r0, [sp, #4]
 8011508:	6883      	ldr	r3, [r0, #8]
 801150a:	4622      	mov	r2, r4
 801150c:	681b      	ldr	r3, [r3, #0]
 801150e:	4639      	mov	r1, r7
 8011510:	3401      	adds	r4, #1
 8011512:	4798      	blx	r3
 8011514:	42b4      	cmp	r4, r6
 8011516:	f8a5 9000 	strh.w	r9, [r5]
 801151a:	4445      	add	r5, r8
 801151c:	ddf3      	ble.n	8011506 <_DrawVLine+0x86>
 801151e:	e7e4      	b.n	80114ea <_DrawVLine+0x6a>
 8011520:	1b34      	subs	r4, r6, r4
 8011522:	3401      	adds	r4, #1
 8011524:	3c01      	subs	r4, #1
 8011526:	f8a5 9000 	strh.w	r9, [r5]
 801152a:	4445      	add	r5, r8
 801152c:	d1fa      	bne.n	8011524 <_DrawVLine+0xa4>
 801152e:	e7dc      	b.n	80114ea <_DrawVLine+0x6a>
 8011530:	e8bd 83fe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
 8011534:	20000270 	.word	0x20000270

08011538 <_FillRect>:
 8011538:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801153c:	461e      	mov	r6, r3
 801153e:	4b29      	ldr	r3, [pc, #164]	; (80115e4 <_FillRect+0xac>)
 8011540:	4614      	mov	r4, r2
 8011542:	681a      	ldr	r2, [r3, #0]
 8011544:	460f      	mov	r7, r1
 8011546:	6bd1      	ldr	r1, [r2, #60]	; 0x3c
 8011548:	b085      	sub	sp, #20
 801154a:	4683      	mov	fp, r0
 801154c:	6e10      	ldr	r0, [r2, #96]	; 0x60
 801154e:	f8d1 9000 	ldr.w	r9, [r1]
 8011552:	f7fd f9bd 	bl	800e8d0 <GUI_ALLOC_LockH>
 8011556:	4621      	mov	r1, r4
 8011558:	9002      	str	r0, [sp, #8]
 801155a:	4638      	mov	r0, r7
 801155c:	f7ff ff16 	bl	801138c <_XY2PTR>
 8011560:	4605      	mov	r5, r0
 8011562:	9802      	ldr	r0, [sp, #8]
 8011564:	f8d0 a00c 	ldr.w	sl, [r0, #12]
 8011568:	6940      	ldr	r0, [r0, #20]
 801156a:	1bf6      	subs	r6, r6, r7
 801156c:	3601      	adds	r6, #1
 801156e:	b338      	cbz	r0, 80115c0 <_FillRect+0x88>
 8011570:	f7fd f9ae 	bl	800e8d0 <GUI_ALLOC_LockH>
 8011574:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011576:	f10d 0810 	add.w	r8, sp, #16
 801157a:	1b1a      	subs	r2, r3, r4
 801157c:	f848 0d04 	str.w	r0, [r8, #-4]!
 8011580:	1c51      	adds	r1, r2, #1
 8011582:	9100      	str	r1, [sp, #0]
 8011584:	4622      	mov	r2, r4
 8011586:	4639      	mov	r1, r7
 8011588:	4633      	mov	r3, r6
 801158a:	f7ff fe80 	bl	801128e <GUI_USAGE_AddRect>
 801158e:	4640      	mov	r0, r8
 8011590:	f7fd f9ac 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8011594:	e014      	b.n	80115c0 <_FillRect+0x88>
 8011596:	4b13      	ldr	r3, [pc, #76]	; (80115e4 <_FillRect+0xac>)
 8011598:	681a      	ldr	r2, [r3, #0]
 801159a:	7c11      	ldrb	r1, [r2, #16]
 801159c:	07c9      	lsls	r1, r1, #31
 801159e:	d513      	bpl.n	80115c8 <_FillRect+0x90>
 80115a0:	f8db 0010 	ldr.w	r0, [fp, #16]
 80115a4:	6883      	ldr	r3, [r0, #8]
 80115a6:	4798      	blx	r3
 80115a8:	462a      	mov	r2, r5
 80115aa:	b280      	uxth	r0, r0
 80115ac:	4633      	mov	r3, r6
 80115ae:	8811      	ldrh	r1, [r2, #0]
 80115b0:	3b01      	subs	r3, #1
 80115b2:	ea81 0100 	eor.w	r1, r1, r0
 80115b6:	f822 1b02 	strh.w	r1, [r2], #2
 80115ba:	d1f8      	bne.n	80115ae <_FillRect+0x76>
 80115bc:	4455      	add	r5, sl
 80115be:	3401      	adds	r4, #1
 80115c0:	980e      	ldr	r0, [sp, #56]	; 0x38
 80115c2:	4284      	cmp	r4, r0
 80115c4:	dde7      	ble.n	8011596 <_FillRect+0x5e>
 80115c6:	e006      	b.n	80115d6 <_FillRect+0x9e>
 80115c8:	4628      	mov	r0, r5
 80115ca:	fa1f f189 	uxth.w	r1, r9
 80115ce:	4632      	mov	r2, r6
 80115d0:	f7fa ffff 	bl	800c5d2 <GUI__memset16>
 80115d4:	e7f2      	b.n	80115bc <_FillRect+0x84>
 80115d6:	a802      	add	r0, sp, #8
 80115d8:	f7fd f988 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80115dc:	b005      	add	sp, #20
 80115de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80115e2:	bf00      	nop
 80115e4:	20000270 	.word	0x20000270

080115e8 <_DrawHLine>:
 80115e8:	b507      	push	{r0, r1, r2, lr}
 80115ea:	9200      	str	r2, [sp, #0]
 80115ec:	f7ff ffa4 	bl	8011538 <_FillRect>
 80115f0:	bd0e      	pop	{r1, r2, r3, pc}
	...

080115f4 <_DrawBitmap>:
 80115f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80115f8:	469b      	mov	fp, r3
 80115fa:	b095      	sub	sp, #84	; 0x54
 80115fc:	4b8c      	ldr	r3, [pc, #560]	; (8011830 <_DrawBitmap+0x23c>)
 80115fe:	900e      	str	r0, [sp, #56]	; 0x38
 8011600:	6818      	ldr	r0, [r3, #0]
 8011602:	920a      	str	r2, [sp, #40]	; 0x28
 8011604:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8011606:	f8dd a084 	ldr.w	sl, [sp, #132]	; 0x84
 801160a:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801160c:	460c      	mov	r4, r1
 801160e:	f7fd f95f 	bl	800e8d0 <GUI_ALLOC_LockH>
 8011612:	9012      	str	r0, [sp, #72]	; 0x48
 8011614:	6940      	ldr	r0, [r0, #20]
 8011616:	b108      	cbz	r0, 801161c <_DrawBitmap+0x28>
 8011618:	f7fd f95a 	bl	800e8d0 <GUI_ALLOC_LockH>
 801161c:	9013      	str	r0, [sp, #76]	; 0x4c
 801161e:	a814      	add	r0, sp, #80	; 0x50
 8011620:	f850 1d08 	ldr.w	r1, [r0, #-8]!
 8011624:	68ca      	ldr	r2, [r1, #12]
 8011626:	920b      	str	r2, [sp, #44]	; 0x2c
 8011628:	f7fd f960 	bl	800e8ec <GUI_ALLOC_UnlockH>
 801162c:	9f22      	ldr	r7, [sp, #136]	; 0x88
 801162e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011630:	19e4      	adds	r4, r4, r7
 8011632:	9406      	str	r4, [sp, #24]
 8011634:	b158      	cbz	r0, 801164e <_DrawBitmap+0x5a>
 8011636:	4b7e      	ldr	r3, [pc, #504]	; (8011830 <_DrawBitmap+0x23c>)
 8011638:	6819      	ldr	r1, [r3, #0]
 801163a:	7c0a      	ldrb	r2, [r1, #16]
 801163c:	0797      	lsls	r7, r2, #30
 801163e:	d106      	bne.n	801164e <_DrawBitmap+0x5a>
 8011640:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8011642:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8011644:	9700      	str	r7, [sp, #0]
 8011646:	4621      	mov	r1, r4
 8011648:	465b      	mov	r3, fp
 801164a:	f7ff fe20 	bl	801128e <GUI_USAGE_AddRect>
 801164e:	9806      	ldr	r0, [sp, #24]
 8011650:	990a      	ldr	r1, [sp, #40]	; 0x28
 8011652:	f7ff fe9b 	bl	801138c <_XY2PTR>
 8011656:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8011658:	2b10      	cmp	r3, #16
 801165a:	4604      	mov	r4, r0
 801165c:	d139      	bne.n	80116d2 <_DrawBitmap+0xde>
 801165e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8011660:	b11e      	cbz	r6, 801166a <_DrawBitmap+0x76>
 8011662:	ea4f 064b 	mov.w	r6, fp, lsl #1
 8011666:	2500      	movs	r5, #0
 8011668:	e014      	b.n	8011694 <_DrawBitmap+0xa0>
 801166a:	4972      	ldr	r1, [pc, #456]	; (8011834 <_DrawBitmap+0x240>)
 801166c:	680d      	ldr	r5, [r1, #0]
 801166e:	2d00      	cmp	r5, #0
 8011670:	d0f7      	beq.n	8011662 <_DrawBitmap+0x6e>
 8011672:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8011674:	9f20      	ldr	r7, [sp, #128]	; 0x80
 8011676:	9600      	str	r6, [sp, #0]
 8011678:	9701      	str	r7, [sp, #4]
 801167a:	4651      	mov	r1, sl
 801167c:	465a      	mov	r2, fp
 801167e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8011680:	47a8      	blx	r5
 8011682:	e353      	b.n	8011d2c <_DrawBitmap+0x738>
 8011684:	f1ba 0f00 	cmp.w	sl, #0
 8011688:	d10a      	bne.n	80116a0 <_DrawBitmap+0xac>
 801168a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801168c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801168e:	4492      	add	sl, r2
 8011690:	1864      	adds	r4, r4, r1
 8011692:	3501      	adds	r5, #1
 8011694:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8011696:	f8dd 804c 	ldr.w	r8, [sp, #76]	; 0x4c
 801169a:	42bd      	cmp	r5, r7
 801169c:	dbf2      	blt.n	8011684 <_DrawBitmap+0x90>
 801169e:	e013      	b.n	80116c8 <_DrawBitmap+0xd4>
 80116a0:	2c00      	cmp	r4, #0
 80116a2:	d0f2      	beq.n	801168a <_DrawBitmap+0x96>
 80116a4:	4620      	mov	r0, r4
 80116a6:	4651      	mov	r1, sl
 80116a8:	4632      	mov	r2, r6
 80116aa:	f7ee fd6d 	bl	8000188 <memcpy>
 80116ae:	f1b8 0f00 	cmp.w	r8, #0
 80116b2:	d0ea      	beq.n	801168a <_DrawBitmap+0x96>
 80116b4:	f8d8 0008 	ldr.w	r0, [r8, #8]
 80116b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80116ba:	6847      	ldr	r7, [r0, #4]
 80116bc:	9906      	ldr	r1, [sp, #24]
 80116be:	18ea      	adds	r2, r5, r3
 80116c0:	4640      	mov	r0, r8
 80116c2:	465b      	mov	r3, fp
 80116c4:	47b8      	blx	r7
 80116c6:	e7e0      	b.n	801168a <_DrawBitmap+0x96>
 80116c8:	f1b8 0f00 	cmp.w	r8, #0
 80116cc:	f040 832b 	bne.w	8011d26 <_DrawBitmap+0x732>
 80116d0:	e32c      	b.n	8011d2c <_DrawBitmap+0x738>
 80116d2:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80116d4:	2817      	cmp	r0, #23
 80116d6:	dd39      	ble.n	801174c <_DrawBitmap+0x158>
 80116d8:	2600      	movs	r6, #0
 80116da:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 80116dc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80116de:	42be      	cmp	r6, r7
 80116e0:	f280 80a1 	bge.w	8011826 <_DrawBitmap+0x232>
 80116e4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80116e6:	eb06 0907 	add.w	r9, r6, r7
 80116ea:	f1ba 0f00 	cmp.w	sl, #0
 80116ee:	d027      	beq.n	8011740 <_DrawBitmap+0x14c>
 80116f0:	b334      	cbz	r4, 8011740 <_DrawBitmap+0x14c>
 80116f2:	b135      	cbz	r5, 8011702 <_DrawBitmap+0x10e>
 80116f4:	68aa      	ldr	r2, [r5, #8]
 80116f6:	9906      	ldr	r1, [sp, #24]
 80116f8:	6857      	ldr	r7, [r2, #4]
 80116fa:	4628      	mov	r0, r5
 80116fc:	464a      	mov	r2, r9
 80116fe:	465b      	mov	r3, fp
 8011700:	47b8      	blx	r7
 8011702:	1ea3      	subs	r3, r4, #2
 8011704:	f10a 0804 	add.w	r8, sl, #4
 8011708:	9307      	str	r3, [sp, #28]
 801170a:	465f      	mov	r7, fp
 801170c:	9806      	ldr	r0, [sp, #24]
 801170e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8011710:	eb00 010b 	add.w	r1, r0, fp
 8011714:	6913      	ldr	r3, [r2, #16]
 8011716:	f858 0c04 	ldr.w	r0, [r8, #-4]
 801171a:	681a      	ldr	r2, [r3, #0]
 801171c:	1bc9      	subs	r1, r1, r7
 801171e:	9105      	str	r1, [sp, #20]
 8011720:	4790      	blx	r2
 8011722:	9907      	ldr	r1, [sp, #28]
 8011724:	f821 0f02 	strh.w	r0, [r1, #2]!
 8011728:	9107      	str	r1, [sp, #28]
 801172a:	9905      	ldr	r1, [sp, #20]
 801172c:	b125      	cbz	r5, 8011738 <_DrawBitmap+0x144>
 801172e:	68a8      	ldr	r0, [r5, #8]
 8011730:	464a      	mov	r2, r9
 8011732:	6803      	ldr	r3, [r0, #0]
 8011734:	4628      	mov	r0, r5
 8011736:	4798      	blx	r3
 8011738:	3f01      	subs	r7, #1
 801173a:	f108 0804 	add.w	r8, r8, #4
 801173e:	d1e5      	bne.n	801170c <_DrawBitmap+0x118>
 8011740:	9d20      	ldr	r5, [sp, #128]	; 0x80
 8011742:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8011744:	44aa      	add	sl, r5
 8011746:	18a4      	adds	r4, r4, r2
 8011748:	3601      	adds	r6, #1
 801174a:	e7c6      	b.n	80116da <_DrawBitmap+0xe6>
 801174c:	991f      	ldr	r1, [sp, #124]	; 0x7c
 801174e:	2908      	cmp	r1, #8
 8011750:	d172      	bne.n	8011838 <_DrawBitmap+0x244>
 8011752:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8011754:	3402      	adds	r4, #2
 8011756:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8011758:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801175a:	1b79      	subs	r1, r7, r5
 801175c:	1ea0      	subs	r0, r4, #2
 801175e:	4299      	cmp	r1, r3
 8011760:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011762:	da60      	bge.n	8011826 <_DrawBitmap+0x232>
 8011764:	4a32      	ldr	r2, [pc, #200]	; (8011830 <_DrawBitmap+0x23c>)
 8011766:	6811      	ldr	r1, [r2, #0]
 8011768:	7c0b      	ldrb	r3, [r1, #16]
 801176a:	b376      	cbz	r6, 80117ca <_DrawBitmap+0x1d6>
 801176c:	f013 0303 	ands.w	r3, r3, #3
 8011770:	d005      	beq.n	801177e <_DrawBitmap+0x18a>
 8011772:	2b02      	cmp	r3, #2
 8011774:	d151      	bne.n	801181a <_DrawBitmap+0x226>
 8011776:	46a1      	mov	r9, r4
 8011778:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801177c:	e01d      	b.n	80117ba <_DrawBitmap+0x1c6>
 801177e:	f81a 5003 	ldrb.w	r5, [sl, r3]
 8011782:	f856 2025 	ldr.w	r2, [r6, r5, lsl #2]
 8011786:	f820 2013 	strh.w	r2, [r0, r3, lsl #1]
 801178a:	3301      	adds	r3, #1
 801178c:	455b      	cmp	r3, fp
 801178e:	d1f6      	bne.n	801177e <_DrawBitmap+0x18a>
 8011790:	e043      	b.n	801181a <_DrawBitmap+0x226>
 8011792:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 8011796:	f829 1c02 	strh.w	r1, [r9, #-2]
 801179a:	b12d      	cbz	r5, 80117a8 <_DrawBitmap+0x1b4>
 801179c:	68aa      	ldr	r2, [r5, #8]
 801179e:	4628      	mov	r0, r5
 80117a0:	6813      	ldr	r3, [r2, #0]
 80117a2:	4641      	mov	r1, r8
 80117a4:	463a      	mov	r2, r7
 80117a6:	4798      	blx	r3
 80117a8:	9806      	ldr	r0, [sp, #24]
 80117aa:	f108 0801 	add.w	r8, r8, #1
 80117ae:	eb00 010b 	add.w	r1, r0, fp
 80117b2:	4541      	cmp	r1, r8
 80117b4:	f109 0902 	add.w	r9, r9, #2
 80117b8:	d02f      	beq.n	801181a <_DrawBitmap+0x226>
 80117ba:	9a06      	ldr	r2, [sp, #24]
 80117bc:	ebc2 030a 	rsb	r3, r2, sl
 80117c0:	f813 0008 	ldrb.w	r0, [r3, r8]
 80117c4:	2800      	cmp	r0, #0
 80117c6:	d0ef      	beq.n	80117a8 <_DrawBitmap+0x1b4>
 80117c8:	e7e3      	b.n	8011792 <_DrawBitmap+0x19e>
 80117ca:	f013 0203 	ands.w	r2, r3, #3
 80117ce:	d005      	beq.n	80117dc <_DrawBitmap+0x1e8>
 80117d0:	2a02      	cmp	r2, #2
 80117d2:	d122      	bne.n	801181a <_DrawBitmap+0x226>
 80117d4:	46a1      	mov	r9, r4
 80117d6:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80117da:	e016      	b.n	801180a <_DrawBitmap+0x216>
 80117dc:	4651      	mov	r1, sl
 80117de:	465a      	mov	r2, fp
 80117e0:	f7ee fcd2 	bl	8000188 <memcpy>
 80117e4:	e019      	b.n	801181a <_DrawBitmap+0x226>
 80117e6:	f829 3c02 	strh.w	r3, [r9, #-2]
 80117ea:	b12d      	cbz	r5, 80117f8 <_DrawBitmap+0x204>
 80117ec:	68aa      	ldr	r2, [r5, #8]
 80117ee:	4628      	mov	r0, r5
 80117f0:	6813      	ldr	r3, [r2, #0]
 80117f2:	4641      	mov	r1, r8
 80117f4:	463a      	mov	r2, r7
 80117f6:	4798      	blx	r3
 80117f8:	9806      	ldr	r0, [sp, #24]
 80117fa:	f108 0801 	add.w	r8, r8, #1
 80117fe:	eb00 010b 	add.w	r1, r0, fp
 8011802:	4541      	cmp	r1, r8
 8011804:	f109 0902 	add.w	r9, r9, #2
 8011808:	d007      	beq.n	801181a <_DrawBitmap+0x226>
 801180a:	9806      	ldr	r0, [sp, #24]
 801180c:	ebc0 010a 	rsb	r1, r0, sl
 8011810:	f811 3008 	ldrb.w	r3, [r1, r8]
 8011814:	2b00      	cmp	r3, #0
 8011816:	d0ef      	beq.n	80117f8 <_DrawBitmap+0x204>
 8011818:	e7e5      	b.n	80117e6 <_DrawBitmap+0x1f2>
 801181a:	9820      	ldr	r0, [sp, #128]	; 0x80
 801181c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801181e:	4482      	add	sl, r0
 8011820:	3701      	adds	r7, #1
 8011822:	1864      	adds	r4, r4, r1
 8011824:	e797      	b.n	8011756 <_DrawBitmap+0x162>
 8011826:	2d00      	cmp	r5, #0
 8011828:	f040 827d 	bne.w	8011d26 <_DrawBitmap+0x732>
 801182c:	e27e      	b.n	8011d2c <_DrawBitmap+0x738>
 801182e:	bf00      	nop
 8011830:	20000270 	.word	0x20000270
 8011834:	2000d9b8 	.word	0x2000d9b8
 8011838:	4a9c      	ldr	r2, [pc, #624]	; (8011aac <_DrawBitmap+0x4b8>)
 801183a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801183c:	990a      	ldr	r1, [sp, #40]	; 0x28
 801183e:	2e00      	cmp	r6, #0
 8011840:	bf08      	it	eq
 8011842:	4616      	moveq	r6, r2
 8011844:	9607      	str	r6, [sp, #28]
 8011846:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8011848:	9109      	str	r1, [sp, #36]	; 0x24
 801184a:	0077      	lsls	r7, r6, #1
 801184c:	0098      	lsls	r0, r3, #2
 801184e:	3402      	adds	r4, #2
 8011850:	970f      	str	r7, [sp, #60]	; 0x3c
 8011852:	9010      	str	r0, [sp, #64]	; 0x40
 8011854:	940c      	str	r4, [sp, #48]	; 0x30
 8011856:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8011858:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801185a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801185c:	1bf3      	subs	r3, r6, r7
 801185e:	9e1e      	ldr	r6, [sp, #120]	; 0x78
 8011860:	1e94      	subs	r4, r2, #2
 8011862:	42b3      	cmp	r3, r6
 8011864:	f280 825d 	bge.w	8011d22 <_DrawBitmap+0x72e>
 8011868:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 801186a:	2f02      	cmp	r7, #2
 801186c:	f000 80dc 	beq.w	8011a28 <_DrawBitmap+0x434>
 8011870:	2f04      	cmp	r7, #4
 8011872:	f000 8182 	beq.w	8011b7a <_DrawBitmap+0x586>
 8011876:	2f01      	cmp	r7, #1
 8011878:	f040 8249 	bne.w	8011d0e <_DrawBitmap+0x71a>
 801187c:	f8df 9234 	ldr.w	r9, [pc, #564]	; 8011ab4 <_DrawBitmap+0x4c0>
 8011880:	f8d9 5000 	ldr.w	r5, [r9]
 8011884:	6e28      	ldr	r0, [r5, #96]	; 0x60
 8011886:	f7fd f823 	bl	800e8d0 <GUI_ALLOC_LockH>
 801188a:	f89a 3000 	ldrb.w	r3, [sl]
 801188e:	4a88      	ldr	r2, [pc, #544]	; (8011ab0 <_DrawBitmap+0x4bc>)
 8011890:	9922      	ldr	r1, [sp, #136]	; 0x88
 8011892:	5cd5      	ldrb	r5, [r2, r3]
 8011894:	9012      	str	r0, [sp, #72]	; 0x48
 8011896:	f8d9 0000 	ldr.w	r0, [r9]
 801189a:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 801189c:	f1c1 0808 	rsb	r8, r1, #8
 80118a0:	fa45 f501 	asr.w	r5, r5, r1
 80118a4:	7c01      	ldrb	r1, [r0, #16]
 80118a6:	f001 0303 	and.w	r3, r1, #3
 80118aa:	2b02      	cmp	r3, #2
 80118ac:	465e      	mov	r6, fp
 80118ae:	d021      	beq.n	80118f4 <_DrawBitmap+0x300>
 80118b0:	2b03      	cmp	r3, #3
 80118b2:	d05f      	beq.n	8011974 <_DrawBitmap+0x380>
 80118b4:	2b01      	cmp	r3, #1
 80118b6:	d05d      	beq.n	8011974 <_DrawBitmap+0x380>
 80118b8:	4652      	mov	r2, sl
 80118ba:	4546      	cmp	r6, r8
 80118bc:	bf38      	it	cc
 80118be:	46b0      	movcc	r8, r6
 80118c0:	ebc8 0606 	rsb	r6, r8, r6
 80118c4:	4643      	mov	r3, r8
 80118c6:	4621      	mov	r1, r4
 80118c8:	f005 0001 	and.w	r0, r5, #1
 80118cc:	9f07      	ldr	r7, [sp, #28]
 80118ce:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
 80118d2:	086d      	lsrs	r5, r5, #1
 80118d4:	3b01      	subs	r3, #1
 80118d6:	f821 0b02 	strh.w	r0, [r1], #2
 80118da:	d1f5      	bne.n	80118c8 <_DrawBitmap+0x2d4>
 80118dc:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 80118e0:	2e00      	cmp	r6, #0
 80118e2:	f000 809d 	beq.w	8011a20 <_DrawBitmap+0x42c>
 80118e6:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 80118ea:	4971      	ldr	r1, [pc, #452]	; (8011ab0 <_DrawBitmap+0x4bc>)
 80118ec:	f04f 0808 	mov.w	r8, #8
 80118f0:	5d4d      	ldrb	r5, [r1, r5]
 80118f2:	e7e2      	b.n	80118ba <_DrawBitmap+0x2c6>
 80118f4:	9a07      	ldr	r2, [sp, #28]
 80118f6:	f8dd 9018 	ldr.w	r9, [sp, #24]
 80118fa:	f8b2 c004 	ldrh.w	ip, [r2, #4]
 80118fe:	f8cd a020 	str.w	sl, [sp, #32]
 8011902:	4546      	cmp	r6, r8
 8011904:	bf38      	it	cc
 8011906:	46b0      	movcc	r8, r6
 8011908:	ebc8 0606 	rsb	r6, r8, r6
 801190c:	b31f      	cbz	r7, 8011956 <_DrawBitmap+0x362>
 801190e:	b91d      	cbnz	r5, 8011918 <_DrawBitmap+0x324>
 8011910:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 8011914:	44c1      	add	r9, r8
 8011916:	e022      	b.n	801195e <_DrawBitmap+0x36a>
 8011918:	07e9      	lsls	r1, r5, #31
 801191a:	d50b      	bpl.n	8011934 <_DrawBitmap+0x340>
 801191c:	68bb      	ldr	r3, [r7, #8]
 801191e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8011920:	681b      	ldr	r3, [r3, #0]
 8011922:	f8cd c014 	str.w	ip, [sp, #20]
 8011926:	4638      	mov	r0, r7
 8011928:	4649      	mov	r1, r9
 801192a:	4798      	blx	r3
 801192c:	f8dd c014 	ldr.w	ip, [sp, #20]
 8011930:	f8a4 c000 	strh.w	ip, [r4]
 8011934:	3402      	adds	r4, #2
 8011936:	f1b8 0801 	subs.w	r8, r8, #1
 801193a:	f109 0901 	add.w	r9, r9, #1
 801193e:	d00e      	beq.n	801195e <_DrawBitmap+0x36a>
 8011940:	086d      	lsrs	r5, r5, #1
 8011942:	e7e4      	b.n	801190e <_DrawBitmap+0x31a>
 8011944:	07ea      	lsls	r2, r5, #31
 8011946:	bf48      	it	mi
 8011948:	f8a4 c000 	strhmi.w	ip, [r4]
 801194c:	3402      	adds	r4, #2
 801194e:	f1b8 0801 	subs.w	r8, r8, #1
 8011952:	d004      	beq.n	801195e <_DrawBitmap+0x36a>
 8011954:	086d      	lsrs	r5, r5, #1
 8011956:	2d00      	cmp	r5, #0
 8011958:	d1f4      	bne.n	8011944 <_DrawBitmap+0x350>
 801195a:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 801195e:	2e00      	cmp	r6, #0
 8011960:	d05e      	beq.n	8011a20 <_DrawBitmap+0x42c>
 8011962:	9d08      	ldr	r5, [sp, #32]
 8011964:	4952      	ldr	r1, [pc, #328]	; (8011ab0 <_DrawBitmap+0x4bc>)
 8011966:	f815 0f01 	ldrb.w	r0, [r5, #1]!
 801196a:	f04f 0808 	mov.w	r8, #8
 801196e:	9508      	str	r5, [sp, #32]
 8011970:	5c0d      	ldrb	r5, [r1, r0]
 8011972:	e7c6      	b.n	8011902 <_DrawBitmap+0x30e>
 8011974:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8011976:	6910      	ldr	r0, [r2, #16]
 8011978:	6883      	ldr	r3, [r0, #8]
 801197a:	4798      	blx	r3
 801197c:	f10a 0201 	add.w	r2, sl, #1
 8011980:	b281      	uxth	r1, r0
 8011982:	f8dd c018 	ldr.w	ip, [sp, #24]
 8011986:	910d      	str	r1, [sp, #52]	; 0x34
 8011988:	9208      	str	r2, [sp, #32]
 801198a:	4546      	cmp	r6, r8
 801198c:	bf38      	it	cc
 801198e:	46b0      	movcc	r8, r6
 8011990:	ebc8 0606 	rsb	r6, r8, r6
 8011994:	1ca3      	adds	r3, r4, #2
 8011996:	b34f      	cbz	r7, 80119ec <_DrawBitmap+0x3f8>
 8011998:	9303      	str	r3, [sp, #12]
 801199a:	46e1      	mov	r9, ip
 801199c:	07eb      	lsls	r3, r5, #31
 801199e:	d514      	bpl.n	80119ca <_DrawBitmap+0x3d6>
 80119a0:	68b9      	ldr	r1, [r7, #8]
 80119a2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80119a4:	680b      	ldr	r3, [r1, #0]
 80119a6:	f8cd c014 	str.w	ip, [sp, #20]
 80119aa:	9311      	str	r3, [sp, #68]	; 0x44
 80119ac:	4638      	mov	r0, r7
 80119ae:	4649      	mov	r1, r9
 80119b0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80119b2:	4798      	blx	r3
 80119b4:	9a03      	ldr	r2, [sp, #12]
 80119b6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80119b8:	f832 0c02 	ldrh.w	r0, [r2, #-2]
 80119bc:	9b03      	ldr	r3, [sp, #12]
 80119be:	f8dd c014 	ldr.w	ip, [sp, #20]
 80119c2:	ea81 0200 	eor.w	r2, r1, r0
 80119c6:	f823 2c02 	strh.w	r2, [r3, #-2]
 80119ca:	9803      	ldr	r0, [sp, #12]
 80119cc:	f109 0901 	add.w	r9, r9, #1
 80119d0:	eb0c 0208 	add.w	r2, ip, r8
 80119d4:	1c81      	adds	r1, r0, #2
 80119d6:	086d      	lsrs	r5, r5, #1
 80119d8:	454a      	cmp	r2, r9
 80119da:	9103      	str	r1, [sp, #12]
 80119dc:	d1de      	bne.n	801199c <_DrawBitmap+0x3a8>
 80119de:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 80119e2:	4694      	mov	ip, r2
 80119e4:	b1e6      	cbz	r6, 8011a20 <_DrawBitmap+0x42c>
 80119e6:	9d08      	ldr	r5, [sp, #32]
 80119e8:	7828      	ldrb	r0, [r5, #0]
 80119ea:	e011      	b.n	8011a10 <_DrawBitmap+0x41c>
 80119ec:	4642      	mov	r2, r8
 80119ee:	07e8      	lsls	r0, r5, #31
 80119f0:	d505      	bpl.n	80119fe <_DrawBitmap+0x40a>
 80119f2:	f833 1c02 	ldrh.w	r1, [r3, #-2]
 80119f6:	980d      	ldr	r0, [sp, #52]	; 0x34
 80119f8:	4041      	eors	r1, r0
 80119fa:	f823 1c02 	strh.w	r1, [r3, #-2]
 80119fe:	086d      	lsrs	r5, r5, #1
 8011a00:	3302      	adds	r3, #2
 8011a02:	3a01      	subs	r2, #1
 8011a04:	d1f3      	bne.n	80119ee <_DrawBitmap+0x3fa>
 8011a06:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 8011a0a:	b14e      	cbz	r6, 8011a20 <_DrawBitmap+0x42c>
 8011a0c:	9d08      	ldr	r5, [sp, #32]
 8011a0e:	7828      	ldrb	r0, [r5, #0]
 8011a10:	4b27      	ldr	r3, [pc, #156]	; (8011ab0 <_DrawBitmap+0x4bc>)
 8011a12:	5c1d      	ldrb	r5, [r3, r0]
 8011a14:	9808      	ldr	r0, [sp, #32]
 8011a16:	1c41      	adds	r1, r0, #1
 8011a18:	9108      	str	r1, [sp, #32]
 8011a1a:	f04f 0808 	mov.w	r8, #8
 8011a1e:	e7b4      	b.n	801198a <_DrawBitmap+0x396>
 8011a20:	a812      	add	r0, sp, #72	; 0x48
 8011a22:	f7fc ff63 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8011a26:	e172      	b.n	8011d0e <_DrawBitmap+0x71a>
 8011a28:	4922      	ldr	r1, [pc, #136]	; (8011ab4 <_DrawBitmap+0x4c0>)
 8011a2a:	9822      	ldr	r0, [sp, #136]	; 0x88
 8011a2c:	680b      	ldr	r3, [r1, #0]
 8011a2e:	f89a 6000 	ldrb.w	r6, [sl]
 8011a32:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8011a34:	f8dd c04c 	ldr.w	ip, [sp, #76]	; 0x4c
 8011a38:	f1c0 0204 	rsb	r2, r0, #4
 8011a3c:	7c18      	ldrb	r0, [r3, #16]
 8011a3e:	b2d5      	uxtb	r5, r2
 8011a40:	f000 0203 	and.w	r2, r0, #3
 8011a44:	fa06 f607 	lsl.w	r6, r6, r7
 8011a48:	2a01      	cmp	r2, #1
 8011a4a:	b2f6      	uxtb	r6, r6
 8011a4c:	d009      	beq.n	8011a62 <_DrawBitmap+0x46e>
 8011a4e:	d30b      	bcc.n	8011a68 <_DrawBitmap+0x474>
 8011a50:	2a02      	cmp	r2, #2
 8011a52:	f040 815c 	bne.w	8011d0e <_DrawBitmap+0x71a>
 8011a56:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 8011a5a:	465f      	mov	r7, fp
 8011a5c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8011a60:	e04b      	b.n	8011afa <_DrawBitmap+0x506>
 8011a62:	4651      	mov	r1, sl
 8011a64:	465b      	mov	r3, fp
 8011a66:	e081      	b.n	8011b6c <_DrawBitmap+0x578>
 8011a68:	4652      	mov	r2, sl
 8011a6a:	465b      	mov	r3, fp
 8011a6c:	429d      	cmp	r5, r3
 8011a6e:	bfc8      	it	gt
 8011a70:	b2dd      	uxtbgt	r5, r3
 8011a72:	1b5b      	subs	r3, r3, r5
 8011a74:	4629      	mov	r1, r5
 8011a76:	4620      	mov	r0, r4
 8011a78:	ea4f 1e96 	mov.w	lr, r6, lsr #6
 8011a7c:	9f07      	ldr	r7, [sp, #28]
 8011a7e:	3901      	subs	r1, #1
 8011a80:	f857 c02e 	ldr.w	ip, [r7, lr, lsl #2]
 8011a84:	00b6      	lsls	r6, r6, #2
 8011a86:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 8011a8a:	f820 cb02 	strh.w	ip, [r0], #2
 8011a8e:	b2f6      	uxtb	r6, r6
 8011a90:	d1f2      	bne.n	8011a78 <_DrawBitmap+0x484>
 8011a92:	3d01      	subs	r5, #1
 8011a94:	b2e8      	uxtb	r0, r5
 8011a96:	1c45      	adds	r5, r0, #1
 8011a98:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 8011a9c:	2b00      	cmp	r3, #0
 8011a9e:	f000 8136 	beq.w	8011d0e <_DrawBitmap+0x71a>
 8011aa2:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 8011aa6:	2504      	movs	r5, #4
 8011aa8:	e7e0      	b.n	8011a6c <_DrawBitmap+0x478>
 8011aaa:	bf00      	nop
 8011aac:	0802d32c 	.word	0x0802d32c
 8011ab0:	0802d044 	.word	0x0802d044
 8011ab4:	20000270 	.word	0x20000270
 8011ab8:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 8011abc:	d125      	bne.n	8011b0a <_DrawBitmap+0x516>
 8011abe:	9808      	ldr	r0, [sp, #32]
 8011ac0:	f109 0901 	add.w	r9, r9, #1
 8011ac4:	eb05 0108 	add.w	r1, r5, r8
 8011ac8:	1c82      	adds	r2, r0, #2
 8011aca:	fa5f f389 	uxtb.w	r3, r9
 8011ace:	b2c8      	uxtb	r0, r1
 8011ad0:	00b6      	lsls	r6, r6, #2
 8011ad2:	4298      	cmp	r0, r3
 8011ad4:	b2f6      	uxtb	r6, r6
 8011ad6:	9208      	str	r2, [sp, #32]
 8011ad8:	d1ee      	bne.n	8011ab8 <_DrawBitmap+0x4c4>
 8011ada:	3d01      	subs	r5, #1
 8011adc:	b2ed      	uxtb	r5, r5
 8011ade:	1c6e      	adds	r6, r5, #1
 8011ae0:	f108 0801 	add.w	r8, r8, #1
 8011ae4:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8011ae8:	44a8      	add	r8, r5
 8011aea:	2f00      	cmp	r7, #0
 8011aec:	f000 810f 	beq.w	8011d0e <_DrawBitmap+0x71a>
 8011af0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8011af2:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 8011af6:	2504      	movs	r5, #4
 8011af8:	920d      	str	r2, [sp, #52]	; 0x34
 8011afa:	42bd      	cmp	r5, r7
 8011afc:	bfc8      	it	gt
 8011afe:	b2fd      	uxtbgt	r5, r7
 8011b00:	1ca1      	adds	r1, r4, #2
 8011b02:	1b7f      	subs	r7, r7, r5
 8011b04:	9108      	str	r1, [sp, #32]
 8011b06:	46c1      	mov	r9, r8
 8011b08:	e7d6      	b.n	8011ab8 <_DrawBitmap+0x4c4>
 8011b0a:	09b3      	lsrs	r3, r6, #6
 8011b0c:	9807      	ldr	r0, [sp, #28]
 8011b0e:	9908      	ldr	r1, [sp, #32]
 8011b10:	f850 2023 	ldr.w	r2, [r0, r3, lsl #2]
 8011b14:	f821 2c02 	strh.w	r2, [r1, #-2]
 8011b18:	f1bc 0f00 	cmp.w	ip, #0
 8011b1c:	d0cf      	beq.n	8011abe <_DrawBitmap+0x4ca>
 8011b1e:	f8dc 3008 	ldr.w	r3, [ip, #8]
 8011b22:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8011b24:	681b      	ldr	r3, [r3, #0]
 8011b26:	f8cd c014 	str.w	ip, [sp, #20]
 8011b2a:	4660      	mov	r0, ip
 8011b2c:	4649      	mov	r1, r9
 8011b2e:	4798      	blx	r3
 8011b30:	f8dd c014 	ldr.w	ip, [sp, #20]
 8011b34:	e7c3      	b.n	8011abe <_DrawBitmap+0x4ca>
 8011b36:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 8011b3a:	d005      	beq.n	8011b48 <_DrawBitmap+0x554>
 8011b3c:	f832 7c02 	ldrh.w	r7, [r2, #-2]
 8011b40:	f087 07ff 	eor.w	r7, r7, #255	; 0xff
 8011b44:	f822 7c02 	strh.w	r7, [r2, #-2]
 8011b48:	3801      	subs	r0, #1
 8011b4a:	00b6      	lsls	r6, r6, #2
 8011b4c:	3202      	adds	r2, #2
 8011b4e:	f010 00ff 	ands.w	r0, r0, #255	; 0xff
 8011b52:	b2f6      	uxtb	r6, r6
 8011b54:	d1ef      	bne.n	8011b36 <_DrawBitmap+0x542>
 8011b56:	3d01      	subs	r5, #1
 8011b58:	b2ef      	uxtb	r7, r5
 8011b5a:	1c7d      	adds	r5, r7, #1
 8011b5c:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 8011b60:	2b00      	cmp	r3, #0
 8011b62:	f000 80d4 	beq.w	8011d0e <_DrawBitmap+0x71a>
 8011b66:	f811 6f01 	ldrb.w	r6, [r1, #1]!
 8011b6a:	2504      	movs	r5, #4
 8011b6c:	429d      	cmp	r5, r3
 8011b6e:	bfc8      	it	gt
 8011b70:	b2dd      	uxtbgt	r5, r3
 8011b72:	1b5b      	subs	r3, r3, r5
 8011b74:	1ca2      	adds	r2, r4, #2
 8011b76:	4628      	mov	r0, r5
 8011b78:	e7dd      	b.n	8011b36 <_DrawBitmap+0x542>
 8011b7a:	9f22      	ldr	r7, [sp, #136]	; 0x88
 8011b7c:	496d      	ldr	r1, [pc, #436]	; (8011d34 <_DrawBitmap+0x740>)
 8011b7e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8011b80:	f89a 0000 	ldrb.w	r0, [sl]
 8011b84:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8011b86:	f1c7 0202 	rsb	r2, r7, #2
 8011b8a:	680f      	ldr	r7, [r1, #0]
 8011b8c:	b2d3      	uxtb	r3, r2
 8011b8e:	7c3a      	ldrb	r2, [r7, #16]
 8011b90:	f002 0103 	and.w	r1, r2, #3
 8011b94:	fa00 f005 	lsl.w	r0, r0, r5
 8011b98:	2901      	cmp	r1, #1
 8011b9a:	b2c5      	uxtb	r5, r0
 8011b9c:	d004      	beq.n	8011ba8 <_DrawBitmap+0x5b4>
 8011b9e:	d306      	bcc.n	8011bae <_DrawBitmap+0x5ba>
 8011ba0:	2902      	cmp	r1, #2
 8011ba2:	f040 80b4 	bne.w	8011d0e <_DrawBitmap+0x71a>
 8011ba6:	e037      	b.n	8011c18 <_DrawBitmap+0x624>
 8011ba8:	4650      	mov	r0, sl
 8011baa:	465a      	mov	r2, fp
 8011bac:	e0a8      	b.n	8011d00 <_DrawBitmap+0x70c>
 8011bae:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8011bb0:	b166      	cbz	r6, 8011bcc <_DrawBitmap+0x5d8>
 8011bb2:	092d      	lsrs	r5, r5, #4
 8011bb4:	9907      	ldr	r1, [sp, #28]
 8011bb6:	f851 0025 	ldr.w	r0, [r1, r5, lsl #2]
 8011bba:	8020      	strh	r0, [r4, #0]
 8011bbc:	f10b 33ff 	add.w	r3, fp, #4294967295
 8011bc0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8011bc2:	f89a 5001 	ldrb.w	r5, [sl, #1]
 8011bc6:	f10a 0201 	add.w	r2, sl, #1
 8011bca:	e001      	b.n	8011bd0 <_DrawBitmap+0x5dc>
 8011bcc:	465b      	mov	r3, fp
 8011bce:	4652      	mov	r2, sl
 8011bd0:	2b01      	cmp	r3, #1
 8011bd2:	dd18      	ble.n	8011c06 <_DrawBitmap+0x612>
 8011bd4:	1058      	asrs	r0, r3, #1
 8011bd6:	1d21      	adds	r1, r4, #4
 8011bd8:	f003 0301 	and.w	r3, r3, #1
 8011bdc:	eb02 0e00 	add.w	lr, r2, r0
 8011be0:	092f      	lsrs	r7, r5, #4
 8011be2:	9e07      	ldr	r6, [sp, #28]
 8011be4:	f005 050f 	and.w	r5, r5, #15
 8011be8:	f856 7027 	ldr.w	r7, [r6, r7, lsl #2]
 8011bec:	f856 6025 	ldr.w	r6, [r6, r5, lsl #2]
 8011bf0:	f821 7c04 	strh.w	r7, [r1, #-4]
 8011bf4:	f821 6c02 	strh.w	r6, [r1, #-2]
 8011bf8:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 8011bfc:	3104      	adds	r1, #4
 8011bfe:	4572      	cmp	r2, lr
 8011c00:	d1ee      	bne.n	8011be0 <_DrawBitmap+0x5ec>
 8011c02:	eb04 0480 	add.w	r4, r4, r0, lsl #2
 8011c06:	2b00      	cmp	r3, #0
 8011c08:	f000 8081 	beq.w	8011d0e <_DrawBitmap+0x71a>
 8011c0c:	092d      	lsrs	r5, r5, #4
 8011c0e:	9a07      	ldr	r2, [sp, #28]
 8011c10:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 8011c14:	8020      	strh	r0, [r4, #0]
 8011c16:	e07a      	b.n	8011d0e <_DrawBitmap+0x71a>
 8011c18:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8011c1a:	b1c3      	cbz	r3, 8011c4e <_DrawBitmap+0x65a>
 8011c1c:	f010 0ff0 	tst.w	r0, #240	; 0xf0
 8011c20:	d00b      	beq.n	8011c3a <_DrawBitmap+0x646>
 8011c22:	0928      	lsrs	r0, r5, #4
 8011c24:	9d07      	ldr	r5, [sp, #28]
 8011c26:	f855 7020 	ldr.w	r7, [r5, r0, lsl #2]
 8011c2a:	8027      	strh	r7, [r4, #0]
 8011c2c:	b12e      	cbz	r6, 8011c3a <_DrawBitmap+0x646>
 8011c2e:	68b4      	ldr	r4, [r6, #8]
 8011c30:	9906      	ldr	r1, [sp, #24]
 8011c32:	6823      	ldr	r3, [r4, #0]
 8011c34:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8011c36:	4630      	mov	r0, r6
 8011c38:	4798      	blx	r3
 8011c3a:	9a06      	ldr	r2, [sp, #24]
 8011c3c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8011c3e:	f89a 5001 	ldrb.w	r5, [sl, #1]
 8011c42:	1c57      	adds	r7, r2, #1
 8011c44:	f10b 39ff 	add.w	r9, fp, #4294967295
 8011c48:	f10a 0801 	add.w	r8, sl, #1
 8011c4c:	e00f      	b.n	8011c6e <_DrawBitmap+0x67a>
 8011c4e:	46d9      	mov	r9, fp
 8011c50:	46d0      	mov	r8, sl
 8011c52:	9f06      	ldr	r7, [sp, #24]
 8011c54:	e00b      	b.n	8011c6e <_DrawBitmap+0x67a>
 8011c56:	f015 0ff0 	tst.w	r5, #240	; 0xf0
 8011c5a:	d10c      	bne.n	8011c76 <_DrawBitmap+0x682>
 8011c5c:	f015 050f 	ands.w	r5, r5, #15
 8011c60:	d117      	bne.n	8011c92 <_DrawBitmap+0x69e>
 8011c62:	f818 5f01 	ldrb.w	r5, [r8, #1]!
 8011c66:	3404      	adds	r4, #4
 8011c68:	3702      	adds	r7, #2
 8011c6a:	f1a9 0902 	sub.w	r9, r9, #2
 8011c6e:	f1b9 0f01 	cmp.w	r9, #1
 8011c72:	dcf0      	bgt.n	8011c56 <_DrawBitmap+0x662>
 8011c74:	e01a      	b.n	8011cac <_DrawBitmap+0x6b8>
 8011c76:	092a      	lsrs	r2, r5, #4
 8011c78:	9907      	ldr	r1, [sp, #28]
 8011c7a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8011c7e:	8020      	strh	r0, [r4, #0]
 8011c80:	2e00      	cmp	r6, #0
 8011c82:	d0eb      	beq.n	8011c5c <_DrawBitmap+0x668>
 8011c84:	68b3      	ldr	r3, [r6, #8]
 8011c86:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8011c88:	681b      	ldr	r3, [r3, #0]
 8011c8a:	4630      	mov	r0, r6
 8011c8c:	4639      	mov	r1, r7
 8011c8e:	4798      	blx	r3
 8011c90:	e7e4      	b.n	8011c5c <_DrawBitmap+0x668>
 8011c92:	9a07      	ldr	r2, [sp, #28]
 8011c94:	f852 1025 	ldr.w	r1, [r2, r5, lsl #2]
 8011c98:	8061      	strh	r1, [r4, #2]
 8011c9a:	2e00      	cmp	r6, #0
 8011c9c:	d0e1      	beq.n	8011c62 <_DrawBitmap+0x66e>
 8011c9e:	68b0      	ldr	r0, [r6, #8]
 8011ca0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8011ca2:	6803      	ldr	r3, [r0, #0]
 8011ca4:	1c79      	adds	r1, r7, #1
 8011ca6:	4630      	mov	r0, r6
 8011ca8:	4798      	blx	r3
 8011caa:	e7da      	b.n	8011c62 <_DrawBitmap+0x66e>
 8011cac:	f1b9 0f00 	cmp.w	r9, #0
 8011cb0:	d02d      	beq.n	8011d0e <_DrawBitmap+0x71a>
 8011cb2:	092d      	lsrs	r5, r5, #4
 8011cb4:	d02b      	beq.n	8011d0e <_DrawBitmap+0x71a>
 8011cb6:	9907      	ldr	r1, [sp, #28]
 8011cb8:	f851 0025 	ldr.w	r0, [r1, r5, lsl #2]
 8011cbc:	8020      	strh	r0, [r4, #0]
 8011cbe:	b336      	cbz	r6, 8011d0e <_DrawBitmap+0x71a>
 8011cc0:	68b4      	ldr	r4, [r6, #8]
 8011cc2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8011cc4:	6823      	ldr	r3, [r4, #0]
 8011cc6:	4630      	mov	r0, r6
 8011cc8:	4639      	mov	r1, r7
 8011cca:	4798      	blx	r3
 8011ccc:	e01f      	b.n	8011d0e <_DrawBitmap+0x71a>
 8011cce:	f015 0fc0 	tst.w	r5, #192	; 0xc0
 8011cd2:	d005      	beq.n	8011ce0 <_DrawBitmap+0x6ec>
 8011cd4:	f831 7c02 	ldrh.w	r7, [r1, #-2]
 8011cd8:	f087 07ff 	eor.w	r7, r7, #255	; 0xff
 8011cdc:	f821 7c02 	strh.w	r7, [r1, #-2]
 8011ce0:	3e01      	subs	r6, #1
 8011ce2:	012d      	lsls	r5, r5, #4
 8011ce4:	3102      	adds	r1, #2
 8011ce6:	f016 06ff 	ands.w	r6, r6, #255	; 0xff
 8011cea:	b2ed      	uxtb	r5, r5
 8011cec:	d1ef      	bne.n	8011cce <_DrawBitmap+0x6da>
 8011cee:	3b01      	subs	r3, #1
 8011cf0:	b2df      	uxtb	r7, r3
 8011cf2:	1c79      	adds	r1, r7, #1
 8011cf4:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8011cf8:	b14a      	cbz	r2, 8011d0e <_DrawBitmap+0x71a>
 8011cfa:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 8011cfe:	2302      	movs	r3, #2
 8011d00:	4293      	cmp	r3, r2
 8011d02:	bfc8      	it	gt
 8011d04:	b2d3      	uxtbgt	r3, r2
 8011d06:	1ad2      	subs	r2, r2, r3
 8011d08:	1ca1      	adds	r1, r4, #2
 8011d0a:	461e      	mov	r6, r3
 8011d0c:	e7df      	b.n	8011cce <_DrawBitmap+0x6da>
 8011d0e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8011d10:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8011d12:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8011d14:	9c20      	ldr	r4, [sp, #128]	; 0x80
 8011d16:	1c4b      	adds	r3, r1, #1
 8011d18:	1990      	adds	r0, r2, r6
 8011d1a:	44a2      	add	sl, r4
 8011d1c:	9309      	str	r3, [sp, #36]	; 0x24
 8011d1e:	900c      	str	r0, [sp, #48]	; 0x30
 8011d20:	e599      	b.n	8011856 <_DrawBitmap+0x262>
 8011d22:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011d24:	b110      	cbz	r0, 8011d2c <_DrawBitmap+0x738>
 8011d26:	a813      	add	r0, sp, #76	; 0x4c
 8011d28:	f7fc fde0 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8011d2c:	b015      	add	sp, #84	; 0x54
 8011d2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011d32:	bf00      	nop
 8011d34:	20000270 	.word	0x20000270

08011d38 <LCD_SelectLCD>:
 8011d38:	b510      	push	{r4, lr}
 8011d3a:	4b0d      	ldr	r3, [pc, #52]	; (8011d70 <LCD_SelectLCD+0x38>)
 8011d3c:	480d      	ldr	r0, [pc, #52]	; (8011d74 <LCD_SelectLCD+0x3c>)
 8011d3e:	681a      	ldr	r2, [r3, #0]
 8011d40:	7c51      	ldrb	r1, [r2, #17]
 8011d42:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
 8011d46:	461c      	mov	r4, r3
 8011d48:	b138      	cbz	r0, 8011d5a <LCD_SelectLCD+0x22>
 8011d4a:	68c3      	ldr	r3, [r0, #12]
 8011d4c:	681a      	ldr	r2, [r3, #0]
 8011d4e:	2a04      	cmp	r2, #4
 8011d50:	d001      	beq.n	8011d56 <LCD_SelectLCD+0x1e>
 8011d52:	6800      	ldr	r0, [r0, #0]
 8011d54:	e7f8      	b.n	8011d48 <LCD_SelectLCD+0x10>
 8011d56:	f7fc f8cf 	bl	800def8 <GUI_DEVICE_Unlink>
 8011d5a:	6821      	ldr	r1, [r4, #0]
 8011d5c:	2000      	movs	r0, #0
 8011d5e:	f101 0308 	add.w	r3, r1, #8
 8011d62:	6608      	str	r0, [r1, #96]	; 0x60
 8011d64:	614b      	str	r3, [r1, #20]
 8011d66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011d6a:	f7fa bb65 	b.w	800c438 <LCD_SetClipRectMax>
 8011d6e:	bf00      	nop
 8011d70:	20000270 	.word	0x20000270
 8011d74:	2000dde0 	.word	0x2000dde0

08011d78 <LCD_ReadRectEx>:
 8011d78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011d7c:	b087      	sub	sp, #28
 8011d7e:	4690      	mov	r8, r2
 8011d80:	9305      	str	r3, [sp, #20]
 8011d82:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8011d84:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8011d86:	68da      	ldr	r2, [r3, #12]
 8011d88:	6a55      	ldr	r5, [r2, #36]	; 0x24
 8011d8a:	f8d2 9014 	ldr.w	r9, [r2, #20]
 8011d8e:	4607      	mov	r7, r0
 8011d90:	460e      	mov	r6, r1
 8011d92:	b975      	cbnz	r5, 8011db2 <LCD_ReadRectEx+0x3a>
 8011d94:	486f      	ldr	r0, [pc, #444]	; (8011f54 <LCD_ReadRectEx+0x1dc>)
 8011d96:	6801      	ldr	r1, [r0, #0]
 8011d98:	7c48      	ldrb	r0, [r1, #17]
 8011d9a:	f7fa f81b 	bl	800bdd4 <GUI_GetBitsPerPixelEx>
 8011d9e:	2808      	cmp	r0, #8
 8011da0:	4683      	mov	fp, r0
 8011da2:	dd15      	ble.n	8011dd0 <LCD_ReadRectEx+0x58>
 8011da4:	2810      	cmp	r0, #16
 8011da6:	bfcc      	ite	gt
 8011da8:	f04f 0a04 	movgt.w	sl, #4
 8011dac:	f04f 0a02 	movle.w	sl, #2
 8011db0:	e010      	b.n	8011dd4 <LCD_ReadRectEx+0x5c>
 8011db2:	a811      	add	r0, sp, #68	; 0x44
 8011db4:	2101      	movs	r1, #1
 8011db6:	47a8      	blx	r5
 8011db8:	4605      	mov	r5, r0
 8011dba:	2800      	cmp	r0, #0
 8011dbc:	d0ea      	beq.n	8011d94 <LCD_ReadRectEx+0x1c>
 8011dbe:	9b05      	ldr	r3, [sp, #20]
 8011dc0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011dc2:	e88d 0018 	stmia.w	sp, {r3, r4}
 8011dc6:	4639      	mov	r1, r7
 8011dc8:	4632      	mov	r2, r6
 8011dca:	4643      	mov	r3, r8
 8011dcc:	47a8      	blx	r5
 8011dce:	e0be      	b.n	8011f4e <LCD_ReadRectEx+0x1d6>
 8011dd0:	f04f 0a01 	mov.w	sl, #1
 8011dd4:	2500      	movs	r5, #0
 8011dd6:	9b05      	ldr	r3, [sp, #20]
 8011dd8:	429e      	cmp	r6, r3
 8011dda:	f300 80b8 	bgt.w	8011f4e <LCD_ReadRectEx+0x1d6>
 8011dde:	f1ba 0f02 	cmp.w	sl, #2
 8011de2:	d00a      	beq.n	8011dfa <LCD_ReadRectEx+0x82>
 8011de4:	f1ba 0f04 	cmp.w	sl, #4
 8011de8:	d004      	beq.n	8011df4 <LCD_ReadRectEx+0x7c>
 8011dea:	f1ba 0f01 	cmp.w	sl, #1
 8011dee:	f040 80ac 	bne.w	8011f4a <LCD_ReadRectEx+0x1d2>
 8011df2:	e005      	b.n	8011e00 <LCD_ReadRectEx+0x88>
 8011df4:	46a4      	mov	ip, r4
 8011df6:	463b      	mov	r3, r7
 8011df8:	e094      	b.n	8011f24 <LCD_ReadRectEx+0x1ac>
 8011dfa:	46a4      	mov	ip, r4
 8011dfc:	463b      	mov	r3, r7
 8011dfe:	e07e      	b.n	8011efe <LCD_ReadRectEx+0x186>
 8011e00:	f10b 30ff 	add.w	r0, fp, #4294967295
 8011e04:	2807      	cmp	r0, #7
 8011e06:	f200 80a0 	bhi.w	8011f4a <LCD_ReadRectEx+0x1d2>
 8011e0a:	e8df f000 	tbb	[pc, r0]
 8011e0e:	080a      	.short	0x080a
 8011e10:	04040606 	.word	0x04040606
 8011e14:	0404      	.short	0x0404
 8011e16:	463b      	mov	r3, r7
 8011e18:	e059      	b.n	8011ece <LCD_ReadRectEx+0x156>
 8011e1a:	463b      	mov	r3, r7
 8011e1c:	e03e      	b.n	8011e9c <LCD_ReadRectEx+0x124>
 8011e1e:	463b      	mov	r3, r7
 8011e20:	e01e      	b.n	8011e60 <LCD_ReadRectEx+0xe8>
 8011e22:	463b      	mov	r3, r7
 8011e24:	4543      	cmp	r3, r8
 8011e26:	f300 8090 	bgt.w	8011f4a <LCD_ReadRectEx+0x1d2>
 8011e2a:	4619      	mov	r1, r3
 8011e2c:	4632      	mov	r2, r6
 8011e2e:	9303      	str	r3, [sp, #12]
 8011e30:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011e32:	47c8      	blx	r9
 8011e34:	f1c5 0207 	rsb	r2, r5, #7
 8011e38:	fa00 f302 	lsl.w	r3, r0, r2
 8011e3c:	f64f 717f 	movw	r1, #65407	; 0xff7f
 8011e40:	7820      	ldrb	r0, [r4, #0]
 8011e42:	fa41 f105 	asr.w	r1, r1, r5
 8011e46:	4001      	ands	r1, r0
 8011e48:	430b      	orrs	r3, r1
 8011e4a:	7023      	strb	r3, [r4, #0]
 8011e4c:	3501      	adds	r5, #1
 8011e4e:	9b03      	ldr	r3, [sp, #12]
 8011e50:	f025 0207 	bic.w	r2, r5, #7
 8011e54:	eb04 04e5 	add.w	r4, r4, r5, asr #3
 8011e58:	3301      	adds	r3, #1
 8011e5a:	fa45 f502 	asr.w	r5, r5, r2
 8011e5e:	e7e1      	b.n	8011e24 <LCD_ReadRectEx+0xac>
 8011e60:	4543      	cmp	r3, r8
 8011e62:	dc72      	bgt.n	8011f4a <LCD_ReadRectEx+0x1d2>
 8011e64:	4619      	mov	r1, r3
 8011e66:	4632      	mov	r2, r6
 8011e68:	9303      	str	r3, [sp, #12]
 8011e6a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011e6c:	47c8      	blx	r9
 8011e6e:	006a      	lsls	r2, r5, #1
 8011e70:	f1c2 0106 	rsb	r1, r2, #6
 8011e74:	fa00 f301 	lsl.w	r3, r0, r1
 8011e78:	7821      	ldrb	r1, [r4, #0]
 8011e7a:	f64f 703f 	movw	r0, #65343	; 0xff3f
 8011e7e:	fa40 f202 	asr.w	r2, r0, r2
 8011e82:	400a      	ands	r2, r1
 8011e84:	4313      	orrs	r3, r2
 8011e86:	7023      	strb	r3, [r4, #0]
 8011e88:	3501      	adds	r5, #1
 8011e8a:	9803      	ldr	r0, [sp, #12]
 8011e8c:	f025 0303 	bic.w	r3, r5, #3
 8011e90:	eb04 04a5 	add.w	r4, r4, r5, asr #2
 8011e94:	fa45 f503 	asr.w	r5, r5, r3
 8011e98:	1c43      	adds	r3, r0, #1
 8011e9a:	e7e1      	b.n	8011e60 <LCD_ReadRectEx+0xe8>
 8011e9c:	4543      	cmp	r3, r8
 8011e9e:	dc54      	bgt.n	8011f4a <LCD_ReadRectEx+0x1d2>
 8011ea0:	4619      	mov	r1, r3
 8011ea2:	4632      	mov	r2, r6
 8011ea4:	9303      	str	r3, [sp, #12]
 8011ea6:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011ea8:	47c8      	blx	r9
 8011eaa:	00aa      	lsls	r2, r5, #2
 8011eac:	f1c2 0104 	rsb	r1, r2, #4
 8011eb0:	fa00 f301 	lsl.w	r3, r0, r1
 8011eb4:	7821      	ldrb	r1, [r4, #0]
 8011eb6:	200f      	movs	r0, #15
 8011eb8:	fa00 f202 	lsl.w	r2, r0, r2
 8011ebc:	400a      	ands	r2, r1
 8011ebe:	4313      	orrs	r3, r2
 8011ec0:	7023      	strb	r3, [r4, #0]
 8011ec2:	9b03      	ldr	r3, [sp, #12]
 8011ec4:	1964      	adds	r4, r4, r5
 8011ec6:	3301      	adds	r3, #1
 8011ec8:	f085 0501 	eor.w	r5, r5, #1
 8011ecc:	e7e6      	b.n	8011e9c <LCD_ReadRectEx+0x124>
 8011ece:	1be2      	subs	r2, r4, r7
 8011ed0:	4543      	cmp	r3, r8
 8011ed2:	f1c7 0c00 	rsb	ip, r7, #0
 8011ed6:	eb02 0103 	add.w	r1, r2, r3
 8011eda:	dc0e      	bgt.n	8011efa <LCD_ReadRectEx+0x182>
 8011edc:	4619      	mov	r1, r3
 8011ede:	4632      	mov	r2, r6
 8011ee0:	9303      	str	r3, [sp, #12]
 8011ee2:	f8cd c010 	str.w	ip, [sp, #16]
 8011ee6:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011ee8:	47c8      	blx	r9
 8011eea:	f8dd c010 	ldr.w	ip, [sp, #16]
 8011eee:	9b03      	ldr	r3, [sp, #12]
 8011ef0:	eb04 020c 	add.w	r2, r4, ip
 8011ef4:	54d0      	strb	r0, [r2, r3]
 8011ef6:	3301      	adds	r3, #1
 8011ef8:	e7e9      	b.n	8011ece <LCD_ReadRectEx+0x156>
 8011efa:	460c      	mov	r4, r1
 8011efc:	e025      	b.n	8011f4a <LCD_ReadRectEx+0x1d2>
 8011efe:	4543      	cmp	r3, r8
 8011f00:	4664      	mov	r4, ip
 8011f02:	f10c 0e02 	add.w	lr, ip, #2
 8011f06:	dc20      	bgt.n	8011f4a <LCD_ReadRectEx+0x1d2>
 8011f08:	4619      	mov	r1, r3
 8011f0a:	9303      	str	r3, [sp, #12]
 8011f0c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011f0e:	f8cd e010 	str.w	lr, [sp, #16]
 8011f12:	4632      	mov	r2, r6
 8011f14:	47c8      	blx	r9
 8011f16:	f8dd c010 	ldr.w	ip, [sp, #16]
 8011f1a:	9903      	ldr	r1, [sp, #12]
 8011f1c:	f82c 0c02 	strh.w	r0, [ip, #-2]
 8011f20:	1c4b      	adds	r3, r1, #1
 8011f22:	e7ec      	b.n	8011efe <LCD_ReadRectEx+0x186>
 8011f24:	4543      	cmp	r3, r8
 8011f26:	4664      	mov	r4, ip
 8011f28:	f10c 0e04 	add.w	lr, ip, #4
 8011f2c:	dc0d      	bgt.n	8011f4a <LCD_ReadRectEx+0x1d2>
 8011f2e:	4619      	mov	r1, r3
 8011f30:	9303      	str	r3, [sp, #12]
 8011f32:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011f34:	f8cd e010 	str.w	lr, [sp, #16]
 8011f38:	4632      	mov	r2, r6
 8011f3a:	47c8      	blx	r9
 8011f3c:	f8dd c010 	ldr.w	ip, [sp, #16]
 8011f40:	9c03      	ldr	r4, [sp, #12]
 8011f42:	f84c 0c04 	str.w	r0, [ip, #-4]
 8011f46:	1c63      	adds	r3, r4, #1
 8011f48:	e7ec      	b.n	8011f24 <LCD_ReadRectEx+0x1ac>
 8011f4a:	3601      	adds	r6, #1
 8011f4c:	e743      	b.n	8011dd6 <LCD_ReadRectEx+0x5e>
 8011f4e:	b007      	add	sp, #28
 8011f50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011f54:	20000270 	.word	0x20000270

08011f58 <GUI_ReadRectEx>:
 8011f58:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011f5a:	4d16      	ldr	r5, [pc, #88]	; (8011fb4 <GUI_ReadRectEx+0x5c>)
 8011f5c:	9e05      	ldr	r6, [sp, #20]
 8011f5e:	682d      	ldr	r5, [r5, #0]
 8011f60:	9c06      	ldr	r4, [sp, #24]
 8011f62:	f9b5 7008 	ldrsh.w	r7, [r5, #8]
 8011f66:	42b8      	cmp	r0, r7
 8011f68:	bfb8      	it	lt
 8011f6a:	4638      	movlt	r0, r7
 8011f6c:	f9b5 700c 	ldrsh.w	r7, [r5, #12]
 8011f70:	42ba      	cmp	r2, r7
 8011f72:	bfa8      	it	ge
 8011f74:	463a      	movge	r2, r7
 8011f76:	4282      	cmp	r2, r0
 8011f78:	db1b      	blt.n	8011fb2 <GUI_ReadRectEx+0x5a>
 8011f7a:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 8011f7e:	f9b5 500e 	ldrsh.w	r5, [r5, #14]
 8011f82:	42b9      	cmp	r1, r7
 8011f84:	bfb8      	it	lt
 8011f86:	4639      	movlt	r1, r7
 8011f88:	42ab      	cmp	r3, r5
 8011f8a:	bfa8      	it	ge
 8011f8c:	462b      	movge	r3, r5
 8011f8e:	428b      	cmp	r3, r1
 8011f90:	da05      	bge.n	8011f9e <GUI_ReadRectEx+0x46>
 8011f92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011f94:	2d04      	cmp	r5, #4
 8011f96:	d006      	beq.n	8011fa6 <GUI_ReadRectEx+0x4e>
 8011f98:	6825      	ldr	r5, [r4, #0]
 8011f9a:	b125      	cbz	r5, 8011fa6 <GUI_ReadRectEx+0x4e>
 8011f9c:	462c      	mov	r4, r5
 8011f9e:	68e5      	ldr	r5, [r4, #12]
 8011fa0:	682d      	ldr	r5, [r5, #0]
 8011fa2:	2d00      	cmp	r5, #0
 8011fa4:	d1f6      	bne.n	8011f94 <GUI_ReadRectEx+0x3c>
 8011fa6:	9605      	str	r6, [sp, #20]
 8011fa8:	9406      	str	r4, [sp, #24]
 8011faa:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011fae:	f7ff bee3 	b.w	8011d78 <LCD_ReadRectEx>
 8011fb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011fb4:	20000270 	.word	0x20000270

08011fb8 <_OnExit>:
 8011fb8:	b510      	push	{r4, lr}
 8011fba:	4c03      	ldr	r4, [pc, #12]	; (8011fc8 <_OnExit+0x10>)
 8011fbc:	6820      	ldr	r0, [r4, #0]
 8011fbe:	f7fc fc73 	bl	800e8a8 <GUI_ALLOC_FreeFixedBlock>
 8011fc2:	2300      	movs	r3, #0
 8011fc4:	6023      	str	r3, [r4, #0]
 8011fc6:	bd10      	pop	{r4, pc}
 8011fc8:	2000dedc 	.word	0x2000dedc

08011fcc <LCD_InitColors>:
 8011fcc:	b538      	push	{r3, r4, r5, lr}
 8011fce:	4d09      	ldr	r5, [pc, #36]	; (8011ff4 <LCD_InitColors+0x28>)
 8011fd0:	682c      	ldr	r4, [r5, #0]
 8011fd2:	b95c      	cbnz	r4, 8011fec <LCD_InitColors+0x20>
 8011fd4:	4b08      	ldr	r3, [pc, #32]	; (8011ff8 <LCD_InitColors+0x2c>)
 8011fd6:	6818      	ldr	r0, [r3, #0]
 8011fd8:	0080      	lsls	r0, r0, #2
 8011fda:	f7fc fdff 	bl	800ebdc <GUI_ALLOC_GetFixedBlock>
 8011fde:	6028      	str	r0, [r5, #0]
 8011fe0:	b130      	cbz	r0, 8011ff0 <LCD_InitColors+0x24>
 8011fe2:	4806      	ldr	r0, [pc, #24]	; (8011ffc <LCD_InitColors+0x30>)
 8011fe4:	4906      	ldr	r1, [pc, #24]	; (8012000 <LCD_InitColors+0x34>)
 8011fe6:	6001      	str	r1, [r0, #0]
 8011fe8:	f7fc f870 	bl	800e0cc <GUI__RegisterExit>
 8011fec:	2000      	movs	r0, #0
 8011fee:	bd38      	pop	{r3, r4, r5, pc}
 8011ff0:	2001      	movs	r0, #1
 8011ff2:	bd38      	pop	{r3, r4, r5, pc}
 8011ff4:	2000dedc 	.word	0x2000dedc
 8011ff8:	200002a0 	.word	0x200002a0
 8011ffc:	2000d9bc 	.word	0x2000d9bc
 8012000:	08011fb9 	.word	0x08011fb9

08012004 <LCD_GetpPalConvTableUncached>:
 8012004:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012006:	b1e8      	cbz	r0, 8012044 <LCD_GetpPalConvTableUncached+0x40>
 8012008:	6885      	ldr	r5, [r0, #8]
 801200a:	b1d5      	cbz	r5, 8012042 <LCD_GetpPalConvTableUncached+0x3e>
 801200c:	4b0e      	ldr	r3, [pc, #56]	; (8012048 <LCD_GetpPalConvTableUncached+0x44>)
 801200e:	6819      	ldr	r1, [r3, #0]
 8012010:	b1b9      	cbz	r1, 8012042 <LCD_GetpPalConvTableUncached+0x3e>
 8012012:	6800      	ldr	r0, [r0, #0]
 8012014:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8012018:	dc13      	bgt.n	8012042 <LCD_GetpPalConvTableUncached+0x3e>
 801201a:	4a0c      	ldr	r2, [pc, #48]	; (801204c <LCD_GetpPalConvTableUncached+0x48>)
 801201c:	6817      	ldr	r7, [r2, #0]
 801201e:	2400      	movs	r4, #0
 8012020:	4287      	cmp	r7, r0
 8012022:	bfa8      	it	ge
 8012024:	4607      	movge	r7, r0
 8012026:	42bc      	cmp	r4, r7
 8012028:	4b07      	ldr	r3, [pc, #28]	; (8012048 <LCD_GetpPalConvTableUncached+0x44>)
 801202a:	da08      	bge.n	801203e <LCD_GetpPalConvTableUncached+0x3a>
 801202c:	f855 0024 	ldr.w	r0, [r5, r4, lsl #2]
 8012030:	681e      	ldr	r6, [r3, #0]
 8012032:	f7fa fa59 	bl	800c4e8 <LCD_Color2Index>
 8012036:	f846 0024 	str.w	r0, [r6, r4, lsl #2]
 801203a:	3401      	adds	r4, #1
 801203c:	e7f3      	b.n	8012026 <LCD_GetpPalConvTableUncached+0x22>
 801203e:	6818      	ldr	r0, [r3, #0]
 8012040:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012042:	2000      	movs	r0, #0
 8012044:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012046:	bf00      	nop
 8012048:	2000dedc 	.word	0x2000dedc
 801204c:	200002a0 	.word	0x200002a0

08012050 <LCD_GetpPalConvTableBM>:
 8012050:	f7ff bfd8 	b.w	8012004 <LCD_GetpPalConvTableUncached>

08012054 <LCD_InitLUT>:
 8012054:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012058:	f001 f922 	bl	80132a0 <LCD_GetNumLayers>
 801205c:	2400      	movs	r4, #0
 801205e:	4607      	mov	r7, r0
 8012060:	42bc      	cmp	r4, r7
 8012062:	da2b      	bge.n	80120bc <LCD_InitLUT+0x68>
 8012064:	4620      	mov	r0, r4
 8012066:	f7fb ff0f 	bl	800de88 <GUI_DEVICE__GetpDriver>
 801206a:	b328      	cbz	r0, 80120b8 <LCD_InitLUT+0x64>
 801206c:	4620      	mov	r0, r4
 801206e:	f7fb f891 	bl	800d194 <GUI_SelectLayer>
 8012072:	4680      	mov	r8, r0
 8012074:	4620      	mov	r0, r4
 8012076:	f7f9 fe8e 	bl	800bd96 <LCD_GetBitsPerPixelEx>
 801207a:	2808      	cmp	r0, #8
 801207c:	dd03      	ble.n	8012086 <LCD_InitLUT+0x32>
 801207e:	4640      	mov	r0, r8
 8012080:	f7fb f888 	bl	800d194 <GUI_SelectLayer>
 8012084:	e018      	b.n	80120b8 <LCD_InitLUT+0x64>
 8012086:	4b0e      	ldr	r3, [pc, #56]	; (80120c0 <LCD_InitLUT+0x6c>)
 8012088:	490e      	ldr	r1, [pc, #56]	; (80120c4 <LCD_InitLUT+0x70>)
 801208a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 801208e:	6902      	ldr	r2, [r0, #16]
 8012090:	428a      	cmp	r2, r1
 8012092:	d0f4      	beq.n	801207e <LCD_InitLUT+0x2a>
 8012094:	4620      	mov	r0, r4
 8012096:	f7f9 fe81 	bl	800bd9c <LCD_GetNumColorsEx>
 801209a:	2500      	movs	r5, #0
 801209c:	4681      	mov	r9, r0
 801209e:	454d      	cmp	r5, r9
 80120a0:	daed      	bge.n	801207e <LCD_InitLUT+0x2a>
 80120a2:	b2ee      	uxtb	r6, r5
 80120a4:	4630      	mov	r0, r6
 80120a6:	f7fa fa2f 	bl	800c508 <LCD_Index2Color>
 80120aa:	4631      	mov	r1, r6
 80120ac:	4602      	mov	r2, r0
 80120ae:	4620      	mov	r0, r4
 80120b0:	f7f9 fe17 	bl	800bce2 <LCD_SetLUTEntryEx>
 80120b4:	3501      	adds	r5, #1
 80120b6:	e7f2      	b.n	801209e <LCD_InitLUT+0x4a>
 80120b8:	3401      	adds	r4, #1
 80120ba:	e7d1      	b.n	8012060 <LCD_InitLUT+0xc>
 80120bc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80120c0:	2000dde0 	.word	0x2000dde0
 80120c4:	0802e438 	.word	0x0802e438

080120c8 <LCD_AA_SetAndMask>:
 80120c8:	4b02      	ldr	r3, [pc, #8]	; (80120d4 <LCD_AA_SetAndMask+0xc>)
 80120ca:	681a      	ldr	r2, [r3, #0]
 80120cc:	6018      	str	r0, [r3, #0]
 80120ce:	4610      	mov	r0, r2
 80120d0:	4770      	bx	lr
 80120d2:	bf00      	nop
 80120d4:	200002a4 	.word	0x200002a4

080120d8 <GUI__strcmp>:
 80120d8:	b510      	push	{r4, lr}
 80120da:	4b09      	ldr	r3, [pc, #36]	; (8012100 <GUI__strcmp+0x28>)
 80120dc:	2800      	cmp	r0, #0
 80120de:	bf08      	it	eq
 80120e0:	4618      	moveq	r0, r3
 80120e2:	2900      	cmp	r1, #0
 80120e4:	bf08      	it	eq
 80120e6:	4619      	moveq	r1, r3
 80120e8:	2300      	movs	r3, #0
 80120ea:	5cc4      	ldrb	r4, [r0, r3]
 80120ec:	5cca      	ldrb	r2, [r1, r3]
 80120ee:	42a2      	cmp	r2, r4
 80120f0:	d104      	bne.n	80120fc <GUI__strcmp+0x24>
 80120f2:	3301      	adds	r3, #1
 80120f4:	2a00      	cmp	r2, #0
 80120f6:	d1f8      	bne.n	80120ea <GUI__strcmp+0x12>
 80120f8:	4610      	mov	r0, r2
 80120fa:	bd10      	pop	{r4, pc}
 80120fc:	2001      	movs	r0, #1
 80120fe:	bd10      	pop	{r4, pc}
 8012100:	08019610 	.word	0x08019610

08012104 <GUI__strcmp_hp>:
 8012104:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012106:	460d      	mov	r5, r1
 8012108:	b160      	cbz	r0, 8012124 <GUI__strcmp_hp+0x20>
 801210a:	f7fc fbe1 	bl	800e8d0 <GUI_ALLOC_LockH>
 801210e:	ac02      	add	r4, sp, #8
 8012110:	4629      	mov	r1, r5
 8012112:	f844 0d04 	str.w	r0, [r4, #-4]!
 8012116:	f7ff ffdf 	bl	80120d8 <GUI__strcmp>
 801211a:	4605      	mov	r5, r0
 801211c:	4620      	mov	r0, r4
 801211e:	f7fc fbe5 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8012122:	e000      	b.n	8012126 <GUI__strcmp_hp+0x22>
 8012124:	2501      	movs	r5, #1
 8012126:	4628      	mov	r0, r5
 8012128:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0801212a <GUI__sqrt32>:
 801212a:	b510      	push	{r4, lr}
 801212c:	2110      	movs	r1, #16
 801212e:	2300      	movs	r3, #0
 8012130:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8012134:	189c      	adds	r4, r3, r2
 8012136:	4284      	cmp	r4, r0
 8012138:	bf9c      	itt	ls
 801213a:	18a3      	addls	r3, r4, r2
 801213c:	ebc4 0000 	rsbls	r0, r4, r0
 8012140:	085b      	lsrs	r3, r3, #1
 8012142:	0892      	lsrs	r2, r2, #2
 8012144:	3901      	subs	r1, #1
 8012146:	d1f5      	bne.n	8012134 <GUI__sqrt32+0xa>
 8012148:	4618      	mov	r0, r3
 801214a:	bd10      	pop	{r4, pc}

0801214c <_GetCharWrap>:
 801214c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801214e:	2400      	movs	r4, #0
 8012150:	9001      	str	r0, [sp, #4]
 8012152:	460e      	mov	r6, r1
 8012154:	4625      	mov	r5, r4
 8012156:	a801      	add	r0, sp, #4
 8012158:	f000 fc50 	bl	80129fc <GUI_UC__GetCharCodeInc>
 801215c:	4607      	mov	r7, r0
 801215e:	b148      	cbz	r0, 8012174 <_GetCharWrap+0x28>
 8012160:	f7fc fab4 	bl	800e6cc <GUI_GetCharDistX>
 8012164:	182d      	adds	r5, r5, r0
 8012166:	b10c      	cbz	r4, 801216c <_GetCharWrap+0x20>
 8012168:	42b5      	cmp	r5, r6
 801216a:	dc03      	bgt.n	8012174 <_GetCharWrap+0x28>
 801216c:	2f0a      	cmp	r7, #10
 801216e:	d001      	beq.n	8012174 <_GetCharWrap+0x28>
 8012170:	3401      	adds	r4, #1
 8012172:	e7f0      	b.n	8012156 <_GetCharWrap+0xa>
 8012174:	4620      	mov	r0, r4
 8012176:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

08012178 <_GetWordWrap>:
 8012178:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 801217c:	2400      	movs	r4, #0
 801217e:	9001      	str	r0, [sp, #4]
 8012180:	468a      	mov	sl, r1
 8012182:	4691      	mov	r9, r2
 8012184:	46a0      	mov	r8, r4
 8012186:	4626      	mov	r6, r4
 8012188:	4625      	mov	r5, r4
 801218a:	4627      	mov	r7, r4
 801218c:	a801      	add	r0, sp, #4
 801218e:	f000 fc35 	bl	80129fc <GUI_UC__GetCharCodeInc>
 8012192:	2c00      	cmp	r4, #0
 8012194:	bf08      	it	eq
 8012196:	4604      	moveq	r4, r0
 8012198:	b108      	cbz	r0, 801219e <_GetWordWrap+0x26>
 801219a:	280a      	cmp	r0, #10
 801219c:	d10c      	bne.n	80121b8 <_GetWordWrap+0x40>
 801219e:	462e      	mov	r6, r5
 80121a0:	2e00      	cmp	r6, #0
 80121a2:	bf14      	ite	ne
 80121a4:	4630      	movne	r0, r6
 80121a6:	4628      	moveq	r0, r5
 80121a8:	f1b9 0f00 	cmp.w	r9, #0
 80121ac:	d016      	beq.n	80121dc <_GetWordWrap+0x64>
 80121ae:	ebc8 0707 	rsb	r7, r8, r7
 80121b2:	f8c9 7000 	str.w	r7, [r9]
 80121b6:	e011      	b.n	80121dc <_GetWordWrap+0x64>
 80121b8:	2820      	cmp	r0, #32
 80121ba:	d00d      	beq.n	80121d8 <_GetWordWrap+0x60>
 80121bc:	2c20      	cmp	r4, #32
 80121be:	bf04      	itt	eq
 80121c0:	462e      	moveq	r6, r5
 80121c2:	2400      	moveq	r4, #0
 80121c4:	f7fc fa82 	bl	800e6cc <GUI_GetCharDistX>
 80121c8:	183f      	adds	r7, r7, r0
 80121ca:	4557      	cmp	r7, sl
 80121cc:	4680      	mov	r8, r0
 80121ce:	dd01      	ble.n	80121d4 <_GetWordWrap+0x5c>
 80121d0:	2d00      	cmp	r5, #0
 80121d2:	d1e5      	bne.n	80121a0 <_GetWordWrap+0x28>
 80121d4:	3501      	adds	r5, #1
 80121d6:	e7d9      	b.n	801218c <_GetWordWrap+0x14>
 80121d8:	462e      	mov	r6, r5
 80121da:	e7f3      	b.n	80121c4 <_GetWordWrap+0x4c>
 80121dc:	e8bd 87fc 	ldmia.w	sp!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}

080121e0 <_WrapGetNumCharsDisp>:
 80121e0:	2a01      	cmp	r2, #1
 80121e2:	b510      	push	{r4, lr}
 80121e4:	d005      	beq.n	80121f2 <_WrapGetNumCharsDisp+0x12>
 80121e6:	2a02      	cmp	r2, #2
 80121e8:	d108      	bne.n	80121fc <_WrapGetNumCharsDisp+0x1c>
 80121ea:	4b07      	ldr	r3, [pc, #28]	; (8012208 <_WrapGetNumCharsDisp+0x28>)
 80121ec:	681a      	ldr	r2, [r3, #0]
 80121ee:	4790      	blx	r2
 80121f0:	bd10      	pop	{r4, pc}
 80121f2:	4c06      	ldr	r4, [pc, #24]	; (801220c <_WrapGetNumCharsDisp+0x2c>)
 80121f4:	461a      	mov	r2, r3
 80121f6:	6824      	ldr	r4, [r4, #0]
 80121f8:	47a0      	blx	r4
 80121fa:	bd10      	pop	{r4, pc}
 80121fc:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8012200:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012204:	f7fc b996 	b.w	800e534 <GUI__GetLineNumChars>
 8012208:	200002a8 	.word	0x200002a8
 801220c:	200002ac 	.word	0x200002ac

08012210 <GUI__WrapGetNumCharsDisp>:
 8012210:	2300      	movs	r3, #0
 8012212:	f7ff bfe5 	b.w	80121e0 <_WrapGetNumCharsDisp>

08012216 <GUI__WrapGetNumCharsToNextLine>:
 8012216:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012218:	b085      	sub	sp, #20
 801221a:	ab03      	add	r3, sp, #12
 801221c:	4617      	mov	r7, r2
 801221e:	460e      	mov	r6, r1
 8012220:	9001      	str	r0, [sp, #4]
 8012222:	f7ff ffdd 	bl	80121e0 <_WrapGetNumCharsDisp>
 8012226:	9d01      	ldr	r5, [sp, #4]
 8012228:	4604      	mov	r4, r0
 801222a:	4621      	mov	r1, r4
 801222c:	4628      	mov	r0, r5
 801222e:	f000 fbf9 	bl	8012a24 <GUI_UC__NumChars2NumBytes>
 8012232:	182d      	adds	r5, r5, r0
 8012234:	a804      	add	r0, sp, #16
 8012236:	f840 5d0c 	str.w	r5, [r0, #-12]!
 801223a:	f000 fbdf 	bl	80129fc <GUI_UC__GetCharCodeInc>
 801223e:	280a      	cmp	r0, #10
 8012240:	d101      	bne.n	8012246 <GUI__WrapGetNumCharsToNextLine+0x30>
 8012242:	3401      	adds	r4, #1
 8012244:	e011      	b.n	801226a <GUI__WrapGetNumCharsToNextLine+0x54>
 8012246:	2f01      	cmp	r7, #1
 8012248:	d10f      	bne.n	801226a <GUI__WrapGetNumCharsToNextLine+0x54>
 801224a:	2820      	cmp	r0, #32
 801224c:	d10d      	bne.n	801226a <GUI__WrapGetNumCharsToNextLine+0x54>
 801224e:	f7fc fa3d 	bl	800e6cc <GUI_GetCharDistX>
 8012252:	4605      	mov	r5, r0
 8012254:	9803      	ldr	r0, [sp, #12]
 8012256:	4286      	cmp	r6, r0
 8012258:	db07      	blt.n	801226a <GUI__WrapGetNumCharsToNextLine+0x54>
 801225a:	1941      	adds	r1, r0, r5
 801225c:	a801      	add	r0, sp, #4
 801225e:	9103      	str	r1, [sp, #12]
 8012260:	f000 fbcc 	bl	80129fc <GUI_UC__GetCharCodeInc>
 8012264:	3401      	adds	r4, #1
 8012266:	2820      	cmp	r0, #32
 8012268:	d0f4      	beq.n	8012254 <GUI__WrapGetNumCharsToNextLine+0x3e>
 801226a:	4620      	mov	r0, r4
 801226c:	b005      	add	sp, #20
 801226e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012270 <GUI__WrapGetNumBytesToNextLine>:
 8012270:	b510      	push	{r4, lr}
 8012272:	4604      	mov	r4, r0
 8012274:	f7ff ffcf 	bl	8012216 <GUI__WrapGetNumCharsToNextLine>
 8012278:	4601      	mov	r1, r0
 801227a:	4620      	mov	r0, r4
 801227c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012280:	f000 bbd0 	b.w	8012a24 <GUI_UC__NumChars2NumBytes>

08012284 <GUI__HandleEOLine>:
 8012284:	6803      	ldr	r3, [r0, #0]
 8012286:	781a      	ldrb	r2, [r3, #0]
 8012288:	b122      	cbz	r2, 8012294 <GUI__HandleEOLine+0x10>
 801228a:	2a0a      	cmp	r2, #10
 801228c:	d104      	bne.n	8012298 <GUI__HandleEOLine+0x14>
 801228e:	1c59      	adds	r1, r3, #1
 8012290:	6001      	str	r1, [r0, #0]
 8012292:	e001      	b.n	8012298 <GUI__HandleEOLine+0x14>
 8012294:	2001      	movs	r0, #1
 8012296:	4770      	bx	lr
 8012298:	2000      	movs	r0, #0
 801229a:	4770      	bx	lr

0801229c <GUI__GetNumChars>:
 801229c:	b513      	push	{r0, r1, r4, lr}
 801229e:	4604      	mov	r4, r0
 80122a0:	9001      	str	r0, [sp, #4]
 80122a2:	b130      	cbz	r0, 80122b2 <GUI__GetNumChars+0x16>
 80122a4:	2400      	movs	r4, #0
 80122a6:	a801      	add	r0, sp, #4
 80122a8:	f000 fba8 	bl	80129fc <GUI_UC__GetCharCodeInc>
 80122ac:	b108      	cbz	r0, 80122b2 <GUI__GetNumChars+0x16>
 80122ae:	3401      	adds	r4, #1
 80122b0:	e7f9      	b.n	80122a6 <GUI__GetNumChars+0xa>
 80122b2:	4620      	mov	r0, r4
 80122b4:	bd1c      	pop	{r2, r3, r4, pc}
	...

080122b8 <GUI__GetFontSizeY>:
 80122b8:	4b03      	ldr	r3, [pc, #12]	; (80122c8 <GUI__GetFontSizeY+0x10>)
 80122ba:	6818      	ldr	r0, [r3, #0]
 80122bc:	69c1      	ldr	r1, [r0, #28]
 80122be:	7e08      	ldrb	r0, [r1, #24]
 80122c0:	7eca      	ldrb	r2, [r1, #27]
 80122c2:	4350      	muls	r0, r2
 80122c4:	4770      	bx	lr
 80122c6:	bf00      	nop
 80122c8:	20000270 	.word	0x20000270

080122cc <GUI__ExpandPixelIndicesEx>:
 80122cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80122d0:	1e0c      	subs	r4, r1, #0
 80122d2:	4605      	mov	r5, r0
 80122d4:	f340 80b0 	ble.w	8012438 <GUI__ExpandPixelIndicesEx+0x16c>
 80122d8:	2a08      	cmp	r2, #8
 80122da:	685f      	ldr	r7, [r3, #4]
 80122dc:	dd04      	ble.n	80122e8 <GUI__ExpandPixelIndicesEx+0x1c>
 80122de:	2a10      	cmp	r2, #16
 80122e0:	f340 8095 	ble.w	801240e <GUI__ExpandPixelIndicesEx+0x142>
 80122e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80122e8:	3a01      	subs	r2, #1
 80122ea:	2a07      	cmp	r2, #7
 80122ec:	f200 80a4 	bhi.w	8012438 <GUI__ExpandPixelIndicesEx+0x16c>
 80122f0:	e8df f002 	tbb	[pc, r2]
 80122f4:	53a22a04 	.word	0x53a22a04
 80122f8:	7ca2a2a2 	.word	0x7ca2a2a2
 80122fc:	1e66      	subs	r6, r4, #1
 80122fe:	10f1      	asrs	r1, r6, #3
 8012300:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8012304:	2280      	movs	r2, #128	; 0x80
 8012306:	f006 0607 	and.w	r6, r6, #7
 801230a:	eb05 0e01 	add.w	lr, r5, r1
 801230e:	fa42 f206 	asr.w	r2, r2, r6
 8012312:	f815 9001 	ldrb.w	r9, [r5, r1]
 8012316:	f10e 3aff 	add.w	sl, lr, #4294967295
 801231a:	b2d5      	uxtb	r5, r2
 801231c:	f1c6 0307 	rsb	r3, r6, #7
 8012320:	ea09 0005 	and.w	r0, r9, r5
 8012324:	fa40 f003 	asr.w	r0, r0, r3
 8012328:	47b8      	blx	r7
 801232a:	f848 0904 	str.w	r0, [r8], #-4
 801232e:	b926      	cbnz	r6, 801233a <GUI__ExpandPixelIndicesEx+0x6e>
 8012330:	f81a 9901 	ldrb.w	r9, [sl], #-1
 8012334:	2501      	movs	r5, #1
 8012336:	2607      	movs	r6, #7
 8012338:	e002      	b.n	8012340 <GUI__ExpandPixelIndicesEx+0x74>
 801233a:	0068      	lsls	r0, r5, #1
 801233c:	3e01      	subs	r6, #1
 801233e:	b2c5      	uxtb	r5, r0
 8012340:	3c01      	subs	r4, #1
 8012342:	d1eb      	bne.n	801231c <GUI__ExpandPixelIndicesEx+0x50>
 8012344:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012348:	1e62      	subs	r2, r4, #1
 801234a:	1093      	asrs	r3, r2, #2
 801234c:	f002 0603 	and.w	r6, r2, #3
 8012350:	eb05 0c03 	add.w	ip, r5, r3
 8012354:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8012358:	f815 9003 	ldrb.w	r9, [r5, r3]
 801235c:	0070      	lsls	r0, r6, #1
 801235e:	25c0      	movs	r5, #192	; 0xc0
 8012360:	fa45 f500 	asr.w	r5, r5, r0
 8012364:	f10c 3aff 	add.w	sl, ip, #4294967295
 8012368:	b2ed      	uxtb	r5, r5
 801236a:	0072      	lsls	r2, r6, #1
 801236c:	ea09 0105 	and.w	r1, r9, r5
 8012370:	f1c2 0306 	rsb	r3, r2, #6
 8012374:	fa41 f003 	asr.w	r0, r1, r3
 8012378:	b2c0      	uxtb	r0, r0
 801237a:	47b8      	blx	r7
 801237c:	f848 0904 	str.w	r0, [r8], #-4
 8012380:	b926      	cbnz	r6, 801238c <GUI__ExpandPixelIndicesEx+0xc0>
 8012382:	2503      	movs	r5, #3
 8012384:	f81a 9901 	ldrb.w	r9, [sl], #-1
 8012388:	462e      	mov	r6, r5
 801238a:	e002      	b.n	8012392 <GUI__ExpandPixelIndicesEx+0xc6>
 801238c:	00ad      	lsls	r5, r5, #2
 801238e:	3e01      	subs	r6, #1
 8012390:	b2ed      	uxtb	r5, r5
 8012392:	3c01      	subs	r4, #1
 8012394:	d1e9      	bne.n	801236a <GUI__ExpandPixelIndicesEx+0x9e>
 8012396:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801239a:	1e66      	subs	r6, r4, #1
 801239c:	1071      	asrs	r1, r6, #1
 801239e:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80123a2:	f006 0601 	and.w	r6, r6, #1
 80123a6:	eb05 0a01 	add.w	sl, r5, r1
 80123aa:	f815 9001 	ldrb.w	r9, [r5, r1]
 80123ae:	00b5      	lsls	r5, r6, #2
 80123b0:	f10a 3aff 	add.w	sl, sl, #4294967295
 80123b4:	2d00      	cmp	r5, #0
 80123b6:	bf14      	ite	ne
 80123b8:	250f      	movne	r5, #15
 80123ba:	25f0      	moveq	r5, #240	; 0xf0
 80123bc:	00b3      	lsls	r3, r6, #2
 80123be:	f1c3 0004 	rsb	r0, r3, #4
 80123c2:	ea09 0205 	and.w	r2, r9, r5
 80123c6:	fa42 f100 	asr.w	r1, r2, r0
 80123ca:	b2c8      	uxtb	r0, r1
 80123cc:	47b8      	blx	r7
 80123ce:	f848 0904 	str.w	r0, [r8], #-4
 80123d2:	b926      	cbnz	r6, 80123de <GUI__ExpandPixelIndicesEx+0x112>
 80123d4:	f81a 9901 	ldrb.w	r9, [sl], #-1
 80123d8:	250f      	movs	r5, #15
 80123da:	2601      	movs	r6, #1
 80123dc:	e002      	b.n	80123e4 <GUI__ExpandPixelIndicesEx+0x118>
 80123de:	012e      	lsls	r6, r5, #4
 80123e0:	b2f5      	uxtb	r5, r6
 80123e2:	2600      	movs	r6, #0
 80123e4:	3c01      	subs	r4, #1
 80123e6:	d1e9      	bne.n	80123bc <GUI__ExpandPixelIndicesEx+0xf0>
 80123e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80123ec:	eb05 0804 	add.w	r8, r5, r4
 80123f0:	4646      	mov	r6, r8
 80123f2:	eb05 0584 	add.w	r5, r5, r4, lsl #2
 80123f6:	f816 0d01 	ldrb.w	r0, [r6, #-1]!
 80123fa:	47b8      	blx	r7
 80123fc:	ebc8 0304 	rsb	r3, r8, r4
 8012400:	f845 0d04 	str.w	r0, [r5, #-4]!
 8012404:	1998      	adds	r0, r3, r6
 8012406:	2800      	cmp	r0, #0
 8012408:	d1f5      	bne.n	80123f6 <GUI__ExpandPixelIndicesEx+0x12a>
 801240a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801240e:	695e      	ldr	r6, [r3, #20]
 8012410:	b12e      	cbz	r6, 801241e <GUI__ExpandPixelIndicesEx+0x152>
 8012412:	4629      	mov	r1, r5
 8012414:	4622      	mov	r2, r4
 8012416:	2302      	movs	r3, #2
 8012418:	47b0      	blx	r6
 801241a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801241e:	eb05 0644 	add.w	r6, r5, r4, lsl #1
 8012422:	eb05 0584 	add.w	r5, r5, r4, lsl #2
 8012426:	f836 0d02 	ldrh.w	r0, [r6, #-2]!
 801242a:	47b8      	blx	r7
 801242c:	3c01      	subs	r4, #1
 801242e:	f845 0d04 	str.w	r0, [r5, #-4]!
 8012432:	d1f8      	bne.n	8012426 <GUI__ExpandPixelIndicesEx+0x15a>
 8012434:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012438:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801243c <GUI__DrawBitmap16bpp>:
 801243c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012440:	b08f      	sub	sp, #60	; 0x3c
 8012442:	460d      	mov	r5, r1
 8012444:	4693      	mov	fp, r2
 8012446:	4699      	mov	r9, r3
 8012448:	9007      	str	r0, [sp, #28]
 801244a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801244c:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801244e:	f000 fb42 	bl	8012ad6 <GUI_GetColor>
 8012452:	900b      	str	r0, [sp, #44]	; 0x2c
 8012454:	f000 ff3a 	bl	80132cc <LCD_GetColorIndex>
 8012458:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 801245a:	991a      	ldr	r1, [sp, #104]	; 0x68
 801245c:	430f      	orrs	r7, r1
 801245e:	ea4f 024b 	mov.w	r2, fp, lsl #1
 8012462:	2f01      	cmp	r7, #1
 8012464:	4684      	mov	ip, r0
 8012466:	9208      	str	r2, [sp, #32]
 8012468:	d001      	beq.n	801246e <GUI__DrawBitmap16bpp+0x32>
 801246a:	2700      	movs	r7, #0
 801246c:	e028      	b.n	80124c0 <GUI__DrawBitmap16bpp+0x84>
 801246e:	f8df 8208 	ldr.w	r8, [pc, #520]	; 8012678 <GUI__DrawBitmap16bpp+0x23c>
 8012472:	f8d8 3000 	ldr.w	r3, [r8]
 8012476:	7c58      	ldrb	r0, [r3, #17]
 8012478:	f7f9 fcca 	bl	800be10 <GUI_GetpfIndex2ColorEx>
 801247c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801247e:	4282      	cmp	r2, r0
 8012480:	d146      	bne.n	8012510 <GUI__DrawBitmap16bpp+0xd4>
 8012482:	9a08      	ldr	r2, [sp, #32]
 8012484:	9700      	str	r7, [sp, #0]
 8012486:	2110      	movs	r1, #16
 8012488:	2000      	movs	r0, #0
 801248a:	9102      	str	r1, [sp, #8]
 801248c:	9203      	str	r2, [sp, #12]
 801248e:	9005      	str	r0, [sp, #20]
 8012490:	9701      	str	r7, [sp, #4]
 8012492:	9404      	str	r4, [sp, #16]
 8012494:	9807      	ldr	r0, [sp, #28]
 8012496:	4629      	mov	r1, r5
 8012498:	465a      	mov	r2, fp
 801249a:	464b      	mov	r3, r9
 801249c:	f7f9 febe 	bl	800c21c <LCD_DrawBitmap>
 80124a0:	e0e6      	b.n	8012670 <GUI__DrawBitmap16bpp+0x234>
 80124a2:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80124a4:	4974      	ldr	r1, [pc, #464]	; (8012678 <GUI__DrawBitmap16bpp+0x23c>)
 80124a6:	182b      	adds	r3, r5, r0
 80124a8:	6808      	ldr	r0, [r1, #0]
 80124aa:	9309      	str	r3, [sp, #36]	; 0x24
 80124ac:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80124b0:	f103 3aff 	add.w	sl, r3, #4294967295
 80124b4:	4592      	cmp	sl, r2
 80124b6:	da06      	bge.n	80124c6 <GUI__DrawBitmap16bpp+0x8a>
 80124b8:	9d08      	ldr	r5, [sp, #32]
 80124ba:	1964      	adds	r4, r4, r5
 80124bc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80124be:	3701      	adds	r7, #1
 80124c0:	454f      	cmp	r7, r9
 80124c2:	dbee      	blt.n	80124a2 <GUI__DrawBitmap16bpp+0x66>
 80124c4:	e079      	b.n	80125ba <GUI__DrawBitmap16bpp+0x17e>
 80124c6:	f9b0 300e 	ldrsh.w	r3, [r0, #14]
 80124ca:	429d      	cmp	r5, r3
 80124cc:	dcf4      	bgt.n	80124b8 <GUI__DrawBitmap16bpp+0x7c>
 80124ce:	9a07      	ldr	r2, [sp, #28]
 80124d0:	2600      	movs	r6, #0
 80124d2:	455e      	cmp	r6, fp
 80124d4:	daf0      	bge.n	80124b8 <GUI__DrawBitmap16bpp+0x7c>
 80124d6:	f834 8016 	ldrh.w	r8, [r4, r6, lsl #1]
 80124da:	45e0      	cmp	r8, ip
 80124dc:	d007      	beq.n	80124ee <GUI__DrawBitmap16bpp+0xb2>
 80124de:	9206      	str	r2, [sp, #24]
 80124e0:	991c      	ldr	r1, [sp, #112]	; 0x70
 80124e2:	4640      	mov	r0, r8
 80124e4:	4788      	blx	r1
 80124e6:	f7fa f863 	bl	800c5b0 <LCD_SetColor>
 80124ea:	9a06      	ldr	r2, [sp, #24]
 80124ec:	46c4      	mov	ip, r8
 80124ee:	981a      	ldr	r0, [sp, #104]	; 0x68
 80124f0:	f8cd c018 	str.w	ip, [sp, #24]
 80124f4:	eb02 0800 	add.w	r8, r2, r0
 80124f8:	4629      	mov	r1, r5
 80124fa:	4610      	mov	r0, r2
 80124fc:	4653      	mov	r3, sl
 80124fe:	f108 32ff 	add.w	r2, r8, #4294967295
 8012502:	f7f9 fd85 	bl	800c010 <LCD_FillRect>
 8012506:	3601      	adds	r6, #1
 8012508:	4642      	mov	r2, r8
 801250a:	f8dd c018 	ldr.w	ip, [sp, #24]
 801250e:	e7e0      	b.n	80124d2 <GUI__DrawBitmap16bpp+0x96>
 8012510:	eb05 0109 	add.w	r1, r5, r9
 8012514:	1e48      	subs	r0, r1, #1
 8012516:	9009      	str	r0, [sp, #36]	; 0x24
 8012518:	f8d8 0000 	ldr.w	r0, [r8]
 801251c:	9b07      	ldr	r3, [sp, #28]
 801251e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8012522:	eb03 0a0b 	add.w	sl, r3, fp
 8012526:	4295      	cmp	r5, r2
 8012528:	f10a 3aff 	add.w	sl, sl, #4294967295
 801252c:	da06      	bge.n	801253c <GUI__DrawBitmap16bpp+0x100>
 801252e:	9908      	ldr	r1, [sp, #32]
 8012530:	1b55      	subs	r5, r2, r5
 8012532:	fb05 4401 	mla	r4, r5, r1, r4
 8012536:	ebc5 0909 	rsb	r9, r5, r9
 801253a:	4615      	mov	r5, r2
 801253c:	f9b0 300e 	ldrsh.w	r3, [r0, #14]
 8012540:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012542:	1ad1      	subs	r1, r2, r3
 8012544:	2900      	cmp	r1, #0
 8012546:	bfc8      	it	gt
 8012548:	ebc1 0909 	rsbgt	r9, r1, r9
 801254c:	f1b9 0f00 	cmp.w	r9, #0
 8012550:	f340 808e 	ble.w	8012670 <GUI__DrawBitmap16bpp+0x234>
 8012554:	f9b0 300c 	ldrsh.w	r3, [r0, #12]
 8012558:	9907      	ldr	r1, [sp, #28]
 801255a:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 801255e:	ebc3 020a 	rsb	r2, r3, sl
 8012562:	2a00      	cmp	r2, #0
 8012564:	bfc8      	it	gt
 8012566:	ebc2 0b0b 	rsbgt	fp, r2, fp
 801256a:	4281      	cmp	r1, r0
 801256c:	da05      	bge.n	801257a <GUI__DrawBitmap16bpp+0x13e>
 801256e:	1a43      	subs	r3, r0, r1
 8012570:	ebc3 0b0b 	rsb	fp, r3, fp
 8012574:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012578:	9007      	str	r0, [sp, #28]
 801257a:	f1bb 0f00 	cmp.w	fp, #0
 801257e:	dd77      	ble.n	8012670 <GUI__DrawBitmap16bpp+0x234>
 8012580:	2100      	movs	r1, #0
 8012582:	910d      	str	r1, [sp, #52]	; 0x34
 8012584:	b1ee      	cbz	r6, 80125c2 <GUI__DrawBitmap16bpp+0x186>
 8012586:	f8d6 8014 	ldr.w	r8, [r6, #20]
 801258a:	f1b8 0f00 	cmp.w	r8, #0
 801258e:	d004      	beq.n	801259a <GUI__DrawBitmap16bpp+0x15e>
 8012590:	a80d      	add	r0, sp, #52	; 0x34
 8012592:	460a      	mov	r2, r1
 8012594:	460b      	mov	r3, r1
 8012596:	f7fa fb8d 	bl	800ccb4 <GUI__GetAlphaBuffer>
 801259a:	4f37      	ldr	r7, [pc, #220]	; (8012678 <GUI__DrawBitmap16bpp+0x23c>)
 801259c:	f000 fe66 	bl	801326c <LCD_GetNextPixelAPI>
 80125a0:	683a      	ldr	r2, [r7, #0]
 80125a2:	4606      	mov	r6, r0
 80125a4:	7c50      	ldrb	r0, [r2, #17]
 80125a6:	f7f9 fc3b 	bl	800be20 <GUI_GetpfColor2IndexEx>
 80125aa:	4629      	mov	r1, r5
 80125ac:	900a      	str	r0, [sp, #40]	; 0x28
 80125ae:	4652      	mov	r2, sl
 80125b0:	9807      	ldr	r0, [sp, #28]
 80125b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80125b4:	6835      	ldr	r5, [r6, #0]
 80125b6:	47a8      	blx	r5
 80125b8:	b128      	cbz	r0, 80125c6 <GUI__DrawBitmap16bpp+0x18a>
 80125ba:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80125bc:	f7fa fdc2 	bl	800d144 <GUI_SetColor>
 80125c0:	e056      	b.n	8012670 <GUI__DrawBitmap16bpp+0x234>
 80125c2:	46b0      	mov	r8, r6
 80125c4:	e7e9      	b.n	801259a <GUI__DrawBitmap16bpp+0x15e>
 80125c6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80125c8:	b91d      	cbnz	r5, 80125d2 <GUI__DrawBitmap16bpp+0x196>
 80125ca:	9f08      	ldr	r7, [sp, #32]
 80125cc:	ea4f 084b 	mov.w	r8, fp, lsl #1
 80125d0:	e045      	b.n	801265e <GUI__DrawBitmap16bpp+0x222>
 80125d2:	683f      	ldr	r7, [r7, #0]
 80125d4:	4929      	ldr	r1, [pc, #164]	; (801267c <GUI__DrawBitmap16bpp+0x240>)
 80125d6:	7c7d      	ldrb	r5, [r7, #17]
 80125d8:	9f08      	ldr	r7, [sp, #32]
 80125da:	f851 3025 	ldr.w	r3, [r1, r5, lsl #2]
 80125de:	691a      	ldr	r2, [r3, #16]
 80125e0:	6915      	ldr	r5, [r2, #16]
 80125e2:	4620      	mov	r0, r4
 80125e4:	990d      	ldr	r1, [sp, #52]	; 0x34
 80125e6:	465a      	mov	r2, fp
 80125e8:	2302      	movs	r3, #2
 80125ea:	47c0      	blx	r8
 80125ec:	980d      	ldr	r0, [sp, #52]	; 0x34
 80125ee:	b125      	cbz	r5, 80125fa <GUI__DrawBitmap16bpp+0x1be>
 80125f0:	4601      	mov	r1, r0
 80125f2:	465a      	mov	r2, fp
 80125f4:	2304      	movs	r3, #4
 80125f6:	47a8      	blx	r5
 80125f8:	e00c      	b.n	8012614 <GUI__DrawBitmap16bpp+0x1d8>
 80125fa:	4603      	mov	r3, r0
 80125fc:	46aa      	mov	sl, r5
 80125fe:	6818      	ldr	r0, [r3, #0]
 8012600:	990a      	ldr	r1, [sp, #40]	; 0x28
 8012602:	9306      	str	r3, [sp, #24]
 8012604:	4788      	blx	r1
 8012606:	f10a 0a01 	add.w	sl, sl, #1
 801260a:	9b06      	ldr	r3, [sp, #24]
 801260c:	45da      	cmp	sl, fp
 801260e:	f843 0b04 	str.w	r0, [r3], #4
 8012612:	d1f4      	bne.n	80125fe <GUI__DrawBitmap16bpp+0x1c2>
 8012614:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8012616:	f04f 0a00 	mov.w	sl, #0
 801261a:	f852 002a 	ldr.w	r0, [r2, sl, lsl #2]
 801261e:	6871      	ldr	r1, [r6, #4]
 8012620:	9206      	str	r2, [sp, #24]
 8012622:	f10a 0a01 	add.w	sl, sl, #1
 8012626:	4788      	blx	r1
 8012628:	45da      	cmp	sl, fp
 801262a:	9a06      	ldr	r2, [sp, #24]
 801262c:	d1f5      	bne.n	801261a <GUI__DrawBitmap16bpp+0x1de>
 801262e:	68b0      	ldr	r0, [r6, #8]
 8012630:	4780      	blx	r0
 8012632:	f1b9 0901 	subs.w	r9, r9, #1
 8012636:	443c      	add	r4, r7
 8012638:	d1d3      	bne.n	80125e2 <GUI__DrawBitmap16bpp+0x1a6>
 801263a:	68f3      	ldr	r3, [r6, #12]
 801263c:	4798      	blx	r3
 801263e:	e7bc      	b.n	80125ba <GUI__DrawBitmap16bpp+0x17e>
 8012640:	991c      	ldr	r1, [sp, #112]	; 0x70
 8012642:	f839 0b02 	ldrh.w	r0, [r9], #2
 8012646:	4788      	blx	r1
 8012648:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801264a:	4798      	blx	r3
 801264c:	6872      	ldr	r2, [r6, #4]
 801264e:	4790      	blx	r2
 8012650:	45d1      	cmp	r9, sl
 8012652:	d1f5      	bne.n	8012640 <GUI__DrawBitmap16bpp+0x204>
 8012654:	b115      	cbz	r5, 801265c <GUI__DrawBitmap16bpp+0x220>
 8012656:	68b0      	ldr	r0, [r6, #8]
 8012658:	4780      	blx	r0
 801265a:	19e4      	adds	r4, r4, r7
 801265c:	46a9      	mov	r9, r5
 801265e:	f109 35ff 	add.w	r5, r9, #4294967295
 8012662:	f1b9 0f00 	cmp.w	r9, #0
 8012666:	d0e8      	beq.n	801263a <GUI__DrawBitmap16bpp+0x1fe>
 8012668:	eb04 0a08 	add.w	sl, r4, r8
 801266c:	46a1      	mov	r9, r4
 801266e:	e7e7      	b.n	8012640 <GUI__DrawBitmap16bpp+0x204>
 8012670:	b00f      	add	sp, #60	; 0x3c
 8012672:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012676:	bf00      	nop
 8012678:	20000270 	.word	0x20000270
 801267c:	2000dde0 	.word	0x2000dde0

08012680 <GUI__CompactPixelIndices>:
 8012680:	2a08      	cmp	r2, #8
 8012682:	b530      	push	{r4, r5, lr}
 8012684:	dd0d      	ble.n	80126a2 <GUI__CompactPixelIndices+0x22>
 8012686:	2a10      	cmp	r2, #16
 8012688:	dc09      	bgt.n	801269e <GUI__CompactPixelIndices+0x1e>
 801268a:	2300      	movs	r3, #0
 801268c:	f850 2023 	ldr.w	r2, [r0, r3, lsl #2]
 8012690:	f820 2013 	strh.w	r2, [r0, r3, lsl #1]
 8012694:	3301      	adds	r3, #1
 8012696:	428b      	cmp	r3, r1
 8012698:	d1f8      	bne.n	801268c <GUI__CompactPixelIndices+0xc>
 801269a:	2001      	movs	r0, #1
 801269c:	bd30      	pop	{r4, r5, pc}
 801269e:	2000      	movs	r0, #0
 80126a0:	bd30      	pop	{r4, r5, pc}
 80126a2:	2a02      	cmp	r2, #2
 80126a4:	d125      	bne.n	80126f2 <GUI__CompactPixelIndices+0x72>
 80126a6:	4602      	mov	r2, r0
 80126a8:	6803      	ldr	r3, [r0, #0]
 80126aa:	019c      	lsls	r4, r3, #6
 80126ac:	b2e3      	uxtb	r3, r4
 80126ae:	1e4c      	subs	r4, r1, #1
 80126b0:	d01c      	beq.n	80126ec <GUI__CompactPixelIndices+0x6c>
 80126b2:	6845      	ldr	r5, [r0, #4]
 80126b4:	3c01      	subs	r4, #1
 80126b6:	f005 0503 	and.w	r5, r5, #3
 80126ba:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 80126be:	d101      	bne.n	80126c4 <GUI__CompactPixelIndices+0x44>
 80126c0:	3008      	adds	r0, #8
 80126c2:	e014      	b.n	80126ee <GUI__CompactPixelIndices+0x6e>
 80126c4:	6885      	ldr	r5, [r0, #8]
 80126c6:	2c01      	cmp	r4, #1
 80126c8:	f005 0503 	and.w	r5, r5, #3
 80126cc:	ea43 0385 	orr.w	r3, r3, r5, lsl #2
 80126d0:	d101      	bne.n	80126d6 <GUI__CompactPixelIndices+0x56>
 80126d2:	300c      	adds	r0, #12
 80126d4:	e00b      	b.n	80126ee <GUI__CompactPixelIndices+0x6e>
 80126d6:	68c4      	ldr	r4, [r0, #12]
 80126d8:	f004 0403 	and.w	r4, r4, #3
 80126dc:	4323      	orrs	r3, r4
 80126de:	3010      	adds	r0, #16
 80126e0:	3904      	subs	r1, #4
 80126e2:	f802 3b01 	strb.w	r3, [r2], #1
 80126e6:	2900      	cmp	r1, #0
 80126e8:	d1de      	bne.n	80126a8 <GUI__CompactPixelIndices+0x28>
 80126ea:	e7d6      	b.n	801269a <GUI__CompactPixelIndices+0x1a>
 80126ec:	3004      	adds	r0, #4
 80126ee:	2100      	movs	r1, #0
 80126f0:	e7f7      	b.n	80126e2 <GUI__CompactPixelIndices+0x62>
 80126f2:	2a04      	cmp	r2, #4
 80126f4:	d112      	bne.n	801271c <GUI__CompactPixelIndices+0x9c>
 80126f6:	4602      	mov	r2, r0
 80126f8:	6803      	ldr	r3, [r0, #0]
 80126fa:	011b      	lsls	r3, r3, #4
 80126fc:	3901      	subs	r1, #1
 80126fe:	b2db      	uxtb	r3, r3
 8012700:	d101      	bne.n	8012706 <GUI__CompactPixelIndices+0x86>
 8012702:	3004      	adds	r0, #4
 8012704:	e005      	b.n	8012712 <GUI__CompactPixelIndices+0x92>
 8012706:	6844      	ldr	r4, [r0, #4]
 8012708:	f004 040f 	and.w	r4, r4, #15
 801270c:	4323      	orrs	r3, r4
 801270e:	3008      	adds	r0, #8
 8012710:	3901      	subs	r1, #1
 8012712:	f802 3b01 	strb.w	r3, [r2], #1
 8012716:	2900      	cmp	r1, #0
 8012718:	d1ee      	bne.n	80126f8 <GUI__CompactPixelIndices+0x78>
 801271a:	e7be      	b.n	801269a <GUI__CompactPixelIndices+0x1a>
 801271c:	2a01      	cmp	r2, #1
 801271e:	d148      	bne.n	80127b2 <GUI__CompactPixelIndices+0x132>
 8012720:	4604      	mov	r4, r0
 8012722:	6803      	ldr	r3, [r0, #0]
 8012724:	01da      	lsls	r2, r3, #7
 8012726:	b2d3      	uxtb	r3, r2
 8012728:	1e4a      	subs	r2, r1, #1
 801272a:	d03f      	beq.n	80127ac <GUI__CompactPixelIndices+0x12c>
 801272c:	6845      	ldr	r5, [r0, #4]
 801272e:	3a01      	subs	r2, #1
 8012730:	f005 0501 	and.w	r5, r5, #1
 8012734:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8012738:	d101      	bne.n	801273e <GUI__CompactPixelIndices+0xbe>
 801273a:	3008      	adds	r0, #8
 801273c:	e037      	b.n	80127ae <GUI__CompactPixelIndices+0x12e>
 801273e:	6885      	ldr	r5, [r0, #8]
 8012740:	2a01      	cmp	r2, #1
 8012742:	f005 0501 	and.w	r5, r5, #1
 8012746:	ea43 1345 	orr.w	r3, r3, r5, lsl #5
 801274a:	d101      	bne.n	8012750 <GUI__CompactPixelIndices+0xd0>
 801274c:	300c      	adds	r0, #12
 801274e:	e02e      	b.n	80127ae <GUI__CompactPixelIndices+0x12e>
 8012750:	68c5      	ldr	r5, [r0, #12]
 8012752:	2a02      	cmp	r2, #2
 8012754:	f005 0501 	and.w	r5, r5, #1
 8012758:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 801275c:	d101      	bne.n	8012762 <GUI__CompactPixelIndices+0xe2>
 801275e:	3010      	adds	r0, #16
 8012760:	e025      	b.n	80127ae <GUI__CompactPixelIndices+0x12e>
 8012762:	6905      	ldr	r5, [r0, #16]
 8012764:	2a03      	cmp	r2, #3
 8012766:	f005 0501 	and.w	r5, r5, #1
 801276a:	ea43 03c5 	orr.w	r3, r3, r5, lsl #3
 801276e:	d101      	bne.n	8012774 <GUI__CompactPixelIndices+0xf4>
 8012770:	3014      	adds	r0, #20
 8012772:	e01c      	b.n	80127ae <GUI__CompactPixelIndices+0x12e>
 8012774:	6945      	ldr	r5, [r0, #20]
 8012776:	2a04      	cmp	r2, #4
 8012778:	f005 0501 	and.w	r5, r5, #1
 801277c:	ea43 0385 	orr.w	r3, r3, r5, lsl #2
 8012780:	d101      	bne.n	8012786 <GUI__CompactPixelIndices+0x106>
 8012782:	3018      	adds	r0, #24
 8012784:	e013      	b.n	80127ae <GUI__CompactPixelIndices+0x12e>
 8012786:	6982      	ldr	r2, [r0, #24]
 8012788:	3907      	subs	r1, #7
 801278a:	f002 0201 	and.w	r2, r2, #1
 801278e:	ea43 0342 	orr.w	r3, r3, r2, lsl #1
 8012792:	d101      	bne.n	8012798 <GUI__CompactPixelIndices+0x118>
 8012794:	301c      	adds	r0, #28
 8012796:	e004      	b.n	80127a2 <GUI__CompactPixelIndices+0x122>
 8012798:	69c2      	ldr	r2, [r0, #28]
 801279a:	f002 0201 	and.w	r2, r2, #1
 801279e:	4313      	orrs	r3, r2
 80127a0:	3020      	adds	r0, #32
 80127a2:	f804 3b01 	strb.w	r3, [r4], #1
 80127a6:	2900      	cmp	r1, #0
 80127a8:	d1bb      	bne.n	8012722 <GUI__CompactPixelIndices+0xa2>
 80127aa:	e776      	b.n	801269a <GUI__CompactPixelIndices+0x1a>
 80127ac:	3004      	adds	r0, #4
 80127ae:	2100      	movs	r1, #0
 80127b0:	e7f7      	b.n	80127a2 <GUI__CompactPixelIndices+0x122>
 80127b2:	2300      	movs	r3, #0
 80127b4:	f850 2023 	ldr.w	r2, [r0, r3, lsl #2]
 80127b8:	54c2      	strb	r2, [r0, r3]
 80127ba:	3301      	adds	r3, #1
 80127bc:	428b      	cmp	r3, r1
 80127be:	d1f9      	bne.n	80127b4 <GUI__CompactPixelIndices+0x134>
 80127c0:	e76b      	b.n	801269a <GUI__CompactPixelIndices+0x1a>

080127c2 <GUI__CompactPixelIndicesEx>:
 80127c2:	2a08      	cmp	r2, #8
 80127c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80127c8:	4604      	mov	r4, r0
 80127ca:	460d      	mov	r5, r1
 80127cc:	681e      	ldr	r6, [r3, #0]
 80127ce:	dd05      	ble.n	80127dc <GUI__CompactPixelIndicesEx+0x1a>
 80127d0:	2a10      	cmp	r2, #16
 80127d2:	f340 80b1 	ble.w	8012938 <GUI__CompactPixelIndicesEx+0x176>
 80127d6:	2000      	movs	r0, #0
 80127d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80127dc:	3a01      	subs	r2, #1
 80127de:	2a07      	cmp	r2, #7
 80127e0:	f200 80a1 	bhi.w	8012926 <GUI__CompactPixelIndicesEx+0x164>
 80127e4:	e8df f002 	tbb	[pc, r2]
 80127e8:	7b9f5404 	.word	0x7b9f5404
 80127ec:	909f9f9f 	.word	0x909f9f9f
 80127f0:	46a1      	mov	r9, r4
 80127f2:	6820      	ldr	r0, [r4, #0]
 80127f4:	47b0      	blx	r6
 80127f6:	01c1      	lsls	r1, r0, #7
 80127f8:	f1b5 0801 	subs.w	r8, r5, #1
 80127fc:	b2cf      	uxtb	r7, r1
 80127fe:	f000 8095 	beq.w	801292c <GUI__CompactPixelIndicesEx+0x16a>
 8012802:	6860      	ldr	r0, [r4, #4]
 8012804:	47b0      	blx	r6
 8012806:	f1b8 0801 	subs.w	r8, r8, #1
 801280a:	ea47 1380 	orr.w	r3, r7, r0, lsl #6
 801280e:	b2df      	uxtb	r7, r3
 8012810:	d101      	bne.n	8012816 <GUI__CompactPixelIndicesEx+0x54>
 8012812:	3408      	adds	r4, #8
 8012814:	e08b      	b.n	801292e <GUI__CompactPixelIndicesEx+0x16c>
 8012816:	68a0      	ldr	r0, [r4, #8]
 8012818:	47b0      	blx	r6
 801281a:	f1b8 0f01 	cmp.w	r8, #1
 801281e:	ea47 1740 	orr.w	r7, r7, r0, lsl #5
 8012822:	b2ff      	uxtb	r7, r7
 8012824:	d101      	bne.n	801282a <GUI__CompactPixelIndicesEx+0x68>
 8012826:	340c      	adds	r4, #12
 8012828:	e081      	b.n	801292e <GUI__CompactPixelIndicesEx+0x16c>
 801282a:	68e0      	ldr	r0, [r4, #12]
 801282c:	47b0      	blx	r6
 801282e:	f1b8 0f02 	cmp.w	r8, #2
 8012832:	ea47 1200 	orr.w	r2, r7, r0, lsl #4
 8012836:	b2d7      	uxtb	r7, r2
 8012838:	d101      	bne.n	801283e <GUI__CompactPixelIndicesEx+0x7c>
 801283a:	3410      	adds	r4, #16
 801283c:	e077      	b.n	801292e <GUI__CompactPixelIndicesEx+0x16c>
 801283e:	6920      	ldr	r0, [r4, #16]
 8012840:	47b0      	blx	r6
 8012842:	f1b8 0f03 	cmp.w	r8, #3
 8012846:	ea47 00c0 	orr.w	r0, r7, r0, lsl #3
 801284a:	b2c7      	uxtb	r7, r0
 801284c:	d101      	bne.n	8012852 <GUI__CompactPixelIndicesEx+0x90>
 801284e:	3414      	adds	r4, #20
 8012850:	e06d      	b.n	801292e <GUI__CompactPixelIndicesEx+0x16c>
 8012852:	6960      	ldr	r0, [r4, #20]
 8012854:	47b0      	blx	r6
 8012856:	f1b8 0f04 	cmp.w	r8, #4
 801285a:	ea47 0180 	orr.w	r1, r7, r0, lsl #2
 801285e:	b2cf      	uxtb	r7, r1
 8012860:	d101      	bne.n	8012866 <GUI__CompactPixelIndicesEx+0xa4>
 8012862:	3418      	adds	r4, #24
 8012864:	e063      	b.n	801292e <GUI__CompactPixelIndicesEx+0x16c>
 8012866:	69a0      	ldr	r0, [r4, #24]
 8012868:	47b0      	blx	r6
 801286a:	f1b8 0f05 	cmp.w	r8, #5
 801286e:	ea47 0340 	orr.w	r3, r7, r0, lsl #1
 8012872:	b2df      	uxtb	r7, r3
 8012874:	d101      	bne.n	801287a <GUI__CompactPixelIndicesEx+0xb8>
 8012876:	341c      	adds	r4, #28
 8012878:	e059      	b.n	801292e <GUI__CompactPixelIndicesEx+0x16c>
 801287a:	69e0      	ldr	r0, [r4, #28]
 801287c:	47b0      	blx	r6
 801287e:	4307      	orrs	r7, r0
 8012880:	3420      	adds	r4, #32
 8012882:	b2ff      	uxtb	r7, r7
 8012884:	3d08      	subs	r5, #8
 8012886:	f809 7b01 	strb.w	r7, [r9], #1
 801288a:	2d00      	cmp	r5, #0
 801288c:	d1b1      	bne.n	80127f2 <GUI__CompactPixelIndicesEx+0x30>
 801288e:	e04a      	b.n	8012926 <GUI__CompactPixelIndicesEx+0x164>
 8012890:	46a0      	mov	r8, r4
 8012892:	6820      	ldr	r0, [r4, #0]
 8012894:	47b0      	blx	r6
 8012896:	0183      	lsls	r3, r0, #6
 8012898:	f1b5 0901 	subs.w	r9, r5, #1
 801289c:	b2df      	uxtb	r7, r3
 801289e:	d048      	beq.n	8012932 <GUI__CompactPixelIndicesEx+0x170>
 80128a0:	6860      	ldr	r0, [r4, #4]
 80128a2:	47b0      	blx	r6
 80128a4:	f1b9 0901 	subs.w	r9, r9, #1
 80128a8:	ea47 1700 	orr.w	r7, r7, r0, lsl #4
 80128ac:	b2ff      	uxtb	r7, r7
 80128ae:	d101      	bne.n	80128b4 <GUI__CompactPixelIndicesEx+0xf2>
 80128b0:	3408      	adds	r4, #8
 80128b2:	e03f      	b.n	8012934 <GUI__CompactPixelIndicesEx+0x172>
 80128b4:	68a0      	ldr	r0, [r4, #8]
 80128b6:	47b0      	blx	r6
 80128b8:	f1b9 0f01 	cmp.w	r9, #1
 80128bc:	ea47 0280 	orr.w	r2, r7, r0, lsl #2
 80128c0:	b2d7      	uxtb	r7, r2
 80128c2:	d101      	bne.n	80128c8 <GUI__CompactPixelIndicesEx+0x106>
 80128c4:	340c      	adds	r4, #12
 80128c6:	e035      	b.n	8012934 <GUI__CompactPixelIndicesEx+0x172>
 80128c8:	68e0      	ldr	r0, [r4, #12]
 80128ca:	47b0      	blx	r6
 80128cc:	4338      	orrs	r0, r7
 80128ce:	3410      	adds	r4, #16
 80128d0:	b2c7      	uxtb	r7, r0
 80128d2:	3d04      	subs	r5, #4
 80128d4:	f808 7b01 	strb.w	r7, [r8], #1
 80128d8:	2d00      	cmp	r5, #0
 80128da:	d1da      	bne.n	8012892 <GUI__CompactPixelIndicesEx+0xd0>
 80128dc:	e023      	b.n	8012926 <GUI__CompactPixelIndicesEx+0x164>
 80128de:	46a0      	mov	r8, r4
 80128e0:	6820      	ldr	r0, [r4, #0]
 80128e2:	47b0      	blx	r6
 80128e4:	0100      	lsls	r0, r0, #4
 80128e6:	3d01      	subs	r5, #1
 80128e8:	b2c7      	uxtb	r7, r0
 80128ea:	d101      	bne.n	80128f0 <GUI__CompactPixelIndicesEx+0x12e>
 80128ec:	3404      	adds	r4, #4
 80128ee:	e006      	b.n	80128fe <GUI__CompactPixelIndicesEx+0x13c>
 80128f0:	6860      	ldr	r0, [r4, #4]
 80128f2:	47b0      	blx	r6
 80128f4:	ea47 0100 	orr.w	r1, r7, r0
 80128f8:	3408      	adds	r4, #8
 80128fa:	b2cf      	uxtb	r7, r1
 80128fc:	3d01      	subs	r5, #1
 80128fe:	f808 7b01 	strb.w	r7, [r8], #1
 8012902:	2d00      	cmp	r5, #0
 8012904:	d1ec      	bne.n	80128e0 <GUI__CompactPixelIndicesEx+0x11e>
 8012906:	e00e      	b.n	8012926 <GUI__CompactPixelIndicesEx+0x164>
 8012908:	691f      	ldr	r7, [r3, #16]
 801290a:	b12f      	cbz	r7, 8012918 <GUI__CompactPixelIndicesEx+0x156>
 801290c:	4620      	mov	r0, r4
 801290e:	4621      	mov	r1, r4
 8012910:	462a      	mov	r2, r5
 8012912:	2301      	movs	r3, #1
 8012914:	47b8      	blx	r7
 8012916:	e006      	b.n	8012926 <GUI__CompactPixelIndicesEx+0x164>
 8012918:	f854 0027 	ldr.w	r0, [r4, r7, lsl #2]
 801291c:	47b0      	blx	r6
 801291e:	55e0      	strb	r0, [r4, r7]
 8012920:	3701      	adds	r7, #1
 8012922:	42bd      	cmp	r5, r7
 8012924:	d1f8      	bne.n	8012918 <GUI__CompactPixelIndicesEx+0x156>
 8012926:	2001      	movs	r0, #1
 8012928:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801292c:	3404      	adds	r4, #4
 801292e:	2500      	movs	r5, #0
 8012930:	e7a9      	b.n	8012886 <GUI__CompactPixelIndicesEx+0xc4>
 8012932:	3404      	adds	r4, #4
 8012934:	2500      	movs	r5, #0
 8012936:	e7cd      	b.n	80128d4 <GUI__CompactPixelIndicesEx+0x112>
 8012938:	691f      	ldr	r7, [r3, #16]
 801293a:	b11f      	cbz	r7, 8012944 <GUI__CompactPixelIndicesEx+0x182>
 801293c:	4621      	mov	r1, r4
 801293e:	462a      	mov	r2, r5
 8012940:	2302      	movs	r3, #2
 8012942:	e7e7      	b.n	8012914 <GUI__CompactPixelIndicesEx+0x152>
 8012944:	4607      	mov	r7, r0
 8012946:	f854 0b04 	ldr.w	r0, [r4], #4
 801294a:	47b0      	blx	r6
 801294c:	3d01      	subs	r5, #1
 801294e:	f827 0b02 	strh.w	r0, [r7], #2
 8012952:	d1f8      	bne.n	8012946 <GUI__CompactPixelIndicesEx+0x184>
 8012954:	e7e7      	b.n	8012926 <GUI__CompactPixelIndicesEx+0x164>

08012956 <GUI__CalcTextRect>:
 8012956:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801295a:	460c      	mov	r4, r1
 801295c:	4615      	mov	r5, r2
 801295e:	4698      	mov	r8, r3
 8012960:	2800      	cmp	r0, #0
 8012962:	d03b      	beq.n	80129dc <GUI__CalcTextRect+0x86>
 8012964:	f7fa fd8c 	bl	800d480 <GUI_GetStringDistX>
 8012968:	f008 0203 	and.w	r2, r8, #3
 801296c:	2a01      	cmp	r2, #1
 801296e:	4607      	mov	r7, r0
 8012970:	d00c      	beq.n	801298c <GUI__CalcTextRect+0x36>
 8012972:	2a02      	cmp	r2, #2
 8012974:	f9b4 6000 	ldrsh.w	r6, [r4]
 8012978:	d10c      	bne.n	8012994 <GUI__CalcTextRect+0x3e>
 801297a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801297e:	1b8b      	subs	r3, r1, r6
 8012980:	1c58      	adds	r0, r3, #1
 8012982:	1bc1      	subs	r1, r0, r7
 8012984:	fb91 f2f2 	sdiv	r2, r1, r2
 8012988:	18b6      	adds	r6, r6, r2
 801298a:	e003      	b.n	8012994 <GUI__CalcTextRect+0x3e>
 801298c:	f9b4 6004 	ldrsh.w	r6, [r4, #4]
 8012990:	1a33      	subs	r3, r6, r0
 8012992:	1c5e      	adds	r6, r3, #1
 8012994:	f008 080c 	and.w	r8, r8, #12
 8012998:	f7fb fe90 	bl	800e6bc <GUI_GetFontDistY>
 801299c:	f1b8 0f04 	cmp.w	r8, #4
 80129a0:	d00e      	beq.n	80129c0 <GUI__CalcTextRect+0x6a>
 80129a2:	f1b8 0f0c 	cmp.w	r8, #12
 80129a6:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 80129aa:	d10d      	bne.n	80129c8 <GUI__CalcTextRect+0x72>
 80129ac:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80129b0:	1aca      	subs	r2, r1, r3
 80129b2:	1c51      	adds	r1, r2, #1
 80129b4:	1a0a      	subs	r2, r1, r0
 80129b6:	2102      	movs	r1, #2
 80129b8:	fb92 f2f1 	sdiv	r2, r2, r1
 80129bc:	189b      	adds	r3, r3, r2
 80129be:	e003      	b.n	80129c8 <GUI__CalcTextRect+0x72>
 80129c0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80129c4:	1a19      	subs	r1, r3, r0
 80129c6:	1c4b      	adds	r3, r1, #1
 80129c8:	3f01      	subs	r7, #1
 80129ca:	3801      	subs	r0, #1
 80129cc:	802e      	strh	r6, [r5, #0]
 80129ce:	18c2      	adds	r2, r0, r3
 80129d0:	19be      	adds	r6, r7, r6
 80129d2:	806b      	strh	r3, [r5, #2]
 80129d4:	80ae      	strh	r6, [r5, #4]
 80129d6:	80ea      	strh	r2, [r5, #6]
 80129d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80129dc:	680b      	ldr	r3, [r1, #0]
 80129de:	6013      	str	r3, [r2, #0]
 80129e0:	6848      	ldr	r0, [r1, #4]
 80129e2:	6050      	str	r0, [r2, #4]
 80129e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080129e8 <_GetCharCode>:
 80129e8:	7800      	ldrb	r0, [r0, #0]
 80129ea:	4770      	bx	lr

080129ec <_GetCharSize>:
 80129ec:	2001      	movs	r0, #1
 80129ee:	4770      	bx	lr

080129f0 <_CalcSizeOfChar>:
 80129f0:	2001      	movs	r0, #1
 80129f2:	4770      	bx	lr

080129f4 <_Encode>:
 80129f4:	7001      	strb	r1, [r0, #0]
 80129f6:	2001      	movs	r0, #1
 80129f8:	4770      	bx	lr
	...

080129fc <GUI_UC__GetCharCodeInc>:
 80129fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80129fe:	4e08      	ldr	r6, [pc, #32]	; (8012a20 <GUI_UC__GetCharCodeInc+0x24>)
 8012a00:	6804      	ldr	r4, [r0, #0]
 8012a02:	6833      	ldr	r3, [r6, #0]
 8012a04:	4605      	mov	r5, r0
 8012a06:	6819      	ldr	r1, [r3, #0]
 8012a08:	4620      	mov	r0, r4
 8012a0a:	4788      	blx	r1
 8012a0c:	4607      	mov	r7, r0
 8012a0e:	6830      	ldr	r0, [r6, #0]
 8012a10:	6842      	ldr	r2, [r0, #4]
 8012a12:	4620      	mov	r0, r4
 8012a14:	4790      	blx	r2
 8012a16:	1823      	adds	r3, r4, r0
 8012a18:	602b      	str	r3, [r5, #0]
 8012a1a:	4638      	mov	r0, r7
 8012a1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012a1e:	bf00      	nop
 8012a20:	2000dddc 	.word	0x2000dddc

08012a24 <GUI_UC__NumChars2NumBytes>:
 8012a24:	b570      	push	{r4, r5, r6, lr}
 8012a26:	4604      	mov	r4, r0
 8012a28:	460e      	mov	r6, r1
 8012a2a:	2500      	movs	r5, #0
 8012a2c:	b146      	cbz	r6, 8012a40 <GUI_UC__NumChars2NumBytes+0x1c>
 8012a2e:	4b05      	ldr	r3, [pc, #20]	; (8012a44 <GUI_UC__NumChars2NumBytes+0x20>)
 8012a30:	6818      	ldr	r0, [r3, #0]
 8012a32:	6841      	ldr	r1, [r0, #4]
 8012a34:	4620      	mov	r0, r4
 8012a36:	4788      	blx	r1
 8012a38:	3e01      	subs	r6, #1
 8012a3a:	1824      	adds	r4, r4, r0
 8012a3c:	182d      	adds	r5, r5, r0
 8012a3e:	e7f5      	b.n	8012a2c <GUI_UC__NumChars2NumBytes+0x8>
 8012a40:	4628      	mov	r0, r5
 8012a42:	bd70      	pop	{r4, r5, r6, pc}
 8012a44:	2000dddc 	.word	0x2000dddc

08012a48 <GUI_SetTextAlign>:
 8012a48:	4b03      	ldr	r3, [pc, #12]	; (8012a58 <GUI_SetTextAlign+0x10>)
 8012a4a:	6819      	ldr	r1, [r3, #0]
 8012a4c:	f9b1 202c 	ldrsh.w	r2, [r1, #44]	; 0x2c
 8012a50:	8588      	strh	r0, [r1, #44]	; 0x2c
 8012a52:	4610      	mov	r0, r2
 8012a54:	4770      	bx	lr
 8012a56:	bf00      	nop
 8012a58:	20000270 	.word	0x20000270

08012a5c <GUI_SetOrg>:
 8012a5c:	b510      	push	{r4, lr}
 8012a5e:	460a      	mov	r2, r1
 8012a60:	4c07      	ldr	r4, [pc, #28]	; (8012a80 <GUI_SetOrg+0x24>)
 8012a62:	4908      	ldr	r1, [pc, #32]	; (8012a84 <GUI_SetOrg+0x28>)
 8012a64:	4603      	mov	r3, r0
 8012a66:	8008      	strh	r0, [r1, #0]
 8012a68:	6821      	ldr	r1, [r4, #0]
 8012a6a:	4807      	ldr	r0, [pc, #28]	; (8012a88 <GUI_SetOrg+0x2c>)
 8012a6c:	4c07      	ldr	r4, [pc, #28]	; (8012a8c <GUI_SetOrg+0x30>)
 8012a6e:	8002      	strh	r2, [r0, #0]
 8012a70:	7c48      	ldrb	r0, [r1, #17]
 8012a72:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 8012a76:	68c1      	ldr	r1, [r0, #12]
 8012a78:	6a0c      	ldr	r4, [r1, #32]
 8012a7a:	4619      	mov	r1, r3
 8012a7c:	47a0      	blx	r4
 8012a7e:	bd10      	pop	{r4, pc}
 8012a80:	20000270 	.word	0x20000270
 8012a84:	2000ddd0 	.word	0x2000ddd0
 8012a88:	2000ddc8 	.word	0x2000ddc8
 8012a8c:	2000dde0 	.word	0x2000dde0

08012a90 <GUI_SetLineStyle>:
 8012a90:	4b02      	ldr	r3, [pc, #8]	; (8012a9c <GUI_SetLineStyle+0xc>)
 8012a92:	6819      	ldr	r1, [r3, #0]
 8012a94:	7e8a      	ldrb	r2, [r1, #26]
 8012a96:	7688      	strb	r0, [r1, #26]
 8012a98:	4610      	mov	r0, r2
 8012a9a:	4770      	bx	lr
 8012a9c:	20000270 	.word	0x20000270

08012aa0 <GUI_GetFontInfo>:
 8012aa0:	b508      	push	{r3, lr}
 8012aa2:	b910      	cbnz	r0, 8012aaa <GUI_GetFontInfo+0xa>
 8012aa4:	4b07      	ldr	r3, [pc, #28]	; (8012ac4 <GUI_GetFontInfo+0x24>)
 8012aa6:	6818      	ldr	r0, [r3, #0]
 8012aa8:	69c0      	ldr	r0, [r0, #28]
 8012aaa:	f890 2020 	ldrb.w	r2, [r0, #32]
 8012aae:	708a      	strb	r2, [r1, #2]
 8012ab0:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8012ab4:	710b      	strb	r3, [r1, #4]
 8012ab6:	f890 2021 	ldrb.w	r2, [r0, #33]	; 0x21
 8012aba:	70ca      	strb	r2, [r1, #3]
 8012abc:	6883      	ldr	r3, [r0, #8]
 8012abe:	4798      	blx	r3
 8012ac0:	bd08      	pop	{r3, pc}
 8012ac2:	bf00      	nop
 8012ac4:	20000270 	.word	0x20000270

08012ac8 <GUI_GetBkColor>:
 8012ac8:	b508      	push	{r3, lr}
 8012aca:	f000 fbf7 	bl	80132bc <LCD_GetBkColorIndex>
 8012ace:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8012ad2:	f7f9 bd19 	b.w	800c508 <LCD_Index2Color>

08012ad6 <GUI_GetColor>:
 8012ad6:	b508      	push	{r3, lr}
 8012ad8:	f000 fbf8 	bl	80132cc <LCD_GetColorIndex>
 8012adc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8012ae0:	f7f9 bd12 	b.w	800c508 <LCD_Index2Color>

08012ae4 <GUI_DrawFocusRect>:
 8012ae4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012ae6:	4603      	mov	r3, r0
 8012ae8:	460a      	mov	r2, r1
 8012aea:	4668      	mov	r0, sp
 8012aec:	4619      	mov	r1, r3
 8012aee:	f7f9 fe01 	bl	800c6f4 <GUI__ReduceRect>
 8012af2:	4826      	ldr	r0, [pc, #152]	; (8012b8c <GUI_DrawFocusRect+0xa8>)
 8012af4:	f8bd 1000 	ldrh.w	r1, [sp]
 8012af8:	6803      	ldr	r3, [r0, #0]
 8012afa:	f8b3 204c 	ldrh.w	r2, [r3, #76]	; 0x4c
 8012afe:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8012b02:	1850      	adds	r0, r2, r1
 8012b04:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 8012b08:	f8ad 0000 	strh.w	r0, [sp]
 8012b0c:	1858      	adds	r0, r3, r1
 8012b0e:	f8ad 0002 	strh.w	r0, [sp, #2]
 8012b12:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8012b16:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8012b1a:	1852      	adds	r2, r2, r1
 8012b1c:	181b      	adds	r3, r3, r0
 8012b1e:	4668      	mov	r0, sp
 8012b20:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012b24:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012b28:	f7f6 fd78 	bl	800961c <WM__InitIVRSearch>
 8012b2c:	b360      	cbz	r0, 8012b88 <GUI_DrawFocusRect+0xa4>
 8012b2e:	f8bd 6000 	ldrh.w	r6, [sp]
 8012b32:	2500      	movs	r5, #0
 8012b34:	f9bd 1004 	ldrsh.w	r1, [sp, #4]
 8012b38:	fa05 f486 	sxtah	r4, r5, r6
 8012b3c:	3502      	adds	r5, #2
 8012b3e:	428c      	cmp	r4, r1
 8012b40:	dc0a      	bgt.n	8012b58 <GUI_DrawFocusRect+0x74>
 8012b42:	4620      	mov	r0, r4
 8012b44:	f9bd 1002 	ldrsh.w	r1, [sp, #2]
 8012b48:	f7f9 f9e8 	bl	800bf1c <LCD_DrawPixel>
 8012b4c:	4620      	mov	r0, r4
 8012b4e:	f9bd 1006 	ldrsh.w	r1, [sp, #6]
 8012b52:	f7f9 f9e3 	bl	800bf1c <LCD_DrawPixel>
 8012b56:	e7ed      	b.n	8012b34 <GUI_DrawFocusRect+0x50>
 8012b58:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 8012b5c:	2500      	movs	r5, #0
 8012b5e:	f9bd 2006 	ldrsh.w	r2, [sp, #6]
 8012b62:	fa05 f486 	sxtah	r4, r5, r6
 8012b66:	3502      	adds	r5, #2
 8012b68:	4294      	cmp	r4, r2
 8012b6a:	dc0a      	bgt.n	8012b82 <GUI_DrawFocusRect+0x9e>
 8012b6c:	f9bd 0000 	ldrsh.w	r0, [sp]
 8012b70:	4621      	mov	r1, r4
 8012b72:	f7f9 f9d3 	bl	800bf1c <LCD_DrawPixel>
 8012b76:	f9bd 0004 	ldrsh.w	r0, [sp, #4]
 8012b7a:	4621      	mov	r1, r4
 8012b7c:	f7f9 f9ce 	bl	800bf1c <LCD_DrawPixel>
 8012b80:	e7ed      	b.n	8012b5e <GUI_DrawFocusRect+0x7a>
 8012b82:	f7f6 fc8b 	bl	800949c <WM__GetNextIVR>
 8012b86:	e7d1      	b.n	8012b2c <GUI_DrawFocusRect+0x48>
 8012b88:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
 8012b8a:	bf00      	nop
 8012b8c:	20000270 	.word	0x20000270

08012b90 <GUI_CURSOR_SetPositionEx>:
 8012b90:	b570      	push	{r4, r5, r6, lr}
 8012b92:	4606      	mov	r6, r0
 8012b94:	4610      	mov	r0, r2
 8012b96:	4614      	mov	r4, r2
 8012b98:	460d      	mov	r5, r1
 8012b9a:	f7fa fae7 	bl	800d16c <GUI_GetCursorLayer>
 8012b9e:	4b14      	ldr	r3, [pc, #80]	; (8012bf0 <GUI_CURSOR_SetPositionEx+0x60>)
 8012ba0:	2214      	movs	r2, #20
 8012ba2:	b148      	cbz	r0, 8012bb8 <GUI_CURSOR_SetPositionEx+0x28>
 8012ba4:	4354      	muls	r4, r2
 8012ba6:	591b      	ldr	r3, [r3, r4]
 8012ba8:	6859      	ldr	r1, [r3, #4]
 8012baa:	689a      	ldr	r2, [r3, #8]
 8012bac:	1a71      	subs	r1, r6, r1
 8012bae:	1aaa      	subs	r2, r5, r2
 8012bb0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012bb4:	f7fa bb00 	b.w	800d1b8 <GUI_SetLayerPosEx>
 8012bb8:	fb02 3004 	mla	r0, r2, r4, r3
 8012bbc:	68c1      	ldr	r1, [r0, #12]
 8012bbe:	42a9      	cmp	r1, r5
 8012bc0:	d102      	bne.n	8012bc8 <GUI_CURSOR_SetPositionEx+0x38>
 8012bc2:	6883      	ldr	r3, [r0, #8]
 8012bc4:	42b3      	cmp	r3, r6
 8012bc6:	d012      	beq.n	8012bee <GUI_CURSOR_SetPositionEx+0x5e>
 8012bc8:	4a09      	ldr	r2, [pc, #36]	; (8012bf0 <GUI_CURSOR_SetPositionEx+0x60>)
 8012bca:	2314      	movs	r3, #20
 8012bcc:	4363      	muls	r3, r4
 8012bce:	18d0      	adds	r0, r2, r3
 8012bd0:	6900      	ldr	r0, [r0, #16]
 8012bd2:	b130      	cbz	r0, 8012be2 <GUI_CURSOR_SetPositionEx+0x52>
 8012bd4:	58d2      	ldr	r2, [r2, r3]
 8012bd6:	6851      	ldr	r1, [r2, #4]
 8012bd8:	6893      	ldr	r3, [r2, #8]
 8012bda:	1a71      	subs	r1, r6, r1
 8012bdc:	1aea      	subs	r2, r5, r3
 8012bde:	f000 fc8d 	bl	80134fc <GUI_SPRITE_SetPosition>
 8012be2:	4a03      	ldr	r2, [pc, #12]	; (8012bf0 <GUI_CURSOR_SetPositionEx+0x60>)
 8012be4:	2014      	movs	r0, #20
 8012be6:	fb00 2404 	mla	r4, r0, r4, r2
 8012bea:	60a6      	str	r6, [r4, #8]
 8012bec:	60e5      	str	r5, [r4, #12]
 8012bee:	bd70      	pop	{r4, r5, r6, pc}
 8012bf0:	2000d9c4 	.word	0x2000d9c4

08012bf4 <GUI_Long2Len>:
 8012bf4:	b510      	push	{r4, lr}
 8012bf6:	ea80 71e0 	eor.w	r1, r0, r0, asr #31
 8012bfa:	eba1 71e0 	sub.w	r1, r1, r0, asr #31
 8012bfe:	2200      	movs	r2, #0
 8012c00:	1c53      	adds	r3, r2, #1
 8012c02:	2b0a      	cmp	r3, #10
 8012c04:	d006      	beq.n	8012c14 <GUI_Long2Len+0x20>
 8012c06:	4c06      	ldr	r4, [pc, #24]	; (8012c20 <GUI_Long2Len+0x2c>)
 8012c08:	f854 4023 	ldr.w	r4, [r4, r3, lsl #2]
 8012c0c:	42a1      	cmp	r1, r4
 8012c0e:	d301      	bcc.n	8012c14 <GUI_Long2Len+0x20>
 8012c10:	461a      	mov	r2, r3
 8012c12:	e7f5      	b.n	8012c00 <GUI_Long2Len+0xc>
 8012c14:	2800      	cmp	r0, #0
 8012c16:	bfb8      	it	lt
 8012c18:	1c93      	addlt	r3, r2, #2
 8012c1a:	4618      	mov	r0, r3
 8012c1c:	bd10      	pop	{r4, pc}
 8012c1e:	bf00      	nop
 8012c20:	0802e410 	.word	0x0802e410

08012c24 <GUI_AddDecShift>:
 8012c24:	f1b0 4f00 	cmp.w	r0, #2147483648	; 0x80000000
 8012c28:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012c2a:	681c      	ldr	r4, [r3, #0]
 8012c2c:	d109      	bne.n	8012c42 <GUI_AddDecShift+0x1e>
 8012c2e:	202d      	movs	r0, #45	; 0x2d
 8012c30:	f804 0b01 	strb.w	r0, [r4], #1
 8012c34:	1e4e      	subs	r6, r1, #1
 8012c36:	b2f1      	uxtb	r1, r6
 8012c38:	601c      	str	r4, [r3, #0]
 8012c3a:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8012c3e:	2601      	movs	r6, #1
 8012c40:	e00c      	b.n	8012c5c <GUI_AddDecShift+0x38>
 8012c42:	2800      	cmp	r0, #0
 8012c44:	da06      	bge.n	8012c54 <GUI_AddDecShift+0x30>
 8012c46:	252d      	movs	r5, #45	; 0x2d
 8012c48:	f804 5b01 	strb.w	r5, [r4], #1
 8012c4c:	4240      	negs	r0, r0
 8012c4e:	601c      	str	r4, [r3, #0]
 8012c50:	2401      	movs	r4, #1
 8012c52:	e000      	b.n	8012c56 <GUI_AddDecShift+0x32>
 8012c54:	2400      	movs	r4, #0
 8012c56:	1b09      	subs	r1, r1, r4
 8012c58:	b2c9      	uxtb	r1, r1
 8012c5a:	2600      	movs	r6, #0
 8012c5c:	b30a      	cbz	r2, 8012ca2 <GUI_AddDecShift+0x7e>
 8012c5e:	3901      	subs	r1, #1
 8012c60:	b2c9      	uxtb	r1, r1
 8012c62:	e01e      	b.n	8012ca2 <GUI_AddDecShift+0x7e>
 8012c64:	1e4d      	subs	r5, r1, #1
 8012c66:	4291      	cmp	r1, r2
 8012c68:	b2ed      	uxtb	r5, r5
 8012c6a:	d105      	bne.n	8012c78 <GUI_AddDecShift+0x54>
 8012c6c:	4c12      	ldr	r4, [pc, #72]	; (8012cb8 <GUI_AddDecShift+0x94>)
 8012c6e:	7827      	ldrb	r7, [r4, #0]
 8012c70:	681c      	ldr	r4, [r3, #0]
 8012c72:	f804 7b01 	strb.w	r7, [r4], #1
 8012c76:	601c      	str	r4, [r3, #0]
 8012c78:	4f10      	ldr	r7, [pc, #64]	; (8012cbc <GUI_AddDecShift+0x98>)
 8012c7a:	f857 7025 	ldr.w	r7, [r7, r5, lsl #2]
 8012c7e:	fb90 f4f7 	sdiv	r4, r0, r7
 8012c82:	b2e4      	uxtb	r4, r4
 8012c84:	2c0a      	cmp	r4, #10
 8012c86:	d80e      	bhi.n	8012ca6 <GUI_AddDecShift+0x82>
 8012c88:	fb07 0014 	mls	r0, r7, r4, r0
 8012c8c:	b17d      	cbz	r5, 8012cae <GUI_AddDecShift+0x8a>
 8012c8e:	2c0a      	cmp	r4, #10
 8012c90:	bf18      	it	ne
 8012c92:	4629      	movne	r1, r5
 8012c94:	681d      	ldr	r5, [r3, #0]
 8012c96:	bf08      	it	eq
 8012c98:	2401      	moveq	r4, #1
 8012c9a:	3430      	adds	r4, #48	; 0x30
 8012c9c:	f805 4b01 	strb.w	r4, [r5], #1
 8012ca0:	601d      	str	r5, [r3, #0]
 8012ca2:	2900      	cmp	r1, #0
 8012ca4:	d1de      	bne.n	8012c64 <GUI_AddDecShift+0x40>
 8012ca6:	681b      	ldr	r3, [r3, #0]
 8012ca8:	2200      	movs	r2, #0
 8012caa:	701a      	strb	r2, [r3, #0]
 8012cac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012cae:	2e00      	cmp	r6, #0
 8012cb0:	d0ed      	beq.n	8012c8e <GUI_AddDecShift+0x6a>
 8012cb2:	3401      	adds	r4, #1
 8012cb4:	b2e4      	uxtb	r4, r4
 8012cb6:	e7ea      	b.n	8012c8e <GUI_AddDecShift+0x6a>
 8012cb8:	2000ddbe 	.word	0x2000ddbe
 8012cbc:	0802e410 	.word	0x0802e410

08012cc0 <_GetIndexMask_0>:
 8012cc0:	b508      	push	{r3, lr}
 8012cc2:	f7f9 f87f 	bl	800bdc4 <LCD_GetNumColors>
 8012cc6:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8012cca:	d010      	beq.n	8012cee <_GetIndexMask_0+0x2e>
 8012ccc:	287f      	cmp	r0, #127	; 0x7f
 8012cce:	d810      	bhi.n	8012cf2 <_GetIndexMask_0+0x32>
 8012cd0:	283f      	cmp	r0, #63	; 0x3f
 8012cd2:	d810      	bhi.n	8012cf6 <_GetIndexMask_0+0x36>
 8012cd4:	281f      	cmp	r0, #31
 8012cd6:	d810      	bhi.n	8012cfa <_GetIndexMask_0+0x3a>
 8012cd8:	280f      	cmp	r0, #15
 8012cda:	d810      	bhi.n	8012cfe <_GetIndexMask_0+0x3e>
 8012cdc:	2807      	cmp	r0, #7
 8012cde:	d810      	bhi.n	8012d02 <_GetIndexMask_0+0x42>
 8012ce0:	2803      	cmp	r0, #3
 8012ce2:	d810      	bhi.n	8012d06 <_GetIndexMask_0+0x46>
 8012ce4:	2801      	cmp	r0, #1
 8012ce6:	bf94      	ite	ls
 8012ce8:	2000      	movls	r0, #0
 8012cea:	2001      	movhi	r0, #1
 8012cec:	e00c      	b.n	8012d08 <_GetIndexMask_0+0x48>
 8012cee:	2008      	movs	r0, #8
 8012cf0:	e00a      	b.n	8012d08 <_GetIndexMask_0+0x48>
 8012cf2:	2007      	movs	r0, #7
 8012cf4:	e008      	b.n	8012d08 <_GetIndexMask_0+0x48>
 8012cf6:	2006      	movs	r0, #6
 8012cf8:	e006      	b.n	8012d08 <_GetIndexMask_0+0x48>
 8012cfa:	2005      	movs	r0, #5
 8012cfc:	e004      	b.n	8012d08 <_GetIndexMask_0+0x48>
 8012cfe:	2004      	movs	r0, #4
 8012d00:	e002      	b.n	8012d08 <_GetIndexMask_0+0x48>
 8012d02:	2003      	movs	r0, #3
 8012d04:	e000      	b.n	8012d08 <_GetIndexMask_0+0x48>
 8012d06:	2002      	movs	r0, #2
 8012d08:	2301      	movs	r3, #1
 8012d0a:	fa03 f000 	lsl.w	r0, r3, r0
 8012d0e:	3801      	subs	r0, #1
 8012d10:	bd08      	pop	{r3, pc}

08012d12 <_Index2Color_0>:
 8012d12:	b538      	push	{r3, r4, r5, lr}
 8012d14:	4604      	mov	r4, r0
 8012d16:	f7f9 f855 	bl	800bdc4 <LCD_GetNumColors>
 8012d1a:	4605      	mov	r5, r0
 8012d1c:	f7f9 f870 	bl	800be00 <LCD_GetPalette>
 8012d20:	42ac      	cmp	r4, r5
 8012d22:	d203      	bcs.n	8012d2c <_Index2Color_0+0x1a>
 8012d24:	b118      	cbz	r0, 8012d2e <_Index2Color_0+0x1c>
 8012d26:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 8012d2a:	bd38      	pop	{r3, r4, r5, pc}
 8012d2c:	2000      	movs	r0, #0
 8012d2e:	bd38      	pop	{r3, r4, r5, pc}

08012d30 <_Color2Index_0>:
 8012d30:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012d34:	4680      	mov	r8, r0
 8012d36:	f7f9 f845 	bl	800bdc4 <LCD_GetNumColors>
 8012d3a:	4607      	mov	r7, r0
 8012d3c:	f7f9 f860 	bl	800be00 <LCD_GetPalette>
 8012d40:	4606      	mov	r6, r0
 8012d42:	b1c8      	cbz	r0, 8012d78 <_Color2Index_0+0x48>
 8012d44:	2300      	movs	r3, #0
 8012d46:	f856 2023 	ldr.w	r2, [r6, r3, lsl #2]
 8012d4a:	4590      	cmp	r8, r2
 8012d4c:	4618      	mov	r0, r3
 8012d4e:	d015      	beq.n	8012d7c <_Color2Index_0+0x4c>
 8012d50:	3301      	adds	r3, #1
 8012d52:	42bb      	cmp	r3, r7
 8012d54:	dbf7      	blt.n	8012d46 <_Color2Index_0+0x16>
 8012d56:	2500      	movs	r5, #0
 8012d58:	f06f 497f 	mvn.w	r9, #4278190080	; 0xff000000
 8012d5c:	462c      	mov	r4, r5
 8012d5e:	f856 1024 	ldr.w	r1, [r6, r4, lsl #2]
 8012d62:	4640      	mov	r0, r8
 8012d64:	f000 fda3 	bl	80138ae <GUI_CalcColorDist>
 8012d68:	4548      	cmp	r0, r9
 8012d6a:	bf3c      	itt	cc
 8012d6c:	4681      	movcc	r9, r0
 8012d6e:	4625      	movcc	r5, r4
 8012d70:	3401      	adds	r4, #1
 8012d72:	42bc      	cmp	r4, r7
 8012d74:	dbf3      	blt.n	8012d5e <_Color2Index_0+0x2e>
 8012d76:	e000      	b.n	8012d7a <_Color2Index_0+0x4a>
 8012d78:	4605      	mov	r5, r0
 8012d7a:	4628      	mov	r0, r5
 8012d7c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08012d80 <WIDGET__FillStringInRect>:
 8012d80:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8012d84:	461e      	mov	r6, r3
 8012d86:	4b3f      	ldr	r3, [pc, #252]	; (8012e84 <WIDGET__FillStringInRect+0x104>)
 8012d88:	681b      	ldr	r3, [r3, #0]
 8012d8a:	4690      	mov	r8, r2
 8012d8c:	695a      	ldr	r2, [r3, #20]
 8012d8e:	4607      	mov	r7, r0
 8012d90:	460c      	mov	r4, r1
 8012d92:	b90a      	cbnz	r2, 8012d98 <WIDGET__FillStringInRect+0x18>
 8012d94:	bb1f      	cbnz	r7, 8012dde <WIDGET__FillStringInRect+0x5e>
 8012d96:	e06f      	b.n	8012e78 <WIDGET__FillStringInRect+0xf8>
 8012d98:	6808      	ldr	r0, [r1, #0]
 8012d9a:	6849      	ldr	r1, [r1, #4]
 8012d9c:	466d      	mov	r5, sp
 8012d9e:	c503      	stmia	r5!, {r0, r1}
 8012da0:	f8b3 104c 	ldrh.w	r1, [r3, #76]	; 0x4c
 8012da4:	f8bd 0000 	ldrh.w	r0, [sp]
 8012da8:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8012dac:	1808      	adds	r0, r1, r0
 8012dae:	f8ad 0000 	strh.w	r0, [sp]
 8012db2:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 8012db6:	1818      	adds	r0, r3, r0
 8012db8:	f8ad 0002 	strh.w	r0, [sp, #2]
 8012dbc:	f8bd 0004 	ldrh.w	r0, [sp, #4]
 8012dc0:	1809      	adds	r1, r1, r0
 8012dc2:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8012dc6:	f8ad 1004 	strh.w	r1, [sp, #4]
 8012dca:	181b      	adds	r3, r3, r0
 8012dcc:	4669      	mov	r1, sp
 8012dce:	4610      	mov	r0, r2
 8012dd0:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012dd4:	f7fa fa10 	bl	800d1f8 <GUI_RectsIntersect>
 8012dd8:	2800      	cmp	r0, #0
 8012dda:	d050      	beq.n	8012e7e <WIDGET__FillStringInRect+0xfe>
 8012ddc:	e7da      	b.n	8012d94 <WIDGET__FillStringInRect+0x14>
 8012dde:	783a      	ldrb	r2, [r7, #0]
 8012de0:	2a00      	cmp	r2, #0
 8012de2:	d049      	beq.n	8012e78 <WIDGET__FillStringInRect+0xf8>
 8012de4:	f7ff fe70 	bl	8012ac8 <GUI_GetBkColor>
 8012de8:	0e00      	lsrs	r0, r0, #24
 8012dea:	d003      	beq.n	8012df4 <WIDGET__FillStringInRect+0x74>
 8012dec:	2002      	movs	r0, #2
 8012dee:	f7fa f971 	bl	800d0d4 <GUI_SetTextMode>
 8012df2:	e032      	b.n	8012e5a <WIDGET__FillStringInRect+0xda>
 8012df4:	f7fa f96e 	bl	800d0d4 <GUI_SetTextMode>
 8012df8:	4641      	mov	r1, r8
 8012dfa:	4632      	mov	r2, r6
 8012dfc:	a802      	add	r0, sp, #8
 8012dfe:	f7f9 fcfb 	bl	800c7f8 <GUI__IntersectRects>
 8012e02:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8012e06:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012e0a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8012e0e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8012e12:	3b01      	subs	r3, #1
 8012e14:	f7fb f918 	bl	800e048 <GUI_ClearRect>
 8012e18:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8012e1c:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012e20:	f9bd 100a 	ldrsh.w	r1, [sp, #10]
 8012e24:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8012e28:	3a01      	subs	r2, #1
 8012e2a:	f7fb f90d 	bl	800e048 <GUI_ClearRect>
 8012e2e:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 8012e32:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8012e36:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8012e3a:	1c48      	adds	r0, r1, #1
 8012e3c:	f9bd 100a 	ldrsh.w	r1, [sp, #10]
 8012e40:	f7fb f902 	bl	800e048 <GUI_ClearRect>
 8012e44:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8012e48:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012e4c:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8012e50:	1c59      	adds	r1, r3, #1
 8012e52:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8012e56:	f7fb f8f7 	bl	800e048 <GUI_ClearRect>
 8012e5a:	4640      	mov	r0, r8
 8012e5c:	f7f5 f898 	bl	8007f90 <WM_SetUserClipRect>
 8012e60:	f9b6 1000 	ldrsh.w	r1, [r6]
 8012e64:	f9b6 2002 	ldrsh.w	r2, [r6, #2]
 8012e68:	4604      	mov	r4, r0
 8012e6a:	4638      	mov	r0, r7
 8012e6c:	f7fa ff4e 	bl	800dd0c <GUI_DispStringAt>
 8012e70:	4620      	mov	r0, r4
 8012e72:	f7f5 f88d 	bl	8007f90 <WM_SetUserClipRect>
 8012e76:	e002      	b.n	8012e7e <WIDGET__FillStringInRect+0xfe>
 8012e78:	4620      	mov	r0, r4
 8012e7a:	f000 fd0d 	bl	8013898 <GUI_ClearRectEx>
 8012e7e:	e8bd 81ff 	ldmia.w	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
 8012e82:	bf00      	nop
 8012e84:	20000270 	.word	0x20000270

08012e88 <_DrawDownRect>:
 8012e88:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012e8c:	4c27      	ldr	r4, [pc, #156]	; (8012f2c <_DrawDownRect+0xa4>)
 8012e8e:	8805      	ldrh	r5, [r0, #0]
 8012e90:	f8b0 8002 	ldrh.w	r8, [r0, #2]
 8012e94:	8887      	ldrh	r7, [r0, #4]
 8012e96:	88c6      	ldrh	r6, [r0, #6]
 8012e98:	6820      	ldr	r0, [r4, #0]
 8012e9a:	f7f9 fb89 	bl	800c5b0 <LCD_SetColor>
 8012e9e:	b22d      	sxth	r5, r5
 8012ea0:	b23f      	sxth	r7, r7
 8012ea2:	fa0f f888 	sxth.w	r8, r8
 8012ea6:	68a0      	ldr	r0, [r4, #8]
 8012ea8:	f7f9 fb82 	bl	800c5b0 <LCD_SetColor>
 8012eac:	f108 0a01 	add.w	sl, r8, #1
 8012eb0:	b236      	sxth	r6, r6
 8012eb2:	4640      	mov	r0, r8
 8012eb4:	4629      	mov	r1, r5
 8012eb6:	463a      	mov	r2, r7
 8012eb8:	f7fa fb8e 	bl	800d5d8 <GUI_DrawHLine>
 8012ebc:	4651      	mov	r1, sl
 8012ebe:	4632      	mov	r2, r6
 8012ec0:	4628      	mov	r0, r5
 8012ec2:	f7fa fb47 	bl	800d554 <GUI_DrawVLine>
 8012ec6:	f105 0b01 	add.w	fp, r5, #1
 8012eca:	f107 39ff 	add.w	r9, r7, #4294967295
 8012ece:	6820      	ldr	r0, [r4, #0]
 8012ed0:	f7f9 fb6e 	bl	800c5b0 <LCD_SetColor>
 8012ed4:	4650      	mov	r0, sl
 8012ed6:	4659      	mov	r1, fp
 8012ed8:	464a      	mov	r2, r9
 8012eda:	f7fa fb7d 	bl	800d5d8 <GUI_DrawHLine>
 8012ede:	f108 0302 	add.w	r3, r8, #2
 8012ee2:	f106 38ff 	add.w	r8, r6, #4294967295
 8012ee6:	4619      	mov	r1, r3
 8012ee8:	4642      	mov	r2, r8
 8012eea:	4658      	mov	r0, fp
 8012eec:	9301      	str	r3, [sp, #4]
 8012eee:	f7fa fb31 	bl	800d554 <GUI_DrawVLine>
 8012ef2:	6920      	ldr	r0, [r4, #16]
 8012ef4:	f7f9 fb5c 	bl	800c5b0 <LCD_SetColor>
 8012ef8:	4630      	mov	r0, r6
 8012efa:	4659      	mov	r1, fp
 8012efc:	463a      	mov	r2, r7
 8012efe:	f7fa fb6b 	bl	800d5d8 <GUI_DrawHLine>
 8012f02:	4651      	mov	r1, sl
 8012f04:	4632      	mov	r2, r6
 8012f06:	4638      	mov	r0, r7
 8012f08:	f7fa fb24 	bl	800d554 <GUI_DrawVLine>
 8012f0c:	68e0      	ldr	r0, [r4, #12]
 8012f0e:	f7f9 fb4f 	bl	800c5b0 <LCD_SetColor>
 8012f12:	4640      	mov	r0, r8
 8012f14:	1ca9      	adds	r1, r5, #2
 8012f16:	464a      	mov	r2, r9
 8012f18:	f7fa fb5e 	bl	800d5d8 <GUI_DrawHLine>
 8012f1c:	9901      	ldr	r1, [sp, #4]
 8012f1e:	4648      	mov	r0, r9
 8012f20:	4642      	mov	r2, r8
 8012f22:	b003      	add	sp, #12
 8012f24:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012f28:	f7fa bb14 	b.w	800d554 <GUI_DrawVLine>
 8012f2c:	200002b0 	.word	0x200002b0

08012f30 <_DrawDown>:
 8012f30:	b507      	push	{r0, r1, r2, lr}
 8012f32:	4668      	mov	r0, sp
 8012f34:	f7f5 fc42 	bl	80087bc <WM_GetClientRect>
 8012f38:	4668      	mov	r0, sp
 8012f3a:	f7ff ffa5 	bl	8012e88 <_DrawDownRect>
 8012f3e:	bd0e      	pop	{r1, r2, r3, pc}

08012f40 <_DrawUpRect>:
 8012f40:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012f44:	f8b0 8000 	ldrh.w	r8, [r0]
 8012f48:	4c19      	ldr	r4, [pc, #100]	; (8012fb0 <_DrawUpRect+0x70>)
 8012f4a:	8847      	ldrh	r7, [r0, #2]
 8012f4c:	8886      	ldrh	r6, [r0, #4]
 8012f4e:	88c5      	ldrh	r5, [r0, #6]
 8012f50:	6820      	ldr	r0, [r4, #0]
 8012f52:	b22d      	sxth	r5, r5
 8012f54:	fa0f f988 	sxth.w	r9, r8
 8012f58:	b236      	sxth	r6, r6
 8012f5a:	b23f      	sxth	r7, r7
 8012f5c:	f7f9 fb28 	bl	800c5b0 <LCD_SetColor>
 8012f60:	462b      	mov	r3, r5
 8012f62:	4639      	mov	r1, r7
 8012f64:	4632      	mov	r2, r6
 8012f66:	4648      	mov	r0, r9
 8012f68:	f7fb ff56 	bl	800ee18 <GUI_DrawRect>
 8012f6c:	f109 0801 	add.w	r8, r9, #1
 8012f70:	3701      	adds	r7, #1
 8012f72:	6920      	ldr	r0, [r4, #16]
 8012f74:	f7f9 fb1c 	bl	800c5b0 <LCD_SetColor>
 8012f78:	f1a5 0902 	sub.w	r9, r5, #2
 8012f7c:	1eb2      	subs	r2, r6, #2
 8012f7e:	4638      	mov	r0, r7
 8012f80:	4641      	mov	r1, r8
 8012f82:	f7fa fb29 	bl	800d5d8 <GUI_DrawHLine>
 8012f86:	4639      	mov	r1, r7
 8012f88:	464a      	mov	r2, r9
 8012f8a:	4640      	mov	r0, r8
 8012f8c:	f7fa fae2 	bl	800d554 <GUI_DrawVLine>
 8012f90:	3e01      	subs	r6, #1
 8012f92:	6860      	ldr	r0, [r4, #4]
 8012f94:	f7f9 fb0c 	bl	800c5b0 <LCD_SetColor>
 8012f98:	1e68      	subs	r0, r5, #1
 8012f9a:	4641      	mov	r1, r8
 8012f9c:	4632      	mov	r2, r6
 8012f9e:	f7fa fb1b 	bl	800d5d8 <GUI_DrawHLine>
 8012fa2:	4630      	mov	r0, r6
 8012fa4:	4639      	mov	r1, r7
 8012fa6:	464a      	mov	r2, r9
 8012fa8:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012fac:	f7fa bad2 	b.w	800d554 <GUI_DrawVLine>
 8012fb0:	200002b0 	.word	0x200002b0

08012fb4 <WIDGET_EFFECT_3D_DrawUp>:
 8012fb4:	b507      	push	{r0, r1, r2, lr}
 8012fb6:	4668      	mov	r0, sp
 8012fb8:	f7f5 fc00 	bl	80087bc <WM_GetClientRect>
 8012fbc:	4668      	mov	r0, sp
 8012fbe:	f7ff ffbf 	bl	8012f40 <_DrawUpRect>
 8012fc2:	bd0e      	pop	{r1, r2, r3, pc}

08012fc4 <WM__SendMessageIfEnabled>:
 8012fc4:	b538      	push	{r3, r4, r5, lr}
 8012fc6:	4604      	mov	r4, r0
 8012fc8:	460d      	mov	r5, r1
 8012fca:	f7f4 ff7b 	bl	8007ec4 <WM__IsEnabled>
 8012fce:	b128      	cbz	r0, 8012fdc <WM__SendMessageIfEnabled+0x18>
 8012fd0:	4620      	mov	r0, r4
 8012fd2:	4629      	mov	r1, r5
 8012fd4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8012fd8:	f7f4 bf56 	b.w	8007e88 <WM__SendMessage>
 8012fdc:	bd38      	pop	{r3, r4, r5, pc}

08012fde <WM__IsChild>:
 8012fde:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012fe0:	460d      	mov	r5, r1
 8012fe2:	4604      	mov	r4, r0
 8012fe4:	b168      	cbz	r0, 8013002 <WM__IsChild+0x24>
 8012fe6:	f7fb fc73 	bl	800e8d0 <GUI_ALLOC_LockH>
 8012fea:	9001      	str	r0, [sp, #4]
 8012fec:	b128      	cbz	r0, 8012ffa <WM__IsChild+0x1c>
 8012fee:	6984      	ldr	r4, [r0, #24]
 8012ff0:	1b63      	subs	r3, r4, r5
 8012ff2:	4258      	negs	r0, r3
 8012ff4:	eb50 0403 	adcs.w	r4, r0, r3
 8012ff8:	e000      	b.n	8012ffc <WM__IsChild+0x1e>
 8012ffa:	4604      	mov	r4, r0
 8012ffc:	a801      	add	r0, sp, #4
 8012ffe:	f7fb fc75 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8013002:	4620      	mov	r0, r4
 8013004:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08013006 <WM__ForEachDesc>:
 8013006:	b570      	push	{r4, r5, r6, lr}
 8013008:	460d      	mov	r5, r1
 801300a:	4616      	mov	r6, r2
 801300c:	f7fb fc56 	bl	800e8bc <GUI_ALLOC_h2p>
 8013010:	69c4      	ldr	r4, [r0, #28]
 8013012:	b164      	cbz	r4, 801302e <WM__ForEachDesc+0x28>
 8013014:	4620      	mov	r0, r4
 8013016:	4631      	mov	r1, r6
 8013018:	47a8      	blx	r5
 801301a:	4620      	mov	r0, r4
 801301c:	4629      	mov	r1, r5
 801301e:	4632      	mov	r2, r6
 8013020:	f7ff fff1 	bl	8013006 <WM__ForEachDesc>
 8013024:	4620      	mov	r0, r4
 8013026:	f7fb fc49 	bl	800e8bc <GUI_ALLOC_h2p>
 801302a:	6a04      	ldr	r4, [r0, #32]
 801302c:	e7f1      	b.n	8013012 <WM__ForEachDesc+0xc>
 801302e:	bd70      	pop	{r4, r5, r6, pc}

08013030 <_NextPixel_FlushBuffer>:
 8013030:	b570      	push	{r4, r5, r6, lr}
 8013032:	4b10      	ldr	r3, [pc, #64]	; (8013074 <_NextPixel_FlushBuffer+0x44>)
 8013034:	4910      	ldr	r1, [pc, #64]	; (8013078 <_NextPixel_FlushBuffer+0x48>)
 8013036:	6818      	ldr	r0, [r3, #0]
 8013038:	4c10      	ldr	r4, [pc, #64]	; (801307c <_NextPixel_FlushBuffer+0x4c>)
 801303a:	7c42      	ldrb	r2, [r0, #17]
 801303c:	69e3      	ldr	r3, [r4, #28]
 801303e:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8013042:	6922      	ldr	r2, [r4, #16]
 8013044:	68c6      	ldr	r6, [r0, #12]
 8013046:	6861      	ldr	r1, [r4, #4]
 8013048:	b086      	sub	sp, #24
 801304a:	2501      	movs	r5, #1
 801304c:	9500      	str	r5, [sp, #0]
 801304e:	2500      	movs	r5, #0
 8013050:	9301      	str	r3, [sp, #4]
 8013052:	9203      	str	r2, [sp, #12]
 8013054:	9502      	str	r5, [sp, #8]
 8013056:	9504      	str	r5, [sp, #16]
 8013058:	9505      	str	r5, [sp, #20]
 801305a:	68a2      	ldr	r2, [r4, #8]
 801305c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801305e:	6876      	ldr	r6, [r6, #4]
 8013060:	47b0      	blx	r6
 8013062:	6860      	ldr	r0, [r4, #4]
 8013064:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8013066:	6922      	ldr	r2, [r4, #16]
 8013068:	6265      	str	r5, [r4, #36]	; 0x24
 801306a:	1843      	adds	r3, r0, r1
 801306c:	6063      	str	r3, [r4, #4]
 801306e:	6162      	str	r2, [r4, #20]
 8013070:	b006      	add	sp, #24
 8013072:	bd70      	pop	{r4, r5, r6, pc}
 8013074:	20000270 	.word	0x20000270
 8013078:	2000dde0 	.word	0x2000dde0
 801307c:	2000d9ec 	.word	0x2000d9ec

08013080 <_NextPixel_SetPixel>:
 8013080:	4b3f      	ldr	r3, [pc, #252]	; (8013180 <_NextPixel_SetPixel+0x100>)
 8013082:	699a      	ldr	r2, [r3, #24]
 8013084:	2a02      	cmp	r2, #2
 8013086:	b530      	push	{r4, r5, lr}
 8013088:	d066      	beq.n	8013158 <_NextPixel_SetPixel+0xd8>
 801308a:	2a04      	cmp	r2, #4
 801308c:	d068      	beq.n	8013160 <_NextPixel_SetPixel+0xe0>
 801308e:	2a01      	cmp	r2, #1
 8013090:	d16a      	bne.n	8013168 <_NextPixel_SetPixel+0xe8>
 8013092:	69d9      	ldr	r1, [r3, #28]
 8013094:	695a      	ldr	r2, [r3, #20]
 8013096:	3901      	subs	r1, #1
 8013098:	2907      	cmp	r1, #7
 801309a:	d865      	bhi.n	8013168 <_NextPixel_SetPixel+0xe8>
 801309c:	e8df f001 	tbb	[pc, r1]
 80130a0:	38641e04 	.word	0x38641e04
 80130a4:	58646464 	.word	0x58646464
 80130a8:	7814      	ldrb	r4, [r2, #0]
 80130aa:	f893 5028 	ldrb.w	r5, [r3, #40]	; 0x28
 80130ae:	4934      	ldr	r1, [pc, #208]	; (8013180 <_NextPixel_SetPixel+0x100>)
 80130b0:	ea24 0405 	bic.w	r4, r4, r5
 80130b4:	7014      	strb	r4, [r2, #0]
 80130b6:	6add      	ldr	r5, [r3, #44]	; 0x2c
 80130b8:	f1c5 0507 	rsb	r5, r5, #7
 80130bc:	fa00 f005 	lsl.w	r0, r0, r5
 80130c0:	4304      	orrs	r4, r0
 80130c2:	7014      	strb	r4, [r2, #0]
 80130c4:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 80130c6:	1c42      	adds	r2, r0, #1
 80130c8:	f893 0028 	ldrb.w	r0, [r3, #40]	; 0x28
 80130cc:	62da      	str	r2, [r3, #44]	; 0x2c
 80130ce:	0840      	lsrs	r0, r0, #1
 80130d0:	f883 0028 	strb.w	r0, [r3, #40]	; 0x28
 80130d4:	2800      	cmp	r0, #0
 80130d6:	d147      	bne.n	8013168 <_NextPixel_SetPixel+0xe8>
 80130d8:	2380      	movs	r3, #128	; 0x80
 80130da:	e032      	b.n	8013142 <_NextPixel_SetPixel+0xc2>
 80130dc:	7814      	ldrb	r4, [r2, #0]
 80130de:	f893 5028 	ldrb.w	r5, [r3, #40]	; 0x28
 80130e2:	4927      	ldr	r1, [pc, #156]	; (8013180 <_NextPixel_SetPixel+0x100>)
 80130e4:	ea24 0405 	bic.w	r4, r4, r5
 80130e8:	7014      	strb	r4, [r2, #0]
 80130ea:	6add      	ldr	r5, [r3, #44]	; 0x2c
 80130ec:	006d      	lsls	r5, r5, #1
 80130ee:	f1c5 0506 	rsb	r5, r5, #6
 80130f2:	fa00 f005 	lsl.w	r0, r0, r5
 80130f6:	4304      	orrs	r4, r0
 80130f8:	7014      	strb	r4, [r2, #0]
 80130fa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80130fc:	1c50      	adds	r0, r2, #1
 80130fe:	f893 2028 	ldrb.w	r2, [r3, #40]	; 0x28
 8013102:	62d8      	str	r0, [r3, #44]	; 0x2c
 8013104:	0890      	lsrs	r0, r2, #2
 8013106:	f883 0028 	strb.w	r0, [r3, #40]	; 0x28
 801310a:	bb68      	cbnz	r0, 8013168 <_NextPixel_SetPixel+0xe8>
 801310c:	23c0      	movs	r3, #192	; 0xc0
 801310e:	e018      	b.n	8013142 <_NextPixel_SetPixel+0xc2>
 8013110:	7814      	ldrb	r4, [r2, #0]
 8013112:	f893 5028 	ldrb.w	r5, [r3, #40]	; 0x28
 8013116:	491a      	ldr	r1, [pc, #104]	; (8013180 <_NextPixel_SetPixel+0x100>)
 8013118:	ea24 0405 	bic.w	r4, r4, r5
 801311c:	7014      	strb	r4, [r2, #0]
 801311e:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8013120:	00ad      	lsls	r5, r5, #2
 8013122:	f1c5 0504 	rsb	r5, r5, #4
 8013126:	fa00 f005 	lsl.w	r0, r0, r5
 801312a:	4304      	orrs	r4, r0
 801312c:	7014      	strb	r4, [r2, #0]
 801312e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8013130:	1c50      	adds	r0, r2, #1
 8013132:	f893 2028 	ldrb.w	r2, [r3, #40]	; 0x28
 8013136:	62d8      	str	r0, [r3, #44]	; 0x2c
 8013138:	0910      	lsrs	r0, r2, #4
 801313a:	f883 0028 	strb.w	r0, [r3, #40]	; 0x28
 801313e:	b998      	cbnz	r0, 8013168 <_NextPixel_SetPixel+0xe8>
 8013140:	23f0      	movs	r3, #240	; 0xf0
 8013142:	f881 3028 	strb.w	r3, [r1, #40]	; 0x28
 8013146:	694b      	ldr	r3, [r1, #20]
 8013148:	62c8      	str	r0, [r1, #44]	; 0x2c
 801314a:	1c5a      	adds	r2, r3, #1
 801314c:	614a      	str	r2, [r1, #20]
 801314e:	e00b      	b.n	8013168 <_NextPixel_SetPixel+0xe8>
 8013150:	7010      	strb	r0, [r2, #0]
 8013152:	6958      	ldr	r0, [r3, #20]
 8013154:	1c41      	adds	r1, r0, #1
 8013156:	e006      	b.n	8013166 <_NextPixel_SetPixel+0xe6>
 8013158:	6959      	ldr	r1, [r3, #20]
 801315a:	f821 0b02 	strh.w	r0, [r1], #2
 801315e:	e002      	b.n	8013166 <_NextPixel_SetPixel+0xe6>
 8013160:	6959      	ldr	r1, [r3, #20]
 8013162:	f841 0b04 	str.w	r0, [r1], #4
 8013166:	6159      	str	r1, [r3, #20]
 8013168:	4805      	ldr	r0, [pc, #20]	; (8013180 <_NextPixel_SetPixel+0x100>)
 801316a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801316c:	6a01      	ldr	r1, [r0, #32]
 801316e:	1c5a      	adds	r2, r3, #1
 8013170:	428a      	cmp	r2, r1
 8013172:	6242      	str	r2, [r0, #36]	; 0x24
 8013174:	d103      	bne.n	801317e <_NextPixel_SetPixel+0xfe>
 8013176:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801317a:	f7ff bf59 	b.w	8013030 <_NextPixel_FlushBuffer>
 801317e:	bd30      	pop	{r4, r5, pc}
 8013180:	2000d9ec 	.word	0x2000d9ec

08013184 <_NextPixel_NextLine>:
 8013184:	b510      	push	{r4, lr}
 8013186:	4c05      	ldr	r4, [pc, #20]	; (801319c <_NextPixel_NextLine+0x18>)
 8013188:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801318a:	b10b      	cbz	r3, 8013190 <_NextPixel_NextLine+0xc>
 801318c:	f7ff ff50 	bl	8013030 <_NextPixel_FlushBuffer>
 8013190:	68a1      	ldr	r1, [r4, #8]
 8013192:	6820      	ldr	r0, [r4, #0]
 8013194:	1c4a      	adds	r2, r1, #1
 8013196:	6060      	str	r0, [r4, #4]
 8013198:	60a2      	str	r2, [r4, #8]
 801319a:	bd10      	pop	{r4, pc}
 801319c:	2000d9ec 	.word	0x2000d9ec

080131a0 <_NextPixel_End>:
 80131a0:	4b07      	ldr	r3, [pc, #28]	; (80131c0 <_NextPixel_End+0x20>)
 80131a2:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80131a4:	b510      	push	{r4, lr}
 80131a6:	461c      	mov	r4, r3
 80131a8:	b10a      	cbz	r2, 80131ae <_NextPixel_End+0xe>
 80131aa:	f7ff ff41 	bl	8013030 <_NextPixel_FlushBuffer>
 80131ae:	4805      	ldr	r0, [pc, #20]	; (80131c4 <_NextPixel_End+0x24>)
 80131b0:	f7fb fb9c 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80131b4:	68e0      	ldr	r0, [r4, #12]
 80131b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80131ba:	f7fb bbc3 	b.w	800e944 <GUI_ALLOC_Free>
 80131be:	bf00      	nop
 80131c0:	2000d9ec 	.word	0x2000d9ec
 80131c4:	2000d9fc 	.word	0x2000d9fc

080131c8 <_NextPixel_Start>:
 80131c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80131cc:	4b24      	ldr	r3, [pc, #144]	; (8013260 <_NextPixel_Start+0x98>)
 80131ce:	1a12      	subs	r2, r2, r0
 80131d0:	4607      	mov	r7, r0
 80131d2:	6818      	ldr	r0, [r3, #0]
 80131d4:	7c40      	ldrb	r0, [r0, #17]
 80131d6:	4689      	mov	r9, r1
 80131d8:	f102 0801 	add.w	r8, r2, #1
 80131dc:	f7f8 fdfa 	bl	800bdd4 <GUI_GetBitsPerPixelEx>
 80131e0:	4920      	ldr	r1, [pc, #128]	; (8013264 <_NextPixel_Start+0x9c>)
 80131e2:	2818      	cmp	r0, #24
 80131e4:	bf08      	it	eq
 80131e6:	2020      	moveq	r0, #32
 80131e8:	2808      	cmp	r0, #8
 80131ea:	61c8      	str	r0, [r1, #28]
 80131ec:	dd04      	ble.n	80131f8 <_NextPixel_Start+0x30>
 80131ee:	2810      	cmp	r0, #16
 80131f0:	bfcc      	ite	gt
 80131f2:	2504      	movgt	r5, #4
 80131f4:	2502      	movle	r5, #2
 80131f6:	e000      	b.n	80131fa <_NextPixel_Start+0x32>
 80131f8:	2501      	movs	r5, #1
 80131fa:	f7fb fcbb 	bl	800eb74 <GUI_ALLOC_GetMaxSize>
 80131fe:	fb08 f805 	mul.w	r8, r8, r5
 8013202:	4540      	cmp	r0, r8
 8013204:	d203      	bcs.n	801320e <_NextPixel_Start+0x46>
 8013206:	fbb0 f6f5 	udiv	r6, r0, r5
 801320a:	436e      	muls	r6, r5
 801320c:	e000      	b.n	8013210 <_NextPixel_Start+0x48>
 801320e:	4646      	mov	r6, r8
 8013210:	4c14      	ldr	r4, [pc, #80]	; (8013264 <_NextPixel_Start+0x9c>)
 8013212:	fb96 f2f5 	sdiv	r2, r6, r5
 8013216:	4640      	mov	r0, r8
 8013218:	2600      	movs	r6, #0
 801321a:	6222      	str	r2, [r4, #32]
 801321c:	6266      	str	r6, [r4, #36]	; 0x24
 801321e:	6027      	str	r7, [r4, #0]
 8013220:	6067      	str	r7, [r4, #4]
 8013222:	f8c4 9008 	str.w	r9, [r4, #8]
 8013226:	61a5      	str	r5, [r4, #24]
 8013228:	f7fb fda0 	bl	800ed6c <GUI_ALLOC_AllocNoInit>
 801322c:	60e0      	str	r0, [r4, #12]
 801322e:	b188      	cbz	r0, 8013254 <_NextPixel_Start+0x8c>
 8013230:	f7fb fb4e 	bl	800e8d0 <GUI_ALLOC_LockH>
 8013234:	6120      	str	r0, [r4, #16]
 8013236:	6160      	str	r0, [r4, #20]
 8013238:	69e0      	ldr	r0, [r4, #28]
 801323a:	2807      	cmp	r0, #7
 801323c:	dc0d      	bgt.n	801325a <_NextPixel_Start+0x92>
 801323e:	2101      	movs	r1, #1
 8013240:	4a09      	ldr	r2, [pc, #36]	; (8013268 <_NextPixel_Start+0xa0>)
 8013242:	62e6      	str	r6, [r4, #44]	; 0x2c
 8013244:	fa01 f300 	lsl.w	r3, r1, r0
 8013248:	18d0      	adds	r0, r2, r3
 801324a:	f810 1c01 	ldrb.w	r1, [r0, #-1]
 801324e:	f884 1028 	strb.w	r1, [r4, #40]	; 0x28
 8013252:	e002      	b.n	801325a <_NextPixel_Start+0x92>
 8013254:	2001      	movs	r0, #1
 8013256:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801325a:	4630      	mov	r0, r6
 801325c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8013260:	20000270 	.word	0x20000270
 8013264:	2000d9ec 	.word	0x2000d9ec
 8013268:	0802d044 	.word	0x0802d044

0801326c <LCD_GetNextPixelAPI>:
 801326c:	b507      	push	{r0, r1, r2, lr}
 801326e:	4b09      	ldr	r3, [pc, #36]	; (8013294 <LCD_GetNextPixelAPI+0x28>)
 8013270:	4909      	ldr	r1, [pc, #36]	; (8013298 <LCD_GetNextPixelAPI+0x2c>)
 8013272:	6818      	ldr	r0, [r3, #0]
 8013274:	7c42      	ldrb	r2, [r0, #17]
 8013276:	f851 3022 	ldr.w	r3, [r1, r2, lsl #2]
 801327a:	68d8      	ldr	r0, [r3, #12]
 801327c:	9301      	str	r3, [sp, #4]
 801327e:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8013280:	b90a      	cbnz	r2, 8013286 <LCD_GetNextPixelAPI+0x1a>
 8013282:	4806      	ldr	r0, [pc, #24]	; (801329c <LCD_GetNextPixelAPI+0x30>)
 8013284:	e004      	b.n	8013290 <LCD_GetNextPixelAPI+0x24>
 8013286:	a801      	add	r0, sp, #4
 8013288:	2108      	movs	r1, #8
 801328a:	4790      	blx	r2
 801328c:	2800      	cmp	r0, #0
 801328e:	d0f8      	beq.n	8013282 <LCD_GetNextPixelAPI+0x16>
 8013290:	bd0e      	pop	{r1, r2, r3, pc}
 8013292:	bf00      	nop
 8013294:	20000270 	.word	0x20000270
 8013298:	2000dde0 	.word	0x2000dde0
 801329c:	200002c4 	.word	0x200002c4

080132a0 <LCD_GetNumLayers>:
 80132a0:	b510      	push	{r4, lr}
 80132a2:	2000      	movs	r0, #0
 80132a4:	f7fa fdf0 	bl	800de88 <GUI_DEVICE__GetpDriver>
 80132a8:	1c04      	adds	r4, r0, #0
 80132aa:	bf18      	it	ne
 80132ac:	2401      	movne	r4, #1
 80132ae:	2001      	movs	r0, #1
 80132b0:	f7fa fdea 	bl	800de88 <GUI_DEVICE__GetpDriver>
 80132b4:	b100      	cbz	r0, 80132b8 <LCD_GetNumLayers+0x18>
 80132b6:	3401      	adds	r4, #1
 80132b8:	4620      	mov	r0, r4
 80132ba:	bd10      	pop	{r4, pc}

080132bc <LCD_GetBkColorIndex>:
 80132bc:	4b02      	ldr	r3, [pc, #8]	; (80132c8 <LCD_GetBkColorIndex+0xc>)
 80132be:	6818      	ldr	r0, [r3, #0]
 80132c0:	6b81      	ldr	r1, [r0, #56]	; 0x38
 80132c2:	6808      	ldr	r0, [r1, #0]
 80132c4:	4770      	bx	lr
 80132c6:	bf00      	nop
 80132c8:	20000270 	.word	0x20000270

080132cc <LCD_GetColorIndex>:
 80132cc:	4b02      	ldr	r3, [pc, #8]	; (80132d8 <LCD_GetColorIndex+0xc>)
 80132ce:	6818      	ldr	r0, [r3, #0]
 80132d0:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
 80132d2:	6808      	ldr	r0, [r1, #0]
 80132d4:	4770      	bx	lr
 80132d6:	bf00      	nop
 80132d8:	20000270 	.word	0x20000270

080132dc <_CreateBuffer>:
 80132dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80132de:	6943      	ldr	r3, [r0, #20]
 80132e0:	4605      	mov	r5, r0
 80132e2:	8818      	ldrh	r0, [r3, #0]
 80132e4:	300d      	adds	r0, #13
 80132e6:	0080      	lsls	r0, r0, #2
 80132e8:	460f      	mov	r7, r1
 80132ea:	f7fb fd3f 	bl	800ed6c <GUI_ALLOC_AllocNoInit>
 80132ee:	4606      	mov	r6, r0
 80132f0:	2800      	cmp	r0, #0
 80132f2:	d03d      	beq.n	8013370 <_CreateBuffer+0x94>
 80132f4:	f7fb faec 	bl	800e8d0 <GUI_ALLOC_LockH>
 80132f8:	6829      	ldr	r1, [r5, #0]
 80132fa:	4604      	mov	r4, r0
 80132fc:	6988      	ldr	r0, [r1, #24]
 80132fe:	f7fa fdc3 	bl	800de88 <GUI_DEVICE__GetpDriver>
 8013302:	68c2      	ldr	r2, [r0, #12]
 8013304:	2108      	movs	r1, #8
 8013306:	6a93      	ldr	r3, [r2, #40]	; 0x28
 8013308:	4798      	blx	r3
 801330a:	2802      	cmp	r0, #2
 801330c:	dd0b      	ble.n	8013326 <_CreateBuffer+0x4a>
 801330e:	2804      	cmp	r0, #4
 8013310:	dd06      	ble.n	8013320 <_CreateBuffer+0x44>
 8013312:	2808      	cmp	r0, #8
 8013314:	dd06      	ble.n	8013324 <_CreateBuffer+0x48>
 8013316:	2810      	cmp	r0, #16
 8013318:	bfd4      	ite	le
 801331a:	2010      	movle	r0, #16
 801331c:	2020      	movgt	r0, #32
 801331e:	e002      	b.n	8013326 <_CreateBuffer+0x4a>
 8013320:	2004      	movs	r0, #4
 8013322:	e000      	b.n	8013326 <_CreateBuffer+0x4a>
 8013324:	2008      	movs	r0, #8
 8013326:	2808      	cmp	r0, #8
 8013328:	61a0      	str	r0, [r4, #24]
 801332a:	dd04      	ble.n	8013336 <_CreateBuffer+0x5a>
 801332c:	2810      	cmp	r0, #16
 801332e:	bfcc      	ite	gt
 8013330:	2004      	movgt	r0, #4
 8013332:	2002      	movle	r0, #2
 8013334:	e000      	b.n	8013338 <_CreateBuffer+0x5c>
 8013336:	2001      	movs	r0, #1
 8013338:	6969      	ldr	r1, [r5, #20]
 801333a:	6120      	str	r0, [r4, #16]
 801333c:	880a      	ldrh	r2, [r1, #0]
 801333e:	4350      	muls	r0, r2
 8013340:	61e2      	str	r2, [r4, #28]
 8013342:	6160      	str	r0, [r4, #20]
 8013344:	f7fb fc16 	bl	800eb74 <GUI_ALLOC_GetMaxSize>
 8013348:	6963      	ldr	r3, [r4, #20]
 801334a:	60a6      	str	r6, [r4, #8]
 801334c:	4283      	cmp	r3, r0
 801334e:	bfc8      	it	gt
 8013350:	6160      	strgt	r0, [r4, #20]
 8013352:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8013356:	2000      	movs	r0, #0
 8013358:	2f01      	cmp	r7, #1
 801335a:	6023      	str	r3, [r4, #0]
 801335c:	60e0      	str	r0, [r4, #12]
 801335e:	f884 7030 	strb.w	r7, [r4, #48]	; 0x30
 8013362:	d003      	beq.n	801336c <_CreateBuffer+0x90>
 8013364:	69e1      	ldr	r1, [r4, #28]
 8013366:	1e4a      	subs	r2, r1, #1
 8013368:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801336c:	6063      	str	r3, [r4, #4]
 801336e:	e000      	b.n	8013372 <_CreateBuffer+0x96>
 8013370:	4604      	mov	r4, r0
 8013372:	4620      	mov	r0, r4
 8013374:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08013376 <_FlushBuffer>:
 8013376:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801337a:	460c      	mov	r4, r1
 801337c:	68c9      	ldr	r1, [r1, #12]
 801337e:	b086      	sub	sp, #24
 8013380:	2900      	cmp	r1, #0
 8013382:	d02d      	beq.n	80133e0 <_FlushBuffer+0x6a>
 8013384:	6807      	ldr	r7, [r0, #0]
 8013386:	2f00      	cmp	r7, #0
 8013388:	d02c      	beq.n	80133e4 <_FlushBuffer+0x6e>
 801338a:	f994 3030 	ldrsb.w	r3, [r4, #48]	; 0x30
 801338e:	2b01      	cmp	r3, #1
 8013390:	d104      	bne.n	801339c <_FlushBuffer+0x26>
 8013392:	6825      	ldr	r5, [r4, #0]
 8013394:	f8d4 8028 	ldr.w	r8, [r4, #40]	; 0x28
 8013398:	6065      	str	r5, [r4, #4]
 801339a:	e009      	b.n	80133b0 <_FlushBuffer+0x3a>
 801339c:	69e0      	ldr	r0, [r4, #28]
 801339e:	6866      	ldr	r6, [r4, #4]
 80133a0:	6823      	ldr	r3, [r4, #0]
 80133a2:	f8d4 8020 	ldr.w	r8, [r4, #32]
 80133a6:	1e42      	subs	r2, r0, #1
 80133a8:	1d35      	adds	r5, r6, #4
 80133aa:	eb03 0682 	add.w	r6, r3, r2, lsl #2
 80133ae:	6066      	str	r6, [r4, #4]
 80133b0:	4628      	mov	r0, r5
 80133b2:	69a2      	ldr	r2, [r4, #24]
 80133b4:	f7ff f964 	bl	8012680 <GUI__CompactPixelIndices>
 80133b8:	69a2      	ldr	r2, [r4, #24]
 80133ba:	6963      	ldr	r3, [r4, #20]
 80133bc:	68f9      	ldr	r1, [r7, #12]
 80133be:	9503      	str	r5, [sp, #12]
 80133c0:	2001      	movs	r0, #1
 80133c2:	2500      	movs	r5, #0
 80133c4:	9000      	str	r0, [sp, #0]
 80133c6:	9201      	str	r2, [sp, #4]
 80133c8:	9302      	str	r3, [sp, #8]
 80133ca:	9504      	str	r5, [sp, #16]
 80133cc:	9505      	str	r5, [sp, #20]
 80133ce:	684e      	ldr	r6, [r1, #4]
 80133d0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80133d2:	68e3      	ldr	r3, [r4, #12]
 80133d4:	4638      	mov	r0, r7
 80133d6:	4641      	mov	r1, r8
 80133d8:	47b0      	blx	r6
 80133da:	60e5      	str	r5, [r4, #12]
 80133dc:	4628      	mov	r0, r5
 80133de:	e002      	b.n	80133e6 <_FlushBuffer+0x70>
 80133e0:	4608      	mov	r0, r1
 80133e2:	e000      	b.n	80133e6 <_FlushBuffer+0x70>
 80133e4:	2001      	movs	r0, #1
 80133e6:	b006      	add	sp, #24
 80133e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080133ec <_SetSpriteBkPixel>:
 80133ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80133ee:	9c06      	ldr	r4, [sp, #24]
 80133f0:	460d      	mov	r5, r1
 80133f2:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80133f4:	428d      	cmp	r5, r1
 80133f6:	4606      	mov	r6, r0
 80133f8:	4617      	mov	r7, r2
 80133fa:	d105      	bne.n	8013408 <_SetSpriteBkPixel+0x1c>
 80133fc:	f994 2030 	ldrsb.w	r2, [r4, #48]	; 0x30
 8013400:	6a20      	ldr	r0, [r4, #32]
 8013402:	1811      	adds	r1, r2, r0
 8013404:	428e      	cmp	r6, r1
 8013406:	d003      	beq.n	8013410 <_SetSpriteBkPixel+0x24>
 8013408:	4618      	mov	r0, r3
 801340a:	4621      	mov	r1, r4
 801340c:	f7ff ffb3 	bl	8013376 <_FlushBuffer>
 8013410:	6863      	ldr	r3, [r4, #4]
 8013412:	68e1      	ldr	r1, [r4, #12]
 8013414:	601f      	str	r7, [r3, #0]
 8013416:	f994 2030 	ldrsb.w	r2, [r4, #48]	; 0x30
 801341a:	eb03 0082 	add.w	r0, r3, r2, lsl #2
 801341e:	6060      	str	r0, [r4, #4]
 8013420:	b909      	cbnz	r1, 8013426 <_SetSpriteBkPixel+0x3a>
 8013422:	62a6      	str	r6, [r4, #40]	; 0x28
 8013424:	62e5      	str	r5, [r4, #44]	; 0x2c
 8013426:	1c4b      	adds	r3, r1, #1
 8013428:	60e3      	str	r3, [r4, #12]
 801342a:	6226      	str	r6, [r4, #32]
 801342c:	6265      	str	r5, [r4, #36]	; 0x24
 801342e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08013430 <_ReleaseBuffer>:
 8013430:	b513      	push	{r0, r1, r4, lr}
 8013432:	6800      	ldr	r0, [r0, #0]
 8013434:	9101      	str	r1, [sp, #4]
 8013436:	f7ff ff9e 	bl	8013376 <_FlushBuffer>
 801343a:	a802      	add	r0, sp, #8
 801343c:	f850 2d04 	ldr.w	r2, [r0, #-4]!
 8013440:	6894      	ldr	r4, [r2, #8]
 8013442:	f7fb fa53 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8013446:	4620      	mov	r0, r4
 8013448:	f7fb fa7c 	bl	800e944 <GUI_ALLOC_Free>
 801344c:	bd1c      	pop	{r2, r3, r4, pc}

0801344e <_GetBkPixel>:
 801344e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013452:	f9b3 7004 	ldrsh.w	r7, [r3, #4]
 8013456:	42b8      	cmp	r0, r7
 8013458:	4606      	mov	r6, r0
 801345a:	460d      	mov	r5, r1
 801345c:	4691      	mov	r9, r2
 801345e:	461c      	mov	r4, r3
 8013460:	da04      	bge.n	801346c <_GetBkPixel+0x1e>
 8013462:	f8d9 0000 	ldr.w	r0, [r9]
 8013466:	bb28      	cbnz	r0, 80134b4 <_GetBkPixel+0x66>
 8013468:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801346c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8013470:	4298      	cmp	r0, r3
 8013472:	dcf6      	bgt.n	8013462 <_GetBkPixel+0x14>
 8013474:	f9b4 8006 	ldrsh.w	r8, [r4, #6]
 8013478:	4541      	cmp	r1, r8
 801347a:	dbf2      	blt.n	8013462 <_GetBkPixel+0x14>
 801347c:	f9b4 000a 	ldrsh.w	r0, [r4, #10]
 8013480:	4281      	cmp	r1, r0
 8013482:	dcee      	bgt.n	8013462 <_GetBkPixel+0x14>
 8013484:	ebc8 0801 	rsb	r8, r8, r1
 8013488:	1bf7      	subs	r7, r6, r7
 801348a:	6960      	ldr	r0, [r4, #20]
 801348c:	4639      	mov	r1, r7
 801348e:	4642      	mov	r2, r8
 8013490:	f000 f9f6 	bl	8013880 <GUI_GetBitmapPixelIndex>
 8013494:	2800      	cmp	r0, #0
 8013496:	d0e4      	beq.n	8013462 <_GetBkPixel+0x14>
 8013498:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 801349c:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80134a0:	1a88      	subs	r0, r1, r2
 80134a2:	1c41      	adds	r1, r0, #1
 80134a4:	f104 0320 	add.w	r3, r4, #32
 80134a8:	fb08 7701 	mla	r7, r8, r1, r7
 80134ac:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 80134b0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80134b4:	68c3      	ldr	r3, [r0, #12]
 80134b6:	4631      	mov	r1, r6
 80134b8:	695b      	ldr	r3, [r3, #20]
 80134ba:	462a      	mov	r2, r5
 80134bc:	4798      	blx	r3
 80134be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	...

080134c4 <_GetDeviceRect>:
 80134c4:	b538      	push	{r3, r4, r5, lr}
 80134c6:	4a0c      	ldr	r2, [pc, #48]	; (80134f8 <_GetDeviceRect+0x34>)
 80134c8:	6983      	ldr	r3, [r0, #24]
 80134ca:	56d2      	ldrsb	r2, [r2, r3]
 80134cc:	2a01      	cmp	r2, #1
 80134ce:	4605      	mov	r5, r0
 80134d0:	460c      	mov	r4, r1
 80134d2:	dd0d      	ble.n	80134f0 <_GetDeviceRect+0x2c>
 80134d4:	2000      	movs	r0, #0
 80134d6:	8048      	strh	r0, [r1, #2]
 80134d8:	8008      	strh	r0, [r1, #0]
 80134da:	4618      	mov	r0, r3
 80134dc:	f7f8 fc4f 	bl	800bd7e <LCD_GetXSizeEx>
 80134e0:	1e41      	subs	r1, r0, #1
 80134e2:	80a1      	strh	r1, [r4, #4]
 80134e4:	69a8      	ldr	r0, [r5, #24]
 80134e6:	f7f8 fc4d 	bl	800bd84 <LCD_GetYSizeEx>
 80134ea:	1e43      	subs	r3, r0, #1
 80134ec:	80e3      	strh	r3, [r4, #6]
 80134ee:	bd38      	pop	{r3, r4, r5, pc}
 80134f0:	68c3      	ldr	r3, [r0, #12]
 80134f2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80134f4:	4790      	blx	r2
 80134f6:	bd38      	pop	{r3, r4, r5, pc}
 80134f8:	2000ddbc 	.word	0x2000ddbc

080134fc <GUI_SPRITE_SetPosition>:
 80134fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013500:	b0a5      	sub	sp, #148	; 0x94
 8013502:	910b      	str	r1, [sp, #44]	; 0x2c
 8013504:	920c      	str	r2, [sp, #48]	; 0x30
 8013506:	2800      	cmp	r0, #0
 8013508:	f000 8172 	beq.w	80137f0 <GUI_SPRITE_SetPosition+0x2f4>
 801350c:	f7fb f9e0 	bl	800e8d0 <GUI_ALLOC_LockH>
 8013510:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013512:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8013516:	6801      	ldr	r1, [r0, #0]
 8013518:	9021      	str	r0, [sp, #132]	; 0x84
 801351a:	429a      	cmp	r2, r3
 801351c:	9104      	str	r1, [sp, #16]
 801351e:	d106      	bne.n	801352e <GUI_SPRITE_SetPosition+0x32>
 8013520:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8013524:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
 8013528:	4586      	cmp	lr, r0
 801352a:	f000 8149 	beq.w	80137c0 <GUI_SPRITE_SetPosition+0x2c4>
 801352e:	2000      	movs	r0, #0
 8013530:	f7f7 fad0 	bl	800aad4 <GUI_MEMDEV_Select>
 8013534:	49ad      	ldr	r1, [pc, #692]	; (80137ec <GUI_SPRITE_SetPosition+0x2f0>)
 8013536:	9d04      	ldr	r5, [sp, #16]
 8013538:	680b      	ldr	r3, [r1, #0]
 801353a:	69af      	ldr	r7, [r5, #24]
 801353c:	7c5a      	ldrb	r2, [r3, #17]
 801353e:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8013540:	901b      	str	r0, [sp, #108]	; 0x6c
 8013542:	4297      	cmp	r7, r2
 8013544:	bf18      	it	ne
 8013546:	745f      	strbne	r7, [r3, #17]
 8013548:	f9b5 0008 	ldrsh.w	r0, [r5, #8]
 801354c:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8013550:	970d      	str	r7, [sp, #52]	; 0x34
 8013552:	920e      	str	r2, [sp, #56]	; 0x38
 8013554:	f9b5 7006 	ldrsh.w	r7, [r5, #6]
 8013558:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 801355c:	ebc2 0b00 	rsb	fp, r2, r0
 8013560:	1bd8      	subs	r0, r3, r7
 8013562:	8a2b      	ldrh	r3, [r5, #16]
 8013564:	9005      	str	r0, [sp, #20]
 8013566:	f10b 0101 	add.w	r1, fp, #1
 801356a:	9107      	str	r1, [sp, #28]
 801356c:	1c41      	adds	r1, r0, #1
 801356e:	f003 0002 	and.w	r0, r3, #2
 8013572:	9114      	str	r1, [sp, #80]	; 0x50
 8013574:	b281      	uxth	r1, r0
 8013576:	920f      	str	r2, [sp, #60]	; 0x3c
 8013578:	2900      	cmp	r1, #0
 801357a:	f000 8105 	beq.w	8013788 <GUI_SPRITE_SetPosition+0x28c>
 801357e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013580:	696c      	ldr	r4, [r5, #20]
 8013582:	ebc2 0903 	rsb	r9, r2, r3
 8013586:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8013588:	9415      	str	r4, [sp, #84]	; 0x54
 801358a:	f1b9 0f00 	cmp.w	r9, #0
 801358e:	ebc7 0a02 	rsb	sl, r7, r2
 8013592:	dc09      	bgt.n	80135a8 <GUI_SPRITE_SetPosition+0xac>
 8013594:	2000      	movs	r0, #0
 8013596:	f04f 38ff 	mov.w	r8, #4294967295
 801359a:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 801359e:	901a      	str	r0, [sp, #104]	; 0x68
 80135a0:	44cb      	add	fp, r9
 80135a2:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
 80135a6:	e007      	b.n	80135b8 <GUI_SPRITE_SetPosition+0xbc>
 80135a8:	9907      	ldr	r1, [sp, #28]
 80135aa:	f8cd 9068 	str.w	r9, [sp, #104]	; 0x68
 80135ae:	2400      	movs	r4, #0
 80135b0:	9111      	str	r1, [sp, #68]	; 0x44
 80135b2:	f04f 0801 	mov.w	r8, #1
 80135b6:	9409      	str	r4, [sp, #36]	; 0x24
 80135b8:	f1ba 0f00 	cmp.w	sl, #0
 80135bc:	dc0c      	bgt.n	80135d8 <GUI_SPRITE_SetPosition+0xdc>
 80135be:	9c05      	ldr	r4, [sp, #20]
 80135c0:	f04f 3cff 	mov.w	ip, #4294967295
 80135c4:	eb04 020a 	add.w	r2, r4, sl
 80135c8:	2000      	movs	r0, #0
 80135ca:	9205      	str	r2, [sp, #20]
 80135cc:	9018      	str	r0, [sp, #96]	; 0x60
 80135ce:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
 80135d2:	f8cd c020 	str.w	ip, [sp, #32]
 80135d6:	e006      	b.n	80135e6 <GUI_SPRITE_SetPosition+0xea>
 80135d8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80135da:	f8cd a060 	str.w	sl, [sp, #96]	; 0x60
 80135de:	2301      	movs	r3, #1
 80135e0:	9412      	str	r4, [sp, #72]	; 0x48
 80135e2:	9308      	str	r3, [sp, #32]
 80135e4:	2400      	movs	r4, #0
 80135e6:	68e8      	ldr	r0, [r5, #12]
 80135e8:	f7fb f972 	bl	800e8d0 <GUI_ALLOC_LockH>
 80135ec:	a922      	add	r1, sp, #136	; 0x88
 80135ee:	9020      	str	r0, [sp, #128]	; 0x80
 80135f0:	9804      	ldr	r0, [sp, #16]
 80135f2:	f7ff ff67 	bl	80134c4 <_GetDeviceRect>
 80135f6:	4641      	mov	r1, r8
 80135f8:	9821      	ldr	r0, [sp, #132]	; 0x84
 80135fa:	f7ff fe6f 	bl	80132dc <_CreateBuffer>
 80135fe:	4641      	mov	r1, r8
 8013600:	9016      	str	r0, [sp, #88]	; 0x58
 8013602:	9821      	ldr	r0, [sp, #132]	; 0x84
 8013604:	f7ff fe6a 	bl	80132dc <_CreateBuffer>
 8013608:	9a08      	ldr	r2, [sp, #32]
 801360a:	9017      	str	r0, [sp, #92]	; 0x5c
 801360c:	9807      	ldr	r0, [sp, #28]
 801360e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013610:	4342      	muls	r2, r0
 8013612:	0091      	lsls	r1, r2, #2
 8013614:	fb00 3204 	mla	r2, r0, r4, r3
 8013618:	911f      	str	r1, [sp, #124]	; 0x7c
 801361a:	eb05 0082 	add.w	r0, r5, r2, lsl #2
 801361e:	193f      	adds	r7, r7, r4
 8013620:	ea4f 0188 	mov.w	r1, r8, lsl #2
 8013624:	9010      	str	r0, [sp, #64]	; 0x40
 8013626:	4457      	add	r7, sl
 8013628:	911e      	str	r1, [sp, #120]	; 0x78
 801362a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801362c:	429c      	cmp	r4, r3
 801362e:	f000 80a0 	beq.w	8013772 <GUI_SPRITE_SetPosition+0x276>
 8013632:	9e18      	ldr	r6, [sp, #96]	; 0x60
 8013634:	42b4      	cmp	r4, r6
 8013636:	db06      	blt.n	8013646 <GUI_SPRITE_SetPosition+0x14a>
 8013638:	f8dd e014 	ldr.w	lr, [sp, #20]
 801363c:	4574      	cmp	r4, lr
 801363e:	bfcc      	ite	gt
 8013640:	2600      	movgt	r6, #0
 8013642:	2601      	movle	r6, #1
 8013644:	e000      	b.n	8013648 <GUI_SPRITE_SetPosition+0x14c>
 8013646:	2600      	movs	r6, #0
 8013648:	b2f5      	uxtb	r5, r6
 801364a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801364c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801364e:	951c      	str	r5, [sp, #112]	; 0x70
 8013650:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8013652:	ebca 0307 	rsb	r3, sl, r7
 8013656:	1888      	adds	r0, r1, r2
 8013658:	950a      	str	r5, [sp, #40]	; 0x28
 801365a:	9313      	str	r3, [sp, #76]	; 0x4c
 801365c:	eb00 0609 	add.w	r6, r0, r9
 8013660:	4615      	mov	r5, r2
 8013662:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8013666:	4565      	cmp	r5, ip
 8013668:	d07b      	beq.n	8013762 <GUI_SPRITE_SetPosition+0x266>
 801366a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801366c:	4629      	mov	r1, r5
 801366e:	4622      	mov	r2, r4
 8013670:	f000 f906 	bl	8013880 <GUI_GetBitmapPixelIndex>
 8013674:	9019      	str	r0, [sp, #100]	; 0x64
 8013676:	2800      	cmp	r0, #0
 8013678:	d06c      	beq.n	8013754 <GUI_SPRITE_SetPosition+0x258>
 801367a:	f8dd e068 	ldr.w	lr, [sp, #104]	; 0x68
 801367e:	4575      	cmp	r5, lr
 8013680:	ebc9 0c06 	rsb	ip, r9, r6
 8013684:	db04      	blt.n	8013690 <GUI_SPRITE_SetPosition+0x194>
 8013686:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8013688:	455d      	cmp	r5, fp
 801368a:	bfc8      	it	gt
 801368c:	2300      	movgt	r3, #0
 801368e:	e000      	b.n	8013692 <GUI_SPRITE_SetPosition+0x196>
 8013690:	2300      	movs	r3, #0
 8013692:	f9bd 2088 	ldrsh.w	r2, [sp, #136]	; 0x88
 8013696:	b2d9      	uxtb	r1, r3
 8013698:	4296      	cmp	r6, r2
 801369a:	911d      	str	r1, [sp, #116]	; 0x74
 801369c:	db17      	blt.n	80136ce <GUI_SPRITE_SetPosition+0x1d2>
 801369e:	f9bd 308a 	ldrsh.w	r3, [sp, #138]	; 0x8a
 80136a2:	429f      	cmp	r7, r3
 80136a4:	db16      	blt.n	80136d4 <GUI_SPRITE_SetPosition+0x1d8>
 80136a6:	f9bd 208c 	ldrsh.w	r2, [sp, #140]	; 0x8c
 80136aa:	4296      	cmp	r6, r2
 80136ac:	dc15      	bgt.n	80136da <GUI_SPRITE_SetPosition+0x1de>
 80136ae:	f9bd 308e 	ldrsh.w	r3, [sp, #142]	; 0x8e
 80136b2:	429f      	cmp	r7, r3
 80136b4:	dc14      	bgt.n	80136e0 <GUI_SPRITE_SetPosition+0x1e4>
 80136b6:	4630      	mov	r0, r6
 80136b8:	4639      	mov	r1, r7
 80136ba:	9a04      	ldr	r2, [sp, #16]
 80136bc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80136be:	f8cd c00c 	str.w	ip, [sp, #12]
 80136c2:	f7ff fec4 	bl	801344e <_GetBkPixel>
 80136c6:	f8dd c00c 	ldr.w	ip, [sp, #12]
 80136ca:	9006      	str	r0, [sp, #24]
 80136cc:	e00a      	b.n	80136e4 <GUI_SPRITE_SetPosition+0x1e8>
 80136ce:	2000      	movs	r0, #0
 80136d0:	9006      	str	r0, [sp, #24]
 80136d2:	e007      	b.n	80136e4 <GUI_SPRITE_SetPosition+0x1e8>
 80136d4:	2100      	movs	r1, #0
 80136d6:	9106      	str	r1, [sp, #24]
 80136d8:	e004      	b.n	80136e4 <GUI_SPRITE_SetPosition+0x1e8>
 80136da:	2000      	movs	r0, #0
 80136dc:	9006      	str	r0, [sp, #24]
 80136de:	e001      	b.n	80136e4 <GUI_SPRITE_SetPosition+0x1e8>
 80136e0:	2100      	movs	r1, #0
 80136e2:	9106      	str	r1, [sp, #24]
 80136e4:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80136e6:	b16a      	cbz	r2, 8013704 <GUI_SPRITE_SetPosition+0x208>
 80136e8:	ebb5 0109 	subs.w	r1, r5, r9
 80136ec:	d413      	bmi.n	8013716 <GUI_SPRITE_SetPosition+0x21a>
 80136ee:	ebb4 020a 	subs.w	r2, r4, sl
 80136f2:	d410      	bmi.n	8013716 <GUI_SPRITE_SetPosition+0x21a>
 80136f4:	9815      	ldr	r0, [sp, #84]	; 0x54
 80136f6:	f8cd c00c 	str.w	ip, [sp, #12]
 80136fa:	f000 f8c1 	bl	8013880 <GUI_GetBitmapPixelIndex>
 80136fe:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8013702:	b940      	cbnz	r0, 8013716 <GUI_SPRITE_SetPosition+0x21a>
 8013704:	f9bd 0088 	ldrsh.w	r0, [sp, #136]	; 0x88
 8013708:	4584      	cmp	ip, r0
 801370a:	db04      	blt.n	8013716 <GUI_SPRITE_SetPosition+0x21a>
 801370c:	f9bd 308a 	ldrsh.w	r3, [sp, #138]	; 0x8a
 8013710:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8013712:	4299      	cmp	r1, r3
 8013714:	da58      	bge.n	80137c8 <GUI_SPRITE_SetPosition+0x2cc>
 8013716:	f9bd 1088 	ldrsh.w	r1, [sp, #136]	; 0x88
 801371a:	428e      	cmp	r6, r1
 801371c:	db17      	blt.n	801374e <GUI_SPRITE_SetPosition+0x252>
 801371e:	f9bd 008a 	ldrsh.w	r0, [sp, #138]	; 0x8a
 8013722:	4287      	cmp	r7, r0
 8013724:	db13      	blt.n	801374e <GUI_SPRITE_SetPosition+0x252>
 8013726:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801372a:	429e      	cmp	r6, r3
 801372c:	dc0f      	bgt.n	801374e <GUI_SPRITE_SetPosition+0x252>
 801372e:	f9bd 208e 	ldrsh.w	r2, [sp, #142]	; 0x8e
 8013732:	4297      	cmp	r7, r2
 8013734:	dc0b      	bgt.n	801374e <GUI_SPRITE_SetPosition+0x252>
 8013736:	9916      	ldr	r1, [sp, #88]	; 0x58
 8013738:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801373a:	f8dd e064 	ldr.w	lr, [sp, #100]	; 0x64
 801373e:	9100      	str	r1, [sp, #0]
 8013740:	f853 202e 	ldr.w	r2, [r3, lr, lsl #2]
 8013744:	9b04      	ldr	r3, [sp, #16]
 8013746:	4630      	mov	r0, r6
 8013748:	4639      	mov	r1, r7
 801374a:	f7ff fe4f 	bl	80133ec <_SetSpriteBkPixel>
 801374e:	9806      	ldr	r0, [sp, #24]
 8013750:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013752:	6210      	str	r0, [r2, #32]
 8013754:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013756:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8013758:	18c8      	adds	r0, r1, r3
 801375a:	4445      	add	r5, r8
 801375c:	900a      	str	r0, [sp, #40]	; 0x28
 801375e:	4446      	add	r6, r8
 8013760:	e77f      	b.n	8013662 <GUI_SPRITE_SetPosition+0x166>
 8013762:	9910      	ldr	r1, [sp, #64]	; 0x40
 8013764:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8013766:	9b08      	ldr	r3, [sp, #32]
 8013768:	1888      	adds	r0, r1, r2
 801376a:	18e4      	adds	r4, r4, r3
 801376c:	9010      	str	r0, [sp, #64]	; 0x40
 801376e:	18ff      	adds	r7, r7, r3
 8013770:	e75b      	b.n	801362a <GUI_SPRITE_SetPosition+0x12e>
 8013772:	9821      	ldr	r0, [sp, #132]	; 0x84
 8013774:	9916      	ldr	r1, [sp, #88]	; 0x58
 8013776:	f7ff fe5b 	bl	8013430 <_ReleaseBuffer>
 801377a:	9821      	ldr	r0, [sp, #132]	; 0x84
 801377c:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801377e:	f7ff fe57 	bl	8013430 <_ReleaseBuffer>
 8013782:	a820      	add	r0, sp, #128	; 0x80
 8013784:	f7fb f8b2 	bl	800e8ec <GUI_ALLOC_UnlockH>
 8013788:	f8dd e02c 	ldr.w	lr, [sp, #44]	; 0x2c
 801378c:	9a07      	ldr	r2, [sp, #28]
 801378e:	f8dd c050 	ldr.w	ip, [sp, #80]	; 0x50
 8013792:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8013794:	980c      	ldr	r0, [sp, #48]	; 0x30
 8013796:	f8a3 e004 	strh.w	lr, [r3, #4]
 801379a:	eb0e 0102 	add.w	r1, lr, r2
 801379e:	1e4a      	subs	r2, r1, #1
 80137a0:	f10c 31ff 	add.w	r1, ip, #4294967295
 80137a4:	80d8      	strh	r0, [r3, #6]
 80137a6:	1808      	adds	r0, r1, r0
 80137a8:	811a      	strh	r2, [r3, #8]
 80137aa:	8158      	strh	r0, [r3, #10]
 80137ac:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80137ae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80137b0:	4293      	cmp	r3, r2
 80137b2:	d002      	beq.n	80137ba <GUI_SPRITE_SetPosition+0x2be>
 80137b4:	490d      	ldr	r1, [pc, #52]	; (80137ec <GUI_SPRITE_SetPosition+0x2f0>)
 80137b6:	6808      	ldr	r0, [r1, #0]
 80137b8:	7442      	strb	r2, [r0, #17]
 80137ba:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80137bc:	f7f7 f98a 	bl	800aad4 <GUI_MEMDEV_Select>
 80137c0:	a821      	add	r0, sp, #132	; 0x84
 80137c2:	f7fb f893 	bl	800e8ec <GUI_ALLOC_UnlockH>
 80137c6:	e013      	b.n	80137f0 <GUI_SPRITE_SetPosition+0x2f4>
 80137c8:	f9bd 208c 	ldrsh.w	r2, [sp, #140]	; 0x8c
 80137cc:	4594      	cmp	ip, r2
 80137ce:	dca2      	bgt.n	8013716 <GUI_SPRITE_SetPosition+0x21a>
 80137d0:	f9bd 008e 	ldrsh.w	r0, [sp, #142]	; 0x8e
 80137d4:	4281      	cmp	r1, r0
 80137d6:	dc9e      	bgt.n	8013716 <GUI_SPRITE_SetPosition+0x21a>
 80137d8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80137da:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80137dc:	9300      	str	r3, [sp, #0]
 80137de:	4660      	mov	r0, ip
 80137e0:	6a12      	ldr	r2, [r2, #32]
 80137e2:	9b04      	ldr	r3, [sp, #16]
 80137e4:	f7ff fe02 	bl	80133ec <_SetSpriteBkPixel>
 80137e8:	e795      	b.n	8013716 <GUI_SPRITE_SetPosition+0x21a>
 80137ea:	bf00      	nop
 80137ec:	20000270 	.word	0x20000270
 80137f0:	b025      	add	sp, #148	; 0x94
 80137f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80137f6:	bf00      	nop

080137f8 <GUI_GetBitmapPixelIndexEx>:
 80137f8:	b510      	push	{r4, lr}
 80137fa:	2804      	cmp	r0, #4
 80137fc:	9c02      	ldr	r4, [sp, #8]
 80137fe:	d027      	beq.n	8013850 <GUI_GetBitmapPixelIndexEx+0x58>
 8013800:	dc10      	bgt.n	8013824 <GUI_GetBitmapPixelIndexEx+0x2c>
 8013802:	2801      	cmp	r0, #1
 8013804:	d018      	beq.n	8013838 <GUI_GetBitmapPixelIndexEx+0x40>
 8013806:	2802      	cmp	r0, #2
 8013808:	d138      	bne.n	801387c <GUI_GetBitmapPixelIndexEx+0x84>
 801380a:	0898      	lsrs	r0, r3, #2
 801380c:	fb01 2104 	mla	r1, r1, r4, r2
 8013810:	ea6f 0343 	mvn.w	r3, r3, lsl #1
 8013814:	5c0a      	ldrb	r2, [r1, r0]
 8013816:	f003 0006 	and.w	r0, r3, #6
 801381a:	fa22 f200 	lsr.w	r2, r2, r0
 801381e:	f002 0003 	and.w	r0, r2, #3
 8013822:	bd10      	pop	{r4, pc}
 8013824:	2810      	cmp	r0, #16
 8013826:	d01d      	beq.n	8013864 <GUI_GetBitmapPixelIndexEx+0x6c>
 8013828:	2820      	cmp	r0, #32
 801382a:	d021      	beq.n	8013870 <GUI_GetBitmapPixelIndexEx+0x78>
 801382c:	2808      	cmp	r0, #8
 801382e:	d125      	bne.n	801387c <GUI_GetBitmapPixelIndexEx+0x84>
 8013830:	fb01 2104 	mla	r1, r1, r4, r2
 8013834:	5cc8      	ldrb	r0, [r1, r3]
 8013836:	bd10      	pop	{r4, pc}
 8013838:	08d8      	lsrs	r0, r3, #3
 801383a:	fb01 2104 	mla	r1, r1, r4, r2
 801383e:	43db      	mvns	r3, r3
 8013840:	5c0a      	ldrb	r2, [r1, r0]
 8013842:	f003 0007 	and.w	r0, r3, #7
 8013846:	fa22 f200 	lsr.w	r2, r2, r0
 801384a:	f002 0001 	and.w	r0, r2, #1
 801384e:	bd10      	pop	{r4, pc}
 8013850:	0858      	lsrs	r0, r3, #1
 8013852:	fb01 2204 	mla	r2, r1, r4, r2
 8013856:	07db      	lsls	r3, r3, #31
 8013858:	5c10      	ldrb	r0, [r2, r0]
 801385a:	bf4c      	ite	mi
 801385c:	f000 000f 	andmi.w	r0, r0, #15
 8013860:	0900      	lsrpl	r0, r0, #4
 8013862:	bd10      	pop	{r4, pc}
 8013864:	1049      	asrs	r1, r1, #1
 8013866:	fb01 3004 	mla	r0, r1, r4, r3
 801386a:	f832 0010 	ldrh.w	r0, [r2, r0, lsl #1]
 801386e:	bd10      	pop	{r4, pc}
 8013870:	1088      	asrs	r0, r1, #2
 8013872:	fb00 3304 	mla	r3, r0, r4, r3
 8013876:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801387a:	bd10      	pop	{r4, pc}
 801387c:	2000      	movs	r0, #0
 801387e:	bd10      	pop	{r4, pc}

08013880 <GUI_GetBitmapPixelIndex>:
 8013880:	b513      	push	{r0, r1, r4, lr}
 8013882:	460b      	mov	r3, r1
 8013884:	4604      	mov	r4, r0
 8013886:	b130      	cbz	r0, 8013896 <GUI_GetBitmapPixelIndex+0x16>
 8013888:	88c0      	ldrh	r0, [r0, #6]
 801388a:	88a1      	ldrh	r1, [r4, #4]
 801388c:	9200      	str	r2, [sp, #0]
 801388e:	68a2      	ldr	r2, [r4, #8]
 8013890:	f7ff ffb2 	bl	80137f8 <GUI_GetBitmapPixelIndexEx>
 8013894:	e7ff      	b.n	8013896 <GUI_GetBitmapPixelIndex+0x16>
 8013896:	bd1c      	pop	{r2, r3, r4, pc}

08013898 <GUI_ClearRectEx>:
 8013898:	4603      	mov	r3, r0
 801389a:	f9b0 0000 	ldrsh.w	r0, [r0]
 801389e:	f9b3 1002 	ldrsh.w	r1, [r3, #2]
 80138a2:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 80138a6:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80138aa:	f7fa bbcd 	b.w	800e048 <GUI_ClearRect>

080138ae <GUI_CalcColorDist>:
 80138ae:	b2c2      	uxtb	r2, r0
 80138b0:	b2cb      	uxtb	r3, r1
 80138b2:	b510      	push	{r4, lr}
 80138b4:	1ad4      	subs	r4, r2, r3
 80138b6:	b2a2      	uxth	r2, r4
 80138b8:	b293      	uxth	r3, r2
 80138ba:	041c      	lsls	r4, r3, #16
 80138bc:	d501      	bpl.n	80138c2 <GUI_CalcColorDist+0x14>
 80138be:	4253      	negs	r3, r2
 80138c0:	b29b      	uxth	r3, r3
 80138c2:	fb03 f403 	mul.w	r4, r3, r3
 80138c6:	f3c0 2207 	ubfx	r2, r0, #8, #8
 80138ca:	f3c1 2307 	ubfx	r3, r1, #8, #8
 80138ce:	1ad2      	subs	r2, r2, r3
 80138d0:	b292      	uxth	r2, r2
 80138d2:	b293      	uxth	r3, r2
 80138d4:	f413 4f00 	tst.w	r3, #32768	; 0x8000
 80138d8:	d001      	beq.n	80138de <GUI_CalcColorDist+0x30>
 80138da:	4253      	negs	r3, r2
 80138dc:	b29b      	uxth	r3, r3
 80138de:	0c09      	lsrs	r1, r1, #16
 80138e0:	ebc1 4010 	rsb	r0, r1, r0, lsr #16
 80138e4:	b281      	uxth	r1, r0
 80138e6:	b288      	uxth	r0, r1
 80138e8:	0402      	lsls	r2, r0, #16
 80138ea:	fb03 4303 	mla	r3, r3, r3, r4
 80138ee:	d501      	bpl.n	80138f4 <GUI_CalcColorDist+0x46>
 80138f0:	424a      	negs	r2, r1
 80138f2:	b290      	uxth	r0, r2
 80138f4:	fb00 3000 	mla	r0, r0, r0, r3
 80138f8:	bd10      	pop	{r4, pc}
	...

080138fc <memcmp>:
 80138fc:	2a03      	cmp	r2, #3
 80138fe:	b470      	push	{r4, r5, r6}
 8013900:	d926      	bls.n	8013950 <memcmp+0x54>
 8013902:	ea40 0301 	orr.w	r3, r0, r1
 8013906:	079b      	lsls	r3, r3, #30
 8013908:	d011      	beq.n	801392e <memcmp+0x32>
 801390a:	7804      	ldrb	r4, [r0, #0]
 801390c:	780d      	ldrb	r5, [r1, #0]
 801390e:	42ac      	cmp	r4, r5
 8013910:	d122      	bne.n	8013958 <memcmp+0x5c>
 8013912:	4402      	add	r2, r0
 8013914:	1c43      	adds	r3, r0, #1
 8013916:	e005      	b.n	8013924 <memcmp+0x28>
 8013918:	f813 4b01 	ldrb.w	r4, [r3], #1
 801391c:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 8013920:	42ac      	cmp	r4, r5
 8013922:	d119      	bne.n	8013958 <memcmp+0x5c>
 8013924:	4293      	cmp	r3, r2
 8013926:	d1f7      	bne.n	8013918 <memcmp+0x1c>
 8013928:	2000      	movs	r0, #0
 801392a:	bc70      	pop	{r4, r5, r6}
 801392c:	4770      	bx	lr
 801392e:	460c      	mov	r4, r1
 8013930:	4603      	mov	r3, r0
 8013932:	681e      	ldr	r6, [r3, #0]
 8013934:	6825      	ldr	r5, [r4, #0]
 8013936:	42ae      	cmp	r6, r5
 8013938:	4618      	mov	r0, r3
 801393a:	4621      	mov	r1, r4
 801393c:	f103 0304 	add.w	r3, r3, #4
 8013940:	f104 0404 	add.w	r4, r4, #4
 8013944:	d104      	bne.n	8013950 <memcmp+0x54>
 8013946:	3a04      	subs	r2, #4
 8013948:	2a03      	cmp	r2, #3
 801394a:	4618      	mov	r0, r3
 801394c:	4621      	mov	r1, r4
 801394e:	d8f0      	bhi.n	8013932 <memcmp+0x36>
 8013950:	2a00      	cmp	r2, #0
 8013952:	d1da      	bne.n	801390a <memcmp+0xe>
 8013954:	4610      	mov	r0, r2
 8013956:	e7e8      	b.n	801392a <memcmp+0x2e>
 8013958:	1b60      	subs	r0, r4, r5
 801395a:	bc70      	pop	{r4, r5, r6}
 801395c:	4770      	bx	lr
 801395e:	bf00      	nop

08013960 <memmove>:
 8013960:	4288      	cmp	r0, r1
 8013962:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013964:	d90d      	bls.n	8013982 <memmove+0x22>
 8013966:	188b      	adds	r3, r1, r2
 8013968:	4298      	cmp	r0, r3
 801396a:	d20a      	bcs.n	8013982 <memmove+0x22>
 801396c:	1881      	adds	r1, r0, r2
 801396e:	2a00      	cmp	r2, #0
 8013970:	d054      	beq.n	8013a1c <memmove+0xbc>
 8013972:	1a9a      	subs	r2, r3, r2
 8013974:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8013978:	f801 4d01 	strb.w	r4, [r1, #-1]!
 801397c:	4293      	cmp	r3, r2
 801397e:	d1f9      	bne.n	8013974 <memmove+0x14>
 8013980:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013982:	2a0f      	cmp	r2, #15
 8013984:	d948      	bls.n	8013a18 <memmove+0xb8>
 8013986:	ea40 0301 	orr.w	r3, r0, r1
 801398a:	079b      	lsls	r3, r3, #30
 801398c:	d147      	bne.n	8013a1e <memmove+0xbe>
 801398e:	f100 0410 	add.w	r4, r0, #16
 8013992:	f101 0310 	add.w	r3, r1, #16
 8013996:	4615      	mov	r5, r2
 8013998:	f853 6c10 	ldr.w	r6, [r3, #-16]
 801399c:	f844 6c10 	str.w	r6, [r4, #-16]
 80139a0:	f853 6c0c 	ldr.w	r6, [r3, #-12]
 80139a4:	f844 6c0c 	str.w	r6, [r4, #-12]
 80139a8:	f853 6c08 	ldr.w	r6, [r3, #-8]
 80139ac:	f844 6c08 	str.w	r6, [r4, #-8]
 80139b0:	3d10      	subs	r5, #16
 80139b2:	f853 6c04 	ldr.w	r6, [r3, #-4]
 80139b6:	f844 6c04 	str.w	r6, [r4, #-4]
 80139ba:	2d0f      	cmp	r5, #15
 80139bc:	f103 0310 	add.w	r3, r3, #16
 80139c0:	f104 0410 	add.w	r4, r4, #16
 80139c4:	d8e8      	bhi.n	8013998 <memmove+0x38>
 80139c6:	f1a2 0310 	sub.w	r3, r2, #16
 80139ca:	f023 030f 	bic.w	r3, r3, #15
 80139ce:	f002 0e0f 	and.w	lr, r2, #15
 80139d2:	3310      	adds	r3, #16
 80139d4:	f1be 0f03 	cmp.w	lr, #3
 80139d8:	4419      	add	r1, r3
 80139da:	4403      	add	r3, r0
 80139dc:	d921      	bls.n	8013a22 <memmove+0xc2>
 80139de:	1f1e      	subs	r6, r3, #4
 80139e0:	460d      	mov	r5, r1
 80139e2:	4674      	mov	r4, lr
 80139e4:	3c04      	subs	r4, #4
 80139e6:	f855 7b04 	ldr.w	r7, [r5], #4
 80139ea:	f846 7f04 	str.w	r7, [r6, #4]!
 80139ee:	2c03      	cmp	r4, #3
 80139f0:	d8f8      	bhi.n	80139e4 <memmove+0x84>
 80139f2:	f1ae 0404 	sub.w	r4, lr, #4
 80139f6:	f024 0403 	bic.w	r4, r4, #3
 80139fa:	3404      	adds	r4, #4
 80139fc:	4423      	add	r3, r4
 80139fe:	4421      	add	r1, r4
 8013a00:	f002 0203 	and.w	r2, r2, #3
 8013a04:	b152      	cbz	r2, 8013a1c <memmove+0xbc>
 8013a06:	3b01      	subs	r3, #1
 8013a08:	440a      	add	r2, r1
 8013a0a:	f811 4b01 	ldrb.w	r4, [r1], #1
 8013a0e:	f803 4f01 	strb.w	r4, [r3, #1]!
 8013a12:	4291      	cmp	r1, r2
 8013a14:	d1f9      	bne.n	8013a0a <memmove+0xaa>
 8013a16:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013a18:	4603      	mov	r3, r0
 8013a1a:	e7f3      	b.n	8013a04 <memmove+0xa4>
 8013a1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013a1e:	4603      	mov	r3, r0
 8013a20:	e7f1      	b.n	8013a06 <memmove+0xa6>
 8013a22:	4672      	mov	r2, lr
 8013a24:	e7ee      	b.n	8013a04 <memmove+0xa4>
 8013a26:	bf00      	nop

08013a28 <memset>:
 8013a28:	b470      	push	{r4, r5, r6}
 8013a2a:	0784      	lsls	r4, r0, #30
 8013a2c:	d046      	beq.n	8013abc <memset+0x94>
 8013a2e:	1e54      	subs	r4, r2, #1
 8013a30:	2a00      	cmp	r2, #0
 8013a32:	d041      	beq.n	8013ab8 <memset+0x90>
 8013a34:	b2cd      	uxtb	r5, r1
 8013a36:	4603      	mov	r3, r0
 8013a38:	e002      	b.n	8013a40 <memset+0x18>
 8013a3a:	1e62      	subs	r2, r4, #1
 8013a3c:	b3e4      	cbz	r4, 8013ab8 <memset+0x90>
 8013a3e:	4614      	mov	r4, r2
 8013a40:	f803 5b01 	strb.w	r5, [r3], #1
 8013a44:	079a      	lsls	r2, r3, #30
 8013a46:	d1f8      	bne.n	8013a3a <memset+0x12>
 8013a48:	2c03      	cmp	r4, #3
 8013a4a:	d92e      	bls.n	8013aaa <memset+0x82>
 8013a4c:	b2cd      	uxtb	r5, r1
 8013a4e:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
 8013a52:	2c0f      	cmp	r4, #15
 8013a54:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
 8013a58:	d919      	bls.n	8013a8e <memset+0x66>
 8013a5a:	f103 0210 	add.w	r2, r3, #16
 8013a5e:	4626      	mov	r6, r4
 8013a60:	3e10      	subs	r6, #16
 8013a62:	2e0f      	cmp	r6, #15
 8013a64:	f842 5c10 	str.w	r5, [r2, #-16]
 8013a68:	f842 5c0c 	str.w	r5, [r2, #-12]
 8013a6c:	f842 5c08 	str.w	r5, [r2, #-8]
 8013a70:	f842 5c04 	str.w	r5, [r2, #-4]
 8013a74:	f102 0210 	add.w	r2, r2, #16
 8013a78:	d8f2      	bhi.n	8013a60 <memset+0x38>
 8013a7a:	f1a4 0210 	sub.w	r2, r4, #16
 8013a7e:	f022 020f 	bic.w	r2, r2, #15
 8013a82:	f004 040f 	and.w	r4, r4, #15
 8013a86:	3210      	adds	r2, #16
 8013a88:	2c03      	cmp	r4, #3
 8013a8a:	4413      	add	r3, r2
 8013a8c:	d90d      	bls.n	8013aaa <memset+0x82>
 8013a8e:	461e      	mov	r6, r3
 8013a90:	4622      	mov	r2, r4
 8013a92:	3a04      	subs	r2, #4
 8013a94:	2a03      	cmp	r2, #3
 8013a96:	f846 5b04 	str.w	r5, [r6], #4
 8013a9a:	d8fa      	bhi.n	8013a92 <memset+0x6a>
 8013a9c:	1f22      	subs	r2, r4, #4
 8013a9e:	f022 0203 	bic.w	r2, r2, #3
 8013aa2:	3204      	adds	r2, #4
 8013aa4:	4413      	add	r3, r2
 8013aa6:	f004 0403 	and.w	r4, r4, #3
 8013aaa:	b12c      	cbz	r4, 8013ab8 <memset+0x90>
 8013aac:	b2c9      	uxtb	r1, r1
 8013aae:	441c      	add	r4, r3
 8013ab0:	f803 1b01 	strb.w	r1, [r3], #1
 8013ab4:	42a3      	cmp	r3, r4
 8013ab6:	d1fb      	bne.n	8013ab0 <memset+0x88>
 8013ab8:	bc70      	pop	{r4, r5, r6}
 8013aba:	4770      	bx	lr
 8013abc:	4614      	mov	r4, r2
 8013abe:	4603      	mov	r3, r0
 8013ac0:	e7c2      	b.n	8013a48 <memset+0x20>
 8013ac2:	bf00      	nop

08013ac4 <printf>:
 8013ac4:	b40f      	push	{r0, r1, r2, r3}
 8013ac6:	b500      	push	{lr}
 8013ac8:	4907      	ldr	r1, [pc, #28]	; (8013ae8 <printf+0x24>)
 8013aca:	b083      	sub	sp, #12
 8013acc:	ab04      	add	r3, sp, #16
 8013ace:	6808      	ldr	r0, [r1, #0]
 8013ad0:	f853 2b04 	ldr.w	r2, [r3], #4
 8013ad4:	6881      	ldr	r1, [r0, #8]
 8013ad6:	9301      	str	r3, [sp, #4]
 8013ad8:	f001 fb3a 	bl	8015150 <_vfprintf_r>
 8013adc:	b003      	add	sp, #12
 8013ade:	f85d eb04 	ldr.w	lr, [sp], #4
 8013ae2:	b004      	add	sp, #16
 8013ae4:	4770      	bx	lr
 8013ae6:	bf00      	nop
 8013ae8:	20000700 	.word	0x20000700

08013aec <_puts_r>:
 8013aec:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013aee:	4604      	mov	r4, r0
 8013af0:	b089      	sub	sp, #36	; 0x24
 8013af2:	4608      	mov	r0, r1
 8013af4:	460d      	mov	r5, r1
 8013af6:	f000 f8b3 	bl	8013c60 <strlen>
 8013afa:	68a3      	ldr	r3, [r4, #8]
 8013afc:	4f11      	ldr	r7, [pc, #68]	; (8013b44 <_puts_r+0x58>)
 8013afe:	899a      	ldrh	r2, [r3, #12]
 8013b00:	9504      	str	r5, [sp, #16]
 8013b02:	2102      	movs	r1, #2
 8013b04:	f100 0e01 	add.w	lr, r0, #1
 8013b08:	2601      	movs	r6, #1
 8013b0a:	ad04      	add	r5, sp, #16
 8013b0c:	9102      	str	r1, [sp, #8]
 8013b0e:	0491      	lsls	r1, r2, #18
 8013b10:	9005      	str	r0, [sp, #20]
 8013b12:	f8cd e00c 	str.w	lr, [sp, #12]
 8013b16:	9706      	str	r7, [sp, #24]
 8013b18:	9607      	str	r6, [sp, #28]
 8013b1a:	9501      	str	r5, [sp, #4]
 8013b1c:	d406      	bmi.n	8013b2c <_puts_r+0x40>
 8013b1e:	6e59      	ldr	r1, [r3, #100]	; 0x64
 8013b20:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8013b24:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
 8013b28:	819a      	strh	r2, [r3, #12]
 8013b2a:	6659      	str	r1, [r3, #100]	; 0x64
 8013b2c:	4620      	mov	r0, r4
 8013b2e:	4619      	mov	r1, r3
 8013b30:	aa01      	add	r2, sp, #4
 8013b32:	f003 ffef 	bl	8017b14 <__sfvwrite_r>
 8013b36:	2800      	cmp	r0, #0
 8013b38:	bf14      	ite	ne
 8013b3a:	f04f 30ff 	movne.w	r0, #4294967295
 8013b3e:	200a      	moveq	r0, #10
 8013b40:	b009      	add	sp, #36	; 0x24
 8013b42:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013b44:	0802e46c 	.word	0x0802e46c

08013b48 <puts>:
 8013b48:	4b02      	ldr	r3, [pc, #8]	; (8013b54 <puts+0xc>)
 8013b4a:	4601      	mov	r1, r0
 8013b4c:	6818      	ldr	r0, [r3, #0]
 8013b4e:	f7ff bfcd 	b.w	8013aec <_puts_r>
 8013b52:	bf00      	nop
 8013b54:	20000700 	.word	0x20000700

08013b58 <sprintf>:
 8013b58:	b40e      	push	{r1, r2, r3}
 8013b5a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013b5c:	b09c      	sub	sp, #112	; 0x70
 8013b5e:	ab21      	add	r3, sp, #132	; 0x84
 8013b60:	490f      	ldr	r1, [pc, #60]	; (8013ba0 <sprintf+0x48>)
 8013b62:	f853 2b04 	ldr.w	r2, [r3], #4
 8013b66:	9301      	str	r3, [sp, #4]
 8013b68:	4605      	mov	r5, r0
 8013b6a:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
 8013b6e:	6808      	ldr	r0, [r1, #0]
 8013b70:	9502      	str	r5, [sp, #8]
 8013b72:	f44f 7702 	mov.w	r7, #520	; 0x208
 8013b76:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8013b7a:	a902      	add	r1, sp, #8
 8013b7c:	9506      	str	r5, [sp, #24]
 8013b7e:	f8ad 7014 	strh.w	r7, [sp, #20]
 8013b82:	9404      	str	r4, [sp, #16]
 8013b84:	9407      	str	r4, [sp, #28]
 8013b86:	f8ad 6016 	strh.w	r6, [sp, #22]
 8013b8a:	f000 f897 	bl	8013cbc <_svfprintf_r>
 8013b8e:	9b02      	ldr	r3, [sp, #8]
 8013b90:	2200      	movs	r2, #0
 8013b92:	701a      	strb	r2, [r3, #0]
 8013b94:	b01c      	add	sp, #112	; 0x70
 8013b96:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8013b9a:	b003      	add	sp, #12
 8013b9c:	4770      	bx	lr
 8013b9e:	bf00      	nop
 8013ba0:	20000700 	.word	0x20000700

08013ba4 <strcpy>:
 8013ba4:	ea80 0201 	eor.w	r2, r0, r1
 8013ba8:	4684      	mov	ip, r0
 8013baa:	f012 0f03 	tst.w	r2, #3
 8013bae:	d14f      	bne.n	8013c50 <strcpy+0xac>
 8013bb0:	f011 0f03 	tst.w	r1, #3
 8013bb4:	d132      	bne.n	8013c1c <strcpy+0x78>
 8013bb6:	f84d 4d04 	str.w	r4, [sp, #-4]!
 8013bba:	f011 0f04 	tst.w	r1, #4
 8013bbe:	f851 3b04 	ldr.w	r3, [r1], #4
 8013bc2:	d00b      	beq.n	8013bdc <strcpy+0x38>
 8013bc4:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
 8013bc8:	439a      	bics	r2, r3
 8013bca:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
 8013bce:	bf04      	itt	eq
 8013bd0:	f84c 3b04 	streq.w	r3, [ip], #4
 8013bd4:	f851 3b04 	ldreq.w	r3, [r1], #4
 8013bd8:	d116      	bne.n	8013c08 <strcpy+0x64>
 8013bda:	bf00      	nop
 8013bdc:	f851 4b04 	ldr.w	r4, [r1], #4
 8013be0:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
 8013be4:	439a      	bics	r2, r3
 8013be6:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
 8013bea:	f1a4 3201 	sub.w	r2, r4, #16843009	; 0x1010101
 8013bee:	d10b      	bne.n	8013c08 <strcpy+0x64>
 8013bf0:	f84c 3b04 	str.w	r3, [ip], #4
 8013bf4:	43a2      	bics	r2, r4
 8013bf6:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
 8013bfa:	bf04      	itt	eq
 8013bfc:	f851 3b04 	ldreq.w	r3, [r1], #4
 8013c00:	f84c 4b04 	streq.w	r4, [ip], #4
 8013c04:	d0ea      	beq.n	8013bdc <strcpy+0x38>
 8013c06:	4623      	mov	r3, r4
 8013c08:	f80c 3b01 	strb.w	r3, [ip], #1
 8013c0c:	f013 0fff 	tst.w	r3, #255	; 0xff
 8013c10:	ea4f 2333 	mov.w	r3, r3, ror #8
 8013c14:	d1f8      	bne.n	8013c08 <strcpy+0x64>
 8013c16:	f85d 4b04 	ldr.w	r4, [sp], #4
 8013c1a:	4770      	bx	lr
 8013c1c:	f011 0f01 	tst.w	r1, #1
 8013c20:	d006      	beq.n	8013c30 <strcpy+0x8c>
 8013c22:	f811 2b01 	ldrb.w	r2, [r1], #1
 8013c26:	f80c 2b01 	strb.w	r2, [ip], #1
 8013c2a:	2a00      	cmp	r2, #0
 8013c2c:	bf08      	it	eq
 8013c2e:	4770      	bxeq	lr
 8013c30:	f011 0f02 	tst.w	r1, #2
 8013c34:	d0bf      	beq.n	8013bb6 <strcpy+0x12>
 8013c36:	f831 2b02 	ldrh.w	r2, [r1], #2
 8013c3a:	f012 0fff 	tst.w	r2, #255	; 0xff
 8013c3e:	bf16      	itet	ne
 8013c40:	f82c 2b02 	strhne.w	r2, [ip], #2
 8013c44:	f88c 2000 	strbeq.w	r2, [ip]
 8013c48:	f412 4f7f 	tstne.w	r2, #65280	; 0xff00
 8013c4c:	d1b3      	bne.n	8013bb6 <strcpy+0x12>
 8013c4e:	4770      	bx	lr
 8013c50:	f811 2b01 	ldrb.w	r2, [r1], #1
 8013c54:	f80c 2b01 	strb.w	r2, [ip], #1
 8013c58:	2a00      	cmp	r2, #0
 8013c5a:	d1f9      	bne.n	8013c50 <strcpy+0xac>
 8013c5c:	4770      	bx	lr
 8013c5e:	bf00      	nop

08013c60 <strlen>:
 8013c60:	f020 0103 	bic.w	r1, r0, #3
 8013c64:	f010 0003 	ands.w	r0, r0, #3
 8013c68:	f1c0 0000 	rsb	r0, r0, #0
 8013c6c:	f851 3b04 	ldr.w	r3, [r1], #4
 8013c70:	f100 0c04 	add.w	ip, r0, #4
 8013c74:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013c78:	f06f 0200 	mvn.w	r2, #0
 8013c7c:	bf1c      	itt	ne
 8013c7e:	fa22 f20c 	lsrne.w	r2, r2, ip
 8013c82:	4313      	orrne	r3, r2
 8013c84:	f04f 0c01 	mov.w	ip, #1
 8013c88:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
 8013c8c:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
 8013c90:	eba3 020c 	sub.w	r2, r3, ip
 8013c94:	ea22 0203 	bic.w	r2, r2, r3
 8013c98:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
 8013c9c:	bf04      	itt	eq
 8013c9e:	f851 3b04 	ldreq.w	r3, [r1], #4
 8013ca2:	3004      	addeq	r0, #4
 8013ca4:	d0f4      	beq.n	8013c90 <strlen+0x30>
 8013ca6:	f1c2 0100 	rsb	r1, r2, #0
 8013caa:	ea02 0201 	and.w	r2, r2, r1
 8013cae:	fab2 f282 	clz	r2, r2
 8013cb2:	f1c2 021f 	rsb	r2, r2, #31
 8013cb6:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
 8013cba:	4770      	bx	lr

08013cbc <_svfprintf_r>:
 8013cbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013cc0:	b0c1      	sub	sp, #260	; 0x104
 8013cc2:	4689      	mov	r9, r1
 8013cc4:	920a      	str	r2, [sp, #40]	; 0x28
 8013cc6:	930e      	str	r3, [sp, #56]	; 0x38
 8013cc8:	9008      	str	r0, [sp, #32]
 8013cca:	f004 f8e3 	bl	8017e94 <_localeconv_r>
 8013cce:	6803      	ldr	r3, [r0, #0]
 8013cd0:	9317      	str	r3, [sp, #92]	; 0x5c
 8013cd2:	4618      	mov	r0, r3
 8013cd4:	f7ff ffc4 	bl	8013c60 <strlen>
 8013cd8:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 8013cdc:	9018      	str	r0, [sp, #96]	; 0x60
 8013cde:	061a      	lsls	r2, r3, #24
 8013ce0:	d504      	bpl.n	8013cec <_svfprintf_r+0x30>
 8013ce2:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8013ce6:	2b00      	cmp	r3, #0
 8013ce8:	f001 808c 	beq.w	8014e04 <_svfprintf_r+0x1148>
 8013cec:	2300      	movs	r3, #0
 8013cee:	af30      	add	r7, sp, #192	; 0xc0
 8013cf0:	9313      	str	r3, [sp, #76]	; 0x4c
 8013cf2:	9325      	str	r3, [sp, #148]	; 0x94
 8013cf4:	9324      	str	r3, [sp, #144]	; 0x90
 8013cf6:	9316      	str	r3, [sp, #88]	; 0x58
 8013cf8:	9319      	str	r3, [sp, #100]	; 0x64
 8013cfa:	930b      	str	r3, [sp, #44]	; 0x2c
 8013cfc:	9723      	str	r7, [sp, #140]	; 0x8c
 8013cfe:	9314      	str	r3, [sp, #80]	; 0x50
 8013d00:	9315      	str	r3, [sp, #84]	; 0x54
 8013d02:	463c      	mov	r4, r7
 8013d04:	464e      	mov	r6, r9
 8013d06:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8013d08:	782b      	ldrb	r3, [r5, #0]
 8013d0a:	2b00      	cmp	r3, #0
 8013d0c:	f000 80a9 	beq.w	8013e62 <_svfprintf_r+0x1a6>
 8013d10:	2b25      	cmp	r3, #37	; 0x25
 8013d12:	d102      	bne.n	8013d1a <_svfprintf_r+0x5e>
 8013d14:	e0a5      	b.n	8013e62 <_svfprintf_r+0x1a6>
 8013d16:	2b25      	cmp	r3, #37	; 0x25
 8013d18:	d003      	beq.n	8013d22 <_svfprintf_r+0x66>
 8013d1a:	f815 3f01 	ldrb.w	r3, [r5, #1]!
 8013d1e:	2b00      	cmp	r3, #0
 8013d20:	d1f9      	bne.n	8013d16 <_svfprintf_r+0x5a>
 8013d22:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013d24:	1aeb      	subs	r3, r5, r3
 8013d26:	b173      	cbz	r3, 8013d46 <_svfprintf_r+0x8a>
 8013d28:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8013d2a:	9925      	ldr	r1, [sp, #148]	; 0x94
 8013d2c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8013d2e:	6020      	str	r0, [r4, #0]
 8013d30:	3201      	adds	r2, #1
 8013d32:	4419      	add	r1, r3
 8013d34:	2a07      	cmp	r2, #7
 8013d36:	6063      	str	r3, [r4, #4]
 8013d38:	9125      	str	r1, [sp, #148]	; 0x94
 8013d3a:	9224      	str	r2, [sp, #144]	; 0x90
 8013d3c:	dc72      	bgt.n	8013e24 <_svfprintf_r+0x168>
 8013d3e:	3408      	adds	r4, #8
 8013d40:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013d42:	441a      	add	r2, r3
 8013d44:	920b      	str	r2, [sp, #44]	; 0x2c
 8013d46:	782b      	ldrb	r3, [r5, #0]
 8013d48:	2b00      	cmp	r3, #0
 8013d4a:	f000 87b5 	beq.w	8014cb8 <_svfprintf_r+0xffc>
 8013d4e:	2300      	movs	r3, #0
 8013d50:	1c69      	adds	r1, r5, #1
 8013d52:	786d      	ldrb	r5, [r5, #1]
 8013d54:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8013d58:	461a      	mov	r2, r3
 8013d5a:	930c      	str	r3, [sp, #48]	; 0x30
 8013d5c:	9307      	str	r3, [sp, #28]
 8013d5e:	f04f 3aff 	mov.w	sl, #4294967295
 8013d62:	1c4b      	adds	r3, r1, #1
 8013d64:	f1a5 0120 	sub.w	r1, r5, #32
 8013d68:	2958      	cmp	r1, #88	; 0x58
 8013d6a:	f200 83d9 	bhi.w	8014520 <_svfprintf_r+0x864>
 8013d6e:	e8df f011 	tbh	[pc, r1, lsl #1]
 8013d72:	0270      	.short	0x0270
 8013d74:	03d703d7 	.word	0x03d703d7
 8013d78:	03d70374 	.word	0x03d70374
 8013d7c:	03d703d7 	.word	0x03d703d7
 8013d80:	03d703d7 	.word	0x03d703d7
 8013d84:	02f003d7 	.word	0x02f003d7
 8013d88:	03d7020d 	.word	0x03d7020d
 8013d8c:	021101f4 	.word	0x021101f4
 8013d90:	037b03d7 	.word	0x037b03d7
 8013d94:	02ba02ba 	.word	0x02ba02ba
 8013d98:	02ba02ba 	.word	0x02ba02ba
 8013d9c:	02ba02ba 	.word	0x02ba02ba
 8013da0:	02ba02ba 	.word	0x02ba02ba
 8013da4:	03d702ba 	.word	0x03d702ba
 8013da8:	03d703d7 	.word	0x03d703d7
 8013dac:	03d703d7 	.word	0x03d703d7
 8013db0:	03d703d7 	.word	0x03d703d7
 8013db4:	03d703d7 	.word	0x03d703d7
 8013db8:	02c903d7 	.word	0x02c903d7
 8013dbc:	03d7038b 	.word	0x03d7038b
 8013dc0:	03d7038b 	.word	0x03d7038b
 8013dc4:	03d703d7 	.word	0x03d703d7
 8013dc8:	036d03d7 	.word	0x036d03d7
 8013dcc:	03d703d7 	.word	0x03d703d7
 8013dd0:	03d70305 	.word	0x03d70305
 8013dd4:	03d703d7 	.word	0x03d703d7
 8013dd8:	03d703d7 	.word	0x03d703d7
 8013ddc:	03d70323 	.word	0x03d70323
 8013de0:	033d03d7 	.word	0x033d03d7
 8013de4:	03d703d7 	.word	0x03d703d7
 8013de8:	03d703d7 	.word	0x03d703d7
 8013dec:	03d703d7 	.word	0x03d703d7
 8013df0:	03d703d7 	.word	0x03d703d7
 8013df4:	03d703d7 	.word	0x03d703d7
 8013df8:	022c0358 	.word	0x022c0358
 8013dfc:	038b038b 	.word	0x038b038b
 8013e00:	02fe038b 	.word	0x02fe038b
 8013e04:	03d7022c 	.word	0x03d7022c
 8013e08:	02e603d7 	.word	0x02e603d7
 8013e0c:	027e03d7 	.word	0x027e03d7
 8013e10:	03c001fb 	.word	0x03c001fb
 8013e14:	03d70277 	.word	0x03d70277
 8013e18:	03d70292 	.word	0x03d70292
 8013e1c:	03d7007a 	.word	0x03d7007a
 8013e20:	024a03d7 	.word	0x024a03d7
 8013e24:	9808      	ldr	r0, [sp, #32]
 8013e26:	9307      	str	r3, [sp, #28]
 8013e28:	4631      	mov	r1, r6
 8013e2a:	aa23      	add	r2, sp, #140	; 0x8c
 8013e2c:	f005 f8ec 	bl	8019008 <__ssprint_r>
 8013e30:	b950      	cbnz	r0, 8013e48 <_svfprintf_r+0x18c>
 8013e32:	463c      	mov	r4, r7
 8013e34:	9b07      	ldr	r3, [sp, #28]
 8013e36:	e783      	b.n	8013d40 <_svfprintf_r+0x84>
 8013e38:	9808      	ldr	r0, [sp, #32]
 8013e3a:	4631      	mov	r1, r6
 8013e3c:	aa23      	add	r2, sp, #140	; 0x8c
 8013e3e:	f005 f8e3 	bl	8019008 <__ssprint_r>
 8013e42:	2800      	cmp	r0, #0
 8013e44:	f000 8185 	beq.w	8014152 <_svfprintf_r+0x496>
 8013e48:	46b1      	mov	r9, r6
 8013e4a:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 8013e4e:	f013 0f40 	tst.w	r3, #64	; 0x40
 8013e52:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013e54:	bf18      	it	ne
 8013e56:	f04f 33ff 	movne.w	r3, #4294967295
 8013e5a:	4618      	mov	r0, r3
 8013e5c:	b041      	add	sp, #260	; 0x104
 8013e5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013e62:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8013e64:	e76f      	b.n	8013d46 <_svfprintf_r+0x8a>
 8013e66:	930a      	str	r3, [sp, #40]	; 0x28
 8013e68:	9b07      	ldr	r3, [sp, #28]
 8013e6a:	0698      	lsls	r0, r3, #26
 8013e6c:	f140 82ad 	bpl.w	80143ca <_svfprintf_r+0x70e>
 8013e70:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013e72:	f103 0907 	add.w	r9, r3, #7
 8013e76:	f029 0307 	bic.w	r3, r9, #7
 8013e7a:	f103 0208 	add.w	r2, r3, #8
 8013e7e:	e9d3 8900 	ldrd	r8, r9, [r3]
 8013e82:	920e      	str	r2, [sp, #56]	; 0x38
 8013e84:	2301      	movs	r3, #1
 8013e86:	f04f 0c00 	mov.w	ip, #0
 8013e8a:	f88d c06f 	strb.w	ip, [sp, #111]	; 0x6f
 8013e8e:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
 8013e92:	f1ba 0f00 	cmp.w	sl, #0
 8013e96:	db03      	blt.n	8013ea0 <_svfprintf_r+0x1e4>
 8013e98:	9a07      	ldr	r2, [sp, #28]
 8013e9a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8013e9e:	9207      	str	r2, [sp, #28]
 8013ea0:	ea58 0209 	orrs.w	r2, r8, r9
 8013ea4:	f040 834c 	bne.w	8014540 <_svfprintf_r+0x884>
 8013ea8:	f1ba 0f00 	cmp.w	sl, #0
 8013eac:	f000 8451 	beq.w	8014752 <_svfprintf_r+0xa96>
 8013eb0:	2b01      	cmp	r3, #1
 8013eb2:	f000 834f 	beq.w	8014554 <_svfprintf_r+0x898>
 8013eb6:	2b02      	cmp	r3, #2
 8013eb8:	f000 8490 	beq.w	80147dc <_svfprintf_r+0xb20>
 8013ebc:	4639      	mov	r1, r7
 8013ebe:	ea4f 02d8 	mov.w	r2, r8, lsr #3
 8013ec2:	ea42 7249 	orr.w	r2, r2, r9, lsl #29
 8013ec6:	ea4f 00d9 	mov.w	r0, r9, lsr #3
 8013eca:	f008 0307 	and.w	r3, r8, #7
 8013ece:	4681      	mov	r9, r0
 8013ed0:	4690      	mov	r8, r2
 8013ed2:	3330      	adds	r3, #48	; 0x30
 8013ed4:	ea58 0209 	orrs.w	r2, r8, r9
 8013ed8:	f801 3d01 	strb.w	r3, [r1, #-1]!
 8013edc:	d1ef      	bne.n	8013ebe <_svfprintf_r+0x202>
 8013ede:	9a07      	ldr	r2, [sp, #28]
 8013ee0:	9110      	str	r1, [sp, #64]	; 0x40
 8013ee2:	07d2      	lsls	r2, r2, #31
 8013ee4:	f100 8544 	bmi.w	8014970 <_svfprintf_r+0xcb4>
 8013ee8:	1a7b      	subs	r3, r7, r1
 8013eea:	930d      	str	r3, [sp, #52]	; 0x34
 8013eec:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013eee:	4592      	cmp	sl, r2
 8013ef0:	4653      	mov	r3, sl
 8013ef2:	bfb8      	it	lt
 8013ef4:	4613      	movlt	r3, r2
 8013ef6:	9309      	str	r3, [sp, #36]	; 0x24
 8013ef8:	2300      	movs	r3, #0
 8013efa:	9312      	str	r3, [sp, #72]	; 0x48
 8013efc:	f1bc 0f00 	cmp.w	ip, #0
 8013f00:	d002      	beq.n	8013f08 <_svfprintf_r+0x24c>
 8013f02:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013f04:	3301      	adds	r3, #1
 8013f06:	9309      	str	r3, [sp, #36]	; 0x24
 8013f08:	9b07      	ldr	r3, [sp, #28]
 8013f0a:	f013 0302 	ands.w	r3, r3, #2
 8013f0e:	930f      	str	r3, [sp, #60]	; 0x3c
 8013f10:	d002      	beq.n	8013f18 <_svfprintf_r+0x25c>
 8013f12:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013f14:	3302      	adds	r3, #2
 8013f16:	9309      	str	r3, [sp, #36]	; 0x24
 8013f18:	9b07      	ldr	r3, [sp, #28]
 8013f1a:	f013 0984 	ands.w	r9, r3, #132	; 0x84
 8013f1e:	f040 830c 	bne.w	801453a <_svfprintf_r+0x87e>
 8013f22:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013f24:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013f26:	ebc2 0803 	rsb	r8, r2, r3
 8013f2a:	f1b8 0f00 	cmp.w	r8, #0
 8013f2e:	f340 8304 	ble.w	801453a <_svfprintf_r+0x87e>
 8013f32:	f1b8 0f10 	cmp.w	r8, #16
 8013f36:	9925      	ldr	r1, [sp, #148]	; 0x94
 8013f38:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8013f3a:	f8df a544 	ldr.w	sl, [pc, #1348]	; 8014480 <_svfprintf_r+0x7c4>
 8013f3e:	dd29      	ble.n	8013f94 <_svfprintf_r+0x2d8>
 8013f40:	4653      	mov	r3, sl
 8013f42:	f04f 0b10 	mov.w	fp, #16
 8013f46:	46c2      	mov	sl, r8
 8013f48:	46a8      	mov	r8, r5
 8013f4a:	461d      	mov	r5, r3
 8013f4c:	e006      	b.n	8013f5c <_svfprintf_r+0x2a0>
 8013f4e:	f1aa 0a10 	sub.w	sl, sl, #16
 8013f52:	f1ba 0f10 	cmp.w	sl, #16
 8013f56:	f104 0408 	add.w	r4, r4, #8
 8013f5a:	dd17      	ble.n	8013f8c <_svfprintf_r+0x2d0>
 8013f5c:	3201      	adds	r2, #1
 8013f5e:	3110      	adds	r1, #16
 8013f60:	2a07      	cmp	r2, #7
 8013f62:	9125      	str	r1, [sp, #148]	; 0x94
 8013f64:	9224      	str	r2, [sp, #144]	; 0x90
 8013f66:	e884 0820 	stmia.w	r4, {r5, fp}
 8013f6a:	ddf0      	ble.n	8013f4e <_svfprintf_r+0x292>
 8013f6c:	9808      	ldr	r0, [sp, #32]
 8013f6e:	4631      	mov	r1, r6
 8013f70:	aa23      	add	r2, sp, #140	; 0x8c
 8013f72:	f005 f849 	bl	8019008 <__ssprint_r>
 8013f76:	2800      	cmp	r0, #0
 8013f78:	f47f af66 	bne.w	8013e48 <_svfprintf_r+0x18c>
 8013f7c:	f1aa 0a10 	sub.w	sl, sl, #16
 8013f80:	f1ba 0f10 	cmp.w	sl, #16
 8013f84:	9925      	ldr	r1, [sp, #148]	; 0x94
 8013f86:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8013f88:	463c      	mov	r4, r7
 8013f8a:	dce7      	bgt.n	8013f5c <_svfprintf_r+0x2a0>
 8013f8c:	462b      	mov	r3, r5
 8013f8e:	4645      	mov	r5, r8
 8013f90:	46d0      	mov	r8, sl
 8013f92:	469a      	mov	sl, r3
 8013f94:	3201      	adds	r2, #1
 8013f96:	eb08 0b01 	add.w	fp, r8, r1
 8013f9a:	2a07      	cmp	r2, #7
 8013f9c:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8013fa0:	9224      	str	r2, [sp, #144]	; 0x90
 8013fa2:	f8c4 a000 	str.w	sl, [r4]
 8013fa6:	f8c4 8004 	str.w	r8, [r4, #4]
 8013faa:	f300 847b 	bgt.w	80148a4 <_svfprintf_r+0xbe8>
 8013fae:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
 8013fb2:	3408      	adds	r4, #8
 8013fb4:	f1bc 0f00 	cmp.w	ip, #0
 8013fb8:	d00f      	beq.n	8013fda <_svfprintf_r+0x31e>
 8013fba:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8013fbc:	3301      	adds	r3, #1
 8013fbe:	f10b 0b01 	add.w	fp, fp, #1
 8013fc2:	f10d 016f 	add.w	r1, sp, #111	; 0x6f
 8013fc6:	2201      	movs	r2, #1
 8013fc8:	2b07      	cmp	r3, #7
 8013fca:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8013fce:	9324      	str	r3, [sp, #144]	; 0x90
 8013fd0:	e884 0006 	stmia.w	r4, {r1, r2}
 8013fd4:	f300 83da 	bgt.w	801478c <_svfprintf_r+0xad0>
 8013fd8:	3408      	adds	r4, #8
 8013fda:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013fdc:	b173      	cbz	r3, 8013ffc <_svfprintf_r+0x340>
 8013fde:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8013fe0:	3301      	adds	r3, #1
 8013fe2:	f10b 0b02 	add.w	fp, fp, #2
 8013fe6:	a91c      	add	r1, sp, #112	; 0x70
 8013fe8:	2202      	movs	r2, #2
 8013fea:	2b07      	cmp	r3, #7
 8013fec:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8013ff0:	9324      	str	r3, [sp, #144]	; 0x90
 8013ff2:	e884 0006 	stmia.w	r4, {r1, r2}
 8013ff6:	f300 83d5 	bgt.w	80147a4 <_svfprintf_r+0xae8>
 8013ffa:	3408      	adds	r4, #8
 8013ffc:	f1b9 0f80 	cmp.w	r9, #128	; 0x80
 8014000:	f000 8311 	beq.w	8014626 <_svfprintf_r+0x96a>
 8014004:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014006:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014008:	ebc2 0a03 	rsb	sl, r2, r3
 801400c:	f1ba 0f00 	cmp.w	sl, #0
 8014010:	dd3c      	ble.n	801408c <_svfprintf_r+0x3d0>
 8014012:	f1ba 0f10 	cmp.w	sl, #16
 8014016:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8014018:	f8df 9468 	ldr.w	r9, [pc, #1128]	; 8014484 <_svfprintf_r+0x7c8>
 801401c:	dd2b      	ble.n	8014076 <_svfprintf_r+0x3ba>
 801401e:	4649      	mov	r1, r9
 8014020:	465b      	mov	r3, fp
 8014022:	46a9      	mov	r9, r5
 8014024:	f04f 0810 	mov.w	r8, #16
 8014028:	f8dd b020 	ldr.w	fp, [sp, #32]
 801402c:	460d      	mov	r5, r1
 801402e:	e006      	b.n	801403e <_svfprintf_r+0x382>
 8014030:	f1aa 0a10 	sub.w	sl, sl, #16
 8014034:	f1ba 0f10 	cmp.w	sl, #16
 8014038:	f104 0408 	add.w	r4, r4, #8
 801403c:	dd17      	ble.n	801406e <_svfprintf_r+0x3b2>
 801403e:	3201      	adds	r2, #1
 8014040:	3310      	adds	r3, #16
 8014042:	2a07      	cmp	r2, #7
 8014044:	9325      	str	r3, [sp, #148]	; 0x94
 8014046:	9224      	str	r2, [sp, #144]	; 0x90
 8014048:	e884 0120 	stmia.w	r4, {r5, r8}
 801404c:	ddf0      	ble.n	8014030 <_svfprintf_r+0x374>
 801404e:	4658      	mov	r0, fp
 8014050:	4631      	mov	r1, r6
 8014052:	aa23      	add	r2, sp, #140	; 0x8c
 8014054:	f004 ffd8 	bl	8019008 <__ssprint_r>
 8014058:	2800      	cmp	r0, #0
 801405a:	f47f aef5 	bne.w	8013e48 <_svfprintf_r+0x18c>
 801405e:	f1aa 0a10 	sub.w	sl, sl, #16
 8014062:	f1ba 0f10 	cmp.w	sl, #16
 8014066:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8014068:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801406a:	463c      	mov	r4, r7
 801406c:	dce7      	bgt.n	801403e <_svfprintf_r+0x382>
 801406e:	469b      	mov	fp, r3
 8014070:	462b      	mov	r3, r5
 8014072:	464d      	mov	r5, r9
 8014074:	4699      	mov	r9, r3
 8014076:	3201      	adds	r2, #1
 8014078:	44d3      	add	fp, sl
 801407a:	2a07      	cmp	r2, #7
 801407c:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8014080:	9224      	str	r2, [sp, #144]	; 0x90
 8014082:	e884 0600 	stmia.w	r4, {r9, sl}
 8014086:	f300 8375 	bgt.w	8014774 <_svfprintf_r+0xab8>
 801408a:	3408      	adds	r4, #8
 801408c:	9b07      	ldr	r3, [sp, #28]
 801408e:	05d9      	lsls	r1, r3, #23
 8014090:	f100 826c 	bmi.w	801456c <_svfprintf_r+0x8b0>
 8014094:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014096:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014098:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801409a:	6022      	str	r2, [r4, #0]
 801409c:	3301      	adds	r3, #1
 801409e:	448b      	add	fp, r1
 80140a0:	2b07      	cmp	r3, #7
 80140a2:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 80140a6:	6061      	str	r1, [r4, #4]
 80140a8:	9324      	str	r3, [sp, #144]	; 0x90
 80140aa:	f300 8346 	bgt.w	801473a <_svfprintf_r+0xa7e>
 80140ae:	3408      	adds	r4, #8
 80140b0:	9b07      	ldr	r3, [sp, #28]
 80140b2:	075a      	lsls	r2, r3, #29
 80140b4:	d541      	bpl.n	801413a <_svfprintf_r+0x47e>
 80140b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80140b8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80140ba:	1a9d      	subs	r5, r3, r2
 80140bc:	2d00      	cmp	r5, #0
 80140be:	dd3c      	ble.n	801413a <_svfprintf_r+0x47e>
 80140c0:	2d10      	cmp	r5, #16
 80140c2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80140c4:	f8df a3b8 	ldr.w	sl, [pc, #952]	; 8014480 <_svfprintf_r+0x7c4>
 80140c8:	dd23      	ble.n	8014112 <_svfprintf_r+0x456>
 80140ca:	f04f 0810 	mov.w	r8, #16
 80140ce:	465a      	mov	r2, fp
 80140d0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80140d4:	e004      	b.n	80140e0 <_svfprintf_r+0x424>
 80140d6:	3d10      	subs	r5, #16
 80140d8:	2d10      	cmp	r5, #16
 80140da:	f104 0408 	add.w	r4, r4, #8
 80140de:	dd17      	ble.n	8014110 <_svfprintf_r+0x454>
 80140e0:	3301      	adds	r3, #1
 80140e2:	3210      	adds	r2, #16
 80140e4:	2b07      	cmp	r3, #7
 80140e6:	9225      	str	r2, [sp, #148]	; 0x94
 80140e8:	9324      	str	r3, [sp, #144]	; 0x90
 80140ea:	f8c4 a000 	str.w	sl, [r4]
 80140ee:	f8c4 8004 	str.w	r8, [r4, #4]
 80140f2:	ddf0      	ble.n	80140d6 <_svfprintf_r+0x41a>
 80140f4:	4648      	mov	r0, r9
 80140f6:	4631      	mov	r1, r6
 80140f8:	aa23      	add	r2, sp, #140	; 0x8c
 80140fa:	f004 ff85 	bl	8019008 <__ssprint_r>
 80140fe:	2800      	cmp	r0, #0
 8014100:	f47f aea2 	bne.w	8013e48 <_svfprintf_r+0x18c>
 8014104:	3d10      	subs	r5, #16
 8014106:	2d10      	cmp	r5, #16
 8014108:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801410a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801410c:	463c      	mov	r4, r7
 801410e:	dce7      	bgt.n	80140e0 <_svfprintf_r+0x424>
 8014110:	4693      	mov	fp, r2
 8014112:	3301      	adds	r3, #1
 8014114:	44ab      	add	fp, r5
 8014116:	2b07      	cmp	r3, #7
 8014118:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 801411c:	9324      	str	r3, [sp, #144]	; 0x90
 801411e:	f8c4 a000 	str.w	sl, [r4]
 8014122:	6065      	str	r5, [r4, #4]
 8014124:	dd09      	ble.n	801413a <_svfprintf_r+0x47e>
 8014126:	9808      	ldr	r0, [sp, #32]
 8014128:	4631      	mov	r1, r6
 801412a:	aa23      	add	r2, sp, #140	; 0x8c
 801412c:	f004 ff6c 	bl	8019008 <__ssprint_r>
 8014130:	2800      	cmp	r0, #0
 8014132:	f47f ae89 	bne.w	8013e48 <_svfprintf_r+0x18c>
 8014136:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 801413a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801413c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801413e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014140:	428a      	cmp	r2, r1
 8014142:	bfac      	ite	ge
 8014144:	189b      	addge	r3, r3, r2
 8014146:	185b      	addlt	r3, r3, r1
 8014148:	930b      	str	r3, [sp, #44]	; 0x2c
 801414a:	f1bb 0f00 	cmp.w	fp, #0
 801414e:	f47f ae73 	bne.w	8013e38 <_svfprintf_r+0x17c>
 8014152:	2300      	movs	r3, #0
 8014154:	9324      	str	r3, [sp, #144]	; 0x90
 8014156:	463c      	mov	r4, r7
 8014158:	e5d5      	b.n	8013d06 <_svfprintf_r+0x4a>
 801415a:	4619      	mov	r1, r3
 801415c:	9807      	ldr	r0, [sp, #28]
 801415e:	781d      	ldrb	r5, [r3, #0]
 8014160:	f040 0004 	orr.w	r0, r0, #4
 8014164:	9007      	str	r0, [sp, #28]
 8014166:	e5fc      	b.n	8013d62 <_svfprintf_r+0xa6>
 8014168:	930a      	str	r3, [sp, #40]	; 0x28
 801416a:	9b07      	ldr	r3, [sp, #28]
 801416c:	f013 0320 	ands.w	r3, r3, #32
 8014170:	f000 810e 	beq.w	8014390 <_svfprintf_r+0x6d4>
 8014174:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014176:	f103 0907 	add.w	r9, r3, #7
 801417a:	f029 0307 	bic.w	r3, r9, #7
 801417e:	f103 0208 	add.w	r2, r3, #8
 8014182:	e9d3 8900 	ldrd	r8, r9, [r3]
 8014186:	920e      	str	r2, [sp, #56]	; 0x38
 8014188:	2300      	movs	r3, #0
 801418a:	e67c      	b.n	8013e86 <_svfprintf_r+0x1ca>
 801418c:	781d      	ldrb	r5, [r3, #0]
 801418e:	4619      	mov	r1, r3
 8014190:	222b      	movs	r2, #43	; 0x2b
 8014192:	e5e6      	b.n	8013d62 <_svfprintf_r+0xa6>
 8014194:	781d      	ldrb	r5, [r3, #0]
 8014196:	2d2a      	cmp	r5, #42	; 0x2a
 8014198:	f103 0101 	add.w	r1, r3, #1
 801419c:	f000 87ad 	beq.w	80150fa <_svfprintf_r+0x143e>
 80141a0:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
 80141a4:	2809      	cmp	r0, #9
 80141a6:	460b      	mov	r3, r1
 80141a8:	f04f 0a00 	mov.w	sl, #0
 80141ac:	f63f adda 	bhi.w	8013d64 <_svfprintf_r+0xa8>
 80141b0:	f813 5b01 	ldrb.w	r5, [r3], #1
 80141b4:	eb0a 0a8a 	add.w	sl, sl, sl, lsl #2
 80141b8:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 80141bc:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
 80141c0:	2809      	cmp	r0, #9
 80141c2:	d9f5      	bls.n	80141b0 <_svfprintf_r+0x4f4>
 80141c4:	ea4a 7aea 	orr.w	sl, sl, sl, asr #31
 80141c8:	e5cc      	b.n	8013d64 <_svfprintf_r+0xa8>
 80141ca:	930a      	str	r3, [sp, #40]	; 0x28
 80141cc:	9b07      	ldr	r3, [sp, #28]
 80141ce:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
 80141d2:	069b      	lsls	r3, r3, #26
 80141d4:	f140 80a1 	bpl.w	801431a <_svfprintf_r+0x65e>
 80141d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80141da:	f103 0907 	add.w	r9, r3, #7
 80141de:	f029 0907 	bic.w	r9, r9, #7
 80141e2:	e9d9 2300 	ldrd	r2, r3, [r9]
 80141e6:	f109 0108 	add.w	r1, r9, #8
 80141ea:	910e      	str	r1, [sp, #56]	; 0x38
 80141ec:	4690      	mov	r8, r2
 80141ee:	4699      	mov	r9, r3
 80141f0:	2a00      	cmp	r2, #0
 80141f2:	f173 0300 	sbcs.w	r3, r3, #0
 80141f6:	f2c0 840b 	blt.w	8014a10 <_svfprintf_r+0xd54>
 80141fa:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
 80141fe:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
 8014202:	2301      	movs	r3, #1
 8014204:	e645      	b.n	8013e92 <_svfprintf_r+0x1d6>
 8014206:	930a      	str	r3, [sp, #40]	; 0x28
 8014208:	4b9b      	ldr	r3, [pc, #620]	; (8014478 <_svfprintf_r+0x7bc>)
 801420a:	9316      	str	r3, [sp, #88]	; 0x58
 801420c:	9b07      	ldr	r3, [sp, #28]
 801420e:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
 8014212:	069b      	lsls	r3, r3, #26
 8014214:	f140 80f3 	bpl.w	80143fe <_svfprintf_r+0x742>
 8014218:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801421a:	f103 0907 	add.w	r9, r3, #7
 801421e:	f029 0307 	bic.w	r3, r9, #7
 8014222:	e9d3 8900 	ldrd	r8, r9, [r3]
 8014226:	f103 0208 	add.w	r2, r3, #8
 801422a:	920e      	str	r2, [sp, #56]	; 0x38
 801422c:	9b07      	ldr	r3, [sp, #28]
 801422e:	07d9      	lsls	r1, r3, #31
 8014230:	f140 80f5 	bpl.w	801441e <_svfprintf_r+0x762>
 8014234:	ea58 0309 	orrs.w	r3, r8, r9
 8014238:	f000 80f1 	beq.w	801441e <_svfprintf_r+0x762>
 801423c:	9a07      	ldr	r2, [sp, #28]
 801423e:	f88d 5071 	strb.w	r5, [sp, #113]	; 0x71
 8014242:	2330      	movs	r3, #48	; 0x30
 8014244:	f042 0202 	orr.w	r2, r2, #2
 8014248:	f88d 3070 	strb.w	r3, [sp, #112]	; 0x70
 801424c:	9207      	str	r2, [sp, #28]
 801424e:	2302      	movs	r3, #2
 8014250:	e619      	b.n	8013e86 <_svfprintf_r+0x1ca>
 8014252:	781d      	ldrb	r5, [r3, #0]
 8014254:	4619      	mov	r1, r3
 8014256:	2a00      	cmp	r2, #0
 8014258:	f47f ad83 	bne.w	8013d62 <_svfprintf_r+0xa6>
 801425c:	2220      	movs	r2, #32
 801425e:	e580      	b.n	8013d62 <_svfprintf_r+0xa6>
 8014260:	9907      	ldr	r1, [sp, #28]
 8014262:	f041 0120 	orr.w	r1, r1, #32
 8014266:	9107      	str	r1, [sp, #28]
 8014268:	781d      	ldrb	r5, [r3, #0]
 801426a:	4619      	mov	r1, r3
 801426c:	e579      	b.n	8013d62 <_svfprintf_r+0xa6>
 801426e:	930a      	str	r3, [sp, #40]	; 0x28
 8014270:	9b07      	ldr	r3, [sp, #28]
 8014272:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
 8014276:	069a      	lsls	r2, r3, #26
 8014278:	f140 84a1 	bpl.w	8014bbe <_svfprintf_r+0xf02>
 801427c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801427e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014280:	ea4f 79e1 	mov.w	r9, r1, asr #31
 8014284:	6813      	ldr	r3, [r2, #0]
 8014286:	4608      	mov	r0, r1
 8014288:	4688      	mov	r8, r1
 801428a:	3204      	adds	r2, #4
 801428c:	4649      	mov	r1, r9
 801428e:	920e      	str	r2, [sp, #56]	; 0x38
 8014290:	e9c3 0100 	strd	r0, r1, [r3]
 8014294:	e537      	b.n	8013d06 <_svfprintf_r+0x4a>
 8014296:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014298:	930a      	str	r3, [sp, #40]	; 0x28
 801429a:	6813      	ldr	r3, [r2, #0]
 801429c:	9310      	str	r3, [sp, #64]	; 0x40
 801429e:	f04f 0b00 	mov.w	fp, #0
 80142a2:	f88d b06f 	strb.w	fp, [sp, #111]	; 0x6f
 80142a6:	f102 0904 	add.w	r9, r2, #4
 80142aa:	2b00      	cmp	r3, #0
 80142ac:	f000 863b 	beq.w	8014f26 <_svfprintf_r+0x126a>
 80142b0:	f1ba 0f00 	cmp.w	sl, #0
 80142b4:	9810      	ldr	r0, [sp, #64]	; 0x40
 80142b6:	f2c0 85e9 	blt.w	8014e8c <_svfprintf_r+0x11d0>
 80142ba:	4659      	mov	r1, fp
 80142bc:	4652      	mov	r2, sl
 80142be:	f004 f8eb 	bl	8018498 <memchr>
 80142c2:	2800      	cmp	r0, #0
 80142c4:	f000 866c 	beq.w	8014fa0 <_svfprintf_r+0x12e4>
 80142c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80142ca:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
 80142ce:	1ac3      	subs	r3, r0, r3
 80142d0:	930d      	str	r3, [sp, #52]	; 0x34
 80142d2:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80142d6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80142da:	9309      	str	r3, [sp, #36]	; 0x24
 80142dc:	f8cd b048 	str.w	fp, [sp, #72]	; 0x48
 80142e0:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
 80142e4:	e60a      	b.n	8013efc <_svfprintf_r+0x240>
 80142e6:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
 80142ea:	2100      	movs	r1, #0
 80142ec:	f813 5b01 	ldrb.w	r5, [r3], #1
 80142f0:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 80142f4:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80142f8:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
 80142fc:	2809      	cmp	r0, #9
 80142fe:	d9f5      	bls.n	80142ec <_svfprintf_r+0x630>
 8014300:	910c      	str	r1, [sp, #48]	; 0x30
 8014302:	e52f      	b.n	8013d64 <_svfprintf_r+0xa8>
 8014304:	930a      	str	r3, [sp, #40]	; 0x28
 8014306:	9b07      	ldr	r3, [sp, #28]
 8014308:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
 801430c:	f043 0310 	orr.w	r3, r3, #16
 8014310:	9307      	str	r3, [sp, #28]
 8014312:	9b07      	ldr	r3, [sp, #28]
 8014314:	069b      	lsls	r3, r3, #26
 8014316:	f53f af5f 	bmi.w	80141d8 <_svfprintf_r+0x51c>
 801431a:	9b07      	ldr	r3, [sp, #28]
 801431c:	06d8      	lsls	r0, r3, #27
 801431e:	f100 8368 	bmi.w	80149f2 <_svfprintf_r+0xd36>
 8014322:	9b07      	ldr	r3, [sp, #28]
 8014324:	0659      	lsls	r1, r3, #25
 8014326:	f140 8364 	bpl.w	80149f2 <_svfprintf_r+0xd36>
 801432a:	990e      	ldr	r1, [sp, #56]	; 0x38
 801432c:	f9b1 8000 	ldrsh.w	r8, [r1]
 8014330:	3104      	adds	r1, #4
 8014332:	ea4f 79e8 	mov.w	r9, r8, asr #31
 8014336:	4642      	mov	r2, r8
 8014338:	464b      	mov	r3, r9
 801433a:	910e      	str	r1, [sp, #56]	; 0x38
 801433c:	e758      	b.n	80141f0 <_svfprintf_r+0x534>
 801433e:	781d      	ldrb	r5, [r3, #0]
 8014340:	9907      	ldr	r1, [sp, #28]
 8014342:	2d6c      	cmp	r5, #108	; 0x6c
 8014344:	f000 84cb 	beq.w	8014cde <_svfprintf_r+0x1022>
 8014348:	f041 0110 	orr.w	r1, r1, #16
 801434c:	9107      	str	r1, [sp, #28]
 801434e:	4619      	mov	r1, r3
 8014350:	e507      	b.n	8013d62 <_svfprintf_r+0xa6>
 8014352:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8014354:	6829      	ldr	r1, [r5, #0]
 8014356:	910c      	str	r1, [sp, #48]	; 0x30
 8014358:	4608      	mov	r0, r1
 801435a:	2800      	cmp	r0, #0
 801435c:	4629      	mov	r1, r5
 801435e:	f101 0104 	add.w	r1, r1, #4
 8014362:	f2c0 84b5 	blt.w	8014cd0 <_svfprintf_r+0x1014>
 8014366:	910e      	str	r1, [sp, #56]	; 0x38
 8014368:	781d      	ldrb	r5, [r3, #0]
 801436a:	4619      	mov	r1, r3
 801436c:	e4f9      	b.n	8013d62 <_svfprintf_r+0xa6>
 801436e:	9907      	ldr	r1, [sp, #28]
 8014370:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8014374:	9107      	str	r1, [sp, #28]
 8014376:	781d      	ldrb	r5, [r3, #0]
 8014378:	4619      	mov	r1, r3
 801437a:	e4f2      	b.n	8013d62 <_svfprintf_r+0xa6>
 801437c:	930a      	str	r3, [sp, #40]	; 0x28
 801437e:	9b07      	ldr	r3, [sp, #28]
 8014380:	f043 0310 	orr.w	r3, r3, #16
 8014384:	9307      	str	r3, [sp, #28]
 8014386:	9b07      	ldr	r3, [sp, #28]
 8014388:	f013 0320 	ands.w	r3, r3, #32
 801438c:	f47f aef2 	bne.w	8014174 <_svfprintf_r+0x4b8>
 8014390:	9a07      	ldr	r2, [sp, #28]
 8014392:	f012 0210 	ands.w	r2, r2, #16
 8014396:	f040 8319 	bne.w	80149cc <_svfprintf_r+0xd10>
 801439a:	9b07      	ldr	r3, [sp, #28]
 801439c:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 80143a0:	f000 8314 	beq.w	80149cc <_svfprintf_r+0xd10>
 80143a4:	990e      	ldr	r1, [sp, #56]	; 0x38
 80143a6:	4613      	mov	r3, r2
 80143a8:	460a      	mov	r2, r1
 80143aa:	3204      	adds	r2, #4
 80143ac:	f8b1 8000 	ldrh.w	r8, [r1]
 80143b0:	920e      	str	r2, [sp, #56]	; 0x38
 80143b2:	f04f 0900 	mov.w	r9, #0
 80143b6:	e566      	b.n	8013e86 <_svfprintf_r+0x1ca>
 80143b8:	930a      	str	r3, [sp, #40]	; 0x28
 80143ba:	9b07      	ldr	r3, [sp, #28]
 80143bc:	f043 0310 	orr.w	r3, r3, #16
 80143c0:	9307      	str	r3, [sp, #28]
 80143c2:	9b07      	ldr	r3, [sp, #28]
 80143c4:	0698      	lsls	r0, r3, #26
 80143c6:	f53f ad53 	bmi.w	8013e70 <_svfprintf_r+0x1b4>
 80143ca:	9b07      	ldr	r3, [sp, #28]
 80143cc:	06d9      	lsls	r1, r3, #27
 80143ce:	f100 8306 	bmi.w	80149de <_svfprintf_r+0xd22>
 80143d2:	9b07      	ldr	r3, [sp, #28]
 80143d4:	065a      	lsls	r2, r3, #25
 80143d6:	f140 8302 	bpl.w	80149de <_svfprintf_r+0xd22>
 80143da:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80143dc:	f8b2 8000 	ldrh.w	r8, [r2]
 80143e0:	3204      	adds	r2, #4
 80143e2:	f04f 0900 	mov.w	r9, #0
 80143e6:	2301      	movs	r3, #1
 80143e8:	920e      	str	r2, [sp, #56]	; 0x38
 80143ea:	e54c      	b.n	8013e86 <_svfprintf_r+0x1ca>
 80143ec:	930a      	str	r3, [sp, #40]	; 0x28
 80143ee:	4b23      	ldr	r3, [pc, #140]	; (801447c <_svfprintf_r+0x7c0>)
 80143f0:	9316      	str	r3, [sp, #88]	; 0x58
 80143f2:	9b07      	ldr	r3, [sp, #28]
 80143f4:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
 80143f8:	069b      	lsls	r3, r3, #26
 80143fa:	f53f af0d 	bmi.w	8014218 <_svfprintf_r+0x55c>
 80143fe:	9b07      	ldr	r3, [sp, #28]
 8014400:	06d8      	lsls	r0, r3, #27
 8014402:	f140 83cd 	bpl.w	8014ba0 <_svfprintf_r+0xee4>
 8014406:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014408:	4613      	mov	r3, r2
 801440a:	681b      	ldr	r3, [r3, #0]
 801440c:	4698      	mov	r8, r3
 801440e:	9b07      	ldr	r3, [sp, #28]
 8014410:	3204      	adds	r2, #4
 8014412:	07d9      	lsls	r1, r3, #31
 8014414:	920e      	str	r2, [sp, #56]	; 0x38
 8014416:	f04f 0900 	mov.w	r9, #0
 801441a:	f53f af0b 	bmi.w	8014234 <_svfprintf_r+0x578>
 801441e:	2302      	movs	r3, #2
 8014420:	e531      	b.n	8013e86 <_svfprintf_r+0x1ca>
 8014422:	990e      	ldr	r1, [sp, #56]	; 0x38
 8014424:	930a      	str	r3, [sp, #40]	; 0x28
 8014426:	680a      	ldr	r2, [r1, #0]
 8014428:	f88d 2098 	strb.w	r2, [sp, #152]	; 0x98
 801442c:	2300      	movs	r3, #0
 801442e:	2201      	movs	r2, #1
 8014430:	3104      	adds	r1, #4
 8014432:	469c      	mov	ip, r3
 8014434:	9209      	str	r2, [sp, #36]	; 0x24
 8014436:	910e      	str	r1, [sp, #56]	; 0x38
 8014438:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 801443c:	ab26      	add	r3, sp, #152	; 0x98
 801443e:	f8cd c044 	str.w	ip, [sp, #68]	; 0x44
 8014442:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
 8014446:	920d      	str	r2, [sp, #52]	; 0x34
 8014448:	9310      	str	r3, [sp, #64]	; 0x40
 801444a:	e55d      	b.n	8013f08 <_svfprintf_r+0x24c>
 801444c:	9907      	ldr	r1, [sp, #28]
 801444e:	f041 0108 	orr.w	r1, r1, #8
 8014452:	9107      	str	r1, [sp, #28]
 8014454:	781d      	ldrb	r5, [r3, #0]
 8014456:	4619      	mov	r1, r3
 8014458:	e483      	b.n	8013d62 <_svfprintf_r+0xa6>
 801445a:	9907      	ldr	r1, [sp, #28]
 801445c:	f041 0101 	orr.w	r1, r1, #1
 8014460:	9107      	str	r1, [sp, #28]
 8014462:	781d      	ldrb	r5, [r3, #0]
 8014464:	4619      	mov	r1, r3
 8014466:	e47c      	b.n	8013d62 <_svfprintf_r+0xa6>
 8014468:	9907      	ldr	r1, [sp, #28]
 801446a:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 801446e:	9107      	str	r1, [sp, #28]
 8014470:	781d      	ldrb	r5, [r3, #0]
 8014472:	4619      	mov	r1, r3
 8014474:	e475      	b.n	8013d62 <_svfprintf_r+0xa6>
 8014476:	bf00      	nop
 8014478:	0802e4a4 	.word	0x0802e4a4
 801447c:	0802e490 	.word	0x0802e490
 8014480:	0802e470 	.word	0x0802e470
 8014484:	0802e4c4 	.word	0x0802e4c4
 8014488:	930a      	str	r3, [sp, #40]	; 0x28
 801448a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801448c:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
 8014490:	f103 0907 	add.w	r9, r3, #7
 8014494:	f029 0307 	bic.w	r3, r9, #7
 8014498:	f103 0208 	add.w	r2, r3, #8
 801449c:	920e      	str	r2, [sp, #56]	; 0x38
 801449e:	681a      	ldr	r2, [r3, #0]
 80144a0:	9214      	str	r2, [sp, #80]	; 0x50
 80144a2:	685b      	ldr	r3, [r3, #4]
 80144a4:	9315      	str	r3, [sp, #84]	; 0x54
 80144a6:	9915      	ldr	r1, [sp, #84]	; 0x54
 80144a8:	9814      	ldr	r0, [sp, #80]	; 0x50
 80144aa:	f004 fd2d 	bl	8018f08 <__fpclassifyd>
 80144ae:	2801      	cmp	r0, #1
 80144b0:	46d3      	mov	fp, sl
 80144b2:	9814      	ldr	r0, [sp, #80]	; 0x50
 80144b4:	9915      	ldr	r1, [sp, #84]	; 0x54
 80144b6:	f040 8359 	bne.w	8014b6c <_svfprintf_r+0xeb0>
 80144ba:	2200      	movs	r2, #0
 80144bc:	2300      	movs	r3, #0
 80144be:	f7ec fb27 	bl	8000b10 <__aeabi_dcmplt>
 80144c2:	2800      	cmp	r0, #0
 80144c4:	f040 8564 	bne.w	8014f90 <_svfprintf_r+0x12d4>
 80144c8:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
 80144cc:	9b07      	ldr	r3, [sp, #28]
 80144ce:	4abe      	ldr	r2, [pc, #760]	; (80147c8 <_svfprintf_r+0xb0c>)
 80144d0:	f8df e300 	ldr.w	lr, [pc, #768]	; 80147d4 <_svfprintf_r+0xb18>
 80144d4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80144d8:	9307      	str	r3, [sp, #28]
 80144da:	4613      	mov	r3, r2
 80144dc:	2103      	movs	r1, #3
 80144de:	2000      	movs	r0, #0
 80144e0:	2d47      	cmp	r5, #71	; 0x47
 80144e2:	bfd8      	it	le
 80144e4:	4673      	movle	r3, lr
 80144e6:	9109      	str	r1, [sp, #36]	; 0x24
 80144e8:	9011      	str	r0, [sp, #68]	; 0x44
 80144ea:	9310      	str	r3, [sp, #64]	; 0x40
 80144ec:	910d      	str	r1, [sp, #52]	; 0x34
 80144ee:	9012      	str	r0, [sp, #72]	; 0x48
 80144f0:	e504      	b.n	8013efc <_svfprintf_r+0x240>
 80144f2:	980e      	ldr	r0, [sp, #56]	; 0x38
 80144f4:	9907      	ldr	r1, [sp, #28]
 80144f6:	930a      	str	r3, [sp, #40]	; 0x28
 80144f8:	2230      	movs	r2, #48	; 0x30
 80144fa:	6803      	ldr	r3, [r0, #0]
 80144fc:	f88d 2070 	strb.w	r2, [sp, #112]	; 0x70
 8014500:	4602      	mov	r2, r0
 8014502:	2578      	movs	r5, #120	; 0x78
 8014504:	f041 0102 	orr.w	r1, r1, #2
 8014508:	3204      	adds	r2, #4
 801450a:	4698      	mov	r8, r3
 801450c:	4baf      	ldr	r3, [pc, #700]	; (80147cc <_svfprintf_r+0xb10>)
 801450e:	9316      	str	r3, [sp, #88]	; 0x58
 8014510:	9107      	str	r1, [sp, #28]
 8014512:	920e      	str	r2, [sp, #56]	; 0x38
 8014514:	f04f 0900 	mov.w	r9, #0
 8014518:	f88d 5071 	strb.w	r5, [sp, #113]	; 0x71
 801451c:	2302      	movs	r3, #2
 801451e:	e4b2      	b.n	8013e86 <_svfprintf_r+0x1ca>
 8014520:	930a      	str	r3, [sp, #40]	; 0x28
 8014522:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
 8014526:	2d00      	cmp	r5, #0
 8014528:	f000 83c6 	beq.w	8014cb8 <_svfprintf_r+0xffc>
 801452c:	2300      	movs	r3, #0
 801452e:	2201      	movs	r2, #1
 8014530:	469c      	mov	ip, r3
 8014532:	9209      	str	r2, [sp, #36]	; 0x24
 8014534:	f88d 5098 	strb.w	r5, [sp, #152]	; 0x98
 8014538:	e77e      	b.n	8014438 <_svfprintf_r+0x77c>
 801453a:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 801453e:	e539      	b.n	8013fb4 <_svfprintf_r+0x2f8>
 8014540:	2b01      	cmp	r3, #1
 8014542:	f47f acb8 	bne.w	8013eb6 <_svfprintf_r+0x1fa>
 8014546:	f1b9 0f00 	cmp.w	r9, #0
 801454a:	bf08      	it	eq
 801454c:	f1b8 0f0a 	cmpeq.w	r8, #10
 8014550:	f080 821c 	bcs.w	801498c <_svfprintf_r+0xcd0>
 8014554:	f50d 7b80 	add.w	fp, sp, #256	; 0x100
 8014558:	f108 0830 	add.w	r8, r8, #48	; 0x30
 801455c:	f80b 8d41 	strb.w	r8, [fp, #-65]!
 8014560:	ebcb 0307 	rsb	r3, fp, r7
 8014564:	930d      	str	r3, [sp, #52]	; 0x34
 8014566:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 801456a:	e4bf      	b.n	8013eec <_svfprintf_r+0x230>
 801456c:	2d65      	cmp	r5, #101	; 0x65
 801456e:	f340 80a0 	ble.w	80146b2 <_svfprintf_r+0x9f6>
 8014572:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014574:	9915      	ldr	r1, [sp, #84]	; 0x54
 8014576:	2200      	movs	r2, #0
 8014578:	2300      	movs	r3, #0
 801457a:	f7ec fabf 	bl	8000afc <__aeabi_dcmpeq>
 801457e:	2800      	cmp	r0, #0
 8014580:	f000 8145 	beq.w	801480e <_svfprintf_r+0xb52>
 8014584:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014586:	4a92      	ldr	r2, [pc, #584]	; (80147d0 <_svfprintf_r+0xb14>)
 8014588:	6022      	str	r2, [r4, #0]
 801458a:	3301      	adds	r3, #1
 801458c:	f10b 0b01 	add.w	fp, fp, #1
 8014590:	2201      	movs	r2, #1
 8014592:	2b07      	cmp	r3, #7
 8014594:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8014598:	9324      	str	r3, [sp, #144]	; 0x90
 801459a:	6062      	str	r2, [r4, #4]
 801459c:	f300 8334 	bgt.w	8014c08 <_svfprintf_r+0xf4c>
 80145a0:	3408      	adds	r4, #8
 80145a2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80145a4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80145a6:	4293      	cmp	r3, r2
 80145a8:	db03      	blt.n	80145b2 <_svfprintf_r+0x8f6>
 80145aa:	9b07      	ldr	r3, [sp, #28]
 80145ac:	07da      	lsls	r2, r3, #31
 80145ae:	f57f ad7f 	bpl.w	80140b0 <_svfprintf_r+0x3f4>
 80145b2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80145b4:	9918      	ldr	r1, [sp, #96]	; 0x60
 80145b6:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80145b8:	6022      	str	r2, [r4, #0]
 80145ba:	3301      	adds	r3, #1
 80145bc:	448b      	add	fp, r1
 80145be:	2b07      	cmp	r3, #7
 80145c0:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 80145c4:	6061      	str	r1, [r4, #4]
 80145c6:	9324      	str	r3, [sp, #144]	; 0x90
 80145c8:	f300 8390 	bgt.w	8014cec <_svfprintf_r+0x1030>
 80145cc:	3408      	adds	r4, #8
 80145ce:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80145d0:	1e5d      	subs	r5, r3, #1
 80145d2:	2d00      	cmp	r5, #0
 80145d4:	f77f ad6c 	ble.w	80140b0 <_svfprintf_r+0x3f4>
 80145d8:	2d10      	cmp	r5, #16
 80145da:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80145dc:	f8df 91f8 	ldr.w	r9, [pc, #504]	; 80147d8 <_svfprintf_r+0xb1c>
 80145e0:	f340 81ba 	ble.w	8014958 <_svfprintf_r+0xc9c>
 80145e4:	f04f 0810 	mov.w	r8, #16
 80145e8:	465a      	mov	r2, fp
 80145ea:	f8dd a020 	ldr.w	sl, [sp, #32]
 80145ee:	e004      	b.n	80145fa <_svfprintf_r+0x93e>
 80145f0:	3408      	adds	r4, #8
 80145f2:	3d10      	subs	r5, #16
 80145f4:	2d10      	cmp	r5, #16
 80145f6:	f340 81ae 	ble.w	8014956 <_svfprintf_r+0xc9a>
 80145fa:	3301      	adds	r3, #1
 80145fc:	3210      	adds	r2, #16
 80145fe:	2b07      	cmp	r3, #7
 8014600:	9225      	str	r2, [sp, #148]	; 0x94
 8014602:	9324      	str	r3, [sp, #144]	; 0x90
 8014604:	f8c4 9000 	str.w	r9, [r4]
 8014608:	f8c4 8004 	str.w	r8, [r4, #4]
 801460c:	ddf0      	ble.n	80145f0 <_svfprintf_r+0x934>
 801460e:	4650      	mov	r0, sl
 8014610:	4631      	mov	r1, r6
 8014612:	aa23      	add	r2, sp, #140	; 0x8c
 8014614:	f004 fcf8 	bl	8019008 <__ssprint_r>
 8014618:	2800      	cmp	r0, #0
 801461a:	f47f ac15 	bne.w	8013e48 <_svfprintf_r+0x18c>
 801461e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8014620:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014622:	463c      	mov	r4, r7
 8014624:	e7e5      	b.n	80145f2 <_svfprintf_r+0x936>
 8014626:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014628:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801462a:	ebc2 0a03 	rsb	sl, r2, r3
 801462e:	f1ba 0f00 	cmp.w	sl, #0
 8014632:	f77f ace7 	ble.w	8014004 <_svfprintf_r+0x348>
 8014636:	f1ba 0f10 	cmp.w	sl, #16
 801463a:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801463c:	f8df 9198 	ldr.w	r9, [pc, #408]	; 80147d8 <_svfprintf_r+0xb1c>
 8014640:	dd2b      	ble.n	801469a <_svfprintf_r+0x9de>
 8014642:	4649      	mov	r1, r9
 8014644:	465b      	mov	r3, fp
 8014646:	46a9      	mov	r9, r5
 8014648:	f04f 0810 	mov.w	r8, #16
 801464c:	f8dd b020 	ldr.w	fp, [sp, #32]
 8014650:	460d      	mov	r5, r1
 8014652:	e006      	b.n	8014662 <_svfprintf_r+0x9a6>
 8014654:	f1aa 0a10 	sub.w	sl, sl, #16
 8014658:	f1ba 0f10 	cmp.w	sl, #16
 801465c:	f104 0408 	add.w	r4, r4, #8
 8014660:	dd17      	ble.n	8014692 <_svfprintf_r+0x9d6>
 8014662:	3201      	adds	r2, #1
 8014664:	3310      	adds	r3, #16
 8014666:	2a07      	cmp	r2, #7
 8014668:	9325      	str	r3, [sp, #148]	; 0x94
 801466a:	9224      	str	r2, [sp, #144]	; 0x90
 801466c:	e884 0120 	stmia.w	r4, {r5, r8}
 8014670:	ddf0      	ble.n	8014654 <_svfprintf_r+0x998>
 8014672:	4658      	mov	r0, fp
 8014674:	4631      	mov	r1, r6
 8014676:	aa23      	add	r2, sp, #140	; 0x8c
 8014678:	f004 fcc6 	bl	8019008 <__ssprint_r>
 801467c:	2800      	cmp	r0, #0
 801467e:	f47f abe3 	bne.w	8013e48 <_svfprintf_r+0x18c>
 8014682:	f1aa 0a10 	sub.w	sl, sl, #16
 8014686:	f1ba 0f10 	cmp.w	sl, #16
 801468a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801468c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801468e:	463c      	mov	r4, r7
 8014690:	dce7      	bgt.n	8014662 <_svfprintf_r+0x9a6>
 8014692:	469b      	mov	fp, r3
 8014694:	462b      	mov	r3, r5
 8014696:	464d      	mov	r5, r9
 8014698:	4699      	mov	r9, r3
 801469a:	3201      	adds	r2, #1
 801469c:	44d3      	add	fp, sl
 801469e:	2a07      	cmp	r2, #7
 80146a0:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 80146a4:	9224      	str	r2, [sp, #144]	; 0x90
 80146a6:	e884 0600 	stmia.w	r4, {r9, sl}
 80146aa:	f300 8252 	bgt.w	8014b52 <_svfprintf_r+0xe96>
 80146ae:	3408      	adds	r4, #8
 80146b0:	e4a8      	b.n	8014004 <_svfprintf_r+0x348>
 80146b2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80146b4:	9d24      	ldr	r5, [sp, #144]	; 0x90
 80146b6:	2b01      	cmp	r3, #1
 80146b8:	f340 8220 	ble.w	8014afc <_svfprintf_r+0xe40>
 80146bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80146be:	6023      	str	r3, [r4, #0]
 80146c0:	3501      	adds	r5, #1
 80146c2:	f10b 0301 	add.w	r3, fp, #1
 80146c6:	2201      	movs	r2, #1
 80146c8:	2d07      	cmp	r5, #7
 80146ca:	9325      	str	r3, [sp, #148]	; 0x94
 80146cc:	9524      	str	r5, [sp, #144]	; 0x90
 80146ce:	6062      	str	r2, [r4, #4]
 80146d0:	f300 8226 	bgt.w	8014b20 <_svfprintf_r+0xe64>
 80146d4:	3408      	adds	r4, #8
 80146d6:	9918      	ldr	r1, [sp, #96]	; 0x60
 80146d8:	6061      	str	r1, [r4, #4]
 80146da:	3501      	adds	r5, #1
 80146dc:	eb03 0b01 	add.w	fp, r3, r1
 80146e0:	2d07      	cmp	r5, #7
 80146e2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80146e4:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 80146e8:	9524      	str	r5, [sp, #144]	; 0x90
 80146ea:	6023      	str	r3, [r4, #0]
 80146ec:	f300 8224 	bgt.w	8014b38 <_svfprintf_r+0xe7c>
 80146f0:	3408      	adds	r4, #8
 80146f2:	2300      	movs	r3, #0
 80146f4:	9814      	ldr	r0, [sp, #80]	; 0x50
 80146f6:	9915      	ldr	r1, [sp, #84]	; 0x54
 80146f8:	2200      	movs	r2, #0
 80146fa:	f7ec f9ff 	bl	8000afc <__aeabi_dcmpeq>
 80146fe:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014700:	2800      	cmp	r0, #0
 8014702:	f040 80de 	bne.w	80148c2 <_svfprintf_r+0xc06>
 8014706:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014708:	3b01      	subs	r3, #1
 801470a:	3501      	adds	r5, #1
 801470c:	3201      	adds	r2, #1
 801470e:	449b      	add	fp, r3
 8014710:	2d07      	cmp	r5, #7
 8014712:	9524      	str	r5, [sp, #144]	; 0x90
 8014714:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8014718:	6022      	str	r2, [r4, #0]
 801471a:	6063      	str	r3, [r4, #4]
 801471c:	f300 810e 	bgt.w	801493c <_svfprintf_r+0xc80>
 8014720:	3408      	adds	r4, #8
 8014722:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8014724:	6062      	str	r2, [r4, #4]
 8014726:	3501      	adds	r5, #1
 8014728:	4493      	add	fp, r2
 801472a:	ab1f      	add	r3, sp, #124	; 0x7c
 801472c:	2d07      	cmp	r5, #7
 801472e:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8014732:	9524      	str	r5, [sp, #144]	; 0x90
 8014734:	6023      	str	r3, [r4, #0]
 8014736:	f77f acba 	ble.w	80140ae <_svfprintf_r+0x3f2>
 801473a:	9808      	ldr	r0, [sp, #32]
 801473c:	4631      	mov	r1, r6
 801473e:	aa23      	add	r2, sp, #140	; 0x8c
 8014740:	f004 fc62 	bl	8019008 <__ssprint_r>
 8014744:	2800      	cmp	r0, #0
 8014746:	f47f ab7f 	bne.w	8013e48 <_svfprintf_r+0x18c>
 801474a:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 801474e:	463c      	mov	r4, r7
 8014750:	e4ae      	b.n	80140b0 <_svfprintf_r+0x3f4>
 8014752:	2b00      	cmp	r3, #0
 8014754:	d132      	bne.n	80147bc <_svfprintf_r+0xb00>
 8014756:	9b07      	ldr	r3, [sp, #28]
 8014758:	07d8      	lsls	r0, r3, #31
 801475a:	d52f      	bpl.n	80147bc <_svfprintf_r+0xb00>
 801475c:	f50d 7b80 	add.w	fp, sp, #256	; 0x100
 8014760:	2330      	movs	r3, #48	; 0x30
 8014762:	f80b 3d41 	strb.w	r3, [fp, #-65]!
 8014766:	ebcb 0307 	rsb	r3, fp, r7
 801476a:	930d      	str	r3, [sp, #52]	; 0x34
 801476c:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 8014770:	f7ff bbbc 	b.w	8013eec <_svfprintf_r+0x230>
 8014774:	9808      	ldr	r0, [sp, #32]
 8014776:	4631      	mov	r1, r6
 8014778:	aa23      	add	r2, sp, #140	; 0x8c
 801477a:	f004 fc45 	bl	8019008 <__ssprint_r>
 801477e:	2800      	cmp	r0, #0
 8014780:	f47f ab62 	bne.w	8013e48 <_svfprintf_r+0x18c>
 8014784:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 8014788:	463c      	mov	r4, r7
 801478a:	e47f      	b.n	801408c <_svfprintf_r+0x3d0>
 801478c:	9808      	ldr	r0, [sp, #32]
 801478e:	4631      	mov	r1, r6
 8014790:	aa23      	add	r2, sp, #140	; 0x8c
 8014792:	f004 fc39 	bl	8019008 <__ssprint_r>
 8014796:	2800      	cmp	r0, #0
 8014798:	f47f ab56 	bne.w	8013e48 <_svfprintf_r+0x18c>
 801479c:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 80147a0:	463c      	mov	r4, r7
 80147a2:	e41a      	b.n	8013fda <_svfprintf_r+0x31e>
 80147a4:	9808      	ldr	r0, [sp, #32]
 80147a6:	4631      	mov	r1, r6
 80147a8:	aa23      	add	r2, sp, #140	; 0x8c
 80147aa:	f004 fc2d 	bl	8019008 <__ssprint_r>
 80147ae:	2800      	cmp	r0, #0
 80147b0:	f47f ab4a 	bne.w	8013e48 <_svfprintf_r+0x18c>
 80147b4:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 80147b8:	463c      	mov	r4, r7
 80147ba:	e41f      	b.n	8013ffc <_svfprintf_r+0x340>
 80147bc:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 80147c0:	9710      	str	r7, [sp, #64]	; 0x40
 80147c2:	f7ff bb93 	b.w	8013eec <_svfprintf_r+0x230>
 80147c6:	bf00      	nop
 80147c8:	0802e484 	.word	0x0802e484
 80147cc:	0802e4a4 	.word	0x0802e4a4
 80147d0:	0802e4c0 	.word	0x0802e4c0
 80147d4:	0802e480 	.word	0x0802e480
 80147d8:	0802e4c4 	.word	0x0802e4c4
 80147dc:	9816      	ldr	r0, [sp, #88]	; 0x58
 80147de:	46bb      	mov	fp, r7
 80147e0:	ea4f 1318 	mov.w	r3, r8, lsr #4
 80147e4:	f008 010f 	and.w	r1, r8, #15
 80147e8:	ea43 7309 	orr.w	r3, r3, r9, lsl #28
 80147ec:	ea4f 1219 	mov.w	r2, r9, lsr #4
 80147f0:	4698      	mov	r8, r3
 80147f2:	4691      	mov	r9, r2
 80147f4:	5c43      	ldrb	r3, [r0, r1]
 80147f6:	f80b 3d01 	strb.w	r3, [fp, #-1]!
 80147fa:	ea58 0309 	orrs.w	r3, r8, r9
 80147fe:	d1ef      	bne.n	80147e0 <_svfprintf_r+0xb24>
 8014800:	465b      	mov	r3, fp
 8014802:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 8014806:	1afb      	subs	r3, r7, r3
 8014808:	930d      	str	r3, [sp, #52]	; 0x34
 801480a:	f7ff bb6f 	b.w	8013eec <_svfprintf_r+0x230>
 801480e:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8014810:	2d00      	cmp	r5, #0
 8014812:	f340 8205 	ble.w	8014c20 <_svfprintf_r+0xf64>
 8014816:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014818:	9912      	ldr	r1, [sp, #72]	; 0x48
 801481a:	428a      	cmp	r2, r1
 801481c:	4613      	mov	r3, r2
 801481e:	bfa8      	it	ge
 8014820:	460b      	movge	r3, r1
 8014822:	461d      	mov	r5, r3
 8014824:	9910      	ldr	r1, [sp, #64]	; 0x40
 8014826:	2d00      	cmp	r5, #0
 8014828:	eb01 0a02 	add.w	sl, r1, r2
 801482c:	dd0b      	ble.n	8014846 <_svfprintf_r+0xb8a>
 801482e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014830:	6021      	str	r1, [r4, #0]
 8014832:	3301      	adds	r3, #1
 8014834:	44ab      	add	fp, r5
 8014836:	2b07      	cmp	r3, #7
 8014838:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 801483c:	6065      	str	r5, [r4, #4]
 801483e:	9324      	str	r3, [sp, #144]	; 0x90
 8014840:	f300 834d 	bgt.w	8014ede <_svfprintf_r+0x1222>
 8014844:	3408      	adds	r4, #8
 8014846:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014848:	2d00      	cmp	r5, #0
 801484a:	bfa8      	it	ge
 801484c:	1b5b      	subge	r3, r3, r5
 801484e:	2b00      	cmp	r3, #0
 8014850:	461d      	mov	r5, r3
 8014852:	f340 80f5 	ble.w	8014a40 <_svfprintf_r+0xd84>
 8014856:	2d10      	cmp	r5, #16
 8014858:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801485a:	f8df 95f4 	ldr.w	r9, [pc, #1524]	; 8014e50 <_svfprintf_r+0x1194>
 801485e:	f340 81c6 	ble.w	8014bee <_svfprintf_r+0xf32>
 8014862:	465a      	mov	r2, fp
 8014864:	f04f 0810 	mov.w	r8, #16
 8014868:	f8dd b020 	ldr.w	fp, [sp, #32]
 801486c:	e004      	b.n	8014878 <_svfprintf_r+0xbbc>
 801486e:	3408      	adds	r4, #8
 8014870:	3d10      	subs	r5, #16
 8014872:	2d10      	cmp	r5, #16
 8014874:	f340 81ba 	ble.w	8014bec <_svfprintf_r+0xf30>
 8014878:	3301      	adds	r3, #1
 801487a:	3210      	adds	r2, #16
 801487c:	2b07      	cmp	r3, #7
 801487e:	9225      	str	r2, [sp, #148]	; 0x94
 8014880:	9324      	str	r3, [sp, #144]	; 0x90
 8014882:	f8c4 9000 	str.w	r9, [r4]
 8014886:	f8c4 8004 	str.w	r8, [r4, #4]
 801488a:	ddf0      	ble.n	801486e <_svfprintf_r+0xbb2>
 801488c:	4658      	mov	r0, fp
 801488e:	4631      	mov	r1, r6
 8014890:	aa23      	add	r2, sp, #140	; 0x8c
 8014892:	f004 fbb9 	bl	8019008 <__ssprint_r>
 8014896:	2800      	cmp	r0, #0
 8014898:	f47f aad6 	bne.w	8013e48 <_svfprintf_r+0x18c>
 801489c:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801489e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80148a0:	463c      	mov	r4, r7
 80148a2:	e7e5      	b.n	8014870 <_svfprintf_r+0xbb4>
 80148a4:	9808      	ldr	r0, [sp, #32]
 80148a6:	4631      	mov	r1, r6
 80148a8:	aa23      	add	r2, sp, #140	; 0x8c
 80148aa:	f004 fbad 	bl	8019008 <__ssprint_r>
 80148ae:	2800      	cmp	r0, #0
 80148b0:	f47f aaca 	bne.w	8013e48 <_svfprintf_r+0x18c>
 80148b4:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
 80148b8:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 80148bc:	463c      	mov	r4, r7
 80148be:	f7ff bb79 	b.w	8013fb4 <_svfprintf_r+0x2f8>
 80148c2:	f103 38ff 	add.w	r8, r3, #4294967295
 80148c6:	f1b8 0f00 	cmp.w	r8, #0
 80148ca:	f77f af2a 	ble.w	8014722 <_svfprintf_r+0xa66>
 80148ce:	f1b8 0f10 	cmp.w	r8, #16
 80148d2:	f8df 957c 	ldr.w	r9, [pc, #1404]	; 8014e50 <_svfprintf_r+0x1194>
 80148d6:	dd25      	ble.n	8014924 <_svfprintf_r+0xc68>
 80148d8:	465b      	mov	r3, fp
 80148da:	f04f 0a10 	mov.w	sl, #16
 80148de:	f8dd b020 	ldr.w	fp, [sp, #32]
 80148e2:	e006      	b.n	80148f2 <_svfprintf_r+0xc36>
 80148e4:	f1a8 0810 	sub.w	r8, r8, #16
 80148e8:	f1b8 0f10 	cmp.w	r8, #16
 80148ec:	f104 0408 	add.w	r4, r4, #8
 80148f0:	dd17      	ble.n	8014922 <_svfprintf_r+0xc66>
 80148f2:	3501      	adds	r5, #1
 80148f4:	3310      	adds	r3, #16
 80148f6:	2d07      	cmp	r5, #7
 80148f8:	9325      	str	r3, [sp, #148]	; 0x94
 80148fa:	9524      	str	r5, [sp, #144]	; 0x90
 80148fc:	e884 0600 	stmia.w	r4, {r9, sl}
 8014900:	ddf0      	ble.n	80148e4 <_svfprintf_r+0xc28>
 8014902:	4658      	mov	r0, fp
 8014904:	4631      	mov	r1, r6
 8014906:	aa23      	add	r2, sp, #140	; 0x8c
 8014908:	f004 fb7e 	bl	8019008 <__ssprint_r>
 801490c:	2800      	cmp	r0, #0
 801490e:	f47f aa9b 	bne.w	8013e48 <_svfprintf_r+0x18c>
 8014912:	f1a8 0810 	sub.w	r8, r8, #16
 8014916:	f1b8 0f10 	cmp.w	r8, #16
 801491a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801491c:	9d24      	ldr	r5, [sp, #144]	; 0x90
 801491e:	463c      	mov	r4, r7
 8014920:	dce7      	bgt.n	80148f2 <_svfprintf_r+0xc36>
 8014922:	469b      	mov	fp, r3
 8014924:	3501      	adds	r5, #1
 8014926:	44c3      	add	fp, r8
 8014928:	2d07      	cmp	r5, #7
 801492a:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 801492e:	9524      	str	r5, [sp, #144]	; 0x90
 8014930:	f8c4 9000 	str.w	r9, [r4]
 8014934:	f8c4 8004 	str.w	r8, [r4, #4]
 8014938:	f77f aef2 	ble.w	8014720 <_svfprintf_r+0xa64>
 801493c:	9808      	ldr	r0, [sp, #32]
 801493e:	4631      	mov	r1, r6
 8014940:	aa23      	add	r2, sp, #140	; 0x8c
 8014942:	f004 fb61 	bl	8019008 <__ssprint_r>
 8014946:	2800      	cmp	r0, #0
 8014948:	f47f aa7e 	bne.w	8013e48 <_svfprintf_r+0x18c>
 801494c:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 8014950:	9d24      	ldr	r5, [sp, #144]	; 0x90
 8014952:	463c      	mov	r4, r7
 8014954:	e6e5      	b.n	8014722 <_svfprintf_r+0xa66>
 8014956:	4693      	mov	fp, r2
 8014958:	3301      	adds	r3, #1
 801495a:	44ab      	add	fp, r5
 801495c:	2b07      	cmp	r3, #7
 801495e:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8014962:	9324      	str	r3, [sp, #144]	; 0x90
 8014964:	f8c4 9000 	str.w	r9, [r4]
 8014968:	6065      	str	r5, [r4, #4]
 801496a:	f77f aba0 	ble.w	80140ae <_svfprintf_r+0x3f2>
 801496e:	e6e4      	b.n	801473a <_svfprintf_r+0xa7e>
 8014970:	2b30      	cmp	r3, #48	; 0x30
 8014972:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014974:	f43f af47 	beq.w	8014806 <_svfprintf_r+0xb4a>
 8014978:	3b01      	subs	r3, #1
 801497a:	461a      	mov	r2, r3
 801497c:	9310      	str	r3, [sp, #64]	; 0x40
 801497e:	1aba      	subs	r2, r7, r2
 8014980:	2330      	movs	r3, #48	; 0x30
 8014982:	920d      	str	r2, [sp, #52]	; 0x34
 8014984:	f801 3c01 	strb.w	r3, [r1, #-1]
 8014988:	f7ff bab0 	b.w	8013eec <_svfprintf_r+0x230>
 801498c:	46bb      	mov	fp, r7
 801498e:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
 8014992:	4640      	mov	r0, r8
 8014994:	4649      	mov	r1, r9
 8014996:	220a      	movs	r2, #10
 8014998:	2300      	movs	r3, #0
 801499a:	f7ec f909 	bl	8000bb0 <__aeabi_uldivmod>
 801499e:	3230      	adds	r2, #48	; 0x30
 80149a0:	4640      	mov	r0, r8
 80149a2:	4649      	mov	r1, r9
 80149a4:	f80b 2d01 	strb.w	r2, [fp, #-1]!
 80149a8:	2300      	movs	r3, #0
 80149aa:	220a      	movs	r2, #10
 80149ac:	f7ec f900 	bl	8000bb0 <__aeabi_uldivmod>
 80149b0:	4680      	mov	r8, r0
 80149b2:	4689      	mov	r9, r1
 80149b4:	ea58 0309 	orrs.w	r3, r8, r9
 80149b8:	d1eb      	bne.n	8014992 <_svfprintf_r+0xcd6>
 80149ba:	465b      	mov	r3, fp
 80149bc:	1afb      	subs	r3, r7, r3
 80149be:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
 80149c2:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 80149c6:	930d      	str	r3, [sp, #52]	; 0x34
 80149c8:	f7ff ba90 	b.w	8013eec <_svfprintf_r+0x230>
 80149cc:	990e      	ldr	r1, [sp, #56]	; 0x38
 80149ce:	680a      	ldr	r2, [r1, #0]
 80149d0:	3104      	adds	r1, #4
 80149d2:	910e      	str	r1, [sp, #56]	; 0x38
 80149d4:	4690      	mov	r8, r2
 80149d6:	f04f 0900 	mov.w	r9, #0
 80149da:	f7ff ba54 	b.w	8013e86 <_svfprintf_r+0x1ca>
 80149de:	990e      	ldr	r1, [sp, #56]	; 0x38
 80149e0:	680a      	ldr	r2, [r1, #0]
 80149e2:	3104      	adds	r1, #4
 80149e4:	2301      	movs	r3, #1
 80149e6:	910e      	str	r1, [sp, #56]	; 0x38
 80149e8:	4690      	mov	r8, r2
 80149ea:	f04f 0900 	mov.w	r9, #0
 80149ee:	f7ff ba4a 	b.w	8013e86 <_svfprintf_r+0x1ca>
 80149f2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80149f4:	6813      	ldr	r3, [r2, #0]
 80149f6:	4698      	mov	r8, r3
 80149f8:	ea4f 79e3 	mov.w	r9, r3, asr #31
 80149fc:	4613      	mov	r3, r2
 80149fe:	3304      	adds	r3, #4
 8014a00:	4642      	mov	r2, r8
 8014a02:	930e      	str	r3, [sp, #56]	; 0x38
 8014a04:	2a00      	cmp	r2, #0
 8014a06:	464b      	mov	r3, r9
 8014a08:	f173 0300 	sbcs.w	r3, r3, #0
 8014a0c:	f6bf abf5 	bge.w	80141fa <_svfprintf_r+0x53e>
 8014a10:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
 8014a14:	f1d8 0800 	rsbs	r8, r8, #0
 8014a18:	eb69 0949 	sbc.w	r9, r9, r9, lsl #1
 8014a1c:	f88d c06f 	strb.w	ip, [sp, #111]	; 0x6f
 8014a20:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
 8014a24:	2301      	movs	r3, #1
 8014a26:	f7ff ba34 	b.w	8013e92 <_svfprintf_r+0x1d6>
 8014a2a:	9808      	ldr	r0, [sp, #32]
 8014a2c:	4631      	mov	r1, r6
 8014a2e:	aa23      	add	r2, sp, #140	; 0x8c
 8014a30:	f004 faea 	bl	8019008 <__ssprint_r>
 8014a34:	2800      	cmp	r0, #0
 8014a36:	f47f aa07 	bne.w	8013e48 <_svfprintf_r+0x18c>
 8014a3a:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 8014a3e:	463c      	mov	r4, r7
 8014a40:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014a42:	9912      	ldr	r1, [sp, #72]	; 0x48
 8014a44:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8014a46:	440a      	add	r2, r1
 8014a48:	4690      	mov	r8, r2
 8014a4a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014a4c:	4293      	cmp	r3, r2
 8014a4e:	db46      	blt.n	8014ade <_svfprintf_r+0xe22>
 8014a50:	9a07      	ldr	r2, [sp, #28]
 8014a52:	07d0      	lsls	r0, r2, #31
 8014a54:	d443      	bmi.n	8014ade <_svfprintf_r+0xe22>
 8014a56:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014a58:	ebc8 050a 	rsb	r5, r8, sl
 8014a5c:	1ad3      	subs	r3, r2, r3
 8014a5e:	429d      	cmp	r5, r3
 8014a60:	bfa8      	it	ge
 8014a62:	461d      	movge	r5, r3
 8014a64:	2d00      	cmp	r5, #0
 8014a66:	dd0c      	ble.n	8014a82 <_svfprintf_r+0xdc6>
 8014a68:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8014a6a:	f8c4 8000 	str.w	r8, [r4]
 8014a6e:	3201      	adds	r2, #1
 8014a70:	44ab      	add	fp, r5
 8014a72:	2a07      	cmp	r2, #7
 8014a74:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8014a78:	6065      	str	r5, [r4, #4]
 8014a7a:	9224      	str	r2, [sp, #144]	; 0x90
 8014a7c:	f300 8267 	bgt.w	8014f4e <_svfprintf_r+0x1292>
 8014a80:	3408      	adds	r4, #8
 8014a82:	2d00      	cmp	r5, #0
 8014a84:	bfac      	ite	ge
 8014a86:	1b5d      	subge	r5, r3, r5
 8014a88:	461d      	movlt	r5, r3
 8014a8a:	2d00      	cmp	r5, #0
 8014a8c:	f77f ab10 	ble.w	80140b0 <_svfprintf_r+0x3f4>
 8014a90:	2d10      	cmp	r5, #16
 8014a92:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014a94:	f8df 93b8 	ldr.w	r9, [pc, #952]	; 8014e50 <_svfprintf_r+0x1194>
 8014a98:	f77f af5e 	ble.w	8014958 <_svfprintf_r+0xc9c>
 8014a9c:	f04f 0810 	mov.w	r8, #16
 8014aa0:	465a      	mov	r2, fp
 8014aa2:	f8dd a020 	ldr.w	sl, [sp, #32]
 8014aa6:	e004      	b.n	8014ab2 <_svfprintf_r+0xdf6>
 8014aa8:	3408      	adds	r4, #8
 8014aaa:	3d10      	subs	r5, #16
 8014aac:	2d10      	cmp	r5, #16
 8014aae:	f77f af52 	ble.w	8014956 <_svfprintf_r+0xc9a>
 8014ab2:	3301      	adds	r3, #1
 8014ab4:	3210      	adds	r2, #16
 8014ab6:	2b07      	cmp	r3, #7
 8014ab8:	9225      	str	r2, [sp, #148]	; 0x94
 8014aba:	9324      	str	r3, [sp, #144]	; 0x90
 8014abc:	f8c4 9000 	str.w	r9, [r4]
 8014ac0:	f8c4 8004 	str.w	r8, [r4, #4]
 8014ac4:	ddf0      	ble.n	8014aa8 <_svfprintf_r+0xdec>
 8014ac6:	4650      	mov	r0, sl
 8014ac8:	4631      	mov	r1, r6
 8014aca:	aa23      	add	r2, sp, #140	; 0x8c
 8014acc:	f004 fa9c 	bl	8019008 <__ssprint_r>
 8014ad0:	2800      	cmp	r0, #0
 8014ad2:	f47f a9b9 	bne.w	8013e48 <_svfprintf_r+0x18c>
 8014ad6:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8014ad8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014ada:	463c      	mov	r4, r7
 8014adc:	e7e5      	b.n	8014aaa <_svfprintf_r+0xdee>
 8014ade:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8014ae0:	9818      	ldr	r0, [sp, #96]	; 0x60
 8014ae2:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8014ae4:	6021      	str	r1, [r4, #0]
 8014ae6:	3201      	adds	r2, #1
 8014ae8:	4483      	add	fp, r0
 8014aea:	2a07      	cmp	r2, #7
 8014aec:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8014af0:	6060      	str	r0, [r4, #4]
 8014af2:	9224      	str	r2, [sp, #144]	; 0x90
 8014af4:	f300 820a 	bgt.w	8014f0c <_svfprintf_r+0x1250>
 8014af8:	3408      	adds	r4, #8
 8014afa:	e7ac      	b.n	8014a56 <_svfprintf_r+0xd9a>
 8014afc:	9b07      	ldr	r3, [sp, #28]
 8014afe:	07d9      	lsls	r1, r3, #31
 8014b00:	f53f addc 	bmi.w	80146bc <_svfprintf_r+0xa00>
 8014b04:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014b06:	6023      	str	r3, [r4, #0]
 8014b08:	3501      	adds	r5, #1
 8014b0a:	f10b 0b01 	add.w	fp, fp, #1
 8014b0e:	2301      	movs	r3, #1
 8014b10:	2d07      	cmp	r5, #7
 8014b12:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8014b16:	9524      	str	r5, [sp, #144]	; 0x90
 8014b18:	6063      	str	r3, [r4, #4]
 8014b1a:	f77f ae01 	ble.w	8014720 <_svfprintf_r+0xa64>
 8014b1e:	e70d      	b.n	801493c <_svfprintf_r+0xc80>
 8014b20:	9808      	ldr	r0, [sp, #32]
 8014b22:	4631      	mov	r1, r6
 8014b24:	aa23      	add	r2, sp, #140	; 0x8c
 8014b26:	f004 fa6f 	bl	8019008 <__ssprint_r>
 8014b2a:	2800      	cmp	r0, #0
 8014b2c:	f47f a98c 	bne.w	8013e48 <_svfprintf_r+0x18c>
 8014b30:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8014b32:	9d24      	ldr	r5, [sp, #144]	; 0x90
 8014b34:	463c      	mov	r4, r7
 8014b36:	e5ce      	b.n	80146d6 <_svfprintf_r+0xa1a>
 8014b38:	9808      	ldr	r0, [sp, #32]
 8014b3a:	4631      	mov	r1, r6
 8014b3c:	aa23      	add	r2, sp, #140	; 0x8c
 8014b3e:	f004 fa63 	bl	8019008 <__ssprint_r>
 8014b42:	2800      	cmp	r0, #0
 8014b44:	f47f a980 	bne.w	8013e48 <_svfprintf_r+0x18c>
 8014b48:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 8014b4c:	9d24      	ldr	r5, [sp, #144]	; 0x90
 8014b4e:	463c      	mov	r4, r7
 8014b50:	e5cf      	b.n	80146f2 <_svfprintf_r+0xa36>
 8014b52:	9808      	ldr	r0, [sp, #32]
 8014b54:	4631      	mov	r1, r6
 8014b56:	aa23      	add	r2, sp, #140	; 0x8c
 8014b58:	f004 fa56 	bl	8019008 <__ssprint_r>
 8014b5c:	2800      	cmp	r0, #0
 8014b5e:	f47f a973 	bne.w	8013e48 <_svfprintf_r+0x18c>
 8014b62:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 8014b66:	463c      	mov	r4, r7
 8014b68:	f7ff ba4c 	b.w	8014004 <_svfprintf_r+0x348>
 8014b6c:	f004 f9cc 	bl	8018f08 <__fpclassifyd>
 8014b70:	2800      	cmp	r0, #0
 8014b72:	f040 80c7 	bne.w	8014d04 <_svfprintf_r+0x1048>
 8014b76:	4686      	mov	lr, r0
 8014b78:	4ab2      	ldr	r2, [pc, #712]	; (8014e44 <_svfprintf_r+0x1188>)
 8014b7a:	4bb3      	ldr	r3, [pc, #716]	; (8014e48 <_svfprintf_r+0x118c>)
 8014b7c:	9011      	str	r0, [sp, #68]	; 0x44
 8014b7e:	9807      	ldr	r0, [sp, #28]
 8014b80:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
 8014b84:	f8cd e048 	str.w	lr, [sp, #72]	; 0x48
 8014b88:	2103      	movs	r1, #3
 8014b8a:	f020 0080 	bic.w	r0, r0, #128	; 0x80
 8014b8e:	2d47      	cmp	r5, #71	; 0x47
 8014b90:	bfd8      	it	le
 8014b92:	461a      	movle	r2, r3
 8014b94:	9109      	str	r1, [sp, #36]	; 0x24
 8014b96:	9007      	str	r0, [sp, #28]
 8014b98:	9210      	str	r2, [sp, #64]	; 0x40
 8014b9a:	910d      	str	r1, [sp, #52]	; 0x34
 8014b9c:	f7ff b9ae 	b.w	8013efc <_svfprintf_r+0x240>
 8014ba0:	9b07      	ldr	r3, [sp, #28]
 8014ba2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014ba4:	f013 0f40 	tst.w	r3, #64	; 0x40
 8014ba8:	4613      	mov	r3, r2
 8014baa:	f43f ac2e 	beq.w	801440a <_svfprintf_r+0x74e>
 8014bae:	3304      	adds	r3, #4
 8014bb0:	f8b2 8000 	ldrh.w	r8, [r2]
 8014bb4:	930e      	str	r3, [sp, #56]	; 0x38
 8014bb6:	f04f 0900 	mov.w	r9, #0
 8014bba:	f7ff bb37 	b.w	801422c <_svfprintf_r+0x570>
 8014bbe:	9b07      	ldr	r3, [sp, #28]
 8014bc0:	06db      	lsls	r3, r3, #27
 8014bc2:	d40b      	bmi.n	8014bdc <_svfprintf_r+0xf20>
 8014bc4:	9b07      	ldr	r3, [sp, #28]
 8014bc6:	065d      	lsls	r5, r3, #25
 8014bc8:	d508      	bpl.n	8014bdc <_svfprintf_r+0xf20>
 8014bca:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014bcc:	6813      	ldr	r3, [r2, #0]
 8014bce:	3204      	adds	r2, #4
 8014bd0:	920e      	str	r2, [sp, #56]	; 0x38
 8014bd2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8014bd6:	801a      	strh	r2, [r3, #0]
 8014bd8:	f7ff b895 	b.w	8013d06 <_svfprintf_r+0x4a>
 8014bdc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014bde:	6813      	ldr	r3, [r2, #0]
 8014be0:	3204      	adds	r2, #4
 8014be2:	920e      	str	r2, [sp, #56]	; 0x38
 8014be4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014be6:	601a      	str	r2, [r3, #0]
 8014be8:	f7ff b88d 	b.w	8013d06 <_svfprintf_r+0x4a>
 8014bec:	4693      	mov	fp, r2
 8014bee:	3301      	adds	r3, #1
 8014bf0:	44ab      	add	fp, r5
 8014bf2:	2b07      	cmp	r3, #7
 8014bf4:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8014bf8:	9324      	str	r3, [sp, #144]	; 0x90
 8014bfa:	f8c4 9000 	str.w	r9, [r4]
 8014bfe:	6065      	str	r5, [r4, #4]
 8014c00:	f73f af13 	bgt.w	8014a2a <_svfprintf_r+0xd6e>
 8014c04:	3408      	adds	r4, #8
 8014c06:	e71b      	b.n	8014a40 <_svfprintf_r+0xd84>
 8014c08:	9808      	ldr	r0, [sp, #32]
 8014c0a:	4631      	mov	r1, r6
 8014c0c:	aa23      	add	r2, sp, #140	; 0x8c
 8014c0e:	f004 f9fb 	bl	8019008 <__ssprint_r>
 8014c12:	2800      	cmp	r0, #0
 8014c14:	f47f a918 	bne.w	8013e48 <_svfprintf_r+0x18c>
 8014c18:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 8014c1c:	463c      	mov	r4, r7
 8014c1e:	e4c0      	b.n	80145a2 <_svfprintf_r+0x8e6>
 8014c20:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014c22:	4a8a      	ldr	r2, [pc, #552]	; (8014e4c <_svfprintf_r+0x1190>)
 8014c24:	6022      	str	r2, [r4, #0]
 8014c26:	3301      	adds	r3, #1
 8014c28:	f10b 0b01 	add.w	fp, fp, #1
 8014c2c:	2201      	movs	r2, #1
 8014c2e:	2b07      	cmp	r3, #7
 8014c30:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8014c34:	9324      	str	r3, [sp, #144]	; 0x90
 8014c36:	6062      	str	r2, [r4, #4]
 8014c38:	f300 80f4 	bgt.w	8014e24 <_svfprintf_r+0x1168>
 8014c3c:	3408      	adds	r4, #8
 8014c3e:	b92d      	cbnz	r5, 8014c4c <_svfprintf_r+0xf90>
 8014c40:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014c42:	b91b      	cbnz	r3, 8014c4c <_svfprintf_r+0xf90>
 8014c44:	9b07      	ldr	r3, [sp, #28]
 8014c46:	07db      	lsls	r3, r3, #31
 8014c48:	f57f aa32 	bpl.w	80140b0 <_svfprintf_r+0x3f4>
 8014c4c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014c4e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8014c50:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8014c52:	6022      	str	r2, [r4, #0]
 8014c54:	3301      	adds	r3, #1
 8014c56:	eb0b 0100 	add.w	r1, fp, r0
 8014c5a:	2b07      	cmp	r3, #7
 8014c5c:	9125      	str	r1, [sp, #148]	; 0x94
 8014c5e:	6060      	str	r0, [r4, #4]
 8014c60:	9324      	str	r3, [sp, #144]	; 0x90
 8014c62:	f300 81f3 	bgt.w	801504c <_svfprintf_r+0x1390>
 8014c66:	f104 0208 	add.w	r2, r4, #8
 8014c6a:	426d      	negs	r5, r5
 8014c6c:	2d00      	cmp	r5, #0
 8014c6e:	f340 80fc 	ble.w	8014e6a <_svfprintf_r+0x11ae>
 8014c72:	2d10      	cmp	r5, #16
 8014c74:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8014e50 <_svfprintf_r+0x1194>
 8014c78:	f340 813d 	ble.w	8014ef6 <_svfprintf_r+0x123a>
 8014c7c:	2410      	movs	r4, #16
 8014c7e:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8014c82:	e004      	b.n	8014c8e <_svfprintf_r+0xfd2>
 8014c84:	3208      	adds	r2, #8
 8014c86:	3d10      	subs	r5, #16
 8014c88:	2d10      	cmp	r5, #16
 8014c8a:	f340 8134 	ble.w	8014ef6 <_svfprintf_r+0x123a>
 8014c8e:	3301      	adds	r3, #1
 8014c90:	3110      	adds	r1, #16
 8014c92:	2b07      	cmp	r3, #7
 8014c94:	9125      	str	r1, [sp, #148]	; 0x94
 8014c96:	9324      	str	r3, [sp, #144]	; 0x90
 8014c98:	f8c2 9000 	str.w	r9, [r2]
 8014c9c:	6054      	str	r4, [r2, #4]
 8014c9e:	ddf1      	ble.n	8014c84 <_svfprintf_r+0xfc8>
 8014ca0:	4640      	mov	r0, r8
 8014ca2:	4631      	mov	r1, r6
 8014ca4:	aa23      	add	r2, sp, #140	; 0x8c
 8014ca6:	f004 f9af 	bl	8019008 <__ssprint_r>
 8014caa:	2800      	cmp	r0, #0
 8014cac:	f47f a8cc 	bne.w	8013e48 <_svfprintf_r+0x18c>
 8014cb0:	9925      	ldr	r1, [sp, #148]	; 0x94
 8014cb2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014cb4:	463a      	mov	r2, r7
 8014cb6:	e7e6      	b.n	8014c86 <_svfprintf_r+0xfca>
 8014cb8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8014cba:	46b1      	mov	r9, r6
 8014cbc:	2b00      	cmp	r3, #0
 8014cbe:	f43f a8c4 	beq.w	8013e4a <_svfprintf_r+0x18e>
 8014cc2:	9808      	ldr	r0, [sp, #32]
 8014cc4:	4631      	mov	r1, r6
 8014cc6:	aa23      	add	r2, sp, #140	; 0x8c
 8014cc8:	f004 f99e 	bl	8019008 <__ssprint_r>
 8014ccc:	f7ff b8bd 	b.w	8013e4a <_svfprintf_r+0x18e>
 8014cd0:	980c      	ldr	r0, [sp, #48]	; 0x30
 8014cd2:	910e      	str	r1, [sp, #56]	; 0x38
 8014cd4:	4240      	negs	r0, r0
 8014cd6:	900c      	str	r0, [sp, #48]	; 0x30
 8014cd8:	4619      	mov	r1, r3
 8014cda:	f7ff ba3f 	b.w	801415c <_svfprintf_r+0x4a0>
 8014cde:	f041 0120 	orr.w	r1, r1, #32
 8014ce2:	9107      	str	r1, [sp, #28]
 8014ce4:	785d      	ldrb	r5, [r3, #1]
 8014ce6:	1c59      	adds	r1, r3, #1
 8014ce8:	f7ff b83b 	b.w	8013d62 <_svfprintf_r+0xa6>
 8014cec:	9808      	ldr	r0, [sp, #32]
 8014cee:	4631      	mov	r1, r6
 8014cf0:	aa23      	add	r2, sp, #140	; 0x8c
 8014cf2:	f004 f989 	bl	8019008 <__ssprint_r>
 8014cf6:	2800      	cmp	r0, #0
 8014cf8:	f47f a8a6 	bne.w	8013e48 <_svfprintf_r+0x18c>
 8014cfc:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 8014d00:	463c      	mov	r4, r7
 8014d02:	e464      	b.n	80145ce <_svfprintf_r+0x912>
 8014d04:	f025 0320 	bic.w	r3, r5, #32
 8014d08:	f1ba 3fff 	cmp.w	sl, #4294967295
 8014d0c:	930d      	str	r3, [sp, #52]	; 0x34
 8014d0e:	f000 8096 	beq.w	8014e3e <_svfprintf_r+0x1182>
 8014d12:	2b47      	cmp	r3, #71	; 0x47
 8014d14:	d105      	bne.n	8014d22 <_svfprintf_r+0x1066>
 8014d16:	f1ba 0f00 	cmp.w	sl, #0
 8014d1a:	bf14      	ite	ne
 8014d1c:	46d3      	movne	fp, sl
 8014d1e:	f04f 0b01 	moveq.w	fp, #1
 8014d22:	9b07      	ldr	r3, [sp, #28]
 8014d24:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8014d28:	9311      	str	r3, [sp, #68]	; 0x44
 8014d2a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014d2c:	f1b3 0a00 	subs.w	sl, r3, #0
 8014d30:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8014d32:	9309      	str	r3, [sp, #36]	; 0x24
 8014d34:	bfbb      	ittet	lt
 8014d36:	4653      	movlt	r3, sl
 8014d38:	f103 4a00 	addlt.w	sl, r3, #2147483648	; 0x80000000
 8014d3c:	2300      	movge	r3, #0
 8014d3e:	232d      	movlt	r3, #45	; 0x2d
 8014d40:	2d66      	cmp	r5, #102	; 0x66
 8014d42:	930f      	str	r3, [sp, #60]	; 0x3c
 8014d44:	f000 80ac 	beq.w	8014ea0 <_svfprintf_r+0x11e4>
 8014d48:	2d46      	cmp	r5, #70	; 0x46
 8014d4a:	f000 80a9 	beq.w	8014ea0 <_svfprintf_r+0x11e4>
 8014d4e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014d50:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014d52:	2b45      	cmp	r3, #69	; 0x45
 8014d54:	bf0c      	ite	eq
 8014d56:	f10b 0901 	addeq.w	r9, fp, #1
 8014d5a:	46d9      	movne	r9, fp
 8014d5c:	2002      	movs	r0, #2
 8014d5e:	a91d      	add	r1, sp, #116	; 0x74
 8014d60:	e88d 0201 	stmia.w	sp, {r0, r9}
 8014d64:	9102      	str	r1, [sp, #8]
 8014d66:	a81e      	add	r0, sp, #120	; 0x78
 8014d68:	a921      	add	r1, sp, #132	; 0x84
 8014d6a:	9003      	str	r0, [sp, #12]
 8014d6c:	4653      	mov	r3, sl
 8014d6e:	9104      	str	r1, [sp, #16]
 8014d70:	9808      	ldr	r0, [sp, #32]
 8014d72:	f001 fd15 	bl	80167a0 <_dtoa_r>
 8014d76:	2d67      	cmp	r5, #103	; 0x67
 8014d78:	9010      	str	r0, [sp, #64]	; 0x40
 8014d7a:	d002      	beq.n	8014d82 <_svfprintf_r+0x10c6>
 8014d7c:	2d47      	cmp	r5, #71	; 0x47
 8014d7e:	f040 809f 	bne.w	8014ec0 <_svfprintf_r+0x1204>
 8014d82:	9b07      	ldr	r3, [sp, #28]
 8014d84:	07db      	lsls	r3, r3, #31
 8014d86:	f140 8189 	bpl.w	801509c <_svfprintf_r+0x13e0>
 8014d8a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014d8c:	eb03 0809 	add.w	r8, r3, r9
 8014d90:	9809      	ldr	r0, [sp, #36]	; 0x24
 8014d92:	4651      	mov	r1, sl
 8014d94:	2200      	movs	r2, #0
 8014d96:	2300      	movs	r3, #0
 8014d98:	f7eb feb0 	bl	8000afc <__aeabi_dcmpeq>
 8014d9c:	2800      	cmp	r0, #0
 8014d9e:	f040 80fd 	bne.w	8014f9c <_svfprintf_r+0x12e0>
 8014da2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8014da4:	4598      	cmp	r8, r3
 8014da6:	d906      	bls.n	8014db6 <_svfprintf_r+0x10fa>
 8014da8:	2130      	movs	r1, #48	; 0x30
 8014daa:	1c5a      	adds	r2, r3, #1
 8014dac:	9221      	str	r2, [sp, #132]	; 0x84
 8014dae:	7019      	strb	r1, [r3, #0]
 8014db0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8014db2:	4598      	cmp	r8, r3
 8014db4:	d8f9      	bhi.n	8014daa <_svfprintf_r+0x10ee>
 8014db6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014db8:	1a9b      	subs	r3, r3, r2
 8014dba:	9313      	str	r3, [sp, #76]	; 0x4c
 8014dbc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014dbe:	2b47      	cmp	r3, #71	; 0x47
 8014dc0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8014dc2:	f000 80de 	beq.w	8014f82 <_svfprintf_r+0x12c6>
 8014dc6:	2d65      	cmp	r5, #101	; 0x65
 8014dc8:	f340 80f8 	ble.w	8014fbc <_svfprintf_r+0x1300>
 8014dcc:	2d66      	cmp	r5, #102	; 0x66
 8014dce:	9312      	str	r3, [sp, #72]	; 0x48
 8014dd0:	f000 8157 	beq.w	8015082 <_svfprintf_r+0x13c6>
 8014dd4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014dd6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014dd8:	4293      	cmp	r3, r2
 8014dda:	f300 8144 	bgt.w	8015066 <_svfprintf_r+0x13aa>
 8014dde:	9b07      	ldr	r3, [sp, #28]
 8014de0:	07d9      	lsls	r1, r3, #31
 8014de2:	f100 8173 	bmi.w	80150cc <_svfprintf_r+0x1410>
 8014de6:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8014dea:	920d      	str	r2, [sp, #52]	; 0x34
 8014dec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014dee:	2a00      	cmp	r2, #0
 8014df0:	f040 80bc 	bne.w	8014f6c <_svfprintf_r+0x12b0>
 8014df4:	9309      	str	r3, [sp, #36]	; 0x24
 8014df6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014df8:	9307      	str	r3, [sp, #28]
 8014dfa:	9211      	str	r2, [sp, #68]	; 0x44
 8014dfc:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
 8014e00:	f7ff b87c 	b.w	8013efc <_svfprintf_r+0x240>
 8014e04:	9808      	ldr	r0, [sp, #32]
 8014e06:	2140      	movs	r1, #64	; 0x40
 8014e08:	f003 f8b8 	bl	8017f7c <_malloc_r>
 8014e0c:	f8c9 0000 	str.w	r0, [r9]
 8014e10:	f8c9 0010 	str.w	r0, [r9, #16]
 8014e14:	2800      	cmp	r0, #0
 8014e16:	f000 818c 	beq.w	8015132 <_svfprintf_r+0x1476>
 8014e1a:	2340      	movs	r3, #64	; 0x40
 8014e1c:	f8c9 3014 	str.w	r3, [r9, #20]
 8014e20:	f7fe bf64 	b.w	8013cec <_svfprintf_r+0x30>
 8014e24:	9808      	ldr	r0, [sp, #32]
 8014e26:	4631      	mov	r1, r6
 8014e28:	aa23      	add	r2, sp, #140	; 0x8c
 8014e2a:	f004 f8ed 	bl	8019008 <__ssprint_r>
 8014e2e:	2800      	cmp	r0, #0
 8014e30:	f47f a80a 	bne.w	8013e48 <_svfprintf_r+0x18c>
 8014e34:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8014e36:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 8014e3a:	463c      	mov	r4, r7
 8014e3c:	e6ff      	b.n	8014c3e <_svfprintf_r+0xf82>
 8014e3e:	f04f 0b06 	mov.w	fp, #6
 8014e42:	e76e      	b.n	8014d22 <_svfprintf_r+0x1066>
 8014e44:	0802e48c 	.word	0x0802e48c
 8014e48:	0802e488 	.word	0x0802e488
 8014e4c:	0802e4c0 	.word	0x0802e4c0
 8014e50:	0802e4c4 	.word	0x0802e4c4
 8014e54:	9808      	ldr	r0, [sp, #32]
 8014e56:	4631      	mov	r1, r6
 8014e58:	aa23      	add	r2, sp, #140	; 0x8c
 8014e5a:	f004 f8d5 	bl	8019008 <__ssprint_r>
 8014e5e:	2800      	cmp	r0, #0
 8014e60:	f47e aff2 	bne.w	8013e48 <_svfprintf_r+0x18c>
 8014e64:	9925      	ldr	r1, [sp, #148]	; 0x94
 8014e66:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014e68:	463a      	mov	r2, r7
 8014e6a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014e6c:	6054      	str	r4, [r2, #4]
 8014e6e:	3301      	adds	r3, #1
 8014e70:	eb01 0b04 	add.w	fp, r1, r4
 8014e74:	2b07      	cmp	r3, #7
 8014e76:	9910      	ldr	r1, [sp, #64]	; 0x40
 8014e78:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8014e7c:	9324      	str	r3, [sp, #144]	; 0x90
 8014e7e:	6011      	str	r1, [r2, #0]
 8014e80:	f73f ac5b 	bgt.w	801473a <_svfprintf_r+0xa7e>
 8014e84:	f102 0408 	add.w	r4, r2, #8
 8014e88:	f7ff b912 	b.w	80140b0 <_svfprintf_r+0x3f4>
 8014e8c:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
 8014e90:	f7fe fee6 	bl	8013c60 <strlen>
 8014e94:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8014e98:	900d      	str	r0, [sp, #52]	; 0x34
 8014e9a:	4603      	mov	r3, r0
 8014e9c:	f7ff ba1b 	b.w	80142d6 <_svfprintf_r+0x61a>
 8014ea0:	2003      	movs	r0, #3
 8014ea2:	a91d      	add	r1, sp, #116	; 0x74
 8014ea4:	e88d 0801 	stmia.w	sp, {r0, fp}
 8014ea8:	9102      	str	r1, [sp, #8]
 8014eaa:	a81e      	add	r0, sp, #120	; 0x78
 8014eac:	a921      	add	r1, sp, #132	; 0x84
 8014eae:	9003      	str	r0, [sp, #12]
 8014eb0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014eb2:	9104      	str	r1, [sp, #16]
 8014eb4:	4653      	mov	r3, sl
 8014eb6:	9808      	ldr	r0, [sp, #32]
 8014eb8:	f001 fc72 	bl	80167a0 <_dtoa_r>
 8014ebc:	46d9      	mov	r9, fp
 8014ebe:	9010      	str	r0, [sp, #64]	; 0x40
 8014ec0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014ec2:	eb03 0809 	add.w	r8, r3, r9
 8014ec6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014ec8:	2b46      	cmp	r3, #70	; 0x46
 8014eca:	f47f af61 	bne.w	8014d90 <_svfprintf_r+0x10d4>
 8014ece:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014ed0:	781b      	ldrb	r3, [r3, #0]
 8014ed2:	2b30      	cmp	r3, #48	; 0x30
 8014ed4:	f000 80e4 	beq.w	80150a0 <_svfprintf_r+0x13e4>
 8014ed8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8014eda:	4498      	add	r8, r3
 8014edc:	e758      	b.n	8014d90 <_svfprintf_r+0x10d4>
 8014ede:	9808      	ldr	r0, [sp, #32]
 8014ee0:	4631      	mov	r1, r6
 8014ee2:	aa23      	add	r2, sp, #140	; 0x8c
 8014ee4:	f004 f890 	bl	8019008 <__ssprint_r>
 8014ee8:	2800      	cmp	r0, #0
 8014eea:	f47e afad 	bne.w	8013e48 <_svfprintf_r+0x18c>
 8014eee:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 8014ef2:	463c      	mov	r4, r7
 8014ef4:	e4a7      	b.n	8014846 <_svfprintf_r+0xb8a>
 8014ef6:	3301      	adds	r3, #1
 8014ef8:	4429      	add	r1, r5
 8014efa:	2b07      	cmp	r3, #7
 8014efc:	9125      	str	r1, [sp, #148]	; 0x94
 8014efe:	9324      	str	r3, [sp, #144]	; 0x90
 8014f00:	f8c2 9000 	str.w	r9, [r2]
 8014f04:	6055      	str	r5, [r2, #4]
 8014f06:	dca5      	bgt.n	8014e54 <_svfprintf_r+0x1198>
 8014f08:	3208      	adds	r2, #8
 8014f0a:	e7ae      	b.n	8014e6a <_svfprintf_r+0x11ae>
 8014f0c:	9808      	ldr	r0, [sp, #32]
 8014f0e:	4631      	mov	r1, r6
 8014f10:	aa23      	add	r2, sp, #140	; 0x8c
 8014f12:	f004 f879 	bl	8019008 <__ssprint_r>
 8014f16:	2800      	cmp	r0, #0
 8014f18:	f47e af96 	bne.w	8013e48 <_svfprintf_r+0x18c>
 8014f1c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8014f1e:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 8014f22:	463c      	mov	r4, r7
 8014f24:	e597      	b.n	8014a56 <_svfprintf_r+0xd9a>
 8014f26:	4653      	mov	r3, sl
 8014f28:	2b06      	cmp	r3, #6
 8014f2a:	bf28      	it	cs
 8014f2c:	2306      	movcs	r3, #6
 8014f2e:	930d      	str	r3, [sp, #52]	; 0x34
 8014f30:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014f34:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
 8014f38:	9309      	str	r3, [sp, #36]	; 0x24
 8014f3a:	4b83      	ldr	r3, [pc, #524]	; (8015148 <_svfprintf_r+0x148c>)
 8014f3c:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8014f40:	f8cd c044 	str.w	ip, [sp, #68]	; 0x44
 8014f44:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
 8014f48:	9310      	str	r3, [sp, #64]	; 0x40
 8014f4a:	f7fe bfd7 	b.w	8013efc <_svfprintf_r+0x240>
 8014f4e:	9808      	ldr	r0, [sp, #32]
 8014f50:	4631      	mov	r1, r6
 8014f52:	aa23      	add	r2, sp, #140	; 0x8c
 8014f54:	f004 f858 	bl	8019008 <__ssprint_r>
 8014f58:	2800      	cmp	r0, #0
 8014f5a:	f47e af75 	bne.w	8013e48 <_svfprintf_r+0x18c>
 8014f5e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8014f60:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014f62:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 8014f66:	1ad3      	subs	r3, r2, r3
 8014f68:	463c      	mov	r4, r7
 8014f6a:	e58a      	b.n	8014a82 <_svfprintf_r+0xdc6>
 8014f6c:	9309      	str	r3, [sp, #36]	; 0x24
 8014f6e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014f70:	9307      	str	r3, [sp, #28]
 8014f72:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
 8014f76:	2300      	movs	r3, #0
 8014f78:	f88d c06f 	strb.w	ip, [sp, #111]	; 0x6f
 8014f7c:	9311      	str	r3, [sp, #68]	; 0x44
 8014f7e:	f7fe bfc0 	b.w	8013f02 <_svfprintf_r+0x246>
 8014f82:	1cda      	adds	r2, r3, #3
 8014f84:	db19      	blt.n	8014fba <_svfprintf_r+0x12fe>
 8014f86:	459b      	cmp	fp, r3
 8014f88:	db17      	blt.n	8014fba <_svfprintf_r+0x12fe>
 8014f8a:	9312      	str	r3, [sp, #72]	; 0x48
 8014f8c:	2567      	movs	r5, #103	; 0x67
 8014f8e:	e721      	b.n	8014dd4 <_svfprintf_r+0x1118>
 8014f90:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
 8014f94:	f88d c06f 	strb.w	ip, [sp, #111]	; 0x6f
 8014f98:	f7ff ba98 	b.w	80144cc <_svfprintf_r+0x810>
 8014f9c:	4643      	mov	r3, r8
 8014f9e:	e70a      	b.n	8014db6 <_svfprintf_r+0x10fa>
 8014fa0:	ea2a 73ea 	bic.w	r3, sl, sl, asr #31
 8014fa4:	9011      	str	r0, [sp, #68]	; 0x44
 8014fa6:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8014faa:	9012      	str	r0, [sp, #72]	; 0x48
 8014fac:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
 8014fb0:	9309      	str	r3, [sp, #36]	; 0x24
 8014fb2:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 8014fb6:	f7fe bfa1 	b.w	8013efc <_svfprintf_r+0x240>
 8014fba:	3d02      	subs	r5, #2
 8014fbc:	3b01      	subs	r3, #1
 8014fbe:	2b00      	cmp	r3, #0
 8014fc0:	931d      	str	r3, [sp, #116]	; 0x74
 8014fc2:	bfba      	itte	lt
 8014fc4:	425b      	neglt	r3, r3
 8014fc6:	222d      	movlt	r2, #45	; 0x2d
 8014fc8:	222b      	movge	r2, #43	; 0x2b
 8014fca:	2b09      	cmp	r3, #9
 8014fcc:	f88d 507c 	strb.w	r5, [sp, #124]	; 0x7c
 8014fd0:	f88d 207d 	strb.w	r2, [sp, #125]	; 0x7d
 8014fd4:	dd72      	ble.n	80150bc <_svfprintf_r+0x1400>
 8014fd6:	f10d 0e8b 	add.w	lr, sp, #139	; 0x8b
 8014fda:	4670      	mov	r0, lr
 8014fdc:	4a5b      	ldr	r2, [pc, #364]	; (801514c <_svfprintf_r+0x1490>)
 8014fde:	fb82 2103 	smull	r2, r1, r2, r3
 8014fe2:	17da      	asrs	r2, r3, #31
 8014fe4:	ebc2 02a1 	rsb	r2, r2, r1, asr #2
 8014fe8:	eb02 0182 	add.w	r1, r2, r2, lsl #2
 8014fec:	eba3 0341 	sub.w	r3, r3, r1, lsl #1
 8014ff0:	f103 0130 	add.w	r1, r3, #48	; 0x30
 8014ff4:	2a09      	cmp	r2, #9
 8014ff6:	4613      	mov	r3, r2
 8014ff8:	f800 1d01 	strb.w	r1, [r0, #-1]!
 8014ffc:	dcee      	bgt.n	8014fdc <_svfprintf_r+0x1320>
 8014ffe:	4602      	mov	r2, r0
 8015000:	3330      	adds	r3, #48	; 0x30
 8015002:	b2d9      	uxtb	r1, r3
 8015004:	f802 1d01 	strb.w	r1, [r2, #-1]!
 8015008:	4596      	cmp	lr, r2
 801500a:	f240 8099 	bls.w	8015140 <_svfprintf_r+0x1484>
 801500e:	f10d 027e 	add.w	r2, sp, #126	; 0x7e
 8015012:	4603      	mov	r3, r0
 8015014:	e001      	b.n	801501a <_svfprintf_r+0x135e>
 8015016:	f813 1b01 	ldrb.w	r1, [r3], #1
 801501a:	f802 1b01 	strb.w	r1, [r2], #1
 801501e:	4573      	cmp	r3, lr
 8015020:	d1f9      	bne.n	8015016 <_svfprintf_r+0x135a>
 8015022:	ab23      	add	r3, sp, #140	; 0x8c
 8015024:	1a1b      	subs	r3, r3, r0
 8015026:	f10d 027e 	add.w	r2, sp, #126	; 0x7e
 801502a:	4413      	add	r3, r2
 801502c:	aa1f      	add	r2, sp, #124	; 0x7c
 801502e:	1a9b      	subs	r3, r3, r2
 8015030:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015032:	9319      	str	r3, [sp, #100]	; 0x64
 8015034:	2a01      	cmp	r2, #1
 8015036:	4413      	add	r3, r2
 8015038:	930d      	str	r3, [sp, #52]	; 0x34
 801503a:	dd6b      	ble.n	8015114 <_svfprintf_r+0x1458>
 801503c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801503e:	2200      	movs	r2, #0
 8015040:	3301      	adds	r3, #1
 8015042:	930d      	str	r3, [sp, #52]	; 0x34
 8015044:	9212      	str	r2, [sp, #72]	; 0x48
 8015046:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801504a:	e6cf      	b.n	8014dec <_svfprintf_r+0x1130>
 801504c:	9808      	ldr	r0, [sp, #32]
 801504e:	4631      	mov	r1, r6
 8015050:	aa23      	add	r2, sp, #140	; 0x8c
 8015052:	f003 ffd9 	bl	8019008 <__ssprint_r>
 8015056:	2800      	cmp	r0, #0
 8015058:	f47e aef6 	bne.w	8013e48 <_svfprintf_r+0x18c>
 801505c:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801505e:	9925      	ldr	r1, [sp, #148]	; 0x94
 8015060:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015062:	463a      	mov	r2, r7
 8015064:	e601      	b.n	8014c6a <_svfprintf_r+0xfae>
 8015066:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015068:	2b00      	cmp	r3, #0
 801506a:	bfd8      	it	le
 801506c:	f1c3 0802 	rsble	r8, r3, #2
 8015070:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015072:	bfc8      	it	gt
 8015074:	f04f 0801 	movgt.w	r8, #1
 8015078:	4443      	add	r3, r8
 801507a:	930d      	str	r3, [sp, #52]	; 0x34
 801507c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015080:	e6b4      	b.n	8014dec <_svfprintf_r+0x1130>
 8015082:	2b00      	cmp	r3, #0
 8015084:	dd30      	ble.n	80150e8 <_svfprintf_r+0x142c>
 8015086:	f1bb 0f00 	cmp.w	fp, #0
 801508a:	d125      	bne.n	80150d8 <_svfprintf_r+0x141c>
 801508c:	9b07      	ldr	r3, [sp, #28]
 801508e:	07db      	lsls	r3, r3, #31
 8015090:	d422      	bmi.n	80150d8 <_svfprintf_r+0x141c>
 8015092:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015094:	920d      	str	r2, [sp, #52]	; 0x34
 8015096:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 801509a:	e6a7      	b.n	8014dec <_svfprintf_r+0x1130>
 801509c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801509e:	e68a      	b.n	8014db6 <_svfprintf_r+0x10fa>
 80150a0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80150a2:	4651      	mov	r1, sl
 80150a4:	2200      	movs	r2, #0
 80150a6:	2300      	movs	r3, #0
 80150a8:	f7eb fd28 	bl	8000afc <__aeabi_dcmpeq>
 80150ac:	2800      	cmp	r0, #0
 80150ae:	f47f af13 	bne.w	8014ed8 <_svfprintf_r+0x121c>
 80150b2:	f1c9 0301 	rsb	r3, r9, #1
 80150b6:	931d      	str	r3, [sp, #116]	; 0x74
 80150b8:	4498      	add	r8, r3
 80150ba:	e669      	b.n	8014d90 <_svfprintf_r+0x10d4>
 80150bc:	3330      	adds	r3, #48	; 0x30
 80150be:	2230      	movs	r2, #48	; 0x30
 80150c0:	f88d 307f 	strb.w	r3, [sp, #127]	; 0x7f
 80150c4:	f88d 207e 	strb.w	r2, [sp, #126]	; 0x7e
 80150c8:	ab20      	add	r3, sp, #128	; 0x80
 80150ca:	e7af      	b.n	801502c <_svfprintf_r+0x1370>
 80150cc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80150ce:	3301      	adds	r3, #1
 80150d0:	930d      	str	r3, [sp, #52]	; 0x34
 80150d2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80150d6:	e689      	b.n	8014dec <_svfprintf_r+0x1130>
 80150d8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80150da:	f10b 0801 	add.w	r8, fp, #1
 80150de:	4443      	add	r3, r8
 80150e0:	930d      	str	r3, [sp, #52]	; 0x34
 80150e2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80150e6:	e681      	b.n	8014dec <_svfprintf_r+0x1130>
 80150e8:	f1bb 0f00 	cmp.w	fp, #0
 80150ec:	d11b      	bne.n	8015126 <_svfprintf_r+0x146a>
 80150ee:	9b07      	ldr	r3, [sp, #28]
 80150f0:	07d8      	lsls	r0, r3, #31
 80150f2:	d418      	bmi.n	8015126 <_svfprintf_r+0x146a>
 80150f4:	2301      	movs	r3, #1
 80150f6:	930d      	str	r3, [sp, #52]	; 0x34
 80150f8:	e678      	b.n	8014dec <_svfprintf_r+0x1130>
 80150fa:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80150fc:	f8d5 a000 	ldr.w	sl, [r5]
 8015100:	4628      	mov	r0, r5
 8015102:	3004      	adds	r0, #4
 8015104:	f1ba 0f00 	cmp.w	sl, #0
 8015108:	785d      	ldrb	r5, [r3, #1]
 801510a:	900e      	str	r0, [sp, #56]	; 0x38
 801510c:	f6be ae29 	bge.w	8013d62 <_svfprintf_r+0xa6>
 8015110:	f7fe be25 	b.w	8013d5e <_svfprintf_r+0xa2>
 8015114:	9b07      	ldr	r3, [sp, #28]
 8015116:	f013 0301 	ands.w	r3, r3, #1
 801511a:	d18f      	bne.n	801503c <_svfprintf_r+0x1380>
 801511c:	9312      	str	r3, [sp, #72]	; 0x48
 801511e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015120:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015124:	e662      	b.n	8014dec <_svfprintf_r+0x1130>
 8015126:	f10b 0302 	add.w	r3, fp, #2
 801512a:	930d      	str	r3, [sp, #52]	; 0x34
 801512c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015130:	e65c      	b.n	8014dec <_svfprintf_r+0x1130>
 8015132:	9a08      	ldr	r2, [sp, #32]
 8015134:	230c      	movs	r3, #12
 8015136:	6013      	str	r3, [r2, #0]
 8015138:	f04f 30ff 	mov.w	r0, #4294967295
 801513c:	f7fe be8e 	b.w	8013e5c <_svfprintf_r+0x1a0>
 8015140:	f10d 037e 	add.w	r3, sp, #126	; 0x7e
 8015144:	e772      	b.n	801502c <_svfprintf_r+0x1370>
 8015146:	bf00      	nop
 8015148:	0802e4b8 	.word	0x0802e4b8
 801514c:	66666667 	.word	0x66666667

08015150 <_vfprintf_r>:
 8015150:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015154:	b0bf      	sub	sp, #252	; 0xfc
 8015156:	461c      	mov	r4, r3
 8015158:	4689      	mov	r9, r1
 801515a:	9208      	str	r2, [sp, #32]
 801515c:	4607      	mov	r7, r0
 801515e:	f002 fe99 	bl	8017e94 <_localeconv_r>
 8015162:	6803      	ldr	r3, [r0, #0]
 8015164:	9315      	str	r3, [sp, #84]	; 0x54
 8015166:	4618      	mov	r0, r3
 8015168:	f7fe fd7a 	bl	8013c60 <strlen>
 801516c:	940c      	str	r4, [sp, #48]	; 0x30
 801516e:	9016      	str	r0, [sp, #88]	; 0x58
 8015170:	b11f      	cbz	r7, 801517a <_vfprintf_r+0x2a>
 8015172:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8015174:	2b00      	cmp	r3, #0
 8015176:	f000 80f3 	beq.w	8015360 <_vfprintf_r+0x210>
 801517a:	f8b9 200c 	ldrh.w	r2, [r9, #12]
 801517e:	b293      	uxth	r3, r2
 8015180:	049d      	lsls	r5, r3, #18
 8015182:	d40a      	bmi.n	801519a <_vfprintf_r+0x4a>
 8015184:	f8d9 1064 	ldr.w	r1, [r9, #100]	; 0x64
 8015188:	f442 5300 	orr.w	r3, r2, #8192	; 0x2000
 801518c:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
 8015190:	f8a9 300c 	strh.w	r3, [r9, #12]
 8015194:	f8c9 1064 	str.w	r1, [r9, #100]	; 0x64
 8015198:	b29b      	uxth	r3, r3
 801519a:	0718      	lsls	r0, r3, #28
 801519c:	f140 80aa 	bpl.w	80152f4 <_vfprintf_r+0x1a4>
 80151a0:	f8d9 2010 	ldr.w	r2, [r9, #16]
 80151a4:	2a00      	cmp	r2, #0
 80151a6:	f000 80a5 	beq.w	80152f4 <_vfprintf_r+0x1a4>
 80151aa:	f003 031a 	and.w	r3, r3, #26
 80151ae:	2b0a      	cmp	r3, #10
 80151b0:	f000 80ac 	beq.w	801530c <_vfprintf_r+0x1bc>
 80151b4:	2300      	movs	r3, #0
 80151b6:	461a      	mov	r2, r3
 80151b8:	9311      	str	r3, [sp, #68]	; 0x44
 80151ba:	9323      	str	r3, [sp, #140]	; 0x8c
 80151bc:	9322      	str	r3, [sp, #136]	; 0x88
 80151be:	9314      	str	r3, [sp, #80]	; 0x50
 80151c0:	9317      	str	r3, [sp, #92]	; 0x5c
 80151c2:	9309      	str	r3, [sp, #36]	; 0x24
 80151c4:	ab2e      	add	r3, sp, #184	; 0xb8
 80151c6:	469c      	mov	ip, r3
 80151c8:	9321      	str	r3, [sp, #132]	; 0x84
 80151ca:	9212      	str	r2, [sp, #72]	; 0x48
 80151cc:	9213      	str	r2, [sp, #76]	; 0x4c
 80151ce:	4664      	mov	r4, ip
 80151d0:	46b8      	mov	r8, r7
 80151d2:	9d08      	ldr	r5, [sp, #32]
 80151d4:	782b      	ldrb	r3, [r5, #0]
 80151d6:	2b00      	cmp	r3, #0
 80151d8:	f000 80c6 	beq.w	8015368 <_vfprintf_r+0x218>
 80151dc:	2b25      	cmp	r3, #37	; 0x25
 80151de:	d102      	bne.n	80151e6 <_vfprintf_r+0x96>
 80151e0:	e0c2      	b.n	8015368 <_vfprintf_r+0x218>
 80151e2:	2b25      	cmp	r3, #37	; 0x25
 80151e4:	d003      	beq.n	80151ee <_vfprintf_r+0x9e>
 80151e6:	f815 3f01 	ldrb.w	r3, [r5, #1]!
 80151ea:	2b00      	cmp	r3, #0
 80151ec:	d1f9      	bne.n	80151e2 <_vfprintf_r+0x92>
 80151ee:	9b08      	ldr	r3, [sp, #32]
 80151f0:	1aee      	subs	r6, r5, r3
 80151f2:	b17e      	cbz	r6, 8015214 <_vfprintf_r+0xc4>
 80151f4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80151f6:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80151f8:	9908      	ldr	r1, [sp, #32]
 80151fa:	6021      	str	r1, [r4, #0]
 80151fc:	3301      	adds	r3, #1
 80151fe:	4432      	add	r2, r6
 8015200:	2b07      	cmp	r3, #7
 8015202:	6066      	str	r6, [r4, #4]
 8015204:	9223      	str	r2, [sp, #140]	; 0x8c
 8015206:	9322      	str	r3, [sp, #136]	; 0x88
 8015208:	f300 8093 	bgt.w	8015332 <_vfprintf_r+0x1e2>
 801520c:	3408      	adds	r4, #8
 801520e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015210:	4433      	add	r3, r6
 8015212:	9309      	str	r3, [sp, #36]	; 0x24
 8015214:	782b      	ldrb	r3, [r5, #0]
 8015216:	2b00      	cmp	r3, #0
 8015218:	f000 8093 	beq.w	8015342 <_vfprintf_r+0x1f2>
 801521c:	2300      	movs	r3, #0
 801521e:	1c69      	adds	r1, r5, #1
 8015220:	f04f 3aff 	mov.w	sl, #4294967295
 8015224:	786d      	ldrb	r5, [r5, #1]
 8015226:	f88d 3067 	strb.w	r3, [sp, #103]	; 0x67
 801522a:	461a      	mov	r2, r3
 801522c:	930a      	str	r3, [sp, #40]	; 0x28
 801522e:	9306      	str	r3, [sp, #24]
 8015230:	4656      	mov	r6, sl
 8015232:	1c4b      	adds	r3, r1, #1
 8015234:	f1a5 0120 	sub.w	r1, r5, #32
 8015238:	2958      	cmp	r1, #88	; 0x58
 801523a:	f200 83c1 	bhi.w	80159c0 <_vfprintf_r+0x870>
 801523e:	e8df f011 	tbh	[pc, r1, lsl #1]
 8015242:	0256      	.short	0x0256
 8015244:	03bf03bf 	.word	0x03bf03bf
 8015248:	03bf02f6 	.word	0x03bf02f6
 801524c:	03bf03bf 	.word	0x03bf03bf
 8015250:	03bf03bf 	.word	0x03bf03bf
 8015254:	02fd03bf 	.word	0x02fd03bf
 8015258:	03bf02c6 	.word	0x03bf02c6
 801525c:	034701f2 	.word	0x034701f2
 8015260:	02ca03bf 	.word	0x02ca03bf
 8015264:	02d102d1 	.word	0x02d102d1
 8015268:	02d102d1 	.word	0x02d102d1
 801526c:	02d102d1 	.word	0x02d102d1
 8015270:	02d102d1 	.word	0x02d102d1
 8015274:	03bf02d1 	.word	0x03bf02d1
 8015278:	03bf03bf 	.word	0x03bf03bf
 801527c:	03bf03bf 	.word	0x03bf03bf
 8015280:	03bf03bf 	.word	0x03bf03bf
 8015284:	03bf03bf 	.word	0x03bf03bf
 8015288:	026b03bf 	.word	0x026b03bf
 801528c:	03bf028d 	.word	0x03bf028d
 8015290:	03bf028d 	.word	0x03bf028d
 8015294:	03bf03bf 	.word	0x03bf03bf
 8015298:	02bf03bf 	.word	0x02bf03bf
 801529c:	03bf03bf 	.word	0x03bf03bf
 80152a0:	03bf0362 	.word	0x03bf0362
 80152a4:	03bf03bf 	.word	0x03bf03bf
 80152a8:	03bf03bf 	.word	0x03bf03bf
 80152ac:	03bf03a9 	.word	0x03bf03a9
 80152b0:	037f03bf 	.word	0x037f03bf
 80152b4:	03bf03bf 	.word	0x03bf03bf
 80152b8:	03bf03bf 	.word	0x03bf03bf
 80152bc:	03bf03bf 	.word	0x03bf03bf
 80152c0:	03bf03bf 	.word	0x03bf03bf
 80152c4:	03bf03bf 	.word	0x03bf03bf
 80152c8:	030b0394 	.word	0x030b0394
 80152cc:	028d028d 	.word	0x028d028d
 80152d0:	0324028d 	.word	0x0324028d
 80152d4:	03bf030b 	.word	0x03bf030b
 80152d8:	032b03bf 	.word	0x032b03bf
 80152dc:	033503bf 	.word	0x033503bf
 80152e0:	02e001f9 	.word	0x02e001f9
 80152e4:	03bf025d 	.word	0x03bf025d
 80152e8:	03bf020b 	.word	0x03bf020b
 80152ec:	03bf0095 	.word	0x03bf0095
 80152f0:	023003bf 	.word	0x023003bf
 80152f4:	4638      	mov	r0, r7
 80152f6:	4649      	mov	r1, r9
 80152f8:	f001 f95a 	bl	80165b0 <__swsetup_r>
 80152fc:	b9a0      	cbnz	r0, 8015328 <_vfprintf_r+0x1d8>
 80152fe:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 8015302:	f003 031a 	and.w	r3, r3, #26
 8015306:	2b0a      	cmp	r3, #10
 8015308:	f47f af54 	bne.w	80151b4 <_vfprintf_r+0x64>
 801530c:	f9b9 300e 	ldrsh.w	r3, [r9, #14]
 8015310:	2b00      	cmp	r3, #0
 8015312:	f6ff af4f 	blt.w	80151b4 <_vfprintf_r+0x64>
 8015316:	4638      	mov	r0, r7
 8015318:	4649      	mov	r1, r9
 801531a:	9a08      	ldr	r2, [sp, #32]
 801531c:	4623      	mov	r3, r4
 801531e:	f001 f90b 	bl	8016538 <__sbprintf>
 8015322:	b03f      	add	sp, #252	; 0xfc
 8015324:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015328:	f04f 30ff 	mov.w	r0, #4294967295
 801532c:	b03f      	add	sp, #252	; 0xfc
 801532e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015332:	4640      	mov	r0, r8
 8015334:	4649      	mov	r1, r9
 8015336:	aa21      	add	r2, sp, #132	; 0x84
 8015338:	f003 ff24 	bl	8019184 <__sprint_r>
 801533c:	b940      	cbnz	r0, 8015350 <_vfprintf_r+0x200>
 801533e:	ac2e      	add	r4, sp, #184	; 0xb8
 8015340:	e765      	b.n	801520e <_vfprintf_r+0xbe>
 8015342:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015344:	b123      	cbz	r3, 8015350 <_vfprintf_r+0x200>
 8015346:	4640      	mov	r0, r8
 8015348:	4649      	mov	r1, r9
 801534a:	aa21      	add	r2, sp, #132	; 0x84
 801534c:	f003 ff1a 	bl	8019184 <__sprint_r>
 8015350:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 8015354:	065a      	lsls	r2, r3, #25
 8015356:	d4e7      	bmi.n	8015328 <_vfprintf_r+0x1d8>
 8015358:	9809      	ldr	r0, [sp, #36]	; 0x24
 801535a:	b03f      	add	sp, #252	; 0xfc
 801535c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015360:	4638      	mov	r0, r7
 8015362:	f002 faa7 	bl	80178b4 <__sinit>
 8015366:	e708      	b.n	801517a <_vfprintf_r+0x2a>
 8015368:	9d08      	ldr	r5, [sp, #32]
 801536a:	e753      	b.n	8015214 <_vfprintf_r+0xc4>
 801536c:	9308      	str	r3, [sp, #32]
 801536e:	9b06      	ldr	r3, [sp, #24]
 8015370:	46b2      	mov	sl, r6
 8015372:	069e      	lsls	r6, r3, #26
 8015374:	f140 8318 	bpl.w	80159a8 <_vfprintf_r+0x858>
 8015378:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801537a:	3707      	adds	r7, #7
 801537c:	f027 0307 	bic.w	r3, r7, #7
 8015380:	f103 0208 	add.w	r2, r3, #8
 8015384:	e9d3 6700 	ldrd	r6, r7, [r3]
 8015388:	920c      	str	r2, [sp, #48]	; 0x30
 801538a:	2301      	movs	r3, #1
 801538c:	f04f 0c00 	mov.w	ip, #0
 8015390:	f88d c067 	strb.w	ip, [sp, #103]	; 0x67
 8015394:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 8015398:	f1ba 0f00 	cmp.w	sl, #0
 801539c:	db03      	blt.n	80153a6 <_vfprintf_r+0x256>
 801539e:	9a06      	ldr	r2, [sp, #24]
 80153a0:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80153a4:	9206      	str	r2, [sp, #24]
 80153a6:	ea56 0207 	orrs.w	r2, r6, r7
 80153aa:	f040 8319 	bne.w	80159e0 <_vfprintf_r+0x890>
 80153ae:	f1ba 0f00 	cmp.w	sl, #0
 80153b2:	f000 8416 	beq.w	8015be2 <_vfprintf_r+0xa92>
 80153b6:	2b01      	cmp	r3, #1
 80153b8:	f000 831a 	beq.w	80159f0 <_vfprintf_r+0x8a0>
 80153bc:	2b02      	cmp	r3, #2
 80153be:	f000 844c 	beq.w	8015c5a <_vfprintf_r+0xb0a>
 80153c2:	a92e      	add	r1, sp, #184	; 0xb8
 80153c4:	08f2      	lsrs	r2, r6, #3
 80153c6:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
 80153ca:	08f8      	lsrs	r0, r7, #3
 80153cc:	f006 0307 	and.w	r3, r6, #7
 80153d0:	4607      	mov	r7, r0
 80153d2:	4616      	mov	r6, r2
 80153d4:	3330      	adds	r3, #48	; 0x30
 80153d6:	ea56 0207 	orrs.w	r2, r6, r7
 80153da:	f801 3d01 	strb.w	r3, [r1, #-1]!
 80153de:	d1f1      	bne.n	80153c4 <_vfprintf_r+0x274>
 80153e0:	9a06      	ldr	r2, [sp, #24]
 80153e2:	910e      	str	r1, [sp, #56]	; 0x38
 80153e4:	07d0      	lsls	r0, r2, #31
 80153e6:	f100 850d 	bmi.w	8015e04 <_vfprintf_r+0xcb4>
 80153ea:	ab2e      	add	r3, sp, #184	; 0xb8
 80153ec:	1a5b      	subs	r3, r3, r1
 80153ee:	930b      	str	r3, [sp, #44]	; 0x2c
 80153f0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80153f2:	4592      	cmp	sl, r2
 80153f4:	4653      	mov	r3, sl
 80153f6:	bfb8      	it	lt
 80153f8:	4613      	movlt	r3, r2
 80153fa:	9307      	str	r3, [sp, #28]
 80153fc:	2300      	movs	r3, #0
 80153fe:	9310      	str	r3, [sp, #64]	; 0x40
 8015400:	f1bc 0f00 	cmp.w	ip, #0
 8015404:	d002      	beq.n	801540c <_vfprintf_r+0x2bc>
 8015406:	9b07      	ldr	r3, [sp, #28]
 8015408:	3301      	adds	r3, #1
 801540a:	9307      	str	r3, [sp, #28]
 801540c:	9b06      	ldr	r3, [sp, #24]
 801540e:	f013 0302 	ands.w	r3, r3, #2
 8015412:	930d      	str	r3, [sp, #52]	; 0x34
 8015414:	d002      	beq.n	801541c <_vfprintf_r+0x2cc>
 8015416:	9b07      	ldr	r3, [sp, #28]
 8015418:	3302      	adds	r3, #2
 801541a:	9307      	str	r3, [sp, #28]
 801541c:	9b06      	ldr	r3, [sp, #24]
 801541e:	f013 0684 	ands.w	r6, r3, #132	; 0x84
 8015422:	f040 82da 	bne.w	80159da <_vfprintf_r+0x88a>
 8015426:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015428:	9a07      	ldr	r2, [sp, #28]
 801542a:	ebc2 0a03 	rsb	sl, r2, r3
 801542e:	f1ba 0f00 	cmp.w	sl, #0
 8015432:	f340 82d2 	ble.w	80159da <_vfprintf_r+0x88a>
 8015436:	f1ba 0f10 	cmp.w	sl, #16
 801543a:	9923      	ldr	r1, [sp, #140]	; 0x8c
 801543c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801543e:	4fb3      	ldr	r7, [pc, #716]	; (801570c <_vfprintf_r+0x5bc>)
 8015440:	bfc8      	it	gt
 8015442:	f04f 0b10 	movgt.w	fp, #16
 8015446:	dc07      	bgt.n	8015458 <_vfprintf_r+0x308>
 8015448:	e01e      	b.n	8015488 <_vfprintf_r+0x338>
 801544a:	f1aa 0a10 	sub.w	sl, sl, #16
 801544e:	f1ba 0f10 	cmp.w	sl, #16
 8015452:	f104 0408 	add.w	r4, r4, #8
 8015456:	dd17      	ble.n	8015488 <_vfprintf_r+0x338>
 8015458:	3201      	adds	r2, #1
 801545a:	3110      	adds	r1, #16
 801545c:	2a07      	cmp	r2, #7
 801545e:	9123      	str	r1, [sp, #140]	; 0x8c
 8015460:	9222      	str	r2, [sp, #136]	; 0x88
 8015462:	e884 0880 	stmia.w	r4, {r7, fp}
 8015466:	ddf0      	ble.n	801544a <_vfprintf_r+0x2fa>
 8015468:	4640      	mov	r0, r8
 801546a:	4649      	mov	r1, r9
 801546c:	aa21      	add	r2, sp, #132	; 0x84
 801546e:	f003 fe89 	bl	8019184 <__sprint_r>
 8015472:	2800      	cmp	r0, #0
 8015474:	f47f af6c 	bne.w	8015350 <_vfprintf_r+0x200>
 8015478:	f1aa 0a10 	sub.w	sl, sl, #16
 801547c:	f1ba 0f10 	cmp.w	sl, #16
 8015480:	9923      	ldr	r1, [sp, #140]	; 0x8c
 8015482:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8015484:	ac2e      	add	r4, sp, #184	; 0xb8
 8015486:	dce7      	bgt.n	8015458 <_vfprintf_r+0x308>
 8015488:	3201      	adds	r2, #1
 801548a:	eb0a 0b01 	add.w	fp, sl, r1
 801548e:	2a07      	cmp	r2, #7
 8015490:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 8015494:	9222      	str	r2, [sp, #136]	; 0x88
 8015496:	e884 0480 	stmia.w	r4, {r7, sl}
 801549a:	f300 8443 	bgt.w	8015d24 <_vfprintf_r+0xbd4>
 801549e:	f89d c067 	ldrb.w	ip, [sp, #103]	; 0x67
 80154a2:	3408      	adds	r4, #8
 80154a4:	f1bc 0f00 	cmp.w	ip, #0
 80154a8:	d00f      	beq.n	80154ca <_vfprintf_r+0x37a>
 80154aa:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80154ac:	3301      	adds	r3, #1
 80154ae:	f10b 0b01 	add.w	fp, fp, #1
 80154b2:	f10d 0167 	add.w	r1, sp, #103	; 0x67
 80154b6:	2201      	movs	r2, #1
 80154b8:	2b07      	cmp	r3, #7
 80154ba:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 80154be:	9322      	str	r3, [sp, #136]	; 0x88
 80154c0:	e884 0006 	stmia.w	r4, {r1, r2}
 80154c4:	f300 83b7 	bgt.w	8015c36 <_vfprintf_r+0xae6>
 80154c8:	3408      	adds	r4, #8
 80154ca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80154cc:	b173      	cbz	r3, 80154ec <_vfprintf_r+0x39c>
 80154ce:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80154d0:	3301      	adds	r3, #1
 80154d2:	f10b 0b02 	add.w	fp, fp, #2
 80154d6:	a91a      	add	r1, sp, #104	; 0x68
 80154d8:	2202      	movs	r2, #2
 80154da:	2b07      	cmp	r3, #7
 80154dc:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 80154e0:	9322      	str	r3, [sp, #136]	; 0x88
 80154e2:	e884 0006 	stmia.w	r4, {r1, r2}
 80154e6:	f300 839a 	bgt.w	8015c1e <_vfprintf_r+0xace>
 80154ea:	3408      	adds	r4, #8
 80154ec:	2e80      	cmp	r6, #128	; 0x80
 80154ee:	f000 82ea 	beq.w	8015ac6 <_vfprintf_r+0x976>
 80154f2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80154f4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80154f6:	ebc2 0a03 	rsb	sl, r2, r3
 80154fa:	f1ba 0f00 	cmp.w	sl, #0
 80154fe:	dd32      	ble.n	8015566 <_vfprintf_r+0x416>
 8015500:	f1ba 0f10 	cmp.w	sl, #16
 8015504:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8015506:	4f82      	ldr	r7, [pc, #520]	; (8015710 <_vfprintf_r+0x5c0>)
 8015508:	dd22      	ble.n	8015550 <_vfprintf_r+0x400>
 801550a:	2610      	movs	r6, #16
 801550c:	465b      	mov	r3, fp
 801550e:	e006      	b.n	801551e <_vfprintf_r+0x3ce>
 8015510:	f1aa 0a10 	sub.w	sl, sl, #16
 8015514:	f1ba 0f10 	cmp.w	sl, #16
 8015518:	f104 0408 	add.w	r4, r4, #8
 801551c:	dd17      	ble.n	801554e <_vfprintf_r+0x3fe>
 801551e:	3201      	adds	r2, #1
 8015520:	3310      	adds	r3, #16
 8015522:	2a07      	cmp	r2, #7
 8015524:	9323      	str	r3, [sp, #140]	; 0x8c
 8015526:	9222      	str	r2, [sp, #136]	; 0x88
 8015528:	6027      	str	r7, [r4, #0]
 801552a:	6066      	str	r6, [r4, #4]
 801552c:	ddf0      	ble.n	8015510 <_vfprintf_r+0x3c0>
 801552e:	4640      	mov	r0, r8
 8015530:	4649      	mov	r1, r9
 8015532:	aa21      	add	r2, sp, #132	; 0x84
 8015534:	f003 fe26 	bl	8019184 <__sprint_r>
 8015538:	2800      	cmp	r0, #0
 801553a:	f47f af09 	bne.w	8015350 <_vfprintf_r+0x200>
 801553e:	f1aa 0a10 	sub.w	sl, sl, #16
 8015542:	f1ba 0f10 	cmp.w	sl, #16
 8015546:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015548:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801554a:	ac2e      	add	r4, sp, #184	; 0xb8
 801554c:	dce7      	bgt.n	801551e <_vfprintf_r+0x3ce>
 801554e:	469b      	mov	fp, r3
 8015550:	3201      	adds	r2, #1
 8015552:	44d3      	add	fp, sl
 8015554:	2a07      	cmp	r2, #7
 8015556:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 801555a:	9222      	str	r2, [sp, #136]	; 0x88
 801555c:	e884 0480 	stmia.w	r4, {r7, sl}
 8015560:	f300 8351 	bgt.w	8015c06 <_vfprintf_r+0xab6>
 8015564:	3408      	adds	r4, #8
 8015566:	9b06      	ldr	r3, [sp, #24]
 8015568:	05db      	lsls	r3, r3, #23
 801556a:	f100 8255 	bmi.w	8015a18 <_vfprintf_r+0x8c8>
 801556e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8015570:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8015572:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015574:	6022      	str	r2, [r4, #0]
 8015576:	3301      	adds	r3, #1
 8015578:	448b      	add	fp, r1
 801557a:	2b07      	cmp	r3, #7
 801557c:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 8015580:	6061      	str	r1, [r4, #4]
 8015582:	9322      	str	r3, [sp, #136]	; 0x88
 8015584:	f300 8317 	bgt.w	8015bb6 <_vfprintf_r+0xa66>
 8015588:	3408      	adds	r4, #8
 801558a:	9b06      	ldr	r3, [sp, #24]
 801558c:	0759      	lsls	r1, r3, #29
 801558e:	d53a      	bpl.n	8015606 <_vfprintf_r+0x4b6>
 8015590:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015592:	9a07      	ldr	r2, [sp, #28]
 8015594:	1a9d      	subs	r5, r3, r2
 8015596:	2d00      	cmp	r5, #0
 8015598:	dd35      	ble.n	8015606 <_vfprintf_r+0x4b6>
 801559a:	2d10      	cmp	r5, #16
 801559c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801559e:	4f5b      	ldr	r7, [pc, #364]	; (801570c <_vfprintf_r+0x5bc>)
 80155a0:	dd1e      	ble.n	80155e0 <_vfprintf_r+0x490>
 80155a2:	2610      	movs	r6, #16
 80155a4:	465a      	mov	r2, fp
 80155a6:	e004      	b.n	80155b2 <_vfprintf_r+0x462>
 80155a8:	3d10      	subs	r5, #16
 80155aa:	2d10      	cmp	r5, #16
 80155ac:	f104 0408 	add.w	r4, r4, #8
 80155b0:	dd15      	ble.n	80155de <_vfprintf_r+0x48e>
 80155b2:	3301      	adds	r3, #1
 80155b4:	3210      	adds	r2, #16
 80155b6:	2b07      	cmp	r3, #7
 80155b8:	9223      	str	r2, [sp, #140]	; 0x8c
 80155ba:	9322      	str	r3, [sp, #136]	; 0x88
 80155bc:	6027      	str	r7, [r4, #0]
 80155be:	6066      	str	r6, [r4, #4]
 80155c0:	ddf2      	ble.n	80155a8 <_vfprintf_r+0x458>
 80155c2:	4640      	mov	r0, r8
 80155c4:	4649      	mov	r1, r9
 80155c6:	aa21      	add	r2, sp, #132	; 0x84
 80155c8:	f003 fddc 	bl	8019184 <__sprint_r>
 80155cc:	2800      	cmp	r0, #0
 80155ce:	f47f aebf 	bne.w	8015350 <_vfprintf_r+0x200>
 80155d2:	3d10      	subs	r5, #16
 80155d4:	2d10      	cmp	r5, #16
 80155d6:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80155d8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80155da:	ac2e      	add	r4, sp, #184	; 0xb8
 80155dc:	dce9      	bgt.n	80155b2 <_vfprintf_r+0x462>
 80155de:	4693      	mov	fp, r2
 80155e0:	3301      	adds	r3, #1
 80155e2:	44ab      	add	fp, r5
 80155e4:	2b07      	cmp	r3, #7
 80155e6:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 80155ea:	9322      	str	r3, [sp, #136]	; 0x88
 80155ec:	6027      	str	r7, [r4, #0]
 80155ee:	6065      	str	r5, [r4, #4]
 80155f0:	dd09      	ble.n	8015606 <_vfprintf_r+0x4b6>
 80155f2:	4640      	mov	r0, r8
 80155f4:	4649      	mov	r1, r9
 80155f6:	aa21      	add	r2, sp, #132	; 0x84
 80155f8:	f003 fdc4 	bl	8019184 <__sprint_r>
 80155fc:	2800      	cmp	r0, #0
 80155fe:	f47f aea7 	bne.w	8015350 <_vfprintf_r+0x200>
 8015602:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 8015606:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015608:	9a07      	ldr	r2, [sp, #28]
 801560a:	990a      	ldr	r1, [sp, #40]	; 0x28
 801560c:	428a      	cmp	r2, r1
 801560e:	bfac      	ite	ge
 8015610:	189b      	addge	r3, r3, r2
 8015612:	185b      	addlt	r3, r3, r1
 8015614:	9309      	str	r3, [sp, #36]	; 0x24
 8015616:	f1bb 0f00 	cmp.w	fp, #0
 801561a:	f040 82d8 	bne.w	8015bce <_vfprintf_r+0xa7e>
 801561e:	2300      	movs	r3, #0
 8015620:	9322      	str	r3, [sp, #136]	; 0x88
 8015622:	ac2e      	add	r4, sp, #184	; 0xb8
 8015624:	e5d5      	b.n	80151d2 <_vfprintf_r+0x82>
 8015626:	4619      	mov	r1, r3
 8015628:	9806      	ldr	r0, [sp, #24]
 801562a:	781d      	ldrb	r5, [r3, #0]
 801562c:	f040 0004 	orr.w	r0, r0, #4
 8015630:	9006      	str	r0, [sp, #24]
 8015632:	e5fe      	b.n	8015232 <_vfprintf_r+0xe2>
 8015634:	9308      	str	r3, [sp, #32]
 8015636:	9b06      	ldr	r3, [sp, #24]
 8015638:	f013 0320 	ands.w	r3, r3, #32
 801563c:	46b2      	mov	sl, r6
 801563e:	f000 816d 	beq.w	801591c <_vfprintf_r+0x7cc>
 8015642:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8015644:	3707      	adds	r7, #7
 8015646:	f027 0307 	bic.w	r3, r7, #7
 801564a:	f103 0208 	add.w	r2, r3, #8
 801564e:	e9d3 6700 	ldrd	r6, r7, [r3]
 8015652:	920c      	str	r2, [sp, #48]	; 0x30
 8015654:	2300      	movs	r3, #0
 8015656:	e699      	b.n	801538c <_vfprintf_r+0x23c>
 8015658:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801565a:	9308      	str	r3, [sp, #32]
 801565c:	6813      	ldr	r3, [r2, #0]
 801565e:	930e      	str	r3, [sp, #56]	; 0x38
 8015660:	f04f 0b00 	mov.w	fp, #0
 8015664:	f88d b067 	strb.w	fp, [sp, #103]	; 0x67
 8015668:	1d17      	adds	r7, r2, #4
 801566a:	2b00      	cmp	r3, #0
 801566c:	f000 864f 	beq.w	801630e <_vfprintf_r+0x11be>
 8015670:	2e00      	cmp	r6, #0
 8015672:	980e      	ldr	r0, [sp, #56]	; 0x38
 8015674:	f2c0 8601 	blt.w	801627a <_vfprintf_r+0x112a>
 8015678:	4659      	mov	r1, fp
 801567a:	4632      	mov	r2, r6
 801567c:	f002 ff0c 	bl	8018498 <memchr>
 8015680:	2800      	cmp	r0, #0
 8015682:	f000 8680 	beq.w	8016386 <_vfprintf_r+0x1236>
 8015686:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015688:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
 801568c:	1ac3      	subs	r3, r0, r3
 801568e:	930b      	str	r3, [sp, #44]	; 0x2c
 8015690:	970c      	str	r7, [sp, #48]	; 0x30
 8015692:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015696:	9307      	str	r3, [sp, #28]
 8015698:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 801569c:	f89d c067 	ldrb.w	ip, [sp, #103]	; 0x67
 80156a0:	e6ae      	b.n	8015400 <_vfprintf_r+0x2b0>
 80156a2:	9308      	str	r3, [sp, #32]
 80156a4:	4b1b      	ldr	r3, [pc, #108]	; (8015714 <_vfprintf_r+0x5c4>)
 80156a6:	9314      	str	r3, [sp, #80]	; 0x50
 80156a8:	9b06      	ldr	r3, [sp, #24]
 80156aa:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 80156ae:	0699      	lsls	r1, r3, #26
 80156b0:	46b2      	mov	sl, r6
 80156b2:	f140 814f 	bpl.w	8015954 <_vfprintf_r+0x804>
 80156b6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80156b8:	3707      	adds	r7, #7
 80156ba:	f027 0307 	bic.w	r3, r7, #7
 80156be:	e9d3 6700 	ldrd	r6, r7, [r3]
 80156c2:	f103 0208 	add.w	r2, r3, #8
 80156c6:	920c      	str	r2, [sp, #48]	; 0x30
 80156c8:	9b06      	ldr	r3, [sp, #24]
 80156ca:	07db      	lsls	r3, r3, #31
 80156cc:	f140 82de 	bpl.w	8015c8c <_vfprintf_r+0xb3c>
 80156d0:	ea56 0307 	orrs.w	r3, r6, r7
 80156d4:	f000 82da 	beq.w	8015c8c <_vfprintf_r+0xb3c>
 80156d8:	9a06      	ldr	r2, [sp, #24]
 80156da:	f88d 5069 	strb.w	r5, [sp, #105]	; 0x69
 80156de:	2330      	movs	r3, #48	; 0x30
 80156e0:	f042 0202 	orr.w	r2, r2, #2
 80156e4:	f88d 3068 	strb.w	r3, [sp, #104]	; 0x68
 80156e8:	9206      	str	r2, [sp, #24]
 80156ea:	2302      	movs	r3, #2
 80156ec:	e64e      	b.n	801538c <_vfprintf_r+0x23c>
 80156ee:	781d      	ldrb	r5, [r3, #0]
 80156f0:	4619      	mov	r1, r3
 80156f2:	2a00      	cmp	r2, #0
 80156f4:	f47f ad9d 	bne.w	8015232 <_vfprintf_r+0xe2>
 80156f8:	2220      	movs	r2, #32
 80156fa:	e59a      	b.n	8015232 <_vfprintf_r+0xe2>
 80156fc:	9906      	ldr	r1, [sp, #24]
 80156fe:	f041 0120 	orr.w	r1, r1, #32
 8015702:	9106      	str	r1, [sp, #24]
 8015704:	781d      	ldrb	r5, [r3, #0]
 8015706:	4619      	mov	r1, r3
 8015708:	e593      	b.n	8015232 <_vfprintf_r+0xe2>
 801570a:	bf00      	nop
 801570c:	0802e4e4 	.word	0x0802e4e4
 8015710:	0802e4d4 	.word	0x0802e4d4
 8015714:	0802e4a4 	.word	0x0802e4a4
 8015718:	9308      	str	r3, [sp, #32]
 801571a:	9b06      	ldr	r3, [sp, #24]
 801571c:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 8015720:	f043 0310 	orr.w	r3, r3, #16
 8015724:	9306      	str	r3, [sp, #24]
 8015726:	9b06      	ldr	r3, [sp, #24]
 8015728:	0699      	lsls	r1, r3, #26
 801572a:	46b2      	mov	sl, r6
 801572c:	f140 809c 	bpl.w	8015868 <_vfprintf_r+0x718>
 8015730:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8015732:	3707      	adds	r7, #7
 8015734:	f027 0707 	bic.w	r7, r7, #7
 8015738:	e9d7 2300 	ldrd	r2, r3, [r7]
 801573c:	f107 0108 	add.w	r1, r7, #8
 8015740:	910c      	str	r1, [sp, #48]	; 0x30
 8015742:	4616      	mov	r6, r2
 8015744:	461f      	mov	r7, r3
 8015746:	2a00      	cmp	r2, #0
 8015748:	f173 0300 	sbcs.w	r3, r3, #0
 801574c:	f2c0 8415 	blt.w	8015f7a <_vfprintf_r+0xe2a>
 8015750:	f89d c067 	ldrb.w	ip, [sp, #103]	; 0x67
 8015754:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 8015758:	2301      	movs	r3, #1
 801575a:	e61d      	b.n	8015398 <_vfprintf_r+0x248>
 801575c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801575e:	9308      	str	r3, [sp, #32]
 8015760:	3707      	adds	r7, #7
 8015762:	f027 0307 	bic.w	r3, r7, #7
 8015766:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 801576a:	f103 0208 	add.w	r2, r3, #8
 801576e:	920c      	str	r2, [sp, #48]	; 0x30
 8015770:	681a      	ldr	r2, [r3, #0]
 8015772:	9212      	str	r2, [sp, #72]	; 0x48
 8015774:	685b      	ldr	r3, [r3, #4]
 8015776:	9313      	str	r3, [sp, #76]	; 0x4c
 8015778:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801577a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801577c:	f003 fbc4 	bl	8018f08 <__fpclassifyd>
 8015780:	2801      	cmp	r0, #1
 8015782:	46b3      	mov	fp, r6
 8015784:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015786:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8015788:	f040 8406 	bne.w	8015f98 <_vfprintf_r+0xe48>
 801578c:	2200      	movs	r2, #0
 801578e:	2300      	movs	r3, #0
 8015790:	f7eb f9be 	bl	8000b10 <__aeabi_dcmplt>
 8015794:	2800      	cmp	r0, #0
 8015796:	f040 85ee 	bne.w	8016376 <_vfprintf_r+0x1226>
 801579a:	f89d c067 	ldrb.w	ip, [sp, #103]	; 0x67
 801579e:	9e06      	ldr	r6, [sp, #24]
 80157a0:	4a99      	ldr	r2, [pc, #612]	; (8015a08 <_vfprintf_r+0x8b8>)
 80157a2:	4b9a      	ldr	r3, [pc, #616]	; (8015a0c <_vfprintf_r+0x8bc>)
 80157a4:	2103      	movs	r1, #3
 80157a6:	2000      	movs	r0, #0
 80157a8:	f026 0680 	bic.w	r6, r6, #128	; 0x80
 80157ac:	2d47      	cmp	r5, #71	; 0x47
 80157ae:	bfd8      	it	le
 80157b0:	461a      	movle	r2, r3
 80157b2:	9107      	str	r1, [sp, #28]
 80157b4:	900f      	str	r0, [sp, #60]	; 0x3c
 80157b6:	9606      	str	r6, [sp, #24]
 80157b8:	920e      	str	r2, [sp, #56]	; 0x38
 80157ba:	910b      	str	r1, [sp, #44]	; 0x2c
 80157bc:	9010      	str	r0, [sp, #64]	; 0x40
 80157be:	e61f      	b.n	8015400 <_vfprintf_r+0x2b0>
 80157c0:	9906      	ldr	r1, [sp, #24]
 80157c2:	f041 0108 	orr.w	r1, r1, #8
 80157c6:	9106      	str	r1, [sp, #24]
 80157c8:	781d      	ldrb	r5, [r3, #0]
 80157ca:	4619      	mov	r1, r3
 80157cc:	e531      	b.n	8015232 <_vfprintf_r+0xe2>
 80157ce:	781d      	ldrb	r5, [r3, #0]
 80157d0:	4619      	mov	r1, r3
 80157d2:	222b      	movs	r2, #43	; 0x2b
 80157d4:	e52d      	b.n	8015232 <_vfprintf_r+0xe2>
 80157d6:	9906      	ldr	r1, [sp, #24]
 80157d8:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80157dc:	9106      	str	r1, [sp, #24]
 80157de:	781d      	ldrb	r5, [r3, #0]
 80157e0:	4619      	mov	r1, r3
 80157e2:	e526      	b.n	8015232 <_vfprintf_r+0xe2>
 80157e4:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
 80157e8:	2100      	movs	r1, #0
 80157ea:	f813 5b01 	ldrb.w	r5, [r3], #1
 80157ee:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 80157f2:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80157f6:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
 80157fa:	2809      	cmp	r0, #9
 80157fc:	d9f5      	bls.n	80157ea <_vfprintf_r+0x69a>
 80157fe:	910a      	str	r1, [sp, #40]	; 0x28
 8015800:	e518      	b.n	8015234 <_vfprintf_r+0xe4>
 8015802:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015804:	9308      	str	r3, [sp, #32]
 8015806:	2330      	movs	r3, #48	; 0x30
 8015808:	9a06      	ldr	r2, [sp, #24]
 801580a:	f88d 3068 	strb.w	r3, [sp, #104]	; 0x68
 801580e:	460b      	mov	r3, r1
 8015810:	3304      	adds	r3, #4
 8015812:	2578      	movs	r5, #120	; 0x78
 8015814:	f042 0202 	orr.w	r2, r2, #2
 8015818:	930c      	str	r3, [sp, #48]	; 0x30
 801581a:	4b7d      	ldr	r3, [pc, #500]	; (8015a10 <_vfprintf_r+0x8c0>)
 801581c:	9314      	str	r3, [sp, #80]	; 0x50
 801581e:	46b2      	mov	sl, r6
 8015820:	9206      	str	r2, [sp, #24]
 8015822:	680e      	ldr	r6, [r1, #0]
 8015824:	f88d 5069 	strb.w	r5, [sp, #105]	; 0x69
 8015828:	2700      	movs	r7, #0
 801582a:	2302      	movs	r3, #2
 801582c:	e5ae      	b.n	801538c <_vfprintf_r+0x23c>
 801582e:	9906      	ldr	r1, [sp, #24]
 8015830:	f041 0101 	orr.w	r1, r1, #1
 8015834:	9106      	str	r1, [sp, #24]
 8015836:	781d      	ldrb	r5, [r3, #0]
 8015838:	4619      	mov	r1, r3
 801583a:	e4fa      	b.n	8015232 <_vfprintf_r+0xe2>
 801583c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801583e:	6829      	ldr	r1, [r5, #0]
 8015840:	910a      	str	r1, [sp, #40]	; 0x28
 8015842:	4608      	mov	r0, r1
 8015844:	2800      	cmp	r0, #0
 8015846:	4629      	mov	r1, r5
 8015848:	f101 0104 	add.w	r1, r1, #4
 801584c:	f2c0 84e3 	blt.w	8016216 <_vfprintf_r+0x10c6>
 8015850:	910c      	str	r1, [sp, #48]	; 0x30
 8015852:	781d      	ldrb	r5, [r3, #0]
 8015854:	4619      	mov	r1, r3
 8015856:	e4ec      	b.n	8015232 <_vfprintf_r+0xe2>
 8015858:	9308      	str	r3, [sp, #32]
 801585a:	9b06      	ldr	r3, [sp, #24]
 801585c:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 8015860:	0699      	lsls	r1, r3, #26
 8015862:	46b2      	mov	sl, r6
 8015864:	f53f af64 	bmi.w	8015730 <_vfprintf_r+0x5e0>
 8015868:	9b06      	ldr	r3, [sp, #24]
 801586a:	06da      	lsls	r2, r3, #27
 801586c:	f100 8292 	bmi.w	8015d94 <_vfprintf_r+0xc44>
 8015870:	9b06      	ldr	r3, [sp, #24]
 8015872:	065b      	lsls	r3, r3, #25
 8015874:	f140 828e 	bpl.w	8015d94 <_vfprintf_r+0xc44>
 8015878:	990c      	ldr	r1, [sp, #48]	; 0x30
 801587a:	f9b1 6000 	ldrsh.w	r6, [r1]
 801587e:	3104      	adds	r1, #4
 8015880:	17f7      	asrs	r7, r6, #31
 8015882:	4632      	mov	r2, r6
 8015884:	463b      	mov	r3, r7
 8015886:	910c      	str	r1, [sp, #48]	; 0x30
 8015888:	e75d      	b.n	8015746 <_vfprintf_r+0x5f6>
 801588a:	9906      	ldr	r1, [sp, #24]
 801588c:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8015890:	9106      	str	r1, [sp, #24]
 8015892:	781d      	ldrb	r5, [r3, #0]
 8015894:	4619      	mov	r1, r3
 8015896:	e4cc      	b.n	8015232 <_vfprintf_r+0xe2>
 8015898:	781d      	ldrb	r5, [r3, #0]
 801589a:	9906      	ldr	r1, [sp, #24]
 801589c:	2d6c      	cmp	r5, #108	; 0x6c
 801589e:	f000 84b3 	beq.w	8016208 <_vfprintf_r+0x10b8>
 80158a2:	f041 0110 	orr.w	r1, r1, #16
 80158a6:	9106      	str	r1, [sp, #24]
 80158a8:	4619      	mov	r1, r3
 80158aa:	e4c2      	b.n	8015232 <_vfprintf_r+0xe2>
 80158ac:	9308      	str	r3, [sp, #32]
 80158ae:	9b06      	ldr	r3, [sp, #24]
 80158b0:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 80158b4:	069a      	lsls	r2, r3, #26
 80158b6:	f140 8400 	bpl.w	80160ba <_vfprintf_r+0xf6a>
 80158ba:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80158bc:	9909      	ldr	r1, [sp, #36]	; 0x24
 80158be:	6813      	ldr	r3, [r2, #0]
 80158c0:	17cf      	asrs	r7, r1, #31
 80158c2:	4608      	mov	r0, r1
 80158c4:	3204      	adds	r2, #4
 80158c6:	4639      	mov	r1, r7
 80158c8:	920c      	str	r2, [sp, #48]	; 0x30
 80158ca:	e9c3 0100 	strd	r0, r1, [r3]
 80158ce:	e480      	b.n	80151d2 <_vfprintf_r+0x82>
 80158d0:	781d      	ldrb	r5, [r3, #0]
 80158d2:	2d2a      	cmp	r5, #42	; 0x2a
 80158d4:	f103 0101 	add.w	r1, r3, #1
 80158d8:	f000 860e 	beq.w	80164f8 <_vfprintf_r+0x13a8>
 80158dc:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
 80158e0:	2809      	cmp	r0, #9
 80158e2:	460b      	mov	r3, r1
 80158e4:	f04f 0600 	mov.w	r6, #0
 80158e8:	f63f aca4 	bhi.w	8015234 <_vfprintf_r+0xe4>
 80158ec:	f813 5b01 	ldrb.w	r5, [r3], #1
 80158f0:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 80158f4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80158f8:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
 80158fc:	2809      	cmp	r0, #9
 80158fe:	d9f5      	bls.n	80158ec <_vfprintf_r+0x79c>
 8015900:	ea46 76e6 	orr.w	r6, r6, r6, asr #31
 8015904:	e496      	b.n	8015234 <_vfprintf_r+0xe4>
 8015906:	9308      	str	r3, [sp, #32]
 8015908:	9b06      	ldr	r3, [sp, #24]
 801590a:	f043 0310 	orr.w	r3, r3, #16
 801590e:	9306      	str	r3, [sp, #24]
 8015910:	9b06      	ldr	r3, [sp, #24]
 8015912:	f013 0320 	ands.w	r3, r3, #32
 8015916:	46b2      	mov	sl, r6
 8015918:	f47f ae93 	bne.w	8015642 <_vfprintf_r+0x4f2>
 801591c:	9a06      	ldr	r2, [sp, #24]
 801591e:	f012 0210 	ands.w	r2, r2, #16
 8015922:	f040 8240 	bne.w	8015da6 <_vfprintf_r+0xc56>
 8015926:	9b06      	ldr	r3, [sp, #24]
 8015928:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 801592c:	f000 823b 	beq.w	8015da6 <_vfprintf_r+0xc56>
 8015930:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015932:	4613      	mov	r3, r2
 8015934:	460a      	mov	r2, r1
 8015936:	3204      	adds	r2, #4
 8015938:	880e      	ldrh	r6, [r1, #0]
 801593a:	920c      	str	r2, [sp, #48]	; 0x30
 801593c:	2700      	movs	r7, #0
 801593e:	e525      	b.n	801538c <_vfprintf_r+0x23c>
 8015940:	9308      	str	r3, [sp, #32]
 8015942:	4b34      	ldr	r3, [pc, #208]	; (8015a14 <_vfprintf_r+0x8c4>)
 8015944:	9314      	str	r3, [sp, #80]	; 0x50
 8015946:	9b06      	ldr	r3, [sp, #24]
 8015948:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 801594c:	0699      	lsls	r1, r3, #26
 801594e:	46b2      	mov	sl, r6
 8015950:	f53f aeb1 	bmi.w	80156b6 <_vfprintf_r+0x566>
 8015954:	9b06      	ldr	r3, [sp, #24]
 8015956:	06da      	lsls	r2, r3, #27
 8015958:	f140 83c6 	bpl.w	80160e8 <_vfprintf_r+0xf98>
 801595c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801595e:	4613      	mov	r3, r2
 8015960:	3304      	adds	r3, #4
 8015962:	6816      	ldr	r6, [r2, #0]
 8015964:	930c      	str	r3, [sp, #48]	; 0x30
 8015966:	2700      	movs	r7, #0
 8015968:	e6ae      	b.n	80156c8 <_vfprintf_r+0x578>
 801596a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801596c:	9308      	str	r3, [sp, #32]
 801596e:	680a      	ldr	r2, [r1, #0]
 8015970:	f88d 2090 	strb.w	r2, [sp, #144]	; 0x90
 8015974:	2300      	movs	r3, #0
 8015976:	2201      	movs	r2, #1
 8015978:	3104      	adds	r1, #4
 801597a:	469c      	mov	ip, r3
 801597c:	9207      	str	r2, [sp, #28]
 801597e:	910c      	str	r1, [sp, #48]	; 0x30
 8015980:	f88d 3067 	strb.w	r3, [sp, #103]	; 0x67
 8015984:	ab24      	add	r3, sp, #144	; 0x90
 8015986:	f8cd c03c 	str.w	ip, [sp, #60]	; 0x3c
 801598a:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
 801598e:	920b      	str	r2, [sp, #44]	; 0x2c
 8015990:	930e      	str	r3, [sp, #56]	; 0x38
 8015992:	e53b      	b.n	801540c <_vfprintf_r+0x2bc>
 8015994:	9308      	str	r3, [sp, #32]
 8015996:	9b06      	ldr	r3, [sp, #24]
 8015998:	f043 0310 	orr.w	r3, r3, #16
 801599c:	9306      	str	r3, [sp, #24]
 801599e:	9b06      	ldr	r3, [sp, #24]
 80159a0:	46b2      	mov	sl, r6
 80159a2:	069e      	lsls	r6, r3, #26
 80159a4:	f53f ace8 	bmi.w	8015378 <_vfprintf_r+0x228>
 80159a8:	9b06      	ldr	r3, [sp, #24]
 80159aa:	06d8      	lsls	r0, r3, #27
 80159ac:	f140 8377 	bpl.w	801609e <_vfprintf_r+0xf4e>
 80159b0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80159b2:	4613      	mov	r3, r2
 80159b4:	3204      	adds	r2, #4
 80159b6:	681e      	ldr	r6, [r3, #0]
 80159b8:	920c      	str	r2, [sp, #48]	; 0x30
 80159ba:	2301      	movs	r3, #1
 80159bc:	2700      	movs	r7, #0
 80159be:	e4e5      	b.n	801538c <_vfprintf_r+0x23c>
 80159c0:	9308      	str	r3, [sp, #32]
 80159c2:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 80159c6:	2d00      	cmp	r5, #0
 80159c8:	f43f acbb 	beq.w	8015342 <_vfprintf_r+0x1f2>
 80159cc:	2300      	movs	r3, #0
 80159ce:	2201      	movs	r2, #1
 80159d0:	469c      	mov	ip, r3
 80159d2:	9207      	str	r2, [sp, #28]
 80159d4:	f88d 5090 	strb.w	r5, [sp, #144]	; 0x90
 80159d8:	e7d2      	b.n	8015980 <_vfprintf_r+0x830>
 80159da:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 80159de:	e561      	b.n	80154a4 <_vfprintf_r+0x354>
 80159e0:	2b01      	cmp	r3, #1
 80159e2:	f47f aceb 	bne.w	80153bc <_vfprintf_r+0x26c>
 80159e6:	2f00      	cmp	r7, #0
 80159e8:	bf08      	it	eq
 80159ea:	2e0a      	cmpeq	r6, #10
 80159ec:	f080 81ef 	bcs.w	8015dce <_vfprintf_r+0xc7e>
 80159f0:	f10d 0bf8 	add.w	fp, sp, #248	; 0xf8
 80159f4:	3630      	adds	r6, #48	; 0x30
 80159f6:	f80b 6d41 	strb.w	r6, [fp, #-65]!
 80159fa:	ab2e      	add	r3, sp, #184	; 0xb8
 80159fc:	ebcb 0303 	rsb	r3, fp, r3
 8015a00:	930b      	str	r3, [sp, #44]	; 0x2c
 8015a02:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
 8015a06:	e4f3      	b.n	80153f0 <_vfprintf_r+0x2a0>
 8015a08:	0802e484 	.word	0x0802e484
 8015a0c:	0802e480 	.word	0x0802e480
 8015a10:	0802e4a4 	.word	0x0802e4a4
 8015a14:	0802e490 	.word	0x0802e490
 8015a18:	2d65      	cmp	r5, #101	; 0x65
 8015a1a:	f340 808a 	ble.w	8015b32 <_vfprintf_r+0x9e2>
 8015a1e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015a20:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8015a22:	2200      	movs	r2, #0
 8015a24:	2300      	movs	r3, #0
 8015a26:	f7eb f869 	bl	8000afc <__aeabi_dcmpeq>
 8015a2a:	2800      	cmp	r0, #0
 8015a2c:	f000 8131 	beq.w	8015c92 <_vfprintf_r+0xb42>
 8015a30:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8015a32:	4aba      	ldr	r2, [pc, #744]	; (8015d1c <_vfprintf_r+0xbcc>)
 8015a34:	6022      	str	r2, [r4, #0]
 8015a36:	3301      	adds	r3, #1
 8015a38:	f10b 0b01 	add.w	fp, fp, #1
 8015a3c:	2201      	movs	r2, #1
 8015a3e:	2b07      	cmp	r3, #7
 8015a40:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 8015a44:	9322      	str	r3, [sp, #136]	; 0x88
 8015a46:	6062      	str	r2, [r4, #4]
 8015a48:	f300 8367 	bgt.w	801611a <_vfprintf_r+0xfca>
 8015a4c:	3408      	adds	r4, #8
 8015a4e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8015a50:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015a52:	4293      	cmp	r3, r2
 8015a54:	db03      	blt.n	8015a5e <_vfprintf_r+0x90e>
 8015a56:	9b06      	ldr	r3, [sp, #24]
 8015a58:	07df      	lsls	r7, r3, #31
 8015a5a:	f57f ad96 	bpl.w	801558a <_vfprintf_r+0x43a>
 8015a5e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8015a60:	9916      	ldr	r1, [sp, #88]	; 0x58
 8015a62:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8015a64:	6022      	str	r2, [r4, #0]
 8015a66:	3301      	adds	r3, #1
 8015a68:	448b      	add	fp, r1
 8015a6a:	2b07      	cmp	r3, #7
 8015a6c:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 8015a70:	6061      	str	r1, [r4, #4]
 8015a72:	9322      	str	r3, [sp, #136]	; 0x88
 8015a74:	f300 83d6 	bgt.w	8016224 <_vfprintf_r+0x10d4>
 8015a78:	3408      	adds	r4, #8
 8015a7a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015a7c:	1e5d      	subs	r5, r3, #1
 8015a7e:	2d00      	cmp	r5, #0
 8015a80:	f77f ad83 	ble.w	801558a <_vfprintf_r+0x43a>
 8015a84:	2d10      	cmp	r5, #16
 8015a86:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8015a88:	4fa5      	ldr	r7, [pc, #660]	; (8015d20 <_vfprintf_r+0xbd0>)
 8015a8a:	f340 8195 	ble.w	8015db8 <_vfprintf_r+0xc68>
 8015a8e:	2610      	movs	r6, #16
 8015a90:	465a      	mov	r2, fp
 8015a92:	e004      	b.n	8015a9e <_vfprintf_r+0x94e>
 8015a94:	3408      	adds	r4, #8
 8015a96:	3d10      	subs	r5, #16
 8015a98:	2d10      	cmp	r5, #16
 8015a9a:	f340 818c 	ble.w	8015db6 <_vfprintf_r+0xc66>
 8015a9e:	3301      	adds	r3, #1
 8015aa0:	3210      	adds	r2, #16
 8015aa2:	2b07      	cmp	r3, #7
 8015aa4:	9223      	str	r2, [sp, #140]	; 0x8c
 8015aa6:	9322      	str	r3, [sp, #136]	; 0x88
 8015aa8:	6027      	str	r7, [r4, #0]
 8015aaa:	6066      	str	r6, [r4, #4]
 8015aac:	ddf2      	ble.n	8015a94 <_vfprintf_r+0x944>
 8015aae:	4640      	mov	r0, r8
 8015ab0:	4649      	mov	r1, r9
 8015ab2:	aa21      	add	r2, sp, #132	; 0x84
 8015ab4:	f003 fb66 	bl	8019184 <__sprint_r>
 8015ab8:	2800      	cmp	r0, #0
 8015aba:	f47f ac49 	bne.w	8015350 <_vfprintf_r+0x200>
 8015abe:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8015ac0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8015ac2:	ac2e      	add	r4, sp, #184	; 0xb8
 8015ac4:	e7e7      	b.n	8015a96 <_vfprintf_r+0x946>
 8015ac6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015ac8:	9a07      	ldr	r2, [sp, #28]
 8015aca:	1a9e      	subs	r6, r3, r2
 8015acc:	2e00      	cmp	r6, #0
 8015ace:	f77f ad10 	ble.w	80154f2 <_vfprintf_r+0x3a2>
 8015ad2:	2e10      	cmp	r6, #16
 8015ad4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8015ad6:	4f92      	ldr	r7, [pc, #584]	; (8015d20 <_vfprintf_r+0xbd0>)
 8015ad8:	dd1f      	ble.n	8015b1a <_vfprintf_r+0x9ca>
 8015ada:	f04f 0a10 	mov.w	sl, #16
 8015ade:	465b      	mov	r3, fp
 8015ae0:	e004      	b.n	8015aec <_vfprintf_r+0x99c>
 8015ae2:	3e10      	subs	r6, #16
 8015ae4:	2e10      	cmp	r6, #16
 8015ae6:	f104 0408 	add.w	r4, r4, #8
 8015aea:	dd15      	ble.n	8015b18 <_vfprintf_r+0x9c8>
 8015aec:	3201      	adds	r2, #1
 8015aee:	3310      	adds	r3, #16
 8015af0:	2a07      	cmp	r2, #7
 8015af2:	9323      	str	r3, [sp, #140]	; 0x8c
 8015af4:	9222      	str	r2, [sp, #136]	; 0x88
 8015af6:	e884 0480 	stmia.w	r4, {r7, sl}
 8015afa:	ddf2      	ble.n	8015ae2 <_vfprintf_r+0x992>
 8015afc:	4640      	mov	r0, r8
 8015afe:	4649      	mov	r1, r9
 8015b00:	aa21      	add	r2, sp, #132	; 0x84
 8015b02:	f003 fb3f 	bl	8019184 <__sprint_r>
 8015b06:	2800      	cmp	r0, #0
 8015b08:	f47f ac22 	bne.w	8015350 <_vfprintf_r+0x200>
 8015b0c:	3e10      	subs	r6, #16
 8015b0e:	2e10      	cmp	r6, #16
 8015b10:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015b12:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8015b14:	ac2e      	add	r4, sp, #184	; 0xb8
 8015b16:	dce9      	bgt.n	8015aec <_vfprintf_r+0x99c>
 8015b18:	469b      	mov	fp, r3
 8015b1a:	3201      	adds	r2, #1
 8015b1c:	44b3      	add	fp, r6
 8015b1e:	2a07      	cmp	r2, #7
 8015b20:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 8015b24:	9222      	str	r2, [sp, #136]	; 0x88
 8015b26:	6027      	str	r7, [r4, #0]
 8015b28:	6066      	str	r6, [r4, #4]
 8015b2a:	f300 8219 	bgt.w	8015f60 <_vfprintf_r+0xe10>
 8015b2e:	3408      	adds	r4, #8
 8015b30:	e4df      	b.n	80154f2 <_vfprintf_r+0x3a2>
 8015b32:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015b34:	9d22      	ldr	r5, [sp, #136]	; 0x88
 8015b36:	2b01      	cmp	r3, #1
 8015b38:	f340 81d4 	ble.w	8015ee4 <_vfprintf_r+0xd94>
 8015b3c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015b3e:	6023      	str	r3, [r4, #0]
 8015b40:	3501      	adds	r5, #1
 8015b42:	f10b 0601 	add.w	r6, fp, #1
 8015b46:	2301      	movs	r3, #1
 8015b48:	2d07      	cmp	r5, #7
 8015b4a:	9623      	str	r6, [sp, #140]	; 0x8c
 8015b4c:	9522      	str	r5, [sp, #136]	; 0x88
 8015b4e:	6063      	str	r3, [r4, #4]
 8015b50:	f300 81e4 	bgt.w	8015f1c <_vfprintf_r+0xdcc>
 8015b54:	3408      	adds	r4, #8
 8015b56:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8015b58:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8015b5a:	6023      	str	r3, [r4, #0]
 8015b5c:	3501      	adds	r5, #1
 8015b5e:	4416      	add	r6, r2
 8015b60:	2d07      	cmp	r5, #7
 8015b62:	9623      	str	r6, [sp, #140]	; 0x8c
 8015b64:	9522      	str	r5, [sp, #136]	; 0x88
 8015b66:	6062      	str	r2, [r4, #4]
 8015b68:	f300 81e4 	bgt.w	8015f34 <_vfprintf_r+0xde4>
 8015b6c:	3408      	adds	r4, #8
 8015b6e:	2300      	movs	r3, #0
 8015b70:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015b72:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8015b74:	2200      	movs	r2, #0
 8015b76:	f7ea ffc1 	bl	8000afc <__aeabi_dcmpeq>
 8015b7a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015b7c:	2800      	cmp	r0, #0
 8015b7e:	f040 80e0 	bne.w	8015d42 <_vfprintf_r+0xbf2>
 8015b82:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015b84:	3b01      	subs	r3, #1
 8015b86:	3501      	adds	r5, #1
 8015b88:	3201      	adds	r2, #1
 8015b8a:	441e      	add	r6, r3
 8015b8c:	2d07      	cmp	r5, #7
 8015b8e:	9522      	str	r5, [sp, #136]	; 0x88
 8015b90:	9623      	str	r6, [sp, #140]	; 0x8c
 8015b92:	6022      	str	r2, [r4, #0]
 8015b94:	6063      	str	r3, [r4, #4]
 8015b96:	f300 81b5 	bgt.w	8015f04 <_vfprintf_r+0xdb4>
 8015b9a:	3408      	adds	r4, #8
 8015b9c:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8015b9e:	6062      	str	r2, [r4, #4]
 8015ba0:	3501      	adds	r5, #1
 8015ba2:	eb06 0b02 	add.w	fp, r6, r2
 8015ba6:	ab1d      	add	r3, sp, #116	; 0x74
 8015ba8:	2d07      	cmp	r5, #7
 8015baa:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 8015bae:	9522      	str	r5, [sp, #136]	; 0x88
 8015bb0:	6023      	str	r3, [r4, #0]
 8015bb2:	f77f ace9 	ble.w	8015588 <_vfprintf_r+0x438>
 8015bb6:	4640      	mov	r0, r8
 8015bb8:	4649      	mov	r1, r9
 8015bba:	aa21      	add	r2, sp, #132	; 0x84
 8015bbc:	f003 fae2 	bl	8019184 <__sprint_r>
 8015bc0:	2800      	cmp	r0, #0
 8015bc2:	f47f abc5 	bne.w	8015350 <_vfprintf_r+0x200>
 8015bc6:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 8015bca:	ac2e      	add	r4, sp, #184	; 0xb8
 8015bcc:	e4dd      	b.n	801558a <_vfprintf_r+0x43a>
 8015bce:	4640      	mov	r0, r8
 8015bd0:	4649      	mov	r1, r9
 8015bd2:	aa21      	add	r2, sp, #132	; 0x84
 8015bd4:	f003 fad6 	bl	8019184 <__sprint_r>
 8015bd8:	2800      	cmp	r0, #0
 8015bda:	f43f ad20 	beq.w	801561e <_vfprintf_r+0x4ce>
 8015bde:	f7ff bbb7 	b.w	8015350 <_vfprintf_r+0x200>
 8015be2:	2b00      	cmp	r3, #0
 8015be4:	d133      	bne.n	8015c4e <_vfprintf_r+0xafe>
 8015be6:	9b06      	ldr	r3, [sp, #24]
 8015be8:	07da      	lsls	r2, r3, #31
 8015bea:	d530      	bpl.n	8015c4e <_vfprintf_r+0xafe>
 8015bec:	f10d 0bf8 	add.w	fp, sp, #248	; 0xf8
 8015bf0:	2330      	movs	r3, #48	; 0x30
 8015bf2:	f80b 3d41 	strb.w	r3, [fp, #-65]!
 8015bf6:	ab2e      	add	r3, sp, #184	; 0xb8
 8015bf8:	ebcb 0303 	rsb	r3, fp, r3
 8015bfc:	930b      	str	r3, [sp, #44]	; 0x2c
 8015bfe:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
 8015c02:	f7ff bbf5 	b.w	80153f0 <_vfprintf_r+0x2a0>
 8015c06:	4640      	mov	r0, r8
 8015c08:	4649      	mov	r1, r9
 8015c0a:	aa21      	add	r2, sp, #132	; 0x84
 8015c0c:	f003 faba 	bl	8019184 <__sprint_r>
 8015c10:	2800      	cmp	r0, #0
 8015c12:	f47f ab9d 	bne.w	8015350 <_vfprintf_r+0x200>
 8015c16:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 8015c1a:	ac2e      	add	r4, sp, #184	; 0xb8
 8015c1c:	e4a3      	b.n	8015566 <_vfprintf_r+0x416>
 8015c1e:	4640      	mov	r0, r8
 8015c20:	4649      	mov	r1, r9
 8015c22:	aa21      	add	r2, sp, #132	; 0x84
 8015c24:	f003 faae 	bl	8019184 <__sprint_r>
 8015c28:	2800      	cmp	r0, #0
 8015c2a:	f47f ab91 	bne.w	8015350 <_vfprintf_r+0x200>
 8015c2e:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 8015c32:	ac2e      	add	r4, sp, #184	; 0xb8
 8015c34:	e45a      	b.n	80154ec <_vfprintf_r+0x39c>
 8015c36:	4640      	mov	r0, r8
 8015c38:	4649      	mov	r1, r9
 8015c3a:	aa21      	add	r2, sp, #132	; 0x84
 8015c3c:	f003 faa2 	bl	8019184 <__sprint_r>
 8015c40:	2800      	cmp	r0, #0
 8015c42:	f47f ab85 	bne.w	8015350 <_vfprintf_r+0x200>
 8015c46:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 8015c4a:	ac2e      	add	r4, sp, #184	; 0xb8
 8015c4c:	e43d      	b.n	80154ca <_vfprintf_r+0x37a>
 8015c4e:	ab2e      	add	r3, sp, #184	; 0xb8
 8015c50:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
 8015c54:	930e      	str	r3, [sp, #56]	; 0x38
 8015c56:	f7ff bbcb 	b.w	80153f0 <_vfprintf_r+0x2a0>
 8015c5a:	9814      	ldr	r0, [sp, #80]	; 0x50
 8015c5c:	f10d 0bb8 	add.w	fp, sp, #184	; 0xb8
 8015c60:	0933      	lsrs	r3, r6, #4
 8015c62:	f006 010f 	and.w	r1, r6, #15
 8015c66:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
 8015c6a:	093a      	lsrs	r2, r7, #4
 8015c6c:	461e      	mov	r6, r3
 8015c6e:	4617      	mov	r7, r2
 8015c70:	5c43      	ldrb	r3, [r0, r1]
 8015c72:	f80b 3d01 	strb.w	r3, [fp, #-1]!
 8015c76:	ea56 0307 	orrs.w	r3, r6, r7
 8015c7a:	d1f1      	bne.n	8015c60 <_vfprintf_r+0xb10>
 8015c7c:	465a      	mov	r2, fp
 8015c7e:	ab2e      	add	r3, sp, #184	; 0xb8
 8015c80:	1a9b      	subs	r3, r3, r2
 8015c82:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
 8015c86:	930b      	str	r3, [sp, #44]	; 0x2c
 8015c88:	f7ff bbb2 	b.w	80153f0 <_vfprintf_r+0x2a0>
 8015c8c:	2302      	movs	r3, #2
 8015c8e:	f7ff bb7d 	b.w	801538c <_vfprintf_r+0x23c>
 8015c92:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8015c94:	2d00      	cmp	r5, #0
 8015c96:	f340 824c 	ble.w	8016132 <_vfprintf_r+0xfe2>
 8015c9a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015c9c:	9910      	ldr	r1, [sp, #64]	; 0x40
 8015c9e:	428a      	cmp	r2, r1
 8015ca0:	4613      	mov	r3, r2
 8015ca2:	bfa8      	it	ge
 8015ca4:	460b      	movge	r3, r1
 8015ca6:	461d      	mov	r5, r3
 8015ca8:	990e      	ldr	r1, [sp, #56]	; 0x38
 8015caa:	2d00      	cmp	r5, #0
 8015cac:	eb01 0a02 	add.w	sl, r1, r2
 8015cb0:	dd0b      	ble.n	8015cca <_vfprintf_r+0xb7a>
 8015cb2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8015cb4:	6021      	str	r1, [r4, #0]
 8015cb6:	3301      	adds	r3, #1
 8015cb8:	44ab      	add	fp, r5
 8015cba:	2b07      	cmp	r3, #7
 8015cbc:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 8015cc0:	6065      	str	r5, [r4, #4]
 8015cc2:	9322      	str	r3, [sp, #136]	; 0x88
 8015cc4:	f300 8300 	bgt.w	80162c8 <_vfprintf_r+0x1178>
 8015cc8:	3408      	adds	r4, #8
 8015cca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015ccc:	2d00      	cmp	r5, #0
 8015cce:	bfa8      	it	ge
 8015cd0:	1b5b      	subge	r3, r3, r5
 8015cd2:	2b00      	cmp	r3, #0
 8015cd4:	461d      	mov	r5, r3
 8015cd6:	f340 80af 	ble.w	8015e38 <_vfprintf_r+0xce8>
 8015cda:	2d10      	cmp	r5, #16
 8015cdc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8015cde:	4f10      	ldr	r7, [pc, #64]	; (8015d20 <_vfprintf_r+0xbd0>)
 8015ce0:	f340 820f 	ble.w	8016102 <_vfprintf_r+0xfb2>
 8015ce4:	2610      	movs	r6, #16
 8015ce6:	465a      	mov	r2, fp
 8015ce8:	e004      	b.n	8015cf4 <_vfprintf_r+0xba4>
 8015cea:	3408      	adds	r4, #8
 8015cec:	3d10      	subs	r5, #16
 8015cee:	2d10      	cmp	r5, #16
 8015cf0:	f340 8206 	ble.w	8016100 <_vfprintf_r+0xfb0>
 8015cf4:	3301      	adds	r3, #1
 8015cf6:	3210      	adds	r2, #16
 8015cf8:	2b07      	cmp	r3, #7
 8015cfa:	9223      	str	r2, [sp, #140]	; 0x8c
 8015cfc:	9322      	str	r3, [sp, #136]	; 0x88
 8015cfe:	6027      	str	r7, [r4, #0]
 8015d00:	6066      	str	r6, [r4, #4]
 8015d02:	ddf2      	ble.n	8015cea <_vfprintf_r+0xb9a>
 8015d04:	4640      	mov	r0, r8
 8015d06:	4649      	mov	r1, r9
 8015d08:	aa21      	add	r2, sp, #132	; 0x84
 8015d0a:	f003 fa3b 	bl	8019184 <__sprint_r>
 8015d0e:	2800      	cmp	r0, #0
 8015d10:	f47f ab1e 	bne.w	8015350 <_vfprintf_r+0x200>
 8015d14:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8015d16:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8015d18:	ac2e      	add	r4, sp, #184	; 0xb8
 8015d1a:	e7e7      	b.n	8015cec <_vfprintf_r+0xb9c>
 8015d1c:	0802e4c0 	.word	0x0802e4c0
 8015d20:	0802e4d4 	.word	0x0802e4d4
 8015d24:	4640      	mov	r0, r8
 8015d26:	4649      	mov	r1, r9
 8015d28:	aa21      	add	r2, sp, #132	; 0x84
 8015d2a:	f003 fa2b 	bl	8019184 <__sprint_r>
 8015d2e:	2800      	cmp	r0, #0
 8015d30:	f47f ab0e 	bne.w	8015350 <_vfprintf_r+0x200>
 8015d34:	f89d c067 	ldrb.w	ip, [sp, #103]	; 0x67
 8015d38:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 8015d3c:	ac2e      	add	r4, sp, #184	; 0xb8
 8015d3e:	f7ff bbb1 	b.w	80154a4 <_vfprintf_r+0x354>
 8015d42:	f103 3aff 	add.w	sl, r3, #4294967295
 8015d46:	f1ba 0f00 	cmp.w	sl, #0
 8015d4a:	f77f af27 	ble.w	8015b9c <_vfprintf_r+0xa4c>
 8015d4e:	f1ba 0f10 	cmp.w	sl, #16
 8015d52:	4f90      	ldr	r7, [pc, #576]	; (8015f94 <_vfprintf_r+0xe44>)
 8015d54:	bfc8      	it	gt
 8015d56:	f04f 0b10 	movgt.w	fp, #16
 8015d5a:	dc07      	bgt.n	8015d6c <_vfprintf_r+0xc1c>
 8015d5c:	e0f6      	b.n	8015f4c <_vfprintf_r+0xdfc>
 8015d5e:	3408      	adds	r4, #8
 8015d60:	f1aa 0a10 	sub.w	sl, sl, #16
 8015d64:	f1ba 0f10 	cmp.w	sl, #16
 8015d68:	f340 80f0 	ble.w	8015f4c <_vfprintf_r+0xdfc>
 8015d6c:	3501      	adds	r5, #1
 8015d6e:	3610      	adds	r6, #16
 8015d70:	2d07      	cmp	r5, #7
 8015d72:	9623      	str	r6, [sp, #140]	; 0x8c
 8015d74:	9522      	str	r5, [sp, #136]	; 0x88
 8015d76:	e884 0880 	stmia.w	r4, {r7, fp}
 8015d7a:	ddf0      	ble.n	8015d5e <_vfprintf_r+0xc0e>
 8015d7c:	4640      	mov	r0, r8
 8015d7e:	4649      	mov	r1, r9
 8015d80:	aa21      	add	r2, sp, #132	; 0x84
 8015d82:	f003 f9ff 	bl	8019184 <__sprint_r>
 8015d86:	2800      	cmp	r0, #0
 8015d88:	f47f aae2 	bne.w	8015350 <_vfprintf_r+0x200>
 8015d8c:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8015d8e:	9d22      	ldr	r5, [sp, #136]	; 0x88
 8015d90:	ac2e      	add	r4, sp, #184	; 0xb8
 8015d92:	e7e5      	b.n	8015d60 <_vfprintf_r+0xc10>
 8015d94:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8015d96:	6816      	ldr	r6, [r2, #0]
 8015d98:	4613      	mov	r3, r2
 8015d9a:	3304      	adds	r3, #4
 8015d9c:	17f7      	asrs	r7, r6, #31
 8015d9e:	930c      	str	r3, [sp, #48]	; 0x30
 8015da0:	4632      	mov	r2, r6
 8015da2:	463b      	mov	r3, r7
 8015da4:	e4cf      	b.n	8015746 <_vfprintf_r+0x5f6>
 8015da6:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015da8:	460a      	mov	r2, r1
 8015daa:	3204      	adds	r2, #4
 8015dac:	680e      	ldr	r6, [r1, #0]
 8015dae:	920c      	str	r2, [sp, #48]	; 0x30
 8015db0:	2700      	movs	r7, #0
 8015db2:	f7ff baeb 	b.w	801538c <_vfprintf_r+0x23c>
 8015db6:	4693      	mov	fp, r2
 8015db8:	3301      	adds	r3, #1
 8015dba:	44ab      	add	fp, r5
 8015dbc:	2b07      	cmp	r3, #7
 8015dbe:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 8015dc2:	9322      	str	r3, [sp, #136]	; 0x88
 8015dc4:	6027      	str	r7, [r4, #0]
 8015dc6:	6065      	str	r5, [r4, #4]
 8015dc8:	f77f abde 	ble.w	8015588 <_vfprintf_r+0x438>
 8015dcc:	e6f3      	b.n	8015bb6 <_vfprintf_r+0xa66>
 8015dce:	f10d 0bb8 	add.w	fp, sp, #184	; 0xb8
 8015dd2:	f8cd c01c 	str.w	ip, [sp, #28]
 8015dd6:	4630      	mov	r0, r6
 8015dd8:	4639      	mov	r1, r7
 8015dda:	220a      	movs	r2, #10
 8015ddc:	2300      	movs	r3, #0
 8015dde:	f7ea fee7 	bl	8000bb0 <__aeabi_uldivmod>
 8015de2:	3230      	adds	r2, #48	; 0x30
 8015de4:	4630      	mov	r0, r6
 8015de6:	4639      	mov	r1, r7
 8015de8:	f80b 2d01 	strb.w	r2, [fp, #-1]!
 8015dec:	2300      	movs	r3, #0
 8015dee:	220a      	movs	r2, #10
 8015df0:	f7ea fede 	bl	8000bb0 <__aeabi_uldivmod>
 8015df4:	4606      	mov	r6, r0
 8015df6:	460f      	mov	r7, r1
 8015df8:	ea56 0307 	orrs.w	r3, r6, r7
 8015dfc:	d1eb      	bne.n	8015dd6 <_vfprintf_r+0xc86>
 8015dfe:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8015e02:	e73b      	b.n	8015c7c <_vfprintf_r+0xb2c>
 8015e04:	2b30      	cmp	r3, #48	; 0x30
 8015e06:	f000 8219 	beq.w	801623c <_vfprintf_r+0x10ec>
 8015e0a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015e0c:	3b01      	subs	r3, #1
 8015e0e:	461a      	mov	r2, r3
 8015e10:	a82e      	add	r0, sp, #184	; 0xb8
 8015e12:	930e      	str	r3, [sp, #56]	; 0x38
 8015e14:	1a82      	subs	r2, r0, r2
 8015e16:	2330      	movs	r3, #48	; 0x30
 8015e18:	920b      	str	r2, [sp, #44]	; 0x2c
 8015e1a:	f801 3c01 	strb.w	r3, [r1, #-1]
 8015e1e:	f7ff bae7 	b.w	80153f0 <_vfprintf_r+0x2a0>
 8015e22:	4640      	mov	r0, r8
 8015e24:	4649      	mov	r1, r9
 8015e26:	aa21      	add	r2, sp, #132	; 0x84
 8015e28:	f003 f9ac 	bl	8019184 <__sprint_r>
 8015e2c:	2800      	cmp	r0, #0
 8015e2e:	f47f aa8f 	bne.w	8015350 <_vfprintf_r+0x200>
 8015e32:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 8015e36:	ac2e      	add	r4, sp, #184	; 0xb8
 8015e38:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015e3a:	9910      	ldr	r1, [sp, #64]	; 0x40
 8015e3c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8015e3e:	440a      	add	r2, r1
 8015e40:	4616      	mov	r6, r2
 8015e42:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015e44:	4293      	cmp	r3, r2
 8015e46:	db3e      	blt.n	8015ec6 <_vfprintf_r+0xd76>
 8015e48:	9a06      	ldr	r2, [sp, #24]
 8015e4a:	07d5      	lsls	r5, r2, #31
 8015e4c:	d43b      	bmi.n	8015ec6 <_vfprintf_r+0xd76>
 8015e4e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015e50:	ebc6 050a 	rsb	r5, r6, sl
 8015e54:	1ad3      	subs	r3, r2, r3
 8015e56:	429d      	cmp	r5, r3
 8015e58:	bfa8      	it	ge
 8015e5a:	461d      	movge	r5, r3
 8015e5c:	2d00      	cmp	r5, #0
 8015e5e:	462f      	mov	r7, r5
 8015e60:	dd0b      	ble.n	8015e7a <_vfprintf_r+0xd2a>
 8015e62:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8015e64:	6026      	str	r6, [r4, #0]
 8015e66:	3201      	adds	r2, #1
 8015e68:	44ab      	add	fp, r5
 8015e6a:	2a07      	cmp	r2, #7
 8015e6c:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 8015e70:	6065      	str	r5, [r4, #4]
 8015e72:	9222      	str	r2, [sp, #136]	; 0x88
 8015e74:	f300 825e 	bgt.w	8016334 <_vfprintf_r+0x11e4>
 8015e78:	3408      	adds	r4, #8
 8015e7a:	2f00      	cmp	r7, #0
 8015e7c:	bfac      	ite	ge
 8015e7e:	1bdd      	subge	r5, r3, r7
 8015e80:	461d      	movlt	r5, r3
 8015e82:	2d00      	cmp	r5, #0
 8015e84:	f77f ab81 	ble.w	801558a <_vfprintf_r+0x43a>
 8015e88:	2d10      	cmp	r5, #16
 8015e8a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8015e8c:	4f41      	ldr	r7, [pc, #260]	; (8015f94 <_vfprintf_r+0xe44>)
 8015e8e:	dd93      	ble.n	8015db8 <_vfprintf_r+0xc68>
 8015e90:	2610      	movs	r6, #16
 8015e92:	465a      	mov	r2, fp
 8015e94:	e003      	b.n	8015e9e <_vfprintf_r+0xd4e>
 8015e96:	3408      	adds	r4, #8
 8015e98:	3d10      	subs	r5, #16
 8015e9a:	2d10      	cmp	r5, #16
 8015e9c:	dd8b      	ble.n	8015db6 <_vfprintf_r+0xc66>
 8015e9e:	3301      	adds	r3, #1
 8015ea0:	3210      	adds	r2, #16
 8015ea2:	2b07      	cmp	r3, #7
 8015ea4:	9223      	str	r2, [sp, #140]	; 0x8c
 8015ea6:	9322      	str	r3, [sp, #136]	; 0x88
 8015ea8:	6027      	str	r7, [r4, #0]
 8015eaa:	6066      	str	r6, [r4, #4]
 8015eac:	ddf3      	ble.n	8015e96 <_vfprintf_r+0xd46>
 8015eae:	4640      	mov	r0, r8
 8015eb0:	4649      	mov	r1, r9
 8015eb2:	aa21      	add	r2, sp, #132	; 0x84
 8015eb4:	f003 f966 	bl	8019184 <__sprint_r>
 8015eb8:	2800      	cmp	r0, #0
 8015eba:	f47f aa49 	bne.w	8015350 <_vfprintf_r+0x200>
 8015ebe:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8015ec0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8015ec2:	ac2e      	add	r4, sp, #184	; 0xb8
 8015ec4:	e7e8      	b.n	8015e98 <_vfprintf_r+0xd48>
 8015ec6:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8015ec8:	9816      	ldr	r0, [sp, #88]	; 0x58
 8015eca:	9915      	ldr	r1, [sp, #84]	; 0x54
 8015ecc:	6021      	str	r1, [r4, #0]
 8015ece:	3201      	adds	r2, #1
 8015ed0:	4483      	add	fp, r0
 8015ed2:	2a07      	cmp	r2, #7
 8015ed4:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 8015ed8:	6060      	str	r0, [r4, #4]
 8015eda:	9222      	str	r2, [sp, #136]	; 0x88
 8015edc:	f300 820a 	bgt.w	80162f4 <_vfprintf_r+0x11a4>
 8015ee0:	3408      	adds	r4, #8
 8015ee2:	e7b4      	b.n	8015e4e <_vfprintf_r+0xcfe>
 8015ee4:	9b06      	ldr	r3, [sp, #24]
 8015ee6:	07d8      	lsls	r0, r3, #31
 8015ee8:	f53f ae28 	bmi.w	8015b3c <_vfprintf_r+0x9ec>
 8015eec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015eee:	6023      	str	r3, [r4, #0]
 8015ef0:	3501      	adds	r5, #1
 8015ef2:	f10b 0601 	add.w	r6, fp, #1
 8015ef6:	2301      	movs	r3, #1
 8015ef8:	2d07      	cmp	r5, #7
 8015efa:	9623      	str	r6, [sp, #140]	; 0x8c
 8015efc:	9522      	str	r5, [sp, #136]	; 0x88
 8015efe:	6063      	str	r3, [r4, #4]
 8015f00:	f77f ae4b 	ble.w	8015b9a <_vfprintf_r+0xa4a>
 8015f04:	4640      	mov	r0, r8
 8015f06:	4649      	mov	r1, r9
 8015f08:	aa21      	add	r2, sp, #132	; 0x84
 8015f0a:	f003 f93b 	bl	8019184 <__sprint_r>
 8015f0e:	2800      	cmp	r0, #0
 8015f10:	f47f aa1e 	bne.w	8015350 <_vfprintf_r+0x200>
 8015f14:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8015f16:	9d22      	ldr	r5, [sp, #136]	; 0x88
 8015f18:	ac2e      	add	r4, sp, #184	; 0xb8
 8015f1a:	e63f      	b.n	8015b9c <_vfprintf_r+0xa4c>
 8015f1c:	4640      	mov	r0, r8
 8015f1e:	4649      	mov	r1, r9
 8015f20:	aa21      	add	r2, sp, #132	; 0x84
 8015f22:	f003 f92f 	bl	8019184 <__sprint_r>
 8015f26:	2800      	cmp	r0, #0
 8015f28:	f47f aa12 	bne.w	8015350 <_vfprintf_r+0x200>
 8015f2c:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8015f2e:	9d22      	ldr	r5, [sp, #136]	; 0x88
 8015f30:	ac2e      	add	r4, sp, #184	; 0xb8
 8015f32:	e610      	b.n	8015b56 <_vfprintf_r+0xa06>
 8015f34:	4640      	mov	r0, r8
 8015f36:	4649      	mov	r1, r9
 8015f38:	aa21      	add	r2, sp, #132	; 0x84
 8015f3a:	f003 f923 	bl	8019184 <__sprint_r>
 8015f3e:	2800      	cmp	r0, #0
 8015f40:	f47f aa06 	bne.w	8015350 <_vfprintf_r+0x200>
 8015f44:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8015f46:	9d22      	ldr	r5, [sp, #136]	; 0x88
 8015f48:	ac2e      	add	r4, sp, #184	; 0xb8
 8015f4a:	e610      	b.n	8015b6e <_vfprintf_r+0xa1e>
 8015f4c:	3501      	adds	r5, #1
 8015f4e:	4456      	add	r6, sl
 8015f50:	2d07      	cmp	r5, #7
 8015f52:	9623      	str	r6, [sp, #140]	; 0x8c
 8015f54:	9522      	str	r5, [sp, #136]	; 0x88
 8015f56:	e884 0480 	stmia.w	r4, {r7, sl}
 8015f5a:	f77f ae1e 	ble.w	8015b9a <_vfprintf_r+0xa4a>
 8015f5e:	e7d1      	b.n	8015f04 <_vfprintf_r+0xdb4>
 8015f60:	4640      	mov	r0, r8
 8015f62:	4649      	mov	r1, r9
 8015f64:	aa21      	add	r2, sp, #132	; 0x84
 8015f66:	f003 f90d 	bl	8019184 <__sprint_r>
 8015f6a:	2800      	cmp	r0, #0
 8015f6c:	f47f a9f0 	bne.w	8015350 <_vfprintf_r+0x200>
 8015f70:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 8015f74:	ac2e      	add	r4, sp, #184	; 0xb8
 8015f76:	f7ff babc 	b.w	80154f2 <_vfprintf_r+0x3a2>
 8015f7a:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
 8015f7e:	4276      	negs	r6, r6
 8015f80:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
 8015f84:	f88d c067 	strb.w	ip, [sp, #103]	; 0x67
 8015f88:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 8015f8c:	2301      	movs	r3, #1
 8015f8e:	f7ff ba03 	b.w	8015398 <_vfprintf_r+0x248>
 8015f92:	bf00      	nop
 8015f94:	0802e4d4 	.word	0x0802e4d4
 8015f98:	f002 ffb6 	bl	8018f08 <__fpclassifyd>
 8015f9c:	2800      	cmp	r0, #0
 8015f9e:	f000 810d 	beq.w	80161bc <_vfprintf_r+0x106c>
 8015fa2:	f025 0320 	bic.w	r3, r5, #32
 8015fa6:	f1b6 3fff 	cmp.w	r6, #4294967295
 8015faa:	930b      	str	r3, [sp, #44]	; 0x2c
 8015fac:	f000 8258 	beq.w	8016460 <_vfprintf_r+0x1310>
 8015fb0:	2b47      	cmp	r3, #71	; 0x47
 8015fb2:	d104      	bne.n	8015fbe <_vfprintf_r+0xe6e>
 8015fb4:	2e00      	cmp	r6, #0
 8015fb6:	bf14      	ite	ne
 8015fb8:	46b3      	movne	fp, r6
 8015fba:	f04f 0b01 	moveq.w	fp, #1
 8015fbe:	9b06      	ldr	r3, [sp, #24]
 8015fc0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8015fc4:	930f      	str	r3, [sp, #60]	; 0x3c
 8015fc6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015fc8:	f1b3 0a00 	subs.w	sl, r3, #0
 8015fcc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015fce:	9307      	str	r3, [sp, #28]
 8015fd0:	bfbb      	ittet	lt
 8015fd2:	4653      	movlt	r3, sl
 8015fd4:	f103 4a00 	addlt.w	sl, r3, #2147483648	; 0x80000000
 8015fd8:	2300      	movge	r3, #0
 8015fda:	232d      	movlt	r3, #45	; 0x2d
 8015fdc:	2d66      	cmp	r5, #102	; 0x66
 8015fde:	930d      	str	r3, [sp, #52]	; 0x34
 8015fe0:	f000 8154 	beq.w	801628c <_vfprintf_r+0x113c>
 8015fe4:	2d46      	cmp	r5, #70	; 0x46
 8015fe6:	f000 8151 	beq.w	801628c <_vfprintf_r+0x113c>
 8015fea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015fec:	9a07      	ldr	r2, [sp, #28]
 8015fee:	2b45      	cmp	r3, #69	; 0x45
 8015ff0:	bf0c      	ite	eq
 8015ff2:	f10b 0701 	addeq.w	r7, fp, #1
 8015ff6:	465f      	movne	r7, fp
 8015ff8:	2002      	movs	r0, #2
 8015ffa:	a91b      	add	r1, sp, #108	; 0x6c
 8015ffc:	e88d 0081 	stmia.w	sp, {r0, r7}
 8016000:	9102      	str	r1, [sp, #8]
 8016002:	a81c      	add	r0, sp, #112	; 0x70
 8016004:	a91f      	add	r1, sp, #124	; 0x7c
 8016006:	9003      	str	r0, [sp, #12]
 8016008:	4653      	mov	r3, sl
 801600a:	9104      	str	r1, [sp, #16]
 801600c:	4640      	mov	r0, r8
 801600e:	f000 fbc7 	bl	80167a0 <_dtoa_r>
 8016012:	2d67      	cmp	r5, #103	; 0x67
 8016014:	900e      	str	r0, [sp, #56]	; 0x38
 8016016:	d002      	beq.n	801601e <_vfprintf_r+0xece>
 8016018:	2d47      	cmp	r5, #71	; 0x47
 801601a:	f040 8147 	bne.w	80162ac <_vfprintf_r+0x115c>
 801601e:	9b06      	ldr	r3, [sp, #24]
 8016020:	07db      	lsls	r3, r3, #31
 8016022:	f140 823a 	bpl.w	801649a <_vfprintf_r+0x134a>
 8016026:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016028:	19de      	adds	r6, r3, r7
 801602a:	9807      	ldr	r0, [sp, #28]
 801602c:	4651      	mov	r1, sl
 801602e:	2200      	movs	r2, #0
 8016030:	2300      	movs	r3, #0
 8016032:	f7ea fd63 	bl	8000afc <__aeabi_dcmpeq>
 8016036:	2800      	cmp	r0, #0
 8016038:	f040 81a3 	bne.w	8016382 <_vfprintf_r+0x1232>
 801603c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801603e:	429e      	cmp	r6, r3
 8016040:	d906      	bls.n	8016050 <_vfprintf_r+0xf00>
 8016042:	2130      	movs	r1, #48	; 0x30
 8016044:	1c5a      	adds	r2, r3, #1
 8016046:	921f      	str	r2, [sp, #124]	; 0x7c
 8016048:	7019      	strb	r1, [r3, #0]
 801604a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801604c:	429e      	cmp	r6, r3
 801604e:	d8f9      	bhi.n	8016044 <_vfprintf_r+0xef4>
 8016050:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016052:	1a9b      	subs	r3, r3, r2
 8016054:	9311      	str	r3, [sp, #68]	; 0x44
 8016056:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016058:	2b47      	cmp	r3, #71	; 0x47
 801605a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801605c:	f000 8179 	beq.w	8016352 <_vfprintf_r+0x1202>
 8016060:	2d65      	cmp	r5, #101	; 0x65
 8016062:	f340 819c 	ble.w	801639e <_vfprintf_r+0x124e>
 8016066:	2d66      	cmp	r5, #102	; 0x66
 8016068:	9310      	str	r3, [sp, #64]	; 0x40
 801606a:	f000 8209 	beq.w	8016480 <_vfprintf_r+0x1330>
 801606e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016070:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016072:	4293      	cmp	r3, r2
 8016074:	f300 81f7 	bgt.w	8016466 <_vfprintf_r+0x1316>
 8016078:	9b06      	ldr	r3, [sp, #24]
 801607a:	07d9      	lsls	r1, r3, #31
 801607c:	f100 8217 	bmi.w	80164ae <_vfprintf_r+0x135e>
 8016080:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8016084:	920b      	str	r2, [sp, #44]	; 0x2c
 8016086:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016088:	2a00      	cmp	r2, #0
 801608a:	f040 8169 	bne.w	8016360 <_vfprintf_r+0x1210>
 801608e:	9307      	str	r3, [sp, #28]
 8016090:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016092:	9306      	str	r3, [sp, #24]
 8016094:	920f      	str	r2, [sp, #60]	; 0x3c
 8016096:	f89d c067 	ldrb.w	ip, [sp, #103]	; 0x67
 801609a:	f7ff b9b1 	b.w	8015400 <_vfprintf_r+0x2b0>
 801609e:	9b06      	ldr	r3, [sp, #24]
 80160a0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80160a2:	f013 0f40 	tst.w	r3, #64	; 0x40
 80160a6:	4613      	mov	r3, r2
 80160a8:	f43f ac84 	beq.w	80159b4 <_vfprintf_r+0x864>
 80160ac:	8816      	ldrh	r6, [r2, #0]
 80160ae:	3204      	adds	r2, #4
 80160b0:	2700      	movs	r7, #0
 80160b2:	2301      	movs	r3, #1
 80160b4:	920c      	str	r2, [sp, #48]	; 0x30
 80160b6:	f7ff b969 	b.w	801538c <_vfprintf_r+0x23c>
 80160ba:	9b06      	ldr	r3, [sp, #24]
 80160bc:	06db      	lsls	r3, r3, #27
 80160be:	d40b      	bmi.n	80160d8 <_vfprintf_r+0xf88>
 80160c0:	9b06      	ldr	r3, [sp, #24]
 80160c2:	065f      	lsls	r7, r3, #25
 80160c4:	d508      	bpl.n	80160d8 <_vfprintf_r+0xf88>
 80160c6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80160c8:	6813      	ldr	r3, [r2, #0]
 80160ca:	3204      	adds	r2, #4
 80160cc:	920c      	str	r2, [sp, #48]	; 0x30
 80160ce:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 80160d2:	801a      	strh	r2, [r3, #0]
 80160d4:	f7ff b87d 	b.w	80151d2 <_vfprintf_r+0x82>
 80160d8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80160da:	6813      	ldr	r3, [r2, #0]
 80160dc:	3204      	adds	r2, #4
 80160de:	920c      	str	r2, [sp, #48]	; 0x30
 80160e0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80160e2:	601a      	str	r2, [r3, #0]
 80160e4:	f7ff b875 	b.w	80151d2 <_vfprintf_r+0x82>
 80160e8:	9b06      	ldr	r3, [sp, #24]
 80160ea:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80160ec:	f013 0f40 	tst.w	r3, #64	; 0x40
 80160f0:	4613      	mov	r3, r2
 80160f2:	d076      	beq.n	80161e2 <_vfprintf_r+0x1092>
 80160f4:	3304      	adds	r3, #4
 80160f6:	8816      	ldrh	r6, [r2, #0]
 80160f8:	930c      	str	r3, [sp, #48]	; 0x30
 80160fa:	2700      	movs	r7, #0
 80160fc:	f7ff bae4 	b.w	80156c8 <_vfprintf_r+0x578>
 8016100:	4693      	mov	fp, r2
 8016102:	3301      	adds	r3, #1
 8016104:	44ab      	add	fp, r5
 8016106:	2b07      	cmp	r3, #7
 8016108:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 801610c:	9322      	str	r3, [sp, #136]	; 0x88
 801610e:	6027      	str	r7, [r4, #0]
 8016110:	6065      	str	r5, [r4, #4]
 8016112:	f73f ae86 	bgt.w	8015e22 <_vfprintf_r+0xcd2>
 8016116:	3408      	adds	r4, #8
 8016118:	e68e      	b.n	8015e38 <_vfprintf_r+0xce8>
 801611a:	4640      	mov	r0, r8
 801611c:	4649      	mov	r1, r9
 801611e:	aa21      	add	r2, sp, #132	; 0x84
 8016120:	f003 f830 	bl	8019184 <__sprint_r>
 8016124:	2800      	cmp	r0, #0
 8016126:	f47f a913 	bne.w	8015350 <_vfprintf_r+0x200>
 801612a:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 801612e:	ac2e      	add	r4, sp, #184	; 0xb8
 8016130:	e48d      	b.n	8015a4e <_vfprintf_r+0x8fe>
 8016132:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8016134:	4ab0      	ldr	r2, [pc, #704]	; (80163f8 <_vfprintf_r+0x12a8>)
 8016136:	6022      	str	r2, [r4, #0]
 8016138:	3301      	adds	r3, #1
 801613a:	f10b 0b01 	add.w	fp, fp, #1
 801613e:	2201      	movs	r2, #1
 8016140:	2b07      	cmp	r3, #7
 8016142:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 8016146:	9322      	str	r3, [sp, #136]	; 0x88
 8016148:	6062      	str	r2, [r4, #4]
 801614a:	dc50      	bgt.n	80161ee <_vfprintf_r+0x109e>
 801614c:	3408      	adds	r4, #8
 801614e:	b92d      	cbnz	r5, 801615c <_vfprintf_r+0x100c>
 8016150:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016152:	b91b      	cbnz	r3, 801615c <_vfprintf_r+0x100c>
 8016154:	9b06      	ldr	r3, [sp, #24]
 8016156:	07de      	lsls	r6, r3, #31
 8016158:	f57f aa17 	bpl.w	801558a <_vfprintf_r+0x43a>
 801615c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801615e:	9916      	ldr	r1, [sp, #88]	; 0x58
 8016160:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8016162:	6022      	str	r2, [r4, #0]
 8016164:	3301      	adds	r3, #1
 8016166:	eb0b 0201 	add.w	r2, fp, r1
 801616a:	2b07      	cmp	r3, #7
 801616c:	9223      	str	r2, [sp, #140]	; 0x8c
 801616e:	6061      	str	r1, [r4, #4]
 8016170:	9322      	str	r3, [sp, #136]	; 0x88
 8016172:	f300 8168 	bgt.w	8016446 <_vfprintf_r+0x12f6>
 8016176:	3408      	adds	r4, #8
 8016178:	426d      	negs	r5, r5
 801617a:	2d00      	cmp	r5, #0
 801617c:	dd6f      	ble.n	801625e <_vfprintf_r+0x110e>
 801617e:	2d10      	cmp	r5, #16
 8016180:	4f9e      	ldr	r7, [pc, #632]	; (80163fc <_vfprintf_r+0x12ac>)
 8016182:	bfc8      	it	gt
 8016184:	2610      	movgt	r6, #16
 8016186:	dc05      	bgt.n	8016194 <_vfprintf_r+0x1044>
 8016188:	e0aa      	b.n	80162e0 <_vfprintf_r+0x1190>
 801618a:	3408      	adds	r4, #8
 801618c:	3d10      	subs	r5, #16
 801618e:	2d10      	cmp	r5, #16
 8016190:	f340 80a6 	ble.w	80162e0 <_vfprintf_r+0x1190>
 8016194:	3301      	adds	r3, #1
 8016196:	3210      	adds	r2, #16
 8016198:	2b07      	cmp	r3, #7
 801619a:	9223      	str	r2, [sp, #140]	; 0x8c
 801619c:	9322      	str	r3, [sp, #136]	; 0x88
 801619e:	6027      	str	r7, [r4, #0]
 80161a0:	6066      	str	r6, [r4, #4]
 80161a2:	ddf2      	ble.n	801618a <_vfprintf_r+0x103a>
 80161a4:	4640      	mov	r0, r8
 80161a6:	4649      	mov	r1, r9
 80161a8:	aa21      	add	r2, sp, #132	; 0x84
 80161aa:	f002 ffeb 	bl	8019184 <__sprint_r>
 80161ae:	2800      	cmp	r0, #0
 80161b0:	f47f a8ce 	bne.w	8015350 <_vfprintf_r+0x200>
 80161b4:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80161b6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80161b8:	ac2e      	add	r4, sp, #184	; 0xb8
 80161ba:	e7e7      	b.n	801618c <_vfprintf_r+0x103c>
 80161bc:	9e06      	ldr	r6, [sp, #24]
 80161be:	4a90      	ldr	r2, [pc, #576]	; (8016400 <_vfprintf_r+0x12b0>)
 80161c0:	4b90      	ldr	r3, [pc, #576]	; (8016404 <_vfprintf_r+0x12b4>)
 80161c2:	f89d c067 	ldrb.w	ip, [sp, #103]	; 0x67
 80161c6:	900f      	str	r0, [sp, #60]	; 0x3c
 80161c8:	2103      	movs	r1, #3
 80161ca:	f026 0680 	bic.w	r6, r6, #128	; 0x80
 80161ce:	2d47      	cmp	r5, #71	; 0x47
 80161d0:	bfd8      	it	le
 80161d2:	461a      	movle	r2, r3
 80161d4:	9107      	str	r1, [sp, #28]
 80161d6:	9606      	str	r6, [sp, #24]
 80161d8:	9010      	str	r0, [sp, #64]	; 0x40
 80161da:	920e      	str	r2, [sp, #56]	; 0x38
 80161dc:	910b      	str	r1, [sp, #44]	; 0x2c
 80161de:	f7ff b90f 	b.w	8015400 <_vfprintf_r+0x2b0>
 80161e2:	3304      	adds	r3, #4
 80161e4:	6816      	ldr	r6, [r2, #0]
 80161e6:	930c      	str	r3, [sp, #48]	; 0x30
 80161e8:	2700      	movs	r7, #0
 80161ea:	f7ff ba6d 	b.w	80156c8 <_vfprintf_r+0x578>
 80161ee:	4640      	mov	r0, r8
 80161f0:	4649      	mov	r1, r9
 80161f2:	aa21      	add	r2, sp, #132	; 0x84
 80161f4:	f002 ffc6 	bl	8019184 <__sprint_r>
 80161f8:	2800      	cmp	r0, #0
 80161fa:	f47f a8a9 	bne.w	8015350 <_vfprintf_r+0x200>
 80161fe:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8016200:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 8016204:	ac2e      	add	r4, sp, #184	; 0xb8
 8016206:	e7a2      	b.n	801614e <_vfprintf_r+0xffe>
 8016208:	f041 0120 	orr.w	r1, r1, #32
 801620c:	9106      	str	r1, [sp, #24]
 801620e:	785d      	ldrb	r5, [r3, #1]
 8016210:	1c59      	adds	r1, r3, #1
 8016212:	f7ff b80e 	b.w	8015232 <_vfprintf_r+0xe2>
 8016216:	980a      	ldr	r0, [sp, #40]	; 0x28
 8016218:	910c      	str	r1, [sp, #48]	; 0x30
 801621a:	4240      	negs	r0, r0
 801621c:	900a      	str	r0, [sp, #40]	; 0x28
 801621e:	4619      	mov	r1, r3
 8016220:	f7ff ba02 	b.w	8015628 <_vfprintf_r+0x4d8>
 8016224:	4640      	mov	r0, r8
 8016226:	4649      	mov	r1, r9
 8016228:	aa21      	add	r2, sp, #132	; 0x84
 801622a:	f002 ffab 	bl	8019184 <__sprint_r>
 801622e:	2800      	cmp	r0, #0
 8016230:	f47f a88e 	bne.w	8015350 <_vfprintf_r+0x200>
 8016234:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 8016238:	ac2e      	add	r4, sp, #184	; 0xb8
 801623a:	e41e      	b.n	8015a7a <_vfprintf_r+0x92a>
 801623c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801623e:	ab2e      	add	r3, sp, #184	; 0xb8
 8016240:	1a9b      	subs	r3, r3, r2
 8016242:	930b      	str	r3, [sp, #44]	; 0x2c
 8016244:	f7ff b8d4 	b.w	80153f0 <_vfprintf_r+0x2a0>
 8016248:	4640      	mov	r0, r8
 801624a:	4649      	mov	r1, r9
 801624c:	aa21      	add	r2, sp, #132	; 0x84
 801624e:	f002 ff99 	bl	8019184 <__sprint_r>
 8016252:	2800      	cmp	r0, #0
 8016254:	f47f a87c 	bne.w	8015350 <_vfprintf_r+0x200>
 8016258:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801625a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801625c:	ac2e      	add	r4, sp, #184	; 0xb8
 801625e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016260:	6060      	str	r0, [r4, #4]
 8016262:	3301      	adds	r3, #1
 8016264:	eb02 0b00 	add.w	fp, r2, r0
 8016268:	2b07      	cmp	r3, #7
 801626a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801626c:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 8016270:	9322      	str	r3, [sp, #136]	; 0x88
 8016272:	6022      	str	r2, [r4, #0]
 8016274:	f77f a988 	ble.w	8015588 <_vfprintf_r+0x438>
 8016278:	e49d      	b.n	8015bb6 <_vfprintf_r+0xa66>
 801627a:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
 801627e:	f7fd fcef 	bl	8013c60 <strlen>
 8016282:	970c      	str	r7, [sp, #48]	; 0x30
 8016284:	900b      	str	r0, [sp, #44]	; 0x2c
 8016286:	4603      	mov	r3, r0
 8016288:	f7ff ba03 	b.w	8015692 <_vfprintf_r+0x542>
 801628c:	2003      	movs	r0, #3
 801628e:	a91b      	add	r1, sp, #108	; 0x6c
 8016290:	e88d 0801 	stmia.w	sp, {r0, fp}
 8016294:	9102      	str	r1, [sp, #8]
 8016296:	a81c      	add	r0, sp, #112	; 0x70
 8016298:	a91f      	add	r1, sp, #124	; 0x7c
 801629a:	9003      	str	r0, [sp, #12]
 801629c:	9a07      	ldr	r2, [sp, #28]
 801629e:	9104      	str	r1, [sp, #16]
 80162a0:	4653      	mov	r3, sl
 80162a2:	4640      	mov	r0, r8
 80162a4:	f000 fa7c 	bl	80167a0 <_dtoa_r>
 80162a8:	465f      	mov	r7, fp
 80162aa:	900e      	str	r0, [sp, #56]	; 0x38
 80162ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80162ae:	19de      	adds	r6, r3, r7
 80162b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80162b2:	2b46      	cmp	r3, #70	; 0x46
 80162b4:	f47f aeb9 	bne.w	801602a <_vfprintf_r+0xeda>
 80162b8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80162ba:	781b      	ldrb	r3, [r3, #0]
 80162bc:	2b30      	cmp	r3, #48	; 0x30
 80162be:	f000 80fc 	beq.w	80164ba <_vfprintf_r+0x136a>
 80162c2:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 80162c4:	443e      	add	r6, r7
 80162c6:	e6b0      	b.n	801602a <_vfprintf_r+0xeda>
 80162c8:	4640      	mov	r0, r8
 80162ca:	4649      	mov	r1, r9
 80162cc:	aa21      	add	r2, sp, #132	; 0x84
 80162ce:	f002 ff59 	bl	8019184 <__sprint_r>
 80162d2:	2800      	cmp	r0, #0
 80162d4:	f47f a83c 	bne.w	8015350 <_vfprintf_r+0x200>
 80162d8:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 80162dc:	ac2e      	add	r4, sp, #184	; 0xb8
 80162de:	e4f4      	b.n	8015cca <_vfprintf_r+0xb7a>
 80162e0:	3301      	adds	r3, #1
 80162e2:	442a      	add	r2, r5
 80162e4:	2b07      	cmp	r3, #7
 80162e6:	9223      	str	r2, [sp, #140]	; 0x8c
 80162e8:	9322      	str	r3, [sp, #136]	; 0x88
 80162ea:	6027      	str	r7, [r4, #0]
 80162ec:	6065      	str	r5, [r4, #4]
 80162ee:	dcab      	bgt.n	8016248 <_vfprintf_r+0x10f8>
 80162f0:	3408      	adds	r4, #8
 80162f2:	e7b4      	b.n	801625e <_vfprintf_r+0x110e>
 80162f4:	4640      	mov	r0, r8
 80162f6:	4649      	mov	r1, r9
 80162f8:	aa21      	add	r2, sp, #132	; 0x84
 80162fa:	f002 ff43 	bl	8019184 <__sprint_r>
 80162fe:	2800      	cmp	r0, #0
 8016300:	f47f a826 	bne.w	8015350 <_vfprintf_r+0x200>
 8016304:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8016306:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 801630a:	ac2e      	add	r4, sp, #184	; 0xb8
 801630c:	e59f      	b.n	8015e4e <_vfprintf_r+0xcfe>
 801630e:	2e06      	cmp	r6, #6
 8016310:	4633      	mov	r3, r6
 8016312:	bf28      	it	cs
 8016314:	2306      	movcs	r3, #6
 8016316:	930b      	str	r3, [sp, #44]	; 0x2c
 8016318:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801631c:	f8dd c038 	ldr.w	ip, [sp, #56]	; 0x38
 8016320:	9307      	str	r3, [sp, #28]
 8016322:	4b39      	ldr	r3, [pc, #228]	; (8016408 <_vfprintf_r+0x12b8>)
 8016324:	970c      	str	r7, [sp, #48]	; 0x30
 8016326:	f8cd c03c 	str.w	ip, [sp, #60]	; 0x3c
 801632a:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
 801632e:	930e      	str	r3, [sp, #56]	; 0x38
 8016330:	f7ff b866 	b.w	8015400 <_vfprintf_r+0x2b0>
 8016334:	4640      	mov	r0, r8
 8016336:	4649      	mov	r1, r9
 8016338:	aa21      	add	r2, sp, #132	; 0x84
 801633a:	f002 ff23 	bl	8019184 <__sprint_r>
 801633e:	2800      	cmp	r0, #0
 8016340:	f47f a806 	bne.w	8015350 <_vfprintf_r+0x200>
 8016344:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8016346:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016348:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 801634c:	1ad3      	subs	r3, r2, r3
 801634e:	ac2e      	add	r4, sp, #184	; 0xb8
 8016350:	e593      	b.n	8015e7a <_vfprintf_r+0xd2a>
 8016352:	1cdf      	adds	r7, r3, #3
 8016354:	db22      	blt.n	801639c <_vfprintf_r+0x124c>
 8016356:	459b      	cmp	fp, r3
 8016358:	db20      	blt.n	801639c <_vfprintf_r+0x124c>
 801635a:	9310      	str	r3, [sp, #64]	; 0x40
 801635c:	2567      	movs	r5, #103	; 0x67
 801635e:	e686      	b.n	801606e <_vfprintf_r+0xf1e>
 8016360:	9307      	str	r3, [sp, #28]
 8016362:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016364:	9306      	str	r3, [sp, #24]
 8016366:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
 801636a:	2300      	movs	r3, #0
 801636c:	f88d c067 	strb.w	ip, [sp, #103]	; 0x67
 8016370:	930f      	str	r3, [sp, #60]	; 0x3c
 8016372:	f7ff b848 	b.w	8015406 <_vfprintf_r+0x2b6>
 8016376:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
 801637a:	f88d c067 	strb.w	ip, [sp, #103]	; 0x67
 801637e:	f7ff ba0e 	b.w	801579e <_vfprintf_r+0x64e>
 8016382:	4633      	mov	r3, r6
 8016384:	e664      	b.n	8016050 <_vfprintf_r+0xf00>
 8016386:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
 801638a:	900f      	str	r0, [sp, #60]	; 0x3c
 801638c:	970c      	str	r7, [sp, #48]	; 0x30
 801638e:	9010      	str	r0, [sp, #64]	; 0x40
 8016390:	f89d c067 	ldrb.w	ip, [sp, #103]	; 0x67
 8016394:	9307      	str	r3, [sp, #28]
 8016396:	960b      	str	r6, [sp, #44]	; 0x2c
 8016398:	f7ff b832 	b.w	8015400 <_vfprintf_r+0x2b0>
 801639c:	3d02      	subs	r5, #2
 801639e:	3b01      	subs	r3, #1
 80163a0:	2b00      	cmp	r3, #0
 80163a2:	931b      	str	r3, [sp, #108]	; 0x6c
 80163a4:	bfba      	itte	lt
 80163a6:	425b      	neglt	r3, r3
 80163a8:	222d      	movlt	r2, #45	; 0x2d
 80163aa:	222b      	movge	r2, #43	; 0x2b
 80163ac:	2b09      	cmp	r3, #9
 80163ae:	f88d 5074 	strb.w	r5, [sp, #116]	; 0x74
 80163b2:	f88d 2075 	strb.w	r2, [sp, #117]	; 0x75
 80163b6:	dd72      	ble.n	801649e <_vfprintf_r+0x134e>
 80163b8:	f10d 0683 	add.w	r6, sp, #131	; 0x83
 80163bc:	4630      	mov	r0, r6
 80163be:	4a13      	ldr	r2, [pc, #76]	; (801640c <_vfprintf_r+0x12bc>)
 80163c0:	fb82 2103 	smull	r2, r1, r2, r3
 80163c4:	17da      	asrs	r2, r3, #31
 80163c6:	ebc2 02a1 	rsb	r2, r2, r1, asr #2
 80163ca:	eb02 0182 	add.w	r1, r2, r2, lsl #2
 80163ce:	eba3 0341 	sub.w	r3, r3, r1, lsl #1
 80163d2:	f103 0130 	add.w	r1, r3, #48	; 0x30
 80163d6:	2a09      	cmp	r2, #9
 80163d8:	4613      	mov	r3, r2
 80163da:	f800 1d01 	strb.w	r1, [r0, #-1]!
 80163de:	dcee      	bgt.n	80163be <_vfprintf_r+0x126e>
 80163e0:	4602      	mov	r2, r0
 80163e2:	3330      	adds	r3, #48	; 0x30
 80163e4:	b2d9      	uxtb	r1, r3
 80163e6:	f802 1d01 	strb.w	r1, [r2, #-1]!
 80163ea:	4296      	cmp	r6, r2
 80163ec:	f240 80a0 	bls.w	8016530 <_vfprintf_r+0x13e0>
 80163f0:	f10d 0276 	add.w	r2, sp, #118	; 0x76
 80163f4:	4603      	mov	r3, r0
 80163f6:	e00d      	b.n	8016414 <_vfprintf_r+0x12c4>
 80163f8:	0802e4c0 	.word	0x0802e4c0
 80163fc:	0802e4d4 	.word	0x0802e4d4
 8016400:	0802e48c 	.word	0x0802e48c
 8016404:	0802e488 	.word	0x0802e488
 8016408:	0802e4b8 	.word	0x0802e4b8
 801640c:	66666667 	.word	0x66666667
 8016410:	f813 1b01 	ldrb.w	r1, [r3], #1
 8016414:	f802 1b01 	strb.w	r1, [r2], #1
 8016418:	42b3      	cmp	r3, r6
 801641a:	d1f9      	bne.n	8016410 <_vfprintf_r+0x12c0>
 801641c:	ab21      	add	r3, sp, #132	; 0x84
 801641e:	1a1b      	subs	r3, r3, r0
 8016420:	f10d 0276 	add.w	r2, sp, #118	; 0x76
 8016424:	4413      	add	r3, r2
 8016426:	aa1d      	add	r2, sp, #116	; 0x74
 8016428:	1a9b      	subs	r3, r3, r2
 801642a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801642c:	9317      	str	r3, [sp, #92]	; 0x5c
 801642e:	2a01      	cmp	r2, #1
 8016430:	4413      	add	r3, r2
 8016432:	930b      	str	r3, [sp, #44]	; 0x2c
 8016434:	dd6d      	ble.n	8016512 <_vfprintf_r+0x13c2>
 8016436:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016438:	2200      	movs	r2, #0
 801643a:	3301      	adds	r3, #1
 801643c:	930b      	str	r3, [sp, #44]	; 0x2c
 801643e:	9210      	str	r2, [sp, #64]	; 0x40
 8016440:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016444:	e61f      	b.n	8016086 <_vfprintf_r+0xf36>
 8016446:	4640      	mov	r0, r8
 8016448:	4649      	mov	r1, r9
 801644a:	aa21      	add	r2, sp, #132	; 0x84
 801644c:	f002 fe9a 	bl	8019184 <__sprint_r>
 8016450:	2800      	cmp	r0, #0
 8016452:	f47e af7d 	bne.w	8015350 <_vfprintf_r+0x200>
 8016456:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8016458:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801645a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801645c:	ac2e      	add	r4, sp, #184	; 0xb8
 801645e:	e68b      	b.n	8016178 <_vfprintf_r+0x1028>
 8016460:	f04f 0b06 	mov.w	fp, #6
 8016464:	e5ab      	b.n	8015fbe <_vfprintf_r+0xe6e>
 8016466:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016468:	2b00      	cmp	r3, #0
 801646a:	bfd8      	it	le
 801646c:	f1c3 0602 	rsble	r6, r3, #2
 8016470:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016472:	bfc8      	it	gt
 8016474:	2601      	movgt	r6, #1
 8016476:	18f3      	adds	r3, r6, r3
 8016478:	930b      	str	r3, [sp, #44]	; 0x2c
 801647a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801647e:	e602      	b.n	8016086 <_vfprintf_r+0xf36>
 8016480:	2b00      	cmp	r3, #0
 8016482:	dd30      	ble.n	80164e6 <_vfprintf_r+0x1396>
 8016484:	f1bb 0f00 	cmp.w	fp, #0
 8016488:	d125      	bne.n	80164d6 <_vfprintf_r+0x1386>
 801648a:	9b06      	ldr	r3, [sp, #24]
 801648c:	07de      	lsls	r6, r3, #31
 801648e:	d422      	bmi.n	80164d6 <_vfprintf_r+0x1386>
 8016490:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016492:	920b      	str	r2, [sp, #44]	; 0x2c
 8016494:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8016498:	e5f5      	b.n	8016086 <_vfprintf_r+0xf36>
 801649a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801649c:	e5d8      	b.n	8016050 <_vfprintf_r+0xf00>
 801649e:	3330      	adds	r3, #48	; 0x30
 80164a0:	2230      	movs	r2, #48	; 0x30
 80164a2:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
 80164a6:	f88d 2076 	strb.w	r2, [sp, #118]	; 0x76
 80164aa:	ab1e      	add	r3, sp, #120	; 0x78
 80164ac:	e7bb      	b.n	8016426 <_vfprintf_r+0x12d6>
 80164ae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80164b0:	3301      	adds	r3, #1
 80164b2:	930b      	str	r3, [sp, #44]	; 0x2c
 80164b4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80164b8:	e5e5      	b.n	8016086 <_vfprintf_r+0xf36>
 80164ba:	9807      	ldr	r0, [sp, #28]
 80164bc:	4651      	mov	r1, sl
 80164be:	2200      	movs	r2, #0
 80164c0:	2300      	movs	r3, #0
 80164c2:	f7ea fb1b 	bl	8000afc <__aeabi_dcmpeq>
 80164c6:	2800      	cmp	r0, #0
 80164c8:	f47f aefb 	bne.w	80162c2 <_vfprintf_r+0x1172>
 80164cc:	f1c7 0701 	rsb	r7, r7, #1
 80164d0:	971b      	str	r7, [sp, #108]	; 0x6c
 80164d2:	443e      	add	r6, r7
 80164d4:	e5a9      	b.n	801602a <_vfprintf_r+0xeda>
 80164d6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80164d8:	f10b 0601 	add.w	r6, fp, #1
 80164dc:	4433      	add	r3, r6
 80164de:	930b      	str	r3, [sp, #44]	; 0x2c
 80164e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80164e4:	e5cf      	b.n	8016086 <_vfprintf_r+0xf36>
 80164e6:	f1bb 0f00 	cmp.w	fp, #0
 80164ea:	d11b      	bne.n	8016524 <_vfprintf_r+0x13d4>
 80164ec:	9b06      	ldr	r3, [sp, #24]
 80164ee:	07d8      	lsls	r0, r3, #31
 80164f0:	d418      	bmi.n	8016524 <_vfprintf_r+0x13d4>
 80164f2:	2301      	movs	r3, #1
 80164f4:	930b      	str	r3, [sp, #44]	; 0x2c
 80164f6:	e5c6      	b.n	8016086 <_vfprintf_r+0xf36>
 80164f8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80164fa:	682e      	ldr	r6, [r5, #0]
 80164fc:	4628      	mov	r0, r5
 80164fe:	3004      	adds	r0, #4
 8016500:	2e00      	cmp	r6, #0
 8016502:	785d      	ldrb	r5, [r3, #1]
 8016504:	900c      	str	r0, [sp, #48]	; 0x30
 8016506:	f6be ae94 	bge.w	8015232 <_vfprintf_r+0xe2>
 801650a:	f04f 36ff 	mov.w	r6, #4294967295
 801650e:	f7fe be90 	b.w	8015232 <_vfprintf_r+0xe2>
 8016512:	9b06      	ldr	r3, [sp, #24]
 8016514:	f013 0301 	ands.w	r3, r3, #1
 8016518:	d18d      	bne.n	8016436 <_vfprintf_r+0x12e6>
 801651a:	9310      	str	r3, [sp, #64]	; 0x40
 801651c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801651e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016522:	e5b0      	b.n	8016086 <_vfprintf_r+0xf36>
 8016524:	f10b 0302 	add.w	r3, fp, #2
 8016528:	930b      	str	r3, [sp, #44]	; 0x2c
 801652a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801652e:	e5aa      	b.n	8016086 <_vfprintf_r+0xf36>
 8016530:	f10d 0376 	add.w	r3, sp, #118	; 0x76
 8016534:	e777      	b.n	8016426 <_vfprintf_r+0x12d6>
 8016536:	bf00      	nop

08016538 <__sbprintf>:
 8016538:	e92d 42f0 	stmdb	sp!, {r4, r5, r6, r7, r9, lr}
 801653c:	460c      	mov	r4, r1
 801653e:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
 8016542:	f8b1 e00c 	ldrh.w	lr, [r1, #12]
 8016546:	69e7      	ldr	r7, [r4, #28]
 8016548:	6e49      	ldr	r1, [r1, #100]	; 0x64
 801654a:	f8b4 900e 	ldrh.w	r9, [r4, #14]
 801654e:	9119      	str	r1, [sp, #100]	; 0x64
 8016550:	ad1a      	add	r5, sp, #104	; 0x68
 8016552:	f44f 6680 	mov.w	r6, #1024	; 0x400
 8016556:	f02e 0e02 	bic.w	lr, lr, #2
 801655a:	f04f 0c00 	mov.w	ip, #0
 801655e:	9707      	str	r7, [sp, #28]
 8016560:	4669      	mov	r1, sp
 8016562:	6a67      	ldr	r7, [r4, #36]	; 0x24
 8016564:	9500      	str	r5, [sp, #0]
 8016566:	9504      	str	r5, [sp, #16]
 8016568:	9602      	str	r6, [sp, #8]
 801656a:	9605      	str	r6, [sp, #20]
 801656c:	f8ad e00c 	strh.w	lr, [sp, #12]
 8016570:	f8ad 900e 	strh.w	r9, [sp, #14]
 8016574:	9709      	str	r7, [sp, #36]	; 0x24
 8016576:	f8cd c018 	str.w	ip, [sp, #24]
 801657a:	4606      	mov	r6, r0
 801657c:	f7fe fde8 	bl	8015150 <_vfprintf_r>
 8016580:	1e05      	subs	r5, r0, #0
 8016582:	db07      	blt.n	8016594 <__sbprintf+0x5c>
 8016584:	4630      	mov	r0, r6
 8016586:	4669      	mov	r1, sp
 8016588:	f001 f900 	bl	801778c <_fflush_r>
 801658c:	2800      	cmp	r0, #0
 801658e:	bf18      	it	ne
 8016590:	f04f 35ff 	movne.w	r5, #4294967295
 8016594:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8016598:	065b      	lsls	r3, r3, #25
 801659a:	d503      	bpl.n	80165a4 <__sbprintf+0x6c>
 801659c:	89a3      	ldrh	r3, [r4, #12]
 801659e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80165a2:	81a3      	strh	r3, [r4, #12]
 80165a4:	4628      	mov	r0, r5
 80165a6:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
 80165aa:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
 80165ae:	bf00      	nop

080165b0 <__swsetup_r>:
 80165b0:	b538      	push	{r3, r4, r5, lr}
 80165b2:	4b2f      	ldr	r3, [pc, #188]	; (8016670 <__swsetup_r+0xc0>)
 80165b4:	681b      	ldr	r3, [r3, #0]
 80165b6:	4605      	mov	r5, r0
 80165b8:	460c      	mov	r4, r1
 80165ba:	b113      	cbz	r3, 80165c2 <__swsetup_r+0x12>
 80165bc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80165be:	2a00      	cmp	r2, #0
 80165c0:	d036      	beq.n	8016630 <__swsetup_r+0x80>
 80165c2:	89a2      	ldrh	r2, [r4, #12]
 80165c4:	b293      	uxth	r3, r2
 80165c6:	0718      	lsls	r0, r3, #28
 80165c8:	d50c      	bpl.n	80165e4 <__swsetup_r+0x34>
 80165ca:	6920      	ldr	r0, [r4, #16]
 80165cc:	b1a8      	cbz	r0, 80165fa <__swsetup_r+0x4a>
 80165ce:	f013 0201 	ands.w	r2, r3, #1
 80165d2:	d01e      	beq.n	8016612 <__swsetup_r+0x62>
 80165d4:	6963      	ldr	r3, [r4, #20]
 80165d6:	2200      	movs	r2, #0
 80165d8:	425b      	negs	r3, r3
 80165da:	61a3      	str	r3, [r4, #24]
 80165dc:	60a2      	str	r2, [r4, #8]
 80165de:	b1f0      	cbz	r0, 801661e <__swsetup_r+0x6e>
 80165e0:	2000      	movs	r0, #0
 80165e2:	bd38      	pop	{r3, r4, r5, pc}
 80165e4:	06d9      	lsls	r1, r3, #27
 80165e6:	d53b      	bpl.n	8016660 <__swsetup_r+0xb0>
 80165e8:	0758      	lsls	r0, r3, #29
 80165ea:	d425      	bmi.n	8016638 <__swsetup_r+0x88>
 80165ec:	6920      	ldr	r0, [r4, #16]
 80165ee:	f042 0308 	orr.w	r3, r2, #8
 80165f2:	81a3      	strh	r3, [r4, #12]
 80165f4:	b29b      	uxth	r3, r3
 80165f6:	2800      	cmp	r0, #0
 80165f8:	d1e9      	bne.n	80165ce <__swsetup_r+0x1e>
 80165fa:	f403 7220 	and.w	r2, r3, #640	; 0x280
 80165fe:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 8016602:	d0e4      	beq.n	80165ce <__swsetup_r+0x1e>
 8016604:	4628      	mov	r0, r5
 8016606:	4621      	mov	r1, r4
 8016608:	f001 fc48 	bl	8017e9c <__smakebuf_r>
 801660c:	89a3      	ldrh	r3, [r4, #12]
 801660e:	6920      	ldr	r0, [r4, #16]
 8016610:	e7dd      	b.n	80165ce <__swsetup_r+0x1e>
 8016612:	0799      	lsls	r1, r3, #30
 8016614:	bf58      	it	pl
 8016616:	6962      	ldrpl	r2, [r4, #20]
 8016618:	60a2      	str	r2, [r4, #8]
 801661a:	2800      	cmp	r0, #0
 801661c:	d1e0      	bne.n	80165e0 <__swsetup_r+0x30>
 801661e:	89a3      	ldrh	r3, [r4, #12]
 8016620:	061a      	lsls	r2, r3, #24
 8016622:	d5de      	bpl.n	80165e2 <__swsetup_r+0x32>
 8016624:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8016628:	81a3      	strh	r3, [r4, #12]
 801662a:	f04f 30ff 	mov.w	r0, #4294967295
 801662e:	bd38      	pop	{r3, r4, r5, pc}
 8016630:	4618      	mov	r0, r3
 8016632:	f001 f93f 	bl	80178b4 <__sinit>
 8016636:	e7c4      	b.n	80165c2 <__swsetup_r+0x12>
 8016638:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801663a:	b149      	cbz	r1, 8016650 <__swsetup_r+0xa0>
 801663c:	f104 0340 	add.w	r3, r4, #64	; 0x40
 8016640:	4299      	cmp	r1, r3
 8016642:	d003      	beq.n	801664c <__swsetup_r+0x9c>
 8016644:	4628      	mov	r0, r5
 8016646:	f001 f98d 	bl	8017964 <_free_r>
 801664a:	89a2      	ldrh	r2, [r4, #12]
 801664c:	2300      	movs	r3, #0
 801664e:	6323      	str	r3, [r4, #48]	; 0x30
 8016650:	f022 0224 	bic.w	r2, r2, #36	; 0x24
 8016654:	2300      	movs	r3, #0
 8016656:	6920      	ldr	r0, [r4, #16]
 8016658:	6063      	str	r3, [r4, #4]
 801665a:	b292      	uxth	r2, r2
 801665c:	6020      	str	r0, [r4, #0]
 801665e:	e7c6      	b.n	80165ee <__swsetup_r+0x3e>
 8016660:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8016664:	2309      	movs	r3, #9
 8016666:	602b      	str	r3, [r5, #0]
 8016668:	f04f 30ff 	mov.w	r0, #4294967295
 801666c:	81a2      	strh	r2, [r4, #12]
 801666e:	bd38      	pop	{r3, r4, r5, pc}
 8016670:	20000700 	.word	0x20000700

08016674 <quorem>:
 8016674:	6902      	ldr	r2, [r0, #16]
 8016676:	690b      	ldr	r3, [r1, #16]
 8016678:	4293      	cmp	r3, r2
 801667a:	f300 808f 	bgt.w	801679c <quorem+0x128>
 801667e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016682:	f103 38ff 	add.w	r8, r3, #4294967295
 8016686:	f101 0714 	add.w	r7, r1, #20
 801668a:	f100 0b14 	add.w	fp, r0, #20
 801668e:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
 8016692:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
 8016696:	ea4f 0488 	mov.w	r4, r8, lsl #2
 801669a:	b083      	sub	sp, #12
 801669c:	3201      	adds	r2, #1
 801669e:	fbb3 f9f2 	udiv	r9, r3, r2
 80166a2:	eb0b 0304 	add.w	r3, fp, r4
 80166a6:	9400      	str	r4, [sp, #0]
 80166a8:	eb07 0a04 	add.w	sl, r7, r4
 80166ac:	9301      	str	r3, [sp, #4]
 80166ae:	f1b9 0f00 	cmp.w	r9, #0
 80166b2:	d03b      	beq.n	801672c <quorem+0xb8>
 80166b4:	2600      	movs	r6, #0
 80166b6:	4632      	mov	r2, r6
 80166b8:	46bc      	mov	ip, r7
 80166ba:	46de      	mov	lr, fp
 80166bc:	4634      	mov	r4, r6
 80166be:	f85c 6b04 	ldr.w	r6, [ip], #4
 80166c2:	f8de 5000 	ldr.w	r5, [lr]
 80166c6:	b2b3      	uxth	r3, r6
 80166c8:	0c36      	lsrs	r6, r6, #16
 80166ca:	fb03 4409 	mla	r4, r3, r9, r4
 80166ce:	fb06 f609 	mul.w	r6, r6, r9
 80166d2:	eb06 4614 	add.w	r6, r6, r4, lsr #16
 80166d6:	b2a3      	uxth	r3, r4
 80166d8:	1ad3      	subs	r3, r2, r3
 80166da:	b2b4      	uxth	r4, r6
 80166dc:	fa13 f385 	uxtah	r3, r3, r5
 80166e0:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
 80166e4:	eb04 4423 	add.w	r4, r4, r3, asr #16
 80166e8:	b29b      	uxth	r3, r3
 80166ea:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80166ee:	45e2      	cmp	sl, ip
 80166f0:	ea4f 4224 	mov.w	r2, r4, asr #16
 80166f4:	f84e 3b04 	str.w	r3, [lr], #4
 80166f8:	ea4f 4416 	mov.w	r4, r6, lsr #16
 80166fc:	d2df      	bcs.n	80166be <quorem+0x4a>
 80166fe:	9b00      	ldr	r3, [sp, #0]
 8016700:	f85b 3003 	ldr.w	r3, [fp, r3]
 8016704:	b993      	cbnz	r3, 801672c <quorem+0xb8>
 8016706:	9c01      	ldr	r4, [sp, #4]
 8016708:	1f23      	subs	r3, r4, #4
 801670a:	459b      	cmp	fp, r3
 801670c:	d20c      	bcs.n	8016728 <quorem+0xb4>
 801670e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8016712:	b94b      	cbnz	r3, 8016728 <quorem+0xb4>
 8016714:	f1a4 0308 	sub.w	r3, r4, #8
 8016718:	e002      	b.n	8016720 <quorem+0xac>
 801671a:	681a      	ldr	r2, [r3, #0]
 801671c:	3b04      	subs	r3, #4
 801671e:	b91a      	cbnz	r2, 8016728 <quorem+0xb4>
 8016720:	459b      	cmp	fp, r3
 8016722:	f108 38ff 	add.w	r8, r8, #4294967295
 8016726:	d3f8      	bcc.n	801671a <quorem+0xa6>
 8016728:	f8c0 8010 	str.w	r8, [r0, #16]
 801672c:	4604      	mov	r4, r0
 801672e:	f002 f90b 	bl	8018948 <__mcmp>
 8016732:	2800      	cmp	r0, #0
 8016734:	db2e      	blt.n	8016794 <quorem+0x120>
 8016736:	f109 0901 	add.w	r9, r9, #1
 801673a:	465d      	mov	r5, fp
 801673c:	2300      	movs	r3, #0
 801673e:	f857 1b04 	ldr.w	r1, [r7], #4
 8016742:	6828      	ldr	r0, [r5, #0]
 8016744:	b28a      	uxth	r2, r1
 8016746:	1a9a      	subs	r2, r3, r2
 8016748:	0c09      	lsrs	r1, r1, #16
 801674a:	fa12 f280 	uxtah	r2, r2, r0
 801674e:	ebc1 4310 	rsb	r3, r1, r0, lsr #16
 8016752:	eb03 4322 	add.w	r3, r3, r2, asr #16
 8016756:	b291      	uxth	r1, r2
 8016758:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 801675c:	45ba      	cmp	sl, r7
 801675e:	f845 1b04 	str.w	r1, [r5], #4
 8016762:	ea4f 4323 	mov.w	r3, r3, asr #16
 8016766:	d2ea      	bcs.n	801673e <quorem+0xca>
 8016768:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
 801676c:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
 8016770:	b982      	cbnz	r2, 8016794 <quorem+0x120>
 8016772:	1f1a      	subs	r2, r3, #4
 8016774:	4593      	cmp	fp, r2
 8016776:	d20b      	bcs.n	8016790 <quorem+0x11c>
 8016778:	f853 2c04 	ldr.w	r2, [r3, #-4]
 801677c:	b942      	cbnz	r2, 8016790 <quorem+0x11c>
 801677e:	3b08      	subs	r3, #8
 8016780:	e002      	b.n	8016788 <quorem+0x114>
 8016782:	681a      	ldr	r2, [r3, #0]
 8016784:	3b04      	subs	r3, #4
 8016786:	b91a      	cbnz	r2, 8016790 <quorem+0x11c>
 8016788:	459b      	cmp	fp, r3
 801678a:	f108 38ff 	add.w	r8, r8, #4294967295
 801678e:	d3f8      	bcc.n	8016782 <quorem+0x10e>
 8016790:	f8c4 8010 	str.w	r8, [r4, #16]
 8016794:	4648      	mov	r0, r9
 8016796:	b003      	add	sp, #12
 8016798:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801679c:	2000      	movs	r0, #0
 801679e:	4770      	bx	lr

080167a0 <_dtoa_r>:
 80167a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80167a4:	6c01      	ldr	r1, [r0, #64]	; 0x40
 80167a6:	b097      	sub	sp, #92	; 0x5c
 80167a8:	4604      	mov	r4, r0
 80167aa:	9d23      	ldr	r5, [sp, #140]	; 0x8c
 80167ac:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80167b0:	b141      	cbz	r1, 80167c4 <_dtoa_r+0x24>
 80167b2:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80167b4:	604a      	str	r2, [r1, #4]
 80167b6:	2301      	movs	r3, #1
 80167b8:	4093      	lsls	r3, r2
 80167ba:	608b      	str	r3, [r1, #8]
 80167bc:	f001 fee0 	bl	8018580 <_Bfree>
 80167c0:	2300      	movs	r3, #0
 80167c2:	6423      	str	r3, [r4, #64]	; 0x40
 80167c4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80167c8:	2b00      	cmp	r3, #0
 80167ca:	4699      	mov	r9, r3
 80167cc:	db36      	blt.n	801683c <_dtoa_r+0x9c>
 80167ce:	2300      	movs	r3, #0
 80167d0:	602b      	str	r3, [r5, #0]
 80167d2:	4ba5      	ldr	r3, [pc, #660]	; (8016a68 <_dtoa_r+0x2c8>)
 80167d4:	461a      	mov	r2, r3
 80167d6:	ea09 0303 	and.w	r3, r9, r3
 80167da:	4293      	cmp	r3, r2
 80167dc:	d017      	beq.n	801680e <_dtoa_r+0x6e>
 80167de:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 80167e2:	2200      	movs	r2, #0
 80167e4:	4630      	mov	r0, r6
 80167e6:	4639      	mov	r1, r7
 80167e8:	2300      	movs	r3, #0
 80167ea:	f7ea f987 	bl	8000afc <__aeabi_dcmpeq>
 80167ee:	4680      	mov	r8, r0
 80167f0:	2800      	cmp	r0, #0
 80167f2:	d02b      	beq.n	801684c <_dtoa_r+0xac>
 80167f4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80167f6:	2301      	movs	r3, #1
 80167f8:	6013      	str	r3, [r2, #0]
 80167fa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80167fc:	2b00      	cmp	r3, #0
 80167fe:	f000 80cb 	beq.w	8016998 <_dtoa_r+0x1f8>
 8016802:	489a      	ldr	r0, [pc, #616]	; (8016a6c <_dtoa_r+0x2cc>)
 8016804:	6018      	str	r0, [r3, #0]
 8016806:	3801      	subs	r0, #1
 8016808:	b017      	add	sp, #92	; 0x5c
 801680a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801680e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8016810:	f242 730f 	movw	r3, #9999	; 0x270f
 8016814:	6013      	str	r3, [r2, #0]
 8016816:	9b02      	ldr	r3, [sp, #8]
 8016818:	2b00      	cmp	r3, #0
 801681a:	f000 80a6 	beq.w	801696a <_dtoa_r+0x1ca>
 801681e:	4894      	ldr	r0, [pc, #592]	; (8016a70 <_dtoa_r+0x2d0>)
 8016820:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016822:	2b00      	cmp	r3, #0
 8016824:	d0f0      	beq.n	8016808 <_dtoa_r+0x68>
 8016826:	78c3      	ldrb	r3, [r0, #3]
 8016828:	2b00      	cmp	r3, #0
 801682a:	f000 80b7 	beq.w	801699c <_dtoa_r+0x1fc>
 801682e:	f100 0308 	add.w	r3, r0, #8
 8016832:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8016834:	6013      	str	r3, [r2, #0]
 8016836:	b017      	add	sp, #92	; 0x5c
 8016838:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801683c:	9a03      	ldr	r2, [sp, #12]
 801683e:	2301      	movs	r3, #1
 8016840:	f022 4900 	bic.w	r9, r2, #2147483648	; 0x80000000
 8016844:	602b      	str	r3, [r5, #0]
 8016846:	f8cd 900c 	str.w	r9, [sp, #12]
 801684a:	e7c2      	b.n	80167d2 <_dtoa_r+0x32>
 801684c:	aa15      	add	r2, sp, #84	; 0x54
 801684e:	ab14      	add	r3, sp, #80	; 0x50
 8016850:	e88d 000c 	stmia.w	sp, {r2, r3}
 8016854:	4620      	mov	r0, r4
 8016856:	4632      	mov	r2, r6
 8016858:	463b      	mov	r3, r7
 801685a:	f002 f903 	bl	8018a64 <__d2b>
 801685e:	ea5f 5519 	movs.w	r5, r9, lsr #20
 8016862:	4683      	mov	fp, r0
 8016864:	f040 808a 	bne.w	801697c <_dtoa_r+0x1dc>
 8016868:	f8dd 8050 	ldr.w	r8, [sp, #80]	; 0x50
 801686c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801686e:	f46f 6382 	mvn.w	r3, #1040	; 0x410
 8016872:	4445      	add	r5, r8
 8016874:	429d      	cmp	r5, r3
 8016876:	f2c0 8297 	blt.w	8016da8 <_dtoa_r+0x608>
 801687a:	4a7e      	ldr	r2, [pc, #504]	; (8016a74 <_dtoa_r+0x2d4>)
 801687c:	1b52      	subs	r2, r2, r5
 801687e:	fa09 f902 	lsl.w	r9, r9, r2
 8016882:	9a02      	ldr	r2, [sp, #8]
 8016884:	f205 4312 	addw	r3, r5, #1042	; 0x412
 8016888:	fa22 f003 	lsr.w	r0, r2, r3
 801688c:	ea49 0000 	orr.w	r0, r9, r0
 8016890:	f7e9 fe56 	bl	8000540 <__aeabi_ui2d>
 8016894:	2301      	movs	r3, #1
 8016896:	3d01      	subs	r5, #1
 8016898:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 801689c:	930d      	str	r3, [sp, #52]	; 0x34
 801689e:	2200      	movs	r2, #0
 80168a0:	4b75      	ldr	r3, [pc, #468]	; (8016a78 <_dtoa_r+0x2d8>)
 80168a2:	f7e9 fd0f 	bl	80002c4 <__aeabi_dsub>
 80168a6:	a36a      	add	r3, pc, #424	; (adr r3, 8016a50 <_dtoa_r+0x2b0>)
 80168a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80168ac:	f7e9 febe 	bl	800062c <__aeabi_dmul>
 80168b0:	a369      	add	r3, pc, #420	; (adr r3, 8016a58 <_dtoa_r+0x2b8>)
 80168b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80168b6:	f7e9 fd07 	bl	80002c8 <__adddf3>
 80168ba:	4606      	mov	r6, r0
 80168bc:	4628      	mov	r0, r5
 80168be:	460f      	mov	r7, r1
 80168c0:	f7e9 fe4e 	bl	8000560 <__aeabi_i2d>
 80168c4:	a366      	add	r3, pc, #408	; (adr r3, 8016a60 <_dtoa_r+0x2c0>)
 80168c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80168ca:	f7e9 feaf 	bl	800062c <__aeabi_dmul>
 80168ce:	4602      	mov	r2, r0
 80168d0:	460b      	mov	r3, r1
 80168d2:	4630      	mov	r0, r6
 80168d4:	4639      	mov	r1, r7
 80168d6:	f7e9 fcf7 	bl	80002c8 <__adddf3>
 80168da:	4606      	mov	r6, r0
 80168dc:	460f      	mov	r7, r1
 80168de:	f7ea f93f 	bl	8000b60 <__aeabi_d2iz>
 80168e2:	4639      	mov	r1, r7
 80168e4:	9004      	str	r0, [sp, #16]
 80168e6:	2200      	movs	r2, #0
 80168e8:	4630      	mov	r0, r6
 80168ea:	2300      	movs	r3, #0
 80168ec:	f7ea f910 	bl	8000b10 <__aeabi_dcmplt>
 80168f0:	2800      	cmp	r0, #0
 80168f2:	f040 81a6 	bne.w	8016c42 <_dtoa_r+0x4a2>
 80168f6:	9b04      	ldr	r3, [sp, #16]
 80168f8:	2b16      	cmp	r3, #22
 80168fa:	f200 819f 	bhi.w	8016c3c <_dtoa_r+0x49c>
 80168fe:	9a04      	ldr	r2, [sp, #16]
 8016900:	4b5e      	ldr	r3, [pc, #376]	; (8016a7c <_dtoa_r+0x2dc>)
 8016902:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8016906:	e9d3 0100 	ldrd	r0, r1, [r3]
 801690a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801690e:	f7ea f91d 	bl	8000b4c <__aeabi_dcmpgt>
 8016912:	2800      	cmp	r0, #0
 8016914:	f000 824e 	beq.w	8016db4 <_dtoa_r+0x614>
 8016918:	9b04      	ldr	r3, [sp, #16]
 801691a:	3b01      	subs	r3, #1
 801691c:	9304      	str	r3, [sp, #16]
 801691e:	2300      	movs	r3, #0
 8016920:	930b      	str	r3, [sp, #44]	; 0x2c
 8016922:	ebc5 0508 	rsb	r5, r5, r8
 8016926:	f1b5 0a01 	subs.w	sl, r5, #1
 801692a:	f100 81a1 	bmi.w	8016c70 <_dtoa_r+0x4d0>
 801692e:	2300      	movs	r3, #0
 8016930:	9305      	str	r3, [sp, #20]
 8016932:	9b04      	ldr	r3, [sp, #16]
 8016934:	2b00      	cmp	r3, #0
 8016936:	f2c0 8192 	blt.w	8016c5e <_dtoa_r+0x4be>
 801693a:	449a      	add	sl, r3
 801693c:	930a      	str	r3, [sp, #40]	; 0x28
 801693e:	2300      	movs	r3, #0
 8016940:	9308      	str	r3, [sp, #32]
 8016942:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016944:	2b09      	cmp	r3, #9
 8016946:	d82b      	bhi.n	80169a0 <_dtoa_r+0x200>
 8016948:	2b05      	cmp	r3, #5
 801694a:	f340 8670 	ble.w	801762e <_dtoa_r+0xe8e>
 801694e:	3b04      	subs	r3, #4
 8016950:	9320      	str	r3, [sp, #128]	; 0x80
 8016952:	2500      	movs	r5, #0
 8016954:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016956:	3b02      	subs	r3, #2
 8016958:	2b03      	cmp	r3, #3
 801695a:	f200 864e 	bhi.w	80175fa <_dtoa_r+0xe5a>
 801695e:	e8df f013 	tbh	[pc, r3, lsl #1]
 8016962:	03cc      	.short	0x03cc
 8016964:	02b203be 	.word	0x02b203be
 8016968:	0663      	.short	0x0663
 801696a:	4b41      	ldr	r3, [pc, #260]	; (8016a70 <_dtoa_r+0x2d0>)
 801696c:	4a44      	ldr	r2, [pc, #272]	; (8016a80 <_dtoa_r+0x2e0>)
 801696e:	f3c9 0013 	ubfx	r0, r9, #0, #20
 8016972:	2800      	cmp	r0, #0
 8016974:	bf14      	ite	ne
 8016976:	4618      	movne	r0, r3
 8016978:	4610      	moveq	r0, r2
 801697a:	e751      	b.n	8016820 <_dtoa_r+0x80>
 801697c:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8016980:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 8016984:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
 8016988:	4630      	mov	r0, r6
 801698a:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 801698e:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 8016992:	f8dd 8050 	ldr.w	r8, [sp, #80]	; 0x50
 8016996:	e782      	b.n	801689e <_dtoa_r+0xfe>
 8016998:	483a      	ldr	r0, [pc, #232]	; (8016a84 <_dtoa_r+0x2e4>)
 801699a:	e735      	b.n	8016808 <_dtoa_r+0x68>
 801699c:	1cc3      	adds	r3, r0, #3
 801699e:	e748      	b.n	8016832 <_dtoa_r+0x92>
 80169a0:	2100      	movs	r1, #0
 80169a2:	6461      	str	r1, [r4, #68]	; 0x44
 80169a4:	4620      	mov	r0, r4
 80169a6:	9120      	str	r1, [sp, #128]	; 0x80
 80169a8:	f001 fdc4 	bl	8018534 <_Balloc>
 80169ac:	f04f 33ff 	mov.w	r3, #4294967295
 80169b0:	9306      	str	r3, [sp, #24]
 80169b2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80169b4:	930c      	str	r3, [sp, #48]	; 0x30
 80169b6:	2301      	movs	r3, #1
 80169b8:	9007      	str	r0, [sp, #28]
 80169ba:	9221      	str	r2, [sp, #132]	; 0x84
 80169bc:	6420      	str	r0, [r4, #64]	; 0x40
 80169be:	9309      	str	r3, [sp, #36]	; 0x24
 80169c0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80169c2:	2b00      	cmp	r3, #0
 80169c4:	f2c0 80d2 	blt.w	8016b6c <_dtoa_r+0x3cc>
 80169c8:	9a04      	ldr	r2, [sp, #16]
 80169ca:	2a0e      	cmp	r2, #14
 80169cc:	f300 80ce 	bgt.w	8016b6c <_dtoa_r+0x3cc>
 80169d0:	4b2a      	ldr	r3, [pc, #168]	; (8016a7c <_dtoa_r+0x2dc>)
 80169d2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80169d6:	e9d3 8900 	ldrd	r8, r9, [r3]
 80169da:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80169dc:	2b00      	cmp	r3, #0
 80169de:	f2c0 838f 	blt.w	8017100 <_dtoa_r+0x960>
 80169e2:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 80169e6:	4642      	mov	r2, r8
 80169e8:	464b      	mov	r3, r9
 80169ea:	4630      	mov	r0, r6
 80169ec:	4639      	mov	r1, r7
 80169ee:	f7e9 ff47 	bl	8000880 <__aeabi_ddiv>
 80169f2:	f7ea f8b5 	bl	8000b60 <__aeabi_d2iz>
 80169f6:	4682      	mov	sl, r0
 80169f8:	f7e9 fdb2 	bl	8000560 <__aeabi_i2d>
 80169fc:	4642      	mov	r2, r8
 80169fe:	464b      	mov	r3, r9
 8016a00:	f7e9 fe14 	bl	800062c <__aeabi_dmul>
 8016a04:	460b      	mov	r3, r1
 8016a06:	4602      	mov	r2, r0
 8016a08:	4639      	mov	r1, r7
 8016a0a:	4630      	mov	r0, r6
 8016a0c:	f7e9 fc5a 	bl	80002c4 <__aeabi_dsub>
 8016a10:	9d07      	ldr	r5, [sp, #28]
 8016a12:	f10a 0330 	add.w	r3, sl, #48	; 0x30
 8016a16:	702b      	strb	r3, [r5, #0]
 8016a18:	9b06      	ldr	r3, [sp, #24]
 8016a1a:	2b01      	cmp	r3, #1
 8016a1c:	4606      	mov	r6, r0
 8016a1e:	460f      	mov	r7, r1
 8016a20:	f105 0501 	add.w	r5, r5, #1
 8016a24:	d062      	beq.n	8016aec <_dtoa_r+0x34c>
 8016a26:	2200      	movs	r2, #0
 8016a28:	4b17      	ldr	r3, [pc, #92]	; (8016a88 <_dtoa_r+0x2e8>)
 8016a2a:	f7e9 fdff 	bl	800062c <__aeabi_dmul>
 8016a2e:	2200      	movs	r2, #0
 8016a30:	2300      	movs	r3, #0
 8016a32:	4606      	mov	r6, r0
 8016a34:	460f      	mov	r7, r1
 8016a36:	f7ea f861 	bl	8000afc <__aeabi_dcmpeq>
 8016a3a:	2800      	cmp	r0, #0
 8016a3c:	f040 8083 	bne.w	8016b46 <_dtoa_r+0x3a6>
 8016a40:	f8cd b008 	str.w	fp, [sp, #8]
 8016a44:	9405      	str	r4, [sp, #20]
 8016a46:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8016a4a:	9c06      	ldr	r4, [sp, #24]
 8016a4c:	e029      	b.n	8016aa2 <_dtoa_r+0x302>
 8016a4e:	bf00      	nop
 8016a50:	636f4361 	.word	0x636f4361
 8016a54:	3fd287a7 	.word	0x3fd287a7
 8016a58:	8b60c8b3 	.word	0x8b60c8b3
 8016a5c:	3fc68a28 	.word	0x3fc68a28
 8016a60:	509f79fb 	.word	0x509f79fb
 8016a64:	3fd34413 	.word	0x3fd34413
 8016a68:	7ff00000 	.word	0x7ff00000
 8016a6c:	0802e4c1 	.word	0x0802e4c1
 8016a70:	0802e500 	.word	0x0802e500
 8016a74:	fffffc0e 	.word	0xfffffc0e
 8016a78:	3ff80000 	.word	0x3ff80000
 8016a7c:	0802e518 	.word	0x0802e518
 8016a80:	0802e4f4 	.word	0x0802e4f4
 8016a84:	0802e4c0 	.word	0x0802e4c0
 8016a88:	40240000 	.word	0x40240000
 8016a8c:	f7e9 fdce 	bl	800062c <__aeabi_dmul>
 8016a90:	2200      	movs	r2, #0
 8016a92:	2300      	movs	r3, #0
 8016a94:	4606      	mov	r6, r0
 8016a96:	460f      	mov	r7, r1
 8016a98:	f7ea f830 	bl	8000afc <__aeabi_dcmpeq>
 8016a9c:	2800      	cmp	r0, #0
 8016a9e:	f040 83de 	bne.w	801725e <_dtoa_r+0xabe>
 8016aa2:	4642      	mov	r2, r8
 8016aa4:	464b      	mov	r3, r9
 8016aa6:	4630      	mov	r0, r6
 8016aa8:	4639      	mov	r1, r7
 8016aaa:	f7e9 fee9 	bl	8000880 <__aeabi_ddiv>
 8016aae:	f7ea f857 	bl	8000b60 <__aeabi_d2iz>
 8016ab2:	4682      	mov	sl, r0
 8016ab4:	f7e9 fd54 	bl	8000560 <__aeabi_i2d>
 8016ab8:	4642      	mov	r2, r8
 8016aba:	464b      	mov	r3, r9
 8016abc:	f7e9 fdb6 	bl	800062c <__aeabi_dmul>
 8016ac0:	4602      	mov	r2, r0
 8016ac2:	460b      	mov	r3, r1
 8016ac4:	4630      	mov	r0, r6
 8016ac6:	4639      	mov	r1, r7
 8016ac8:	f7e9 fbfc 	bl	80002c4 <__aeabi_dsub>
 8016acc:	f10a 0e30 	add.w	lr, sl, #48	; 0x30
 8016ad0:	f805 eb01 	strb.w	lr, [r5], #1
 8016ad4:	ebcb 0e05 	rsb	lr, fp, r5
 8016ad8:	4574      	cmp	r4, lr
 8016ada:	4606      	mov	r6, r0
 8016adc:	460f      	mov	r7, r1
 8016ade:	f04f 0200 	mov.w	r2, #0
 8016ae2:	4bb5      	ldr	r3, [pc, #724]	; (8016db8 <_dtoa_r+0x618>)
 8016ae4:	d1d2      	bne.n	8016a8c <_dtoa_r+0x2ec>
 8016ae6:	f8dd b008 	ldr.w	fp, [sp, #8]
 8016aea:	9c05      	ldr	r4, [sp, #20]
 8016aec:	4632      	mov	r2, r6
 8016aee:	463b      	mov	r3, r7
 8016af0:	4630      	mov	r0, r6
 8016af2:	4639      	mov	r1, r7
 8016af4:	f7e9 fbe8 	bl	80002c8 <__adddf3>
 8016af8:	4606      	mov	r6, r0
 8016afa:	460f      	mov	r7, r1
 8016afc:	4640      	mov	r0, r8
 8016afe:	4649      	mov	r1, r9
 8016b00:	4632      	mov	r2, r6
 8016b02:	463b      	mov	r3, r7
 8016b04:	f7ea f804 	bl	8000b10 <__aeabi_dcmplt>
 8016b08:	b948      	cbnz	r0, 8016b1e <_dtoa_r+0x37e>
 8016b0a:	4640      	mov	r0, r8
 8016b0c:	4649      	mov	r1, r9
 8016b0e:	4632      	mov	r2, r6
 8016b10:	463b      	mov	r3, r7
 8016b12:	f7e9 fff3 	bl	8000afc <__aeabi_dcmpeq>
 8016b16:	b1b0      	cbz	r0, 8016b46 <_dtoa_r+0x3a6>
 8016b18:	f01a 0f01 	tst.w	sl, #1
 8016b1c:	d013      	beq.n	8016b46 <_dtoa_r+0x3a6>
 8016b1e:	f815 8c01 	ldrb.w	r8, [r5, #-1]
 8016b22:	9907      	ldr	r1, [sp, #28]
 8016b24:	1e6b      	subs	r3, r5, #1
 8016b26:	e004      	b.n	8016b32 <_dtoa_r+0x392>
 8016b28:	428b      	cmp	r3, r1
 8016b2a:	f000 8440 	beq.w	80173ae <_dtoa_r+0xc0e>
 8016b2e:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
 8016b32:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8016b36:	f103 0501 	add.w	r5, r3, #1
 8016b3a:	461a      	mov	r2, r3
 8016b3c:	d0f4      	beq.n	8016b28 <_dtoa_r+0x388>
 8016b3e:	f108 0301 	add.w	r3, r8, #1
 8016b42:	b2db      	uxtb	r3, r3
 8016b44:	7013      	strb	r3, [r2, #0]
 8016b46:	4620      	mov	r0, r4
 8016b48:	4659      	mov	r1, fp
 8016b4a:	f001 fd19 	bl	8018580 <_Bfree>
 8016b4e:	2200      	movs	r2, #0
 8016b50:	9b04      	ldr	r3, [sp, #16]
 8016b52:	702a      	strb	r2, [r5, #0]
 8016b54:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8016b56:	3301      	adds	r3, #1
 8016b58:	6013      	str	r3, [r2, #0]
 8016b5a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016b5c:	2b00      	cmp	r3, #0
 8016b5e:	f000 8345 	beq.w	80171ec <_dtoa_r+0xa4c>
 8016b62:	9807      	ldr	r0, [sp, #28]
 8016b64:	601d      	str	r5, [r3, #0]
 8016b66:	b017      	add	sp, #92	; 0x5c
 8016b68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016b6c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016b6e:	2a00      	cmp	r2, #0
 8016b70:	f000 8084 	beq.w	8016c7c <_dtoa_r+0x4dc>
 8016b74:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8016b76:	2a01      	cmp	r2, #1
 8016b78:	f340 8304 	ble.w	8017184 <_dtoa_r+0x9e4>
 8016b7c:	9b06      	ldr	r3, [sp, #24]
 8016b7e:	1e5f      	subs	r7, r3, #1
 8016b80:	9b08      	ldr	r3, [sp, #32]
 8016b82:	42bb      	cmp	r3, r7
 8016b84:	f2c0 83a9 	blt.w	80172da <_dtoa_r+0xb3a>
 8016b88:	1bdf      	subs	r7, r3, r7
 8016b8a:	9b06      	ldr	r3, [sp, #24]
 8016b8c:	2b00      	cmp	r3, #0
 8016b8e:	f2c0 849c 	blt.w	80174ca <_dtoa_r+0xd2a>
 8016b92:	9d05      	ldr	r5, [sp, #20]
 8016b94:	9b06      	ldr	r3, [sp, #24]
 8016b96:	9a05      	ldr	r2, [sp, #20]
 8016b98:	4620      	mov	r0, r4
 8016b9a:	441a      	add	r2, r3
 8016b9c:	2101      	movs	r1, #1
 8016b9e:	9205      	str	r2, [sp, #20]
 8016ba0:	449a      	add	sl, r3
 8016ba2:	f001 fd87 	bl	80186b4 <__i2b>
 8016ba6:	4606      	mov	r6, r0
 8016ba8:	b165      	cbz	r5, 8016bc4 <_dtoa_r+0x424>
 8016baa:	f1ba 0f00 	cmp.w	sl, #0
 8016bae:	dd09      	ble.n	8016bc4 <_dtoa_r+0x424>
 8016bb0:	45aa      	cmp	sl, r5
 8016bb2:	9a05      	ldr	r2, [sp, #20]
 8016bb4:	4653      	mov	r3, sl
 8016bb6:	bfa8      	it	ge
 8016bb8:	462b      	movge	r3, r5
 8016bba:	1ad2      	subs	r2, r2, r3
 8016bbc:	9205      	str	r2, [sp, #20]
 8016bbe:	1aed      	subs	r5, r5, r3
 8016bc0:	ebc3 0a0a 	rsb	sl, r3, sl
 8016bc4:	9b08      	ldr	r3, [sp, #32]
 8016bc6:	2b00      	cmp	r3, #0
 8016bc8:	dd1a      	ble.n	8016c00 <_dtoa_r+0x460>
 8016bca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016bcc:	2b00      	cmp	r3, #0
 8016bce:	f000 837d 	beq.w	80172cc <_dtoa_r+0xb2c>
 8016bd2:	2f00      	cmp	r7, #0
 8016bd4:	dd10      	ble.n	8016bf8 <_dtoa_r+0x458>
 8016bd6:	4631      	mov	r1, r6
 8016bd8:	463a      	mov	r2, r7
 8016bda:	4620      	mov	r0, r4
 8016bdc:	f001 fe0e 	bl	80187fc <__pow5mult>
 8016be0:	4606      	mov	r6, r0
 8016be2:	465a      	mov	r2, fp
 8016be4:	4631      	mov	r1, r6
 8016be6:	4620      	mov	r0, r4
 8016be8:	f001 fd6e 	bl	80186c8 <__multiply>
 8016bec:	4659      	mov	r1, fp
 8016bee:	4680      	mov	r8, r0
 8016bf0:	4620      	mov	r0, r4
 8016bf2:	f001 fcc5 	bl	8018580 <_Bfree>
 8016bf6:	46c3      	mov	fp, r8
 8016bf8:	9b08      	ldr	r3, [sp, #32]
 8016bfa:	1bda      	subs	r2, r3, r7
 8016bfc:	f040 82a2 	bne.w	8017144 <_dtoa_r+0x9a4>
 8016c00:	4620      	mov	r0, r4
 8016c02:	2101      	movs	r1, #1
 8016c04:	f001 fd56 	bl	80186b4 <__i2b>
 8016c08:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016c0a:	2b00      	cmp	r3, #0
 8016c0c:	4680      	mov	r8, r0
 8016c0e:	dd39      	ble.n	8016c84 <_dtoa_r+0x4e4>
 8016c10:	4601      	mov	r1, r0
 8016c12:	461a      	mov	r2, r3
 8016c14:	4620      	mov	r0, r4
 8016c16:	f001 fdf1 	bl	80187fc <__pow5mult>
 8016c1a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016c1c:	2b01      	cmp	r3, #1
 8016c1e:	4680      	mov	r8, r0
 8016c20:	f340 8296 	ble.w	8017150 <_dtoa_r+0x9b0>
 8016c24:	f04f 0900 	mov.w	r9, #0
 8016c28:	f8d8 3010 	ldr.w	r3, [r8, #16]
 8016c2c:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 8016c30:	6918      	ldr	r0, [r3, #16]
 8016c32:	f001 fcf1 	bl	8018618 <__hi0bits>
 8016c36:	f1c0 0020 	rsb	r0, r0, #32
 8016c3a:	e02d      	b.n	8016c98 <_dtoa_r+0x4f8>
 8016c3c:	2301      	movs	r3, #1
 8016c3e:	930b      	str	r3, [sp, #44]	; 0x2c
 8016c40:	e66f      	b.n	8016922 <_dtoa_r+0x182>
 8016c42:	9804      	ldr	r0, [sp, #16]
 8016c44:	f7e9 fc8c 	bl	8000560 <__aeabi_i2d>
 8016c48:	4632      	mov	r2, r6
 8016c4a:	463b      	mov	r3, r7
 8016c4c:	f7e9 ff56 	bl	8000afc <__aeabi_dcmpeq>
 8016c50:	2800      	cmp	r0, #0
 8016c52:	f47f ae50 	bne.w	80168f6 <_dtoa_r+0x156>
 8016c56:	9b04      	ldr	r3, [sp, #16]
 8016c58:	3b01      	subs	r3, #1
 8016c5a:	9304      	str	r3, [sp, #16]
 8016c5c:	e64b      	b.n	80168f6 <_dtoa_r+0x156>
 8016c5e:	9a05      	ldr	r2, [sp, #20]
 8016c60:	9b04      	ldr	r3, [sp, #16]
 8016c62:	1ad2      	subs	r2, r2, r3
 8016c64:	425b      	negs	r3, r3
 8016c66:	9308      	str	r3, [sp, #32]
 8016c68:	2300      	movs	r3, #0
 8016c6a:	9205      	str	r2, [sp, #20]
 8016c6c:	930a      	str	r3, [sp, #40]	; 0x28
 8016c6e:	e668      	b.n	8016942 <_dtoa_r+0x1a2>
 8016c70:	f1ca 0300 	rsb	r3, sl, #0
 8016c74:	9305      	str	r3, [sp, #20]
 8016c76:	f04f 0a00 	mov.w	sl, #0
 8016c7a:	e65a      	b.n	8016932 <_dtoa_r+0x192>
 8016c7c:	9f08      	ldr	r7, [sp, #32]
 8016c7e:	9d05      	ldr	r5, [sp, #20]
 8016c80:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8016c82:	e791      	b.n	8016ba8 <_dtoa_r+0x408>
 8016c84:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016c86:	2b01      	cmp	r3, #1
 8016c88:	f340 82b3 	ble.w	80171f2 <_dtoa_r+0xa52>
 8016c8c:	f04f 0900 	mov.w	r9, #0
 8016c90:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016c92:	2b00      	cmp	r3, #0
 8016c94:	d1c8      	bne.n	8016c28 <_dtoa_r+0x488>
 8016c96:	2001      	movs	r0, #1
 8016c98:	4450      	add	r0, sl
 8016c9a:	f010 001f 	ands.w	r0, r0, #31
 8016c9e:	f000 8081 	beq.w	8016da4 <_dtoa_r+0x604>
 8016ca2:	f1c0 0320 	rsb	r3, r0, #32
 8016ca6:	2b04      	cmp	r3, #4
 8016ca8:	f340 84b8 	ble.w	801761c <_dtoa_r+0xe7c>
 8016cac:	f1c0 001c 	rsb	r0, r0, #28
 8016cb0:	9b05      	ldr	r3, [sp, #20]
 8016cb2:	4403      	add	r3, r0
 8016cb4:	9305      	str	r3, [sp, #20]
 8016cb6:	4405      	add	r5, r0
 8016cb8:	4482      	add	sl, r0
 8016cba:	9b05      	ldr	r3, [sp, #20]
 8016cbc:	2b00      	cmp	r3, #0
 8016cbe:	dd05      	ble.n	8016ccc <_dtoa_r+0x52c>
 8016cc0:	4659      	mov	r1, fp
 8016cc2:	461a      	mov	r2, r3
 8016cc4:	4620      	mov	r0, r4
 8016cc6:	f001 fde9 	bl	801889c <__lshift>
 8016cca:	4683      	mov	fp, r0
 8016ccc:	f1ba 0f00 	cmp.w	sl, #0
 8016cd0:	dd05      	ble.n	8016cde <_dtoa_r+0x53e>
 8016cd2:	4641      	mov	r1, r8
 8016cd4:	4652      	mov	r2, sl
 8016cd6:	4620      	mov	r0, r4
 8016cd8:	f001 fde0 	bl	801889c <__lshift>
 8016cdc:	4680      	mov	r8, r0
 8016cde:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016ce0:	2b00      	cmp	r3, #0
 8016ce2:	f040 8268 	bne.w	80171b6 <_dtoa_r+0xa16>
 8016ce6:	9b06      	ldr	r3, [sp, #24]
 8016ce8:	2b00      	cmp	r3, #0
 8016cea:	f340 8295 	ble.w	8017218 <_dtoa_r+0xa78>
 8016cee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016cf0:	2b00      	cmp	r3, #0
 8016cf2:	d171      	bne.n	8016dd8 <_dtoa_r+0x638>
 8016cf4:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8016cf8:	9f06      	ldr	r7, [sp, #24]
 8016cfa:	464d      	mov	r5, r9
 8016cfc:	e002      	b.n	8016d04 <_dtoa_r+0x564>
 8016cfe:	f001 fc49 	bl	8018594 <__multadd>
 8016d02:	4683      	mov	fp, r0
 8016d04:	4641      	mov	r1, r8
 8016d06:	4658      	mov	r0, fp
 8016d08:	f7ff fcb4 	bl	8016674 <quorem>
 8016d0c:	f100 0c30 	add.w	ip, r0, #48	; 0x30
 8016d10:	f805 cb01 	strb.w	ip, [r5], #1
 8016d14:	ebc9 0305 	rsb	r3, r9, r5
 8016d18:	42bb      	cmp	r3, r7
 8016d1a:	4620      	mov	r0, r4
 8016d1c:	4659      	mov	r1, fp
 8016d1e:	f04f 020a 	mov.w	r2, #10
 8016d22:	f04f 0300 	mov.w	r3, #0
 8016d26:	dbea      	blt.n	8016cfe <_dtoa_r+0x55e>
 8016d28:	9b07      	ldr	r3, [sp, #28]
 8016d2a:	9a06      	ldr	r2, [sp, #24]
 8016d2c:	2a01      	cmp	r2, #1
 8016d2e:	bfac      	ite	ge
 8016d30:	189b      	addge	r3, r3, r2
 8016d32:	3301      	addlt	r3, #1
 8016d34:	461d      	mov	r5, r3
 8016d36:	f04f 0a00 	mov.w	sl, #0
 8016d3a:	4659      	mov	r1, fp
 8016d3c:	2201      	movs	r2, #1
 8016d3e:	4620      	mov	r0, r4
 8016d40:	f8cd c008 	str.w	ip, [sp, #8]
 8016d44:	f001 fdaa 	bl	801889c <__lshift>
 8016d48:	4641      	mov	r1, r8
 8016d4a:	4683      	mov	fp, r0
 8016d4c:	f001 fdfc 	bl	8018948 <__mcmp>
 8016d50:	2800      	cmp	r0, #0
 8016d52:	f8dd c008 	ldr.w	ip, [sp, #8]
 8016d56:	f340 82f6 	ble.w	8017346 <_dtoa_r+0xba6>
 8016d5a:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8016d5e:	9907      	ldr	r1, [sp, #28]
 8016d60:	1e6b      	subs	r3, r5, #1
 8016d62:	e004      	b.n	8016d6e <_dtoa_r+0x5ce>
 8016d64:	428b      	cmp	r3, r1
 8016d66:	f000 8273 	beq.w	8017250 <_dtoa_r+0xab0>
 8016d6a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8016d6e:	2a39      	cmp	r2, #57	; 0x39
 8016d70:	f103 0501 	add.w	r5, r3, #1
 8016d74:	d0f6      	beq.n	8016d64 <_dtoa_r+0x5c4>
 8016d76:	3201      	adds	r2, #1
 8016d78:	701a      	strb	r2, [r3, #0]
 8016d7a:	4641      	mov	r1, r8
 8016d7c:	4620      	mov	r0, r4
 8016d7e:	f001 fbff 	bl	8018580 <_Bfree>
 8016d82:	2e00      	cmp	r6, #0
 8016d84:	f43f aedf 	beq.w	8016b46 <_dtoa_r+0x3a6>
 8016d88:	f1ba 0f00 	cmp.w	sl, #0
 8016d8c:	d005      	beq.n	8016d9a <_dtoa_r+0x5fa>
 8016d8e:	45b2      	cmp	sl, r6
 8016d90:	d003      	beq.n	8016d9a <_dtoa_r+0x5fa>
 8016d92:	4651      	mov	r1, sl
 8016d94:	4620      	mov	r0, r4
 8016d96:	f001 fbf3 	bl	8018580 <_Bfree>
 8016d9a:	4631      	mov	r1, r6
 8016d9c:	4620      	mov	r0, r4
 8016d9e:	f001 fbef 	bl	8018580 <_Bfree>
 8016da2:	e6d0      	b.n	8016b46 <_dtoa_r+0x3a6>
 8016da4:	201c      	movs	r0, #28
 8016da6:	e783      	b.n	8016cb0 <_dtoa_r+0x510>
 8016da8:	4b04      	ldr	r3, [pc, #16]	; (8016dbc <_dtoa_r+0x61c>)
 8016daa:	9a02      	ldr	r2, [sp, #8]
 8016dac:	1b5b      	subs	r3, r3, r5
 8016dae:	fa02 f003 	lsl.w	r0, r2, r3
 8016db2:	e56d      	b.n	8016890 <_dtoa_r+0xf0>
 8016db4:	900b      	str	r0, [sp, #44]	; 0x2c
 8016db6:	e5b4      	b.n	8016922 <_dtoa_r+0x182>
 8016db8:	40240000 	.word	0x40240000
 8016dbc:	fffffbee 	.word	0xfffffbee
 8016dc0:	4631      	mov	r1, r6
 8016dc2:	2300      	movs	r3, #0
 8016dc4:	4620      	mov	r0, r4
 8016dc6:	220a      	movs	r2, #10
 8016dc8:	f001 fbe4 	bl	8018594 <__multadd>
 8016dcc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016dce:	2b00      	cmp	r3, #0
 8016dd0:	4606      	mov	r6, r0
 8016dd2:	f340 840c 	ble.w	80175ee <_dtoa_r+0xe4e>
 8016dd6:	9306      	str	r3, [sp, #24]
 8016dd8:	2d00      	cmp	r5, #0
 8016dda:	dd05      	ble.n	8016de8 <_dtoa_r+0x648>
 8016ddc:	4631      	mov	r1, r6
 8016dde:	462a      	mov	r2, r5
 8016de0:	4620      	mov	r0, r4
 8016de2:	f001 fd5b 	bl	801889c <__lshift>
 8016de6:	4606      	mov	r6, r0
 8016de8:	f1b9 0f00 	cmp.w	r9, #0
 8016dec:	f040 82e9 	bne.w	80173c2 <_dtoa_r+0xc22>
 8016df0:	46b1      	mov	r9, r6
 8016df2:	9b06      	ldr	r3, [sp, #24]
 8016df4:	9a07      	ldr	r2, [sp, #28]
 8016df6:	3b01      	subs	r3, #1
 8016df8:	18d3      	adds	r3, r2, r3
 8016dfa:	9308      	str	r3, [sp, #32]
 8016dfc:	9b02      	ldr	r3, [sp, #8]
 8016dfe:	f003 0301 	and.w	r3, r3, #1
 8016e02:	9309      	str	r3, [sp, #36]	; 0x24
 8016e04:	4617      	mov	r7, r2
 8016e06:	4641      	mov	r1, r8
 8016e08:	4658      	mov	r0, fp
 8016e0a:	f7ff fc33 	bl	8016674 <quorem>
 8016e0e:	4631      	mov	r1, r6
 8016e10:	4605      	mov	r5, r0
 8016e12:	4658      	mov	r0, fp
 8016e14:	f001 fd98 	bl	8018948 <__mcmp>
 8016e18:	464a      	mov	r2, r9
 8016e1a:	4682      	mov	sl, r0
 8016e1c:	4641      	mov	r1, r8
 8016e1e:	4620      	mov	r0, r4
 8016e20:	f001 fdb6 	bl	8018990 <__mdiff>
 8016e24:	68c2      	ldr	r2, [r0, #12]
 8016e26:	4603      	mov	r3, r0
 8016e28:	f105 0c30 	add.w	ip, r5, #48	; 0x30
 8016e2c:	2a00      	cmp	r2, #0
 8016e2e:	f040 81b8 	bne.w	80171a2 <_dtoa_r+0xa02>
 8016e32:	4619      	mov	r1, r3
 8016e34:	4658      	mov	r0, fp
 8016e36:	f8cd c018 	str.w	ip, [sp, #24]
 8016e3a:	9305      	str	r3, [sp, #20]
 8016e3c:	f001 fd84 	bl	8018948 <__mcmp>
 8016e40:	9b05      	ldr	r3, [sp, #20]
 8016e42:	9002      	str	r0, [sp, #8]
 8016e44:	4619      	mov	r1, r3
 8016e46:	4620      	mov	r0, r4
 8016e48:	f001 fb9a 	bl	8018580 <_Bfree>
 8016e4c:	9a02      	ldr	r2, [sp, #8]
 8016e4e:	f8dd c018 	ldr.w	ip, [sp, #24]
 8016e52:	b92a      	cbnz	r2, 8016e60 <_dtoa_r+0x6c0>
 8016e54:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016e56:	b91b      	cbnz	r3, 8016e60 <_dtoa_r+0x6c0>
 8016e58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016e5a:	2b00      	cmp	r3, #0
 8016e5c:	f000 83a7 	beq.w	80175ae <_dtoa_r+0xe0e>
 8016e60:	f1ba 0f00 	cmp.w	sl, #0
 8016e64:	f2c0 8251 	blt.w	801730a <_dtoa_r+0xb6a>
 8016e68:	d105      	bne.n	8016e76 <_dtoa_r+0x6d6>
 8016e6a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016e6c:	b91b      	cbnz	r3, 8016e76 <_dtoa_r+0x6d6>
 8016e6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016e70:	2b00      	cmp	r3, #0
 8016e72:	f000 824a 	beq.w	801730a <_dtoa_r+0xb6a>
 8016e76:	2a00      	cmp	r2, #0
 8016e78:	f300 82b7 	bgt.w	80173ea <_dtoa_r+0xc4a>
 8016e7c:	9b08      	ldr	r3, [sp, #32]
 8016e7e:	f887 c000 	strb.w	ip, [r7]
 8016e82:	f107 0a01 	add.w	sl, r7, #1
 8016e86:	429f      	cmp	r7, r3
 8016e88:	4655      	mov	r5, sl
 8016e8a:	f000 82ba 	beq.w	8017402 <_dtoa_r+0xc62>
 8016e8e:	4659      	mov	r1, fp
 8016e90:	220a      	movs	r2, #10
 8016e92:	2300      	movs	r3, #0
 8016e94:	4620      	mov	r0, r4
 8016e96:	f001 fb7d 	bl	8018594 <__multadd>
 8016e9a:	454e      	cmp	r6, r9
 8016e9c:	4683      	mov	fp, r0
 8016e9e:	4631      	mov	r1, r6
 8016ea0:	4620      	mov	r0, r4
 8016ea2:	f04f 020a 	mov.w	r2, #10
 8016ea6:	f04f 0300 	mov.w	r3, #0
 8016eaa:	f000 8174 	beq.w	8017196 <_dtoa_r+0x9f6>
 8016eae:	f001 fb71 	bl	8018594 <__multadd>
 8016eb2:	4649      	mov	r1, r9
 8016eb4:	4606      	mov	r6, r0
 8016eb6:	220a      	movs	r2, #10
 8016eb8:	4620      	mov	r0, r4
 8016eba:	2300      	movs	r3, #0
 8016ebc:	f001 fb6a 	bl	8018594 <__multadd>
 8016ec0:	4657      	mov	r7, sl
 8016ec2:	4681      	mov	r9, r0
 8016ec4:	e79f      	b.n	8016e06 <_dtoa_r+0x666>
 8016ec6:	2301      	movs	r3, #1
 8016ec8:	9309      	str	r3, [sp, #36]	; 0x24
 8016eca:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8016ecc:	2b00      	cmp	r3, #0
 8016ece:	f340 8213 	ble.w	80172f8 <_dtoa_r+0xb58>
 8016ed2:	461f      	mov	r7, r3
 8016ed4:	461e      	mov	r6, r3
 8016ed6:	930c      	str	r3, [sp, #48]	; 0x30
 8016ed8:	9306      	str	r3, [sp, #24]
 8016eda:	2100      	movs	r1, #0
 8016edc:	2f17      	cmp	r7, #23
 8016ede:	6461      	str	r1, [r4, #68]	; 0x44
 8016ee0:	d90a      	bls.n	8016ef8 <_dtoa_r+0x758>
 8016ee2:	2201      	movs	r2, #1
 8016ee4:	2304      	movs	r3, #4
 8016ee6:	005b      	lsls	r3, r3, #1
 8016ee8:	f103 0014 	add.w	r0, r3, #20
 8016eec:	4287      	cmp	r7, r0
 8016eee:	4611      	mov	r1, r2
 8016ef0:	f102 0201 	add.w	r2, r2, #1
 8016ef4:	d2f7      	bcs.n	8016ee6 <_dtoa_r+0x746>
 8016ef6:	6461      	str	r1, [r4, #68]	; 0x44
 8016ef8:	4620      	mov	r0, r4
 8016efa:	f001 fb1b 	bl	8018534 <_Balloc>
 8016efe:	2e0e      	cmp	r6, #14
 8016f00:	9007      	str	r0, [sp, #28]
 8016f02:	6420      	str	r0, [r4, #64]	; 0x40
 8016f04:	f63f ad5c 	bhi.w	80169c0 <_dtoa_r+0x220>
 8016f08:	2d00      	cmp	r5, #0
 8016f0a:	f43f ad59 	beq.w	80169c0 <_dtoa_r+0x220>
 8016f0e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8016f12:	9904      	ldr	r1, [sp, #16]
 8016f14:	2900      	cmp	r1, #0
 8016f16:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 8016f1a:	f340 8221 	ble.w	8017360 <_dtoa_r+0xbc0>
 8016f1e:	4bb7      	ldr	r3, [pc, #732]	; (80171fc <_dtoa_r+0xa5c>)
 8016f20:	f001 020f 	and.w	r2, r1, #15
 8016f24:	110d      	asrs	r5, r1, #4
 8016f26:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8016f2a:	06e9      	lsls	r1, r5, #27
 8016f2c:	e9d3 6700 	ldrd	r6, r7, [r3]
 8016f30:	f140 81db 	bpl.w	80172ea <_dtoa_r+0xb4a>
 8016f34:	4bb2      	ldr	r3, [pc, #712]	; (8017200 <_dtoa_r+0xa60>)
 8016f36:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8016f3a:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8016f3e:	f7e9 fc9f 	bl	8000880 <__aeabi_ddiv>
 8016f42:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8016f46:	f005 050f 	and.w	r5, r5, #15
 8016f4a:	f04f 0803 	mov.w	r8, #3
 8016f4e:	b18d      	cbz	r5, 8016f74 <_dtoa_r+0x7d4>
 8016f50:	f8df 92ac 	ldr.w	r9, [pc, #684]	; 8017200 <_dtoa_r+0xa60>
 8016f54:	4630      	mov	r0, r6
 8016f56:	4639      	mov	r1, r7
 8016f58:	07ea      	lsls	r2, r5, #31
 8016f5a:	d505      	bpl.n	8016f68 <_dtoa_r+0x7c8>
 8016f5c:	e9d9 2300 	ldrd	r2, r3, [r9]
 8016f60:	f108 0801 	add.w	r8, r8, #1
 8016f64:	f7e9 fb62 	bl	800062c <__aeabi_dmul>
 8016f68:	106d      	asrs	r5, r5, #1
 8016f6a:	f109 0908 	add.w	r9, r9, #8
 8016f6e:	d1f3      	bne.n	8016f58 <_dtoa_r+0x7b8>
 8016f70:	4606      	mov	r6, r0
 8016f72:	460f      	mov	r7, r1
 8016f74:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8016f78:	4632      	mov	r2, r6
 8016f7a:	463b      	mov	r3, r7
 8016f7c:	f7e9 fc80 	bl	8000880 <__aeabi_ddiv>
 8016f80:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8016f84:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016f86:	b143      	cbz	r3, 8016f9a <_dtoa_r+0x7fa>
 8016f88:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8016f8c:	2200      	movs	r2, #0
 8016f8e:	4b9d      	ldr	r3, [pc, #628]	; (8017204 <_dtoa_r+0xa64>)
 8016f90:	f7e9 fdbe 	bl	8000b10 <__aeabi_dcmplt>
 8016f94:	2800      	cmp	r0, #0
 8016f96:	f040 82ac 	bne.w	80174f2 <_dtoa_r+0xd52>
 8016f9a:	4640      	mov	r0, r8
 8016f9c:	f7e9 fae0 	bl	8000560 <__aeabi_i2d>
 8016fa0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8016fa4:	f7e9 fb42 	bl	800062c <__aeabi_dmul>
 8016fa8:	4b97      	ldr	r3, [pc, #604]	; (8017208 <_dtoa_r+0xa68>)
 8016faa:	2200      	movs	r2, #0
 8016fac:	f7e9 f98c 	bl	80002c8 <__adddf3>
 8016fb0:	9b06      	ldr	r3, [sp, #24]
 8016fb2:	4606      	mov	r6, r0
 8016fb4:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
 8016fb8:	2b00      	cmp	r3, #0
 8016fba:	f000 8162 	beq.w	8017282 <_dtoa_r+0xae2>
 8016fbe:	9b04      	ldr	r3, [sp, #16]
 8016fc0:	f8dd 9018 	ldr.w	r9, [sp, #24]
 8016fc4:	9312      	str	r3, [sp, #72]	; 0x48
 8016fc6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016fc8:	2b00      	cmp	r3, #0
 8016fca:	f000 8221 	beq.w	8017410 <_dtoa_r+0xc70>
 8016fce:	4b8b      	ldr	r3, [pc, #556]	; (80171fc <_dtoa_r+0xa5c>)
 8016fd0:	498e      	ldr	r1, [pc, #568]	; (801720c <_dtoa_r+0xa6c>)
 8016fd2:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
 8016fd6:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8016fda:	2000      	movs	r0, #0
 8016fdc:	f7e9 fc50 	bl	8000880 <__aeabi_ddiv>
 8016fe0:	4632      	mov	r2, r6
 8016fe2:	463b      	mov	r3, r7
 8016fe4:	f7e9 f96e 	bl	80002c4 <__aeabi_dsub>
 8016fe8:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8016fec:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8016ff0:	4639      	mov	r1, r7
 8016ff2:	4630      	mov	r0, r6
 8016ff4:	f7e9 fdb4 	bl	8000b60 <__aeabi_d2iz>
 8016ff8:	4605      	mov	r5, r0
 8016ffa:	f7e9 fab1 	bl	8000560 <__aeabi_i2d>
 8016ffe:	3530      	adds	r5, #48	; 0x30
 8017000:	4602      	mov	r2, r0
 8017002:	460b      	mov	r3, r1
 8017004:	4630      	mov	r0, r6
 8017006:	4639      	mov	r1, r7
 8017008:	f7e9 f95c 	bl	80002c4 <__aeabi_dsub>
 801700c:	fa5f f885 	uxtb.w	r8, r5
 8017010:	9d07      	ldr	r5, [sp, #28]
 8017012:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8017016:	f885 8000 	strb.w	r8, [r5]
 801701a:	4606      	mov	r6, r0
 801701c:	460f      	mov	r7, r1
 801701e:	3501      	adds	r5, #1
 8017020:	f7e9 fd76 	bl	8000b10 <__aeabi_dcmplt>
 8017024:	2800      	cmp	r0, #0
 8017026:	f040 82b2 	bne.w	801758e <_dtoa_r+0xdee>
 801702a:	4632      	mov	r2, r6
 801702c:	463b      	mov	r3, r7
 801702e:	2000      	movs	r0, #0
 8017030:	4974      	ldr	r1, [pc, #464]	; (8017204 <_dtoa_r+0xa64>)
 8017032:	f7e9 f947 	bl	80002c4 <__aeabi_dsub>
 8017036:	4602      	mov	r2, r0
 8017038:	460b      	mov	r3, r1
 801703a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 801703e:	f7e9 fd85 	bl	8000b4c <__aeabi_dcmpgt>
 8017042:	2800      	cmp	r0, #0
 8017044:	f040 82ac 	bne.w	80175a0 <_dtoa_r+0xe00>
 8017048:	f1b9 0f01 	cmp.w	r9, #1
 801704c:	f340 8138 	ble.w	80172c0 <_dtoa_r+0xb20>
 8017050:	9b07      	ldr	r3, [sp, #28]
 8017052:	f8cd a04c 	str.w	sl, [sp, #76]	; 0x4c
 8017056:	f8cd b008 	str.w	fp, [sp, #8]
 801705a:	4499      	add	r9, r3
 801705c:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
 8017060:	46a0      	mov	r8, r4
 8017062:	e00d      	b.n	8017080 <_dtoa_r+0x8e0>
 8017064:	2000      	movs	r0, #0
 8017066:	4967      	ldr	r1, [pc, #412]	; (8017204 <_dtoa_r+0xa64>)
 8017068:	f7e9 f92c 	bl	80002c4 <__aeabi_dsub>
 801706c:	4652      	mov	r2, sl
 801706e:	465b      	mov	r3, fp
 8017070:	f7e9 fd4e 	bl	8000b10 <__aeabi_dcmplt>
 8017074:	2800      	cmp	r0, #0
 8017076:	f040 828e 	bne.w	8017596 <_dtoa_r+0xdf6>
 801707a:	454d      	cmp	r5, r9
 801707c:	f000 811b 	beq.w	80172b6 <_dtoa_r+0xb16>
 8017080:	4650      	mov	r0, sl
 8017082:	4659      	mov	r1, fp
 8017084:	2200      	movs	r2, #0
 8017086:	4b62      	ldr	r3, [pc, #392]	; (8017210 <_dtoa_r+0xa70>)
 8017088:	f7e9 fad0 	bl	800062c <__aeabi_dmul>
 801708c:	2200      	movs	r2, #0
 801708e:	4b60      	ldr	r3, [pc, #384]	; (8017210 <_dtoa_r+0xa70>)
 8017090:	4682      	mov	sl, r0
 8017092:	468b      	mov	fp, r1
 8017094:	4630      	mov	r0, r6
 8017096:	4639      	mov	r1, r7
 8017098:	f7e9 fac8 	bl	800062c <__aeabi_dmul>
 801709c:	460f      	mov	r7, r1
 801709e:	4606      	mov	r6, r0
 80170a0:	f7e9 fd5e 	bl	8000b60 <__aeabi_d2iz>
 80170a4:	4604      	mov	r4, r0
 80170a6:	f7e9 fa5b 	bl	8000560 <__aeabi_i2d>
 80170aa:	4602      	mov	r2, r0
 80170ac:	460b      	mov	r3, r1
 80170ae:	4630      	mov	r0, r6
 80170b0:	4639      	mov	r1, r7
 80170b2:	f7e9 f907 	bl	80002c4 <__aeabi_dsub>
 80170b6:	3430      	adds	r4, #48	; 0x30
 80170b8:	b2e4      	uxtb	r4, r4
 80170ba:	4652      	mov	r2, sl
 80170bc:	465b      	mov	r3, fp
 80170be:	f805 4b01 	strb.w	r4, [r5], #1
 80170c2:	4606      	mov	r6, r0
 80170c4:	460f      	mov	r7, r1
 80170c6:	f7e9 fd23 	bl	8000b10 <__aeabi_dcmplt>
 80170ca:	4632      	mov	r2, r6
 80170cc:	463b      	mov	r3, r7
 80170ce:	2800      	cmp	r0, #0
 80170d0:	d0c8      	beq.n	8017064 <_dtoa_r+0x8c4>
 80170d2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80170d4:	f8dd b008 	ldr.w	fp, [sp, #8]
 80170d8:	9304      	str	r3, [sp, #16]
 80170da:	4644      	mov	r4, r8
 80170dc:	e533      	b.n	8016b46 <_dtoa_r+0x3a6>
 80170de:	2300      	movs	r3, #0
 80170e0:	9309      	str	r3, [sp, #36]	; 0x24
 80170e2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80170e4:	9a04      	ldr	r2, [sp, #16]
 80170e6:	4413      	add	r3, r2
 80170e8:	930c      	str	r3, [sp, #48]	; 0x30
 80170ea:	3301      	adds	r3, #1
 80170ec:	2b00      	cmp	r3, #0
 80170ee:	9306      	str	r3, [sp, #24]
 80170f0:	f340 8109 	ble.w	8017306 <_dtoa_r+0xb66>
 80170f4:	9e06      	ldr	r6, [sp, #24]
 80170f6:	4637      	mov	r7, r6
 80170f8:	e6ef      	b.n	8016eda <_dtoa_r+0x73a>
 80170fa:	2300      	movs	r3, #0
 80170fc:	9309      	str	r3, [sp, #36]	; 0x24
 80170fe:	e6e4      	b.n	8016eca <_dtoa_r+0x72a>
 8017100:	9b06      	ldr	r3, [sp, #24]
 8017102:	2b00      	cmp	r3, #0
 8017104:	f73f ac6d 	bgt.w	80169e2 <_dtoa_r+0x242>
 8017108:	f040 8262 	bne.w	80175d0 <_dtoa_r+0xe30>
 801710c:	4640      	mov	r0, r8
 801710e:	2200      	movs	r2, #0
 8017110:	4b40      	ldr	r3, [pc, #256]	; (8017214 <_dtoa_r+0xa74>)
 8017112:	4649      	mov	r1, r9
 8017114:	f7e9 fa8a 	bl	800062c <__aeabi_dmul>
 8017118:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801711c:	f7e9 fd0c 	bl	8000b38 <__aeabi_dcmpge>
 8017120:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8017124:	4646      	mov	r6, r8
 8017126:	2800      	cmp	r0, #0
 8017128:	f000 808a 	beq.w	8017240 <_dtoa_r+0xaa0>
 801712c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801712e:	9d07      	ldr	r5, [sp, #28]
 8017130:	43db      	mvns	r3, r3
 8017132:	9304      	str	r3, [sp, #16]
 8017134:	4641      	mov	r1, r8
 8017136:	4620      	mov	r0, r4
 8017138:	f001 fa22 	bl	8018580 <_Bfree>
 801713c:	2e00      	cmp	r6, #0
 801713e:	f47f ae2c 	bne.w	8016d9a <_dtoa_r+0x5fa>
 8017142:	e500      	b.n	8016b46 <_dtoa_r+0x3a6>
 8017144:	4659      	mov	r1, fp
 8017146:	4620      	mov	r0, r4
 8017148:	f001 fb58 	bl	80187fc <__pow5mult>
 801714c:	4683      	mov	fp, r0
 801714e:	e557      	b.n	8016c00 <_dtoa_r+0x460>
 8017150:	9b02      	ldr	r3, [sp, #8]
 8017152:	2b00      	cmp	r3, #0
 8017154:	f47f ad66 	bne.w	8016c24 <_dtoa_r+0x484>
 8017158:	9b03      	ldr	r3, [sp, #12]
 801715a:	f3c3 0313 	ubfx	r3, r3, #0, #20
 801715e:	2b00      	cmp	r3, #0
 8017160:	f47f ad94 	bne.w	8016c8c <_dtoa_r+0x4ec>
 8017164:	9b03      	ldr	r3, [sp, #12]
 8017166:	f023 4700 	bic.w	r7, r3, #2147483648	; 0x80000000
 801716a:	0d3f      	lsrs	r7, r7, #20
 801716c:	053f      	lsls	r7, r7, #20
 801716e:	2f00      	cmp	r7, #0
 8017170:	f000 821a 	beq.w	80175a8 <_dtoa_r+0xe08>
 8017174:	9b05      	ldr	r3, [sp, #20]
 8017176:	3301      	adds	r3, #1
 8017178:	9305      	str	r3, [sp, #20]
 801717a:	f10a 0a01 	add.w	sl, sl, #1
 801717e:	f04f 0901 	mov.w	r9, #1
 8017182:	e585      	b.n	8016c90 <_dtoa_r+0x4f0>
 8017184:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017186:	2a00      	cmp	r2, #0
 8017188:	f000 81a5 	beq.w	80174d6 <_dtoa_r+0xd36>
 801718c:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8017190:	9f08      	ldr	r7, [sp, #32]
 8017192:	9d05      	ldr	r5, [sp, #20]
 8017194:	e4ff      	b.n	8016b96 <_dtoa_r+0x3f6>
 8017196:	f001 f9fd 	bl	8018594 <__multadd>
 801719a:	4657      	mov	r7, sl
 801719c:	4606      	mov	r6, r0
 801719e:	4681      	mov	r9, r0
 80171a0:	e631      	b.n	8016e06 <_dtoa_r+0x666>
 80171a2:	4601      	mov	r1, r0
 80171a4:	4620      	mov	r0, r4
 80171a6:	f8cd c008 	str.w	ip, [sp, #8]
 80171aa:	f001 f9e9 	bl	8018580 <_Bfree>
 80171ae:	2201      	movs	r2, #1
 80171b0:	f8dd c008 	ldr.w	ip, [sp, #8]
 80171b4:	e654      	b.n	8016e60 <_dtoa_r+0x6c0>
 80171b6:	4658      	mov	r0, fp
 80171b8:	4641      	mov	r1, r8
 80171ba:	f001 fbc5 	bl	8018948 <__mcmp>
 80171be:	2800      	cmp	r0, #0
 80171c0:	f6bf ad91 	bge.w	8016ce6 <_dtoa_r+0x546>
 80171c4:	9f04      	ldr	r7, [sp, #16]
 80171c6:	4659      	mov	r1, fp
 80171c8:	2300      	movs	r3, #0
 80171ca:	4620      	mov	r0, r4
 80171cc:	220a      	movs	r2, #10
 80171ce:	3f01      	subs	r7, #1
 80171d0:	9704      	str	r7, [sp, #16]
 80171d2:	f001 f9df 	bl	8018594 <__multadd>
 80171d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80171d8:	4683      	mov	fp, r0
 80171da:	2b00      	cmp	r3, #0
 80171dc:	f47f adf0 	bne.w	8016dc0 <_dtoa_r+0x620>
 80171e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80171e2:	2b00      	cmp	r3, #0
 80171e4:	f340 81f8 	ble.w	80175d8 <_dtoa_r+0xe38>
 80171e8:	9306      	str	r3, [sp, #24]
 80171ea:	e583      	b.n	8016cf4 <_dtoa_r+0x554>
 80171ec:	9807      	ldr	r0, [sp, #28]
 80171ee:	f7ff bb0b 	b.w	8016808 <_dtoa_r+0x68>
 80171f2:	9b02      	ldr	r3, [sp, #8]
 80171f4:	2b00      	cmp	r3, #0
 80171f6:	f47f ad49 	bne.w	8016c8c <_dtoa_r+0x4ec>
 80171fa:	e7ad      	b.n	8017158 <_dtoa_r+0x9b8>
 80171fc:	0802e518 	.word	0x0802e518
 8017200:	0802e5e0 	.word	0x0802e5e0
 8017204:	3ff00000 	.word	0x3ff00000
 8017208:	401c0000 	.word	0x401c0000
 801720c:	3fe00000 	.word	0x3fe00000
 8017210:	40240000 	.word	0x40240000
 8017214:	40140000 	.word	0x40140000
 8017218:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801721a:	2b02      	cmp	r3, #2
 801721c:	f77f ad67 	ble.w	8016cee <_dtoa_r+0x54e>
 8017220:	9b06      	ldr	r3, [sp, #24]
 8017222:	2b00      	cmp	r3, #0
 8017224:	d182      	bne.n	801712c <_dtoa_r+0x98c>
 8017226:	4641      	mov	r1, r8
 8017228:	2205      	movs	r2, #5
 801722a:	4620      	mov	r0, r4
 801722c:	f001 f9b2 	bl	8018594 <__multadd>
 8017230:	4680      	mov	r8, r0
 8017232:	4641      	mov	r1, r8
 8017234:	4658      	mov	r0, fp
 8017236:	f001 fb87 	bl	8018948 <__mcmp>
 801723a:	2800      	cmp	r0, #0
 801723c:	f77f af76 	ble.w	801712c <_dtoa_r+0x98c>
 8017240:	9a04      	ldr	r2, [sp, #16]
 8017242:	9907      	ldr	r1, [sp, #28]
 8017244:	2331      	movs	r3, #49	; 0x31
 8017246:	3201      	adds	r2, #1
 8017248:	9204      	str	r2, [sp, #16]
 801724a:	700b      	strb	r3, [r1, #0]
 801724c:	1c4d      	adds	r5, r1, #1
 801724e:	e771      	b.n	8017134 <_dtoa_r+0x994>
 8017250:	9a04      	ldr	r2, [sp, #16]
 8017252:	3201      	adds	r2, #1
 8017254:	9204      	str	r2, [sp, #16]
 8017256:	9a07      	ldr	r2, [sp, #28]
 8017258:	2331      	movs	r3, #49	; 0x31
 801725a:	7013      	strb	r3, [r2, #0]
 801725c:	e58d      	b.n	8016d7a <_dtoa_r+0x5da>
 801725e:	f8dd b008 	ldr.w	fp, [sp, #8]
 8017262:	9c05      	ldr	r4, [sp, #20]
 8017264:	e46f      	b.n	8016b46 <_dtoa_r+0x3a6>
 8017266:	4640      	mov	r0, r8
 8017268:	f7e9 f97a 	bl	8000560 <__aeabi_i2d>
 801726c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8017270:	f7e9 f9dc 	bl	800062c <__aeabi_dmul>
 8017274:	2200      	movs	r2, #0
 8017276:	4bbc      	ldr	r3, [pc, #752]	; (8017568 <_dtoa_r+0xdc8>)
 8017278:	f7e9 f826 	bl	80002c8 <__adddf3>
 801727c:	4606      	mov	r6, r0
 801727e:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
 8017282:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8017286:	2200      	movs	r2, #0
 8017288:	4bb8      	ldr	r3, [pc, #736]	; (801756c <_dtoa_r+0xdcc>)
 801728a:	f7e9 f81b 	bl	80002c4 <__aeabi_dsub>
 801728e:	4632      	mov	r2, r6
 8017290:	463b      	mov	r3, r7
 8017292:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8017296:	f7e9 fc59 	bl	8000b4c <__aeabi_dcmpgt>
 801729a:	4680      	mov	r8, r0
 801729c:	2800      	cmp	r0, #0
 801729e:	f040 80b3 	bne.w	8017408 <_dtoa_r+0xc68>
 80172a2:	4632      	mov	r2, r6
 80172a4:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
 80172a8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80172ac:	f7e9 fc30 	bl	8000b10 <__aeabi_dcmplt>
 80172b0:	b130      	cbz	r0, 80172c0 <_dtoa_r+0xb20>
 80172b2:	4646      	mov	r6, r8
 80172b4:	e73a      	b.n	801712c <_dtoa_r+0x98c>
 80172b6:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 80172ba:	f8dd b008 	ldr.w	fp, [sp, #8]
 80172be:	4644      	mov	r4, r8
 80172c0:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 80172c4:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80172c8:	f7ff bb7a 	b.w	80169c0 <_dtoa_r+0x220>
 80172cc:	4659      	mov	r1, fp
 80172ce:	9a08      	ldr	r2, [sp, #32]
 80172d0:	4620      	mov	r0, r4
 80172d2:	f001 fa93 	bl	80187fc <__pow5mult>
 80172d6:	4683      	mov	fp, r0
 80172d8:	e492      	b.n	8016c00 <_dtoa_r+0x460>
 80172da:	9b08      	ldr	r3, [sp, #32]
 80172dc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80172de:	9708      	str	r7, [sp, #32]
 80172e0:	1afb      	subs	r3, r7, r3
 80172e2:	441a      	add	r2, r3
 80172e4:	920a      	str	r2, [sp, #40]	; 0x28
 80172e6:	2700      	movs	r7, #0
 80172e8:	e44f      	b.n	8016b8a <_dtoa_r+0x3ea>
 80172ea:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 80172ee:	f04f 0802 	mov.w	r8, #2
 80172f2:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80172f6:	e62a      	b.n	8016f4e <_dtoa_r+0x7ae>
 80172f8:	2601      	movs	r6, #1
 80172fa:	9621      	str	r6, [sp, #132]	; 0x84
 80172fc:	960c      	str	r6, [sp, #48]	; 0x30
 80172fe:	9606      	str	r6, [sp, #24]
 8017300:	2100      	movs	r1, #0
 8017302:	6461      	str	r1, [r4, #68]	; 0x44
 8017304:	e5f8      	b.n	8016ef8 <_dtoa_r+0x758>
 8017306:	461e      	mov	r6, r3
 8017308:	e7fa      	b.n	8017300 <_dtoa_r+0xb60>
 801730a:	2a00      	cmp	r2, #0
 801730c:	dd15      	ble.n	801733a <_dtoa_r+0xb9a>
 801730e:	4659      	mov	r1, fp
 8017310:	2201      	movs	r2, #1
 8017312:	4620      	mov	r0, r4
 8017314:	f8cd c008 	str.w	ip, [sp, #8]
 8017318:	f001 fac0 	bl	801889c <__lshift>
 801731c:	4641      	mov	r1, r8
 801731e:	4683      	mov	fp, r0
 8017320:	f001 fb12 	bl	8018948 <__mcmp>
 8017324:	2800      	cmp	r0, #0
 8017326:	f8dd c008 	ldr.w	ip, [sp, #8]
 801732a:	f340 814a 	ble.w	80175c2 <_dtoa_r+0xe22>
 801732e:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
 8017332:	f000 8106 	beq.w	8017542 <_dtoa_r+0xda2>
 8017336:	f10c 0c01 	add.w	ip, ip, #1
 801733a:	46b2      	mov	sl, r6
 801733c:	f887 c000 	strb.w	ip, [r7]
 8017340:	1c7d      	adds	r5, r7, #1
 8017342:	464e      	mov	r6, r9
 8017344:	e519      	b.n	8016d7a <_dtoa_r+0x5da>
 8017346:	d104      	bne.n	8017352 <_dtoa_r+0xbb2>
 8017348:	f01c 0f01 	tst.w	ip, #1
 801734c:	d001      	beq.n	8017352 <_dtoa_r+0xbb2>
 801734e:	e504      	b.n	8016d5a <_dtoa_r+0x5ba>
 8017350:	4615      	mov	r5, r2
 8017352:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8017356:	2b30      	cmp	r3, #48	; 0x30
 8017358:	f105 32ff 	add.w	r2, r5, #4294967295
 801735c:	d0f8      	beq.n	8017350 <_dtoa_r+0xbb0>
 801735e:	e50c      	b.n	8016d7a <_dtoa_r+0x5da>
 8017360:	9b04      	ldr	r3, [sp, #16]
 8017362:	425d      	negs	r5, r3
 8017364:	2d00      	cmp	r5, #0
 8017366:	f000 80bd 	beq.w	80174e4 <_dtoa_r+0xd44>
 801736a:	4b81      	ldr	r3, [pc, #516]	; (8017570 <_dtoa_r+0xdd0>)
 801736c:	f005 020f 	and.w	r2, r5, #15
 8017370:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8017374:	e9d3 2300 	ldrd	r2, r3, [r3]
 8017378:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 801737c:	f7e9 f956 	bl	800062c <__aeabi_dmul>
 8017380:	112d      	asrs	r5, r5, #4
 8017382:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8017386:	f000 812c 	beq.w	80175e2 <_dtoa_r+0xe42>
 801738a:	4e7a      	ldr	r6, [pc, #488]	; (8017574 <_dtoa_r+0xdd4>)
 801738c:	f04f 0802 	mov.w	r8, #2
 8017390:	07eb      	lsls	r3, r5, #31
 8017392:	d505      	bpl.n	80173a0 <_dtoa_r+0xc00>
 8017394:	e9d6 2300 	ldrd	r2, r3, [r6]
 8017398:	f108 0801 	add.w	r8, r8, #1
 801739c:	f7e9 f946 	bl	800062c <__aeabi_dmul>
 80173a0:	106d      	asrs	r5, r5, #1
 80173a2:	f106 0608 	add.w	r6, r6, #8
 80173a6:	d1f3      	bne.n	8017390 <_dtoa_r+0xbf0>
 80173a8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80173ac:	e5ea      	b.n	8016f84 <_dtoa_r+0x7e4>
 80173ae:	9a04      	ldr	r2, [sp, #16]
 80173b0:	3201      	adds	r2, #1
 80173b2:	9204      	str	r2, [sp, #16]
 80173b4:	9a07      	ldr	r2, [sp, #28]
 80173b6:	2330      	movs	r3, #48	; 0x30
 80173b8:	7013      	strb	r3, [r2, #0]
 80173ba:	2331      	movs	r3, #49	; 0x31
 80173bc:	7013      	strb	r3, [r2, #0]
 80173be:	f7ff bbc2 	b.w	8016b46 <_dtoa_r+0x3a6>
 80173c2:	6871      	ldr	r1, [r6, #4]
 80173c4:	4620      	mov	r0, r4
 80173c6:	f001 f8b5 	bl	8018534 <_Balloc>
 80173ca:	6933      	ldr	r3, [r6, #16]
 80173cc:	1c9a      	adds	r2, r3, #2
 80173ce:	4605      	mov	r5, r0
 80173d0:	0092      	lsls	r2, r2, #2
 80173d2:	f106 010c 	add.w	r1, r6, #12
 80173d6:	300c      	adds	r0, #12
 80173d8:	f7e8 fed6 	bl	8000188 <memcpy>
 80173dc:	4620      	mov	r0, r4
 80173de:	4629      	mov	r1, r5
 80173e0:	2201      	movs	r2, #1
 80173e2:	f001 fa5b 	bl	801889c <__lshift>
 80173e6:	4681      	mov	r9, r0
 80173e8:	e503      	b.n	8016df2 <_dtoa_r+0x652>
 80173ea:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
 80173ee:	f000 80a8 	beq.w	8017542 <_dtoa_r+0xda2>
 80173f2:	f10c 0c01 	add.w	ip, ip, #1
 80173f6:	46b2      	mov	sl, r6
 80173f8:	f887 c000 	strb.w	ip, [r7]
 80173fc:	1c7d      	adds	r5, r7, #1
 80173fe:	464e      	mov	r6, r9
 8017400:	e4bb      	b.n	8016d7a <_dtoa_r+0x5da>
 8017402:	46b2      	mov	sl, r6
 8017404:	464e      	mov	r6, r9
 8017406:	e498      	b.n	8016d3a <_dtoa_r+0x59a>
 8017408:	f04f 0800 	mov.w	r8, #0
 801740c:	4646      	mov	r6, r8
 801740e:	e717      	b.n	8017240 <_dtoa_r+0xaa0>
 8017410:	4957      	ldr	r1, [pc, #348]	; (8017570 <_dtoa_r+0xdd0>)
 8017412:	f109 33ff 	add.w	r3, r9, #4294967295
 8017416:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 801741a:	4632      	mov	r2, r6
 801741c:	9313      	str	r3, [sp, #76]	; 0x4c
 801741e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8017422:	463b      	mov	r3, r7
 8017424:	f7e9 f902 	bl	800062c <__aeabi_dmul>
 8017428:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 801742c:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8017430:	4639      	mov	r1, r7
 8017432:	4630      	mov	r0, r6
 8017434:	f7e9 fb94 	bl	8000b60 <__aeabi_d2iz>
 8017438:	4605      	mov	r5, r0
 801743a:	f7e9 f891 	bl	8000560 <__aeabi_i2d>
 801743e:	4602      	mov	r2, r0
 8017440:	460b      	mov	r3, r1
 8017442:	4630      	mov	r0, r6
 8017444:	4639      	mov	r1, r7
 8017446:	f7e8 ff3d 	bl	80002c4 <__aeabi_dsub>
 801744a:	9a07      	ldr	r2, [sp, #28]
 801744c:	3530      	adds	r5, #48	; 0x30
 801744e:	f1b9 0f01 	cmp.w	r9, #1
 8017452:	7015      	strb	r5, [r2, #0]
 8017454:	4606      	mov	r6, r0
 8017456:	460f      	mov	r7, r1
 8017458:	f102 0501 	add.w	r5, r2, #1
 801745c:	d023      	beq.n	80174a6 <_dtoa_r+0xd06>
 801745e:	9b07      	ldr	r3, [sp, #28]
 8017460:	f8cd a008 	str.w	sl, [sp, #8]
 8017464:	444b      	add	r3, r9
 8017466:	465e      	mov	r6, fp
 8017468:	469a      	mov	sl, r3
 801746a:	46ab      	mov	fp, r5
 801746c:	2200      	movs	r2, #0
 801746e:	4b42      	ldr	r3, [pc, #264]	; (8017578 <_dtoa_r+0xdd8>)
 8017470:	f7e9 f8dc 	bl	800062c <__aeabi_dmul>
 8017474:	4689      	mov	r9, r1
 8017476:	4680      	mov	r8, r0
 8017478:	f7e9 fb72 	bl	8000b60 <__aeabi_d2iz>
 801747c:	4607      	mov	r7, r0
 801747e:	f7e9 f86f 	bl	8000560 <__aeabi_i2d>
 8017482:	3730      	adds	r7, #48	; 0x30
 8017484:	4602      	mov	r2, r0
 8017486:	460b      	mov	r3, r1
 8017488:	4640      	mov	r0, r8
 801748a:	4649      	mov	r1, r9
 801748c:	f7e8 ff1a 	bl	80002c4 <__aeabi_dsub>
 8017490:	f80b 7b01 	strb.w	r7, [fp], #1
 8017494:	45d3      	cmp	fp, sl
 8017496:	d1e9      	bne.n	801746c <_dtoa_r+0xccc>
 8017498:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801749a:	f8dd a008 	ldr.w	sl, [sp, #8]
 801749e:	46b3      	mov	fp, r6
 80174a0:	460f      	mov	r7, r1
 80174a2:	4606      	mov	r6, r0
 80174a4:	441d      	add	r5, r3
 80174a6:	2200      	movs	r2, #0
 80174a8:	4b34      	ldr	r3, [pc, #208]	; (801757c <_dtoa_r+0xddc>)
 80174aa:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80174ae:	f7e8 ff0b 	bl	80002c8 <__adddf3>
 80174b2:	4632      	mov	r2, r6
 80174b4:	463b      	mov	r3, r7
 80174b6:	f7e9 fb2b 	bl	8000b10 <__aeabi_dcmplt>
 80174ba:	2800      	cmp	r0, #0
 80174bc:	d047      	beq.n	801754e <_dtoa_r+0xdae>
 80174be:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80174c0:	9304      	str	r3, [sp, #16]
 80174c2:	f815 8c01 	ldrb.w	r8, [r5, #-1]
 80174c6:	f7ff bb2c 	b.w	8016b22 <_dtoa_r+0x382>
 80174ca:	9b05      	ldr	r3, [sp, #20]
 80174cc:	9a06      	ldr	r2, [sp, #24]
 80174ce:	1a9d      	subs	r5, r3, r2
 80174d0:	2300      	movs	r3, #0
 80174d2:	f7ff bb60 	b.w	8016b96 <_dtoa_r+0x3f6>
 80174d6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80174d8:	9f08      	ldr	r7, [sp, #32]
 80174da:	9d05      	ldr	r5, [sp, #20]
 80174dc:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 80174e0:	f7ff bb59 	b.w	8016b96 <_dtoa_r+0x3f6>
 80174e4:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 80174e8:	f04f 0802 	mov.w	r8, #2
 80174ec:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80174f0:	e548      	b.n	8016f84 <_dtoa_r+0x7e4>
 80174f2:	9b06      	ldr	r3, [sp, #24]
 80174f4:	2b00      	cmp	r3, #0
 80174f6:	f43f aeb6 	beq.w	8017266 <_dtoa_r+0xac6>
 80174fa:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80174fc:	2d00      	cmp	r5, #0
 80174fe:	f77f aedf 	ble.w	80172c0 <_dtoa_r+0xb20>
 8017502:	2200      	movs	r2, #0
 8017504:	4b1c      	ldr	r3, [pc, #112]	; (8017578 <_dtoa_r+0xdd8>)
 8017506:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801750a:	f7e9 f88f 	bl	800062c <__aeabi_dmul>
 801750e:	4606      	mov	r6, r0
 8017510:	460f      	mov	r7, r1
 8017512:	f108 0001 	add.w	r0, r8, #1
 8017516:	e9cd 6702 	strd	r6, r7, [sp, #8]
 801751a:	f7e9 f821 	bl	8000560 <__aeabi_i2d>
 801751e:	4602      	mov	r2, r0
 8017520:	460b      	mov	r3, r1
 8017522:	4630      	mov	r0, r6
 8017524:	4639      	mov	r1, r7
 8017526:	f7e9 f881 	bl	800062c <__aeabi_dmul>
 801752a:	4b0f      	ldr	r3, [pc, #60]	; (8017568 <_dtoa_r+0xdc8>)
 801752c:	2200      	movs	r2, #0
 801752e:	f7e8 fecb 	bl	80002c8 <__adddf3>
 8017532:	9b04      	ldr	r3, [sp, #16]
 8017534:	3b01      	subs	r3, #1
 8017536:	4606      	mov	r6, r0
 8017538:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
 801753c:	9312      	str	r3, [sp, #72]	; 0x48
 801753e:	46a9      	mov	r9, r5
 8017540:	e541      	b.n	8016fc6 <_dtoa_r+0x826>
 8017542:	2239      	movs	r2, #57	; 0x39
 8017544:	46b2      	mov	sl, r6
 8017546:	703a      	strb	r2, [r7, #0]
 8017548:	464e      	mov	r6, r9
 801754a:	1c7d      	adds	r5, r7, #1
 801754c:	e407      	b.n	8016d5e <_dtoa_r+0x5be>
 801754e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8017552:	2000      	movs	r0, #0
 8017554:	4909      	ldr	r1, [pc, #36]	; (801757c <_dtoa_r+0xddc>)
 8017556:	f7e8 feb5 	bl	80002c4 <__aeabi_dsub>
 801755a:	4632      	mov	r2, r6
 801755c:	463b      	mov	r3, r7
 801755e:	f7e9 faf5 	bl	8000b4c <__aeabi_dcmpgt>
 8017562:	b970      	cbnz	r0, 8017582 <_dtoa_r+0xde2>
 8017564:	e6ac      	b.n	80172c0 <_dtoa_r+0xb20>
 8017566:	bf00      	nop
 8017568:	401c0000 	.word	0x401c0000
 801756c:	40140000 	.word	0x40140000
 8017570:	0802e518 	.word	0x0802e518
 8017574:	0802e5e0 	.word	0x0802e5e0
 8017578:	40240000 	.word	0x40240000
 801757c:	3fe00000 	.word	0x3fe00000
 8017580:	4615      	mov	r5, r2
 8017582:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8017586:	2b30      	cmp	r3, #48	; 0x30
 8017588:	f105 32ff 	add.w	r2, r5, #4294967295
 801758c:	d0f8      	beq.n	8017580 <_dtoa_r+0xde0>
 801758e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017590:	9304      	str	r3, [sp, #16]
 8017592:	f7ff bad8 	b.w	8016b46 <_dtoa_r+0x3a6>
 8017596:	4643      	mov	r3, r8
 8017598:	f8dd b008 	ldr.w	fp, [sp, #8]
 801759c:	46a0      	mov	r8, r4
 801759e:	461c      	mov	r4, r3
 80175a0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80175a2:	9304      	str	r3, [sp, #16]
 80175a4:	f7ff babd 	b.w	8016b22 <_dtoa_r+0x382>
 80175a8:	46b9      	mov	r9, r7
 80175aa:	f7ff bb71 	b.w	8016c90 <_dtoa_r+0x4f0>
 80175ae:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
 80175b2:	d0c6      	beq.n	8017542 <_dtoa_r+0xda2>
 80175b4:	f1ba 0f00 	cmp.w	sl, #0
 80175b8:	f77f aebf 	ble.w	801733a <_dtoa_r+0xb9a>
 80175bc:	f105 0c31 	add.w	ip, r5, #49	; 0x31
 80175c0:	e6bb      	b.n	801733a <_dtoa_r+0xb9a>
 80175c2:	f47f aeba 	bne.w	801733a <_dtoa_r+0xb9a>
 80175c6:	f01c 0f01 	tst.w	ip, #1
 80175ca:	f43f aeb6 	beq.w	801733a <_dtoa_r+0xb9a>
 80175ce:	e6ae      	b.n	801732e <_dtoa_r+0xb8e>
 80175d0:	f04f 0800 	mov.w	r8, #0
 80175d4:	4646      	mov	r6, r8
 80175d6:	e5a9      	b.n	801712c <_dtoa_r+0x98c>
 80175d8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80175da:	2b02      	cmp	r3, #2
 80175dc:	dc04      	bgt.n	80175e8 <_dtoa_r+0xe48>
 80175de:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80175e0:	e602      	b.n	80171e8 <_dtoa_r+0xa48>
 80175e2:	f04f 0802 	mov.w	r8, #2
 80175e6:	e4cd      	b.n	8016f84 <_dtoa_r+0x7e4>
 80175e8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80175ea:	9306      	str	r3, [sp, #24]
 80175ec:	e618      	b.n	8017220 <_dtoa_r+0xa80>
 80175ee:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80175f0:	2b02      	cmp	r3, #2
 80175f2:	dcf9      	bgt.n	80175e8 <_dtoa_r+0xe48>
 80175f4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80175f6:	f7ff bbee 	b.w	8016dd6 <_dtoa_r+0x636>
 80175fa:	2500      	movs	r5, #0
 80175fc:	6465      	str	r5, [r4, #68]	; 0x44
 80175fe:	4629      	mov	r1, r5
 8017600:	4620      	mov	r0, r4
 8017602:	f000 ff97 	bl	8018534 <_Balloc>
 8017606:	f04f 33ff 	mov.w	r3, #4294967295
 801760a:	9306      	str	r3, [sp, #24]
 801760c:	930c      	str	r3, [sp, #48]	; 0x30
 801760e:	2301      	movs	r3, #1
 8017610:	9007      	str	r0, [sp, #28]
 8017612:	9521      	str	r5, [sp, #132]	; 0x84
 8017614:	6420      	str	r0, [r4, #64]	; 0x40
 8017616:	9309      	str	r3, [sp, #36]	; 0x24
 8017618:	f7ff b9d2 	b.w	80169c0 <_dtoa_r+0x220>
 801761c:	f43f ab4d 	beq.w	8016cba <_dtoa_r+0x51a>
 8017620:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
 8017624:	f7ff bb44 	b.w	8016cb0 <_dtoa_r+0x510>
 8017628:	2301      	movs	r3, #1
 801762a:	9309      	str	r3, [sp, #36]	; 0x24
 801762c:	e559      	b.n	80170e2 <_dtoa_r+0x942>
 801762e:	2501      	movs	r5, #1
 8017630:	f7ff b990 	b.w	8016954 <_dtoa_r+0x1b4>
 8017634:	f3af 8000 	nop.w

08017638 <__sflush_r>:
 8017638:	898b      	ldrh	r3, [r1, #12]
 801763a:	b29a      	uxth	r2, r3
 801763c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017640:	460d      	mov	r5, r1
 8017642:	0711      	lsls	r1, r2, #28
 8017644:	4680      	mov	r8, r0
 8017646:	d43c      	bmi.n	80176c2 <__sflush_r+0x8a>
 8017648:	686a      	ldr	r2, [r5, #4]
 801764a:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 801764e:	2a00      	cmp	r2, #0
 8017650:	81ab      	strh	r3, [r5, #12]
 8017652:	dd65      	ble.n	8017720 <__sflush_r+0xe8>
 8017654:	6aae      	ldr	r6, [r5, #40]	; 0x28
 8017656:	2e00      	cmp	r6, #0
 8017658:	d04b      	beq.n	80176f2 <__sflush_r+0xba>
 801765a:	b29b      	uxth	r3, r3
 801765c:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
 8017660:	2100      	movs	r1, #0
 8017662:	b292      	uxth	r2, r2
 8017664:	f8d8 4000 	ldr.w	r4, [r8]
 8017668:	f8c8 1000 	str.w	r1, [r8]
 801766c:	2a00      	cmp	r2, #0
 801766e:	d05b      	beq.n	8017728 <__sflush_r+0xf0>
 8017670:	6d2a      	ldr	r2, [r5, #80]	; 0x50
 8017672:	075f      	lsls	r7, r3, #29
 8017674:	d505      	bpl.n	8017682 <__sflush_r+0x4a>
 8017676:	6869      	ldr	r1, [r5, #4]
 8017678:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 801767a:	1a52      	subs	r2, r2, r1
 801767c:	b10b      	cbz	r3, 8017682 <__sflush_r+0x4a>
 801767e:	6beb      	ldr	r3, [r5, #60]	; 0x3c
 8017680:	1ad2      	subs	r2, r2, r3
 8017682:	4640      	mov	r0, r8
 8017684:	69e9      	ldr	r1, [r5, #28]
 8017686:	2300      	movs	r3, #0
 8017688:	47b0      	blx	r6
 801768a:	1c46      	adds	r6, r0, #1
 801768c:	d056      	beq.n	801773c <__sflush_r+0x104>
 801768e:	89ab      	ldrh	r3, [r5, #12]
 8017690:	692a      	ldr	r2, [r5, #16]
 8017692:	602a      	str	r2, [r5, #0]
 8017694:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8017698:	b29b      	uxth	r3, r3
 801769a:	2200      	movs	r2, #0
 801769c:	606a      	str	r2, [r5, #4]
 801769e:	04da      	lsls	r2, r3, #19
 80176a0:	81ab      	strh	r3, [r5, #12]
 80176a2:	d43b      	bmi.n	801771c <__sflush_r+0xe4>
 80176a4:	6b29      	ldr	r1, [r5, #48]	; 0x30
 80176a6:	f8c8 4000 	str.w	r4, [r8]
 80176aa:	b311      	cbz	r1, 80176f2 <__sflush_r+0xba>
 80176ac:	f105 0340 	add.w	r3, r5, #64	; 0x40
 80176b0:	4299      	cmp	r1, r3
 80176b2:	d002      	beq.n	80176ba <__sflush_r+0x82>
 80176b4:	4640      	mov	r0, r8
 80176b6:	f000 f955 	bl	8017964 <_free_r>
 80176ba:	2000      	movs	r0, #0
 80176bc:	6328      	str	r0, [r5, #48]	; 0x30
 80176be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80176c2:	692e      	ldr	r6, [r5, #16]
 80176c4:	b1ae      	cbz	r6, 80176f2 <__sflush_r+0xba>
 80176c6:	682c      	ldr	r4, [r5, #0]
 80176c8:	602e      	str	r6, [r5, #0]
 80176ca:	0791      	lsls	r1, r2, #30
 80176cc:	bf0c      	ite	eq
 80176ce:	696b      	ldreq	r3, [r5, #20]
 80176d0:	2300      	movne	r3, #0
 80176d2:	1ba4      	subs	r4, r4, r6
 80176d4:	60ab      	str	r3, [r5, #8]
 80176d6:	e00a      	b.n	80176ee <__sflush_r+0xb6>
 80176d8:	4632      	mov	r2, r6
 80176da:	4623      	mov	r3, r4
 80176dc:	6a6f      	ldr	r7, [r5, #36]	; 0x24
 80176de:	69e9      	ldr	r1, [r5, #28]
 80176e0:	4640      	mov	r0, r8
 80176e2:	47b8      	blx	r7
 80176e4:	2800      	cmp	r0, #0
 80176e6:	eba4 0400 	sub.w	r4, r4, r0
 80176ea:	4406      	add	r6, r0
 80176ec:	dd04      	ble.n	80176f8 <__sflush_r+0xc0>
 80176ee:	2c00      	cmp	r4, #0
 80176f0:	dcf2      	bgt.n	80176d8 <__sflush_r+0xa0>
 80176f2:	2000      	movs	r0, #0
 80176f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80176f8:	89ab      	ldrh	r3, [r5, #12]
 80176fa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80176fe:	81ab      	strh	r3, [r5, #12]
 8017700:	f04f 30ff 	mov.w	r0, #4294967295
 8017704:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017708:	89ab      	ldrh	r3, [r5, #12]
 801770a:	692a      	ldr	r2, [r5, #16]
 801770c:	6069      	str	r1, [r5, #4]
 801770e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8017712:	b29b      	uxth	r3, r3
 8017714:	81ab      	strh	r3, [r5, #12]
 8017716:	04db      	lsls	r3, r3, #19
 8017718:	602a      	str	r2, [r5, #0]
 801771a:	d5c3      	bpl.n	80176a4 <__sflush_r+0x6c>
 801771c:	6528      	str	r0, [r5, #80]	; 0x50
 801771e:	e7c1      	b.n	80176a4 <__sflush_r+0x6c>
 8017720:	6bea      	ldr	r2, [r5, #60]	; 0x3c
 8017722:	2a00      	cmp	r2, #0
 8017724:	dc96      	bgt.n	8017654 <__sflush_r+0x1c>
 8017726:	e7e4      	b.n	80176f2 <__sflush_r+0xba>
 8017728:	2301      	movs	r3, #1
 801772a:	4640      	mov	r0, r8
 801772c:	69e9      	ldr	r1, [r5, #28]
 801772e:	47b0      	blx	r6
 8017730:	1c43      	adds	r3, r0, #1
 8017732:	4602      	mov	r2, r0
 8017734:	d019      	beq.n	801776a <__sflush_r+0x132>
 8017736:	89ab      	ldrh	r3, [r5, #12]
 8017738:	6aae      	ldr	r6, [r5, #40]	; 0x28
 801773a:	e79a      	b.n	8017672 <__sflush_r+0x3a>
 801773c:	f8d8 1000 	ldr.w	r1, [r8]
 8017740:	2900      	cmp	r1, #0
 8017742:	d0e1      	beq.n	8017708 <__sflush_r+0xd0>
 8017744:	291d      	cmp	r1, #29
 8017746:	d007      	beq.n	8017758 <__sflush_r+0x120>
 8017748:	2916      	cmp	r1, #22
 801774a:	d005      	beq.n	8017758 <__sflush_r+0x120>
 801774c:	89ab      	ldrh	r3, [r5, #12]
 801774e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8017752:	81ab      	strh	r3, [r5, #12]
 8017754:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017758:	89ab      	ldrh	r3, [r5, #12]
 801775a:	692a      	ldr	r2, [r5, #16]
 801775c:	602a      	str	r2, [r5, #0]
 801775e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8017762:	2200      	movs	r2, #0
 8017764:	81ab      	strh	r3, [r5, #12]
 8017766:	606a      	str	r2, [r5, #4]
 8017768:	e79c      	b.n	80176a4 <__sflush_r+0x6c>
 801776a:	f8d8 3000 	ldr.w	r3, [r8]
 801776e:	2b00      	cmp	r3, #0
 8017770:	d0e1      	beq.n	8017736 <__sflush_r+0xfe>
 8017772:	2b1d      	cmp	r3, #29
 8017774:	d007      	beq.n	8017786 <__sflush_r+0x14e>
 8017776:	2b16      	cmp	r3, #22
 8017778:	d005      	beq.n	8017786 <__sflush_r+0x14e>
 801777a:	89ab      	ldrh	r3, [r5, #12]
 801777c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8017780:	81ab      	strh	r3, [r5, #12]
 8017782:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017786:	f8c8 4000 	str.w	r4, [r8]
 801778a:	e7b2      	b.n	80176f2 <__sflush_r+0xba>

0801778c <_fflush_r>:
 801778c:	b510      	push	{r4, lr}
 801778e:	4604      	mov	r4, r0
 8017790:	b082      	sub	sp, #8
 8017792:	b108      	cbz	r0, 8017798 <_fflush_r+0xc>
 8017794:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8017796:	b153      	cbz	r3, 80177ae <_fflush_r+0x22>
 8017798:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
 801779c:	b908      	cbnz	r0, 80177a2 <_fflush_r+0x16>
 801779e:	b002      	add	sp, #8
 80177a0:	bd10      	pop	{r4, pc}
 80177a2:	4620      	mov	r0, r4
 80177a4:	b002      	add	sp, #8
 80177a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80177aa:	f7ff bf45 	b.w	8017638 <__sflush_r>
 80177ae:	9101      	str	r1, [sp, #4]
 80177b0:	f000 f880 	bl	80178b4 <__sinit>
 80177b4:	9901      	ldr	r1, [sp, #4]
 80177b6:	e7ef      	b.n	8017798 <_fflush_r+0xc>

080177b8 <_cleanup_r>:
 80177b8:	4901      	ldr	r1, [pc, #4]	; (80177c0 <_cleanup_r+0x8>)
 80177ba:	f000 bb37 	b.w	8017e2c <_fwalk_reent>
 80177be:	bf00      	nop
 80177c0:	08019249 	.word	0x08019249

080177c4 <__sinit.part.1>:
 80177c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80177c8:	4b35      	ldr	r3, [pc, #212]	; (80178a0 <__sinit.part.1+0xdc>)
 80177ca:	6845      	ldr	r5, [r0, #4]
 80177cc:	63c3      	str	r3, [r0, #60]	; 0x3c
 80177ce:	2400      	movs	r4, #0
 80177d0:	4607      	mov	r7, r0
 80177d2:	f500 723b 	add.w	r2, r0, #748	; 0x2ec
 80177d6:	2304      	movs	r3, #4
 80177d8:	2103      	movs	r1, #3
 80177da:	f8c0 12e4 	str.w	r1, [r0, #740]	; 0x2e4
 80177de:	f8c0 22e8 	str.w	r2, [r0, #744]	; 0x2e8
 80177e2:	f8c0 42e0 	str.w	r4, [r0, #736]	; 0x2e0
 80177e6:	b083      	sub	sp, #12
 80177e8:	602c      	str	r4, [r5, #0]
 80177ea:	606c      	str	r4, [r5, #4]
 80177ec:	60ac      	str	r4, [r5, #8]
 80177ee:	666c      	str	r4, [r5, #100]	; 0x64
 80177f0:	81ec      	strh	r4, [r5, #14]
 80177f2:	612c      	str	r4, [r5, #16]
 80177f4:	616c      	str	r4, [r5, #20]
 80177f6:	61ac      	str	r4, [r5, #24]
 80177f8:	81ab      	strh	r3, [r5, #12]
 80177fa:	4621      	mov	r1, r4
 80177fc:	f105 005c 	add.w	r0, r5, #92	; 0x5c
 8017800:	2208      	movs	r2, #8
 8017802:	f7fc f911 	bl	8013a28 <memset>
 8017806:	68be      	ldr	r6, [r7, #8]
 8017808:	f8df b098 	ldr.w	fp, [pc, #152]	; 80178a4 <__sinit.part.1+0xe0>
 801780c:	f8df a098 	ldr.w	sl, [pc, #152]	; 80178a8 <__sinit.part.1+0xe4>
 8017810:	f8df 9098 	ldr.w	r9, [pc, #152]	; 80178ac <__sinit.part.1+0xe8>
 8017814:	f8df 8098 	ldr.w	r8, [pc, #152]	; 80178b0 <__sinit.part.1+0xec>
 8017818:	f8c5 b020 	str.w	fp, [r5, #32]
 801781c:	2301      	movs	r3, #1
 801781e:	2209      	movs	r2, #9
 8017820:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
 8017824:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
 8017828:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
 801782c:	61ed      	str	r5, [r5, #28]
 801782e:	4621      	mov	r1, r4
 8017830:	81f3      	strh	r3, [r6, #14]
 8017832:	81b2      	strh	r2, [r6, #12]
 8017834:	f106 005c 	add.w	r0, r6, #92	; 0x5c
 8017838:	6034      	str	r4, [r6, #0]
 801783a:	6074      	str	r4, [r6, #4]
 801783c:	60b4      	str	r4, [r6, #8]
 801783e:	6674      	str	r4, [r6, #100]	; 0x64
 8017840:	6134      	str	r4, [r6, #16]
 8017842:	6174      	str	r4, [r6, #20]
 8017844:	61b4      	str	r4, [r6, #24]
 8017846:	2208      	movs	r2, #8
 8017848:	9301      	str	r3, [sp, #4]
 801784a:	f7fc f8ed 	bl	8013a28 <memset>
 801784e:	68fd      	ldr	r5, [r7, #12]
 8017850:	61f6      	str	r6, [r6, #28]
 8017852:	2012      	movs	r0, #18
 8017854:	2202      	movs	r2, #2
 8017856:	f8c6 b020 	str.w	fp, [r6, #32]
 801785a:	f8c6 a024 	str.w	sl, [r6, #36]	; 0x24
 801785e:	f8c6 9028 	str.w	r9, [r6, #40]	; 0x28
 8017862:	f8c6 802c 	str.w	r8, [r6, #44]	; 0x2c
 8017866:	4621      	mov	r1, r4
 8017868:	81a8      	strh	r0, [r5, #12]
 801786a:	81ea      	strh	r2, [r5, #14]
 801786c:	602c      	str	r4, [r5, #0]
 801786e:	606c      	str	r4, [r5, #4]
 8017870:	60ac      	str	r4, [r5, #8]
 8017872:	666c      	str	r4, [r5, #100]	; 0x64
 8017874:	612c      	str	r4, [r5, #16]
 8017876:	616c      	str	r4, [r5, #20]
 8017878:	61ac      	str	r4, [r5, #24]
 801787a:	f105 005c 	add.w	r0, r5, #92	; 0x5c
 801787e:	2208      	movs	r2, #8
 8017880:	f7fc f8d2 	bl	8013a28 <memset>
 8017884:	9b01      	ldr	r3, [sp, #4]
 8017886:	61ed      	str	r5, [r5, #28]
 8017888:	f8c5 b020 	str.w	fp, [r5, #32]
 801788c:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
 8017890:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
 8017894:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
 8017898:	63bb      	str	r3, [r7, #56]	; 0x38
 801789a:	b003      	add	sp, #12
 801789c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80178a0:	080177b9 	.word	0x080177b9
 80178a4:	08018f85 	.word	0x08018f85
 80178a8:	08018fa9 	.word	0x08018fa9
 80178ac:	08018fe1 	.word	0x08018fe1
 80178b0:	08019001 	.word	0x08019001

080178b4 <__sinit>:
 80178b4:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80178b6:	b103      	cbz	r3, 80178ba <__sinit+0x6>
 80178b8:	4770      	bx	lr
 80178ba:	f7ff bf83 	b.w	80177c4 <__sinit.part.1>
 80178be:	bf00      	nop

080178c0 <__sfp_lock_acquire>:
 80178c0:	4770      	bx	lr
 80178c2:	bf00      	nop

080178c4 <__sfp_lock_release>:
 80178c4:	4770      	bx	lr
 80178c6:	bf00      	nop

080178c8 <_malloc_trim_r>:
 80178c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80178ca:	4f23      	ldr	r7, [pc, #140]	; (8017958 <_malloc_trim_r+0x90>)
 80178cc:	460c      	mov	r4, r1
 80178ce:	4606      	mov	r6, r0
 80178d0:	f000 fe2c 	bl	801852c <__malloc_lock>
 80178d4:	68bb      	ldr	r3, [r7, #8]
 80178d6:	685d      	ldr	r5, [r3, #4]
 80178d8:	f025 0503 	bic.w	r5, r5, #3
 80178dc:	1b29      	subs	r1, r5, r4
 80178de:	f601 71ef 	addw	r1, r1, #4079	; 0xfef
 80178e2:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
 80178e6:	f021 010f 	bic.w	r1, r1, #15
 80178ea:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
 80178ee:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
 80178f2:	db07      	blt.n	8017904 <_malloc_trim_r+0x3c>
 80178f4:	4630      	mov	r0, r6
 80178f6:	2100      	movs	r1, #0
 80178f8:	f001 fb32 	bl	8018f60 <_sbrk_r>
 80178fc:	68bb      	ldr	r3, [r7, #8]
 80178fe:	442b      	add	r3, r5
 8017900:	4298      	cmp	r0, r3
 8017902:	d004      	beq.n	801790e <_malloc_trim_r+0x46>
 8017904:	4630      	mov	r0, r6
 8017906:	f000 fe13 	bl	8018530 <__malloc_unlock>
 801790a:	2000      	movs	r0, #0
 801790c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801790e:	4630      	mov	r0, r6
 8017910:	4261      	negs	r1, r4
 8017912:	f001 fb25 	bl	8018f60 <_sbrk_r>
 8017916:	3001      	adds	r0, #1
 8017918:	d00d      	beq.n	8017936 <_malloc_trim_r+0x6e>
 801791a:	4b10      	ldr	r3, [pc, #64]	; (801795c <_malloc_trim_r+0x94>)
 801791c:	68ba      	ldr	r2, [r7, #8]
 801791e:	6819      	ldr	r1, [r3, #0]
 8017920:	1b2d      	subs	r5, r5, r4
 8017922:	f045 0501 	orr.w	r5, r5, #1
 8017926:	4630      	mov	r0, r6
 8017928:	1b09      	subs	r1, r1, r4
 801792a:	6055      	str	r5, [r2, #4]
 801792c:	6019      	str	r1, [r3, #0]
 801792e:	f000 fdff 	bl	8018530 <__malloc_unlock>
 8017932:	2001      	movs	r0, #1
 8017934:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017936:	4630      	mov	r0, r6
 8017938:	2100      	movs	r1, #0
 801793a:	f001 fb11 	bl	8018f60 <_sbrk_r>
 801793e:	68ba      	ldr	r2, [r7, #8]
 8017940:	1a83      	subs	r3, r0, r2
 8017942:	2b0f      	cmp	r3, #15
 8017944:	ddde      	ble.n	8017904 <_malloc_trim_r+0x3c>
 8017946:	4c06      	ldr	r4, [pc, #24]	; (8017960 <_malloc_trim_r+0x98>)
 8017948:	4904      	ldr	r1, [pc, #16]	; (801795c <_malloc_trim_r+0x94>)
 801794a:	6824      	ldr	r4, [r4, #0]
 801794c:	f043 0301 	orr.w	r3, r3, #1
 8017950:	1b00      	subs	r0, r0, r4
 8017952:	6053      	str	r3, [r2, #4]
 8017954:	6008      	str	r0, [r1, #0]
 8017956:	e7d5      	b.n	8017904 <_malloc_trim_r+0x3c>
 8017958:	20000760 	.word	0x20000760
 801795c:	2000da28 	.word	0x2000da28
 8017960:	20000b6c 	.word	0x20000b6c

08017964 <_free_r>:
 8017964:	2900      	cmp	r1, #0
 8017966:	d04e      	beq.n	8017a06 <_free_r+0xa2>
 8017968:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801796c:	460c      	mov	r4, r1
 801796e:	4680      	mov	r8, r0
 8017970:	f000 fddc 	bl	801852c <__malloc_lock>
 8017974:	f854 7c04 	ldr.w	r7, [r4, #-4]
 8017978:	4962      	ldr	r1, [pc, #392]	; (8017b04 <_free_r+0x1a0>)
 801797a:	f027 0201 	bic.w	r2, r7, #1
 801797e:	f1a4 0508 	sub.w	r5, r4, #8
 8017982:	18ab      	adds	r3, r5, r2
 8017984:	688e      	ldr	r6, [r1, #8]
 8017986:	6858      	ldr	r0, [r3, #4]
 8017988:	429e      	cmp	r6, r3
 801798a:	f020 0003 	bic.w	r0, r0, #3
 801798e:	d05a      	beq.n	8017a46 <_free_r+0xe2>
 8017990:	07fe      	lsls	r6, r7, #31
 8017992:	6058      	str	r0, [r3, #4]
 8017994:	d40b      	bmi.n	80179ae <_free_r+0x4a>
 8017996:	f854 7c08 	ldr.w	r7, [r4, #-8]
 801799a:	1bed      	subs	r5, r5, r7
 801799c:	f101 0e08 	add.w	lr, r1, #8
 80179a0:	68ac      	ldr	r4, [r5, #8]
 80179a2:	4574      	cmp	r4, lr
 80179a4:	443a      	add	r2, r7
 80179a6:	d067      	beq.n	8017a78 <_free_r+0x114>
 80179a8:	68ef      	ldr	r7, [r5, #12]
 80179aa:	60e7      	str	r7, [r4, #12]
 80179ac:	60bc      	str	r4, [r7, #8]
 80179ae:	181c      	adds	r4, r3, r0
 80179b0:	6864      	ldr	r4, [r4, #4]
 80179b2:	07e4      	lsls	r4, r4, #31
 80179b4:	d40c      	bmi.n	80179d0 <_free_r+0x6c>
 80179b6:	4f54      	ldr	r7, [pc, #336]	; (8017b08 <_free_r+0x1a4>)
 80179b8:	689c      	ldr	r4, [r3, #8]
 80179ba:	42bc      	cmp	r4, r7
 80179bc:	4402      	add	r2, r0
 80179be:	d07c      	beq.n	8017aba <_free_r+0x156>
 80179c0:	68d8      	ldr	r0, [r3, #12]
 80179c2:	60e0      	str	r0, [r4, #12]
 80179c4:	f042 0301 	orr.w	r3, r2, #1
 80179c8:	6084      	str	r4, [r0, #8]
 80179ca:	606b      	str	r3, [r5, #4]
 80179cc:	50aa      	str	r2, [r5, r2]
 80179ce:	e003      	b.n	80179d8 <_free_r+0x74>
 80179d0:	f042 0301 	orr.w	r3, r2, #1
 80179d4:	606b      	str	r3, [r5, #4]
 80179d6:	50aa      	str	r2, [r5, r2]
 80179d8:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 80179dc:	d214      	bcs.n	8017a08 <_free_r+0xa4>
 80179de:	08d2      	lsrs	r2, r2, #3
 80179e0:	eb01 03c2 	add.w	r3, r1, r2, lsl #3
 80179e4:	6848      	ldr	r0, [r1, #4]
 80179e6:	689f      	ldr	r7, [r3, #8]
 80179e8:	60af      	str	r7, [r5, #8]
 80179ea:	1092      	asrs	r2, r2, #2
 80179ec:	2401      	movs	r4, #1
 80179ee:	fa04 f202 	lsl.w	r2, r4, r2
 80179f2:	4310      	orrs	r0, r2
 80179f4:	60eb      	str	r3, [r5, #12]
 80179f6:	6048      	str	r0, [r1, #4]
 80179f8:	609d      	str	r5, [r3, #8]
 80179fa:	60fd      	str	r5, [r7, #12]
 80179fc:	4640      	mov	r0, r8
 80179fe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8017a02:	f000 bd95 	b.w	8018530 <__malloc_unlock>
 8017a06:	4770      	bx	lr
 8017a08:	0a53      	lsrs	r3, r2, #9
 8017a0a:	2b04      	cmp	r3, #4
 8017a0c:	d847      	bhi.n	8017a9e <_free_r+0x13a>
 8017a0e:	0993      	lsrs	r3, r2, #6
 8017a10:	f103 0438 	add.w	r4, r3, #56	; 0x38
 8017a14:	0060      	lsls	r0, r4, #1
 8017a16:	eb01 0080 	add.w	r0, r1, r0, lsl #2
 8017a1a:	493a      	ldr	r1, [pc, #232]	; (8017b04 <_free_r+0x1a0>)
 8017a1c:	6883      	ldr	r3, [r0, #8]
 8017a1e:	4283      	cmp	r3, r0
 8017a20:	d043      	beq.n	8017aaa <_free_r+0x146>
 8017a22:	6859      	ldr	r1, [r3, #4]
 8017a24:	f021 0103 	bic.w	r1, r1, #3
 8017a28:	4291      	cmp	r1, r2
 8017a2a:	d902      	bls.n	8017a32 <_free_r+0xce>
 8017a2c:	689b      	ldr	r3, [r3, #8]
 8017a2e:	4298      	cmp	r0, r3
 8017a30:	d1f7      	bne.n	8017a22 <_free_r+0xbe>
 8017a32:	68da      	ldr	r2, [r3, #12]
 8017a34:	60ea      	str	r2, [r5, #12]
 8017a36:	60ab      	str	r3, [r5, #8]
 8017a38:	4640      	mov	r0, r8
 8017a3a:	6095      	str	r5, [r2, #8]
 8017a3c:	60dd      	str	r5, [r3, #12]
 8017a3e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8017a42:	f000 bd75 	b.w	8018530 <__malloc_unlock>
 8017a46:	07ff      	lsls	r7, r7, #31
 8017a48:	4402      	add	r2, r0
 8017a4a:	d407      	bmi.n	8017a5c <_free_r+0xf8>
 8017a4c:	f854 3c08 	ldr.w	r3, [r4, #-8]
 8017a50:	1aed      	subs	r5, r5, r3
 8017a52:	441a      	add	r2, r3
 8017a54:	68a8      	ldr	r0, [r5, #8]
 8017a56:	68eb      	ldr	r3, [r5, #12]
 8017a58:	60c3      	str	r3, [r0, #12]
 8017a5a:	6098      	str	r0, [r3, #8]
 8017a5c:	4b2b      	ldr	r3, [pc, #172]	; (8017b0c <_free_r+0x1a8>)
 8017a5e:	681b      	ldr	r3, [r3, #0]
 8017a60:	f042 0001 	orr.w	r0, r2, #1
 8017a64:	429a      	cmp	r2, r3
 8017a66:	6068      	str	r0, [r5, #4]
 8017a68:	608d      	str	r5, [r1, #8]
 8017a6a:	d3c7      	bcc.n	80179fc <_free_r+0x98>
 8017a6c:	4b28      	ldr	r3, [pc, #160]	; (8017b10 <_free_r+0x1ac>)
 8017a6e:	4640      	mov	r0, r8
 8017a70:	6819      	ldr	r1, [r3, #0]
 8017a72:	f7ff ff29 	bl	80178c8 <_malloc_trim_r>
 8017a76:	e7c1      	b.n	80179fc <_free_r+0x98>
 8017a78:	1819      	adds	r1, r3, r0
 8017a7a:	6849      	ldr	r1, [r1, #4]
 8017a7c:	07c9      	lsls	r1, r1, #31
 8017a7e:	d409      	bmi.n	8017a94 <_free_r+0x130>
 8017a80:	68d9      	ldr	r1, [r3, #12]
 8017a82:	689b      	ldr	r3, [r3, #8]
 8017a84:	4402      	add	r2, r0
 8017a86:	f042 0001 	orr.w	r0, r2, #1
 8017a8a:	60d9      	str	r1, [r3, #12]
 8017a8c:	608b      	str	r3, [r1, #8]
 8017a8e:	6068      	str	r0, [r5, #4]
 8017a90:	50aa      	str	r2, [r5, r2]
 8017a92:	e7b3      	b.n	80179fc <_free_r+0x98>
 8017a94:	f042 0301 	orr.w	r3, r2, #1
 8017a98:	606b      	str	r3, [r5, #4]
 8017a9a:	50aa      	str	r2, [r5, r2]
 8017a9c:	e7ae      	b.n	80179fc <_free_r+0x98>
 8017a9e:	2b14      	cmp	r3, #20
 8017aa0:	d814      	bhi.n	8017acc <_free_r+0x168>
 8017aa2:	f103 045b 	add.w	r4, r3, #91	; 0x5b
 8017aa6:	0060      	lsls	r0, r4, #1
 8017aa8:	e7b5      	b.n	8017a16 <_free_r+0xb2>
 8017aaa:	684a      	ldr	r2, [r1, #4]
 8017aac:	10a4      	asrs	r4, r4, #2
 8017aae:	2001      	movs	r0, #1
 8017ab0:	40a0      	lsls	r0, r4
 8017ab2:	4302      	orrs	r2, r0
 8017ab4:	604a      	str	r2, [r1, #4]
 8017ab6:	461a      	mov	r2, r3
 8017ab8:	e7bc      	b.n	8017a34 <_free_r+0xd0>
 8017aba:	f042 0301 	orr.w	r3, r2, #1
 8017abe:	614d      	str	r5, [r1, #20]
 8017ac0:	610d      	str	r5, [r1, #16]
 8017ac2:	60ec      	str	r4, [r5, #12]
 8017ac4:	60ac      	str	r4, [r5, #8]
 8017ac6:	606b      	str	r3, [r5, #4]
 8017ac8:	50aa      	str	r2, [r5, r2]
 8017aca:	e797      	b.n	80179fc <_free_r+0x98>
 8017acc:	2b54      	cmp	r3, #84	; 0x54
 8017ace:	d804      	bhi.n	8017ada <_free_r+0x176>
 8017ad0:	0b13      	lsrs	r3, r2, #12
 8017ad2:	f103 046e 	add.w	r4, r3, #110	; 0x6e
 8017ad6:	0060      	lsls	r0, r4, #1
 8017ad8:	e79d      	b.n	8017a16 <_free_r+0xb2>
 8017ada:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
 8017ade:	d804      	bhi.n	8017aea <_free_r+0x186>
 8017ae0:	0bd3      	lsrs	r3, r2, #15
 8017ae2:	f103 0477 	add.w	r4, r3, #119	; 0x77
 8017ae6:	0060      	lsls	r0, r4, #1
 8017ae8:	e795      	b.n	8017a16 <_free_r+0xb2>
 8017aea:	f240 5054 	movw	r0, #1364	; 0x554
 8017aee:	4283      	cmp	r3, r0
 8017af0:	d804      	bhi.n	8017afc <_free_r+0x198>
 8017af2:	0c93      	lsrs	r3, r2, #18
 8017af4:	f103 047c 	add.w	r4, r3, #124	; 0x7c
 8017af8:	0060      	lsls	r0, r4, #1
 8017afa:	e78c      	b.n	8017a16 <_free_r+0xb2>
 8017afc:	20fc      	movs	r0, #252	; 0xfc
 8017afe:	247e      	movs	r4, #126	; 0x7e
 8017b00:	e789      	b.n	8017a16 <_free_r+0xb2>
 8017b02:	bf00      	nop
 8017b04:	20000760 	.word	0x20000760
 8017b08:	20000768 	.word	0x20000768
 8017b0c:	20000b68 	.word	0x20000b68
 8017b10:	2000da24 	.word	0x2000da24

08017b14 <__sfvwrite_r>:
 8017b14:	6893      	ldr	r3, [r2, #8]
 8017b16:	2b00      	cmp	r3, #0
 8017b18:	d07a      	beq.n	8017c10 <__sfvwrite_r+0xfc>
 8017b1a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b1e:	f8b1 e00c 	ldrh.w	lr, [r1, #12]
 8017b22:	f01e 0f08 	tst.w	lr, #8
 8017b26:	b083      	sub	sp, #12
 8017b28:	460c      	mov	r4, r1
 8017b2a:	4681      	mov	r9, r0
 8017b2c:	4616      	mov	r6, r2
 8017b2e:	d026      	beq.n	8017b7e <__sfvwrite_r+0x6a>
 8017b30:	690b      	ldr	r3, [r1, #16]
 8017b32:	b323      	cbz	r3, 8017b7e <__sfvwrite_r+0x6a>
 8017b34:	f00e 0802 	and.w	r8, lr, #2
 8017b38:	fa1f f088 	uxth.w	r0, r8
 8017b3c:	6835      	ldr	r5, [r6, #0]
 8017b3e:	b370      	cbz	r0, 8017b9e <__sfvwrite_r+0x8a>
 8017b40:	f04f 0a00 	mov.w	sl, #0
 8017b44:	f8df b2e0 	ldr.w	fp, [pc, #736]	; 8017e28 <__sfvwrite_r+0x314>
 8017b48:	46d0      	mov	r8, sl
 8017b4a:	45d8      	cmp	r8, fp
 8017b4c:	4643      	mov	r3, r8
 8017b4e:	4652      	mov	r2, sl
 8017b50:	bf28      	it	cs
 8017b52:	465b      	movcs	r3, fp
 8017b54:	4648      	mov	r0, r9
 8017b56:	f1b8 0f00 	cmp.w	r8, #0
 8017b5a:	d053      	beq.n	8017c04 <__sfvwrite_r+0xf0>
 8017b5c:	69e1      	ldr	r1, [r4, #28]
 8017b5e:	6a67      	ldr	r7, [r4, #36]	; 0x24
 8017b60:	47b8      	blx	r7
 8017b62:	2800      	cmp	r0, #0
 8017b64:	dd73      	ble.n	8017c4e <__sfvwrite_r+0x13a>
 8017b66:	68b3      	ldr	r3, [r6, #8]
 8017b68:	1a1b      	subs	r3, r3, r0
 8017b6a:	4482      	add	sl, r0
 8017b6c:	ebc0 0808 	rsb	r8, r0, r8
 8017b70:	60b3      	str	r3, [r6, #8]
 8017b72:	2b00      	cmp	r3, #0
 8017b74:	d1e9      	bne.n	8017b4a <__sfvwrite_r+0x36>
 8017b76:	2000      	movs	r0, #0
 8017b78:	b003      	add	sp, #12
 8017b7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017b7e:	4648      	mov	r0, r9
 8017b80:	4621      	mov	r1, r4
 8017b82:	f7fe fd15 	bl	80165b0 <__swsetup_r>
 8017b86:	2800      	cmp	r0, #0
 8017b88:	f040 8145 	bne.w	8017e16 <__sfvwrite_r+0x302>
 8017b8c:	f8b4 e00c 	ldrh.w	lr, [r4, #12]
 8017b90:	6835      	ldr	r5, [r6, #0]
 8017b92:	f00e 0802 	and.w	r8, lr, #2
 8017b96:	fa1f f088 	uxth.w	r0, r8
 8017b9a:	2800      	cmp	r0, #0
 8017b9c:	d1d0      	bne.n	8017b40 <__sfvwrite_r+0x2c>
 8017b9e:	f01e 0b01 	ands.w	fp, lr, #1
 8017ba2:	d15d      	bne.n	8017c60 <__sfvwrite_r+0x14c>
 8017ba4:	46d8      	mov	r8, fp
 8017ba6:	f1b8 0f00 	cmp.w	r8, #0
 8017baa:	d025      	beq.n	8017bf8 <__sfvwrite_r+0xe4>
 8017bac:	f41e 7f00 	tst.w	lr, #512	; 0x200
 8017bb0:	68a7      	ldr	r7, [r4, #8]
 8017bb2:	d02f      	beq.n	8017c14 <__sfvwrite_r+0x100>
 8017bb4:	45b8      	cmp	r8, r7
 8017bb6:	46ba      	mov	sl, r7
 8017bb8:	f0c0 80a9 	bcc.w	8017d0e <__sfvwrite_r+0x1fa>
 8017bbc:	f41e 6f90 	tst.w	lr, #1152	; 0x480
 8017bc0:	f040 80b6 	bne.w	8017d30 <__sfvwrite_r+0x21c>
 8017bc4:	6820      	ldr	r0, [r4, #0]
 8017bc6:	4652      	mov	r2, sl
 8017bc8:	4659      	mov	r1, fp
 8017bca:	f7fb fec9 	bl	8013960 <memmove>
 8017bce:	68a0      	ldr	r0, [r4, #8]
 8017bd0:	6822      	ldr	r2, [r4, #0]
 8017bd2:	1bc0      	subs	r0, r0, r7
 8017bd4:	eb02 030a 	add.w	r3, r2, sl
 8017bd8:	60a0      	str	r0, [r4, #8]
 8017bda:	6023      	str	r3, [r4, #0]
 8017bdc:	4640      	mov	r0, r8
 8017bde:	68b3      	ldr	r3, [r6, #8]
 8017be0:	1a1b      	subs	r3, r3, r0
 8017be2:	4483      	add	fp, r0
 8017be4:	ebc0 0808 	rsb	r8, r0, r8
 8017be8:	60b3      	str	r3, [r6, #8]
 8017bea:	2b00      	cmp	r3, #0
 8017bec:	d0c3      	beq.n	8017b76 <__sfvwrite_r+0x62>
 8017bee:	f8b4 e00c 	ldrh.w	lr, [r4, #12]
 8017bf2:	f1b8 0f00 	cmp.w	r8, #0
 8017bf6:	d1d9      	bne.n	8017bac <__sfvwrite_r+0x98>
 8017bf8:	f8d5 b000 	ldr.w	fp, [r5]
 8017bfc:	f8d5 8004 	ldr.w	r8, [r5, #4]
 8017c00:	3508      	adds	r5, #8
 8017c02:	e7d0      	b.n	8017ba6 <__sfvwrite_r+0x92>
 8017c04:	f8d5 a000 	ldr.w	sl, [r5]
 8017c08:	f8d5 8004 	ldr.w	r8, [r5, #4]
 8017c0c:	3508      	adds	r5, #8
 8017c0e:	e79c      	b.n	8017b4a <__sfvwrite_r+0x36>
 8017c10:	2000      	movs	r0, #0
 8017c12:	4770      	bx	lr
 8017c14:	6820      	ldr	r0, [r4, #0]
 8017c16:	6923      	ldr	r3, [r4, #16]
 8017c18:	4298      	cmp	r0, r3
 8017c1a:	d803      	bhi.n	8017c24 <__sfvwrite_r+0x110>
 8017c1c:	6962      	ldr	r2, [r4, #20]
 8017c1e:	4590      	cmp	r8, r2
 8017c20:	f080 80b9 	bcs.w	8017d96 <__sfvwrite_r+0x282>
 8017c24:	4547      	cmp	r7, r8
 8017c26:	bf28      	it	cs
 8017c28:	4647      	movcs	r7, r8
 8017c2a:	463a      	mov	r2, r7
 8017c2c:	4659      	mov	r1, fp
 8017c2e:	f7fb fe97 	bl	8013960 <memmove>
 8017c32:	68a3      	ldr	r3, [r4, #8]
 8017c34:	6822      	ldr	r2, [r4, #0]
 8017c36:	1bdb      	subs	r3, r3, r7
 8017c38:	443a      	add	r2, r7
 8017c3a:	60a3      	str	r3, [r4, #8]
 8017c3c:	6022      	str	r2, [r4, #0]
 8017c3e:	2b00      	cmp	r3, #0
 8017c40:	d14a      	bne.n	8017cd8 <__sfvwrite_r+0x1c4>
 8017c42:	4648      	mov	r0, r9
 8017c44:	4621      	mov	r1, r4
 8017c46:	f7ff fda1 	bl	801778c <_fflush_r>
 8017c4a:	2800      	cmp	r0, #0
 8017c4c:	d044      	beq.n	8017cd8 <__sfvwrite_r+0x1c4>
 8017c4e:	89a3      	ldrh	r3, [r4, #12]
 8017c50:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8017c54:	f04f 30ff 	mov.w	r0, #4294967295
 8017c58:	81a3      	strh	r3, [r4, #12]
 8017c5a:	b003      	add	sp, #12
 8017c5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c60:	4680      	mov	r8, r0
 8017c62:	9000      	str	r0, [sp, #0]
 8017c64:	4683      	mov	fp, r0
 8017c66:	4682      	mov	sl, r0
 8017c68:	f1ba 0f00 	cmp.w	sl, #0
 8017c6c:	d02c      	beq.n	8017cc8 <__sfvwrite_r+0x1b4>
 8017c6e:	9b00      	ldr	r3, [sp, #0]
 8017c70:	2b00      	cmp	r3, #0
 8017c72:	d050      	beq.n	8017d16 <__sfvwrite_r+0x202>
 8017c74:	6820      	ldr	r0, [r4, #0]
 8017c76:	6921      	ldr	r1, [r4, #16]
 8017c78:	f8d4 e008 	ldr.w	lr, [r4, #8]
 8017c7c:	6962      	ldr	r2, [r4, #20]
 8017c7e:	45d0      	cmp	r8, sl
 8017c80:	4643      	mov	r3, r8
 8017c82:	bf28      	it	cs
 8017c84:	4653      	movcs	r3, sl
 8017c86:	4288      	cmp	r0, r1
 8017c88:	461f      	mov	r7, r3
 8017c8a:	d904      	bls.n	8017c96 <__sfvwrite_r+0x182>
 8017c8c:	eb0e 0c02 	add.w	ip, lr, r2
 8017c90:	4563      	cmp	r3, ip
 8017c92:	f300 8092 	bgt.w	8017dba <__sfvwrite_r+0x2a6>
 8017c96:	4293      	cmp	r3, r2
 8017c98:	db20      	blt.n	8017cdc <__sfvwrite_r+0x1c8>
 8017c9a:	4613      	mov	r3, r2
 8017c9c:	6a67      	ldr	r7, [r4, #36]	; 0x24
 8017c9e:	69e1      	ldr	r1, [r4, #28]
 8017ca0:	4648      	mov	r0, r9
 8017ca2:	465a      	mov	r2, fp
 8017ca4:	47b8      	blx	r7
 8017ca6:	1e07      	subs	r7, r0, #0
 8017ca8:	ddd1      	ble.n	8017c4e <__sfvwrite_r+0x13a>
 8017caa:	ebb8 0807 	subs.w	r8, r8, r7
 8017cae:	d025      	beq.n	8017cfc <__sfvwrite_r+0x1e8>
 8017cb0:	68b3      	ldr	r3, [r6, #8]
 8017cb2:	1bdb      	subs	r3, r3, r7
 8017cb4:	44bb      	add	fp, r7
 8017cb6:	ebc7 0a0a 	rsb	sl, r7, sl
 8017cba:	60b3      	str	r3, [r6, #8]
 8017cbc:	2b00      	cmp	r3, #0
 8017cbe:	f43f af5a 	beq.w	8017b76 <__sfvwrite_r+0x62>
 8017cc2:	f1ba 0f00 	cmp.w	sl, #0
 8017cc6:	d1d2      	bne.n	8017c6e <__sfvwrite_r+0x15a>
 8017cc8:	2300      	movs	r3, #0
 8017cca:	f8d5 b000 	ldr.w	fp, [r5]
 8017cce:	f8d5 a004 	ldr.w	sl, [r5, #4]
 8017cd2:	9300      	str	r3, [sp, #0]
 8017cd4:	3508      	adds	r5, #8
 8017cd6:	e7c7      	b.n	8017c68 <__sfvwrite_r+0x154>
 8017cd8:	4638      	mov	r0, r7
 8017cda:	e780      	b.n	8017bde <__sfvwrite_r+0xca>
 8017cdc:	461a      	mov	r2, r3
 8017cde:	4659      	mov	r1, fp
 8017ce0:	9301      	str	r3, [sp, #4]
 8017ce2:	f7fb fe3d 	bl	8013960 <memmove>
 8017ce6:	68a2      	ldr	r2, [r4, #8]
 8017ce8:	6821      	ldr	r1, [r4, #0]
 8017cea:	9b01      	ldr	r3, [sp, #4]
 8017cec:	ebb8 0807 	subs.w	r8, r8, r7
 8017cf0:	eba2 0203 	sub.w	r2, r2, r3
 8017cf4:	440b      	add	r3, r1
 8017cf6:	60a2      	str	r2, [r4, #8]
 8017cf8:	6023      	str	r3, [r4, #0]
 8017cfa:	d1d9      	bne.n	8017cb0 <__sfvwrite_r+0x19c>
 8017cfc:	4648      	mov	r0, r9
 8017cfe:	4621      	mov	r1, r4
 8017d00:	f7ff fd44 	bl	801778c <_fflush_r>
 8017d04:	2800      	cmp	r0, #0
 8017d06:	d1a2      	bne.n	8017c4e <__sfvwrite_r+0x13a>
 8017d08:	f8cd 8000 	str.w	r8, [sp]
 8017d0c:	e7d0      	b.n	8017cb0 <__sfvwrite_r+0x19c>
 8017d0e:	6820      	ldr	r0, [r4, #0]
 8017d10:	4647      	mov	r7, r8
 8017d12:	46c2      	mov	sl, r8
 8017d14:	e757      	b.n	8017bc6 <__sfvwrite_r+0xb2>
 8017d16:	4658      	mov	r0, fp
 8017d18:	210a      	movs	r1, #10
 8017d1a:	4652      	mov	r2, sl
 8017d1c:	f000 fbbc 	bl	8018498 <memchr>
 8017d20:	2800      	cmp	r0, #0
 8017d22:	d073      	beq.n	8017e0c <__sfvwrite_r+0x2f8>
 8017d24:	3001      	adds	r0, #1
 8017d26:	2301      	movs	r3, #1
 8017d28:	ebcb 0800 	rsb	r8, fp, r0
 8017d2c:	9300      	str	r3, [sp, #0]
 8017d2e:	e7a1      	b.n	8017c74 <__sfvwrite_r+0x160>
 8017d30:	6967      	ldr	r7, [r4, #20]
 8017d32:	6921      	ldr	r1, [r4, #16]
 8017d34:	6823      	ldr	r3, [r4, #0]
 8017d36:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8017d3a:	1a5b      	subs	r3, r3, r1
 8017d3c:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
 8017d40:	1c58      	adds	r0, r3, #1
 8017d42:	107f      	asrs	r7, r7, #1
 8017d44:	4440      	add	r0, r8
 8017d46:	4287      	cmp	r7, r0
 8017d48:	463a      	mov	r2, r7
 8017d4a:	bf3c      	itt	cc
 8017d4c:	4607      	movcc	r7, r0
 8017d4e:	463a      	movcc	r2, r7
 8017d50:	f41e 6f80 	tst.w	lr, #1024	; 0x400
 8017d54:	9300      	str	r3, [sp, #0]
 8017d56:	d046      	beq.n	8017de6 <__sfvwrite_r+0x2d2>
 8017d58:	4611      	mov	r1, r2
 8017d5a:	4648      	mov	r0, r9
 8017d5c:	f000 f90e 	bl	8017f7c <_malloc_r>
 8017d60:	9b00      	ldr	r3, [sp, #0]
 8017d62:	4682      	mov	sl, r0
 8017d64:	2800      	cmp	r0, #0
 8017d66:	d059      	beq.n	8017e1c <__sfvwrite_r+0x308>
 8017d68:	461a      	mov	r2, r3
 8017d6a:	6921      	ldr	r1, [r4, #16]
 8017d6c:	9300      	str	r3, [sp, #0]
 8017d6e:	f7e8 fa0b 	bl	8000188 <memcpy>
 8017d72:	89a2      	ldrh	r2, [r4, #12]
 8017d74:	9b00      	ldr	r3, [sp, #0]
 8017d76:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 8017d7a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8017d7e:	81a2      	strh	r2, [r4, #12]
 8017d80:	eb0a 0003 	add.w	r0, sl, r3
 8017d84:	1afb      	subs	r3, r7, r3
 8017d86:	f8c4 a010 	str.w	sl, [r4, #16]
 8017d8a:	6167      	str	r7, [r4, #20]
 8017d8c:	6020      	str	r0, [r4, #0]
 8017d8e:	60a3      	str	r3, [r4, #8]
 8017d90:	4647      	mov	r7, r8
 8017d92:	46c2      	mov	sl, r8
 8017d94:	e717      	b.n	8017bc6 <__sfvwrite_r+0xb2>
 8017d96:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8017d9a:	4543      	cmp	r3, r8
 8017d9c:	bf28      	it	cs
 8017d9e:	4643      	movcs	r3, r8
 8017da0:	6a67      	ldr	r7, [r4, #36]	; 0x24
 8017da2:	fb93 f3f2 	sdiv	r3, r3, r2
 8017da6:	4648      	mov	r0, r9
 8017da8:	fb03 f302 	mul.w	r3, r3, r2
 8017dac:	69e1      	ldr	r1, [r4, #28]
 8017dae:	465a      	mov	r2, fp
 8017db0:	47b8      	blx	r7
 8017db2:	2800      	cmp	r0, #0
 8017db4:	f73f af13 	bgt.w	8017bde <__sfvwrite_r+0xca>
 8017db8:	e749      	b.n	8017c4e <__sfvwrite_r+0x13a>
 8017dba:	4662      	mov	r2, ip
 8017dbc:	4659      	mov	r1, fp
 8017dbe:	f8cd c004 	str.w	ip, [sp, #4]
 8017dc2:	f7fb fdcd 	bl	8013960 <memmove>
 8017dc6:	6823      	ldr	r3, [r4, #0]
 8017dc8:	f8dd c004 	ldr.w	ip, [sp, #4]
 8017dcc:	4463      	add	r3, ip
 8017dce:	6023      	str	r3, [r4, #0]
 8017dd0:	4648      	mov	r0, r9
 8017dd2:	4621      	mov	r1, r4
 8017dd4:	f7ff fcda 	bl	801778c <_fflush_r>
 8017dd8:	f8dd c004 	ldr.w	ip, [sp, #4]
 8017ddc:	2800      	cmp	r0, #0
 8017dde:	f47f af36 	bne.w	8017c4e <__sfvwrite_r+0x13a>
 8017de2:	4667      	mov	r7, ip
 8017de4:	e761      	b.n	8017caa <__sfvwrite_r+0x196>
 8017de6:	4648      	mov	r0, r9
 8017de8:	f000 fe98 	bl	8018b1c <_realloc_r>
 8017dec:	9b00      	ldr	r3, [sp, #0]
 8017dee:	4682      	mov	sl, r0
 8017df0:	2800      	cmp	r0, #0
 8017df2:	d1c5      	bne.n	8017d80 <__sfvwrite_r+0x26c>
 8017df4:	4648      	mov	r0, r9
 8017df6:	6921      	ldr	r1, [r4, #16]
 8017df8:	f7ff fdb4 	bl	8017964 <_free_r>
 8017dfc:	89a3      	ldrh	r3, [r4, #12]
 8017dfe:	220c      	movs	r2, #12
 8017e00:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8017e04:	b29b      	uxth	r3, r3
 8017e06:	f8c9 2000 	str.w	r2, [r9]
 8017e0a:	e721      	b.n	8017c50 <__sfvwrite_r+0x13c>
 8017e0c:	2301      	movs	r3, #1
 8017e0e:	f10a 0801 	add.w	r8, sl, #1
 8017e12:	9300      	str	r3, [sp, #0]
 8017e14:	e72e      	b.n	8017c74 <__sfvwrite_r+0x160>
 8017e16:	f04f 30ff 	mov.w	r0, #4294967295
 8017e1a:	e6ad      	b.n	8017b78 <__sfvwrite_r+0x64>
 8017e1c:	230c      	movs	r3, #12
 8017e1e:	f8c9 3000 	str.w	r3, [r9]
 8017e22:	89a3      	ldrh	r3, [r4, #12]
 8017e24:	e714      	b.n	8017c50 <__sfvwrite_r+0x13c>
 8017e26:	bf00      	nop
 8017e28:	7ffffc00 	.word	0x7ffffc00

08017e2c <_fwalk_reent>:
 8017e2c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8017e30:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
 8017e34:	d01f      	beq.n	8017e76 <_fwalk_reent+0x4a>
 8017e36:	4688      	mov	r8, r1
 8017e38:	4606      	mov	r6, r0
 8017e3a:	f04f 0900 	mov.w	r9, #0
 8017e3e:	687d      	ldr	r5, [r7, #4]
 8017e40:	68bc      	ldr	r4, [r7, #8]
 8017e42:	3d01      	subs	r5, #1
 8017e44:	d411      	bmi.n	8017e6a <_fwalk_reent+0x3e>
 8017e46:	89a3      	ldrh	r3, [r4, #12]
 8017e48:	2b01      	cmp	r3, #1
 8017e4a:	f105 35ff 	add.w	r5, r5, #4294967295
 8017e4e:	d908      	bls.n	8017e62 <_fwalk_reent+0x36>
 8017e50:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8017e54:	3301      	adds	r3, #1
 8017e56:	4621      	mov	r1, r4
 8017e58:	4630      	mov	r0, r6
 8017e5a:	d002      	beq.n	8017e62 <_fwalk_reent+0x36>
 8017e5c:	47c0      	blx	r8
 8017e5e:	ea49 0900 	orr.w	r9, r9, r0
 8017e62:	1c6b      	adds	r3, r5, #1
 8017e64:	f104 0468 	add.w	r4, r4, #104	; 0x68
 8017e68:	d1ed      	bne.n	8017e46 <_fwalk_reent+0x1a>
 8017e6a:	683f      	ldr	r7, [r7, #0]
 8017e6c:	2f00      	cmp	r7, #0
 8017e6e:	d1e6      	bne.n	8017e3e <_fwalk_reent+0x12>
 8017e70:	4648      	mov	r0, r9
 8017e72:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8017e76:	46b9      	mov	r9, r7
 8017e78:	4648      	mov	r0, r9
 8017e7a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8017e7e:	bf00      	nop

08017e80 <__locale_charset>:
 8017e80:	4800      	ldr	r0, [pc, #0]	; (8017e84 <__locale_charset+0x4>)
 8017e82:	4770      	bx	lr
 8017e84:	2000073c 	.word	0x2000073c

08017e88 <__locale_mb_cur_max>:
 8017e88:	4b01      	ldr	r3, [pc, #4]	; (8017e90 <__locale_mb_cur_max+0x8>)
 8017e8a:	6818      	ldr	r0, [r3, #0]
 8017e8c:	4770      	bx	lr
 8017e8e:	bf00      	nop
 8017e90:	2000075c 	.word	0x2000075c

08017e94 <_localeconv_r>:
 8017e94:	4800      	ldr	r0, [pc, #0]	; (8017e98 <_localeconv_r+0x4>)
 8017e96:	4770      	bx	lr
 8017e98:	20000704 	.word	0x20000704

08017e9c <__smakebuf_r>:
 8017e9c:	898b      	ldrh	r3, [r1, #12]
 8017e9e:	b29a      	uxth	r2, r3
 8017ea0:	f012 0f02 	tst.w	r2, #2
 8017ea4:	d13c      	bne.n	8017f20 <__smakebuf_r+0x84>
 8017ea6:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017ea8:	460c      	mov	r4, r1
 8017eaa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8017eae:	2900      	cmp	r1, #0
 8017eb0:	b091      	sub	sp, #68	; 0x44
 8017eb2:	4605      	mov	r5, r0
 8017eb4:	db19      	blt.n	8017eea <__smakebuf_r+0x4e>
 8017eb6:	aa01      	add	r2, sp, #4
 8017eb8:	f001 fa6a 	bl	8019390 <_fstat_r>
 8017ebc:	2800      	cmp	r0, #0
 8017ebe:	db12      	blt.n	8017ee6 <__smakebuf_r+0x4a>
 8017ec0:	9b02      	ldr	r3, [sp, #8]
 8017ec2:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 8017ec6:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8017eca:	f5a3 5700 	sub.w	r7, r3, #8192	; 0x2000
 8017ece:	fab7 f787 	clz	r7, r7
 8017ed2:	ea4f 1757 	mov.w	r7, r7, lsr #5
 8017ed6:	d02a      	beq.n	8017f2e <__smakebuf_r+0x92>
 8017ed8:	89a3      	ldrh	r3, [r4, #12]
 8017eda:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8017ede:	81a3      	strh	r3, [r4, #12]
 8017ee0:	f44f 6680 	mov.w	r6, #1024	; 0x400
 8017ee4:	e00b      	b.n	8017efe <__smakebuf_r+0x62>
 8017ee6:	89a3      	ldrh	r3, [r4, #12]
 8017ee8:	b29a      	uxth	r2, r3
 8017eea:	f012 0f80 	tst.w	r2, #128	; 0x80
 8017eee:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8017ef2:	81a3      	strh	r3, [r4, #12]
 8017ef4:	bf0c      	ite	eq
 8017ef6:	f44f 6680 	moveq.w	r6, #1024	; 0x400
 8017efa:	2640      	movne	r6, #64	; 0x40
 8017efc:	2700      	movs	r7, #0
 8017efe:	4628      	mov	r0, r5
 8017f00:	4631      	mov	r1, r6
 8017f02:	f000 f83b 	bl	8017f7c <_malloc_r>
 8017f06:	89a3      	ldrh	r3, [r4, #12]
 8017f08:	b340      	cbz	r0, 8017f5c <__smakebuf_r+0xc0>
 8017f0a:	4a1a      	ldr	r2, [pc, #104]	; (8017f74 <__smakebuf_r+0xd8>)
 8017f0c:	63ea      	str	r2, [r5, #60]	; 0x3c
 8017f0e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8017f12:	81a3      	strh	r3, [r4, #12]
 8017f14:	6020      	str	r0, [r4, #0]
 8017f16:	6120      	str	r0, [r4, #16]
 8017f18:	6166      	str	r6, [r4, #20]
 8017f1a:	b99f      	cbnz	r7, 8017f44 <__smakebuf_r+0xa8>
 8017f1c:	b011      	add	sp, #68	; 0x44
 8017f1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017f20:	f101 0343 	add.w	r3, r1, #67	; 0x43
 8017f24:	2201      	movs	r2, #1
 8017f26:	600b      	str	r3, [r1, #0]
 8017f28:	610b      	str	r3, [r1, #16]
 8017f2a:	614a      	str	r2, [r1, #20]
 8017f2c:	4770      	bx	lr
 8017f2e:	4b12      	ldr	r3, [pc, #72]	; (8017f78 <__smakebuf_r+0xdc>)
 8017f30:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8017f32:	429a      	cmp	r2, r3
 8017f34:	d1d0      	bne.n	8017ed8 <__smakebuf_r+0x3c>
 8017f36:	89a3      	ldrh	r3, [r4, #12]
 8017f38:	f44f 6680 	mov.w	r6, #1024	; 0x400
 8017f3c:	4333      	orrs	r3, r6
 8017f3e:	81a3      	strh	r3, [r4, #12]
 8017f40:	64e6      	str	r6, [r4, #76]	; 0x4c
 8017f42:	e7dc      	b.n	8017efe <__smakebuf_r+0x62>
 8017f44:	4628      	mov	r0, r5
 8017f46:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8017f4a:	f001 fa35 	bl	80193b8 <_isatty_r>
 8017f4e:	2800      	cmp	r0, #0
 8017f50:	d0e4      	beq.n	8017f1c <__smakebuf_r+0x80>
 8017f52:	89a3      	ldrh	r3, [r4, #12]
 8017f54:	f043 0301 	orr.w	r3, r3, #1
 8017f58:	81a3      	strh	r3, [r4, #12]
 8017f5a:	e7df      	b.n	8017f1c <__smakebuf_r+0x80>
 8017f5c:	059a      	lsls	r2, r3, #22
 8017f5e:	d4dd      	bmi.n	8017f1c <__smakebuf_r+0x80>
 8017f60:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8017f64:	f043 0302 	orr.w	r3, r3, #2
 8017f68:	2101      	movs	r1, #1
 8017f6a:	81a3      	strh	r3, [r4, #12]
 8017f6c:	6022      	str	r2, [r4, #0]
 8017f6e:	6122      	str	r2, [r4, #16]
 8017f70:	6161      	str	r1, [r4, #20]
 8017f72:	e7d3      	b.n	8017f1c <__smakebuf_r+0x80>
 8017f74:	080177b9 	.word	0x080177b9
 8017f78:	08018fe1 	.word	0x08018fe1

08017f7c <_malloc_r>:
 8017f7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f80:	f101 050b 	add.w	r5, r1, #11
 8017f84:	2d16      	cmp	r5, #22
 8017f86:	b083      	sub	sp, #12
 8017f88:	4606      	mov	r6, r0
 8017f8a:	d927      	bls.n	8017fdc <_malloc_r+0x60>
 8017f8c:	f035 0507 	bics.w	r5, r5, #7
 8017f90:	f100 80b6 	bmi.w	8018100 <_malloc_r+0x184>
 8017f94:	42a9      	cmp	r1, r5
 8017f96:	f200 80b3 	bhi.w	8018100 <_malloc_r+0x184>
 8017f9a:	f000 fac7 	bl	801852c <__malloc_lock>
 8017f9e:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
 8017fa2:	d222      	bcs.n	8017fea <_malloc_r+0x6e>
 8017fa4:	4fc2      	ldr	r7, [pc, #776]	; (80182b0 <_malloc_r+0x334>)
 8017fa6:	08e8      	lsrs	r0, r5, #3
 8017fa8:	eb07 03c0 	add.w	r3, r7, r0, lsl #3
 8017fac:	68dc      	ldr	r4, [r3, #12]
 8017fae:	429c      	cmp	r4, r3
 8017fb0:	f000 81c9 	beq.w	8018346 <_malloc_r+0x3ca>
 8017fb4:	6863      	ldr	r3, [r4, #4]
 8017fb6:	68e1      	ldr	r1, [r4, #12]
 8017fb8:	68a5      	ldr	r5, [r4, #8]
 8017fba:	f023 0303 	bic.w	r3, r3, #3
 8017fbe:	4423      	add	r3, r4
 8017fc0:	4630      	mov	r0, r6
 8017fc2:	685a      	ldr	r2, [r3, #4]
 8017fc4:	60e9      	str	r1, [r5, #12]
 8017fc6:	f042 0201 	orr.w	r2, r2, #1
 8017fca:	608d      	str	r5, [r1, #8]
 8017fcc:	605a      	str	r2, [r3, #4]
 8017fce:	f000 faaf 	bl	8018530 <__malloc_unlock>
 8017fd2:	3408      	adds	r4, #8
 8017fd4:	4620      	mov	r0, r4
 8017fd6:	b003      	add	sp, #12
 8017fd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017fdc:	2910      	cmp	r1, #16
 8017fde:	f200 808f 	bhi.w	8018100 <_malloc_r+0x184>
 8017fe2:	f000 faa3 	bl	801852c <__malloc_lock>
 8017fe6:	2510      	movs	r5, #16
 8017fe8:	e7dc      	b.n	8017fa4 <_malloc_r+0x28>
 8017fea:	0a68      	lsrs	r0, r5, #9
 8017fec:	f000 808f 	beq.w	801810e <_malloc_r+0x192>
 8017ff0:	2804      	cmp	r0, #4
 8017ff2:	f200 8154 	bhi.w	801829e <_malloc_r+0x322>
 8017ff6:	09a8      	lsrs	r0, r5, #6
 8017ff8:	3038      	adds	r0, #56	; 0x38
 8017ffa:	0041      	lsls	r1, r0, #1
 8017ffc:	4fac      	ldr	r7, [pc, #688]	; (80182b0 <_malloc_r+0x334>)
 8017ffe:	eb07 0181 	add.w	r1, r7, r1, lsl #2
 8018002:	68cc      	ldr	r4, [r1, #12]
 8018004:	42a1      	cmp	r1, r4
 8018006:	d106      	bne.n	8018016 <_malloc_r+0x9a>
 8018008:	e00c      	b.n	8018024 <_malloc_r+0xa8>
 801800a:	2a00      	cmp	r2, #0
 801800c:	f280 8082 	bge.w	8018114 <_malloc_r+0x198>
 8018010:	68e4      	ldr	r4, [r4, #12]
 8018012:	42a1      	cmp	r1, r4
 8018014:	d006      	beq.n	8018024 <_malloc_r+0xa8>
 8018016:	6863      	ldr	r3, [r4, #4]
 8018018:	f023 0303 	bic.w	r3, r3, #3
 801801c:	1b5a      	subs	r2, r3, r5
 801801e:	2a0f      	cmp	r2, #15
 8018020:	ddf3      	ble.n	801800a <_malloc_r+0x8e>
 8018022:	3801      	subs	r0, #1
 8018024:	3001      	adds	r0, #1
 8018026:	49a2      	ldr	r1, [pc, #648]	; (80182b0 <_malloc_r+0x334>)
 8018028:	693c      	ldr	r4, [r7, #16]
 801802a:	f101 0e08 	add.w	lr, r1, #8
 801802e:	4574      	cmp	r4, lr
 8018030:	f000 817e 	beq.w	8018330 <_malloc_r+0x3b4>
 8018034:	6863      	ldr	r3, [r4, #4]
 8018036:	f023 0303 	bic.w	r3, r3, #3
 801803a:	1b5a      	subs	r2, r3, r5
 801803c:	2a0f      	cmp	r2, #15
 801803e:	f300 8164 	bgt.w	801830a <_malloc_r+0x38e>
 8018042:	2a00      	cmp	r2, #0
 8018044:	f8c1 e014 	str.w	lr, [r1, #20]
 8018048:	f8c1 e010 	str.w	lr, [r1, #16]
 801804c:	da73      	bge.n	8018136 <_malloc_r+0x1ba>
 801804e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8018052:	f080 8139 	bcs.w	80182c8 <_malloc_r+0x34c>
 8018056:	08db      	lsrs	r3, r3, #3
 8018058:	eb01 08c3 	add.w	r8, r1, r3, lsl #3
 801805c:	ea4f 0ca3 	mov.w	ip, r3, asr #2
 8018060:	684a      	ldr	r2, [r1, #4]
 8018062:	f8d8 9008 	ldr.w	r9, [r8, #8]
 8018066:	f8c4 9008 	str.w	r9, [r4, #8]
 801806a:	2301      	movs	r3, #1
 801806c:	fa03 f30c 	lsl.w	r3, r3, ip
 8018070:	4313      	orrs	r3, r2
 8018072:	f8c4 800c 	str.w	r8, [r4, #12]
 8018076:	604b      	str	r3, [r1, #4]
 8018078:	f8c8 4008 	str.w	r4, [r8, #8]
 801807c:	f8c9 400c 	str.w	r4, [r9, #12]
 8018080:	1082      	asrs	r2, r0, #2
 8018082:	2401      	movs	r4, #1
 8018084:	4094      	lsls	r4, r2
 8018086:	429c      	cmp	r4, r3
 8018088:	d862      	bhi.n	8018150 <_malloc_r+0x1d4>
 801808a:	4223      	tst	r3, r4
 801808c:	d106      	bne.n	801809c <_malloc_r+0x120>
 801808e:	f020 0003 	bic.w	r0, r0, #3
 8018092:	0064      	lsls	r4, r4, #1
 8018094:	4223      	tst	r3, r4
 8018096:	f100 0004 	add.w	r0, r0, #4
 801809a:	d0fa      	beq.n	8018092 <_malloc_r+0x116>
 801809c:	eb07 08c0 	add.w	r8, r7, r0, lsl #3
 80180a0:	46c4      	mov	ip, r8
 80180a2:	4681      	mov	r9, r0
 80180a4:	f8dc 300c 	ldr.w	r3, [ip, #12]
 80180a8:	459c      	cmp	ip, r3
 80180aa:	d107      	bne.n	80180bc <_malloc_r+0x140>
 80180ac:	e142      	b.n	8018334 <_malloc_r+0x3b8>
 80180ae:	2900      	cmp	r1, #0
 80180b0:	f280 8152 	bge.w	8018358 <_malloc_r+0x3dc>
 80180b4:	68db      	ldr	r3, [r3, #12]
 80180b6:	459c      	cmp	ip, r3
 80180b8:	f000 813c 	beq.w	8018334 <_malloc_r+0x3b8>
 80180bc:	685a      	ldr	r2, [r3, #4]
 80180be:	f022 0203 	bic.w	r2, r2, #3
 80180c2:	1b51      	subs	r1, r2, r5
 80180c4:	290f      	cmp	r1, #15
 80180c6:	ddf2      	ble.n	80180ae <_malloc_r+0x132>
 80180c8:	461c      	mov	r4, r3
 80180ca:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 80180ce:	f854 8f08 	ldr.w	r8, [r4, #8]!
 80180d2:	195a      	adds	r2, r3, r5
 80180d4:	f045 0901 	orr.w	r9, r5, #1
 80180d8:	f041 0501 	orr.w	r5, r1, #1
 80180dc:	f8c3 9004 	str.w	r9, [r3, #4]
 80180e0:	4630      	mov	r0, r6
 80180e2:	f8c8 c00c 	str.w	ip, [r8, #12]
 80180e6:	f8cc 8008 	str.w	r8, [ip, #8]
 80180ea:	617a      	str	r2, [r7, #20]
 80180ec:	613a      	str	r2, [r7, #16]
 80180ee:	f8c2 e00c 	str.w	lr, [r2, #12]
 80180f2:	f8c2 e008 	str.w	lr, [r2, #8]
 80180f6:	6055      	str	r5, [r2, #4]
 80180f8:	5051      	str	r1, [r2, r1]
 80180fa:	f000 fa19 	bl	8018530 <__malloc_unlock>
 80180fe:	e769      	b.n	8017fd4 <_malloc_r+0x58>
 8018100:	2400      	movs	r4, #0
 8018102:	230c      	movs	r3, #12
 8018104:	4620      	mov	r0, r4
 8018106:	6033      	str	r3, [r6, #0]
 8018108:	b003      	add	sp, #12
 801810a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801810e:	217e      	movs	r1, #126	; 0x7e
 8018110:	203f      	movs	r0, #63	; 0x3f
 8018112:	e773      	b.n	8017ffc <_malloc_r+0x80>
 8018114:	4423      	add	r3, r4
 8018116:	68e1      	ldr	r1, [r4, #12]
 8018118:	685a      	ldr	r2, [r3, #4]
 801811a:	68a5      	ldr	r5, [r4, #8]
 801811c:	f042 0201 	orr.w	r2, r2, #1
 8018120:	60e9      	str	r1, [r5, #12]
 8018122:	4630      	mov	r0, r6
 8018124:	608d      	str	r5, [r1, #8]
 8018126:	605a      	str	r2, [r3, #4]
 8018128:	f000 fa02 	bl	8018530 <__malloc_unlock>
 801812c:	3408      	adds	r4, #8
 801812e:	4620      	mov	r0, r4
 8018130:	b003      	add	sp, #12
 8018132:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018136:	4423      	add	r3, r4
 8018138:	4630      	mov	r0, r6
 801813a:	685a      	ldr	r2, [r3, #4]
 801813c:	f042 0201 	orr.w	r2, r2, #1
 8018140:	605a      	str	r2, [r3, #4]
 8018142:	f000 f9f5 	bl	8018530 <__malloc_unlock>
 8018146:	3408      	adds	r4, #8
 8018148:	4620      	mov	r0, r4
 801814a:	b003      	add	sp, #12
 801814c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018150:	68bc      	ldr	r4, [r7, #8]
 8018152:	6863      	ldr	r3, [r4, #4]
 8018154:	f023 0803 	bic.w	r8, r3, #3
 8018158:	4545      	cmp	r5, r8
 801815a:	d804      	bhi.n	8018166 <_malloc_r+0x1ea>
 801815c:	ebc5 0308 	rsb	r3, r5, r8
 8018160:	2b0f      	cmp	r3, #15
 8018162:	f300 808c 	bgt.w	801827e <_malloc_r+0x302>
 8018166:	4b53      	ldr	r3, [pc, #332]	; (80182b4 <_malloc_r+0x338>)
 8018168:	f8df a158 	ldr.w	sl, [pc, #344]	; 80182c4 <_malloc_r+0x348>
 801816c:	681a      	ldr	r2, [r3, #0]
 801816e:	f8da 3000 	ldr.w	r3, [sl]
 8018172:	3301      	adds	r3, #1
 8018174:	442a      	add	r2, r5
 8018176:	eb04 0b08 	add.w	fp, r4, r8
 801817a:	f000 8150 	beq.w	801841e <_malloc_r+0x4a2>
 801817e:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8018182:	320f      	adds	r2, #15
 8018184:	f422 627f 	bic.w	r2, r2, #4080	; 0xff0
 8018188:	f022 020f 	bic.w	r2, r2, #15
 801818c:	4611      	mov	r1, r2
 801818e:	4630      	mov	r0, r6
 8018190:	9201      	str	r2, [sp, #4]
 8018192:	f000 fee5 	bl	8018f60 <_sbrk_r>
 8018196:	f1b0 3fff 	cmp.w	r0, #4294967295
 801819a:	4681      	mov	r9, r0
 801819c:	9a01      	ldr	r2, [sp, #4]
 801819e:	f000 80f5 	beq.w	801838c <_malloc_r+0x410>
 80181a2:	4583      	cmp	fp, r0
 80181a4:	f200 80ef 	bhi.w	8018386 <_malloc_r+0x40a>
 80181a8:	4b43      	ldr	r3, [pc, #268]	; (80182b8 <_malloc_r+0x33c>)
 80181aa:	6819      	ldr	r1, [r3, #0]
 80181ac:	45cb      	cmp	fp, r9
 80181ae:	4411      	add	r1, r2
 80181b0:	6019      	str	r1, [r3, #0]
 80181b2:	f000 813d 	beq.w	8018430 <_malloc_r+0x4b4>
 80181b6:	f8da 0000 	ldr.w	r0, [sl]
 80181ba:	f8df e108 	ldr.w	lr, [pc, #264]	; 80182c4 <_malloc_r+0x348>
 80181be:	3001      	adds	r0, #1
 80181c0:	bf1b      	ittet	ne
 80181c2:	ebcb 0b09 	rsbne	fp, fp, r9
 80181c6:	4459      	addne	r1, fp
 80181c8:	f8ce 9000 	streq.w	r9, [lr]
 80181cc:	6019      	strne	r1, [r3, #0]
 80181ce:	f019 0107 	ands.w	r1, r9, #7
 80181d2:	f000 8107 	beq.w	80183e4 <_malloc_r+0x468>
 80181d6:	f1c1 0008 	rsb	r0, r1, #8
 80181da:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
 80181de:	4481      	add	r9, r0
 80181e0:	3108      	adds	r1, #8
 80181e2:	444a      	add	r2, r9
 80181e4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80181e8:	ebc2 0a01 	rsb	sl, r2, r1
 80181ec:	4651      	mov	r1, sl
 80181ee:	4630      	mov	r0, r6
 80181f0:	9301      	str	r3, [sp, #4]
 80181f2:	f000 feb5 	bl	8018f60 <_sbrk_r>
 80181f6:	1c43      	adds	r3, r0, #1
 80181f8:	9b01      	ldr	r3, [sp, #4]
 80181fa:	f000 8127 	beq.w	801844c <_malloc_r+0x4d0>
 80181fe:	ebc9 0200 	rsb	r2, r9, r0
 8018202:	4452      	add	r2, sl
 8018204:	f042 0201 	orr.w	r2, r2, #1
 8018208:	6819      	ldr	r1, [r3, #0]
 801820a:	f8c7 9008 	str.w	r9, [r7, #8]
 801820e:	4451      	add	r1, sl
 8018210:	42bc      	cmp	r4, r7
 8018212:	f8c9 2004 	str.w	r2, [r9, #4]
 8018216:	6019      	str	r1, [r3, #0]
 8018218:	f8df a09c 	ldr.w	sl, [pc, #156]	; 80182b8 <_malloc_r+0x33c>
 801821c:	d016      	beq.n	801824c <_malloc_r+0x2d0>
 801821e:	f1b8 0f0f 	cmp.w	r8, #15
 8018222:	f240 80e2 	bls.w	80183ea <_malloc_r+0x46e>
 8018226:	6862      	ldr	r2, [r4, #4]
 8018228:	f1a8 030c 	sub.w	r3, r8, #12
 801822c:	f023 0307 	bic.w	r3, r3, #7
 8018230:	18e0      	adds	r0, r4, r3
 8018232:	f002 0201 	and.w	r2, r2, #1
 8018236:	f04f 0e05 	mov.w	lr, #5
 801823a:	431a      	orrs	r2, r3
 801823c:	2b0f      	cmp	r3, #15
 801823e:	6062      	str	r2, [r4, #4]
 8018240:	f8c0 e004 	str.w	lr, [r0, #4]
 8018244:	f8c0 e008 	str.w	lr, [r0, #8]
 8018248:	f200 8104 	bhi.w	8018454 <_malloc_r+0x4d8>
 801824c:	4b1b      	ldr	r3, [pc, #108]	; (80182bc <_malloc_r+0x340>)
 801824e:	68bc      	ldr	r4, [r7, #8]
 8018250:	681a      	ldr	r2, [r3, #0]
 8018252:	4291      	cmp	r1, r2
 8018254:	bf88      	it	hi
 8018256:	6019      	strhi	r1, [r3, #0]
 8018258:	4b19      	ldr	r3, [pc, #100]	; (80182c0 <_malloc_r+0x344>)
 801825a:	681a      	ldr	r2, [r3, #0]
 801825c:	4291      	cmp	r1, r2
 801825e:	6862      	ldr	r2, [r4, #4]
 8018260:	bf88      	it	hi
 8018262:	6019      	strhi	r1, [r3, #0]
 8018264:	f022 0203 	bic.w	r2, r2, #3
 8018268:	4295      	cmp	r5, r2
 801826a:	eba2 0305 	sub.w	r3, r2, r5
 801826e:	d801      	bhi.n	8018274 <_malloc_r+0x2f8>
 8018270:	2b0f      	cmp	r3, #15
 8018272:	dc04      	bgt.n	801827e <_malloc_r+0x302>
 8018274:	4630      	mov	r0, r6
 8018276:	f000 f95b 	bl	8018530 <__malloc_unlock>
 801827a:	2400      	movs	r4, #0
 801827c:	e6aa      	b.n	8017fd4 <_malloc_r+0x58>
 801827e:	1962      	adds	r2, r4, r5
 8018280:	f043 0301 	orr.w	r3, r3, #1
 8018284:	f045 0501 	orr.w	r5, r5, #1
 8018288:	6065      	str	r5, [r4, #4]
 801828a:	4630      	mov	r0, r6
 801828c:	60ba      	str	r2, [r7, #8]
 801828e:	6053      	str	r3, [r2, #4]
 8018290:	f000 f94e 	bl	8018530 <__malloc_unlock>
 8018294:	3408      	adds	r4, #8
 8018296:	4620      	mov	r0, r4
 8018298:	b003      	add	sp, #12
 801829a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801829e:	2814      	cmp	r0, #20
 80182a0:	d969      	bls.n	8018376 <_malloc_r+0x3fa>
 80182a2:	2854      	cmp	r0, #84	; 0x54
 80182a4:	f200 8097 	bhi.w	80183d6 <_malloc_r+0x45a>
 80182a8:	0b28      	lsrs	r0, r5, #12
 80182aa:	306e      	adds	r0, #110	; 0x6e
 80182ac:	0041      	lsls	r1, r0, #1
 80182ae:	e6a5      	b.n	8017ffc <_malloc_r+0x80>
 80182b0:	20000760 	.word	0x20000760
 80182b4:	2000da24 	.word	0x2000da24
 80182b8:	2000da28 	.word	0x2000da28
 80182bc:	2000da20 	.word	0x2000da20
 80182c0:	2000da1c 	.word	0x2000da1c
 80182c4:	20000b6c 	.word	0x20000b6c
 80182c8:	0a5a      	lsrs	r2, r3, #9
 80182ca:	2a04      	cmp	r2, #4
 80182cc:	d956      	bls.n	801837c <_malloc_r+0x400>
 80182ce:	2a14      	cmp	r2, #20
 80182d0:	f200 80a7 	bhi.w	8018422 <_malloc_r+0x4a6>
 80182d4:	325b      	adds	r2, #91	; 0x5b
 80182d6:	ea4f 0c42 	mov.w	ip, r2, lsl #1
 80182da:	eb07 0c8c 	add.w	ip, r7, ip, lsl #2
 80182de:	f8df 81b4 	ldr.w	r8, [pc, #436]	; 8018494 <_malloc_r+0x518>
 80182e2:	f8dc 1008 	ldr.w	r1, [ip, #8]
 80182e6:	4561      	cmp	r1, ip
 80182e8:	f000 8085 	beq.w	80183f6 <_malloc_r+0x47a>
 80182ec:	684a      	ldr	r2, [r1, #4]
 80182ee:	f022 0203 	bic.w	r2, r2, #3
 80182f2:	4293      	cmp	r3, r2
 80182f4:	d202      	bcs.n	80182fc <_malloc_r+0x380>
 80182f6:	6889      	ldr	r1, [r1, #8]
 80182f8:	458c      	cmp	ip, r1
 80182fa:	d1f7      	bne.n	80182ec <_malloc_r+0x370>
 80182fc:	68ca      	ldr	r2, [r1, #12]
 80182fe:	687b      	ldr	r3, [r7, #4]
 8018300:	60e2      	str	r2, [r4, #12]
 8018302:	60a1      	str	r1, [r4, #8]
 8018304:	6094      	str	r4, [r2, #8]
 8018306:	60cc      	str	r4, [r1, #12]
 8018308:	e6ba      	b.n	8018080 <_malloc_r+0x104>
 801830a:	1963      	adds	r3, r4, r5
 801830c:	f042 0701 	orr.w	r7, r2, #1
 8018310:	f045 0501 	orr.w	r5, r5, #1
 8018314:	6065      	str	r5, [r4, #4]
 8018316:	4630      	mov	r0, r6
 8018318:	614b      	str	r3, [r1, #20]
 801831a:	610b      	str	r3, [r1, #16]
 801831c:	f8c3 e00c 	str.w	lr, [r3, #12]
 8018320:	f8c3 e008 	str.w	lr, [r3, #8]
 8018324:	605f      	str	r7, [r3, #4]
 8018326:	509a      	str	r2, [r3, r2]
 8018328:	3408      	adds	r4, #8
 801832a:	f000 f901 	bl	8018530 <__malloc_unlock>
 801832e:	e651      	b.n	8017fd4 <_malloc_r+0x58>
 8018330:	684b      	ldr	r3, [r1, #4]
 8018332:	e6a5      	b.n	8018080 <_malloc_r+0x104>
 8018334:	f109 0901 	add.w	r9, r9, #1
 8018338:	f019 0f03 	tst.w	r9, #3
 801833c:	f10c 0c08 	add.w	ip, ip, #8
 8018340:	f47f aeb0 	bne.w	80180a4 <_malloc_r+0x128>
 8018344:	e02b      	b.n	801839e <_malloc_r+0x422>
 8018346:	f104 0308 	add.w	r3, r4, #8
 801834a:	6964      	ldr	r4, [r4, #20]
 801834c:	42a3      	cmp	r3, r4
 801834e:	bf08      	it	eq
 8018350:	3002      	addeq	r0, #2
 8018352:	f43f ae68 	beq.w	8018026 <_malloc_r+0xaa>
 8018356:	e62d      	b.n	8017fb4 <_malloc_r+0x38>
 8018358:	441a      	add	r2, r3
 801835a:	461c      	mov	r4, r3
 801835c:	6851      	ldr	r1, [r2, #4]
 801835e:	68db      	ldr	r3, [r3, #12]
 8018360:	f854 5f08 	ldr.w	r5, [r4, #8]!
 8018364:	f041 0101 	orr.w	r1, r1, #1
 8018368:	6051      	str	r1, [r2, #4]
 801836a:	4630      	mov	r0, r6
 801836c:	60eb      	str	r3, [r5, #12]
 801836e:	609d      	str	r5, [r3, #8]
 8018370:	f000 f8de 	bl	8018530 <__malloc_unlock>
 8018374:	e62e      	b.n	8017fd4 <_malloc_r+0x58>
 8018376:	305b      	adds	r0, #91	; 0x5b
 8018378:	0041      	lsls	r1, r0, #1
 801837a:	e63f      	b.n	8017ffc <_malloc_r+0x80>
 801837c:	099a      	lsrs	r2, r3, #6
 801837e:	3238      	adds	r2, #56	; 0x38
 8018380:	ea4f 0c42 	mov.w	ip, r2, lsl #1
 8018384:	e7a9      	b.n	80182da <_malloc_r+0x35e>
 8018386:	42bc      	cmp	r4, r7
 8018388:	f43f af0e 	beq.w	80181a8 <_malloc_r+0x22c>
 801838c:	68bc      	ldr	r4, [r7, #8]
 801838e:	6862      	ldr	r2, [r4, #4]
 8018390:	f022 0203 	bic.w	r2, r2, #3
 8018394:	e768      	b.n	8018268 <_malloc_r+0x2ec>
 8018396:	f8d8 8000 	ldr.w	r8, [r8]
 801839a:	4598      	cmp	r8, r3
 801839c:	d177      	bne.n	801848e <_malloc_r+0x512>
 801839e:	f010 0f03 	tst.w	r0, #3
 80183a2:	f1a8 0308 	sub.w	r3, r8, #8
 80183a6:	f100 30ff 	add.w	r0, r0, #4294967295
 80183aa:	d1f4      	bne.n	8018396 <_malloc_r+0x41a>
 80183ac:	687b      	ldr	r3, [r7, #4]
 80183ae:	ea23 0304 	bic.w	r3, r3, r4
 80183b2:	607b      	str	r3, [r7, #4]
 80183b4:	0064      	lsls	r4, r4, #1
 80183b6:	429c      	cmp	r4, r3
 80183b8:	f63f aeca 	bhi.w	8018150 <_malloc_r+0x1d4>
 80183bc:	2c00      	cmp	r4, #0
 80183be:	f43f aec7 	beq.w	8018150 <_malloc_r+0x1d4>
 80183c2:	4223      	tst	r3, r4
 80183c4:	4648      	mov	r0, r9
 80183c6:	f47f ae69 	bne.w	801809c <_malloc_r+0x120>
 80183ca:	0064      	lsls	r4, r4, #1
 80183cc:	4223      	tst	r3, r4
 80183ce:	f100 0004 	add.w	r0, r0, #4
 80183d2:	d0fa      	beq.n	80183ca <_malloc_r+0x44e>
 80183d4:	e662      	b.n	801809c <_malloc_r+0x120>
 80183d6:	f5b0 7faa 	cmp.w	r0, #340	; 0x154
 80183da:	d818      	bhi.n	801840e <_malloc_r+0x492>
 80183dc:	0be8      	lsrs	r0, r5, #15
 80183de:	3077      	adds	r0, #119	; 0x77
 80183e0:	0041      	lsls	r1, r0, #1
 80183e2:	e60b      	b.n	8017ffc <_malloc_r+0x80>
 80183e4:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80183e8:	e6fb      	b.n	80181e2 <_malloc_r+0x266>
 80183ea:	2301      	movs	r3, #1
 80183ec:	f8c9 3004 	str.w	r3, [r9, #4]
 80183f0:	464c      	mov	r4, r9
 80183f2:	2200      	movs	r2, #0
 80183f4:	e738      	b.n	8018268 <_malloc_r+0x2ec>
 80183f6:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80183fa:	1092      	asrs	r2, r2, #2
 80183fc:	f04f 0c01 	mov.w	ip, #1
 8018400:	fa0c f202 	lsl.w	r2, ip, r2
 8018404:	4313      	orrs	r3, r2
 8018406:	f8c8 3004 	str.w	r3, [r8, #4]
 801840a:	460a      	mov	r2, r1
 801840c:	e778      	b.n	8018300 <_malloc_r+0x384>
 801840e:	f240 5354 	movw	r3, #1364	; 0x554
 8018412:	4298      	cmp	r0, r3
 8018414:	d817      	bhi.n	8018446 <_malloc_r+0x4ca>
 8018416:	0ca8      	lsrs	r0, r5, #18
 8018418:	307c      	adds	r0, #124	; 0x7c
 801841a:	0041      	lsls	r1, r0, #1
 801841c:	e5ee      	b.n	8017ffc <_malloc_r+0x80>
 801841e:	3210      	adds	r2, #16
 8018420:	e6b4      	b.n	801818c <_malloc_r+0x210>
 8018422:	2a54      	cmp	r2, #84	; 0x54
 8018424:	d81e      	bhi.n	8018464 <_malloc_r+0x4e8>
 8018426:	0b1a      	lsrs	r2, r3, #12
 8018428:	326e      	adds	r2, #110	; 0x6e
 801842a:	ea4f 0c42 	mov.w	ip, r2, lsl #1
 801842e:	e754      	b.n	80182da <_malloc_r+0x35e>
 8018430:	f3cb 000b 	ubfx	r0, fp, #0, #12
 8018434:	2800      	cmp	r0, #0
 8018436:	f47f aebe 	bne.w	80181b6 <_malloc_r+0x23a>
 801843a:	4442      	add	r2, r8
 801843c:	68bb      	ldr	r3, [r7, #8]
 801843e:	f042 0201 	orr.w	r2, r2, #1
 8018442:	605a      	str	r2, [r3, #4]
 8018444:	e702      	b.n	801824c <_malloc_r+0x2d0>
 8018446:	21fc      	movs	r1, #252	; 0xfc
 8018448:	207e      	movs	r0, #126	; 0x7e
 801844a:	e5d7      	b.n	8017ffc <_malloc_r+0x80>
 801844c:	2201      	movs	r2, #1
 801844e:	f04f 0a00 	mov.w	sl, #0
 8018452:	e6d9      	b.n	8018208 <_malloc_r+0x28c>
 8018454:	f104 0108 	add.w	r1, r4, #8
 8018458:	4630      	mov	r0, r6
 801845a:	f7ff fa83 	bl	8017964 <_free_r>
 801845e:	f8da 1000 	ldr.w	r1, [sl]
 8018462:	e6f3      	b.n	801824c <_malloc_r+0x2d0>
 8018464:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 8018468:	d804      	bhi.n	8018474 <_malloc_r+0x4f8>
 801846a:	0bda      	lsrs	r2, r3, #15
 801846c:	3277      	adds	r2, #119	; 0x77
 801846e:	ea4f 0c42 	mov.w	ip, r2, lsl #1
 8018472:	e732      	b.n	80182da <_malloc_r+0x35e>
 8018474:	f240 5154 	movw	r1, #1364	; 0x554
 8018478:	428a      	cmp	r2, r1
 801847a:	d804      	bhi.n	8018486 <_malloc_r+0x50a>
 801847c:	0c9a      	lsrs	r2, r3, #18
 801847e:	327c      	adds	r2, #124	; 0x7c
 8018480:	ea4f 0c42 	mov.w	ip, r2, lsl #1
 8018484:	e729      	b.n	80182da <_malloc_r+0x35e>
 8018486:	f04f 0cfc 	mov.w	ip, #252	; 0xfc
 801848a:	227e      	movs	r2, #126	; 0x7e
 801848c:	e725      	b.n	80182da <_malloc_r+0x35e>
 801848e:	687b      	ldr	r3, [r7, #4]
 8018490:	e790      	b.n	80183b4 <_malloc_r+0x438>
 8018492:	bf00      	nop
 8018494:	20000760 	.word	0x20000760

08018498 <memchr>:
 8018498:	0783      	lsls	r3, r0, #30
 801849a:	b470      	push	{r4, r5, r6}
 801849c:	b2c9      	uxtb	r1, r1
 801849e:	d040      	beq.n	8018522 <memchr+0x8a>
 80184a0:	1e54      	subs	r4, r2, #1
 80184a2:	2a00      	cmp	r2, #0
 80184a4:	d03f      	beq.n	8018526 <memchr+0x8e>
 80184a6:	7803      	ldrb	r3, [r0, #0]
 80184a8:	428b      	cmp	r3, r1
 80184aa:	bf18      	it	ne
 80184ac:	1c43      	addne	r3, r0, #1
 80184ae:	d106      	bne.n	80184be <memchr+0x26>
 80184b0:	e01d      	b.n	80184ee <memchr+0x56>
 80184b2:	b1f4      	cbz	r4, 80184f2 <memchr+0x5a>
 80184b4:	7802      	ldrb	r2, [r0, #0]
 80184b6:	428a      	cmp	r2, r1
 80184b8:	f104 34ff 	add.w	r4, r4, #4294967295
 80184bc:	d017      	beq.n	80184ee <memchr+0x56>
 80184be:	f013 0f03 	tst.w	r3, #3
 80184c2:	4618      	mov	r0, r3
 80184c4:	f103 0301 	add.w	r3, r3, #1
 80184c8:	d1f3      	bne.n	80184b2 <memchr+0x1a>
 80184ca:	2c03      	cmp	r4, #3
 80184cc:	d814      	bhi.n	80184f8 <memchr+0x60>
 80184ce:	b184      	cbz	r4, 80184f2 <memchr+0x5a>
 80184d0:	7803      	ldrb	r3, [r0, #0]
 80184d2:	428b      	cmp	r3, r1
 80184d4:	d00b      	beq.n	80184ee <memchr+0x56>
 80184d6:	1905      	adds	r5, r0, r4
 80184d8:	1c43      	adds	r3, r0, #1
 80184da:	e002      	b.n	80184e2 <memchr+0x4a>
 80184dc:	7802      	ldrb	r2, [r0, #0]
 80184de:	428a      	cmp	r2, r1
 80184e0:	d005      	beq.n	80184ee <memchr+0x56>
 80184e2:	42ab      	cmp	r3, r5
 80184e4:	4618      	mov	r0, r3
 80184e6:	f103 0301 	add.w	r3, r3, #1
 80184ea:	d1f7      	bne.n	80184dc <memchr+0x44>
 80184ec:	2000      	movs	r0, #0
 80184ee:	bc70      	pop	{r4, r5, r6}
 80184f0:	4770      	bx	lr
 80184f2:	4620      	mov	r0, r4
 80184f4:	bc70      	pop	{r4, r5, r6}
 80184f6:	4770      	bx	lr
 80184f8:	ea41 2601 	orr.w	r6, r1, r1, lsl #8
 80184fc:	4602      	mov	r2, r0
 80184fe:	ea46 4606 	orr.w	r6, r6, r6, lsl #16
 8018502:	4610      	mov	r0, r2
 8018504:	3204      	adds	r2, #4
 8018506:	6803      	ldr	r3, [r0, #0]
 8018508:	4073      	eors	r3, r6
 801850a:	f1a3 3501 	sub.w	r5, r3, #16843009	; 0x1010101
 801850e:	ea25 0303 	bic.w	r3, r5, r3
 8018512:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
 8018516:	d1da      	bne.n	80184ce <memchr+0x36>
 8018518:	3c04      	subs	r4, #4
 801851a:	2c03      	cmp	r4, #3
 801851c:	4610      	mov	r0, r2
 801851e:	d8f0      	bhi.n	8018502 <memchr+0x6a>
 8018520:	e7d5      	b.n	80184ce <memchr+0x36>
 8018522:	4614      	mov	r4, r2
 8018524:	e7d1      	b.n	80184ca <memchr+0x32>
 8018526:	4610      	mov	r0, r2
 8018528:	e7e1      	b.n	80184ee <memchr+0x56>
 801852a:	bf00      	nop

0801852c <__malloc_lock>:
 801852c:	4770      	bx	lr
 801852e:	bf00      	nop

08018530 <__malloc_unlock>:
 8018530:	4770      	bx	lr
 8018532:	bf00      	nop

08018534 <_Balloc>:
 8018534:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8018536:	b570      	push	{r4, r5, r6, lr}
 8018538:	4605      	mov	r5, r0
 801853a:	460c      	mov	r4, r1
 801853c:	b14b      	cbz	r3, 8018552 <_Balloc+0x1e>
 801853e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8018542:	b180      	cbz	r0, 8018566 <_Balloc+0x32>
 8018544:	6802      	ldr	r2, [r0, #0]
 8018546:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 801854a:	2300      	movs	r3, #0
 801854c:	6103      	str	r3, [r0, #16]
 801854e:	60c3      	str	r3, [r0, #12]
 8018550:	bd70      	pop	{r4, r5, r6, pc}
 8018552:	2104      	movs	r1, #4
 8018554:	2221      	movs	r2, #33	; 0x21
 8018556:	f000 fe35 	bl	80191c4 <_calloc_r>
 801855a:	64e8      	str	r0, [r5, #76]	; 0x4c
 801855c:	4603      	mov	r3, r0
 801855e:	2800      	cmp	r0, #0
 8018560:	d1ed      	bne.n	801853e <_Balloc+0xa>
 8018562:	2000      	movs	r0, #0
 8018564:	bd70      	pop	{r4, r5, r6, pc}
 8018566:	2101      	movs	r1, #1
 8018568:	fa01 f604 	lsl.w	r6, r1, r4
 801856c:	1d72      	adds	r2, r6, #5
 801856e:	4628      	mov	r0, r5
 8018570:	0092      	lsls	r2, r2, #2
 8018572:	f000 fe27 	bl	80191c4 <_calloc_r>
 8018576:	2800      	cmp	r0, #0
 8018578:	d0f3      	beq.n	8018562 <_Balloc+0x2e>
 801857a:	6044      	str	r4, [r0, #4]
 801857c:	6086      	str	r6, [r0, #8]
 801857e:	e7e4      	b.n	801854a <_Balloc+0x16>

08018580 <_Bfree>:
 8018580:	b131      	cbz	r1, 8018590 <_Bfree+0x10>
 8018582:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8018584:	684a      	ldr	r2, [r1, #4]
 8018586:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801858a:	6008      	str	r0, [r1, #0]
 801858c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8018590:	4770      	bx	lr
 8018592:	bf00      	nop

08018594 <__multadd>:
 8018594:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018596:	690c      	ldr	r4, [r1, #16]
 8018598:	b083      	sub	sp, #12
 801859a:	460d      	mov	r5, r1
 801859c:	4606      	mov	r6, r0
 801859e:	f101 0e14 	add.w	lr, r1, #20
 80185a2:	2700      	movs	r7, #0
 80185a4:	f8de 1000 	ldr.w	r1, [lr]
 80185a8:	b288      	uxth	r0, r1
 80185aa:	0c09      	lsrs	r1, r1, #16
 80185ac:	fb02 3300 	mla	r3, r2, r0, r3
 80185b0:	fb02 f101 	mul.w	r1, r2, r1
 80185b4:	eb01 4113 	add.w	r1, r1, r3, lsr #16
 80185b8:	3701      	adds	r7, #1
 80185ba:	b29b      	uxth	r3, r3
 80185bc:	eb03 4301 	add.w	r3, r3, r1, lsl #16
 80185c0:	42bc      	cmp	r4, r7
 80185c2:	f84e 3b04 	str.w	r3, [lr], #4
 80185c6:	ea4f 4311 	mov.w	r3, r1, lsr #16
 80185ca:	dceb      	bgt.n	80185a4 <__multadd+0x10>
 80185cc:	b13b      	cbz	r3, 80185de <__multadd+0x4a>
 80185ce:	68aa      	ldr	r2, [r5, #8]
 80185d0:	4294      	cmp	r4, r2
 80185d2:	da07      	bge.n	80185e4 <__multadd+0x50>
 80185d4:	eb05 0284 	add.w	r2, r5, r4, lsl #2
 80185d8:	3401      	adds	r4, #1
 80185da:	6153      	str	r3, [r2, #20]
 80185dc:	612c      	str	r4, [r5, #16]
 80185de:	4628      	mov	r0, r5
 80185e0:	b003      	add	sp, #12
 80185e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80185e4:	6869      	ldr	r1, [r5, #4]
 80185e6:	9301      	str	r3, [sp, #4]
 80185e8:	3101      	adds	r1, #1
 80185ea:	4630      	mov	r0, r6
 80185ec:	f7ff ffa2 	bl	8018534 <_Balloc>
 80185f0:	692a      	ldr	r2, [r5, #16]
 80185f2:	3202      	adds	r2, #2
 80185f4:	f105 010c 	add.w	r1, r5, #12
 80185f8:	4607      	mov	r7, r0
 80185fa:	0092      	lsls	r2, r2, #2
 80185fc:	300c      	adds	r0, #12
 80185fe:	f7e7 fdc3 	bl	8000188 <memcpy>
 8018602:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
 8018604:	6869      	ldr	r1, [r5, #4]
 8018606:	9b01      	ldr	r3, [sp, #4]
 8018608:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 801860c:	6028      	str	r0, [r5, #0]
 801860e:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
 8018612:	463d      	mov	r5, r7
 8018614:	e7de      	b.n	80185d4 <__multadd+0x40>
 8018616:	bf00      	nop

08018618 <__hi0bits>:
 8018618:	0c03      	lsrs	r3, r0, #16
 801861a:	041b      	lsls	r3, r3, #16
 801861c:	b9b3      	cbnz	r3, 801864c <__hi0bits+0x34>
 801861e:	0400      	lsls	r0, r0, #16
 8018620:	2310      	movs	r3, #16
 8018622:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8018626:	bf04      	itt	eq
 8018628:	0200      	lsleq	r0, r0, #8
 801862a:	3308      	addeq	r3, #8
 801862c:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8018630:	bf04      	itt	eq
 8018632:	0100      	lsleq	r0, r0, #4
 8018634:	3304      	addeq	r3, #4
 8018636:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 801863a:	bf04      	itt	eq
 801863c:	0080      	lsleq	r0, r0, #2
 801863e:	3302      	addeq	r3, #2
 8018640:	2800      	cmp	r0, #0
 8018642:	db07      	blt.n	8018654 <__hi0bits+0x3c>
 8018644:	0042      	lsls	r2, r0, #1
 8018646:	d403      	bmi.n	8018650 <__hi0bits+0x38>
 8018648:	2020      	movs	r0, #32
 801864a:	4770      	bx	lr
 801864c:	2300      	movs	r3, #0
 801864e:	e7e8      	b.n	8018622 <__hi0bits+0xa>
 8018650:	1c58      	adds	r0, r3, #1
 8018652:	4770      	bx	lr
 8018654:	4618      	mov	r0, r3
 8018656:	4770      	bx	lr

08018658 <__lo0bits>:
 8018658:	6803      	ldr	r3, [r0, #0]
 801865a:	f013 0207 	ands.w	r2, r3, #7
 801865e:	d007      	beq.n	8018670 <__lo0bits+0x18>
 8018660:	07d9      	lsls	r1, r3, #31
 8018662:	d420      	bmi.n	80186a6 <__lo0bits+0x4e>
 8018664:	079a      	lsls	r2, r3, #30
 8018666:	d420      	bmi.n	80186aa <__lo0bits+0x52>
 8018668:	089b      	lsrs	r3, r3, #2
 801866a:	6003      	str	r3, [r0, #0]
 801866c:	2002      	movs	r0, #2
 801866e:	4770      	bx	lr
 8018670:	b299      	uxth	r1, r3
 8018672:	b909      	cbnz	r1, 8018678 <__lo0bits+0x20>
 8018674:	0c1b      	lsrs	r3, r3, #16
 8018676:	2210      	movs	r2, #16
 8018678:	f013 0fff 	tst.w	r3, #255	; 0xff
 801867c:	bf04      	itt	eq
 801867e:	0a1b      	lsreq	r3, r3, #8
 8018680:	3208      	addeq	r2, #8
 8018682:	0719      	lsls	r1, r3, #28
 8018684:	bf04      	itt	eq
 8018686:	091b      	lsreq	r3, r3, #4
 8018688:	3204      	addeq	r2, #4
 801868a:	0799      	lsls	r1, r3, #30
 801868c:	bf04      	itt	eq
 801868e:	089b      	lsreq	r3, r3, #2
 8018690:	3202      	addeq	r2, #2
 8018692:	07d9      	lsls	r1, r3, #31
 8018694:	d404      	bmi.n	80186a0 <__lo0bits+0x48>
 8018696:	085b      	lsrs	r3, r3, #1
 8018698:	d101      	bne.n	801869e <__lo0bits+0x46>
 801869a:	2020      	movs	r0, #32
 801869c:	4770      	bx	lr
 801869e:	3201      	adds	r2, #1
 80186a0:	6003      	str	r3, [r0, #0]
 80186a2:	4610      	mov	r0, r2
 80186a4:	4770      	bx	lr
 80186a6:	2000      	movs	r0, #0
 80186a8:	4770      	bx	lr
 80186aa:	085b      	lsrs	r3, r3, #1
 80186ac:	6003      	str	r3, [r0, #0]
 80186ae:	2001      	movs	r0, #1
 80186b0:	4770      	bx	lr
 80186b2:	bf00      	nop

080186b4 <__i2b>:
 80186b4:	b510      	push	{r4, lr}
 80186b6:	460c      	mov	r4, r1
 80186b8:	2101      	movs	r1, #1
 80186ba:	f7ff ff3b 	bl	8018534 <_Balloc>
 80186be:	2201      	movs	r2, #1
 80186c0:	6144      	str	r4, [r0, #20]
 80186c2:	6102      	str	r2, [r0, #16]
 80186c4:	bd10      	pop	{r4, pc}
 80186c6:	bf00      	nop

080186c8 <__multiply>:
 80186c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80186cc:	690f      	ldr	r7, [r1, #16]
 80186ce:	6916      	ldr	r6, [r2, #16]
 80186d0:	42b7      	cmp	r7, r6
 80186d2:	b083      	sub	sp, #12
 80186d4:	460d      	mov	r5, r1
 80186d6:	4614      	mov	r4, r2
 80186d8:	f2c0 808d 	blt.w	80187f6 <__multiply+0x12e>
 80186dc:	4633      	mov	r3, r6
 80186de:	463e      	mov	r6, r7
 80186e0:	461f      	mov	r7, r3
 80186e2:	68ab      	ldr	r3, [r5, #8]
 80186e4:	6869      	ldr	r1, [r5, #4]
 80186e6:	eb06 0807 	add.w	r8, r6, r7
 80186ea:	4598      	cmp	r8, r3
 80186ec:	bfc8      	it	gt
 80186ee:	3101      	addgt	r1, #1
 80186f0:	f7ff ff20 	bl	8018534 <_Balloc>
 80186f4:	f100 0c14 	add.w	ip, r0, #20
 80186f8:	eb0c 0988 	add.w	r9, ip, r8, lsl #2
 80186fc:	45cc      	cmp	ip, r9
 80186fe:	9000      	str	r0, [sp, #0]
 8018700:	d205      	bcs.n	801870e <__multiply+0x46>
 8018702:	4663      	mov	r3, ip
 8018704:	2100      	movs	r1, #0
 8018706:	f843 1b04 	str.w	r1, [r3], #4
 801870a:	4599      	cmp	r9, r3
 801870c:	d8fb      	bhi.n	8018706 <__multiply+0x3e>
 801870e:	f104 0214 	add.w	r2, r4, #20
 8018712:	eb02 0a87 	add.w	sl, r2, r7, lsl #2
 8018716:	f105 0314 	add.w	r3, r5, #20
 801871a:	4552      	cmp	r2, sl
 801871c:	eb03 0e86 	add.w	lr, r3, r6, lsl #2
 8018720:	d254      	bcs.n	80187cc <__multiply+0x104>
 8018722:	f8cd 9004 	str.w	r9, [sp, #4]
 8018726:	4699      	mov	r9, r3
 8018728:	f852 3b04 	ldr.w	r3, [r2], #4
 801872c:	fa1f fb83 	uxth.w	fp, r3
 8018730:	f1bb 0f00 	cmp.w	fp, #0
 8018734:	d020      	beq.n	8018778 <__multiply+0xb0>
 8018736:	2000      	movs	r0, #0
 8018738:	464f      	mov	r7, r9
 801873a:	4666      	mov	r6, ip
 801873c:	4605      	mov	r5, r0
 801873e:	e000      	b.n	8018742 <__multiply+0x7a>
 8018740:	461e      	mov	r6, r3
 8018742:	f857 4b04 	ldr.w	r4, [r7], #4
 8018746:	6830      	ldr	r0, [r6, #0]
 8018748:	b2a1      	uxth	r1, r4
 801874a:	b283      	uxth	r3, r0
 801874c:	fb0b 3101 	mla	r1, fp, r1, r3
 8018750:	0c24      	lsrs	r4, r4, #16
 8018752:	0c00      	lsrs	r0, r0, #16
 8018754:	194b      	adds	r3, r1, r5
 8018756:	fb0b 0004 	mla	r0, fp, r4, r0
 801875a:	eb00 4013 	add.w	r0, r0, r3, lsr #16
 801875e:	b299      	uxth	r1, r3
 8018760:	4633      	mov	r3, r6
 8018762:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8018766:	45be      	cmp	lr, r7
 8018768:	ea4f 4510 	mov.w	r5, r0, lsr #16
 801876c:	f843 1b04 	str.w	r1, [r3], #4
 8018770:	d8e6      	bhi.n	8018740 <__multiply+0x78>
 8018772:	6075      	str	r5, [r6, #4]
 8018774:	f852 3c04 	ldr.w	r3, [r2, #-4]
 8018778:	ea5f 4b13 	movs.w	fp, r3, lsr #16
 801877c:	d020      	beq.n	80187c0 <__multiply+0xf8>
 801877e:	f8dc 3000 	ldr.w	r3, [ip]
 8018782:	4667      	mov	r7, ip
 8018784:	4618      	mov	r0, r3
 8018786:	464d      	mov	r5, r9
 8018788:	2100      	movs	r1, #0
 801878a:	e000      	b.n	801878e <__multiply+0xc6>
 801878c:	4637      	mov	r7, r6
 801878e:	882c      	ldrh	r4, [r5, #0]
 8018790:	0c00      	lsrs	r0, r0, #16
 8018792:	fb0b 0004 	mla	r0, fp, r4, r0
 8018796:	4401      	add	r1, r0
 8018798:	b29c      	uxth	r4, r3
 801879a:	463e      	mov	r6, r7
 801879c:	ea44 4301 	orr.w	r3, r4, r1, lsl #16
 80187a0:	f846 3b04 	str.w	r3, [r6], #4
 80187a4:	6878      	ldr	r0, [r7, #4]
 80187a6:	f855 4b04 	ldr.w	r4, [r5], #4
 80187aa:	b283      	uxth	r3, r0
 80187ac:	0c24      	lsrs	r4, r4, #16
 80187ae:	fb0b 3404 	mla	r4, fp, r4, r3
 80187b2:	eb04 4311 	add.w	r3, r4, r1, lsr #16
 80187b6:	45ae      	cmp	lr, r5
 80187b8:	ea4f 4113 	mov.w	r1, r3, lsr #16
 80187bc:	d8e6      	bhi.n	801878c <__multiply+0xc4>
 80187be:	607b      	str	r3, [r7, #4]
 80187c0:	4592      	cmp	sl, r2
 80187c2:	f10c 0c04 	add.w	ip, ip, #4
 80187c6:	d8af      	bhi.n	8018728 <__multiply+0x60>
 80187c8:	f8dd 9004 	ldr.w	r9, [sp, #4]
 80187cc:	f1b8 0f00 	cmp.w	r8, #0
 80187d0:	dd0b      	ble.n	80187ea <__multiply+0x122>
 80187d2:	f859 3c04 	ldr.w	r3, [r9, #-4]
 80187d6:	f1a9 0904 	sub.w	r9, r9, #4
 80187da:	b11b      	cbz	r3, 80187e4 <__multiply+0x11c>
 80187dc:	e005      	b.n	80187ea <__multiply+0x122>
 80187de:	f859 3d04 	ldr.w	r3, [r9, #-4]!
 80187e2:	b913      	cbnz	r3, 80187ea <__multiply+0x122>
 80187e4:	f1b8 0801 	subs.w	r8, r8, #1
 80187e8:	d1f9      	bne.n	80187de <__multiply+0x116>
 80187ea:	9800      	ldr	r0, [sp, #0]
 80187ec:	f8c0 8010 	str.w	r8, [r0, #16]
 80187f0:	b003      	add	sp, #12
 80187f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80187f6:	4615      	mov	r5, r2
 80187f8:	460c      	mov	r4, r1
 80187fa:	e772      	b.n	80186e2 <__multiply+0x1a>

080187fc <__pow5mult>:
 80187fc:	f012 0303 	ands.w	r3, r2, #3
 8018800:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018804:	4614      	mov	r4, r2
 8018806:	4607      	mov	r7, r0
 8018808:	460e      	mov	r6, r1
 801880a:	d12d      	bne.n	8018868 <__pow5mult+0x6c>
 801880c:	10a4      	asrs	r4, r4, #2
 801880e:	d01c      	beq.n	801884a <__pow5mult+0x4e>
 8018810:	6cbd      	ldr	r5, [r7, #72]	; 0x48
 8018812:	b395      	cbz	r5, 801887a <__pow5mult+0x7e>
 8018814:	07e3      	lsls	r3, r4, #31
 8018816:	f04f 0800 	mov.w	r8, #0
 801881a:	d406      	bmi.n	801882a <__pow5mult+0x2e>
 801881c:	1064      	asrs	r4, r4, #1
 801881e:	d014      	beq.n	801884a <__pow5mult+0x4e>
 8018820:	6828      	ldr	r0, [r5, #0]
 8018822:	b1a8      	cbz	r0, 8018850 <__pow5mult+0x54>
 8018824:	4605      	mov	r5, r0
 8018826:	07e3      	lsls	r3, r4, #31
 8018828:	d5f8      	bpl.n	801881c <__pow5mult+0x20>
 801882a:	4638      	mov	r0, r7
 801882c:	4631      	mov	r1, r6
 801882e:	462a      	mov	r2, r5
 8018830:	f7ff ff4a 	bl	80186c8 <__multiply>
 8018834:	b1b6      	cbz	r6, 8018864 <__pow5mult+0x68>
 8018836:	6872      	ldr	r2, [r6, #4]
 8018838:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 801883a:	1064      	asrs	r4, r4, #1
 801883c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8018840:	6031      	str	r1, [r6, #0]
 8018842:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
 8018846:	4606      	mov	r6, r0
 8018848:	d1ea      	bne.n	8018820 <__pow5mult+0x24>
 801884a:	4630      	mov	r0, r6
 801884c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018850:	4629      	mov	r1, r5
 8018852:	462a      	mov	r2, r5
 8018854:	4638      	mov	r0, r7
 8018856:	f7ff ff37 	bl	80186c8 <__multiply>
 801885a:	6028      	str	r0, [r5, #0]
 801885c:	f8c0 8000 	str.w	r8, [r0]
 8018860:	4605      	mov	r5, r0
 8018862:	e7e0      	b.n	8018826 <__pow5mult+0x2a>
 8018864:	4606      	mov	r6, r0
 8018866:	e7d9      	b.n	801881c <__pow5mult+0x20>
 8018868:	1e5a      	subs	r2, r3, #1
 801886a:	4d0b      	ldr	r5, [pc, #44]	; (8018898 <__pow5mult+0x9c>)
 801886c:	2300      	movs	r3, #0
 801886e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8018872:	f7ff fe8f 	bl	8018594 <__multadd>
 8018876:	4606      	mov	r6, r0
 8018878:	e7c8      	b.n	801880c <__pow5mult+0x10>
 801887a:	2101      	movs	r1, #1
 801887c:	4638      	mov	r0, r7
 801887e:	f7ff fe59 	bl	8018534 <_Balloc>
 8018882:	f240 2171 	movw	r1, #625	; 0x271
 8018886:	2201      	movs	r2, #1
 8018888:	2300      	movs	r3, #0
 801888a:	6141      	str	r1, [r0, #20]
 801888c:	6102      	str	r2, [r0, #16]
 801888e:	4605      	mov	r5, r0
 8018890:	64b8      	str	r0, [r7, #72]	; 0x48
 8018892:	6003      	str	r3, [r0, #0]
 8018894:	e7be      	b.n	8018814 <__pow5mult+0x18>
 8018896:	bf00      	nop
 8018898:	0802e608 	.word	0x0802e608

0801889c <__lshift>:
 801889c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80188a0:	690f      	ldr	r7, [r1, #16]
 80188a2:	688b      	ldr	r3, [r1, #8]
 80188a4:	ea4f 1962 	mov.w	r9, r2, asr #5
 80188a8:	444f      	add	r7, r9
 80188aa:	1c7d      	adds	r5, r7, #1
 80188ac:	429d      	cmp	r5, r3
 80188ae:	460e      	mov	r6, r1
 80188b0:	4614      	mov	r4, r2
 80188b2:	6849      	ldr	r1, [r1, #4]
 80188b4:	4680      	mov	r8, r0
 80188b6:	dd04      	ble.n	80188c2 <__lshift+0x26>
 80188b8:	005b      	lsls	r3, r3, #1
 80188ba:	429d      	cmp	r5, r3
 80188bc:	f101 0101 	add.w	r1, r1, #1
 80188c0:	dcfa      	bgt.n	80188b8 <__lshift+0x1c>
 80188c2:	4640      	mov	r0, r8
 80188c4:	f7ff fe36 	bl	8018534 <_Balloc>
 80188c8:	f1b9 0f00 	cmp.w	r9, #0
 80188cc:	f100 0114 	add.w	r1, r0, #20
 80188d0:	dd09      	ble.n	80188e6 <__lshift+0x4a>
 80188d2:	2300      	movs	r3, #0
 80188d4:	469e      	mov	lr, r3
 80188d6:	460a      	mov	r2, r1
 80188d8:	3301      	adds	r3, #1
 80188da:	454b      	cmp	r3, r9
 80188dc:	f842 eb04 	str.w	lr, [r2], #4
 80188e0:	d1fa      	bne.n	80188d8 <__lshift+0x3c>
 80188e2:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80188e6:	6932      	ldr	r2, [r6, #16]
 80188e8:	f106 0314 	add.w	r3, r6, #20
 80188ec:	f014 0c1f 	ands.w	ip, r4, #31
 80188f0:	eb03 0e82 	add.w	lr, r3, r2, lsl #2
 80188f4:	d01f      	beq.n	8018936 <__lshift+0x9a>
 80188f6:	f1cc 0920 	rsb	r9, ip, #32
 80188fa:	2200      	movs	r2, #0
 80188fc:	681c      	ldr	r4, [r3, #0]
 80188fe:	fa04 f40c 	lsl.w	r4, r4, ip
 8018902:	4314      	orrs	r4, r2
 8018904:	468a      	mov	sl, r1
 8018906:	f841 4b04 	str.w	r4, [r1], #4
 801890a:	f853 4b04 	ldr.w	r4, [r3], #4
 801890e:	459e      	cmp	lr, r3
 8018910:	fa24 f209 	lsr.w	r2, r4, r9
 8018914:	d8f2      	bhi.n	80188fc <__lshift+0x60>
 8018916:	f8ca 2004 	str.w	r2, [sl, #4]
 801891a:	b102      	cbz	r2, 801891e <__lshift+0x82>
 801891c:	1cbd      	adds	r5, r7, #2
 801891e:	f8d8 304c 	ldr.w	r3, [r8, #76]	; 0x4c
 8018922:	6872      	ldr	r2, [r6, #4]
 8018924:	3d01      	subs	r5, #1
 8018926:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801892a:	6105      	str	r5, [r0, #16]
 801892c:	6031      	str	r1, [r6, #0]
 801892e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
 8018932:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018936:	3904      	subs	r1, #4
 8018938:	f853 2b04 	ldr.w	r2, [r3], #4
 801893c:	f841 2f04 	str.w	r2, [r1, #4]!
 8018940:	459e      	cmp	lr, r3
 8018942:	d8f9      	bhi.n	8018938 <__lshift+0x9c>
 8018944:	e7eb      	b.n	801891e <__lshift+0x82>
 8018946:	bf00      	nop

08018948 <__mcmp>:
 8018948:	6902      	ldr	r2, [r0, #16]
 801894a:	690b      	ldr	r3, [r1, #16]
 801894c:	1ad2      	subs	r2, r2, r3
 801894e:	d113      	bne.n	8018978 <__mcmp+0x30>
 8018950:	009b      	lsls	r3, r3, #2
 8018952:	3014      	adds	r0, #20
 8018954:	3114      	adds	r1, #20
 8018956:	4419      	add	r1, r3
 8018958:	b410      	push	{r4}
 801895a:	4403      	add	r3, r0
 801895c:	e001      	b.n	8018962 <__mcmp+0x1a>
 801895e:	4298      	cmp	r0, r3
 8018960:	d20c      	bcs.n	801897c <__mcmp+0x34>
 8018962:	f853 4d04 	ldr.w	r4, [r3, #-4]!
 8018966:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 801896a:	4294      	cmp	r4, r2
 801896c:	d0f7      	beq.n	801895e <__mcmp+0x16>
 801896e:	d309      	bcc.n	8018984 <__mcmp+0x3c>
 8018970:	2001      	movs	r0, #1
 8018972:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018976:	4770      	bx	lr
 8018978:	4610      	mov	r0, r2
 801897a:	4770      	bx	lr
 801897c:	2000      	movs	r0, #0
 801897e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018982:	4770      	bx	lr
 8018984:	f04f 30ff 	mov.w	r0, #4294967295
 8018988:	f85d 4b04 	ldr.w	r4, [sp], #4
 801898c:	4770      	bx	lr
 801898e:	bf00      	nop

08018990 <__mdiff>:
 8018990:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018994:	460e      	mov	r6, r1
 8018996:	4605      	mov	r5, r0
 8018998:	4611      	mov	r1, r2
 801899a:	4630      	mov	r0, r6
 801899c:	4614      	mov	r4, r2
 801899e:	f7ff ffd3 	bl	8018948 <__mcmp>
 80189a2:	1e07      	subs	r7, r0, #0
 80189a4:	d054      	beq.n	8018a50 <__mdiff+0xc0>
 80189a6:	db4d      	blt.n	8018a44 <__mdiff+0xb4>
 80189a8:	f04f 0800 	mov.w	r8, #0
 80189ac:	6871      	ldr	r1, [r6, #4]
 80189ae:	4628      	mov	r0, r5
 80189b0:	f7ff fdc0 	bl	8018534 <_Balloc>
 80189b4:	6937      	ldr	r7, [r6, #16]
 80189b6:	6923      	ldr	r3, [r4, #16]
 80189b8:	f8c0 800c 	str.w	r8, [r0, #12]
 80189bc:	3614      	adds	r6, #20
 80189be:	f104 0214 	add.w	r2, r4, #20
 80189c2:	eb02 0c83 	add.w	ip, r2, r3, lsl #2
 80189c6:	f100 0514 	add.w	r5, r0, #20
 80189ca:	eb06 0e87 	add.w	lr, r6, r7, lsl #2
 80189ce:	2300      	movs	r3, #0
 80189d0:	f856 8b04 	ldr.w	r8, [r6], #4
 80189d4:	f852 4b04 	ldr.w	r4, [r2], #4
 80189d8:	fa13 f388 	uxtah	r3, r3, r8
 80189dc:	b2a1      	uxth	r1, r4
 80189de:	0c24      	lsrs	r4, r4, #16
 80189e0:	1a59      	subs	r1, r3, r1
 80189e2:	ebc4 4318 	rsb	r3, r4, r8, lsr #16
 80189e6:	eb03 4321 	add.w	r3, r3, r1, asr #16
 80189ea:	b289      	uxth	r1, r1
 80189ec:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80189f0:	4594      	cmp	ip, r2
 80189f2:	f845 1b04 	str.w	r1, [r5], #4
 80189f6:	ea4f 4323 	mov.w	r3, r3, asr #16
 80189fa:	4634      	mov	r4, r6
 80189fc:	d8e8      	bhi.n	80189d0 <__mdiff+0x40>
 80189fe:	45b6      	cmp	lr, r6
 8018a00:	46ac      	mov	ip, r5
 8018a02:	d915      	bls.n	8018a30 <__mdiff+0xa0>
 8018a04:	f854 2b04 	ldr.w	r2, [r4], #4
 8018a08:	fa13 f182 	uxtah	r1, r3, r2
 8018a0c:	0c13      	lsrs	r3, r2, #16
 8018a0e:	eb03 4321 	add.w	r3, r3, r1, asr #16
 8018a12:	b289      	uxth	r1, r1
 8018a14:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8018a18:	45a6      	cmp	lr, r4
 8018a1a:	f845 1b04 	str.w	r1, [r5], #4
 8018a1e:	ea4f 4323 	mov.w	r3, r3, asr #16
 8018a22:	d8ef      	bhi.n	8018a04 <__mdiff+0x74>
 8018a24:	43f6      	mvns	r6, r6
 8018a26:	4476      	add	r6, lr
 8018a28:	f026 0503 	bic.w	r5, r6, #3
 8018a2c:	3504      	adds	r5, #4
 8018a2e:	4465      	add	r5, ip
 8018a30:	3d04      	subs	r5, #4
 8018a32:	b921      	cbnz	r1, 8018a3e <__mdiff+0xae>
 8018a34:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 8018a38:	3f01      	subs	r7, #1
 8018a3a:	2b00      	cmp	r3, #0
 8018a3c:	d0fa      	beq.n	8018a34 <__mdiff+0xa4>
 8018a3e:	6107      	str	r7, [r0, #16]
 8018a40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018a44:	4633      	mov	r3, r6
 8018a46:	f04f 0801 	mov.w	r8, #1
 8018a4a:	4626      	mov	r6, r4
 8018a4c:	461c      	mov	r4, r3
 8018a4e:	e7ad      	b.n	80189ac <__mdiff+0x1c>
 8018a50:	4628      	mov	r0, r5
 8018a52:	4639      	mov	r1, r7
 8018a54:	f7ff fd6e 	bl	8018534 <_Balloc>
 8018a58:	2301      	movs	r3, #1
 8018a5a:	6147      	str	r7, [r0, #20]
 8018a5c:	6103      	str	r3, [r0, #16]
 8018a5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018a62:	bf00      	nop

08018a64 <__d2b>:
 8018a64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018a68:	b082      	sub	sp, #8
 8018a6a:	2101      	movs	r1, #1
 8018a6c:	461c      	mov	r4, r3
 8018a6e:	f3c3 570a 	ubfx	r7, r3, #20, #11
 8018a72:	4615      	mov	r5, r2
 8018a74:	9e08      	ldr	r6, [sp, #32]
 8018a76:	f7ff fd5d 	bl	8018534 <_Balloc>
 8018a7a:	f3c4 0413 	ubfx	r4, r4, #0, #20
 8018a7e:	4680      	mov	r8, r0
 8018a80:	b10f      	cbz	r7, 8018a86 <__d2b+0x22>
 8018a82:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
 8018a86:	9401      	str	r4, [sp, #4]
 8018a88:	b31d      	cbz	r5, 8018ad2 <__d2b+0x6e>
 8018a8a:	a802      	add	r0, sp, #8
 8018a8c:	f840 5d08 	str.w	r5, [r0, #-8]!
 8018a90:	f7ff fde2 	bl	8018658 <__lo0bits>
 8018a94:	2800      	cmp	r0, #0
 8018a96:	d134      	bne.n	8018b02 <__d2b+0x9e>
 8018a98:	e89d 000c 	ldmia.w	sp, {r2, r3}
 8018a9c:	f8c8 2014 	str.w	r2, [r8, #20]
 8018aa0:	2b00      	cmp	r3, #0
 8018aa2:	bf14      	ite	ne
 8018aa4:	2402      	movne	r4, #2
 8018aa6:	2401      	moveq	r4, #1
 8018aa8:	f8c8 3018 	str.w	r3, [r8, #24]
 8018aac:	f8c8 4010 	str.w	r4, [r8, #16]
 8018ab0:	b9df      	cbnz	r7, 8018aea <__d2b+0x86>
 8018ab2:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 8018ab6:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8018aba:	6030      	str	r0, [r6, #0]
 8018abc:	6918      	ldr	r0, [r3, #16]
 8018abe:	f7ff fdab 	bl	8018618 <__hi0bits>
 8018ac2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018ac4:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
 8018ac8:	6018      	str	r0, [r3, #0]
 8018aca:	4640      	mov	r0, r8
 8018acc:	b002      	add	sp, #8
 8018ace:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018ad2:	a801      	add	r0, sp, #4
 8018ad4:	f7ff fdc0 	bl	8018658 <__lo0bits>
 8018ad8:	2401      	movs	r4, #1
 8018ada:	9b01      	ldr	r3, [sp, #4]
 8018adc:	f8c8 3014 	str.w	r3, [r8, #20]
 8018ae0:	3020      	adds	r0, #32
 8018ae2:	f8c8 4010 	str.w	r4, [r8, #16]
 8018ae6:	2f00      	cmp	r7, #0
 8018ae8:	d0e3      	beq.n	8018ab2 <__d2b+0x4e>
 8018aea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018aec:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
 8018af0:	4407      	add	r7, r0
 8018af2:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8018af6:	6037      	str	r7, [r6, #0]
 8018af8:	6018      	str	r0, [r3, #0]
 8018afa:	4640      	mov	r0, r8
 8018afc:	b002      	add	sp, #8
 8018afe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018b02:	e89d 000c 	ldmia.w	sp, {r2, r3}
 8018b06:	f1c0 0120 	rsb	r1, r0, #32
 8018b0a:	fa03 f101 	lsl.w	r1, r3, r1
 8018b0e:	430a      	orrs	r2, r1
 8018b10:	40c3      	lsrs	r3, r0
 8018b12:	9301      	str	r3, [sp, #4]
 8018b14:	f8c8 2014 	str.w	r2, [r8, #20]
 8018b18:	e7c2      	b.n	8018aa0 <__d2b+0x3c>
 8018b1a:	bf00      	nop

08018b1c <_realloc_r>:
 8018b1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b20:	4617      	mov	r7, r2
 8018b22:	b083      	sub	sp, #12
 8018b24:	460e      	mov	r6, r1
 8018b26:	2900      	cmp	r1, #0
 8018b28:	f000 80e7 	beq.w	8018cfa <_realloc_r+0x1de>
 8018b2c:	4681      	mov	r9, r0
 8018b2e:	f107 050b 	add.w	r5, r7, #11
 8018b32:	f7ff fcfb 	bl	801852c <__malloc_lock>
 8018b36:	f856 3c04 	ldr.w	r3, [r6, #-4]
 8018b3a:	2d16      	cmp	r5, #22
 8018b3c:	f023 0403 	bic.w	r4, r3, #3
 8018b40:	f1a6 0808 	sub.w	r8, r6, #8
 8018b44:	d84c      	bhi.n	8018be0 <_realloc_r+0xc4>
 8018b46:	2210      	movs	r2, #16
 8018b48:	4615      	mov	r5, r2
 8018b4a:	42af      	cmp	r7, r5
 8018b4c:	d84d      	bhi.n	8018bea <_realloc_r+0xce>
 8018b4e:	4294      	cmp	r4, r2
 8018b50:	f280 8084 	bge.w	8018c5c <_realloc_r+0x140>
 8018b54:	f8df b3ac 	ldr.w	fp, [pc, #940]	; 8018f04 <_realloc_r+0x3e8>
 8018b58:	f8db 0008 	ldr.w	r0, [fp, #8]
 8018b5c:	eb08 0104 	add.w	r1, r8, r4
 8018b60:	4288      	cmp	r0, r1
 8018b62:	f000 80d6 	beq.w	8018d12 <_realloc_r+0x1f6>
 8018b66:	6848      	ldr	r0, [r1, #4]
 8018b68:	f020 0e01 	bic.w	lr, r0, #1
 8018b6c:	448e      	add	lr, r1
 8018b6e:	f8de e004 	ldr.w	lr, [lr, #4]
 8018b72:	f01e 0f01 	tst.w	lr, #1
 8018b76:	d13f      	bne.n	8018bf8 <_realloc_r+0xdc>
 8018b78:	f020 0003 	bic.w	r0, r0, #3
 8018b7c:	4420      	add	r0, r4
 8018b7e:	4290      	cmp	r0, r2
 8018b80:	f280 80c1 	bge.w	8018d06 <_realloc_r+0x1ea>
 8018b84:	07db      	lsls	r3, r3, #31
 8018b86:	f100 808f 	bmi.w	8018ca8 <_realloc_r+0x18c>
 8018b8a:	f856 3c08 	ldr.w	r3, [r6, #-8]
 8018b8e:	ebc3 0a08 	rsb	sl, r3, r8
 8018b92:	f8da 3004 	ldr.w	r3, [sl, #4]
 8018b96:	f023 0303 	bic.w	r3, r3, #3
 8018b9a:	eb00 0e03 	add.w	lr, r0, r3
 8018b9e:	4596      	cmp	lr, r2
 8018ba0:	db34      	blt.n	8018c0c <_realloc_r+0xf0>
 8018ba2:	68cb      	ldr	r3, [r1, #12]
 8018ba4:	688a      	ldr	r2, [r1, #8]
 8018ba6:	4657      	mov	r7, sl
 8018ba8:	60d3      	str	r3, [r2, #12]
 8018baa:	609a      	str	r2, [r3, #8]
 8018bac:	f857 1f08 	ldr.w	r1, [r7, #8]!
 8018bb0:	f8da 300c 	ldr.w	r3, [sl, #12]
 8018bb4:	60cb      	str	r3, [r1, #12]
 8018bb6:	1f22      	subs	r2, r4, #4
 8018bb8:	2a24      	cmp	r2, #36	; 0x24
 8018bba:	6099      	str	r1, [r3, #8]
 8018bbc:	f200 8136 	bhi.w	8018e2c <_realloc_r+0x310>
 8018bc0:	2a13      	cmp	r2, #19
 8018bc2:	f240 80fd 	bls.w	8018dc0 <_realloc_r+0x2a4>
 8018bc6:	6833      	ldr	r3, [r6, #0]
 8018bc8:	f8ca 3008 	str.w	r3, [sl, #8]
 8018bcc:	6873      	ldr	r3, [r6, #4]
 8018bce:	f8ca 300c 	str.w	r3, [sl, #12]
 8018bd2:	2a1b      	cmp	r2, #27
 8018bd4:	f200 8140 	bhi.w	8018e58 <_realloc_r+0x33c>
 8018bd8:	3608      	adds	r6, #8
 8018bda:	f10a 0310 	add.w	r3, sl, #16
 8018bde:	e0f0      	b.n	8018dc2 <_realloc_r+0x2a6>
 8018be0:	f025 0507 	bic.w	r5, r5, #7
 8018be4:	2d00      	cmp	r5, #0
 8018be6:	462a      	mov	r2, r5
 8018be8:	daaf      	bge.n	8018b4a <_realloc_r+0x2e>
 8018bea:	230c      	movs	r3, #12
 8018bec:	2000      	movs	r0, #0
 8018bee:	f8c9 3000 	str.w	r3, [r9]
 8018bf2:	b003      	add	sp, #12
 8018bf4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018bf8:	07d9      	lsls	r1, r3, #31
 8018bfa:	d455      	bmi.n	8018ca8 <_realloc_r+0x18c>
 8018bfc:	f856 3c08 	ldr.w	r3, [r6, #-8]
 8018c00:	ebc3 0a08 	rsb	sl, r3, r8
 8018c04:	f8da 3004 	ldr.w	r3, [sl, #4]
 8018c08:	f023 0303 	bic.w	r3, r3, #3
 8018c0c:	4423      	add	r3, r4
 8018c0e:	4293      	cmp	r3, r2
 8018c10:	db4a      	blt.n	8018ca8 <_realloc_r+0x18c>
 8018c12:	4657      	mov	r7, sl
 8018c14:	f8da 100c 	ldr.w	r1, [sl, #12]
 8018c18:	f857 0f08 	ldr.w	r0, [r7, #8]!
 8018c1c:	1f22      	subs	r2, r4, #4
 8018c1e:	2a24      	cmp	r2, #36	; 0x24
 8018c20:	60c1      	str	r1, [r0, #12]
 8018c22:	6088      	str	r0, [r1, #8]
 8018c24:	f200 810e 	bhi.w	8018e44 <_realloc_r+0x328>
 8018c28:	2a13      	cmp	r2, #19
 8018c2a:	f240 8109 	bls.w	8018e40 <_realloc_r+0x324>
 8018c2e:	6831      	ldr	r1, [r6, #0]
 8018c30:	f8ca 1008 	str.w	r1, [sl, #8]
 8018c34:	6871      	ldr	r1, [r6, #4]
 8018c36:	f8ca 100c 	str.w	r1, [sl, #12]
 8018c3a:	2a1b      	cmp	r2, #27
 8018c3c:	f200 8121 	bhi.w	8018e82 <_realloc_r+0x366>
 8018c40:	3608      	adds	r6, #8
 8018c42:	f10a 0210 	add.w	r2, sl, #16
 8018c46:	6831      	ldr	r1, [r6, #0]
 8018c48:	6011      	str	r1, [r2, #0]
 8018c4a:	6871      	ldr	r1, [r6, #4]
 8018c4c:	6051      	str	r1, [r2, #4]
 8018c4e:	68b1      	ldr	r1, [r6, #8]
 8018c50:	6091      	str	r1, [r2, #8]
 8018c52:	461c      	mov	r4, r3
 8018c54:	f8da 3004 	ldr.w	r3, [sl, #4]
 8018c58:	463e      	mov	r6, r7
 8018c5a:	46d0      	mov	r8, sl
 8018c5c:	1b62      	subs	r2, r4, r5
 8018c5e:	2a0f      	cmp	r2, #15
 8018c60:	f003 0301 	and.w	r3, r3, #1
 8018c64:	d80e      	bhi.n	8018c84 <_realloc_r+0x168>
 8018c66:	4323      	orrs	r3, r4
 8018c68:	4444      	add	r4, r8
 8018c6a:	f8c8 3004 	str.w	r3, [r8, #4]
 8018c6e:	6863      	ldr	r3, [r4, #4]
 8018c70:	f043 0301 	orr.w	r3, r3, #1
 8018c74:	6063      	str	r3, [r4, #4]
 8018c76:	4648      	mov	r0, r9
 8018c78:	f7ff fc5a 	bl	8018530 <__malloc_unlock>
 8018c7c:	4630      	mov	r0, r6
 8018c7e:	b003      	add	sp, #12
 8018c80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018c84:	eb08 0105 	add.w	r1, r8, r5
 8018c88:	431d      	orrs	r5, r3
 8018c8a:	f042 0301 	orr.w	r3, r2, #1
 8018c8e:	440a      	add	r2, r1
 8018c90:	f8c8 5004 	str.w	r5, [r8, #4]
 8018c94:	604b      	str	r3, [r1, #4]
 8018c96:	6853      	ldr	r3, [r2, #4]
 8018c98:	f043 0301 	orr.w	r3, r3, #1
 8018c9c:	3108      	adds	r1, #8
 8018c9e:	6053      	str	r3, [r2, #4]
 8018ca0:	4648      	mov	r0, r9
 8018ca2:	f7fe fe5f 	bl	8017964 <_free_r>
 8018ca6:	e7e6      	b.n	8018c76 <_realloc_r+0x15a>
 8018ca8:	4639      	mov	r1, r7
 8018caa:	4648      	mov	r0, r9
 8018cac:	f7ff f966 	bl	8017f7c <_malloc_r>
 8018cb0:	4607      	mov	r7, r0
 8018cb2:	b1d8      	cbz	r0, 8018cec <_realloc_r+0x1d0>
 8018cb4:	f856 3c04 	ldr.w	r3, [r6, #-4]
 8018cb8:	f023 0201 	bic.w	r2, r3, #1
 8018cbc:	4442      	add	r2, r8
 8018cbe:	f1a0 0108 	sub.w	r1, r0, #8
 8018cc2:	4291      	cmp	r1, r2
 8018cc4:	f000 80ac 	beq.w	8018e20 <_realloc_r+0x304>
 8018cc8:	1f22      	subs	r2, r4, #4
 8018cca:	2a24      	cmp	r2, #36	; 0x24
 8018ccc:	f200 8099 	bhi.w	8018e02 <_realloc_r+0x2e6>
 8018cd0:	2a13      	cmp	r2, #19
 8018cd2:	d86a      	bhi.n	8018daa <_realloc_r+0x28e>
 8018cd4:	4603      	mov	r3, r0
 8018cd6:	4632      	mov	r2, r6
 8018cd8:	6811      	ldr	r1, [r2, #0]
 8018cda:	6019      	str	r1, [r3, #0]
 8018cdc:	6851      	ldr	r1, [r2, #4]
 8018cde:	6059      	str	r1, [r3, #4]
 8018ce0:	6892      	ldr	r2, [r2, #8]
 8018ce2:	609a      	str	r2, [r3, #8]
 8018ce4:	4631      	mov	r1, r6
 8018ce6:	4648      	mov	r0, r9
 8018ce8:	f7fe fe3c 	bl	8017964 <_free_r>
 8018cec:	4648      	mov	r0, r9
 8018cee:	f7ff fc1f 	bl	8018530 <__malloc_unlock>
 8018cf2:	4638      	mov	r0, r7
 8018cf4:	b003      	add	sp, #12
 8018cf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018cfa:	4611      	mov	r1, r2
 8018cfc:	b003      	add	sp, #12
 8018cfe:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d02:	f7ff b93b 	b.w	8017f7c <_malloc_r>
 8018d06:	68ca      	ldr	r2, [r1, #12]
 8018d08:	6889      	ldr	r1, [r1, #8]
 8018d0a:	4604      	mov	r4, r0
 8018d0c:	60ca      	str	r2, [r1, #12]
 8018d0e:	6091      	str	r1, [r2, #8]
 8018d10:	e7a4      	b.n	8018c5c <_realloc_r+0x140>
 8018d12:	6841      	ldr	r1, [r0, #4]
 8018d14:	f021 0103 	bic.w	r1, r1, #3
 8018d18:	4421      	add	r1, r4
 8018d1a:	f105 0010 	add.w	r0, r5, #16
 8018d1e:	4281      	cmp	r1, r0
 8018d20:	da5b      	bge.n	8018dda <_realloc_r+0x2be>
 8018d22:	07db      	lsls	r3, r3, #31
 8018d24:	d4c0      	bmi.n	8018ca8 <_realloc_r+0x18c>
 8018d26:	f856 3c08 	ldr.w	r3, [r6, #-8]
 8018d2a:	ebc3 0a08 	rsb	sl, r3, r8
 8018d2e:	f8da 3004 	ldr.w	r3, [sl, #4]
 8018d32:	f023 0303 	bic.w	r3, r3, #3
 8018d36:	eb01 0c03 	add.w	ip, r1, r3
 8018d3a:	4560      	cmp	r0, ip
 8018d3c:	f73f af66 	bgt.w	8018c0c <_realloc_r+0xf0>
 8018d40:	4657      	mov	r7, sl
 8018d42:	f8da 300c 	ldr.w	r3, [sl, #12]
 8018d46:	f857 1f08 	ldr.w	r1, [r7, #8]!
 8018d4a:	1f22      	subs	r2, r4, #4
 8018d4c:	2a24      	cmp	r2, #36	; 0x24
 8018d4e:	60cb      	str	r3, [r1, #12]
 8018d50:	6099      	str	r1, [r3, #8]
 8018d52:	f200 80b8 	bhi.w	8018ec6 <_realloc_r+0x3aa>
 8018d56:	2a13      	cmp	r2, #19
 8018d58:	f240 80a9 	bls.w	8018eae <_realloc_r+0x392>
 8018d5c:	6833      	ldr	r3, [r6, #0]
 8018d5e:	f8ca 3008 	str.w	r3, [sl, #8]
 8018d62:	6873      	ldr	r3, [r6, #4]
 8018d64:	f8ca 300c 	str.w	r3, [sl, #12]
 8018d68:	2a1b      	cmp	r2, #27
 8018d6a:	f200 80b5 	bhi.w	8018ed8 <_realloc_r+0x3bc>
 8018d6e:	3608      	adds	r6, #8
 8018d70:	f10a 0310 	add.w	r3, sl, #16
 8018d74:	6832      	ldr	r2, [r6, #0]
 8018d76:	601a      	str	r2, [r3, #0]
 8018d78:	6872      	ldr	r2, [r6, #4]
 8018d7a:	605a      	str	r2, [r3, #4]
 8018d7c:	68b2      	ldr	r2, [r6, #8]
 8018d7e:	609a      	str	r2, [r3, #8]
 8018d80:	eb0a 0205 	add.w	r2, sl, r5
 8018d84:	ebc5 030c 	rsb	r3, r5, ip
 8018d88:	f043 0301 	orr.w	r3, r3, #1
 8018d8c:	f8cb 2008 	str.w	r2, [fp, #8]
 8018d90:	6053      	str	r3, [r2, #4]
 8018d92:	f8da 3004 	ldr.w	r3, [sl, #4]
 8018d96:	f003 0301 	and.w	r3, r3, #1
 8018d9a:	431d      	orrs	r5, r3
 8018d9c:	4648      	mov	r0, r9
 8018d9e:	f8ca 5004 	str.w	r5, [sl, #4]
 8018da2:	f7ff fbc5 	bl	8018530 <__malloc_unlock>
 8018da6:	4638      	mov	r0, r7
 8018da8:	e769      	b.n	8018c7e <_realloc_r+0x162>
 8018daa:	6833      	ldr	r3, [r6, #0]
 8018dac:	6003      	str	r3, [r0, #0]
 8018dae:	6873      	ldr	r3, [r6, #4]
 8018db0:	6043      	str	r3, [r0, #4]
 8018db2:	2a1b      	cmp	r2, #27
 8018db4:	d829      	bhi.n	8018e0a <_realloc_r+0x2ee>
 8018db6:	f100 0308 	add.w	r3, r0, #8
 8018dba:	f106 0208 	add.w	r2, r6, #8
 8018dbe:	e78b      	b.n	8018cd8 <_realloc_r+0x1bc>
 8018dc0:	463b      	mov	r3, r7
 8018dc2:	6832      	ldr	r2, [r6, #0]
 8018dc4:	601a      	str	r2, [r3, #0]
 8018dc6:	6872      	ldr	r2, [r6, #4]
 8018dc8:	605a      	str	r2, [r3, #4]
 8018dca:	68b2      	ldr	r2, [r6, #8]
 8018dcc:	609a      	str	r2, [r3, #8]
 8018dce:	463e      	mov	r6, r7
 8018dd0:	4674      	mov	r4, lr
 8018dd2:	f8da 3004 	ldr.w	r3, [sl, #4]
 8018dd6:	46d0      	mov	r8, sl
 8018dd8:	e740      	b.n	8018c5c <_realloc_r+0x140>
 8018dda:	eb08 0205 	add.w	r2, r8, r5
 8018dde:	1b4b      	subs	r3, r1, r5
 8018de0:	f043 0301 	orr.w	r3, r3, #1
 8018de4:	f8cb 2008 	str.w	r2, [fp, #8]
 8018de8:	6053      	str	r3, [r2, #4]
 8018dea:	f856 3c04 	ldr.w	r3, [r6, #-4]
 8018dee:	f003 0301 	and.w	r3, r3, #1
 8018df2:	431d      	orrs	r5, r3
 8018df4:	4648      	mov	r0, r9
 8018df6:	f846 5c04 	str.w	r5, [r6, #-4]
 8018dfa:	f7ff fb99 	bl	8018530 <__malloc_unlock>
 8018dfe:	4630      	mov	r0, r6
 8018e00:	e73d      	b.n	8018c7e <_realloc_r+0x162>
 8018e02:	4631      	mov	r1, r6
 8018e04:	f7fa fdac 	bl	8013960 <memmove>
 8018e08:	e76c      	b.n	8018ce4 <_realloc_r+0x1c8>
 8018e0a:	68b3      	ldr	r3, [r6, #8]
 8018e0c:	6083      	str	r3, [r0, #8]
 8018e0e:	68f3      	ldr	r3, [r6, #12]
 8018e10:	60c3      	str	r3, [r0, #12]
 8018e12:	2a24      	cmp	r2, #36	; 0x24
 8018e14:	d02c      	beq.n	8018e70 <_realloc_r+0x354>
 8018e16:	f100 0310 	add.w	r3, r0, #16
 8018e1a:	f106 0210 	add.w	r2, r6, #16
 8018e1e:	e75b      	b.n	8018cd8 <_realloc_r+0x1bc>
 8018e20:	f850 2c04 	ldr.w	r2, [r0, #-4]
 8018e24:	f022 0203 	bic.w	r2, r2, #3
 8018e28:	4414      	add	r4, r2
 8018e2a:	e717      	b.n	8018c5c <_realloc_r+0x140>
 8018e2c:	4631      	mov	r1, r6
 8018e2e:	4638      	mov	r0, r7
 8018e30:	4674      	mov	r4, lr
 8018e32:	463e      	mov	r6, r7
 8018e34:	f7fa fd94 	bl	8013960 <memmove>
 8018e38:	46d0      	mov	r8, sl
 8018e3a:	f8da 3004 	ldr.w	r3, [sl, #4]
 8018e3e:	e70d      	b.n	8018c5c <_realloc_r+0x140>
 8018e40:	463a      	mov	r2, r7
 8018e42:	e700      	b.n	8018c46 <_realloc_r+0x12a>
 8018e44:	4631      	mov	r1, r6
 8018e46:	4638      	mov	r0, r7
 8018e48:	461c      	mov	r4, r3
 8018e4a:	463e      	mov	r6, r7
 8018e4c:	f7fa fd88 	bl	8013960 <memmove>
 8018e50:	46d0      	mov	r8, sl
 8018e52:	f8da 3004 	ldr.w	r3, [sl, #4]
 8018e56:	e701      	b.n	8018c5c <_realloc_r+0x140>
 8018e58:	68b3      	ldr	r3, [r6, #8]
 8018e5a:	f8ca 3010 	str.w	r3, [sl, #16]
 8018e5e:	68f3      	ldr	r3, [r6, #12]
 8018e60:	f8ca 3014 	str.w	r3, [sl, #20]
 8018e64:	2a24      	cmp	r2, #36	; 0x24
 8018e66:	d018      	beq.n	8018e9a <_realloc_r+0x37e>
 8018e68:	3610      	adds	r6, #16
 8018e6a:	f10a 0318 	add.w	r3, sl, #24
 8018e6e:	e7a8      	b.n	8018dc2 <_realloc_r+0x2a6>
 8018e70:	6933      	ldr	r3, [r6, #16]
 8018e72:	6103      	str	r3, [r0, #16]
 8018e74:	6973      	ldr	r3, [r6, #20]
 8018e76:	6143      	str	r3, [r0, #20]
 8018e78:	f106 0218 	add.w	r2, r6, #24
 8018e7c:	f100 0318 	add.w	r3, r0, #24
 8018e80:	e72a      	b.n	8018cd8 <_realloc_r+0x1bc>
 8018e82:	68b1      	ldr	r1, [r6, #8]
 8018e84:	f8ca 1010 	str.w	r1, [sl, #16]
 8018e88:	68f1      	ldr	r1, [r6, #12]
 8018e8a:	f8ca 1014 	str.w	r1, [sl, #20]
 8018e8e:	2a24      	cmp	r2, #36	; 0x24
 8018e90:	d00f      	beq.n	8018eb2 <_realloc_r+0x396>
 8018e92:	3610      	adds	r6, #16
 8018e94:	f10a 0218 	add.w	r2, sl, #24
 8018e98:	e6d5      	b.n	8018c46 <_realloc_r+0x12a>
 8018e9a:	6933      	ldr	r3, [r6, #16]
 8018e9c:	f8ca 3018 	str.w	r3, [sl, #24]
 8018ea0:	6973      	ldr	r3, [r6, #20]
 8018ea2:	f8ca 301c 	str.w	r3, [sl, #28]
 8018ea6:	3618      	adds	r6, #24
 8018ea8:	f10a 0320 	add.w	r3, sl, #32
 8018eac:	e789      	b.n	8018dc2 <_realloc_r+0x2a6>
 8018eae:	463b      	mov	r3, r7
 8018eb0:	e760      	b.n	8018d74 <_realloc_r+0x258>
 8018eb2:	6932      	ldr	r2, [r6, #16]
 8018eb4:	f8ca 2018 	str.w	r2, [sl, #24]
 8018eb8:	6972      	ldr	r2, [r6, #20]
 8018eba:	f8ca 201c 	str.w	r2, [sl, #28]
 8018ebe:	3618      	adds	r6, #24
 8018ec0:	f10a 0220 	add.w	r2, sl, #32
 8018ec4:	e6bf      	b.n	8018c46 <_realloc_r+0x12a>
 8018ec6:	4631      	mov	r1, r6
 8018ec8:	4638      	mov	r0, r7
 8018eca:	f8cd c004 	str.w	ip, [sp, #4]
 8018ece:	f7fa fd47 	bl	8013960 <memmove>
 8018ed2:	f8dd c004 	ldr.w	ip, [sp, #4]
 8018ed6:	e753      	b.n	8018d80 <_realloc_r+0x264>
 8018ed8:	68b3      	ldr	r3, [r6, #8]
 8018eda:	f8ca 3010 	str.w	r3, [sl, #16]
 8018ede:	68f3      	ldr	r3, [r6, #12]
 8018ee0:	f8ca 3014 	str.w	r3, [sl, #20]
 8018ee4:	2a24      	cmp	r2, #36	; 0x24
 8018ee6:	d003      	beq.n	8018ef0 <_realloc_r+0x3d4>
 8018ee8:	3610      	adds	r6, #16
 8018eea:	f10a 0318 	add.w	r3, sl, #24
 8018eee:	e741      	b.n	8018d74 <_realloc_r+0x258>
 8018ef0:	6933      	ldr	r3, [r6, #16]
 8018ef2:	f8ca 3018 	str.w	r3, [sl, #24]
 8018ef6:	6973      	ldr	r3, [r6, #20]
 8018ef8:	f8ca 301c 	str.w	r3, [sl, #28]
 8018efc:	3618      	adds	r6, #24
 8018efe:	f10a 0320 	add.w	r3, sl, #32
 8018f02:	e737      	b.n	8018d74 <_realloc_r+0x258>
 8018f04:	20000760 	.word	0x20000760

08018f08 <__fpclassifyd>:
 8018f08:	b410      	push	{r4}
 8018f0a:	f031 4400 	bics.w	r4, r1, #2147483648	; 0x80000000
 8018f0e:	d008      	beq.n	8018f22 <__fpclassifyd+0x1a>
 8018f10:	4b11      	ldr	r3, [pc, #68]	; (8018f58 <__fpclassifyd+0x50>)
 8018f12:	f5a1 1280 	sub.w	r2, r1, #1048576	; 0x100000
 8018f16:	429a      	cmp	r2, r3
 8018f18:	d808      	bhi.n	8018f2c <__fpclassifyd+0x24>
 8018f1a:	2004      	movs	r0, #4
 8018f1c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018f20:	4770      	bx	lr
 8018f22:	b918      	cbnz	r0, 8018f2c <__fpclassifyd+0x24>
 8018f24:	2002      	movs	r0, #2
 8018f26:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018f2a:	4770      	bx	lr
 8018f2c:	f101 41ff 	add.w	r1, r1, #2139095040	; 0x7f800000
 8018f30:	4b09      	ldr	r3, [pc, #36]	; (8018f58 <__fpclassifyd+0x50>)
 8018f32:	f501 01e0 	add.w	r1, r1, #7340032	; 0x700000
 8018f36:	4299      	cmp	r1, r3
 8018f38:	d9ef      	bls.n	8018f1a <__fpclassifyd+0x12>
 8018f3a:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
 8018f3e:	d201      	bcs.n	8018f44 <__fpclassifyd+0x3c>
 8018f40:	2003      	movs	r0, #3
 8018f42:	e7eb      	b.n	8018f1c <__fpclassifyd+0x14>
 8018f44:	4b05      	ldr	r3, [pc, #20]	; (8018f5c <__fpclassifyd+0x54>)
 8018f46:	429c      	cmp	r4, r3
 8018f48:	d001      	beq.n	8018f4e <__fpclassifyd+0x46>
 8018f4a:	2000      	movs	r0, #0
 8018f4c:	e7e6      	b.n	8018f1c <__fpclassifyd+0x14>
 8018f4e:	fab0 f080 	clz	r0, r0
 8018f52:	0940      	lsrs	r0, r0, #5
 8018f54:	e7e2      	b.n	8018f1c <__fpclassifyd+0x14>
 8018f56:	bf00      	nop
 8018f58:	7fdfffff 	.word	0x7fdfffff
 8018f5c:	7ff00000 	.word	0x7ff00000

08018f60 <_sbrk_r>:
 8018f60:	b538      	push	{r3, r4, r5, lr}
 8018f62:	4c07      	ldr	r4, [pc, #28]	; (8018f80 <_sbrk_r+0x20>)
 8018f64:	2300      	movs	r3, #0
 8018f66:	4605      	mov	r5, r0
 8018f68:	4608      	mov	r0, r1
 8018f6a:	6023      	str	r3, [r4, #0]
 8018f6c:	f7e8 fc42 	bl	80017f4 <_sbrk>
 8018f70:	1c43      	adds	r3, r0, #1
 8018f72:	d000      	beq.n	8018f76 <_sbrk_r+0x16>
 8018f74:	bd38      	pop	{r3, r4, r5, pc}
 8018f76:	6823      	ldr	r3, [r4, #0]
 8018f78:	2b00      	cmp	r3, #0
 8018f7a:	d0fb      	beq.n	8018f74 <_sbrk_r+0x14>
 8018f7c:	602b      	str	r3, [r5, #0]
 8018f7e:	bd38      	pop	{r3, r4, r5, pc}
 8018f80:	2000dee0 	.word	0x2000dee0

08018f84 <__sread>:
 8018f84:	b510      	push	{r4, lr}
 8018f86:	460c      	mov	r4, r1
 8018f88:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8018f8c:	f000 fa3a 	bl	8019404 <_read_r>
 8018f90:	2800      	cmp	r0, #0
 8018f92:	db03      	blt.n	8018f9c <__sread+0x18>
 8018f94:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8018f96:	4403      	add	r3, r0
 8018f98:	6523      	str	r3, [r4, #80]	; 0x50
 8018f9a:	bd10      	pop	{r4, pc}
 8018f9c:	89a3      	ldrh	r3, [r4, #12]
 8018f9e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8018fa2:	81a3      	strh	r3, [r4, #12]
 8018fa4:	bd10      	pop	{r4, pc}
 8018fa6:	bf00      	nop

08018fa8 <__swrite>:
 8018fa8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018fac:	4616      	mov	r6, r2
 8018fae:	898a      	ldrh	r2, [r1, #12]
 8018fb0:	461d      	mov	r5, r3
 8018fb2:	05d3      	lsls	r3, r2, #23
 8018fb4:	460c      	mov	r4, r1
 8018fb6:	4607      	mov	r7, r0
 8018fb8:	d506      	bpl.n	8018fc8 <__swrite+0x20>
 8018fba:	2200      	movs	r2, #0
 8018fbc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8018fc0:	2302      	movs	r3, #2
 8018fc2:	f000 fa0b 	bl	80193dc <_lseek_r>
 8018fc6:	89a2      	ldrh	r2, [r4, #12]
 8018fc8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8018fcc:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8018fd0:	81a2      	strh	r2, [r4, #12]
 8018fd2:	4638      	mov	r0, r7
 8018fd4:	4632      	mov	r2, r6
 8018fd6:	462b      	mov	r3, r5
 8018fd8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8018fdc:	f000 b8de 	b.w	801919c <_write_r>

08018fe0 <__sseek>:
 8018fe0:	b510      	push	{r4, lr}
 8018fe2:	460c      	mov	r4, r1
 8018fe4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8018fe8:	f000 f9f8 	bl	80193dc <_lseek_r>
 8018fec:	89a3      	ldrh	r3, [r4, #12]
 8018fee:	1c42      	adds	r2, r0, #1
 8018ff0:	bf0e      	itee	eq
 8018ff2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8018ff6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8018ffa:	6520      	strne	r0, [r4, #80]	; 0x50
 8018ffc:	81a3      	strh	r3, [r4, #12]
 8018ffe:	bd10      	pop	{r4, pc}

08019000 <__sclose>:
 8019000:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8019004:	f000 b90e 	b.w	8019224 <_close_r>

08019008 <__ssprint_r>:
 8019008:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801900c:	6893      	ldr	r3, [r2, #8]
 801900e:	f8d2 8000 	ldr.w	r8, [r2]
 8019012:	b083      	sub	sp, #12
 8019014:	4691      	mov	r9, r2
 8019016:	2b00      	cmp	r3, #0
 8019018:	d072      	beq.n	8019100 <__ssprint_r+0xf8>
 801901a:	4607      	mov	r7, r0
 801901c:	f04f 0b00 	mov.w	fp, #0
 8019020:	6808      	ldr	r0, [r1, #0]
 8019022:	688b      	ldr	r3, [r1, #8]
 8019024:	460d      	mov	r5, r1
 8019026:	465c      	mov	r4, fp
 8019028:	2c00      	cmp	r4, #0
 801902a:	d045      	beq.n	80190b8 <__ssprint_r+0xb0>
 801902c:	429c      	cmp	r4, r3
 801902e:	461e      	mov	r6, r3
 8019030:	469a      	mov	sl, r3
 8019032:	d348      	bcc.n	80190c6 <__ssprint_r+0xbe>
 8019034:	89ab      	ldrh	r3, [r5, #12]
 8019036:	f413 6f90 	tst.w	r3, #1152	; 0x480
 801903a:	d02d      	beq.n	8019098 <__ssprint_r+0x90>
 801903c:	696e      	ldr	r6, [r5, #20]
 801903e:	6929      	ldr	r1, [r5, #16]
 8019040:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8019044:	ebc1 0a00 	rsb	sl, r1, r0
 8019048:	eb06 76d6 	add.w	r6, r6, r6, lsr #31
 801904c:	1c60      	adds	r0, r4, #1
 801904e:	1076      	asrs	r6, r6, #1
 8019050:	4450      	add	r0, sl
 8019052:	4286      	cmp	r6, r0
 8019054:	4632      	mov	r2, r6
 8019056:	bf3c      	itt	cc
 8019058:	4606      	movcc	r6, r0
 801905a:	4632      	movcc	r2, r6
 801905c:	055b      	lsls	r3, r3, #21
 801905e:	d535      	bpl.n	80190cc <__ssprint_r+0xc4>
 8019060:	4611      	mov	r1, r2
 8019062:	4638      	mov	r0, r7
 8019064:	f7fe ff8a 	bl	8017f7c <_malloc_r>
 8019068:	2800      	cmp	r0, #0
 801906a:	d039      	beq.n	80190e0 <__ssprint_r+0xd8>
 801906c:	4652      	mov	r2, sl
 801906e:	6929      	ldr	r1, [r5, #16]
 8019070:	9001      	str	r0, [sp, #4]
 8019072:	f7e7 f889 	bl	8000188 <memcpy>
 8019076:	89aa      	ldrh	r2, [r5, #12]
 8019078:	9b01      	ldr	r3, [sp, #4]
 801907a:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 801907e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8019082:	81aa      	strh	r2, [r5, #12]
 8019084:	ebca 0206 	rsb	r2, sl, r6
 8019088:	eb03 000a 	add.w	r0, r3, sl
 801908c:	616e      	str	r6, [r5, #20]
 801908e:	612b      	str	r3, [r5, #16]
 8019090:	6028      	str	r0, [r5, #0]
 8019092:	60aa      	str	r2, [r5, #8]
 8019094:	4626      	mov	r6, r4
 8019096:	46a2      	mov	sl, r4
 8019098:	4652      	mov	r2, sl
 801909a:	4659      	mov	r1, fp
 801909c:	f7fa fc60 	bl	8013960 <memmove>
 80190a0:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80190a4:	68ab      	ldr	r3, [r5, #8]
 80190a6:	6828      	ldr	r0, [r5, #0]
 80190a8:	1b9b      	subs	r3, r3, r6
 80190aa:	4450      	add	r0, sl
 80190ac:	1b14      	subs	r4, r2, r4
 80190ae:	60ab      	str	r3, [r5, #8]
 80190b0:	6028      	str	r0, [r5, #0]
 80190b2:	f8c9 4008 	str.w	r4, [r9, #8]
 80190b6:	b31c      	cbz	r4, 8019100 <__ssprint_r+0xf8>
 80190b8:	f8d8 b000 	ldr.w	fp, [r8]
 80190bc:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80190c0:	f108 0808 	add.w	r8, r8, #8
 80190c4:	e7b0      	b.n	8019028 <__ssprint_r+0x20>
 80190c6:	4626      	mov	r6, r4
 80190c8:	46a2      	mov	sl, r4
 80190ca:	e7e5      	b.n	8019098 <__ssprint_r+0x90>
 80190cc:	4638      	mov	r0, r7
 80190ce:	f7ff fd25 	bl	8018b1c <_realloc_r>
 80190d2:	4603      	mov	r3, r0
 80190d4:	2800      	cmp	r0, #0
 80190d6:	d1d5      	bne.n	8019084 <__ssprint_r+0x7c>
 80190d8:	4638      	mov	r0, r7
 80190da:	6929      	ldr	r1, [r5, #16]
 80190dc:	f7fe fc42 	bl	8017964 <_free_r>
 80190e0:	230c      	movs	r3, #12
 80190e2:	603b      	str	r3, [r7, #0]
 80190e4:	89ab      	ldrh	r3, [r5, #12]
 80190e6:	2200      	movs	r2, #0
 80190e8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80190ec:	f04f 30ff 	mov.w	r0, #4294967295
 80190f0:	81ab      	strh	r3, [r5, #12]
 80190f2:	f8c9 2008 	str.w	r2, [r9, #8]
 80190f6:	f8c9 2004 	str.w	r2, [r9, #4]
 80190fa:	b003      	add	sp, #12
 80190fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019100:	2000      	movs	r0, #0
 8019102:	f8c9 0004 	str.w	r0, [r9, #4]
 8019106:	b003      	add	sp, #12
 8019108:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801910c <__sprint_r.part.0>:
 801910c:	6e4b      	ldr	r3, [r1, #100]	; 0x64
 801910e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019112:	049c      	lsls	r4, r3, #18
 8019114:	460f      	mov	r7, r1
 8019116:	4692      	mov	sl, r2
 8019118:	d52b      	bpl.n	8019172 <__sprint_r.part.0+0x66>
 801911a:	6893      	ldr	r3, [r2, #8]
 801911c:	6812      	ldr	r2, [r2, #0]
 801911e:	b333      	cbz	r3, 801916e <__sprint_r.part.0+0x62>
 8019120:	4680      	mov	r8, r0
 8019122:	f102 0908 	add.w	r9, r2, #8
 8019126:	e919 0060 	ldmdb	r9, {r5, r6}
 801912a:	08b6      	lsrs	r6, r6, #2
 801912c:	d017      	beq.n	801915e <__sprint_r.part.0+0x52>
 801912e:	3d04      	subs	r5, #4
 8019130:	2400      	movs	r4, #0
 8019132:	e001      	b.n	8019138 <__sprint_r.part.0+0x2c>
 8019134:	42a6      	cmp	r6, r4
 8019136:	d010      	beq.n	801915a <__sprint_r.part.0+0x4e>
 8019138:	4640      	mov	r0, r8
 801913a:	f855 1f04 	ldr.w	r1, [r5, #4]!
 801913e:	463a      	mov	r2, r7
 8019140:	f000 f8c4 	bl	80192cc <_fputwc_r>
 8019144:	1c43      	adds	r3, r0, #1
 8019146:	f104 0401 	add.w	r4, r4, #1
 801914a:	d1f3      	bne.n	8019134 <__sprint_r.part.0+0x28>
 801914c:	2300      	movs	r3, #0
 801914e:	f8ca 3008 	str.w	r3, [sl, #8]
 8019152:	f8ca 3004 	str.w	r3, [sl, #4]
 8019156:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801915a:	f8da 3008 	ldr.w	r3, [sl, #8]
 801915e:	eba3 0386 	sub.w	r3, r3, r6, lsl #2
 8019162:	f8ca 3008 	str.w	r3, [sl, #8]
 8019166:	f109 0908 	add.w	r9, r9, #8
 801916a:	2b00      	cmp	r3, #0
 801916c:	d1db      	bne.n	8019126 <__sprint_r.part.0+0x1a>
 801916e:	2000      	movs	r0, #0
 8019170:	e7ec      	b.n	801914c <__sprint_r.part.0+0x40>
 8019172:	f7fe fccf 	bl	8017b14 <__sfvwrite_r>
 8019176:	2300      	movs	r3, #0
 8019178:	f8ca 3008 	str.w	r3, [sl, #8]
 801917c:	f8ca 3004 	str.w	r3, [sl, #4]
 8019180:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08019184 <__sprint_r>:
 8019184:	6893      	ldr	r3, [r2, #8]
 8019186:	b410      	push	{r4}
 8019188:	b11b      	cbz	r3, 8019192 <__sprint_r+0xe>
 801918a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801918e:	f7ff bfbd 	b.w	801910c <__sprint_r.part.0>
 8019192:	4618      	mov	r0, r3
 8019194:	6053      	str	r3, [r2, #4]
 8019196:	f85d 4b04 	ldr.w	r4, [sp], #4
 801919a:	4770      	bx	lr

0801919c <_write_r>:
 801919c:	b570      	push	{r4, r5, r6, lr}
 801919e:	4c08      	ldr	r4, [pc, #32]	; (80191c0 <_write_r+0x24>)
 80191a0:	4606      	mov	r6, r0
 80191a2:	2500      	movs	r5, #0
 80191a4:	4608      	mov	r0, r1
 80191a6:	4611      	mov	r1, r2
 80191a8:	461a      	mov	r2, r3
 80191aa:	6025      	str	r5, [r4, #0]
 80191ac:	f7e8 fb08 	bl	80017c0 <_write>
 80191b0:	1c43      	adds	r3, r0, #1
 80191b2:	d000      	beq.n	80191b6 <_write_r+0x1a>
 80191b4:	bd70      	pop	{r4, r5, r6, pc}
 80191b6:	6823      	ldr	r3, [r4, #0]
 80191b8:	2b00      	cmp	r3, #0
 80191ba:	d0fb      	beq.n	80191b4 <_write_r+0x18>
 80191bc:	6033      	str	r3, [r6, #0]
 80191be:	bd70      	pop	{r4, r5, r6, pc}
 80191c0:	2000dee0 	.word	0x2000dee0

080191c4 <_calloc_r>:
 80191c4:	b510      	push	{r4, lr}
 80191c6:	fb02 f101 	mul.w	r1, r2, r1
 80191ca:	f7fe fed7 	bl	8017f7c <_malloc_r>
 80191ce:	4604      	mov	r4, r0
 80191d0:	b168      	cbz	r0, 80191ee <_calloc_r+0x2a>
 80191d2:	f850 2c04 	ldr.w	r2, [r0, #-4]
 80191d6:	f022 0203 	bic.w	r2, r2, #3
 80191da:	3a04      	subs	r2, #4
 80191dc:	2a24      	cmp	r2, #36	; 0x24
 80191de:	d818      	bhi.n	8019212 <_calloc_r+0x4e>
 80191e0:	2a13      	cmp	r2, #19
 80191e2:	d806      	bhi.n	80191f2 <_calloc_r+0x2e>
 80191e4:	4603      	mov	r3, r0
 80191e6:	2200      	movs	r2, #0
 80191e8:	601a      	str	r2, [r3, #0]
 80191ea:	605a      	str	r2, [r3, #4]
 80191ec:	609a      	str	r2, [r3, #8]
 80191ee:	4620      	mov	r0, r4
 80191f0:	bd10      	pop	{r4, pc}
 80191f2:	2300      	movs	r3, #0
 80191f4:	2a1b      	cmp	r2, #27
 80191f6:	6003      	str	r3, [r0, #0]
 80191f8:	6043      	str	r3, [r0, #4]
 80191fa:	d90f      	bls.n	801921c <_calloc_r+0x58>
 80191fc:	2a24      	cmp	r2, #36	; 0x24
 80191fe:	6083      	str	r3, [r0, #8]
 8019200:	60c3      	str	r3, [r0, #12]
 8019202:	bf05      	ittet	eq
 8019204:	6103      	streq	r3, [r0, #16]
 8019206:	6143      	streq	r3, [r0, #20]
 8019208:	f100 0310 	addne.w	r3, r0, #16
 801920c:	f100 0318 	addeq.w	r3, r0, #24
 8019210:	e7e9      	b.n	80191e6 <_calloc_r+0x22>
 8019212:	2100      	movs	r1, #0
 8019214:	f7fa fc08 	bl	8013a28 <memset>
 8019218:	4620      	mov	r0, r4
 801921a:	bd10      	pop	{r4, pc}
 801921c:	f100 0308 	add.w	r3, r0, #8
 8019220:	e7e1      	b.n	80191e6 <_calloc_r+0x22>
 8019222:	bf00      	nop

08019224 <_close_r>:
 8019224:	b538      	push	{r3, r4, r5, lr}
 8019226:	4c07      	ldr	r4, [pc, #28]	; (8019244 <_close_r+0x20>)
 8019228:	2300      	movs	r3, #0
 801922a:	4605      	mov	r5, r0
 801922c:	4608      	mov	r0, r1
 801922e:	6023      	str	r3, [r4, #0]
 8019230:	f7e8 fa97 	bl	8001762 <_close>
 8019234:	1c43      	adds	r3, r0, #1
 8019236:	d000      	beq.n	801923a <_close_r+0x16>
 8019238:	bd38      	pop	{r3, r4, r5, pc}
 801923a:	6823      	ldr	r3, [r4, #0]
 801923c:	2b00      	cmp	r3, #0
 801923e:	d0fb      	beq.n	8019238 <_close_r+0x14>
 8019240:	602b      	str	r3, [r5, #0]
 8019242:	bd38      	pop	{r3, r4, r5, pc}
 8019244:	2000dee0 	.word	0x2000dee0

08019248 <_fclose_r>:
 8019248:	2900      	cmp	r1, #0
 801924a:	d03d      	beq.n	80192c8 <_fclose_r+0x80>
 801924c:	b570      	push	{r4, r5, r6, lr}
 801924e:	4605      	mov	r5, r0
 8019250:	460c      	mov	r4, r1
 8019252:	b108      	cbz	r0, 8019258 <_fclose_r+0x10>
 8019254:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8019256:	b37b      	cbz	r3, 80192b8 <_fclose_r+0x70>
 8019258:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801925c:	b90b      	cbnz	r3, 8019262 <_fclose_r+0x1a>
 801925e:	2000      	movs	r0, #0
 8019260:	bd70      	pop	{r4, r5, r6, pc}
 8019262:	4628      	mov	r0, r5
 8019264:	4621      	mov	r1, r4
 8019266:	f7fe f9e7 	bl	8017638 <__sflush_r>
 801926a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801926c:	4606      	mov	r6, r0
 801926e:	b133      	cbz	r3, 801927e <_fclose_r+0x36>
 8019270:	4628      	mov	r0, r5
 8019272:	69e1      	ldr	r1, [r4, #28]
 8019274:	4798      	blx	r3
 8019276:	2800      	cmp	r0, #0
 8019278:	bfb8      	it	lt
 801927a:	f04f 36ff 	movlt.w	r6, #4294967295
 801927e:	89a3      	ldrh	r3, [r4, #12]
 8019280:	061b      	lsls	r3, r3, #24
 8019282:	d41c      	bmi.n	80192be <_fclose_r+0x76>
 8019284:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8019286:	b141      	cbz	r1, 801929a <_fclose_r+0x52>
 8019288:	f104 0340 	add.w	r3, r4, #64	; 0x40
 801928c:	4299      	cmp	r1, r3
 801928e:	d002      	beq.n	8019296 <_fclose_r+0x4e>
 8019290:	4628      	mov	r0, r5
 8019292:	f7fe fb67 	bl	8017964 <_free_r>
 8019296:	2300      	movs	r3, #0
 8019298:	6323      	str	r3, [r4, #48]	; 0x30
 801929a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 801929c:	b121      	cbz	r1, 80192a8 <_fclose_r+0x60>
 801929e:	4628      	mov	r0, r5
 80192a0:	f7fe fb60 	bl	8017964 <_free_r>
 80192a4:	2300      	movs	r3, #0
 80192a6:	6463      	str	r3, [r4, #68]	; 0x44
 80192a8:	f7fe fb0a 	bl	80178c0 <__sfp_lock_acquire>
 80192ac:	2300      	movs	r3, #0
 80192ae:	81a3      	strh	r3, [r4, #12]
 80192b0:	f7fe fb08 	bl	80178c4 <__sfp_lock_release>
 80192b4:	4630      	mov	r0, r6
 80192b6:	bd70      	pop	{r4, r5, r6, pc}
 80192b8:	f7fe fafc 	bl	80178b4 <__sinit>
 80192bc:	e7cc      	b.n	8019258 <_fclose_r+0x10>
 80192be:	4628      	mov	r0, r5
 80192c0:	6921      	ldr	r1, [r4, #16]
 80192c2:	f7fe fb4f 	bl	8017964 <_free_r>
 80192c6:	e7dd      	b.n	8019284 <_fclose_r+0x3c>
 80192c8:	2000      	movs	r0, #0
 80192ca:	4770      	bx	lr

080192cc <_fputwc_r>:
 80192cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80192d0:	8993      	ldrh	r3, [r2, #12]
 80192d2:	4614      	mov	r4, r2
 80192d4:	049a      	lsls	r2, r3, #18
 80192d6:	b082      	sub	sp, #8
 80192d8:	4607      	mov	r7, r0
 80192da:	460e      	mov	r6, r1
 80192dc:	d406      	bmi.n	80192ec <_fputwc_r+0x20>
 80192de:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80192e0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80192e4:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80192e8:	81a3      	strh	r3, [r4, #12]
 80192ea:	6662      	str	r2, [r4, #100]	; 0x64
 80192ec:	f7fe fdcc 	bl	8017e88 <__locale_mb_cur_max>
 80192f0:	2801      	cmp	r0, #1
 80192f2:	d041      	beq.n	8019378 <_fputwc_r+0xac>
 80192f4:	4638      	mov	r0, r7
 80192f6:	a901      	add	r1, sp, #4
 80192f8:	4632      	mov	r2, r6
 80192fa:	f104 035c 	add.w	r3, r4, #92	; 0x5c
 80192fe:	f000 f8e9 	bl	80194d4 <_wcrtomb_r>
 8019302:	f1b0 3fff 	cmp.w	r0, #4294967295
 8019306:	4680      	mov	r8, r0
 8019308:	d02f      	beq.n	801936a <_fputwc_r+0x9e>
 801930a:	2800      	cmp	r0, #0
 801930c:	d03c      	beq.n	8019388 <_fputwc_r+0xbc>
 801930e:	f89d 1004 	ldrb.w	r1, [sp, #4]
 8019312:	2500      	movs	r5, #0
 8019314:	e009      	b.n	801932a <_fputwc_r+0x5e>
 8019316:	6823      	ldr	r3, [r4, #0]
 8019318:	7019      	strb	r1, [r3, #0]
 801931a:	6823      	ldr	r3, [r4, #0]
 801931c:	3301      	adds	r3, #1
 801931e:	6023      	str	r3, [r4, #0]
 8019320:	3501      	adds	r5, #1
 8019322:	45a8      	cmp	r8, r5
 8019324:	d930      	bls.n	8019388 <_fputwc_r+0xbc>
 8019326:	ab01      	add	r3, sp, #4
 8019328:	5d59      	ldrb	r1, [r3, r5]
 801932a:	68a3      	ldr	r3, [r4, #8]
 801932c:	3b01      	subs	r3, #1
 801932e:	2b00      	cmp	r3, #0
 8019330:	60a3      	str	r3, [r4, #8]
 8019332:	daf0      	bge.n	8019316 <_fputwc_r+0x4a>
 8019334:	69a2      	ldr	r2, [r4, #24]
 8019336:	4293      	cmp	r3, r2
 8019338:	db07      	blt.n	801934a <_fputwc_r+0x7e>
 801933a:	6823      	ldr	r3, [r4, #0]
 801933c:	7019      	strb	r1, [r3, #0]
 801933e:	6823      	ldr	r3, [r4, #0]
 8019340:	7819      	ldrb	r1, [r3, #0]
 8019342:	290a      	cmp	r1, #10
 8019344:	f103 0301 	add.w	r3, r3, #1
 8019348:	d1e9      	bne.n	801931e <_fputwc_r+0x52>
 801934a:	4638      	mov	r0, r7
 801934c:	4622      	mov	r2, r4
 801934e:	f000 f86d 	bl	801942c <__swbuf_r>
 8019352:	f1a0 30ff 	sub.w	r0, r0, #4294967295
 8019356:	fab0 f080 	clz	r0, r0
 801935a:	0940      	lsrs	r0, r0, #5
 801935c:	2800      	cmp	r0, #0
 801935e:	d0df      	beq.n	8019320 <_fputwc_r+0x54>
 8019360:	f04f 30ff 	mov.w	r0, #4294967295
 8019364:	b002      	add	sp, #8
 8019366:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801936a:	89a3      	ldrh	r3, [r4, #12]
 801936c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8019370:	81a3      	strh	r3, [r4, #12]
 8019372:	b002      	add	sp, #8
 8019374:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8019378:	1e73      	subs	r3, r6, #1
 801937a:	2bfe      	cmp	r3, #254	; 0xfe
 801937c:	d8ba      	bhi.n	80192f4 <_fputwc_r+0x28>
 801937e:	b2f1      	uxtb	r1, r6
 8019380:	4680      	mov	r8, r0
 8019382:	f88d 1004 	strb.w	r1, [sp, #4]
 8019386:	e7c4      	b.n	8019312 <_fputwc_r+0x46>
 8019388:	4630      	mov	r0, r6
 801938a:	b002      	add	sp, #8
 801938c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08019390 <_fstat_r>:
 8019390:	b538      	push	{r3, r4, r5, lr}
 8019392:	4c08      	ldr	r4, [pc, #32]	; (80193b4 <_fstat_r+0x24>)
 8019394:	2300      	movs	r3, #0
 8019396:	4605      	mov	r5, r0
 8019398:	4608      	mov	r0, r1
 801939a:	4611      	mov	r1, r2
 801939c:	6023      	str	r3, [r4, #0]
 801939e:	f7e8 f9e3 	bl	8001768 <_fstat>
 80193a2:	1c43      	adds	r3, r0, #1
 80193a4:	d000      	beq.n	80193a8 <_fstat_r+0x18>
 80193a6:	bd38      	pop	{r3, r4, r5, pc}
 80193a8:	6823      	ldr	r3, [r4, #0]
 80193aa:	2b00      	cmp	r3, #0
 80193ac:	d0fb      	beq.n	80193a6 <_fstat_r+0x16>
 80193ae:	602b      	str	r3, [r5, #0]
 80193b0:	bd38      	pop	{r3, r4, r5, pc}
 80193b2:	bf00      	nop
 80193b4:	2000dee0 	.word	0x2000dee0

080193b8 <_isatty_r>:
 80193b8:	b538      	push	{r3, r4, r5, lr}
 80193ba:	4c07      	ldr	r4, [pc, #28]	; (80193d8 <_isatty_r+0x20>)
 80193bc:	2300      	movs	r3, #0
 80193be:	4605      	mov	r5, r0
 80193c0:	4608      	mov	r0, r1
 80193c2:	6023      	str	r3, [r4, #0]
 80193c4:	f7e8 f9d6 	bl	8001774 <_isatty>
 80193c8:	1c43      	adds	r3, r0, #1
 80193ca:	d000      	beq.n	80193ce <_isatty_r+0x16>
 80193cc:	bd38      	pop	{r3, r4, r5, pc}
 80193ce:	6823      	ldr	r3, [r4, #0]
 80193d0:	2b00      	cmp	r3, #0
 80193d2:	d0fb      	beq.n	80193cc <_isatty_r+0x14>
 80193d4:	602b      	str	r3, [r5, #0]
 80193d6:	bd38      	pop	{r3, r4, r5, pc}
 80193d8:	2000dee0 	.word	0x2000dee0

080193dc <_lseek_r>:
 80193dc:	b570      	push	{r4, r5, r6, lr}
 80193de:	4c08      	ldr	r4, [pc, #32]	; (8019400 <_lseek_r+0x24>)
 80193e0:	4606      	mov	r6, r0
 80193e2:	2500      	movs	r5, #0
 80193e4:	4608      	mov	r0, r1
 80193e6:	4611      	mov	r1, r2
 80193e8:	461a      	mov	r2, r3
 80193ea:	6025      	str	r5, [r4, #0]
 80193ec:	f7e8 f9ce 	bl	800178c <_lseek>
 80193f0:	1c43      	adds	r3, r0, #1
 80193f2:	d000      	beq.n	80193f6 <_lseek_r+0x1a>
 80193f4:	bd70      	pop	{r4, r5, r6, pc}
 80193f6:	6823      	ldr	r3, [r4, #0]
 80193f8:	2b00      	cmp	r3, #0
 80193fa:	d0fb      	beq.n	80193f4 <_lseek_r+0x18>
 80193fc:	6033      	str	r3, [r6, #0]
 80193fe:	bd70      	pop	{r4, r5, r6, pc}
 8019400:	2000dee0 	.word	0x2000dee0

08019404 <_read_r>:
 8019404:	b570      	push	{r4, r5, r6, lr}
 8019406:	4c08      	ldr	r4, [pc, #32]	; (8019428 <_read_r+0x24>)
 8019408:	4606      	mov	r6, r0
 801940a:	2500      	movs	r5, #0
 801940c:	4608      	mov	r0, r1
 801940e:	4611      	mov	r1, r2
 8019410:	461a      	mov	r2, r3
 8019412:	6025      	str	r5, [r4, #0]
 8019414:	f7e8 f9bc 	bl	8001790 <_read>
 8019418:	1c43      	adds	r3, r0, #1
 801941a:	d000      	beq.n	801941e <_read_r+0x1a>
 801941c:	bd70      	pop	{r4, r5, r6, pc}
 801941e:	6823      	ldr	r3, [r4, #0]
 8019420:	2b00      	cmp	r3, #0
 8019422:	d0fb      	beq.n	801941c <_read_r+0x18>
 8019424:	6033      	str	r3, [r6, #0]
 8019426:	bd70      	pop	{r4, r5, r6, pc}
 8019428:	2000dee0 	.word	0x2000dee0

0801942c <__swbuf_r>:
 801942c:	b570      	push	{r4, r5, r6, lr}
 801942e:	460d      	mov	r5, r1
 8019430:	4614      	mov	r4, r2
 8019432:	4606      	mov	r6, r0
 8019434:	b110      	cbz	r0, 801943c <__swbuf_r+0x10>
 8019436:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8019438:	2b00      	cmp	r3, #0
 801943a:	d048      	beq.n	80194ce <__swbuf_r+0xa2>
 801943c:	89a2      	ldrh	r2, [r4, #12]
 801943e:	69a3      	ldr	r3, [r4, #24]
 8019440:	60a3      	str	r3, [r4, #8]
 8019442:	b291      	uxth	r1, r2
 8019444:	0708      	lsls	r0, r1, #28
 8019446:	d538      	bpl.n	80194ba <__swbuf_r+0x8e>
 8019448:	6923      	ldr	r3, [r4, #16]
 801944a:	2b00      	cmp	r3, #0
 801944c:	d035      	beq.n	80194ba <__swbuf_r+0x8e>
 801944e:	0489      	lsls	r1, r1, #18
 8019450:	b2ed      	uxtb	r5, r5
 8019452:	d515      	bpl.n	8019480 <__swbuf_r+0x54>
 8019454:	6822      	ldr	r2, [r4, #0]
 8019456:	6961      	ldr	r1, [r4, #20]
 8019458:	1ad3      	subs	r3, r2, r3
 801945a:	428b      	cmp	r3, r1
 801945c:	da1c      	bge.n	8019498 <__swbuf_r+0x6c>
 801945e:	3301      	adds	r3, #1
 8019460:	68a1      	ldr	r1, [r4, #8]
 8019462:	1c50      	adds	r0, r2, #1
 8019464:	3901      	subs	r1, #1
 8019466:	60a1      	str	r1, [r4, #8]
 8019468:	6020      	str	r0, [r4, #0]
 801946a:	7015      	strb	r5, [r2, #0]
 801946c:	6962      	ldr	r2, [r4, #20]
 801946e:	429a      	cmp	r2, r3
 8019470:	d01a      	beq.n	80194a8 <__swbuf_r+0x7c>
 8019472:	89a3      	ldrh	r3, [r4, #12]
 8019474:	07db      	lsls	r3, r3, #31
 8019476:	d501      	bpl.n	801947c <__swbuf_r+0x50>
 8019478:	2d0a      	cmp	r5, #10
 801947a:	d015      	beq.n	80194a8 <__swbuf_r+0x7c>
 801947c:	4628      	mov	r0, r5
 801947e:	bd70      	pop	{r4, r5, r6, pc}
 8019480:	6e61      	ldr	r1, [r4, #100]	; 0x64
 8019482:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8019486:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
 801948a:	81a2      	strh	r2, [r4, #12]
 801948c:	6822      	ldr	r2, [r4, #0]
 801948e:	6661      	str	r1, [r4, #100]	; 0x64
 8019490:	6961      	ldr	r1, [r4, #20]
 8019492:	1ad3      	subs	r3, r2, r3
 8019494:	428b      	cmp	r3, r1
 8019496:	dbe2      	blt.n	801945e <__swbuf_r+0x32>
 8019498:	4630      	mov	r0, r6
 801949a:	4621      	mov	r1, r4
 801949c:	f7fe f976 	bl	801778c <_fflush_r>
 80194a0:	b940      	cbnz	r0, 80194b4 <__swbuf_r+0x88>
 80194a2:	6822      	ldr	r2, [r4, #0]
 80194a4:	2301      	movs	r3, #1
 80194a6:	e7db      	b.n	8019460 <__swbuf_r+0x34>
 80194a8:	4630      	mov	r0, r6
 80194aa:	4621      	mov	r1, r4
 80194ac:	f7fe f96e 	bl	801778c <_fflush_r>
 80194b0:	2800      	cmp	r0, #0
 80194b2:	d0e3      	beq.n	801947c <__swbuf_r+0x50>
 80194b4:	f04f 30ff 	mov.w	r0, #4294967295
 80194b8:	bd70      	pop	{r4, r5, r6, pc}
 80194ba:	4630      	mov	r0, r6
 80194bc:	4621      	mov	r1, r4
 80194be:	f7fd f877 	bl	80165b0 <__swsetup_r>
 80194c2:	2800      	cmp	r0, #0
 80194c4:	d1f6      	bne.n	80194b4 <__swbuf_r+0x88>
 80194c6:	89a2      	ldrh	r2, [r4, #12]
 80194c8:	6923      	ldr	r3, [r4, #16]
 80194ca:	b291      	uxth	r1, r2
 80194cc:	e7bf      	b.n	801944e <__swbuf_r+0x22>
 80194ce:	f7fe f9f1 	bl	80178b4 <__sinit>
 80194d2:	e7b3      	b.n	801943c <__swbuf_r+0x10>

080194d4 <_wcrtomb_r>:
 80194d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80194d8:	4605      	mov	r5, r0
 80194da:	b086      	sub	sp, #24
 80194dc:	461e      	mov	r6, r3
 80194de:	460c      	mov	r4, r1
 80194e0:	b1a1      	cbz	r1, 801950c <_wcrtomb_r+0x38>
 80194e2:	4b10      	ldr	r3, [pc, #64]	; (8019524 <_wcrtomb_r+0x50>)
 80194e4:	4617      	mov	r7, r2
 80194e6:	f8d3 8000 	ldr.w	r8, [r3]
 80194ea:	f7fe fcc9 	bl	8017e80 <__locale_charset>
 80194ee:	9600      	str	r6, [sp, #0]
 80194f0:	4603      	mov	r3, r0
 80194f2:	4621      	mov	r1, r4
 80194f4:	463a      	mov	r2, r7
 80194f6:	4628      	mov	r0, r5
 80194f8:	47c0      	blx	r8
 80194fa:	1c43      	adds	r3, r0, #1
 80194fc:	d103      	bne.n	8019506 <_wcrtomb_r+0x32>
 80194fe:	2200      	movs	r2, #0
 8019500:	238a      	movs	r3, #138	; 0x8a
 8019502:	6032      	str	r2, [r6, #0]
 8019504:	602b      	str	r3, [r5, #0]
 8019506:	b006      	add	sp, #24
 8019508:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801950c:	4b05      	ldr	r3, [pc, #20]	; (8019524 <_wcrtomb_r+0x50>)
 801950e:	681f      	ldr	r7, [r3, #0]
 8019510:	f7fe fcb6 	bl	8017e80 <__locale_charset>
 8019514:	9600      	str	r6, [sp, #0]
 8019516:	4603      	mov	r3, r0
 8019518:	4622      	mov	r2, r4
 801951a:	4628      	mov	r0, r5
 801951c:	a903      	add	r1, sp, #12
 801951e:	47b8      	blx	r7
 8019520:	e7eb      	b.n	80194fa <_wcrtomb_r+0x26>
 8019522:	bf00      	nop
 8019524:	20000b70 	.word	0x20000b70

08019528 <__ascii_wctomb>:
 8019528:	b121      	cbz	r1, 8019534 <__ascii_wctomb+0xc>
 801952a:	2aff      	cmp	r2, #255	; 0xff
 801952c:	d804      	bhi.n	8019538 <__ascii_wctomb+0x10>
 801952e:	700a      	strb	r2, [r1, #0]
 8019530:	2001      	movs	r0, #1
 8019532:	4770      	bx	lr
 8019534:	4608      	mov	r0, r1
 8019536:	4770      	bx	lr
 8019538:	238a      	movs	r3, #138	; 0x8a
 801953a:	6003      	str	r3, [r0, #0]
 801953c:	f04f 30ff 	mov.w	r0, #4294967295
 8019540:	4770      	bx	lr
 8019542:	bf00      	nop
