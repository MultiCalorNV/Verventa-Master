
out/Verventa_Master_1.0.0.elf:     file format elf32-littlearm


Disassembly of section .text:

08000188 <memcpy>:
 8000188:	4684      	mov	ip, r0
 800018a:	ea41 0300 	orr.w	r3, r1, r0
 800018e:	f013 0303 	ands.w	r3, r3, #3
 8000192:	d16d      	bne.n	8000270 <memcpy+0xe8>
 8000194:	3a40      	subs	r2, #64	; 0x40
 8000196:	d341      	bcc.n	800021c <memcpy+0x94>
 8000198:	f851 3b04 	ldr.w	r3, [r1], #4
 800019c:	f840 3b04 	str.w	r3, [r0], #4
 80001a0:	f851 3b04 	ldr.w	r3, [r1], #4
 80001a4:	f840 3b04 	str.w	r3, [r0], #4
 80001a8:	f851 3b04 	ldr.w	r3, [r1], #4
 80001ac:	f840 3b04 	str.w	r3, [r0], #4
 80001b0:	f851 3b04 	ldr.w	r3, [r1], #4
 80001b4:	f840 3b04 	str.w	r3, [r0], #4
 80001b8:	f851 3b04 	ldr.w	r3, [r1], #4
 80001bc:	f840 3b04 	str.w	r3, [r0], #4
 80001c0:	f851 3b04 	ldr.w	r3, [r1], #4
 80001c4:	f840 3b04 	str.w	r3, [r0], #4
 80001c8:	f851 3b04 	ldr.w	r3, [r1], #4
 80001cc:	f840 3b04 	str.w	r3, [r0], #4
 80001d0:	f851 3b04 	ldr.w	r3, [r1], #4
 80001d4:	f840 3b04 	str.w	r3, [r0], #4
 80001d8:	f851 3b04 	ldr.w	r3, [r1], #4
 80001dc:	f840 3b04 	str.w	r3, [r0], #4
 80001e0:	f851 3b04 	ldr.w	r3, [r1], #4
 80001e4:	f840 3b04 	str.w	r3, [r0], #4
 80001e8:	f851 3b04 	ldr.w	r3, [r1], #4
 80001ec:	f840 3b04 	str.w	r3, [r0], #4
 80001f0:	f851 3b04 	ldr.w	r3, [r1], #4
 80001f4:	f840 3b04 	str.w	r3, [r0], #4
 80001f8:	f851 3b04 	ldr.w	r3, [r1], #4
 80001fc:	f840 3b04 	str.w	r3, [r0], #4
 8000200:	f851 3b04 	ldr.w	r3, [r1], #4
 8000204:	f840 3b04 	str.w	r3, [r0], #4
 8000208:	f851 3b04 	ldr.w	r3, [r1], #4
 800020c:	f840 3b04 	str.w	r3, [r0], #4
 8000210:	f851 3b04 	ldr.w	r3, [r1], #4
 8000214:	f840 3b04 	str.w	r3, [r0], #4
 8000218:	3a40      	subs	r2, #64	; 0x40
 800021a:	d2bd      	bcs.n	8000198 <memcpy+0x10>
 800021c:	3230      	adds	r2, #48	; 0x30
 800021e:	d311      	bcc.n	8000244 <memcpy+0xbc>
 8000220:	f851 3b04 	ldr.w	r3, [r1], #4
 8000224:	f840 3b04 	str.w	r3, [r0], #4
 8000228:	f851 3b04 	ldr.w	r3, [r1], #4
 800022c:	f840 3b04 	str.w	r3, [r0], #4
 8000230:	f851 3b04 	ldr.w	r3, [r1], #4
 8000234:	f840 3b04 	str.w	r3, [r0], #4
 8000238:	f851 3b04 	ldr.w	r3, [r1], #4
 800023c:	f840 3b04 	str.w	r3, [r0], #4
 8000240:	3a10      	subs	r2, #16
 8000242:	d2ed      	bcs.n	8000220 <memcpy+0x98>
 8000244:	320c      	adds	r2, #12
 8000246:	d305      	bcc.n	8000254 <memcpy+0xcc>
 8000248:	f851 3b04 	ldr.w	r3, [r1], #4
 800024c:	f840 3b04 	str.w	r3, [r0], #4
 8000250:	3a04      	subs	r2, #4
 8000252:	d2f9      	bcs.n	8000248 <memcpy+0xc0>
 8000254:	3204      	adds	r2, #4
 8000256:	d008      	beq.n	800026a <memcpy+0xe2>
 8000258:	07d2      	lsls	r2, r2, #31
 800025a:	bf1c      	itt	ne
 800025c:	f811 3b01 	ldrbne.w	r3, [r1], #1
 8000260:	f800 3b01 	strbne.w	r3, [r0], #1
 8000264:	d301      	bcc.n	800026a <memcpy+0xe2>
 8000266:	880b      	ldrh	r3, [r1, #0]
 8000268:	8003      	strh	r3, [r0, #0]
 800026a:	4660      	mov	r0, ip
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop
 8000270:	2a08      	cmp	r2, #8
 8000272:	d313      	bcc.n	800029c <memcpy+0x114>
 8000274:	078b      	lsls	r3, r1, #30
 8000276:	d08d      	beq.n	8000194 <memcpy+0xc>
 8000278:	f010 0303 	ands.w	r3, r0, #3
 800027c:	d08a      	beq.n	8000194 <memcpy+0xc>
 800027e:	f1c3 0304 	rsb	r3, r3, #4
 8000282:	1ad2      	subs	r2, r2, r3
 8000284:	07db      	lsls	r3, r3, #31
 8000286:	bf1c      	itt	ne
 8000288:	f811 3b01 	ldrbne.w	r3, [r1], #1
 800028c:	f800 3b01 	strbne.w	r3, [r0], #1
 8000290:	d380      	bcc.n	8000194 <memcpy+0xc>
 8000292:	f831 3b02 	ldrh.w	r3, [r1], #2
 8000296:	f820 3b02 	strh.w	r3, [r0], #2
 800029a:	e77b      	b.n	8000194 <memcpy+0xc>
 800029c:	3a04      	subs	r2, #4
 800029e:	d3d9      	bcc.n	8000254 <memcpy+0xcc>
 80002a0:	3a01      	subs	r2, #1
 80002a2:	f811 3b01 	ldrb.w	r3, [r1], #1
 80002a6:	f800 3b01 	strb.w	r3, [r0], #1
 80002aa:	d2f9      	bcs.n	80002a0 <memcpy+0x118>
 80002ac:	780b      	ldrb	r3, [r1, #0]
 80002ae:	7003      	strb	r3, [r0, #0]
 80002b0:	784b      	ldrb	r3, [r1, #1]
 80002b2:	7043      	strb	r3, [r0, #1]
 80002b4:	788b      	ldrb	r3, [r1, #2]
 80002b6:	7083      	strb	r3, [r0, #2]
 80002b8:	4660      	mov	r0, ip
 80002ba:	4770      	bx	lr

080002bc <__aeabi_drsub>:
 80002bc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c0:	e002      	b.n	80002c8 <__adddf3>
 80002c2:	bf00      	nop

080002c4 <__aeabi_dsub>:
 80002c4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002c8 <__adddf3>:
 80002c8:	b530      	push	{r4, r5, lr}
 80002ca:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002ce:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d2:	ea94 0f05 	teq	r4, r5
 80002d6:	bf08      	it	eq
 80002d8:	ea90 0f02 	teqeq	r0, r2
 80002dc:	bf1f      	itttt	ne
 80002de:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e2:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002e6:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ea:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002ee:	f000 80e2 	beq.w	80004b6 <__adddf3+0x1ee>
 80002f2:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002f6:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fa:	bfb8      	it	lt
 80002fc:	426d      	neglt	r5, r5
 80002fe:	dd0c      	ble.n	800031a <__adddf3+0x52>
 8000300:	442c      	add	r4, r5
 8000302:	ea80 0202 	eor.w	r2, r0, r2
 8000306:	ea81 0303 	eor.w	r3, r1, r3
 800030a:	ea82 0000 	eor.w	r0, r2, r0
 800030e:	ea83 0101 	eor.w	r1, r3, r1
 8000312:	ea80 0202 	eor.w	r2, r0, r2
 8000316:	ea81 0303 	eor.w	r3, r1, r3
 800031a:	2d36      	cmp	r5, #54	; 0x36
 800031c:	bf88      	it	hi
 800031e:	bd30      	pophi	{r4, r5, pc}
 8000320:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000324:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000328:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 800032c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000330:	d002      	beq.n	8000338 <__adddf3+0x70>
 8000332:	4240      	negs	r0, r0
 8000334:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000338:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 800033c:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000340:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000344:	d002      	beq.n	800034c <__adddf3+0x84>
 8000346:	4252      	negs	r2, r2
 8000348:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800034c:	ea94 0f05 	teq	r4, r5
 8000350:	f000 80a7 	beq.w	80004a2 <__adddf3+0x1da>
 8000354:	f1a4 0401 	sub.w	r4, r4, #1
 8000358:	f1d5 0e20 	rsbs	lr, r5, #32
 800035c:	db0d      	blt.n	800037a <__adddf3+0xb2>
 800035e:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000362:	fa22 f205 	lsr.w	r2, r2, r5
 8000366:	1880      	adds	r0, r0, r2
 8000368:	f141 0100 	adc.w	r1, r1, #0
 800036c:	fa03 f20e 	lsl.w	r2, r3, lr
 8000370:	1880      	adds	r0, r0, r2
 8000372:	fa43 f305 	asr.w	r3, r3, r5
 8000376:	4159      	adcs	r1, r3
 8000378:	e00e      	b.n	8000398 <__adddf3+0xd0>
 800037a:	f1a5 0520 	sub.w	r5, r5, #32
 800037e:	f10e 0e20 	add.w	lr, lr, #32
 8000382:	2a01      	cmp	r2, #1
 8000384:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000388:	bf28      	it	cs
 800038a:	f04c 0c02 	orrcs.w	ip, ip, #2
 800038e:	fa43 f305 	asr.w	r3, r3, r5
 8000392:	18c0      	adds	r0, r0, r3
 8000394:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000398:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800039c:	d507      	bpl.n	80003ae <__adddf3+0xe6>
 800039e:	f04f 0e00 	mov.w	lr, #0
 80003a2:	f1dc 0c00 	rsbs	ip, ip, #0
 80003a6:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003aa:	eb6e 0101 	sbc.w	r1, lr, r1
 80003ae:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b2:	d31b      	bcc.n	80003ec <__adddf3+0x124>
 80003b4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003b8:	d30c      	bcc.n	80003d4 <__adddf3+0x10c>
 80003ba:	0849      	lsrs	r1, r1, #1
 80003bc:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c0:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c4:	f104 0401 	add.w	r4, r4, #1
 80003c8:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003cc:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d0:	f080 809a 	bcs.w	8000508 <__adddf3+0x240>
 80003d4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003d8:	bf08      	it	eq
 80003da:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003de:	f150 0000 	adcs.w	r0, r0, #0
 80003e2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003e6:	ea41 0105 	orr.w	r1, r1, r5
 80003ea:	bd30      	pop	{r4, r5, pc}
 80003ec:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f0:	4140      	adcs	r0, r0
 80003f2:	eb41 0101 	adc.w	r1, r1, r1
 80003f6:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003fa:	f1a4 0401 	sub.w	r4, r4, #1
 80003fe:	d1e9      	bne.n	80003d4 <__adddf3+0x10c>
 8000400:	f091 0f00 	teq	r1, #0
 8000404:	bf04      	itt	eq
 8000406:	4601      	moveq	r1, r0
 8000408:	2000      	moveq	r0, #0
 800040a:	fab1 f381 	clz	r3, r1
 800040e:	bf08      	it	eq
 8000410:	3320      	addeq	r3, #32
 8000412:	f1a3 030b 	sub.w	r3, r3, #11
 8000416:	f1b3 0220 	subs.w	r2, r3, #32
 800041a:	da0c      	bge.n	8000436 <__adddf3+0x16e>
 800041c:	320c      	adds	r2, #12
 800041e:	dd08      	ble.n	8000432 <__adddf3+0x16a>
 8000420:	f102 0c14 	add.w	ip, r2, #20
 8000424:	f1c2 020c 	rsb	r2, r2, #12
 8000428:	fa01 f00c 	lsl.w	r0, r1, ip
 800042c:	fa21 f102 	lsr.w	r1, r1, r2
 8000430:	e00c      	b.n	800044c <__adddf3+0x184>
 8000432:	f102 0214 	add.w	r2, r2, #20
 8000436:	bfd8      	it	le
 8000438:	f1c2 0c20 	rsble	ip, r2, #32
 800043c:	fa01 f102 	lsl.w	r1, r1, r2
 8000440:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000444:	bfdc      	itt	le
 8000446:	ea41 010c 	orrle.w	r1, r1, ip
 800044a:	4090      	lslle	r0, r2
 800044c:	1ae4      	subs	r4, r4, r3
 800044e:	bfa2      	ittt	ge
 8000450:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000454:	4329      	orrge	r1, r5
 8000456:	bd30      	popge	{r4, r5, pc}
 8000458:	ea6f 0404 	mvn.w	r4, r4
 800045c:	3c1f      	subs	r4, #31
 800045e:	da1c      	bge.n	800049a <__adddf3+0x1d2>
 8000460:	340c      	adds	r4, #12
 8000462:	dc0e      	bgt.n	8000482 <__adddf3+0x1ba>
 8000464:	f104 0414 	add.w	r4, r4, #20
 8000468:	f1c4 0220 	rsb	r2, r4, #32
 800046c:	fa20 f004 	lsr.w	r0, r0, r4
 8000470:	fa01 f302 	lsl.w	r3, r1, r2
 8000474:	ea40 0003 	orr.w	r0, r0, r3
 8000478:	fa21 f304 	lsr.w	r3, r1, r4
 800047c:	ea45 0103 	orr.w	r1, r5, r3
 8000480:	bd30      	pop	{r4, r5, pc}
 8000482:	f1c4 040c 	rsb	r4, r4, #12
 8000486:	f1c4 0220 	rsb	r2, r4, #32
 800048a:	fa20 f002 	lsr.w	r0, r0, r2
 800048e:	fa01 f304 	lsl.w	r3, r1, r4
 8000492:	ea40 0003 	orr.w	r0, r0, r3
 8000496:	4629      	mov	r1, r5
 8000498:	bd30      	pop	{r4, r5, pc}
 800049a:	fa21 f004 	lsr.w	r0, r1, r4
 800049e:	4629      	mov	r1, r5
 80004a0:	bd30      	pop	{r4, r5, pc}
 80004a2:	f094 0f00 	teq	r4, #0
 80004a6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004aa:	bf06      	itte	eq
 80004ac:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b0:	3401      	addeq	r4, #1
 80004b2:	3d01      	subne	r5, #1
 80004b4:	e74e      	b.n	8000354 <__adddf3+0x8c>
 80004b6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ba:	bf18      	it	ne
 80004bc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c0:	d029      	beq.n	8000516 <__adddf3+0x24e>
 80004c2:	ea94 0f05 	teq	r4, r5
 80004c6:	bf08      	it	eq
 80004c8:	ea90 0f02 	teqeq	r0, r2
 80004cc:	d005      	beq.n	80004da <__adddf3+0x212>
 80004ce:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d2:	bf04      	itt	eq
 80004d4:	4619      	moveq	r1, r3
 80004d6:	4610      	moveq	r0, r2
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea91 0f03 	teq	r1, r3
 80004de:	bf1e      	ittt	ne
 80004e0:	2100      	movne	r1, #0
 80004e2:	2000      	movne	r0, #0
 80004e4:	bd30      	popne	{r4, r5, pc}
 80004e6:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ea:	d105      	bne.n	80004f8 <__adddf3+0x230>
 80004ec:	0040      	lsls	r0, r0, #1
 80004ee:	4149      	adcs	r1, r1
 80004f0:	bf28      	it	cs
 80004f2:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004f6:	bd30      	pop	{r4, r5, pc}
 80004f8:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004fc:	bf3c      	itt	cc
 80004fe:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000502:	bd30      	popcc	{r4, r5, pc}
 8000504:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000508:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 800050c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000510:	f04f 0000 	mov.w	r0, #0
 8000514:	bd30      	pop	{r4, r5, pc}
 8000516:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051a:	bf1a      	itte	ne
 800051c:	4619      	movne	r1, r3
 800051e:	4610      	movne	r0, r2
 8000520:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000524:	bf1c      	itt	ne
 8000526:	460b      	movne	r3, r1
 8000528:	4602      	movne	r2, r0
 800052a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800052e:	bf06      	itte	eq
 8000530:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000534:	ea91 0f03 	teqeq	r1, r3
 8000538:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 800053c:	bd30      	pop	{r4, r5, pc}
 800053e:	bf00      	nop

08000540 <__aeabi_ui2d>:
 8000540:	f090 0f00 	teq	r0, #0
 8000544:	bf04      	itt	eq
 8000546:	2100      	moveq	r1, #0
 8000548:	4770      	bxeq	lr
 800054a:	b530      	push	{r4, r5, lr}
 800054c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000550:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000554:	f04f 0500 	mov.w	r5, #0
 8000558:	f04f 0100 	mov.w	r1, #0
 800055c:	e750      	b.n	8000400 <__adddf3+0x138>
 800055e:	bf00      	nop

08000560 <__aeabi_i2d>:
 8000560:	f090 0f00 	teq	r0, #0
 8000564:	bf04      	itt	eq
 8000566:	2100      	moveq	r1, #0
 8000568:	4770      	bxeq	lr
 800056a:	b530      	push	{r4, r5, lr}
 800056c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000570:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000574:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000578:	bf48      	it	mi
 800057a:	4240      	negmi	r0, r0
 800057c:	f04f 0100 	mov.w	r1, #0
 8000580:	e73e      	b.n	8000400 <__adddf3+0x138>
 8000582:	bf00      	nop

08000584 <__aeabi_f2d>:
 8000584:	0042      	lsls	r2, r0, #1
 8000586:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058a:	ea4f 0131 	mov.w	r1, r1, rrx
 800058e:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000592:	bf1f      	itttt	ne
 8000594:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000598:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 800059c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a0:	4770      	bxne	lr
 80005a2:	f092 0f00 	teq	r2, #0
 80005a6:	bf14      	ite	ne
 80005a8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005ac:	4770      	bxeq	lr
 80005ae:	b530      	push	{r4, r5, lr}
 80005b0:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005b4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005b8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005bc:	e720      	b.n	8000400 <__adddf3+0x138>
 80005be:	bf00      	nop

080005c0 <__aeabi_ul2d>:
 80005c0:	ea50 0201 	orrs.w	r2, r0, r1
 80005c4:	bf08      	it	eq
 80005c6:	4770      	bxeq	lr
 80005c8:	b530      	push	{r4, r5, lr}
 80005ca:	f04f 0500 	mov.w	r5, #0
 80005ce:	e00a      	b.n	80005e6 <__aeabi_l2d+0x16>

080005d0 <__aeabi_l2d>:
 80005d0:	ea50 0201 	orrs.w	r2, r0, r1
 80005d4:	bf08      	it	eq
 80005d6:	4770      	bxeq	lr
 80005d8:	b530      	push	{r4, r5, lr}
 80005da:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005de:	d502      	bpl.n	80005e6 <__aeabi_l2d+0x16>
 80005e0:	4240      	negs	r0, r0
 80005e2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005e6:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005ea:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ee:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005f2:	f43f aedc 	beq.w	80003ae <__adddf3+0xe6>
 80005f6:	f04f 0203 	mov.w	r2, #3
 80005fa:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005fe:	bf18      	it	ne
 8000600:	3203      	addne	r2, #3
 8000602:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000606:	bf18      	it	ne
 8000608:	3203      	addne	r2, #3
 800060a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800060e:	f1c2 0320 	rsb	r3, r2, #32
 8000612:	fa00 fc03 	lsl.w	ip, r0, r3
 8000616:	fa20 f002 	lsr.w	r0, r0, r2
 800061a:	fa01 fe03 	lsl.w	lr, r1, r3
 800061e:	ea40 000e 	orr.w	r0, r0, lr
 8000622:	fa21 f102 	lsr.w	r1, r1, r2
 8000626:	4414      	add	r4, r2
 8000628:	e6c1      	b.n	80003ae <__adddf3+0xe6>
 800062a:	bf00      	nop

0800062c <__aeabi_dmul>:
 800062c:	b570      	push	{r4, r5, r6, lr}
 800062e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000632:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000636:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800063a:	bf1d      	ittte	ne
 800063c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000640:	ea94 0f0c 	teqne	r4, ip
 8000644:	ea95 0f0c 	teqne	r5, ip
 8000648:	f000 f8de 	bleq	8000808 <__aeabi_dmul+0x1dc>
 800064c:	442c      	add	r4, r5
 800064e:	ea81 0603 	eor.w	r6, r1, r3
 8000652:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000656:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800065a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800065e:	bf18      	it	ne
 8000660:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000664:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000668:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800066c:	d038      	beq.n	80006e0 <__aeabi_dmul+0xb4>
 800066e:	fba0 ce02 	umull	ip, lr, r0, r2
 8000672:	f04f 0500 	mov.w	r5, #0
 8000676:	fbe1 e502 	umlal	lr, r5, r1, r2
 800067a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800067e:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000682:	f04f 0600 	mov.w	r6, #0
 8000686:	fbe1 5603 	umlal	r5, r6, r1, r3
 800068a:	f09c 0f00 	teq	ip, #0
 800068e:	bf18      	it	ne
 8000690:	f04e 0e01 	orrne.w	lr, lr, #1
 8000694:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000698:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 800069c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006a0:	d204      	bcs.n	80006ac <__aeabi_dmul+0x80>
 80006a2:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006a6:	416d      	adcs	r5, r5
 80006a8:	eb46 0606 	adc.w	r6, r6, r6
 80006ac:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006b0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006b4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006b8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006bc:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006c0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006c4:	bf88      	it	hi
 80006c6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006ca:	d81e      	bhi.n	800070a <__aeabi_dmul+0xde>
 80006cc:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006d0:	bf08      	it	eq
 80006d2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006d6:	f150 0000 	adcs.w	r0, r0, #0
 80006da:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006de:	bd70      	pop	{r4, r5, r6, pc}
 80006e0:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006e4:	ea46 0101 	orr.w	r1, r6, r1
 80006e8:	ea40 0002 	orr.w	r0, r0, r2
 80006ec:	ea81 0103 	eor.w	r1, r1, r3
 80006f0:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006f4:	bfc2      	ittt	gt
 80006f6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006fa:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006fe:	bd70      	popgt	{r4, r5, r6, pc}
 8000700:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000704:	f04f 0e00 	mov.w	lr, #0
 8000708:	3c01      	subs	r4, #1
 800070a:	f300 80ab 	bgt.w	8000864 <__aeabi_dmul+0x238>
 800070e:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000712:	bfde      	ittt	le
 8000714:	2000      	movle	r0, #0
 8000716:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800071a:	bd70      	pople	{r4, r5, r6, pc}
 800071c:	f1c4 0400 	rsb	r4, r4, #0
 8000720:	3c20      	subs	r4, #32
 8000722:	da35      	bge.n	8000790 <__aeabi_dmul+0x164>
 8000724:	340c      	adds	r4, #12
 8000726:	dc1b      	bgt.n	8000760 <__aeabi_dmul+0x134>
 8000728:	f104 0414 	add.w	r4, r4, #20
 800072c:	f1c4 0520 	rsb	r5, r4, #32
 8000730:	fa00 f305 	lsl.w	r3, r0, r5
 8000734:	fa20 f004 	lsr.w	r0, r0, r4
 8000738:	fa01 f205 	lsl.w	r2, r1, r5
 800073c:	ea40 0002 	orr.w	r0, r0, r2
 8000740:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000744:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	fa21 f604 	lsr.w	r6, r1, r4
 8000750:	eb42 0106 	adc.w	r1, r2, r6
 8000754:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000758:	bf08      	it	eq
 800075a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075e:	bd70      	pop	{r4, r5, r6, pc}
 8000760:	f1c4 040c 	rsb	r4, r4, #12
 8000764:	f1c4 0520 	rsb	r5, r4, #32
 8000768:	fa00 f304 	lsl.w	r3, r0, r4
 800076c:	fa20 f005 	lsr.w	r0, r0, r5
 8000770:	fa01 f204 	lsl.w	r2, r1, r4
 8000774:	ea40 0002 	orr.w	r0, r0, r2
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000780:	f141 0100 	adc.w	r1, r1, #0
 8000784:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000788:	bf08      	it	eq
 800078a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800078e:	bd70      	pop	{r4, r5, r6, pc}
 8000790:	f1c4 0520 	rsb	r5, r4, #32
 8000794:	fa00 f205 	lsl.w	r2, r0, r5
 8000798:	ea4e 0e02 	orr.w	lr, lr, r2
 800079c:	fa20 f304 	lsr.w	r3, r0, r4
 80007a0:	fa01 f205 	lsl.w	r2, r1, r5
 80007a4:	ea43 0302 	orr.w	r3, r3, r2
 80007a8:	fa21 f004 	lsr.w	r0, r1, r4
 80007ac:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007b0:	fa21 f204 	lsr.w	r2, r1, r4
 80007b4:	ea20 0002 	bic.w	r0, r0, r2
 80007b8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007bc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007c0:	bf08      	it	eq
 80007c2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007c6:	bd70      	pop	{r4, r5, r6, pc}
 80007c8:	f094 0f00 	teq	r4, #0
 80007cc:	d10f      	bne.n	80007ee <__aeabi_dmul+0x1c2>
 80007ce:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007d2:	0040      	lsls	r0, r0, #1
 80007d4:	eb41 0101 	adc.w	r1, r1, r1
 80007d8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007dc:	bf08      	it	eq
 80007de:	3c01      	subeq	r4, #1
 80007e0:	d0f7      	beq.n	80007d2 <__aeabi_dmul+0x1a6>
 80007e2:	ea41 0106 	orr.w	r1, r1, r6
 80007e6:	f095 0f00 	teq	r5, #0
 80007ea:	bf18      	it	ne
 80007ec:	4770      	bxne	lr
 80007ee:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007f2:	0052      	lsls	r2, r2, #1
 80007f4:	eb43 0303 	adc.w	r3, r3, r3
 80007f8:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007fc:	bf08      	it	eq
 80007fe:	3d01      	subeq	r5, #1
 8000800:	d0f7      	beq.n	80007f2 <__aeabi_dmul+0x1c6>
 8000802:	ea43 0306 	orr.w	r3, r3, r6
 8000806:	4770      	bx	lr
 8000808:	ea94 0f0c 	teq	r4, ip
 800080c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000810:	bf18      	it	ne
 8000812:	ea95 0f0c 	teqne	r5, ip
 8000816:	d00c      	beq.n	8000832 <__aeabi_dmul+0x206>
 8000818:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800081c:	bf18      	it	ne
 800081e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000822:	d1d1      	bne.n	80007c8 <__aeabi_dmul+0x19c>
 8000824:	ea81 0103 	eor.w	r1, r1, r3
 8000828:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800082c:	f04f 0000 	mov.w	r0, #0
 8000830:	bd70      	pop	{r4, r5, r6, pc}
 8000832:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000836:	bf06      	itte	eq
 8000838:	4610      	moveq	r0, r2
 800083a:	4619      	moveq	r1, r3
 800083c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000840:	d019      	beq.n	8000876 <__aeabi_dmul+0x24a>
 8000842:	ea94 0f0c 	teq	r4, ip
 8000846:	d102      	bne.n	800084e <__aeabi_dmul+0x222>
 8000848:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 800084c:	d113      	bne.n	8000876 <__aeabi_dmul+0x24a>
 800084e:	ea95 0f0c 	teq	r5, ip
 8000852:	d105      	bne.n	8000860 <__aeabi_dmul+0x234>
 8000854:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000858:	bf1c      	itt	ne
 800085a:	4610      	movne	r0, r2
 800085c:	4619      	movne	r1, r3
 800085e:	d10a      	bne.n	8000876 <__aeabi_dmul+0x24a>
 8000860:	ea81 0103 	eor.w	r1, r1, r3
 8000864:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000868:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800086c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000870:	f04f 0000 	mov.w	r0, #0
 8000874:	bd70      	pop	{r4, r5, r6, pc}
 8000876:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800087a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800087e:	bd70      	pop	{r4, r5, r6, pc}

08000880 <__aeabi_ddiv>:
 8000880:	b570      	push	{r4, r5, r6, lr}
 8000882:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000886:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800088a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800088e:	bf1d      	ittte	ne
 8000890:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000894:	ea94 0f0c 	teqne	r4, ip
 8000898:	ea95 0f0c 	teqne	r5, ip
 800089c:	f000 f8a7 	bleq	80009ee <__aeabi_ddiv+0x16e>
 80008a0:	eba4 0405 	sub.w	r4, r4, r5
 80008a4:	ea81 0e03 	eor.w	lr, r1, r3
 80008a8:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008ac:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008b0:	f000 8088 	beq.w	80009c4 <__aeabi_ddiv+0x144>
 80008b4:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008b8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008bc:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008c0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008c4:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008c8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008cc:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008d0:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008d4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008d8:	429d      	cmp	r5, r3
 80008da:	bf08      	it	eq
 80008dc:	4296      	cmpeq	r6, r2
 80008de:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008e2:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008e6:	d202      	bcs.n	80008ee <__aeabi_ddiv+0x6e>
 80008e8:	085b      	lsrs	r3, r3, #1
 80008ea:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ee:	1ab6      	subs	r6, r6, r2
 80008f0:	eb65 0503 	sbc.w	r5, r5, r3
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008fe:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000902:	ebb6 0e02 	subs.w	lr, r6, r2
 8000906:	eb75 0e03 	sbcs.w	lr, r5, r3
 800090a:	bf22      	ittt	cs
 800090c:	1ab6      	subcs	r6, r6, r2
 800090e:	4675      	movcs	r5, lr
 8000910:	ea40 000c 	orrcs.w	r0, r0, ip
 8000914:	085b      	lsrs	r3, r3, #1
 8000916:	ea4f 0232 	mov.w	r2, r2, rrx
 800091a:	ebb6 0e02 	subs.w	lr, r6, r2
 800091e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000922:	bf22      	ittt	cs
 8000924:	1ab6      	subcs	r6, r6, r2
 8000926:	4675      	movcs	r5, lr
 8000928:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 800092c:	085b      	lsrs	r3, r3, #1
 800092e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000932:	ebb6 0e02 	subs.w	lr, r6, r2
 8000936:	eb75 0e03 	sbcs.w	lr, r5, r3
 800093a:	bf22      	ittt	cs
 800093c:	1ab6      	subcs	r6, r6, r2
 800093e:	4675      	movcs	r5, lr
 8000940:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000944:	085b      	lsrs	r3, r3, #1
 8000946:	ea4f 0232 	mov.w	r2, r2, rrx
 800094a:	ebb6 0e02 	subs.w	lr, r6, r2
 800094e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000952:	bf22      	ittt	cs
 8000954:	1ab6      	subcs	r6, r6, r2
 8000956:	4675      	movcs	r5, lr
 8000958:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 800095c:	ea55 0e06 	orrs.w	lr, r5, r6
 8000960:	d018      	beq.n	8000994 <__aeabi_ddiv+0x114>
 8000962:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000966:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800096a:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800096e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000972:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000976:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800097a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800097e:	d1c0      	bne.n	8000902 <__aeabi_ddiv+0x82>
 8000980:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000984:	d10b      	bne.n	800099e <__aeabi_ddiv+0x11e>
 8000986:	ea41 0100 	orr.w	r1, r1, r0
 800098a:	f04f 0000 	mov.w	r0, #0
 800098e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000992:	e7b6      	b.n	8000902 <__aeabi_ddiv+0x82>
 8000994:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000998:	bf04      	itt	eq
 800099a:	4301      	orreq	r1, r0
 800099c:	2000      	moveq	r0, #0
 800099e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009a2:	bf88      	it	hi
 80009a4:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009a8:	f63f aeaf 	bhi.w	800070a <__aeabi_dmul+0xde>
 80009ac:	ebb5 0c03 	subs.w	ip, r5, r3
 80009b0:	bf04      	itt	eq
 80009b2:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009b6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009ba:	f150 0000 	adcs.w	r0, r0, #0
 80009be:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009c2:	bd70      	pop	{r4, r5, r6, pc}
 80009c4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009c8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009cc:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009d0:	bfc2      	ittt	gt
 80009d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009da:	bd70      	popgt	{r4, r5, r6, pc}
 80009dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009e0:	f04f 0e00 	mov.w	lr, #0
 80009e4:	3c01      	subs	r4, #1
 80009e6:	e690      	b.n	800070a <__aeabi_dmul+0xde>
 80009e8:	ea45 0e06 	orr.w	lr, r5, r6
 80009ec:	e68d      	b.n	800070a <__aeabi_dmul+0xde>
 80009ee:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009f2:	ea94 0f0c 	teq	r4, ip
 80009f6:	bf08      	it	eq
 80009f8:	ea95 0f0c 	teqeq	r5, ip
 80009fc:	f43f af3b 	beq.w	8000876 <__aeabi_dmul+0x24a>
 8000a00:	ea94 0f0c 	teq	r4, ip
 8000a04:	d10a      	bne.n	8000a1c <__aeabi_ddiv+0x19c>
 8000a06:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a0a:	f47f af34 	bne.w	8000876 <__aeabi_dmul+0x24a>
 8000a0e:	ea95 0f0c 	teq	r5, ip
 8000a12:	f47f af25 	bne.w	8000860 <__aeabi_dmul+0x234>
 8000a16:	4610      	mov	r0, r2
 8000a18:	4619      	mov	r1, r3
 8000a1a:	e72c      	b.n	8000876 <__aeabi_dmul+0x24a>
 8000a1c:	ea95 0f0c 	teq	r5, ip
 8000a20:	d106      	bne.n	8000a30 <__aeabi_ddiv+0x1b0>
 8000a22:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a26:	f43f aefd 	beq.w	8000824 <__aeabi_dmul+0x1f8>
 8000a2a:	4610      	mov	r0, r2
 8000a2c:	4619      	mov	r1, r3
 8000a2e:	e722      	b.n	8000876 <__aeabi_dmul+0x24a>
 8000a30:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a34:	bf18      	it	ne
 8000a36:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a3a:	f47f aec5 	bne.w	80007c8 <__aeabi_dmul+0x19c>
 8000a3e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a42:	f47f af0d 	bne.w	8000860 <__aeabi_dmul+0x234>
 8000a46:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a4a:	f47f aeeb 	bne.w	8000824 <__aeabi_dmul+0x1f8>
 8000a4e:	e712      	b.n	8000876 <__aeabi_dmul+0x24a>

08000a50 <__gedf2>:
 8000a50:	f04f 3cff 	mov.w	ip, #4294967295
 8000a54:	e006      	b.n	8000a64 <__cmpdf2+0x4>
 8000a56:	bf00      	nop

08000a58 <__ledf2>:
 8000a58:	f04f 0c01 	mov.w	ip, #1
 8000a5c:	e002      	b.n	8000a64 <__cmpdf2+0x4>
 8000a5e:	bf00      	nop

08000a60 <__cmpdf2>:
 8000a60:	f04f 0c01 	mov.w	ip, #1
 8000a64:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a68:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a6c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a70:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a74:	bf18      	it	ne
 8000a76:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a7a:	d01b      	beq.n	8000ab4 <__cmpdf2+0x54>
 8000a7c:	b001      	add	sp, #4
 8000a7e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a82:	bf0c      	ite	eq
 8000a84:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a88:	ea91 0f03 	teqne	r1, r3
 8000a8c:	bf02      	ittt	eq
 8000a8e:	ea90 0f02 	teqeq	r0, r2
 8000a92:	2000      	moveq	r0, #0
 8000a94:	4770      	bxeq	lr
 8000a96:	f110 0f00 	cmn.w	r0, #0
 8000a9a:	ea91 0f03 	teq	r1, r3
 8000a9e:	bf58      	it	pl
 8000aa0:	4299      	cmppl	r1, r3
 8000aa2:	bf08      	it	eq
 8000aa4:	4290      	cmpeq	r0, r2
 8000aa6:	bf2c      	ite	cs
 8000aa8:	17d8      	asrcs	r0, r3, #31
 8000aaa:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aae:	f040 0001 	orr.w	r0, r0, #1
 8000ab2:	4770      	bx	lr
 8000ab4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ab8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000abc:	d102      	bne.n	8000ac4 <__cmpdf2+0x64>
 8000abe:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ac2:	d107      	bne.n	8000ad4 <__cmpdf2+0x74>
 8000ac4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ac8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000acc:	d1d6      	bne.n	8000a7c <__cmpdf2+0x1c>
 8000ace:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ad2:	d0d3      	beq.n	8000a7c <__cmpdf2+0x1c>
 8000ad4:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ad8:	4770      	bx	lr
 8000ada:	bf00      	nop

08000adc <__aeabi_cdrcmple>:
 8000adc:	4684      	mov	ip, r0
 8000ade:	4610      	mov	r0, r2
 8000ae0:	4662      	mov	r2, ip
 8000ae2:	468c      	mov	ip, r1
 8000ae4:	4619      	mov	r1, r3
 8000ae6:	4663      	mov	r3, ip
 8000ae8:	e000      	b.n	8000aec <__aeabi_cdcmpeq>
 8000aea:	bf00      	nop

08000aec <__aeabi_cdcmpeq>:
 8000aec:	b501      	push	{r0, lr}
 8000aee:	f7ff ffb7 	bl	8000a60 <__cmpdf2>
 8000af2:	2800      	cmp	r0, #0
 8000af4:	bf48      	it	mi
 8000af6:	f110 0f00 	cmnmi.w	r0, #0
 8000afa:	bd01      	pop	{r0, pc}

08000afc <__aeabi_dcmpeq>:
 8000afc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b00:	f7ff fff4 	bl	8000aec <__aeabi_cdcmpeq>
 8000b04:	bf0c      	ite	eq
 8000b06:	2001      	moveq	r0, #1
 8000b08:	2000      	movne	r0, #0
 8000b0a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0e:	bf00      	nop

08000b10 <__aeabi_dcmplt>:
 8000b10:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b14:	f7ff ffea 	bl	8000aec <__aeabi_cdcmpeq>
 8000b18:	bf34      	ite	cc
 8000b1a:	2001      	movcc	r0, #1
 8000b1c:	2000      	movcs	r0, #0
 8000b1e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b22:	bf00      	nop

08000b24 <__aeabi_dcmple>:
 8000b24:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b28:	f7ff ffe0 	bl	8000aec <__aeabi_cdcmpeq>
 8000b2c:	bf94      	ite	ls
 8000b2e:	2001      	movls	r0, #1
 8000b30:	2000      	movhi	r0, #0
 8000b32:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b36:	bf00      	nop

08000b38 <__aeabi_dcmpge>:
 8000b38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b3c:	f7ff ffce 	bl	8000adc <__aeabi_cdrcmple>
 8000b40:	bf94      	ite	ls
 8000b42:	2001      	movls	r0, #1
 8000b44:	2000      	movhi	r0, #0
 8000b46:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b4a:	bf00      	nop

08000b4c <__aeabi_dcmpgt>:
 8000b4c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b50:	f7ff ffc4 	bl	8000adc <__aeabi_cdrcmple>
 8000b54:	bf34      	ite	cc
 8000b56:	2001      	movcc	r0, #1
 8000b58:	2000      	movcs	r0, #0
 8000b5a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b5e:	bf00      	nop

08000b60 <__aeabi_d2iz>:
 8000b60:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b64:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b68:	d215      	bcs.n	8000b96 <__aeabi_d2iz+0x36>
 8000b6a:	d511      	bpl.n	8000b90 <__aeabi_d2iz+0x30>
 8000b6c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b70:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b74:	d912      	bls.n	8000b9c <__aeabi_d2iz+0x3c>
 8000b76:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b7a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b7e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b82:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b86:	fa23 f002 	lsr.w	r0, r3, r2
 8000b8a:	bf18      	it	ne
 8000b8c:	4240      	negne	r0, r0
 8000b8e:	4770      	bx	lr
 8000b90:	f04f 0000 	mov.w	r0, #0
 8000b94:	4770      	bx	lr
 8000b96:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b9a:	d105      	bne.n	8000ba8 <__aeabi_d2iz+0x48>
 8000b9c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ba0:	bf08      	it	eq
 8000ba2:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000ba6:	4770      	bx	lr
 8000ba8:	f04f 0000 	mov.w	r0, #0
 8000bac:	4770      	bx	lr
 8000bae:	bf00      	nop

08000bb0 <__aeabi_uldivmod>:
 8000bb0:	b94b      	cbnz	r3, 8000bc6 <__aeabi_uldivmod+0x16>
 8000bb2:	b942      	cbnz	r2, 8000bc6 <__aeabi_uldivmod+0x16>
 8000bb4:	2900      	cmp	r1, #0
 8000bb6:	bf08      	it	eq
 8000bb8:	2800      	cmpeq	r0, #0
 8000bba:	d002      	beq.n	8000bc2 <__aeabi_uldivmod+0x12>
 8000bbc:	f04f 31ff 	mov.w	r1, #4294967295
 8000bc0:	4608      	mov	r0, r1
 8000bc2:	f000 b83b 	b.w	8000c3c <__aeabi_idiv0>
 8000bc6:	b082      	sub	sp, #8
 8000bc8:	46ec      	mov	ip, sp
 8000bca:	e92d 5000 	stmdb	sp!, {ip, lr}
 8000bce:	f000 f81d 	bl	8000c0c <__gnu_uldivmod_helper>
 8000bd2:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bd6:	b002      	add	sp, #8
 8000bd8:	bc0c      	pop	{r2, r3}
 8000bda:	4770      	bx	lr

08000bdc <__gnu_ldivmod_helper>:
 8000bdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000be0:	9c06      	ldr	r4, [sp, #24]
 8000be2:	4615      	mov	r5, r2
 8000be4:	4606      	mov	r6, r0
 8000be6:	460f      	mov	r7, r1
 8000be8:	4698      	mov	r8, r3
 8000bea:	f000 f829 	bl	8000c40 <__divdi3>
 8000bee:	fb05 f301 	mul.w	r3, r5, r1
 8000bf2:	fb00 3808 	mla	r8, r0, r8, r3
 8000bf6:	fba5 2300 	umull	r2, r3, r5, r0
 8000bfa:	1ab2      	subs	r2, r6, r2
 8000bfc:	4443      	add	r3, r8
 8000bfe:	eb67 0303 	sbc.w	r3, r7, r3
 8000c02:	e9c4 2300 	strd	r2, r3, [r4]
 8000c06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000c0a:	bf00      	nop

08000c0c <__gnu_uldivmod_helper>:
 8000c0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000c10:	9c06      	ldr	r4, [sp, #24]
 8000c12:	4690      	mov	r8, r2
 8000c14:	4606      	mov	r6, r0
 8000c16:	460f      	mov	r7, r1
 8000c18:	461d      	mov	r5, r3
 8000c1a:	f000 f95f 	bl	8000edc <__udivdi3>
 8000c1e:	fb00 f505 	mul.w	r5, r0, r5
 8000c22:	fba0 2308 	umull	r2, r3, r0, r8
 8000c26:	fb08 5501 	mla	r5, r8, r1, r5
 8000c2a:	1ab2      	subs	r2, r6, r2
 8000c2c:	442b      	add	r3, r5
 8000c2e:	eb67 0303 	sbc.w	r3, r7, r3
 8000c32:	e9c4 2300 	strd	r2, r3, [r4]
 8000c36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000c3a:	bf00      	nop

08000c3c <__aeabi_idiv0>:
 8000c3c:	4770      	bx	lr
 8000c3e:	bf00      	nop

08000c40 <__divdi3>:
 8000c40:	2900      	cmp	r1, #0
 8000c42:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000c46:	f2c0 80a6 	blt.w	8000d96 <__divdi3+0x156>
 8000c4a:	2600      	movs	r6, #0
 8000c4c:	2b00      	cmp	r3, #0
 8000c4e:	f2c0 809c 	blt.w	8000d8a <__divdi3+0x14a>
 8000c52:	4688      	mov	r8, r1
 8000c54:	4694      	mov	ip, r2
 8000c56:	469e      	mov	lr, r3
 8000c58:	4615      	mov	r5, r2
 8000c5a:	4604      	mov	r4, r0
 8000c5c:	460f      	mov	r7, r1
 8000c5e:	2b00      	cmp	r3, #0
 8000c60:	d13d      	bne.n	8000cde <__divdi3+0x9e>
 8000c62:	428a      	cmp	r2, r1
 8000c64:	d959      	bls.n	8000d1a <__divdi3+0xda>
 8000c66:	fab2 f382 	clz	r3, r2
 8000c6a:	b13b      	cbz	r3, 8000c7c <__divdi3+0x3c>
 8000c6c:	f1c3 0220 	rsb	r2, r3, #32
 8000c70:	409f      	lsls	r7, r3
 8000c72:	fa20 f202 	lsr.w	r2, r0, r2
 8000c76:	409d      	lsls	r5, r3
 8000c78:	4317      	orrs	r7, r2
 8000c7a:	409c      	lsls	r4, r3
 8000c7c:	0c29      	lsrs	r1, r5, #16
 8000c7e:	0c22      	lsrs	r2, r4, #16
 8000c80:	fbb7 fef1 	udiv	lr, r7, r1
 8000c84:	b2a8      	uxth	r0, r5
 8000c86:	fb01 771e 	mls	r7, r1, lr, r7
 8000c8a:	ea42 4707 	orr.w	r7, r2, r7, lsl #16
 8000c8e:	fb00 f30e 	mul.w	r3, r0, lr
 8000c92:	42bb      	cmp	r3, r7
 8000c94:	d90a      	bls.n	8000cac <__divdi3+0x6c>
 8000c96:	197f      	adds	r7, r7, r5
 8000c98:	f10e 32ff 	add.w	r2, lr, #4294967295
 8000c9c:	f080 8105 	bcs.w	8000eaa <__divdi3+0x26a>
 8000ca0:	42bb      	cmp	r3, r7
 8000ca2:	f240 8102 	bls.w	8000eaa <__divdi3+0x26a>
 8000ca6:	f1ae 0e02 	sub.w	lr, lr, #2
 8000caa:	442f      	add	r7, r5
 8000cac:	1aff      	subs	r7, r7, r3
 8000cae:	b2a4      	uxth	r4, r4
 8000cb0:	fbb7 f3f1 	udiv	r3, r7, r1
 8000cb4:	fb01 7713 	mls	r7, r1, r3, r7
 8000cb8:	ea44 4707 	orr.w	r7, r4, r7, lsl #16
 8000cbc:	fb00 f003 	mul.w	r0, r0, r3
 8000cc0:	42b8      	cmp	r0, r7
 8000cc2:	d908      	bls.n	8000cd6 <__divdi3+0x96>
 8000cc4:	197f      	adds	r7, r7, r5
 8000cc6:	f103 32ff 	add.w	r2, r3, #4294967295
 8000cca:	f080 80f0 	bcs.w	8000eae <__divdi3+0x26e>
 8000cce:	42b8      	cmp	r0, r7
 8000cd0:	f240 80ed 	bls.w	8000eae <__divdi3+0x26e>
 8000cd4:	3b02      	subs	r3, #2
 8000cd6:	ea43 430e 	orr.w	r3, r3, lr, lsl #16
 8000cda:	2200      	movs	r2, #0
 8000cdc:	e003      	b.n	8000ce6 <__divdi3+0xa6>
 8000cde:	428b      	cmp	r3, r1
 8000ce0:	d90f      	bls.n	8000d02 <__divdi3+0xc2>
 8000ce2:	2200      	movs	r2, #0
 8000ce4:	4613      	mov	r3, r2
 8000ce6:	1c34      	adds	r4, r6, #0
 8000ce8:	bf18      	it	ne
 8000cea:	2401      	movne	r4, #1
 8000cec:	4260      	negs	r0, r4
 8000cee:	f04f 0500 	mov.w	r5, #0
 8000cf2:	eb65 0145 	sbc.w	r1, r5, r5, lsl #1
 8000cf6:	4058      	eors	r0, r3
 8000cf8:	4051      	eors	r1, r2
 8000cfa:	1900      	adds	r0, r0, r4
 8000cfc:	4169      	adcs	r1, r5
 8000cfe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000d02:	fab3 f283 	clz	r2, r3
 8000d06:	2a00      	cmp	r2, #0
 8000d08:	f040 8086 	bne.w	8000e18 <__divdi3+0x1d8>
 8000d0c:	428b      	cmp	r3, r1
 8000d0e:	d302      	bcc.n	8000d16 <__divdi3+0xd6>
 8000d10:	4584      	cmp	ip, r0
 8000d12:	f200 80db 	bhi.w	8000ecc <__divdi3+0x28c>
 8000d16:	2301      	movs	r3, #1
 8000d18:	e7e5      	b.n	8000ce6 <__divdi3+0xa6>
 8000d1a:	b912      	cbnz	r2, 8000d22 <__divdi3+0xe2>
 8000d1c:	2301      	movs	r3, #1
 8000d1e:	fbb3 f5f2 	udiv	r5, r3, r2
 8000d22:	fab5 f085 	clz	r0, r5
 8000d26:	2800      	cmp	r0, #0
 8000d28:	d13b      	bne.n	8000da2 <__divdi3+0x162>
 8000d2a:	1b78      	subs	r0, r7, r5
 8000d2c:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000d30:	fa1f fc85 	uxth.w	ip, r5
 8000d34:	2201      	movs	r2, #1
 8000d36:	fbb0 f8fe 	udiv	r8, r0, lr
 8000d3a:	0c21      	lsrs	r1, r4, #16
 8000d3c:	fb0e 0718 	mls	r7, lr, r8, r0
 8000d40:	ea41 4707 	orr.w	r7, r1, r7, lsl #16
 8000d44:	fb0c f308 	mul.w	r3, ip, r8
 8000d48:	42bb      	cmp	r3, r7
 8000d4a:	d907      	bls.n	8000d5c <__divdi3+0x11c>
 8000d4c:	197f      	adds	r7, r7, r5
 8000d4e:	f108 31ff 	add.w	r1, r8, #4294967295
 8000d52:	d202      	bcs.n	8000d5a <__divdi3+0x11a>
 8000d54:	42bb      	cmp	r3, r7
 8000d56:	f200 80bd 	bhi.w	8000ed4 <__divdi3+0x294>
 8000d5a:	4688      	mov	r8, r1
 8000d5c:	1aff      	subs	r7, r7, r3
 8000d5e:	b2a4      	uxth	r4, r4
 8000d60:	fbb7 f3fe 	udiv	r3, r7, lr
 8000d64:	fb0e 7713 	mls	r7, lr, r3, r7
 8000d68:	ea44 4707 	orr.w	r7, r4, r7, lsl #16
 8000d6c:	fb0c fc03 	mul.w	ip, ip, r3
 8000d70:	45bc      	cmp	ip, r7
 8000d72:	d907      	bls.n	8000d84 <__divdi3+0x144>
 8000d74:	197f      	adds	r7, r7, r5
 8000d76:	f103 31ff 	add.w	r1, r3, #4294967295
 8000d7a:	d202      	bcs.n	8000d82 <__divdi3+0x142>
 8000d7c:	45bc      	cmp	ip, r7
 8000d7e:	f200 80a7 	bhi.w	8000ed0 <__divdi3+0x290>
 8000d82:	460b      	mov	r3, r1
 8000d84:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000d88:	e7ad      	b.n	8000ce6 <__divdi3+0xa6>
 8000d8a:	4252      	negs	r2, r2
 8000d8c:	ea6f 0606 	mvn.w	r6, r6
 8000d90:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000d94:	e75d      	b.n	8000c52 <__divdi3+0x12>
 8000d96:	4240      	negs	r0, r0
 8000d98:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d9c:	f04f 36ff 	mov.w	r6, #4294967295
 8000da0:	e754      	b.n	8000c4c <__divdi3+0xc>
 8000da2:	f1c0 0220 	rsb	r2, r0, #32
 8000da6:	fa24 f102 	lsr.w	r1, r4, r2
 8000daa:	fa07 f300 	lsl.w	r3, r7, r0
 8000dae:	4085      	lsls	r5, r0
 8000db0:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000db4:	40d7      	lsrs	r7, r2
 8000db6:	4319      	orrs	r1, r3
 8000db8:	fbb7 f2fe 	udiv	r2, r7, lr
 8000dbc:	0c0b      	lsrs	r3, r1, #16
 8000dbe:	fb0e 7712 	mls	r7, lr, r2, r7
 8000dc2:	fa1f fc85 	uxth.w	ip, r5
 8000dc6:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8000dca:	fb0c f702 	mul.w	r7, ip, r2
 8000dce:	429f      	cmp	r7, r3
 8000dd0:	fa04 f400 	lsl.w	r4, r4, r0
 8000dd4:	d907      	bls.n	8000de6 <__divdi3+0x1a6>
 8000dd6:	195b      	adds	r3, r3, r5
 8000dd8:	f102 30ff 	add.w	r0, r2, #4294967295
 8000ddc:	d274      	bcs.n	8000ec8 <__divdi3+0x288>
 8000dde:	429f      	cmp	r7, r3
 8000de0:	d972      	bls.n	8000ec8 <__divdi3+0x288>
 8000de2:	3a02      	subs	r2, #2
 8000de4:	442b      	add	r3, r5
 8000de6:	1bdf      	subs	r7, r3, r7
 8000de8:	b289      	uxth	r1, r1
 8000dea:	fbb7 f8fe 	udiv	r8, r7, lr
 8000dee:	fb0e 7318 	mls	r3, lr, r8, r7
 8000df2:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000df6:	fb0c f708 	mul.w	r7, ip, r8
 8000dfa:	429f      	cmp	r7, r3
 8000dfc:	d908      	bls.n	8000e10 <__divdi3+0x1d0>
 8000dfe:	195b      	adds	r3, r3, r5
 8000e00:	f108 31ff 	add.w	r1, r8, #4294967295
 8000e04:	d25c      	bcs.n	8000ec0 <__divdi3+0x280>
 8000e06:	429f      	cmp	r7, r3
 8000e08:	d95a      	bls.n	8000ec0 <__divdi3+0x280>
 8000e0a:	f1a8 0802 	sub.w	r8, r8, #2
 8000e0e:	442b      	add	r3, r5
 8000e10:	1bd8      	subs	r0, r3, r7
 8000e12:	ea48 4202 	orr.w	r2, r8, r2, lsl #16
 8000e16:	e78e      	b.n	8000d36 <__divdi3+0xf6>
 8000e18:	f1c2 0320 	rsb	r3, r2, #32
 8000e1c:	fa2c f103 	lsr.w	r1, ip, r3
 8000e20:	fa0e fe02 	lsl.w	lr, lr, r2
 8000e24:	fa20 f703 	lsr.w	r7, r0, r3
 8000e28:	ea41 0e0e 	orr.w	lr, r1, lr
 8000e2c:	fa08 f002 	lsl.w	r0, r8, r2
 8000e30:	fa28 f103 	lsr.w	r1, r8, r3
 8000e34:	ea4f 451e 	mov.w	r5, lr, lsr #16
 8000e38:	4338      	orrs	r0, r7
 8000e3a:	fbb1 f8f5 	udiv	r8, r1, r5
 8000e3e:	0c03      	lsrs	r3, r0, #16
 8000e40:	fb05 1118 	mls	r1, r5, r8, r1
 8000e44:	fa1f f78e 	uxth.w	r7, lr
 8000e48:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8000e4c:	fb07 f308 	mul.w	r3, r7, r8
 8000e50:	428b      	cmp	r3, r1
 8000e52:	fa0c fc02 	lsl.w	ip, ip, r2
 8000e56:	d909      	bls.n	8000e6c <__divdi3+0x22c>
 8000e58:	eb11 010e 	adds.w	r1, r1, lr
 8000e5c:	f108 39ff 	add.w	r9, r8, #4294967295
 8000e60:	d230      	bcs.n	8000ec4 <__divdi3+0x284>
 8000e62:	428b      	cmp	r3, r1
 8000e64:	d92e      	bls.n	8000ec4 <__divdi3+0x284>
 8000e66:	f1a8 0802 	sub.w	r8, r8, #2
 8000e6a:	4471      	add	r1, lr
 8000e6c:	1ac9      	subs	r1, r1, r3
 8000e6e:	b280      	uxth	r0, r0
 8000e70:	fbb1 f3f5 	udiv	r3, r1, r5
 8000e74:	fb05 1113 	mls	r1, r5, r3, r1
 8000e78:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000e7c:	fb07 f703 	mul.w	r7, r7, r3
 8000e80:	428f      	cmp	r7, r1
 8000e82:	d908      	bls.n	8000e96 <__divdi3+0x256>
 8000e84:	eb11 010e 	adds.w	r1, r1, lr
 8000e88:	f103 30ff 	add.w	r0, r3, #4294967295
 8000e8c:	d216      	bcs.n	8000ebc <__divdi3+0x27c>
 8000e8e:	428f      	cmp	r7, r1
 8000e90:	d914      	bls.n	8000ebc <__divdi3+0x27c>
 8000e92:	3b02      	subs	r3, #2
 8000e94:	4471      	add	r1, lr
 8000e96:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000e9a:	1bc9      	subs	r1, r1, r7
 8000e9c:	fba3 890c 	umull	r8, r9, r3, ip
 8000ea0:	4549      	cmp	r1, r9
 8000ea2:	d309      	bcc.n	8000eb8 <__divdi3+0x278>
 8000ea4:	d005      	beq.n	8000eb2 <__divdi3+0x272>
 8000ea6:	2200      	movs	r2, #0
 8000ea8:	e71d      	b.n	8000ce6 <__divdi3+0xa6>
 8000eaa:	4696      	mov	lr, r2
 8000eac:	e6fe      	b.n	8000cac <__divdi3+0x6c>
 8000eae:	4613      	mov	r3, r2
 8000eb0:	e711      	b.n	8000cd6 <__divdi3+0x96>
 8000eb2:	4094      	lsls	r4, r2
 8000eb4:	4544      	cmp	r4, r8
 8000eb6:	d2f6      	bcs.n	8000ea6 <__divdi3+0x266>
 8000eb8:	3b01      	subs	r3, #1
 8000eba:	e7f4      	b.n	8000ea6 <__divdi3+0x266>
 8000ebc:	4603      	mov	r3, r0
 8000ebe:	e7ea      	b.n	8000e96 <__divdi3+0x256>
 8000ec0:	4688      	mov	r8, r1
 8000ec2:	e7a5      	b.n	8000e10 <__divdi3+0x1d0>
 8000ec4:	46c8      	mov	r8, r9
 8000ec6:	e7d1      	b.n	8000e6c <__divdi3+0x22c>
 8000ec8:	4602      	mov	r2, r0
 8000eca:	e78c      	b.n	8000de6 <__divdi3+0x1a6>
 8000ecc:	4613      	mov	r3, r2
 8000ece:	e70a      	b.n	8000ce6 <__divdi3+0xa6>
 8000ed0:	3b02      	subs	r3, #2
 8000ed2:	e757      	b.n	8000d84 <__divdi3+0x144>
 8000ed4:	f1a8 0802 	sub.w	r8, r8, #2
 8000ed8:	442f      	add	r7, r5
 8000eda:	e73f      	b.n	8000d5c <__divdi3+0x11c>

08000edc <__udivdi3>:
 8000edc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ee0:	2b00      	cmp	r3, #0
 8000ee2:	d144      	bne.n	8000f6e <__udivdi3+0x92>
 8000ee4:	428a      	cmp	r2, r1
 8000ee6:	4615      	mov	r5, r2
 8000ee8:	4604      	mov	r4, r0
 8000eea:	d94f      	bls.n	8000f8c <__udivdi3+0xb0>
 8000eec:	fab2 f782 	clz	r7, r2
 8000ef0:	460e      	mov	r6, r1
 8000ef2:	b14f      	cbz	r7, 8000f08 <__udivdi3+0x2c>
 8000ef4:	f1c7 0320 	rsb	r3, r7, #32
 8000ef8:	40b9      	lsls	r1, r7
 8000efa:	fa20 f603 	lsr.w	r6, r0, r3
 8000efe:	fa02 f507 	lsl.w	r5, r2, r7
 8000f02:	430e      	orrs	r6, r1
 8000f04:	fa00 f407 	lsl.w	r4, r0, r7
 8000f08:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000f0c:	0c23      	lsrs	r3, r4, #16
 8000f0e:	fbb6 f0fe 	udiv	r0, r6, lr
 8000f12:	b2af      	uxth	r7, r5
 8000f14:	fb0e 6110 	mls	r1, lr, r0, r6
 8000f18:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000f1c:	fb07 f100 	mul.w	r1, r7, r0
 8000f20:	4299      	cmp	r1, r3
 8000f22:	d909      	bls.n	8000f38 <__udivdi3+0x5c>
 8000f24:	195b      	adds	r3, r3, r5
 8000f26:	f100 32ff 	add.w	r2, r0, #4294967295
 8000f2a:	f080 80ec 	bcs.w	8001106 <__udivdi3+0x22a>
 8000f2e:	4299      	cmp	r1, r3
 8000f30:	f240 80e9 	bls.w	8001106 <__udivdi3+0x22a>
 8000f34:	3802      	subs	r0, #2
 8000f36:	442b      	add	r3, r5
 8000f38:	1a5a      	subs	r2, r3, r1
 8000f3a:	b2a4      	uxth	r4, r4
 8000f3c:	fbb2 f3fe 	udiv	r3, r2, lr
 8000f40:	fb0e 2213 	mls	r2, lr, r3, r2
 8000f44:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
 8000f48:	fb07 f703 	mul.w	r7, r7, r3
 8000f4c:	4297      	cmp	r7, r2
 8000f4e:	d908      	bls.n	8000f62 <__udivdi3+0x86>
 8000f50:	1952      	adds	r2, r2, r5
 8000f52:	f103 31ff 	add.w	r1, r3, #4294967295
 8000f56:	f080 80d8 	bcs.w	800110a <__udivdi3+0x22e>
 8000f5a:	4297      	cmp	r7, r2
 8000f5c:	f240 80d5 	bls.w	800110a <__udivdi3+0x22e>
 8000f60:	3b02      	subs	r3, #2
 8000f62:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000f66:	2600      	movs	r6, #0
 8000f68:	4631      	mov	r1, r6
 8000f6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000f6e:	428b      	cmp	r3, r1
 8000f70:	d847      	bhi.n	8001002 <__udivdi3+0x126>
 8000f72:	fab3 f683 	clz	r6, r3
 8000f76:	2e00      	cmp	r6, #0
 8000f78:	d148      	bne.n	800100c <__udivdi3+0x130>
 8000f7a:	428b      	cmp	r3, r1
 8000f7c:	d302      	bcc.n	8000f84 <__udivdi3+0xa8>
 8000f7e:	4282      	cmp	r2, r0
 8000f80:	f200 80cd 	bhi.w	800111e <__udivdi3+0x242>
 8000f84:	2001      	movs	r0, #1
 8000f86:	4631      	mov	r1, r6
 8000f88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000f8c:	b912      	cbnz	r2, 8000f94 <__udivdi3+0xb8>
 8000f8e:	2501      	movs	r5, #1
 8000f90:	fbb5 f5f2 	udiv	r5, r5, r2
 8000f94:	fab5 f885 	clz	r8, r5
 8000f98:	f1b8 0f00 	cmp.w	r8, #0
 8000f9c:	d177      	bne.n	800108e <__udivdi3+0x1b2>
 8000f9e:	1b4a      	subs	r2, r1, r5
 8000fa0:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000fa4:	b2af      	uxth	r7, r5
 8000fa6:	2601      	movs	r6, #1
 8000fa8:	fbb2 f0fe 	udiv	r0, r2, lr
 8000fac:	0c23      	lsrs	r3, r4, #16
 8000fae:	fb0e 2110 	mls	r1, lr, r0, r2
 8000fb2:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8000fb6:	fb07 f300 	mul.w	r3, r7, r0
 8000fba:	428b      	cmp	r3, r1
 8000fbc:	d907      	bls.n	8000fce <__udivdi3+0xf2>
 8000fbe:	1949      	adds	r1, r1, r5
 8000fc0:	f100 32ff 	add.w	r2, r0, #4294967295
 8000fc4:	d202      	bcs.n	8000fcc <__udivdi3+0xf0>
 8000fc6:	428b      	cmp	r3, r1
 8000fc8:	f200 80ba 	bhi.w	8001140 <__udivdi3+0x264>
 8000fcc:	4610      	mov	r0, r2
 8000fce:	1ac9      	subs	r1, r1, r3
 8000fd0:	b2a4      	uxth	r4, r4
 8000fd2:	fbb1 f3fe 	udiv	r3, r1, lr
 8000fd6:	fb0e 1113 	mls	r1, lr, r3, r1
 8000fda:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000fde:	fb07 f703 	mul.w	r7, r7, r3
 8000fe2:	42a7      	cmp	r7, r4
 8000fe4:	d908      	bls.n	8000ff8 <__udivdi3+0x11c>
 8000fe6:	1964      	adds	r4, r4, r5
 8000fe8:	f103 32ff 	add.w	r2, r3, #4294967295
 8000fec:	f080 808f 	bcs.w	800110e <__udivdi3+0x232>
 8000ff0:	42a7      	cmp	r7, r4
 8000ff2:	f240 808c 	bls.w	800110e <__udivdi3+0x232>
 8000ff6:	3b02      	subs	r3, #2
 8000ff8:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000ffc:	4631      	mov	r1, r6
 8000ffe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001002:	2600      	movs	r6, #0
 8001004:	4630      	mov	r0, r6
 8001006:	4631      	mov	r1, r6
 8001008:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800100c:	f1c6 0420 	rsb	r4, r6, #32
 8001010:	fa22 f504 	lsr.w	r5, r2, r4
 8001014:	40b3      	lsls	r3, r6
 8001016:	432b      	orrs	r3, r5
 8001018:	fa20 fc04 	lsr.w	ip, r0, r4
 800101c:	fa01 f706 	lsl.w	r7, r1, r6
 8001020:	fa21 f504 	lsr.w	r5, r1, r4
 8001024:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 8001028:	ea4c 0707 	orr.w	r7, ip, r7
 800102c:	fbb5 f8fe 	udiv	r8, r5, lr
 8001030:	0c39      	lsrs	r1, r7, #16
 8001032:	fb0e 5518 	mls	r5, lr, r8, r5
 8001036:	fa1f fc83 	uxth.w	ip, r3
 800103a:	ea41 4505 	orr.w	r5, r1, r5, lsl #16
 800103e:	fb0c f108 	mul.w	r1, ip, r8
 8001042:	42a9      	cmp	r1, r5
 8001044:	fa02 f206 	lsl.w	r2, r2, r6
 8001048:	d904      	bls.n	8001054 <__udivdi3+0x178>
 800104a:	18ed      	adds	r5, r5, r3
 800104c:	f108 34ff 	add.w	r4, r8, #4294967295
 8001050:	d367      	bcc.n	8001122 <__udivdi3+0x246>
 8001052:	46a0      	mov	r8, r4
 8001054:	1a6d      	subs	r5, r5, r1
 8001056:	b2bf      	uxth	r7, r7
 8001058:	fbb5 f4fe 	udiv	r4, r5, lr
 800105c:	fb0e 5514 	mls	r5, lr, r4, r5
 8001060:	ea47 4105 	orr.w	r1, r7, r5, lsl #16
 8001064:	fb0c fc04 	mul.w	ip, ip, r4
 8001068:	458c      	cmp	ip, r1
 800106a:	d904      	bls.n	8001076 <__udivdi3+0x19a>
 800106c:	18c9      	adds	r1, r1, r3
 800106e:	f104 35ff 	add.w	r5, r4, #4294967295
 8001072:	d35c      	bcc.n	800112e <__udivdi3+0x252>
 8001074:	462c      	mov	r4, r5
 8001076:	ea44 4408 	orr.w	r4, r4, r8, lsl #16
 800107a:	ebcc 0101 	rsb	r1, ip, r1
 800107e:	fba4 2302 	umull	r2, r3, r4, r2
 8001082:	4299      	cmp	r1, r3
 8001084:	d348      	bcc.n	8001118 <__udivdi3+0x23c>
 8001086:	d044      	beq.n	8001112 <__udivdi3+0x236>
 8001088:	4620      	mov	r0, r4
 800108a:	2600      	movs	r6, #0
 800108c:	e76c      	b.n	8000f68 <__udivdi3+0x8c>
 800108e:	f1c8 0420 	rsb	r4, r8, #32
 8001092:	fa01 f308 	lsl.w	r3, r1, r8
 8001096:	fa05 f508 	lsl.w	r5, r5, r8
 800109a:	fa20 f704 	lsr.w	r7, r0, r4
 800109e:	40e1      	lsrs	r1, r4
 80010a0:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80010a4:	431f      	orrs	r7, r3
 80010a6:	fbb1 f6fe 	udiv	r6, r1, lr
 80010aa:	0c3a      	lsrs	r2, r7, #16
 80010ac:	fb0e 1116 	mls	r1, lr, r6, r1
 80010b0:	fa1f fc85 	uxth.w	ip, r5
 80010b4:	ea42 4301 	orr.w	r3, r2, r1, lsl #16
 80010b8:	fb0c f206 	mul.w	r2, ip, r6
 80010bc:	429a      	cmp	r2, r3
 80010be:	fa00 f408 	lsl.w	r4, r0, r8
 80010c2:	d907      	bls.n	80010d4 <__udivdi3+0x1f8>
 80010c4:	195b      	adds	r3, r3, r5
 80010c6:	f106 31ff 	add.w	r1, r6, #4294967295
 80010ca:	d237      	bcs.n	800113c <__udivdi3+0x260>
 80010cc:	429a      	cmp	r2, r3
 80010ce:	d935      	bls.n	800113c <__udivdi3+0x260>
 80010d0:	3e02      	subs	r6, #2
 80010d2:	442b      	add	r3, r5
 80010d4:	1a9b      	subs	r3, r3, r2
 80010d6:	b2bf      	uxth	r7, r7
 80010d8:	fbb3 f0fe 	udiv	r0, r3, lr
 80010dc:	fb0e 3310 	mls	r3, lr, r0, r3
 80010e0:	ea47 4303 	orr.w	r3, r7, r3, lsl #16
 80010e4:	fb0c f100 	mul.w	r1, ip, r0
 80010e8:	4299      	cmp	r1, r3
 80010ea:	d907      	bls.n	80010fc <__udivdi3+0x220>
 80010ec:	195b      	adds	r3, r3, r5
 80010ee:	f100 32ff 	add.w	r2, r0, #4294967295
 80010f2:	d221      	bcs.n	8001138 <__udivdi3+0x25c>
 80010f4:	4299      	cmp	r1, r3
 80010f6:	d91f      	bls.n	8001138 <__udivdi3+0x25c>
 80010f8:	3802      	subs	r0, #2
 80010fa:	442b      	add	r3, r5
 80010fc:	1a5a      	subs	r2, r3, r1
 80010fe:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 8001102:	4667      	mov	r7, ip
 8001104:	e750      	b.n	8000fa8 <__udivdi3+0xcc>
 8001106:	4610      	mov	r0, r2
 8001108:	e716      	b.n	8000f38 <__udivdi3+0x5c>
 800110a:	460b      	mov	r3, r1
 800110c:	e729      	b.n	8000f62 <__udivdi3+0x86>
 800110e:	4613      	mov	r3, r2
 8001110:	e772      	b.n	8000ff8 <__udivdi3+0x11c>
 8001112:	40b0      	lsls	r0, r6
 8001114:	4290      	cmp	r0, r2
 8001116:	d2b7      	bcs.n	8001088 <__udivdi3+0x1ac>
 8001118:	1e60      	subs	r0, r4, #1
 800111a:	2600      	movs	r6, #0
 800111c:	e724      	b.n	8000f68 <__udivdi3+0x8c>
 800111e:	4630      	mov	r0, r6
 8001120:	e722      	b.n	8000f68 <__udivdi3+0x8c>
 8001122:	42a9      	cmp	r1, r5
 8001124:	d995      	bls.n	8001052 <__udivdi3+0x176>
 8001126:	f1a8 0802 	sub.w	r8, r8, #2
 800112a:	441d      	add	r5, r3
 800112c:	e792      	b.n	8001054 <__udivdi3+0x178>
 800112e:	458c      	cmp	ip, r1
 8001130:	d9a0      	bls.n	8001074 <__udivdi3+0x198>
 8001132:	3c02      	subs	r4, #2
 8001134:	4419      	add	r1, r3
 8001136:	e79e      	b.n	8001076 <__udivdi3+0x19a>
 8001138:	4610      	mov	r0, r2
 800113a:	e7df      	b.n	80010fc <__udivdi3+0x220>
 800113c:	460e      	mov	r6, r1
 800113e:	e7c9      	b.n	80010d4 <__udivdi3+0x1f8>
 8001140:	3802      	subs	r0, #2
 8001142:	4429      	add	r1, r5
 8001144:	e743      	b.n	8000fce <__udivdi3+0xf2>
 8001146:	bf00      	nop

08001148 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8001148:	f8df d030 	ldr.w	sp, [pc, #48]	; 800117c <LoopFillZerobss+0x10>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 800114c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800114e:	e003      	b.n	8001158 <LoopCopyDataInit>

08001150 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8001150:	4b0b      	ldr	r3, [pc, #44]	; (8001180 <LoopFillZerobss+0x14>)
  ldr  r3, [r3, r1]
 8001152:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8001154:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8001156:	3104      	adds	r1, #4

08001158 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8001158:	480a      	ldr	r0, [pc, #40]	; (8001184 <LoopFillZerobss+0x18>)
  ldr  r3, =_edata
 800115a:	4b0b      	ldr	r3, [pc, #44]	; (8001188 <LoopFillZerobss+0x1c>)
  adds  r2, r0, r1
 800115c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 800115e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8001160:	d3f6      	bcc.n	8001150 <CopyDataInit>
  ldr  r2, =_sbss
 8001162:	4a0a      	ldr	r2, [pc, #40]	; (800118c <LoopFillZerobss+0x20>)
  b  LoopFillZerobss
 8001164:	e002      	b.n	800116c <LoopFillZerobss>

08001166 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8001166:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8001168:	f842 3b04 	str.w	r3, [r2], #4

0800116c <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 800116c:	4b08      	ldr	r3, [pc, #32]	; (8001190 <LoopFillZerobss+0x24>)
  cmp  r2, r3
 800116e:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8001170:	d3f9      	bcc.n	8001166 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8001172:	f000 f811 	bl	8001198 <SystemInit>
/* Call static constructors */
   /* bl __libc_init_array */
/* Call the application's entry point.*/
  bl  main
 8001176:	f000 f8cb 	bl	8001310 <main>
  bx  lr    
 800117a:	4770      	bx	lr

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 800117c:	2001ffff 	.word	0x2001ffff
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
  b  LoopCopyDataInit

CopyDataInit:
  ldr  r3, =_sidata
 8001180:	0802d86c 	.word	0x0802d86c
  ldr  r3, [r3, r1]
  str  r3, [r0, r1]
  adds  r1, r1, #4
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8001184:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8001188:	20000b7c 	.word	0x20000b7c
  adds  r2, r0, r1
  cmp  r2, r3
  bcc  CopyDataInit
  ldr  r2, =_sbss
 800118c:	2000d37c 	.word	0x2000d37c
FillZerobss:
  movs  r3, #0
  str  r3, [r2], #4
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8001190:	2000e780 	.word	0x2000e780

08001194 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001194:	e7fe      	b.n	8001194 <ADC_IRQHandler>
	...

08001198 <SystemInit>:
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 8001198:	4b0c      	ldr	r3, [pc, #48]	; (80011cc <SystemInit+0x34>)
 800119a:	681a      	ldr	r2, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 800119c:	2100      	movs	r1, #0
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 800119e:	f042 0201 	orr.w	r2, r2, #1
 80011a2:	601a      	str	r2, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 80011a4:	6099      	str	r1, [r3, #8]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 80011a6:	681a      	ldr	r2, [r3, #0]
 80011a8:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 80011ac:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80011b0:	601a      	str	r2, [r3, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x24003010;
 80011b2:	4a07      	ldr	r2, [pc, #28]	; (80011d0 <SystemInit+0x38>)
 80011b4:	605a      	str	r2, [r3, #4]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 80011b6:	681a      	ldr	r2, [r3, #0]
 80011b8:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80011bc:	601a      	str	r2, [r3, #0]

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 80011be:	60d9      	str	r1, [r3, #12]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80011c0:	4b04      	ldr	r3, [pc, #16]	; (80011d4 <SystemInit+0x3c>)
 80011c2:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80011c6:	609a      	str	r2, [r3, #8]
 80011c8:	4770      	bx	lr
 80011ca:	bf00      	nop
 80011cc:	40023800 	.word	0x40023800
 80011d0:	24003010 	.word	0x24003010
 80011d4:	e000ed00 	.word	0xe000ed00

080011d8 <delay_msec>:
  * @retval	None
  */
void delay_msec(uint32_t msec){
  uint32_t target;
  
  target = msec_counter + msec;
 80011d8:	4b03      	ldr	r3, [pc, #12]	; (80011e8 <delay_msec+0x10>)
 80011da:	681a      	ldr	r2, [r3, #0]
 80011dc:	4410      	add	r0, r2
  while(msec_counter < target){
 80011de:	681a      	ldr	r2, [r3, #0]
 80011e0:	4282      	cmp	r2, r0
 80011e2:	d3fc      	bcc.n	80011de <delay_msec+0x6>
  	;
  }
}
 80011e4:	4770      	bx	lr
 80011e6:	bf00      	nop
 80011e8:	2000d384 	.word	0x2000d384

080011ec <timeout_timer>:
  * @retval	time
  */
uint32_t timeout_timer(void){
	uint32_t time, prev_time;
	
	time = Timeout_Timer_0;
 80011ec:	4b01      	ldr	r3, [pc, #4]	; (80011f4 <timeout_timer+0x8>)
 80011ee:	6818      	ldr	r0, [r3, #0]
	
	return time;
}
 80011f0:	4770      	bx	lr
 80011f2:	bf00      	nop
 80011f4:	2000d37c 	.word	0x2000d37c

080011f8 <NMI_Handler>:
  * @brief  This function handles NMI exception.
  * @param  None
  * @retval None
  */
void NMI_Handler(void)
{
 80011f8:	4770      	bx	lr

080011fa <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* Go to infinite loop when Hard Fault exception occurs */
  while (1)
  {
  }
 80011fa:	e7fe      	b.n	80011fa <HardFault_Handler>

080011fc <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* Go to infinite loop when Memory Manage exception occurs */
  while (1)
  {
  }
 80011fc:	e7fe      	b.n	80011fc <MemManage_Handler>

080011fe <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* Go to infinite loop when Bus Fault exception occurs */
  while (1)
  {
  }
 80011fe:	e7fe      	b.n	80011fe <BusFault_Handler>

08001200 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* Go to infinite loop when Usage Fault exception occurs */
  while (1)
  {
  }
 8001200:	e7fe      	b.n	8001200 <UsageFault_Handler>

08001202 <SVC_Handler>:
  * @brief  This function handles SVCall exception.
  * @param  None
  * @retval None
  */
void SVC_Handler(void)
{
 8001202:	4770      	bx	lr

08001204 <DebugMon_Handler>:
  * @brief  This function handles Debug Monitor exception.
  * @param  None
  * @retval None
  */
void DebugMon_Handler(void)
{
 8001204:	4770      	bx	lr

08001206 <PendSV_Handler>:
  * @brief  This function handles PendSVC exception.
  * @param  None
  * @retval None
  */
void PendSV_Handler(void)
{
 8001206:	4770      	bx	lr

08001208 <SysTick_Handler>:
  * @brief  This function handles SysTick Handler.
  * @param  None
  * @retval None
  */
void SysTick_Handler(void)
{
 8001208:	b508      	push	{r3, lr}
	HAL_IncTick();
 800120a:	f002 fe27 	bl	8003e5c <HAL_IncTick>
	
	Timeout_Timer_0++;
 800120e:	4a13      	ldr	r2, [pc, #76]	; (800125c <SysTick_Handler+0x54>)
 8001210:	6813      	ldr	r3, [r2, #0]
 8001212:	3301      	adds	r3, #1
 8001214:	6013      	str	r3, [r2, #0]
  
	//---------------------------
	// msec counter
	//---------------------------
	msec_counter++;
 8001216:	4b12      	ldr	r3, [pc, #72]	; (8001260 <SysTick_Handler+0x58>)
 8001218:	681a      	ldr	r2, [r3, #0]
 800121a:	3201      	adds	r2, #1
 800121c:	601a      	str	r2, [r3, #0]
	switch(msec_counter % 10){
 800121e:	6818      	ldr	r0, [r3, #0]
 8001220:	220a      	movs	r2, #10
 8001222:	fbb0 f1f2 	udiv	r1, r0, r2
 8001226:	fb02 0211 	mls	r2, r2, r1, r0
 800122a:	b912      	cbnz	r2, 8001232 <SysTick_Handler+0x2a>
		case 0:
			gui_Exec = true;
 800122c:	4a0d      	ldr	r2, [pc, #52]	; (8001264 <SysTick_Handler+0x5c>)
 800122e:	2101      	movs	r1, #1
 8001230:	7011      	strb	r1, [r2, #0]
			
		default:
			break;
	}

	switch(msec_counter % 500){
 8001232:	6819      	ldr	r1, [r3, #0]
 8001234:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8001238:	fbb1 f2f3 	udiv	r2, r1, r3
 800123c:	fb03 1312 	mls	r3, r3, r2, r1
 8001240:	b913      	cbnz	r3, 8001248 <SysTick_Handler+0x40>
		case 0:
			modBus_Update = true;
 8001242:	4b09      	ldr	r3, [pc, #36]	; (8001268 <SysTick_Handler+0x60>)
 8001244:	2201      	movs	r2, #1
 8001246:	701a      	strb	r2, [r3, #0]
	}

	//---------------------------
	// Touch-Timer
	//---------------------------
	touch_timer++;
 8001248:	4b08      	ldr	r3, [pc, #32]	; (800126c <SysTick_Handler+0x64>)
 800124a:	681a      	ldr	r2, [r3, #0]
 800124c:	3201      	adds	r2, #1
 800124e:	601a      	str	r2, [r3, #0]
	switch(touch_timer % 1){
 8001250:	681b      	ldr	r3, [r3, #0]
		case 0:
			Touch_Flagged = true;
 8001252:	4b07      	ldr	r3, [pc, #28]	; (8001270 <SysTick_Handler+0x68>)
 8001254:	2201      	movs	r2, #1
 8001256:	701a      	strb	r2, [r3, #0]
 8001258:	bd08      	pop	{r3, pc}
 800125a:	bf00      	nop
 800125c:	2000d37c 	.word	0x2000d37c
 8001260:	2000d384 	.word	0x2000d384
 8001264:	2000d388 	.word	0x2000d388
 8001268:	2000d38a 	.word	0x2000d38a
 800126c:	2000d380 	.word	0x2000d380
 8001270:	2000d389 	.word	0x2000d389

08001274 <USART2_IRQHandler>:
  * @retval None
  */
void USARTx_IRQHandler(void)
{

  HAL_UART_IRQHandler(&UartHandle);
 8001274:	4801      	ldr	r0, [pc, #4]	; (800127c <USART2_IRQHandler+0x8>)
 8001276:	f002 ba21 	b.w	80036bc <HAL_UART_IRQHandler>
 800127a:	bf00      	nop
 800127c:	2000e2bc 	.word	0x2000e2bc

08001280 <Error_Handler>:
/**
  * @brief	Handles general errors.
  * @param	None
  * @retval	None
  */
static void Error_Handler(void){
 8001280:	b508      	push	{r3, lr}
	
	while(1){
		/* Put error on LED3 */
		HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_13);
 8001282:	4804      	ldr	r0, [pc, #16]	; (8001294 <Error_Handler+0x14>)
 8001284:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001288:	f002 fdb0 	bl	8003dec <HAL_GPIO_TogglePin>
		printf("Peripheral config error\n");
 800128c:	4802      	ldr	r0, [pc, #8]	; (8001298 <Error_Handler+0x18>)
 800128e:	f011 fd91 	bl	8012db4 <puts>
	}
 8001292:	e7f6      	b.n	8001282 <Error_Handler+0x2>
 8001294:	40020c00 	.word	0x40020c00
 8001298:	08018800 	.word	0x08018800

0800129c <Debug_ITMDebugEnable>:
void Debug_ITMDebugEnable(void){
	volatile unsigned int *ITM_TER      = (volatile unsigned int *)0xE0000E00;
	volatile unsigned int *SCB_DHCSR 		= (volatile unsigned int *)0xE000EDF0;
	volatile unsigned int *DBGMCU_CR 		= (volatile unsigned int *)0xE0042004;

	*DBGMCU_CR |= 0x27; // DBGMCU_CR
 800129c:	4a08      	ldr	r2, [pc, #32]	; (80012c0 <Debug_ITMDebugEnable+0x24>)
 800129e:	6813      	ldr	r3, [r2, #0]
 80012a0:	f043 0327 	orr.w	r3, r3, #39	; 0x27
 80012a4:	6013      	str	r3, [r2, #0]

  if ((*SCB_DHCSR & 1) && (*ITM_TER & 1)) // Enabled?
 80012a6:	4b07      	ldr	r3, [pc, #28]	; (80012c4 <Debug_ITMDebugEnable+0x28>)
 80012a8:	681b      	ldr	r3, [r3, #0]
 80012aa:	07da      	lsls	r2, r3, #31
 80012ac:	d506      	bpl.n	80012bc <Debug_ITMDebugEnable+0x20>
 80012ae:	4b06      	ldr	r3, [pc, #24]	; (80012c8 <Debug_ITMDebugEnable+0x2c>)
 80012b0:	681b      	ldr	r3, [r3, #0]
 80012b2:	07db      	lsls	r3, r3, #31
    Debug_ITMDebug = 1;
 80012b4:	bf42      	ittt	mi
 80012b6:	4b05      	ldrmi	r3, [pc, #20]	; (80012cc <Debug_ITMDebugEnable+0x30>)
 80012b8:	2201      	movmi	r2, #1
 80012ba:	601a      	strmi	r2, [r3, #0]
 80012bc:	4770      	bx	lr
 80012be:	bf00      	nop
 80012c0:	e0042004 	.word	0xe0042004
 80012c4:	e000edf0 	.word	0xe000edf0
 80012c8:	e0000e00 	.word	0xe0000e00
 80012cc:	2000d38c 	.word	0x2000d38c

080012d0 <Debug_ITMDebugOutputChar>:

void Debug_ITMDebugOutputChar(char ch){
	static volatile unsigned int *ITM_STIM0 = (volatile unsigned int *)0xE0000000; // ITM Port 0
	static volatile unsigned int *SCB_DEMCR = (volatile unsigned int *)0xE000EDFC;

	if (Debug_ITMDebug && (*SCB_DEMCR & 0x01000000))
 80012d0:	4b06      	ldr	r3, [pc, #24]	; (80012ec <Debug_ITMDebugOutputChar+0x1c>)
 80012d2:	681b      	ldr	r3, [r3, #0]
 80012d4:	b14b      	cbz	r3, 80012ea <Debug_ITMDebugOutputChar+0x1a>
 80012d6:	4b06      	ldr	r3, [pc, #24]	; (80012f0 <Debug_ITMDebugOutputChar+0x20>)
 80012d8:	681b      	ldr	r3, [r3, #0]
 80012da:	01db      	lsls	r3, r3, #7
 80012dc:	d505      	bpl.n	80012ea <Debug_ITMDebugOutputChar+0x1a>
	{
		while(*ITM_STIM0 == 0);
 80012de:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80012e2:	681a      	ldr	r2, [r3, #0]
 80012e4:	2a00      	cmp	r2, #0
 80012e6:	d0fa      	beq.n	80012de <Debug_ITMDebugOutputChar+0xe>
  	*((volatile char *)ITM_STIM0) = ch;
 80012e8:	7018      	strb	r0, [r3, #0]
 80012ea:	4770      	bx	lr
 80012ec:	2000d38c 	.word	0x2000d38c
 80012f0:	e000edfc 	.word	0xe000edfc

080012f4 <Debug_ITMDebugOutputString>:
}

//****************************************************************************

void Debug_ITMDebugOutputString(char *Buffer){
	if (Debug_ITMDebug)
 80012f4:	4b05      	ldr	r3, [pc, #20]	; (800130c <Debug_ITMDebugOutputString+0x18>)
 80012f6:	681b      	ldr	r3, [r3, #0]
	}
}

//****************************************************************************

void Debug_ITMDebugOutputString(char *Buffer){
 80012f8:	b510      	push	{r4, lr}
	if (Debug_ITMDebug)
 80012fa:	b133      	cbz	r3, 800130a <Debug_ITMDebugOutputString+0x16>
 80012fc:	1e44      	subs	r4, r0, #1
		while(*Buffer)
 80012fe:	f814 0f01 	ldrb.w	r0, [r4, #1]!
 8001302:	b110      	cbz	r0, 800130a <Debug_ITMDebugOutputString+0x16>
			Debug_ITMDebugOutputChar(*Buffer++);
 8001304:	f7ff ffe4 	bl	80012d0 <Debug_ITMDebugOutputChar>
 8001308:	e7f9      	b.n	80012fe <Debug_ITMDebugOutputString+0xa>
 800130a:	bd10      	pop	{r4, pc}
 800130c:	2000d38c 	.word	0x2000d38c

08001310 <main>:
  * 		Update GUI every 10ms.
  * 		Update Touch every 1ms.
  * 		return here after a call.
  *	@retval	None
  */
int main(void){
 8001310:	b500      	push	{lr}
 8001312:	b093      	sub	sp, #76	; 0x4c
	/* STM32f4xx HAL library initialization:
	 - Cofigure Flash prefetch, flash preread and Buffer caches
	 - Systick timer config
	 - Low level init
	 */
	HAL_Init();
 8001314:	f002 fd8c 	bl	8003e30 <HAL_Init>
static void SystemClock_Config(void){
	RCC_ClkInitTypeDef RCC_ClkInitStruct;
	RCC_OscInitTypeDef RCC_OscInitStruct;

	/* Enable Power control clock */
	__HAL_RCC_PWR_CLK_ENABLE();
 8001318:	4a62      	ldr	r2, [pc, #392]	; (80014a4 <main+0x194>)
 800131a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800131c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001320:	6413      	str	r3, [r2, #64]	; 0x40

	/* The voltage scaling allows optimizing the power consumption when the
	   device is clocked below the maximum system frequency, to update the
	   voltage scaling value regarding system frequency refer to product
	   datasheet. */
	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001322:	f5a2 32e4 	sub.w	r2, r2, #116736	; 0x1c800

	/* Enable HSE Oscillator and activate PLL with HSE as source */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001326:	2402      	movs	r4, #2

	/* The voltage scaling allows optimizing the power consumption when the
	   device is clocked below the maximum system frequency, to update the
	   voltage scaling value regarding system frequency refer to product
	   datasheet. */
	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001328:	6813      	ldr	r3, [r2, #0]
 800132a:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800132e:	6013      	str	r3, [r2, #0]

	/* Enable HSE Oscillator and activate PLL with HSE as source */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001330:	2301      	movs	r3, #1
 8001332:	9306      	str	r3, [sp, #24]
	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001334:	9307      	str	r3, [sp, #28]
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001336:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 800133a:	930d      	str	r3, [sp, #52]	; 0x34
	RCC_OscInitStruct.PLL.PLLM = 8;
 800133c:	2308      	movs	r3, #8
 800133e:	930e      	str	r3, [sp, #56]	; 0x38
	RCC_OscInitStruct.PLL.PLLN = 336;
 8001340:	f44f 73a8 	mov.w	r3, #336	; 0x150
 8001344:	930f      	str	r3, [sp, #60]	; 0x3c
	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
	RCC_OscInitStruct.PLL.PLLQ = 7;
	if(HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK){
 8001346:	a806      	add	r0, sp, #24
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
	RCC_OscInitStruct.PLL.PLLM = 8;
	RCC_OscInitStruct.PLL.PLLN = 336;
	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
	RCC_OscInitStruct.PLL.PLLQ = 7;
 8001348:	2307      	movs	r3, #7
	__HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);

	/* Enable HSE Oscillator and activate PLL with HSE as source */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800134a:	940c      	str	r4, [sp, #48]	; 0x30
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
	RCC_OscInitStruct.PLL.PLLM = 8;
	RCC_OscInitStruct.PLL.PLLN = 336;
	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800134c:	9410      	str	r4, [sp, #64]	; 0x40
	RCC_OscInitStruct.PLL.PLLQ = 7;
 800134e:	9311      	str	r3, [sp, #68]	; 0x44
	if(HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK){
 8001350:	f001 f858 	bl	8002404 <HAL_RCC_OscConfig>
 8001354:	b108      	cbz	r0, 800135a <main+0x4a>
		/* Initialization Error */
		Error_Handler();
 8001356:	f7ff ff93 	bl	8001280 <Error_Handler>
	}
	/* Select PLL as system clock source and configure the HCLK, PCLK1
	   and PCLK2 clocks dividers */
	RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK	| RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2);
 800135a:	230f      	movs	r3, #15
 800135c:	9301      	str	r3, [sp, #4]
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800135e:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
	}
	/* Select PLL as system clock source and configure the HCLK, PCLK1
	   and PCLK2 clocks dividers */
	RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK	| RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2);
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001362:	9003      	str	r0, [sp, #12]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001364:	9304      	str	r3, [sp, #16]
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
	if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK){
 8001366:	a801      	add	r0, sp, #4
	   and PCLK2 clocks dividers */
	RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK	| RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2);
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001368:	f44f 5380 	mov.w	r3, #4096	; 0x1000
	if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK){
 800136c:	2105      	movs	r1, #5
		Error_Handler();
	}
	/* Select PLL as system clock source and configure the HCLK, PCLK1
	   and PCLK2 clocks dividers */
	RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK	| RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2);
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800136e:	9402      	str	r4, [sp, #8]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001370:	9305      	str	r3, [sp, #20]
	if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK){
 8001372:	f001 fa49 	bl	8002808 <HAL_RCC_ClockConfig>
 8001376:	2800      	cmp	r0, #0
 8001378:	d1ed      	bne.n	8001356 <main+0x46>
		/* Initialization Error */
		Error_Handler();
	}

	/* STM32F407x Revision Z devices: prefetch is supported */
	if(HAL_GetREVID() == 0x1001){
 800137a:	f002 fd8b 	bl	8003e94 <HAL_GetREVID>
 800137e:	f241 0301 	movw	r3, #4097	; 0x1001
 8001382:	4298      	cmp	r0, r3
		/* Enable the Flash prefetch */
		__HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8001384:	bf01      	itttt	eq
 8001386:	4a48      	ldreq	r2, [pc, #288]	; (80014a8 <main+0x198>)
 8001388:	6813      	ldreq	r3, [r2, #0]
 800138a:	f443 7380 	orreq.w	r3, r3, #256	; 0x100
 800138e:	6013      	streq	r3, [r2, #0]

	/* configure the system clock to 168 MHz */
	SystemClock_Config();

	/* Enable TRACE debug -----------------------------------------------*/
	Debug_ITMDebugEnable();
 8001390:	f7ff ff84 	bl	800129c <Debug_ITMDebugEnable>
 	Debug_ITMDebugOutputString("SWV Enabled\n");
 8001394:	4845      	ldr	r0, [pc, #276]	; (80014ac <main+0x19c>)
 8001396:	f7ff ffad 	bl	80012f4 <Debug_ITMDebugOutputString>
	SRAM_Timing.BusTurnAroundDuration = 1;
	SRAM_Timing.CLKDivision = 1;
	SRAM_Timing.DataLatency = 1;
	SRAM_Timing.AccessMode = FSMC_ACCESS_MODE_A;

	hsram.Init.NSBank = FSMC_NORSRAM_BANK1;
 800139a:	4845      	ldr	r0, [pc, #276]	; (80014b0 <main+0x1a0>)
  * @param None
  * @retval None
  */
static void sram_init(void){
	/*	Configure the FSCM bus ---------------------------*/
	SRAM_Timing.AddressSetupTime = LCD_ILI9341_FSMC_AST;
 800139c:	4945      	ldr	r1, [pc, #276]	; (80014b4 <main+0x1a4>)
	SRAM_Timing.AddressHoldTime = 1;
 800139e:	2401      	movs	r4, #1
 80013a0:	2302      	movs	r3, #2
	SRAM_Timing.AccessMode = FSMC_ACCESS_MODE_A;

	hsram.Init.NSBank = FSMC_NORSRAM_BANK1;
	hsram.Init.DataAddressMux = FSMC_DATA_ADDRESS_MUX_DISABLE;
	hsram.Init.MemoryType = FSMC_MEMORY_TYPE_SRAM;
	hsram.Init.MemoryDataWidth = FSMC_NORSRAM_MEM_BUS_WIDTH_16;
 80013a2:	2210      	movs	r2, #16
  * @retval None
  */
static void sram_init(void){
	/*	Configure the FSCM bus ---------------------------*/
	SRAM_Timing.AddressSetupTime = LCD_ILI9341_FSMC_AST;
	SRAM_Timing.AddressHoldTime = 1;
 80013a4:	e881 0018 	stmia.w	r1, {r3, r4}
	SRAM_Timing.AccessMode = FSMC_ACCESS_MODE_A;

	hsram.Init.NSBank = FSMC_NORSRAM_BANK1;
	hsram.Init.DataAddressMux = FSMC_DATA_ADDRESS_MUX_DISABLE;
	hsram.Init.MemoryType = FSMC_MEMORY_TYPE_SRAM;
	hsram.Init.MemoryDataWidth = FSMC_NORSRAM_MEM_BUS_WIDTH_16;
 80013a8:	6142      	str	r2, [r0, #20]
  */
static void sram_init(void){
	/*	Configure the FSCM bus ---------------------------*/
	SRAM_Timing.AddressSetupTime = LCD_ILI9341_FSMC_AST;
	SRAM_Timing.AddressHoldTime = 1;
	SRAM_Timing.DataSetupTime = LCD_ILI9341_FSMC_DST;
 80013aa:	2305      	movs	r3, #5
	hsram.Init.MemoryDataWidth = FSMC_NORSRAM_MEM_BUS_WIDTH_16;
	hsram.Init.BurstAccessMode = FSMC_BURST_ACCESS_MODE_DISABLE;
	hsram.Init.WaitSignalPolarity = FSMC_WAIT_SIGNAL_POLARITY_LOW;
	hsram.Init.WrapMode = FSMC_WRAP_MODE_DISABLE;
	hsram.Init.WaitSignalActive = FSMC_WAIT_TIMING_BEFORE_WS;
	hsram.Init.WriteOperation = FSMC_WRITE_OPERATION_ENABLE;
 80013ac:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  */
static void sram_init(void){
	/*	Configure the FSCM bus ---------------------------*/
	SRAM_Timing.AddressSetupTime = LCD_ILI9341_FSMC_AST;
	SRAM_Timing.AddressHoldTime = 1;
	SRAM_Timing.DataSetupTime = LCD_ILI9341_FSMC_DST;
 80013b0:	608b      	str	r3, [r1, #8]
	hsram.Init.MemoryDataWidth = FSMC_NORSRAM_MEM_BUS_WIDTH_16;
	hsram.Init.BurstAccessMode = FSMC_BURST_ACCESS_MODE_DISABLE;
	hsram.Init.WaitSignalPolarity = FSMC_WAIT_SIGNAL_POLARITY_LOW;
	hsram.Init.WrapMode = FSMC_WRAP_MODE_DISABLE;
	hsram.Init.WaitSignalActive = FSMC_WAIT_TIMING_BEFORE_WS;
	hsram.Init.WriteOperation = FSMC_WRITE_OPERATION_ENABLE;
 80013b2:	6282      	str	r2, [r0, #40]	; 0x28
	SRAM_Timing.AddressHoldTime = 1;
	SRAM_Timing.DataSetupTime = LCD_ILI9341_FSMC_DST;
	SRAM_Timing.BusTurnAroundDuration = 1;
	SRAM_Timing.CLKDivision = 1;
	SRAM_Timing.DataLatency = 1;
	SRAM_Timing.AccessMode = FSMC_ACCESS_MODE_A;
 80013b4:	2300      	movs	r3, #0
	hsram.Init.ExtendedMode = FSMC_EXTENDED_MODE_DISABLE;
	hsram.Init.AsynchronousWait = FSMC_ASYNCHRONOUS_WAIT_DISABLE;
	hsram.Init.WriteBurst = FSMC_WRITE_BURST_DISABLE;

	/* Initialize the SRAM controller ----------------------------*/
	if(HAL_SRAM_Init(&hsram, &SRAM_Timing, &SRAM_Timing) != HAL_OK){
 80013b6:	460a      	mov	r2, r1
static void sram_init(void){
	/*	Configure the FSCM bus ---------------------------*/
	SRAM_Timing.AddressSetupTime = LCD_ILI9341_FSMC_AST;
	SRAM_Timing.AddressHoldTime = 1;
	SRAM_Timing.DataSetupTime = LCD_ILI9341_FSMC_DST;
	SRAM_Timing.BusTurnAroundDuration = 1;
 80013b8:	60cc      	str	r4, [r1, #12]
	SRAM_Timing.CLKDivision = 1;
 80013ba:	610c      	str	r4, [r1, #16]
	SRAM_Timing.DataLatency = 1;
 80013bc:	614c      	str	r4, [r1, #20]
	SRAM_Timing.AccessMode = FSMC_ACCESS_MODE_A;
 80013be:	618b      	str	r3, [r1, #24]

	hsram.Init.NSBank = FSMC_NORSRAM_BANK1;
 80013c0:	6083      	str	r3, [r0, #8]
	hsram.Init.DataAddressMux = FSMC_DATA_ADDRESS_MUX_DISABLE;
 80013c2:	60c3      	str	r3, [r0, #12]
	hsram.Init.MemoryType = FSMC_MEMORY_TYPE_SRAM;
 80013c4:	6103      	str	r3, [r0, #16]
	hsram.Init.MemoryDataWidth = FSMC_NORSRAM_MEM_BUS_WIDTH_16;
	hsram.Init.BurstAccessMode = FSMC_BURST_ACCESS_MODE_DISABLE;
 80013c6:	6183      	str	r3, [r0, #24]
	hsram.Init.WaitSignalPolarity = FSMC_WAIT_SIGNAL_POLARITY_LOW;
 80013c8:	61c3      	str	r3, [r0, #28]
	hsram.Init.WrapMode = FSMC_WRAP_MODE_DISABLE;
 80013ca:	6203      	str	r3, [r0, #32]
	hsram.Init.WaitSignalActive = FSMC_WAIT_TIMING_BEFORE_WS;
 80013cc:	6243      	str	r3, [r0, #36]	; 0x24
	hsram.Init.WriteOperation = FSMC_WRITE_OPERATION_ENABLE;
	hsram.Init.WaitSignal = FSMC_WAIT_SIGNAL_DISABLE;
 80013ce:	62c3      	str	r3, [r0, #44]	; 0x2c
	hsram.Init.ExtendedMode = FSMC_EXTENDED_MODE_DISABLE;
 80013d0:	6303      	str	r3, [r0, #48]	; 0x30
	hsram.Init.AsynchronousWait = FSMC_ASYNCHRONOUS_WAIT_DISABLE;
 80013d2:	6343      	str	r3, [r0, #52]	; 0x34
	hsram.Init.WriteBurst = FSMC_WRITE_BURST_DISABLE;
 80013d4:	6383      	str	r3, [r0, #56]	; 0x38

	/* Initialize the SRAM controller ----------------------------*/
	if(HAL_SRAM_Init(&hsram, &SRAM_Timing, &SRAM_Timing) != HAL_OK){
 80013d6:	f002 fb99 	bl	8003b0c <HAL_SRAM_Init>
 80013da:	2800      	cmp	r0, #0
 80013dc:	d1bb      	bne.n	8001356 <main+0x46>
  * @param None
  * @retval None
  */
static void I2C_init(void){
	/*	Configure the I2C peripheral ---------------------------*/
  I2cHandle.Instance             = I2Cx;
 80013de:	4b36      	ldr	r3, [pc, #216]	; (80014b8 <main+0x1a8>)
 80013e0:	4a36      	ldr	r2, [pc, #216]	; (80014bc <main+0x1ac>)
 80013e2:	601a      	str	r2, [r3, #0]

  I2cHandle.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
 80013e4:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 80013e8:	611a      	str	r2, [r3, #16]
  I2cHandle.Init.ClockSpeed      = 400000;
 80013ea:	4a35      	ldr	r2, [pc, #212]	; (80014c0 <main+0x1b0>)
 80013ec:	605a      	str	r2, [r3, #4]
  I2cHandle.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
  I2cHandle.Init.DutyCycle       = I2C_DUTYCYCLE_2;
  I2cHandle.Init.GeneralCallMode = I2C_GENERALCALL_ENABLE;
 80013ee:	2240      	movs	r2, #64	; 0x40
	/*	Configure the I2C peripheral ---------------------------*/
  I2cHandle.Instance             = I2Cx;

  I2cHandle.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
  I2cHandle.Init.ClockSpeed      = 400000;
  I2cHandle.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80013f0:	6158      	str	r0, [r3, #20]
  I2cHandle.Init.DutyCycle       = I2C_DUTYCYCLE_2;
 80013f2:	6098      	str	r0, [r3, #8]
  I2cHandle.Init.GeneralCallMode = I2C_GENERALCALL_ENABLE;
 80013f4:	61da      	str	r2, [r3, #28]
  I2cHandle.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
 80013f6:	6218      	str	r0, [r3, #32]
  I2cHandle.Init.OwnAddress1     = I2C_ADDRESS;
 80013f8:	22fe      	movs	r2, #254	; 0xfe
  I2cHandle.Init.OwnAddress2	 = I2C_ADDRESS;

  if(HAL_I2C_Init(&I2cHandle) != HAL_OK)
 80013fa:	4618      	mov	r0, r3
  I2cHandle.Init.ClockSpeed      = 400000;
  I2cHandle.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
  I2cHandle.Init.DutyCycle       = I2C_DUTYCYCLE_2;
  I2cHandle.Init.GeneralCallMode = I2C_GENERALCALL_ENABLE;
  I2cHandle.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
  I2cHandle.Init.OwnAddress1     = I2C_ADDRESS;
 80013fc:	60da      	str	r2, [r3, #12]
  I2cHandle.Init.OwnAddress2	 = I2C_ADDRESS;
 80013fe:	619a      	str	r2, [r3, #24]

  if(HAL_I2C_Init(&I2cHandle) != HAL_OK)
 8001400:	f001 fd0e 	bl	8002e20 <HAL_I2C_Init>
 8001404:	2800      	cmp	r0, #0
 8001406:	d1a6      	bne.n	8001356 <main+0x46>
      - Word Length = 8 Bits
      - Stop Bit = One Stop bit
      - Parity = None
      - BaudRate = 9600 baud
      - Hardware flow control disabled (RTS and CTS signals) */
	UartHandle.Instance          = USARTx;
 8001408:	4b2e      	ldr	r3, [pc, #184]	; (80014c4 <main+0x1b4>)
  
	UartHandle.Init.BaudRate     = 115200;
 800140a:	492f      	ldr	r1, [pc, #188]	; (80014c8 <main+0x1b8>)
	UartHandle.Init.WordLength   = UART_WORDLENGTH_8B;
 800140c:	6098      	str	r0, [r3, #8]
      - Parity = None
      - BaudRate = 9600 baud
      - Hardware flow control disabled (RTS and CTS signals) */
	UartHandle.Instance          = USARTx;
  
	UartHandle.Init.BaudRate     = 115200;
 800140e:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8001412:	e883 0006 	stmia.w	r3, {r1, r2}
	UartHandle.Init.WordLength   = UART_WORDLENGTH_8B;
	UartHandle.Init.StopBits     = UART_STOPBITS_1;
 8001416:	60d8      	str	r0, [r3, #12]
	UartHandle.Init.Parity       = UART_PARITY_NONE;
 8001418:	6118      	str	r0, [r3, #16]
	UartHandle.Init.HwFlowCtl    = UART_HWCONTROL_NONE;
 800141a:	6198      	str	r0, [r3, #24]
	UartHandle.Init.Mode         = UART_MODE_TX_RX;
 800141c:	220c      	movs	r2, #12
	UartHandle.Init.OverSampling = UART_OVERSAMPLING_16;
 800141e:	61d8      	str	r0, [r3, #28]
    
	if(HAL_UART_Init(&UartHandle) != HAL_OK)
 8001420:	4618      	mov	r0, r3
	UartHandle.Init.BaudRate     = 115200;
	UartHandle.Init.WordLength   = UART_WORDLENGTH_8B;
	UartHandle.Init.StopBits     = UART_STOPBITS_1;
	UartHandle.Init.Parity       = UART_PARITY_NONE;
	UartHandle.Init.HwFlowCtl    = UART_HWCONTROL_NONE;
	UartHandle.Init.Mode         = UART_MODE_TX_RX;
 8001422:	615a      	str	r2, [r3, #20]
	UartHandle.Init.OverSampling = UART_OVERSAMPLING_16;
    
	if(HAL_UART_Init(&UartHandle) != HAL_OK)
 8001424:	f002 f868 	bl	80034f8 <HAL_UART_Init>
 8001428:	2800      	cmp	r0, #0
 800142a:	d194      	bne.n	8001356 <main+0x46>
	I2C_init();
	USART_init();
	/*********************************************************************/
	
	/* Configure Modbus packets -----------------------------------------*/
	modbus_Setup();
 800142c:	f002 fd38 	bl	8003ea0 <modbus_Setup>
  */
static void init_leds(void){
	GPIO_InitTypeDef GPIO_InitStructure;

	// Enable AHB1per Clock
	__GPIOD_CLK_ENABLE();
 8001430:	4a1c      	ldr	r2, [pc, #112]	; (80014a4 <main+0x194>)
	//Config pins
	GPIO_InitStructure.Pin = GPIO_PIN_12 | GPIO_PIN_13;
	GPIO_InitStructure.Mode = GPIO_MODE_OUTPUT_PP;
	GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
	GPIO_InitStructure.Pull = GPIO_PULLUP;
	HAL_GPIO_Init(GPIOD, &GPIO_InitStructure);
 8001432:	4826      	ldr	r0, [pc, #152]	; (80014cc <main+0x1bc>)
  */
static void init_leds(void){
	GPIO_InitTypeDef GPIO_InitStructure;

	// Enable AHB1per Clock
	__GPIOD_CLK_ENABLE();
 8001434:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8001436:	f043 0308 	orr.w	r3, r3, #8
 800143a:	6313      	str	r3, [r2, #48]	; 0x30

	//Config pins
	GPIO_InitStructure.Pin = GPIO_PIN_12 | GPIO_PIN_13;
 800143c:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8001440:	9306      	str	r3, [sp, #24]
	GPIO_InitStructure.Mode = GPIO_MODE_OUTPUT_PP;
	GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
	GPIO_InitStructure.Pull = GPIO_PULLUP;
	HAL_GPIO_Init(GPIOD, &GPIO_InitStructure);
 8001442:	a906      	add	r1, sp, #24
	__GPIOD_CLK_ENABLE();

	//Config pins
	GPIO_InitStructure.Pin = GPIO_PIN_12 | GPIO_PIN_13;
	GPIO_InitStructure.Mode = GPIO_MODE_OUTPUT_PP;
	GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
 8001444:	2303      	movs	r3, #3
 8001446:	9309      	str	r3, [sp, #36]	; 0x24
	// Enable AHB1per Clock
	__GPIOD_CLK_ENABLE();

	//Config pins
	GPIO_InitStructure.Pin = GPIO_PIN_12 | GPIO_PIN_13;
	GPIO_InitStructure.Mode = GPIO_MODE_OUTPUT_PP;
 8001448:	9407      	str	r4, [sp, #28]
	GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
	GPIO_InitStructure.Pull = GPIO_PULLUP;
 800144a:	9408      	str	r4, [sp, #32]
	HAL_GPIO_Init(GPIOD, &GPIO_InitStructure);
 800144c:	f002 fb84 	bl	8003b58 <HAL_GPIO_Init>
	
	/*	Show us some status leds ----------------------------------------*/
	init_leds();
	
	/*	Init STemWin V5.2.6 and GUI -------------------------------------*/
	if((UB_STemWIN_init()) != SUCCESS){
 8001450:	f000 ff00 	bl	8002254 <UB_STemWIN_init>
 8001454:	42a0      	cmp	r0, r4
 8001456:	d002      	beq.n	800145e <main+0x14e>
		printf("emWin INIT error...");
 8001458:	481d      	ldr	r0, [pc, #116]	; (80014d0 <main+0x1c0>)
 800145a:	f011 fc69 	bl	8012d30 <printf>
	}
	
	/*	Init Verventa GUI -----------------------------------------------*/
	if(( Init_GUI_verventa()) != SUCCESS){
 800145e:	f000 fcbd 	bl	8001ddc <Init_GUI_verventa>
 8001462:	2801      	cmp	r0, #1
 8001464:	d002      	beq.n	800146c <main+0x15c>
		printf("can't INIT verventa GUI...");
 8001466:	481b      	ldr	r0, [pc, #108]	; (80014d4 <main+0x1c4>)
 8001468:	f011 fc62 	bl	8012d30 <printf>
	//	printf("Compiled HAL\n");
		
				
	//	test_Cplusplus();
		
		if(modBus_Update == true){
 800146c:	4c1a      	ldr	r4, [pc, #104]	; (80014d8 <main+0x1c8>)
 800146e:	7823      	ldrb	r3, [r4, #0]
 8001470:	b11b      	cbz	r3, 800147a <main+0x16a>
			modbus_update();
 8001472:	f002 ff69 	bl	8004348 <modbus_update>

			modBus_Update = false;
 8001476:	2300      	movs	r3, #0
 8001478:	7023      	strb	r3, [r4, #0]
		}

		if(gui_Exec == true){
 800147a:	4c18      	ldr	r4, [pc, #96]	; (80014dc <main+0x1cc>)
 800147c:	7823      	ldrb	r3, [r4, #0]
 800147e:	b13b      	cbz	r3, 8001490 <main+0x180>
			WM_InvalidateWindow(hWinFanImg);
 8001480:	4b17      	ldr	r3, [pc, #92]	; (80014e0 <main+0x1d0>)
 8001482:	6818      	ldr	r0, [r3, #0]
 8001484:	f006 ffc0 	bl	8008408 <WM_InvalidateWindow>
			GUI_Exec();
 8001488:	f00b f990 	bl	800c7ac <GUI_Exec>
			
			/*Clear Flag*/
			gui_Exec = false;
 800148c:	2300      	movs	r3, #0
 800148e:	7023      	strb	r3, [r4, #0]
		}
		
		if(Touch_Flagged == true){
 8001490:	4c14      	ldr	r4, [pc, #80]	; (80014e4 <main+0x1d4>)
 8001492:	7823      	ldrb	r3, [r4, #0]
 8001494:	2b00      	cmp	r3, #0
 8001496:	d0e9      	beq.n	800146c <main+0x15c>
			UB_STemWIN_updateTouch();
 8001498:	f000 fef4 	bl	8002284 <UB_STemWIN_updateTouch>
			//modbus_update();

			Touch_Flagged = false;
 800149c:	2300      	movs	r3, #0
 800149e:	7023      	strb	r3, [r4, #0]
 80014a0:	e7e4      	b.n	800146c <main+0x15c>
 80014a2:	bf00      	nop
 80014a4:	40023800 	.word	0x40023800
 80014a8:	40023c00 	.word	0x40023c00
 80014ac:	08018818 	.word	0x08018818
 80014b0:	2000e318 	.word	0x2000e318
 80014b4:	2000e2fc 	.word	0x2000e2fc
 80014b8:	2000e35c 	.word	0x2000e35c
 80014bc:	40005400 	.word	0x40005400
 80014c0:	00061a80 	.word	0x00061a80
 80014c4:	2000e2bc 	.word	0x2000e2bc
 80014c8:	40004400 	.word	0x40004400
 80014cc:	40020c00 	.word	0x40020c00
 80014d0:	08018825 	.word	0x08018825
 80014d4:	08018839 	.word	0x08018839
 80014d8:	2000d38a 	.word	0x2000d38a
 80014dc:	2000d388 	.word	0x2000d388
 80014e0:	2000e3b0 	.word	0x2000e3b0
 80014e4:	2000d389 	.word	0x2000d389

080014e8 <__io_putchar>:
/**
  * @brief  Retargets the C library printf function to the USART (GNU)
  * @param  None
  * @retval None
  */
int __io_putchar(int ch){
 80014e8:	b510      	push	{r4, lr}
 80014ea:	4604      	mov	r4, r0
  /* Place your implementation of fputc here */
  /* e.g. write a character to the USART */

	Debug_ITMDebugOutputChar(ch); // SWV
 80014ec:	b2c0      	uxtb	r0, r0
 80014ee:	f7ff feef 	bl	80012d0 <Debug_ITMDebugOutputChar>

  return(ch);
}
 80014f2:	4620      	mov	r0, r4
 80014f4:	bd10      	pop	{r4, pc}

080014f6 <__io_getchar>:
int __io_getchar(void){
  /* Place your implementation of fgetc here */
  /* e.g. read a character from the USART */

  return((int)-1);
}
 80014f6:	f04f 30ff 	mov.w	r0, #4294967295
 80014fa:	4770      	bx	lr

080014fc <assert_failed>:
  *         where the assert_param error has occurred.
  * @param  file: pointer to the source file name
  * @param  line: assert_param error line source number
  * @retval None
  */
void assert_failed(uint8_t* file, uint32_t line){
 80014fc:	b508      	push	{r3, lr}
 80014fe:	4603      	mov	r3, r0
 8001500:	460a      	mov	r2, r1
  printf("Wrong parameters value: file %s on line %d\r\n", file, line);
 8001502:	4802      	ldr	r0, [pc, #8]	; (800150c <assert_failed+0x10>)
 8001504:	4619      	mov	r1, r3
 8001506:	f011 fc13 	bl	8012d30 <printf>

  while(1); /* Infinite loop */
 800150a:	e7fe      	b.n	800150a <assert_failed+0xe>
 800150c:	08018854 	.word	0x08018854

08001510 <HAL_UART_MspInit>:
  
  GPIO_InitTypeDef  GPIO_InitStruct;
  
  /*##-1- Enable peripherals and GPIO Clocks #################################*/
  /* Enable GPIO TX/RX clock */
  USARTx_TX_GPIO_CLK_ENABLE();
 8001510:	4b16      	ldr	r3, [pc, #88]	; (800156c <HAL_UART_MspInit+0x5c>)
 8001512:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001514:	f042 0201 	orr.w	r2, r2, #1
  *           - NVIC configuration for DMA interrupt request enable
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef *huart)
{
 8001518:	b570      	push	{r4, r5, r6, lr}
  
  GPIO_InitTypeDef  GPIO_InitStruct;
  
  /*##-1- Enable peripherals and GPIO Clocks #################################*/
  /* Enable GPIO TX/RX clock */
  USARTx_TX_GPIO_CLK_ENABLE();
 800151a:	631a      	str	r2, [r3, #48]	; 0x30
  USARTx_RX_GPIO_CLK_ENABLE();
 800151c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
  GPIO_InitStruct.Pull      = GPIO_NOPULL;
  GPIO_InitStruct.Speed     = GPIO_SPEED_FAST;
  GPIO_InitStruct.Alternate = USARTx_TX_AF;
  
  HAL_GPIO_Init(USARTx_TX_GPIO_PORT, &GPIO_InitStruct);
 800151e:	4d14      	ldr	r5, [pc, #80]	; (8001570 <HAL_UART_MspInit+0x60>)
  GPIO_InitTypeDef  GPIO_InitStruct;
  
  /*##-1- Enable peripherals and GPIO Clocks #################################*/
  /* Enable GPIO TX/RX clock */
  USARTx_TX_GPIO_CLK_ENABLE();
  USARTx_RX_GPIO_CLK_ENABLE();
 8001520:	f042 0201 	orr.w	r2, r2, #1
 8001524:	631a      	str	r2, [r3, #48]	; 0x30
  /* Enable USART2 clock */
  USARTx_CLK_ENABLE(); 
 8001526:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  *           - NVIC configuration for DMA interrupt request enable
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef *huart)
{
 8001528:	b086      	sub	sp, #24
  /*##-1- Enable peripherals and GPIO Clocks #################################*/
  /* Enable GPIO TX/RX clock */
  USARTx_TX_GPIO_CLK_ENABLE();
  USARTx_RX_GPIO_CLK_ENABLE();
  /* Enable USART2 clock */
  USARTx_CLK_ENABLE(); 
 800152a:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800152e:	641a      	str	r2, [r3, #64]	; 0x40
  /* Enable DMA1 clock */
  //DMAx_CLK_ENABLE();   
  
  /*##-2- Configure peripheral GPIO ##########################################*/  
  /* UART TX GPIO pin configuration  */
  GPIO_InitStruct.Pin       = USARTx_TX_PIN;
 8001530:	2304      	movs	r3, #4
 8001532:	9301      	str	r3, [sp, #4]
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
  GPIO_InitStruct.Pull      = GPIO_NOPULL;
 8001534:	2400      	movs	r4, #0
  //DMAx_CLK_ENABLE();   
  
  /*##-2- Configure peripheral GPIO ##########################################*/  
  /* UART TX GPIO pin configuration  */
  GPIO_InitStruct.Pin       = USARTx_TX_PIN;
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
 8001536:	2302      	movs	r3, #2
  GPIO_InitStruct.Pull      = GPIO_NOPULL;
  GPIO_InitStruct.Speed     = GPIO_SPEED_FAST;
  GPIO_InitStruct.Alternate = USARTx_TX_AF;
 8001538:	2607      	movs	r6, #7
  
  HAL_GPIO_Init(USARTx_TX_GPIO_PORT, &GPIO_InitStruct);
 800153a:	4628      	mov	r0, r5
 800153c:	a901      	add	r1, sp, #4
  //DMAx_CLK_ENABLE();   
  
  /*##-2- Configure peripheral GPIO ##########################################*/  
  /* UART TX GPIO pin configuration  */
  GPIO_InitStruct.Pin       = USARTx_TX_PIN;
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
 800153e:	9302      	str	r3, [sp, #8]
  GPIO_InitStruct.Pull      = GPIO_NOPULL;
  GPIO_InitStruct.Speed     = GPIO_SPEED_FAST;
 8001540:	9304      	str	r3, [sp, #16]
  
  /*##-2- Configure peripheral GPIO ##########################################*/  
  /* UART TX GPIO pin configuration  */
  GPIO_InitStruct.Pin       = USARTx_TX_PIN;
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
  GPIO_InitStruct.Pull      = GPIO_NOPULL;
 8001542:	9403      	str	r4, [sp, #12]
  GPIO_InitStruct.Speed     = GPIO_SPEED_FAST;
  GPIO_InitStruct.Alternate = USARTx_TX_AF;
 8001544:	9605      	str	r6, [sp, #20]
  
  HAL_GPIO_Init(USARTx_TX_GPIO_PORT, &GPIO_InitStruct);
 8001546:	f002 fb07 	bl	8003b58 <HAL_GPIO_Init>
    
  /* UART RX GPIO pin configuration  */
  GPIO_InitStruct.Pin = USARTx_RX_PIN;
 800154a:	2308      	movs	r3, #8
  GPIO_InitStruct.Alternate = USARTx_RX_AF;
    
  HAL_GPIO_Init(USARTx_RX_GPIO_PORT, &GPIO_InitStruct);
 800154c:	4628      	mov	r0, r5
 800154e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Alternate = USARTx_TX_AF;
  
  HAL_GPIO_Init(USARTx_TX_GPIO_PORT, &GPIO_InitStruct);
    
  /* UART RX GPIO pin configuration  */
  GPIO_InitStruct.Pin = USARTx_RX_PIN;
 8001550:	9301      	str	r3, [sp, #4]
  GPIO_InitStruct.Alternate = USARTx_RX_AF;
 8001552:	9605      	str	r6, [sp, #20]
    
  HAL_GPIO_Init(USARTx_RX_GPIO_PORT, &GPIO_InitStruct);
 8001554:	f002 fb00 	bl	8003b58 <HAL_GPIO_Init>
  /* NVIC configuration for DMA transfer complete interrupt (USARTx_RX) */
  //HAL_NVIC_SetPriority(USARTx_DMA_RX_IRQn, 0, 0);   
  //HAL_NVIC_EnableIRQ(USARTx_DMA_RX_IRQn);
  
  /* NVIC configuration for USART TC interrupt */
  HAL_NVIC_SetPriority(USARTx_IRQn, 0, 1);
 8001558:	4621      	mov	r1, r4
 800155a:	2201      	movs	r2, #1
 800155c:	2026      	movs	r0, #38	; 0x26
 800155e:	f001 fe8f 	bl	8003280 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(USARTx_IRQn);
 8001562:	2026      	movs	r0, #38	; 0x26
 8001564:	f001 fece 	bl	8003304 <HAL_NVIC_EnableIRQ>
}
 8001568:	b006      	add	sp, #24
 800156a:	bd70      	pop	{r4, r5, r6, pc}
 800156c:	40023800 	.word	0x40023800
 8001570:	40020000 	.word	0x40020000

08001574 <HAL_I2C_MspInit>:
  *           - DMA configuration for transmission request by peripheral 
  *           - NVIC configuration for DMA interrupt request enable
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspInit(I2C_HandleTypeDef *hi2c){
 8001574:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  
  GPIO_InitTypeDef  GPIO_InitStruct;
  
  /*##-1- Enable GPIO Clocks #################################################*/
  /* Enable GPIO TX/RX clock */
  I2Cx_SCL_GPIO_CLK_ENABLE();
 8001578:	4c26      	ldr	r4, [pc, #152]	; (8001614 <HAL_I2C_MspInit+0xa0>)
  GPIO_InitStruct.Pin       = I2Cx_SCL_PIN;
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_OD;
  GPIO_InitStruct.Pull      = GPIO_PULLUP;
  GPIO_InitStruct.Speed     = GPIO_SPEED_FAST;
  GPIO_InitStruct.Alternate = I2Cx_SCL_AF;
  HAL_GPIO_Init(I2Cx_SCL_GPIO_PORT, &GPIO_InitStruct);
 800157a:	4e27      	ldr	r6, [pc, #156]	; (8001618 <HAL_I2C_MspInit+0xa4>)
  
  GPIO_InitTypeDef  GPIO_InitStruct;
  
  /*##-1- Enable GPIO Clocks #################################################*/
  /* Enable GPIO TX/RX clock */
  I2Cx_SCL_GPIO_CLK_ENABLE();
 800157c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800157e:	f043 0302 	orr.w	r3, r3, #2
 8001582:	6323      	str	r3, [r4, #48]	; 0x30
  I2Cx_SDA_GPIO_CLK_ENABLE();
 8001584:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001586:	f043 0302 	orr.w	r3, r3, #2
 800158a:	6323      	str	r3, [r4, #48]	; 0x30
  /* PORTC-Reset pin bus enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800158c:	6b23      	ldr	r3, [r4, #48]	; 0x30
  *           - DMA configuration for transmission request by peripheral 
  *           - NVIC configuration for DMA interrupt request enable
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspInit(I2C_HandleTypeDef *hi2c){
 800158e:	b087      	sub	sp, #28
  /* I2C TX GPIO pin configuration  */
  GPIO_InitStruct.Pin       = I2Cx_SCL_PIN;
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_OD;
  GPIO_InitStruct.Pull      = GPIO_PULLUP;
  GPIO_InitStruct.Speed     = GPIO_SPEED_FAST;
  GPIO_InitStruct.Alternate = I2Cx_SCL_AF;
 8001590:	f04f 0904 	mov.w	r9, #4
  /*##-1- Enable GPIO Clocks #################################################*/
  /* Enable GPIO TX/RX clock */
  I2Cx_SCL_GPIO_CLK_ENABLE();
  I2Cx_SDA_GPIO_CLK_ENABLE();
  /* PORTC-Reset pin bus enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001594:	f043 0304 	orr.w	r3, r3, #4
 8001598:	6323      	str	r3, [r4, #48]	; 0x30

  /*##-2- Configure peripheral GPIO ##########################################*/
  /* I2C TX GPIO pin configuration  */
  GPIO_InitStruct.Pin       = I2Cx_SCL_PIN;
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_OD;
  GPIO_InitStruct.Pull      = GPIO_PULLUP;
 800159a:	2501      	movs	r5, #1


  /*##-2- Configure peripheral GPIO ##########################################*/
  /* I2C TX GPIO pin configuration  */
  GPIO_InitStruct.Pin       = I2Cx_SCL_PIN;
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_OD;
 800159c:	2312      	movs	r3, #18
  __HAL_RCC_GPIOC_CLK_ENABLE();


  /*##-2- Configure peripheral GPIO ##########################################*/
  /* I2C TX GPIO pin configuration  */
  GPIO_InitStruct.Pin       = I2Cx_SCL_PIN;
 800159e:	f04f 0840 	mov.w	r8, #64	; 0x40
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_OD;
  GPIO_InitStruct.Pull      = GPIO_PULLUP;
  GPIO_InitStruct.Speed     = GPIO_SPEED_FAST;
 80015a2:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = I2Cx_SCL_AF;
  HAL_GPIO_Init(I2Cx_SCL_GPIO_PORT, &GPIO_InitStruct);
 80015a4:	4630      	mov	r0, r6
 80015a6:	eb0d 0109 	add.w	r1, sp, r9


  /*##-2- Configure peripheral GPIO ##########################################*/
  /* I2C TX GPIO pin configuration  */
  GPIO_InitStruct.Pin       = I2Cx_SCL_PIN;
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_OD;
 80015aa:	9302      	str	r3, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();


  /*##-2- Configure peripheral GPIO ##########################################*/
  /* I2C TX GPIO pin configuration  */
  GPIO_InitStruct.Pin       = I2Cx_SCL_PIN;
 80015ac:	f8cd 8004 	str.w	r8, [sp, #4]
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_OD;
  GPIO_InitStruct.Pull      = GPIO_PULLUP;
  GPIO_InitStruct.Speed     = GPIO_SPEED_FAST;
 80015b0:	9704      	str	r7, [sp, #16]

  /*##-2- Configure peripheral GPIO ##########################################*/
  /* I2C TX GPIO pin configuration  */
  GPIO_InitStruct.Pin       = I2Cx_SCL_PIN;
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_OD;
  GPIO_InitStruct.Pull      = GPIO_PULLUP;
 80015b2:	9503      	str	r5, [sp, #12]
  GPIO_InitStruct.Speed     = GPIO_SPEED_FAST;
  GPIO_InitStruct.Alternate = I2Cx_SCL_AF;
 80015b4:	f8cd 9014 	str.w	r9, [sp, #20]
  HAL_GPIO_Init(I2Cx_SCL_GPIO_PORT, &GPIO_InitStruct);
 80015b8:	f002 face 	bl	8003b58 <HAL_GPIO_Init>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6, GPIO_PIN_SET);
 80015bc:	462a      	mov	r2, r5
 80015be:	4630      	mov	r0, r6
 80015c0:	4641      	mov	r1, r8
 80015c2:	f002 fbfb 	bl	8003dbc <HAL_GPIO_WritePin>

  /* I2C RX GPIO pin configuration  */
  GPIO_InitStruct.Pin = I2Cx_SDA_PIN;
 80015c6:	f44f 7800 	mov.w	r8, #512	; 0x200
  GPIO_InitStruct.Alternate = I2Cx_SDA_AF;
  HAL_GPIO_Init(I2Cx_SDA_GPIO_PORT, &GPIO_InitStruct);
 80015ca:	4630      	mov	r0, r6
 80015cc:	eb0d 0109 	add.w	r1, sp, r9
  GPIO_InitStruct.Alternate = I2Cx_SCL_AF;
  HAL_GPIO_Init(I2Cx_SCL_GPIO_PORT, &GPIO_InitStruct);
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6, GPIO_PIN_SET);

  /* I2C RX GPIO pin configuration  */
  GPIO_InitStruct.Pin = I2Cx_SDA_PIN;
 80015d0:	f8cd 8004 	str.w	r8, [sp, #4]
  GPIO_InitStruct.Alternate = I2Cx_SDA_AF;
 80015d4:	f8cd 9014 	str.w	r9, [sp, #20]
  HAL_GPIO_Init(I2Cx_SDA_GPIO_PORT, &GPIO_InitStruct);
 80015d8:	f002 fabe 	bl	8003b58 <HAL_GPIO_Init>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_9, GPIO_PIN_SET);
 80015dc:	462a      	mov	r2, r5
 80015de:	4630      	mov	r0, r6
 80015e0:	4641      	mov	r1, r8
 80015e2:	f002 fbeb 	bl	8003dbc <HAL_GPIO_WritePin>
  
  /* Init Reset Pin Touch */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Speed = GPIO_SPEED_FAST;
 80015e6:	9704      	str	r7, [sp, #16]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015e8:	4f0c      	ldr	r7, [pc, #48]	; (800161c <HAL_I2C_MspInit+0xa8>)
  HAL_GPIO_Init(I2Cx_SDA_GPIO_PORT, &GPIO_InitStruct);
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_9, GPIO_PIN_SET);
  
  /* Init Reset Pin Touch */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015ea:	9502      	str	r5, [sp, #8]
  GPIO_InitStruct.Alternate = I2Cx_SDA_AF;
  HAL_GPIO_Init(I2Cx_SDA_GPIO_PORT, &GPIO_InitStruct);
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_9, GPIO_PIN_SET);
  
  /* Init Reset Pin Touch */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 80015ec:	2608      	movs	r6, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Speed = GPIO_SPEED_FAST;
  GPIO_InitStruct.Pull = GPIO_PULLUP;
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015ee:	4638      	mov	r0, r7
 80015f0:	eb0d 0109 	add.w	r1, sp, r9
  GPIO_InitStruct.Alternate = I2Cx_SDA_AF;
  HAL_GPIO_Init(I2Cx_SDA_GPIO_PORT, &GPIO_InitStruct);
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_9, GPIO_PIN_SET);
  
  /* Init Reset Pin Touch */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 80015f4:	9601      	str	r6, [sp, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Speed = GPIO_SPEED_FAST;
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80015f6:	9503      	str	r5, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015f8:	f002 faae 	bl	8003b58 <HAL_GPIO_Init>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3, GPIO_PIN_SET);
 80015fc:	4638      	mov	r0, r7
 80015fe:	4631      	mov	r1, r6
 8001600:	462a      	mov	r2, r5
 8001602:	f002 fbdb 	bl	8003dbc <HAL_GPIO_WritePin>
 
  /*##-3- Enable peripheral Clock ############################################*/
  /* Enable I2C1 clock */
  I2Cx_CLK_ENABLE();
 8001606:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001608:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800160c:	6423      	str	r3, [r4, #64]	; 0x40
  
}
 800160e:	b007      	add	sp, #28
 8001610:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001614:	40023800 	.word	0x40023800
 8001618:	40020400 	.word	0x40020400
 800161c:	40020800 	.word	0x40020800

08001620 <HAL_SRAM_MspInit>:
	// TODO -> PUT RESET ON GPIO PIN SO WE CAN RESET DISPLAY
	// now reset is on NRST pin on the STM32F4 discovery
	GPIO_InitTypeDef GPIO_InitStructure;

	// Clock Enable FSMC
	__HAL_RCC_FSMC_CLK_ENABLE();
 8001620:	4b20      	ldr	r3, [pc, #128]	; (80016a4 <HAL_SRAM_MspInit+0x84>)
	GPIO_InitStructure.Pin = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_14 | GPIO_PIN_15;
	GPIO_InitStructure.Mode = GPIO_MODE_AF_PP;
	GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
	GPIO_InitStructure.Pull = GPIO_NOPULL;
	GPIO_InitStructure.Alternate = GPIO_AF12_FSMC;
	HAL_GPIO_Init(GPIOD, &GPIO_InitStructure);
 8001622:	4821      	ldr	r0, [pc, #132]	; (80016a8 <HAL_SRAM_MspInit+0x88>)
	// TODO -> PUT RESET ON GPIO PIN SO WE CAN RESET DISPLAY
	// now reset is on NRST pin on the STM32F4 discovery
	GPIO_InitTypeDef GPIO_InitStructure;

	// Clock Enable FSMC
	__HAL_RCC_FSMC_CLK_ENABLE();
 8001624:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001626:	f042 0201 	orr.w	r2, r2, #1
/**
  * @brief SRAM init
  * param  handle to sram
  * retval None
  */
void HAL_SRAM_MspInit(SRAM_HandleTypeDef * hsram){
 800162a:	b5f0      	push	{r4, r5, r6, r7, lr}
	// TODO -> PUT RESET ON GPIO PIN SO WE CAN RESET DISPLAY
	// now reset is on NRST pin on the STM32F4 discovery
	GPIO_InitTypeDef GPIO_InitStructure;

	// Clock Enable FSMC
	__HAL_RCC_FSMC_CLK_ENABLE();
 800162c:	639a      	str	r2, [r3, #56]	; 0x38

	// Clock Enable Port-D and Port-E
	__HAL_RCC_GPIOD_CLK_ENABLE();
 800162e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001630:	f042 0208 	orr.w	r2, r2, #8
 8001634:	631a      	str	r2, [r3, #48]	; 0x30
	__HAL_RCC_GPIOE_CLK_ENABLE();
 8001636:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001638:	f042 0210 	orr.w	r2, r2, #16
 800163c:	631a      	str	r2, [r3, #48]	; 0x30
	__HAL_RCC_GPIOB_CLK_ENABLE();
 800163e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
/**
  * @brief SRAM init
  * param  handle to sram
  * retval None
  */
void HAL_SRAM_MspInit(SRAM_HandleTypeDef * hsram){
 8001640:	b087      	sub	sp, #28
	__HAL_RCC_FSMC_CLK_ENABLE();

	// Clock Enable Port-D and Port-E
	__HAL_RCC_GPIOD_CLK_ENABLE();
	__HAL_RCC_GPIOE_CLK_ENABLE();
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8001642:	f042 0202 	orr.w	r2, r2, #2
 8001646:	631a      	str	r2, [r3, #48]	; 0x30
	// PD10=FSMC_D15->DB17
	// PD11=FSMC_A16->RS
	// PD14=FSMC_D0->DB0
	// PD15=FSMC_D1->DB1
	GPIO_InitStructure.Pin = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_14 | GPIO_PIN_15;
	GPIO_InitStructure.Mode = GPIO_MODE_AF_PP;
 8001648:	2402      	movs	r4, #2
	// PD9=FSMC_D14->DB16
	// PD10=FSMC_D15->DB17
	// PD11=FSMC_A16->RS
	// PD14=FSMC_D0->DB0
	// PD15=FSMC_D1->DB1
	GPIO_InitStructure.Pin = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_14 | GPIO_PIN_15;
 800164a:	f64c 73b3 	movw	r3, #53171	; 0xcfb3
	GPIO_InitStructure.Mode = GPIO_MODE_AF_PP;
	GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
 800164e:	2703      	movs	r7, #3
	GPIO_InitStructure.Pull = GPIO_NOPULL;
 8001650:	2600      	movs	r6, #0
	GPIO_InitStructure.Alternate = GPIO_AF12_FSMC;
 8001652:	250c      	movs	r5, #12
	HAL_GPIO_Init(GPIOD, &GPIO_InitStructure);
 8001654:	a901      	add	r1, sp, #4
	// PD9=FSMC_D14->DB16
	// PD10=FSMC_D15->DB17
	// PD11=FSMC_A16->RS
	// PD14=FSMC_D0->DB0
	// PD15=FSMC_D1->DB1
	GPIO_InitStructure.Pin = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_14 | GPIO_PIN_15;
 8001656:	9301      	str	r3, [sp, #4]
	GPIO_InitStructure.Mode = GPIO_MODE_AF_PP;
	GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
	GPIO_InitStructure.Pull = GPIO_NOPULL;
 8001658:	9603      	str	r6, [sp, #12]
	GPIO_InitStructure.Alternate = GPIO_AF12_FSMC;
 800165a:	9505      	str	r5, [sp, #20]
	// PD10=FSMC_D15->DB17
	// PD11=FSMC_A16->RS
	// PD14=FSMC_D0->DB0
	// PD15=FSMC_D1->DB1
	GPIO_InitStructure.Pin = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_14 | GPIO_PIN_15;
	GPIO_InitStructure.Mode = GPIO_MODE_AF_PP;
 800165c:	9402      	str	r4, [sp, #8]
	GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
 800165e:	9704      	str	r7, [sp, #16]
	GPIO_InitStructure.Pull = GPIO_NOPULL;
	GPIO_InitStructure.Alternate = GPIO_AF12_FSMC;
	HAL_GPIO_Init(GPIOD, &GPIO_InitStructure);
 8001660:	f002 fa7a 	bl	8003b58 <HAL_GPIO_Init>
	// PE14=FSMC_D11->DB13
	// PE15=FSMC_D12->DB14
	GPIO_InitStructure.Pin = GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12 | GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
	GPIO_InitStructure.Mode = GPIO_MODE_AF_PP;
	GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
	GPIO_InitStructure.Pull = GPIO_NOPULL;
 8001664:	9603      	str	r6, [sp, #12]
	/* Init Reset Pin Display */
	GPIO_InitStructure.Pin = GPIO_PIN_1;
	GPIO_InitStructure.Mode = GPIO_MODE_OUTPUT_PP;
	GPIO_InitStructure.Speed = GPIO_SPEED_FAST;
	GPIO_InitStructure.Pull = GPIO_PULLUP;
	HAL_GPIO_Init(GPIOB, &GPIO_InitStructure);
 8001666:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
	// PE11=FSMC_D8->DB10
	// PE12=FSMC_D9->DB11
	// PE13=FSMC_D10->DB12
	// PE14=FSMC_D11->DB13
	// PE15=FSMC_D12->DB14
	GPIO_InitStructure.Pin = GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12 | GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
 800166a:	f64f 7380 	movw	r3, #65408	; 0xff80
	GPIO_InitStructure.Mode = GPIO_MODE_AF_PP;
	GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
	GPIO_InitStructure.Pull = GPIO_NOPULL;
	GPIO_InitStructure.Alternate = GPIO_AF12_FSMC;
	HAL_GPIO_Init(GPIOE, &GPIO_InitStructure);
 800166e:	a901      	add	r1, sp, #4
	/* Init Reset Pin Display */
	GPIO_InitStructure.Pin = GPIO_PIN_1;
	GPIO_InitStructure.Mode = GPIO_MODE_OUTPUT_PP;
	GPIO_InitStructure.Speed = GPIO_SPEED_FAST;
	GPIO_InitStructure.Pull = GPIO_PULLUP;
	HAL_GPIO_Init(GPIOB, &GPIO_InitStructure);
 8001670:	f506 3601 	add.w	r6, r6, #132096	; 0x20400
	GPIO_InitStructure.Pin = GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12 | GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
	GPIO_InitStructure.Mode = GPIO_MODE_AF_PP;
	GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
	GPIO_InitStructure.Pull = GPIO_NOPULL;
	GPIO_InitStructure.Alternate = GPIO_AF12_FSMC;
	HAL_GPIO_Init(GPIOE, &GPIO_InitStructure);
 8001674:	480d      	ldr	r0, [pc, #52]	; (80016ac <HAL_SRAM_MspInit+0x8c>)
	// PE11=FSMC_D8->DB10
	// PE12=FSMC_D9->DB11
	// PE13=FSMC_D10->DB12
	// PE14=FSMC_D11->DB13
	// PE15=FSMC_D12->DB14
	GPIO_InitStructure.Pin = GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12 | GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
 8001676:	9301      	str	r3, [sp, #4]
	GPIO_InitStructure.Mode = GPIO_MODE_AF_PP;
	GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
	GPIO_InitStructure.Pull = GPIO_NOPULL;
	GPIO_InitStructure.Alternate = GPIO_AF12_FSMC;
 8001678:	9505      	str	r5, [sp, #20]
	// PE12=FSMC_D9->DB11
	// PE13=FSMC_D10->DB12
	// PE14=FSMC_D11->DB13
	// PE15=FSMC_D12->DB14
	GPIO_InitStructure.Pin = GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12 | GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
	GPIO_InitStructure.Mode = GPIO_MODE_AF_PP;
 800167a:	9402      	str	r4, [sp, #8]
	GPIO_InitStructure.Alternate = GPIO_AF12_FSMC;
	HAL_GPIO_Init(GPIOE, &GPIO_InitStructure);

	/* Init Reset Pin Display */
	GPIO_InitStructure.Pin = GPIO_PIN_1;
	GPIO_InitStructure.Mode = GPIO_MODE_OUTPUT_PP;
 800167c:	2501      	movs	r5, #1
	// PE13=FSMC_D10->DB12
	// PE14=FSMC_D11->DB13
	// PE15=FSMC_D12->DB14
	GPIO_InitStructure.Pin = GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12 | GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
	GPIO_InitStructure.Mode = GPIO_MODE_AF_PP;
	GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
 800167e:	9704      	str	r7, [sp, #16]
	GPIO_InitStructure.Pull = GPIO_NOPULL;
	GPIO_InitStructure.Alternate = GPIO_AF12_FSMC;
	HAL_GPIO_Init(GPIOE, &GPIO_InitStructure);
 8001680:	f002 fa6a 	bl	8003b58 <HAL_GPIO_Init>
	/* Init Reset Pin Display */
	GPIO_InitStructure.Pin = GPIO_PIN_1;
	GPIO_InitStructure.Mode = GPIO_MODE_OUTPUT_PP;
	GPIO_InitStructure.Speed = GPIO_SPEED_FAST;
	GPIO_InitStructure.Pull = GPIO_PULLUP;
	HAL_GPIO_Init(GPIOB, &GPIO_InitStructure);
 8001684:	4630      	mov	r0, r6
 8001686:	a901      	add	r1, sp, #4
	GPIO_InitStructure.Pull = GPIO_NOPULL;
	GPIO_InitStructure.Alternate = GPIO_AF12_FSMC;
	HAL_GPIO_Init(GPIOE, &GPIO_InitStructure);

	/* Init Reset Pin Display */
	GPIO_InitStructure.Pin = GPIO_PIN_1;
 8001688:	9401      	str	r4, [sp, #4]
	GPIO_InitStructure.Mode = GPIO_MODE_OUTPUT_PP;
 800168a:	9502      	str	r5, [sp, #8]
	GPIO_InitStructure.Speed = GPIO_SPEED_FAST;
 800168c:	9404      	str	r4, [sp, #16]
	GPIO_InitStructure.Pull = GPIO_PULLUP;
 800168e:	9503      	str	r5, [sp, #12]
	HAL_GPIO_Init(GPIOB, &GPIO_InitStructure);
 8001690:	f002 fa62 	bl	8003b58 <HAL_GPIO_Init>
	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 8001694:	4630      	mov	r0, r6
 8001696:	4621      	mov	r1, r4
 8001698:	462a      	mov	r2, r5
 800169a:	f002 fb8f 	bl	8003dbc <HAL_GPIO_WritePin>
 
}
 800169e:	b007      	add	sp, #28
 80016a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80016a2:	bf00      	nop
 80016a4:	40023800 	.word	0x40023800
 80016a8:	40020c00 	.word	0x40020c00
 80016ac:	40021000 	.word	0x40021000

080016b0 <HAL_MspInit>:
  * @brief  Initializes the Global MSP.
  * @param  None
  * @retval None
  */
void HAL_MspInit(void)
{
 80016b0:	4770      	bx	lr

080016b2 <_close>:
    }
}

int _close(int file) {
    return -1;
}
 80016b2:	f04f 30ff 	mov.w	r0, #4294967295
 80016b6:	4770      	bx	lr

080016b8 <_fstat>:
 Status of an open file. For consistency with other minimal implementations in these examples,
 all files are regarded as character special devices.
 The `sys/stat.h' header file required is distributed in the `include' subdirectory for this C library.
 */
int _fstat(int file, struct stat *st) {
    st->st_mode = S_IFCHR;
 80016b8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80016bc:	604b      	str	r3, [r1, #4]
    return 0;
}
 80016be:	2000      	movs	r0, #0
 80016c0:	4770      	bx	lr
	...

080016c4 <_isatty>:
/*
 isatty
 Query whether output stream is a terminal. For consistency with the other minimal implementations,
 */
int _isatty(int file) {
    switch (file){
 80016c4:	2802      	cmp	r0, #2
    case STDERR_FILENO:
    case STDIN_FILENO:
        return 1;
    default:
        //errno = ENOTTY;
        errno = EBADF;
 80016c6:	bf81      	itttt	hi
 80016c8:	4b03      	ldrhi	r3, [pc, #12]	; (80016d8 <_isatty+0x14>)
 80016ca:	2209      	movhi	r2, #9
        return 0;
 80016cc:	2000      	movhi	r0, #0
    case STDERR_FILENO:
    case STDIN_FILENO:
        return 1;
    default:
        //errno = ENOTTY;
        errno = EBADF;
 80016ce:	601a      	strhi	r2, [r3, #0]
int _isatty(int file) {
    switch (file){
    case STDOUT_FILENO:
    case STDERR_FILENO:
    case STDIN_FILENO:
        return 1;
 80016d0:	bf98      	it	ls
 80016d2:	2001      	movls	r0, #1
    default:
        //errno = ENOTTY;
        errno = EBADF;
        return 0;
    }
}
 80016d4:	4770      	bx	lr
 80016d6:	bf00      	nop
 80016d8:	2000e77c 	.word	0x2000e77c

080016dc <_lseek>:
 lseek
 Set position in a file. Minimal implementation:
 */
int _lseek(int file, int ptr, int dir) {
    return 0;
}
 80016dc:	2000      	movs	r0, #0
 80016de:	4770      	bx	lr

080016e0 <_read>:
 Read a character to a file. `libc' subroutines will use this system routine for input from all files, including stdin
 Returns -1 on error or blocks until the number of characters have been read.
 */


int _read(int file, char *ptr, int len) {
 80016e0:	b570      	push	{r4, r5, r6, lr}
 80016e2:	460e      	mov	r6, r1
 80016e4:	4614      	mov	r4, r2
    int n;
    int num = 0;
    switch (file) {
 80016e6:	b940      	cbnz	r0, 80016fa <_read+0x1a>
 80016e8:	460d      	mov	r5, r1
 80016ea:	1bab      	subs	r3, r5, r6
    case STDIN_FILENO:
        for (n = 0; n < len; n++) {
 80016ec:	42a3      	cmp	r3, r4
 80016ee:	da0a      	bge.n	8001706 <_read+0x26>
            *ptr++ = __io_getchar();
 80016f0:	f7ff ff01 	bl	80014f6 <__io_getchar>
 80016f4:	f805 0b01 	strb.w	r0, [r5], #1
 80016f8:	e7f7      	b.n	80016ea <_read+0xa>
            num++;
        }
        break;
    default:
        errno = EBADF;
 80016fa:	4b04      	ldr	r3, [pc, #16]	; (800170c <_read+0x2c>)
 80016fc:	2209      	movs	r2, #9
 80016fe:	601a      	str	r2, [r3, #0]
        return -1;
 8001700:	f04f 30ff 	mov.w	r0, #4294967295
 8001704:	bd70      	pop	{r4, r5, r6, pc}
 8001706:	ea24 70e4 	bic.w	r0, r4, r4, asr #31
    }
    return num;
}
 800170a:	bd70      	pop	{r4, r5, r6, pc}
 800170c:	2000e77c 	.word	0x2000e77c

08001710 <_write>:
 Write a character to a file. `libc' subroutines will use this system routine for output to all files, including stdout
 Returns -1 on error or number of bytes sent
 */
int _write(int file, char *ptr, int len) {
    int n;
    switch (file) {
 8001710:	3801      	subs	r0, #1
 8001712:	2801      	cmp	r0, #1
/*
 write
 Write a character to a file. `libc' subroutines will use this system routine for output to all files, including stdout
 Returns -1 on error or number of bytes sent
 */
int _write(int file, char *ptr, int len) {
 8001714:	b570      	push	{r4, r5, r6, lr}
 8001716:	460e      	mov	r6, r1
 8001718:	4614      	mov	r4, r2
    int n;
    switch (file) {
 800171a:	d80a      	bhi.n	8001732 <_write+0x22>
 800171c:	460d      	mov	r5, r1
 800171e:	1bab      	subs	r3, r5, r6
    case STDOUT_FILENO: /*stdout*/
    case STDERR_FILENO: /* stderr */
        for (n = 0; n < len; n++) {
 8001720:	42a3      	cmp	r3, r4
 8001722:	da04      	bge.n	800172e <_write+0x1e>
					__io_putchar(*ptr++);
 8001724:	f815 0b01 	ldrb.w	r0, [r5], #1
 8001728:	f7ff fede 	bl	80014e8 <__io_putchar>
 800172c:	e7f7      	b.n	800171e <_write+0xe>
 800172e:	4620      	mov	r0, r4
 8001730:	bd70      	pop	{r4, r5, r6, pc}
        }
        break;
    default:
        errno = EBADF;
 8001732:	4b03      	ldr	r3, [pc, #12]	; (8001740 <_write+0x30>)
 8001734:	2209      	movs	r2, #9
 8001736:	601a      	str	r2, [r3, #0]
        return -1;
 8001738:	f04f 30ff 	mov.w	r0, #4294967295
    }
    return len;
}
 800173c:	bd70      	pop	{r4, r5, r6, pc}
 800173e:	bf00      	nop
 8001740:	2000e77c 	.word	0x2000e77c

08001744 <_sbrk>:
/*
 sbrk
 Increase program data space.
 Malloc and related functions depend on this
 */
caddr_t _sbrk(int incr) {
 8001744:	b508      	push	{r3, lr}

    extern char _ebss; // Defined by the linker
    static char *heap_end;
    char *prev_heap_end;

    if (heap_end == 0) {
 8001746:	4b0d      	ldr	r3, [pc, #52]	; (800177c <_sbrk+0x38>)
 8001748:	681a      	ldr	r2, [r3, #0]
 800174a:	b90a      	cbnz	r2, 8001750 <_sbrk+0xc>
        heap_end = &_ebss;
 800174c:	4a0c      	ldr	r2, [pc, #48]	; (8001780 <_sbrk+0x3c>)
 800174e:	601a      	str	r2, [r3, #0]
    }
    prev_heap_end = heap_end;
 8001750:	681b      	ldr	r3, [r3, #0]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
{
  register uint32_t result;

  __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 8001752:	f3ef 8208 	mrs	r2, MSP

char * stack = (char*) __get_MSP();

     if (heap_end + incr >  stack)
 8001756:	4418      	add	r0, r3
 8001758:	4290      	cmp	r0, r2
 800175a:	d90a      	bls.n	8001772 <_sbrk+0x2e>
     {
         _write (STDERR_FILENO, "Heap and stack collision\n", 25);
 800175c:	4909      	ldr	r1, [pc, #36]	; (8001784 <_sbrk+0x40>)
 800175e:	2219      	movs	r2, #25
 8001760:	2002      	movs	r0, #2
 8001762:	f7ff ffd5 	bl	8001710 <_write>
         errno = ENOMEM;
 8001766:	4b08      	ldr	r3, [pc, #32]	; (8001788 <_sbrk+0x44>)
 8001768:	220c      	movs	r2, #12
 800176a:	601a      	str	r2, [r3, #0]
         return  (caddr_t) -1;
 800176c:	f04f 30ff 	mov.w	r0, #4294967295
 8001770:	bd08      	pop	{r3, pc}
         //abort ();
     }

    heap_end += incr;
 8001772:	4a02      	ldr	r2, [pc, #8]	; (800177c <_sbrk+0x38>)
 8001774:	6010      	str	r0, [r2, #0]
    return (caddr_t) prev_heap_end;
 8001776:	4618      	mov	r0, r3

}
 8001778:	bd08      	pop	{r3, pc}
 800177a:	bf00      	nop
 800177c:	2000d390 	.word	0x2000d390
 8001780:	2000e780 	.word	0x2000e780
 8001784:	08018886 	.word	0x08018886
 8001788:	2000e77c 	.word	0x2000e77c

0800178c <_cbFanImg>:
	GUI_DrawRect(0, 0, 62, 62);
	GUI_DrawRect(1, 1, 61, 61);
}

void _cbFanImg(WM_MESSAGE *pMsg){
	switch (pMsg->MsgId){
 800178c:	6803      	ldr	r3, [r0, #0]
 800178e:	2b0f      	cmp	r3, #15
	}	
	GUI_DrawRect(0, 0, 62, 62);
	GUI_DrawRect(1, 1, 61, 61);
}

void _cbFanImg(WM_MESSAGE *pMsg){
 8001790:	b510      	push	{r4, lr}
	switch (pMsg->MsgId){
 8001792:	d139      	bne.n	8001808 <_cbFanImg+0x7c>
*/
#ifdef SHOW_FAN
static void _prv_AppDrawFun(void){
	static int idx;
	
	if (g_fanCtlVal == fanctl_off)
 8001794:	4b1e      	ldr	r3, [pc, #120]	; (8001810 <_cbFanImg+0x84>)
 8001796:	4c1f      	ldr	r4, [pc, #124]	; (8001814 <_cbFanImg+0x88>)
 8001798:	7819      	ldrb	r1, [r3, #0]
 800179a:	2902      	cmp	r1, #2
 800179c:	d101      	bne.n	80017a2 <_cbFanImg+0x16>
	{
		GUI_DrawBitmap(&bmfan_Stop0, 2, 2);
 800179e:	481e      	ldr	r0, [pc, #120]	; (8001818 <_cbFanImg+0x8c>)
 80017a0:	e014      	b.n	80017cc <_cbFanImg+0x40>
		idx = 0;
	}
	else
	{	
		switch(idx++)
 80017a2:	6823      	ldr	r3, [r4, #0]
 80017a4:	1c5a      	adds	r2, r3, #1
 80017a6:	6022      	str	r2, [r4, #0]
 80017a8:	2b03      	cmp	r3, #3
 80017aa:	d812      	bhi.n	80017d2 <_cbFanImg+0x46>
 80017ac:	e8df f003 	tbb	[pc, r3]
 80017b0:	0c060402 	.word	0x0c060402
		{
		case 0:
			GUI_DrawBitmap(&bmfan_Rot0, 2, 2);
 80017b4:	4819      	ldr	r0, [pc, #100]	; (800181c <_cbFanImg+0x90>)
 80017b6:	e002      	b.n	80017be <_cbFanImg+0x32>
			break;
		case 1:
			GUI_DrawBitmap(&bmfan_Rot1, 2, 2);
 80017b8:	4819      	ldr	r0, [pc, #100]	; (8001820 <_cbFanImg+0x94>)
 80017ba:	e000      	b.n	80017be <_cbFanImg+0x32>
			break;
		case 2:
			GUI_DrawBitmap(&bmfan_Rot2, 2, 2);
 80017bc:	4819      	ldr	r0, [pc, #100]	; (8001824 <_cbFanImg+0x98>)
 80017be:	2102      	movs	r1, #2
 80017c0:	460a      	mov	r2, r1
 80017c2:	f00b fa19 	bl	800cbf8 <GUI_DrawBitmap>
 80017c6:	e006      	b.n	80017d6 <_cbFanImg+0x4a>
			break;		
		case 3:
			GUI_DrawBitmap(&bmfan_Rot3, 2, 2);
 80017c8:	4817      	ldr	r0, [pc, #92]	; (8001828 <_cbFanImg+0x9c>)
 80017ca:	2102      	movs	r1, #2
 80017cc:	460a      	mov	r2, r1
 80017ce:	f00b fa13 	bl	800cbf8 <GUI_DrawBitmap>
			idx = 0;
			break;		
		default:
			idx = 0;
 80017d2:	2300      	movs	r3, #0
 80017d4:	6023      	str	r3, [r4, #0]
		}
	}
	switch (g_airCtlVal)
 80017d6:	4b15      	ldr	r3, [pc, #84]	; (800182c <_cbFanImg+0xa0>)
 80017d8:	781b      	ldrb	r3, [r3, #0]
 80017da:	2b01      	cmp	r3, #1
 80017dc:	d003      	beq.n	80017e6 <_cbFanImg+0x5a>
 80017de:	2b02      	cmp	r3, #2
 80017e0:	d101      	bne.n	80017e6 <_cbFanImg+0x5a>
	{
	case airctl_cooler:
		GUI_SetColor(0x00DFA000);
		break;
	case airctl_heater:
		GUI_SetColor(GUI_LIGHTRED);
 80017e2:	4813      	ldr	r0, [pc, #76]	; (8001830 <_cbFanImg+0xa4>)
 80017e4:	e000      	b.n	80017e8 <_cbFanImg+0x5c>
		break;
	default:
		GUI_SetColor(0x00DFA000);
 80017e6:	4813      	ldr	r0, [pc, #76]	; (8001834 <_cbFanImg+0xa8>)
 80017e8:	f00a fde2 	bl	800c3b0 <GUI_SetColor>
		break;
	}	
	GUI_DrawRect(0, 0, 62, 62);
 80017ec:	2000      	movs	r0, #0
 80017ee:	223e      	movs	r2, #62	; 0x3e
 80017f0:	4601      	mov	r1, r0
 80017f2:	4613      	mov	r3, r2
 80017f4:	f00c fc46 	bl	800e084 <GUI_DrawRect>
	GUI_DrawRect(1, 1, 61, 61);
 80017f8:	2001      	movs	r0, #1
 80017fa:	223d      	movs	r2, #61	; 0x3d
 80017fc:	4601      	mov	r1, r0
 80017fe:	4613      	mov	r3, r2
			_prv_AppDrawFun();
			break;
		default:
			WM_DefaultProc(pMsg);
	}
}
 8001800:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	default:
		GUI_SetColor(0x00DFA000);
		break;
	}	
	GUI_DrawRect(0, 0, 62, 62);
	GUI_DrawRect(1, 1, 61, 61);
 8001804:	f00c bc3e 	b.w	800e084 <GUI_DrawRect>
			_prv_AppDrawFun();
			break;
		default:
			WM_DefaultProc(pMsg);
	}
}
 8001808:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	switch (pMsg->MsgId){
		case WM_PAINT:
			_prv_AppDrawFun();
			break;
		default:
			WM_DefaultProc(pMsg);
 800180c:	f007 ba26 	b.w	8008c5c <WM_DefaultProc>
 8001810:	2000e3a0 	.word	0x2000e3a0
 8001814:	2000d394 	.word	0x2000d394
 8001818:	0801a794 	.word	0x0801a794
 800181c:	0801a744 	.word	0x0801a744
 8001820:	0801a758 	.word	0x0801a758
 8001824:	0801a76c 	.word	0x0801a76c
 8001828:	0801a780 	.word	0x0801a780
 800182c:	2000e3c8 	.word	0x2000e3c8
 8001830:	008080ff 	.word	0x008080ff
 8001834:	00dfa000 	.word	0x00dfa000

08001838 <UpdateSetToTemperature>:
*/

void UpdateSetToTemperature(){
	char buf[8];
	WM_HWIN h;
	h = WM_GetDialogItem(hWinThermostat, ID_TEXT_1);	
 8001838:	4b09      	ldr	r3, [pc, #36]	; (8001860 <UpdateSetToTemperature+0x28>)
*       Static code
*
**********************************************************************
*/

void UpdateSetToTemperature(){
 800183a:	b513      	push	{r0, r1, r4, lr}
	char buf[8];
	WM_HWIN h;
	h = WM_GetDialogItem(hWinThermostat, ID_TEXT_1);	
 800183c:	6818      	ldr	r0, [r3, #0]
 800183e:	f640 0109 	movw	r1, #2057	; 0x809
 8001842:	f006 f8c1 	bl	80079c8 <WM_GetDialogItem>
	sprintf(buf,"%2d",g_manSetTmp);
 8001846:	4b07      	ldr	r3, [pc, #28]	; (8001864 <UpdateSetToTemperature+0x2c>)
 8001848:	4907      	ldr	r1, [pc, #28]	; (8001868 <UpdateSetToTemperature+0x30>)
 800184a:	681a      	ldr	r2, [r3, #0]
*/

void UpdateSetToTemperature(){
	char buf[8];
	WM_HWIN h;
	h = WM_GetDialogItem(hWinThermostat, ID_TEXT_1);	
 800184c:	4604      	mov	r4, r0
	sprintf(buf,"%2d",g_manSetTmp);
 800184e:	4668      	mov	r0, sp
 8001850:	f011 fab8 	bl	8012dc4 <sprintf>
	TEXT_SetText(h, buf);
 8001854:	4620      	mov	r0, r4
 8001856:	4669      	mov	r1, sp
 8001858:	f002 ffda 	bl	8004810 <TEXT_SetText>
}
 800185c:	b002      	add	sp, #8
 800185e:	bd10      	pop	{r4, pc}
 8001860:	2000e3c4 	.word	0x2000e3c4
 8001864:	2000e3b8 	.word	0x2000e3b8
 8001868:	080188a0 	.word	0x080188a0

0800186c <_cbDialog>:

/*********************************************************************
*
*       _cbDialog
*/
static void _cbDialog(WM_MESSAGE * pMsg){
 800186c:	b538      	push	{r3, r4, r5, lr}
  WM_HWIN hItem;
  int Id, NCode, t1;

  switch (pMsg->MsgId) {
 800186e:	6803      	ldr	r3, [r0, #0]
 8001870:	2b26      	cmp	r3, #38	; 0x26

/*********************************************************************
*
*       _cbDialog
*/
static void _cbDialog(WM_MESSAGE * pMsg){
 8001872:	4604      	mov	r4, r0
  WM_HWIN hItem;
  int Id, NCode, t1;

  switch (pMsg->MsgId) {
 8001874:	f000 812a 	beq.w	8001acc <_cbDialog+0x260>
 8001878:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 800187c:	f000 8170 	beq.w	8001b60 <_cbDialog+0x2f4>
 8001880:	2b1d      	cmp	r3, #29
 8001882:	f040 8169 	bne.w	8001b58 <_cbDialog+0x2ec>
	  case WM_INIT_DIALOG:
		// Initialization of 'Thermostat'
		hItem = pMsg->hWin;
 8001886:	6845      	ldr	r5, [r0, #4]
		FRAMEWIN_SetFont(hItem, &GUI_Font8x16);
 8001888:	49b6      	ldr	r1, [pc, #728]	; (8001b64 <_cbDialog+0x2f8>)
 800188a:	4628      	mov	r0, r5
 800188c:	f004 fb3c 	bl	8005f08 <FRAMEWIN_SetFont>
		FRAMEWIN_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
 8001890:	4628      	mov	r0, r5
 8001892:	210e      	movs	r1, #14
 8001894:	f004 fdf8 	bl	8006488 <FRAMEWIN_SetTextAlign>
		FRAMEWIN_SetTextColor(hItem, 0x00000000);
 8001898:	4628      	mov	r0, r5
 800189a:	2100      	movs	r1, #0
 800189c:	f004 fb66 	bl	8005f6c <FRAMEWIN_SetTextColor>
		// Initialization of 'txtCurRTC'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_0);
 80018a0:	f640 0108 	movw	r1, #2056	; 0x808
 80018a4:	6860      	ldr	r0, [r4, #4]
 80018a6:	f006 f88f 	bl	80079c8 <WM_GetDialogItem>
		TEXT_SetText(hItem, "72");
 80018aa:	49af      	ldr	r1, [pc, #700]	; (8001b68 <_cbDialog+0x2fc>)
		hItem = pMsg->hWin;
		FRAMEWIN_SetFont(hItem, &GUI_Font8x16);
		FRAMEWIN_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
		FRAMEWIN_SetTextColor(hItem, 0x00000000);
		// Initialization of 'txtCurRTC'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_0);
 80018ac:	4605      	mov	r5, r0
		TEXT_SetText(hItem, "72");
 80018ae:	f002 ffaf 	bl	8004810 <TEXT_SetText>
		TEXT_SetFont(hItem, GUI_FONT_D64);
 80018b2:	4628      	mov	r0, r5
 80018b4:	49ad      	ldr	r1, [pc, #692]	; (8001b6c <_cbDialog+0x300>)
 80018b6:	f002 ffd3 	bl	8004860 <TEXT_SetFont>
		TEXT_SetTextAlign(hItem, GUI_TA_LEFT | GUI_TA_VCENTER);
 80018ba:	4628      	mov	r0, r5
 80018bc:	210c      	movs	r1, #12
 80018be:	f002 ff95 	bl	80047ec <TEXT_SetTextAlign>
		TEXT_SetTextColor(hItem, 0x00258D52);
 80018c2:	4628      	mov	r0, r5
 80018c4:	49aa      	ldr	r1, [pc, #680]	; (8001b70 <_cbDialog+0x304>)
 80018c6:	f002 ff7f 	bl	80047c8 <TEXT_SetTextColor>
		// Initialization of 'SetToTmprt'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_1);
 80018ca:	f640 0109 	movw	r1, #2057	; 0x809
 80018ce:	6860      	ldr	r0, [r4, #4]
 80018d0:	f006 f87a 	bl	80079c8 <WM_GetDialogItem>
		TEXT_SetFont(hItem, GUI_FONT_32B_ASCII);
 80018d4:	49a7      	ldr	r1, [pc, #668]	; (8001b74 <_cbDialog+0x308>)
		TEXT_SetText(hItem, "72");
		TEXT_SetFont(hItem, GUI_FONT_D64);
		TEXT_SetTextAlign(hItem, GUI_TA_LEFT | GUI_TA_VCENTER);
		TEXT_SetTextColor(hItem, 0x00258D52);
		// Initialization of 'SetToTmprt'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_1);
 80018d6:	4605      	mov	r5, r0
		TEXT_SetFont(hItem, GUI_FONT_32B_ASCII);
 80018d8:	f002 ffc2 	bl	8004860 <TEXT_SetFont>
		TEXT_SetText(hItem, "75");
 80018dc:	4628      	mov	r0, r5
 80018de:	49a6      	ldr	r1, [pc, #664]	; (8001b78 <_cbDialog+0x30c>)
 80018e0:	f002 ff96 	bl	8004810 <TEXT_SetText>
		TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
 80018e4:	4628      	mov	r0, r5
 80018e6:	210e      	movs	r1, #14
 80018e8:	f002 ff80 	bl	80047ec <TEXT_SetTextAlign>
		// Initialization of 'txtEffSetToTmprt'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_1B);
 80018ec:	f641 0109 	movw	r1, #6153	; 0x1809
 80018f0:	6860      	ldr	r0, [r4, #4]
 80018f2:	f006 f869 	bl	80079c8 <WM_GetDialogItem>
		TEXT_SetText(hItem, "81");
 80018f6:	49a1      	ldr	r1, [pc, #644]	; (8001b7c <_cbDialog+0x310>)
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_1);
		TEXT_SetFont(hItem, GUI_FONT_32B_ASCII);
		TEXT_SetText(hItem, "75");
		TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_VCENTER);
		// Initialization of 'txtEffSetToTmprt'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_1B);
 80018f8:	4605      	mov	r5, r0
		TEXT_SetText(hItem, "81");
 80018fa:	f002 ff89 	bl	8004810 <TEXT_SetText>
		TEXT_SetFont(hItem, GUI_FONT_D48);
 80018fe:	4628      	mov	r0, r5
 8001900:	499f      	ldr	r1, [pc, #636]	; (8001b80 <_cbDialog+0x314>)
 8001902:	f002 ffad 	bl	8004860 <TEXT_SetFont>
		TEXT_SetTextAlign(hItem, GUI_TA_LEFT | GUI_TA_VCENTER);
 8001906:	4628      	mov	r0, r5
 8001908:	210c      	movs	r1, #12
 800190a:	f002 ff6f 	bl	80047ec <TEXT_SetTextAlign>
		TEXT_SetTextColor(hItem, 0x008D2552);
 800190e:	4628      	mov	r0, r5
 8001910:	499c      	ldr	r1, [pc, #624]	; (8001b84 <_cbDialog+0x318>)
 8001912:	f002 ff59 	bl	80047c8 <TEXT_SetTextColor>
		// Initialization of 'txtFanCtl'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_2);
 8001916:	f640 010c 	movw	r1, #2060	; 0x80c
 800191a:	6860      	ldr	r0, [r4, #4]
 800191c:	f006 f854 	bl	80079c8 <WM_GetDialogItem>
		TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_TOP);
 8001920:	2102      	movs	r1, #2
		TEXT_SetText(hItem, "81");
		TEXT_SetFont(hItem, GUI_FONT_D48);
		TEXT_SetTextAlign(hItem, GUI_TA_LEFT | GUI_TA_VCENTER);
		TEXT_SetTextColor(hItem, 0x008D2552);
		// Initialization of 'txtFanCtl'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_2);
 8001922:	4605      	mov	r5, r0
		TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_TOP);
 8001924:	f002 ff62 	bl	80047ec <TEXT_SetTextAlign>
		TEXT_SetText(hItem, "Fan");
 8001928:	4628      	mov	r0, r5
 800192a:	4997      	ldr	r1, [pc, #604]	; (8001b88 <_cbDialog+0x31c>)
 800192c:	f002 ff70 	bl	8004810 <TEXT_SetText>
		TEXT_SetFont(hItem, GUI_FONT_20B_ASCII);
 8001930:	4628      	mov	r0, r5
 8001932:	4996      	ldr	r1, [pc, #600]	; (8001b8c <_cbDialog+0x320>)
 8001934:	f002 ff94 	bl	8004860 <TEXT_SetFont>
		// Initialization of 'FanControl'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_RADIO_0);
 8001938:	f640 010d 	movw	r1, #2061	; 0x80d
 800193c:	6860      	ldr	r0, [r4, #4]
 800193e:	f006 f843 	bl	80079c8 <WM_GetDialogItem>
		RADIO_SetText(hItem, "Auto", 0);
 8001942:	4993      	ldr	r1, [pc, #588]	; (8001b90 <_cbDialog+0x324>)
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_2);
		TEXT_SetTextAlign(hItem, GUI_TA_HCENTER | GUI_TA_TOP);
		TEXT_SetText(hItem, "Fan");
		TEXT_SetFont(hItem, GUI_FONT_20B_ASCII);
		// Initialization of 'FanControl'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_RADIO_0);
 8001944:	4605      	mov	r5, r0
		RADIO_SetText(hItem, "Auto", 0);
 8001946:	2200      	movs	r2, #0
 8001948:	f003 fa17 	bl	8004d7a <RADIO_SetText>
		RADIO_SetText(hItem, "On", 1);
 800194c:	4628      	mov	r0, r5
 800194e:	2201      	movs	r2, #1
 8001950:	4990      	ldr	r1, [pc, #576]	; (8001b94 <_cbDialog+0x328>)
 8001952:	f003 fa12 	bl	8004d7a <RADIO_SetText>
		RADIO_SetFont(hItem, GUI_FONT_16B_ASCII);
 8001956:	4628      	mov	r0, r5
 8001958:	498f      	ldr	r1, [pc, #572]	; (8001b98 <_cbDialog+0x32c>)
 800195a:	f003 fa33 	bl	8004dc4 <RADIO_SetFont>
		RADIO_SetText(hItem, "Off", 2);
 800195e:	4628      	mov	r0, r5
 8001960:	2202      	movs	r2, #2
 8001962:	498e      	ldr	r1, [pc, #568]	; (8001b9c <_cbDialog+0x330>)
 8001964:	f003 fa09 	bl	8004d7a <RADIO_SetText>
		// Initialization of 'rdo_Cndtnr'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_RADIO_1);
 8001968:	f44f 6101 	mov.w	r1, #2064	; 0x810
 800196c:	6860      	ldr	r0, [r4, #4]
 800196e:	f006 f82b 	bl	80079c8 <WM_GetDialogItem>
		RADIO_SetText(hItem, "Auto", 0);
 8001972:	4987      	ldr	r1, [pc, #540]	; (8001b90 <_cbDialog+0x324>)
		RADIO_SetText(hItem, "Auto", 0);
		RADIO_SetText(hItem, "On", 1);
		RADIO_SetFont(hItem, GUI_FONT_16B_ASCII);
		RADIO_SetText(hItem, "Off", 2);
		// Initialization of 'rdo_Cndtnr'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_RADIO_1);
 8001974:	4605      	mov	r5, r0
		RADIO_SetText(hItem, "Auto", 0);
 8001976:	2200      	movs	r2, #0
 8001978:	f003 f9ff 	bl	8004d7a <RADIO_SetText>
		RADIO_SetText(hItem, "Cooler", 1);
 800197c:	4628      	mov	r0, r5
 800197e:	2201      	movs	r2, #1
 8001980:	4987      	ldr	r1, [pc, #540]	; (8001ba0 <_cbDialog+0x334>)
 8001982:	f003 f9fa 	bl	8004d7a <RADIO_SetText>
		RADIO_SetFont(hItem, GUI_FONT_16B_ASCII);
 8001986:	4628      	mov	r0, r5
 8001988:	4983      	ldr	r1, [pc, #524]	; (8001b98 <_cbDialog+0x32c>)
 800198a:	f003 fa1b 	bl	8004dc4 <RADIO_SetFont>
		RADIO_SetText(hItem, "Heater", 2);
 800198e:	4628      	mov	r0, r5
 8001990:	4984      	ldr	r1, [pc, #528]	; (8001ba4 <_cbDialog+0x338>)
 8001992:	2202      	movs	r2, #2
 8001994:	f003 f9f1 	bl	8004d7a <RADIO_SetText>
		RADIO_SetText(hItem, "Off", 3);
 8001998:	2203      	movs	r2, #3
 800199a:	4628      	mov	r0, r5
 800199c:	497f      	ldr	r1, [pc, #508]	; (8001b9c <_cbDialog+0x330>)
 800199e:	f003 f9ec 	bl	8004d7a <RADIO_SetText>
		// Initialization of 'txtRTCH'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_4);
 80019a2:	f640 0112 	movw	r1, #2066	; 0x812
 80019a6:	6860      	ldr	r0, [r4, #4]
 80019a8:	f006 f80e 	bl	80079c8 <WM_GetDialogItem>
		TEXT_SetText(hItem, "12");
 80019ac:	497e      	ldr	r1, [pc, #504]	; (8001ba8 <_cbDialog+0x33c>)
		RADIO_SetText(hItem, "Cooler", 1);
		RADIO_SetFont(hItem, GUI_FONT_16B_ASCII);
		RADIO_SetText(hItem, "Heater", 2);
		RADIO_SetText(hItem, "Off", 3);
		// Initialization of 'txtRTCH'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_4);
 80019ae:	4605      	mov	r5, r0
		TEXT_SetText(hItem, "12");
 80019b0:	f002 ff2e 	bl	8004810 <TEXT_SetText>
		TEXT_SetFont(hItem, GUI_FONT_D24X32);
 80019b4:	4628      	mov	r0, r5
 80019b6:	497d      	ldr	r1, [pc, #500]	; (8001bac <_cbDialog+0x340>)
 80019b8:	f002 ff52 	bl	8004860 <TEXT_SetFont>
		// Initialization of 'txtRTCMH'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_4MH);
 80019bc:	f44f 612a 	mov.w	r1, #2720	; 0xaa0
 80019c0:	6860      	ldr	r0, [r4, #4]
 80019c2:	f006 f801 	bl	80079c8 <WM_GetDialogItem>
		TEXT_SetText(hItem, ":");
 80019c6:	497a      	ldr	r1, [pc, #488]	; (8001bb0 <_cbDialog+0x344>)
		// Initialization of 'txtRTCH'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_4);
		TEXT_SetText(hItem, "12");
		TEXT_SetFont(hItem, GUI_FONT_D24X32);
		// Initialization of 'txtRTCMH'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_4MH);
 80019c8:	4605      	mov	r5, r0
		TEXT_SetText(hItem, ":");
 80019ca:	f002 ff21 	bl	8004810 <TEXT_SetText>
		TEXT_SetFont(hItem, GUI_FONT_D24X32);
 80019ce:	4628      	mov	r0, r5
 80019d0:	4976      	ldr	r1, [pc, #472]	; (8001bac <_cbDialog+0x340>)
 80019d2:	f002 ff45 	bl	8004860 <TEXT_SetFont>
		// Initialization of 'txtRTCM'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_4M);
 80019d6:	f640 21a1 	movw	r1, #2721	; 0xaa1
 80019da:	6860      	ldr	r0, [r4, #4]
 80019dc:	f005 fff4 	bl	80079c8 <WM_GetDialogItem>
		TEXT_SetText(hItem, "00");
 80019e0:	4974      	ldr	r1, [pc, #464]	; (8001bb4 <_cbDialog+0x348>)
		// Initialization of 'txtRTCMH'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_4MH);
		TEXT_SetText(hItem, ":");
		TEXT_SetFont(hItem, GUI_FONT_D24X32);
		// Initialization of 'txtRTCM'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_4M);
 80019e2:	4605      	mov	r5, r0
		TEXT_SetText(hItem, "00");
 80019e4:	f002 ff14 	bl	8004810 <TEXT_SetText>
		TEXT_SetFont(hItem, GUI_FONT_D24X32);
 80019e8:	4628      	mov	r0, r5
 80019ea:	4970      	ldr	r1, [pc, #448]	; (8001bac <_cbDialog+0x340>)
 80019ec:	f002 ff38 	bl	8004860 <TEXT_SetFont>
		// Initialization of 'btnSetup'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_9);
 80019f0:	f640 011f 	movw	r1, #2079	; 0x81f
 80019f4:	6860      	ldr	r0, [r4, #4]
 80019f6:	f005 ffe7 	bl	80079c8 <WM_GetDialogItem>
		BUTTON_SetText(hItem, "Setup");
 80019fa:	496f      	ldr	r1, [pc, #444]	; (8001bb8 <_cbDialog+0x34c>)
		// Initialization of 'txtRTCM'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_4M);
		TEXT_SetText(hItem, "00");
		TEXT_SetFont(hItem, GUI_FONT_D24X32);
		// Initialization of 'btnSetup'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_9);
 80019fc:	4605      	mov	r5, r0
		BUTTON_SetText(hItem, "Setup");
 80019fe:	f005 fb39 	bl	8007074 <BUTTON_SetText>
		BUTTON_SetFont(hItem, GUI_FONT_16B_ASCII);
 8001a02:	4628      	mov	r0, r5
 8001a04:	4964      	ldr	r1, [pc, #400]	; (8001b98 <_cbDialog+0x32c>)
 8001a06:	f005 fb5d 	bl	80070c4 <BUTTON_SetFont>
		// Initialization of 'txtPM'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_5);
 8001a0a:	f44f 6102 	mov.w	r1, #2080	; 0x820
 8001a0e:	6860      	ldr	r0, [r4, #4]
 8001a10:	f005 ffda 	bl	80079c8 <WM_GetDialogItem>
		TEXT_SetText(hItem, "PM");
 8001a14:	4969      	ldr	r1, [pc, #420]	; (8001bbc <_cbDialog+0x350>)
		// Initialization of 'btnSetup'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_9);
		BUTTON_SetText(hItem, "Setup");
		BUTTON_SetFont(hItem, GUI_FONT_16B_ASCII);
		// Initialization of 'txtPM'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_5);
 8001a16:	4605      	mov	r5, r0
		TEXT_SetText(hItem, "PM");
 8001a18:	f002 fefa 	bl	8004810 <TEXT_SetText>
		TEXT_SetFont(hItem, GUI_FONT_24B_ASCII);
 8001a1c:	4628      	mov	r0, r5
 8001a1e:	4968      	ldr	r1, [pc, #416]	; (8001bc0 <_cbDialog+0x354>)
 8001a20:	f002 ff1e 	bl	8004860 <TEXT_SetFont>
		// Initialization of 'chkManual'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_CHECKBOX_0);
 8001a24:	f640 0121 	movw	r1, #2081	; 0x821
 8001a28:	6860      	ldr	r0, [r4, #4]
 8001a2a:	f005 ffcd 	bl	80079c8 <WM_GetDialogItem>
		CHECKBOX_SetText(hItem, "Manual control");
 8001a2e:	4965      	ldr	r1, [pc, #404]	; (8001bc4 <_cbDialog+0x358>)
		// Initialization of 'txtPM'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_5);
		TEXT_SetText(hItem, "PM");
		TEXT_SetFont(hItem, GUI_FONT_24B_ASCII);
		// Initialization of 'chkManual'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_CHECKBOX_0);
 8001a30:	4605      	mov	r5, r0
		CHECKBOX_SetText(hItem, "Manual control");
 8001a32:	f004 fed2 	bl	80067da <CHECKBOX_SetText>
		CHECKBOX_SetFont(hItem, GUI_FONT_16B_ASCII);
 8001a36:	4628      	mov	r0, r5
 8001a38:	4957      	ldr	r1, [pc, #348]	; (8001b98 <_cbDialog+0x32c>)
 8001a3a:	f004 ff0d 	bl	8006858 <CHECKBOX_SetFont>
		CHECKBOX_SetState(hItem, 1);
 8001a3e:	4628      	mov	r0, r5
 8001a40:	2101      	movs	r1, #1
 8001a42:	f004 feec 	bl	800681e <CHECKBOX_SetState>
		g_manCtl.isEn = true;
 8001a46:	4b60      	ldr	r3, [pc, #384]	; (8001bc8 <_cbDialog+0x35c>)
		// Initialization of 'txtWeekday'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_6);
 8001a48:	6860      	ldr	r0, [r4, #4]
		// Initialization of 'chkManual'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_CHECKBOX_0);
		CHECKBOX_SetText(hItem, "Manual control");
		CHECKBOX_SetFont(hItem, GUI_FONT_16B_ASCII);
		CHECKBOX_SetState(hItem, 1);
		g_manCtl.isEn = true;
 8001a4a:	2201      	movs	r2, #1
		// Initialization of 'txtWeekday'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_6);
 8001a4c:	f640 0124 	movw	r1, #2084	; 0x824
		// Initialization of 'chkManual'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_CHECKBOX_0);
		CHECKBOX_SetText(hItem, "Manual control");
		CHECKBOX_SetFont(hItem, GUI_FONT_16B_ASCII);
		CHECKBOX_SetState(hItem, 1);
		g_manCtl.isEn = true;
 8001a50:	701a      	strb	r2, [r3, #0]
		// Initialization of 'txtWeekday'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_6);
 8001a52:	f005 ffb9 	bl	80079c8 <WM_GetDialogItem>
		TEXT_SetFont(hItem, GUI_FONT_24B_ASCII);
 8001a56:	495a      	ldr	r1, [pc, #360]	; (8001bc0 <_cbDialog+0x354>)
		CHECKBOX_SetText(hItem, "Manual control");
		CHECKBOX_SetFont(hItem, GUI_FONT_16B_ASCII);
		CHECKBOX_SetState(hItem, 1);
		g_manCtl.isEn = true;
		// Initialization of 'txtWeekday'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_6);
 8001a58:	4605      	mov	r5, r0
		TEXT_SetFont(hItem, GUI_FONT_24B_ASCII);
 8001a5a:	f002 ff01 	bl	8004860 <TEXT_SetFont>
		TEXT_SetText(hItem, "Wed");
 8001a5e:	4628      	mov	r0, r5
 8001a60:	495a      	ldr	r1, [pc, #360]	; (8001bcc <_cbDialog+0x360>)
 8001a62:	f002 fed5 	bl	8004810 <TEXT_SetText>
		// Initialization of 'Text'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_7);
 8001a66:	f640 0126 	movw	r1, #2086	; 0x826
 8001a6a:	6860      	ldr	r0, [r4, #4]
 8001a6c:	f005 ffac 	bl	80079c8 <WM_GetDialogItem>
		TEXT_SetText(hItem, "Adjust");
 8001a70:	4957      	ldr	r1, [pc, #348]	; (8001bd0 <_cbDialog+0x364>)
		// Initialization of 'txtWeekday'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_6);
		TEXT_SetFont(hItem, GUI_FONT_24B_ASCII);
		TEXT_SetText(hItem, "Wed");
		// Initialization of 'Text'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_7);
 8001a72:	4605      	mov	r5, r0
		TEXT_SetText(hItem, "Adjust");
 8001a74:	f002 fecc 	bl	8004810 <TEXT_SetText>
		TEXT_SetFont(hItem, GUI_FONT_20B_ASCII);
 8001a78:	4628      	mov	r0, r5
 8001a7a:	4944      	ldr	r1, [pc, #272]	; (8001b8c <_cbDialog+0x320>)
 8001a7c:	f002 fef0 	bl	8004860 <TEXT_SetFont>
		// Initialization of 'txtAM'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_8);
 8001a80:	f640 0128 	movw	r1, #2088	; 0x828
 8001a84:	6860      	ldr	r0, [r4, #4]
 8001a86:	f005 ff9f 	bl	80079c8 <WM_GetDialogItem>
		TEXT_SetText(hItem, "AM");
 8001a8a:	4952      	ldr	r1, [pc, #328]	; (8001bd4 <_cbDialog+0x368>)
		// Initialization of 'Text'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_7);
		TEXT_SetText(hItem, "Adjust");
		TEXT_SetFont(hItem, GUI_FONT_20B_ASCII);
		// Initialization of 'txtAM'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_8);
 8001a8c:	4605      	mov	r5, r0
		TEXT_SetText(hItem, "AM");
 8001a8e:	f002 febf 	bl	8004810 <TEXT_SetText>
		TEXT_SetFont(hItem, GUI_FONT_24B_ASCII);
 8001a92:	4628      	mov	r0, r5
 8001a94:	494a      	ldr	r1, [pc, #296]	; (8001bc0 <_cbDialog+0x354>)
 8001a96:	f002 fee3 	bl	8004860 <TEXT_SetFont>
		// Slider Init
		hItem = WM_GetDialogItem(pMsg->hWin, ID_SLIDER_0);
 8001a9a:	f640 010e 	movw	r1, #2062	; 0x80e
 8001a9e:	6860      	ldr	r0, [r4, #4]
 8001aa0:	f005 ff92 	bl	80079c8 <WM_GetDialogItem>
		SLIDER_SetRange(hItem, 0, TEMP_MAX - TEMP_MIN);
 8001aa4:	221e      	movs	r2, #30
 8001aa6:	2100      	movs	r1, #0
		// Initialization of 'txtAM'
		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_8);
		TEXT_SetText(hItem, "AM");
		TEXT_SetFont(hItem, GUI_FONT_24B_ASCII);
		// Slider Init
		hItem = WM_GetDialogItem(pMsg->hWin, ID_SLIDER_0);
 8001aa8:	4605      	mov	r5, r0
		SLIDER_SetRange(hItem, 0, TEMP_MAX - TEMP_MIN);
 8001aaa:	f003 f93b 	bl	8004d24 <SLIDER_SetRange>
		SLIDER_SetValue(hItem, TEMP_MAX - g_manSetTmp);
 8001aae:	4b4a      	ldr	r3, [pc, #296]	; (8001bd8 <_cbDialog+0x36c>)
 8001ab0:	6819      	ldr	r1, [r3, #0]
 8001ab2:	4628      	mov	r0, r5
 8001ab4:	f1c1 015f 	rsb	r1, r1, #95	; 0x5f
 8001ab8:	f003 f85e 	bl	8004b78 <SLIDER_SetValue>
		
		s_hCurTemp = WM_GetDialogItem(pMsg->hWin, ID_TEXT_0);
 8001abc:	6860      	ldr	r0, [r4, #4]
 8001abe:	f640 0108 	movw	r1, #2056	; 0x808
 8001ac2:	f005 ff81 	bl	80079c8 <WM_GetDialogItem>
 8001ac6:	4b45      	ldr	r3, [pc, #276]	; (8001bdc <_cbDialog+0x370>)
 8001ac8:	6018      	str	r0, [r3, #0]
 8001aca:	e02d      	b.n	8001b28 <_cbDialog+0x2bc>
	  
	  case WM_TOUCH:
		break;
		
	  case WM_NOTIFY_PARENT:
		Id    = WM_GetId(pMsg->hWinSrc);
 8001acc:	6880      	ldr	r0, [r0, #8]
 8001ace:	f005 ff3a 	bl	8007946 <WM_GetId>
		NCode = pMsg->Data.v;
		switch(Id) {
 8001ad2:	f640 020e 	movw	r2, #2062	; 0x80e
 8001ad6:	4290      	cmp	r0, r2
	  
	  case WM_TOUCH:
		break;
		
	  case WM_NOTIFY_PARENT:
		Id    = WM_GetId(pMsg->hWinSrc);
 8001ad8:	4601      	mov	r1, r0
		NCode = pMsg->Data.v;
 8001ada:	68e3      	ldr	r3, [r4, #12]
		switch(Id) {
 8001adc:	d017      	beq.n	8001b0e <_cbDialog+0x2a2>
 8001ade:	dc04      	bgt.n	8001aea <_cbDialog+0x27e>
 8001ae0:	f640 020d 	movw	r2, #2061	; 0x80d
 8001ae4:	4290      	cmp	r0, r2
 8001ae6:	d008      	beq.n	8001afa <_cbDialog+0x28e>
 8001ae8:	bd38      	pop	{r3, r4, r5, pc}
 8001aea:	f5b0 6f01 	cmp.w	r0, #2064	; 0x810
 8001aee:	d01f      	beq.n	8001b30 <_cbDialog+0x2c4>
 8001af0:	f640 021f 	movw	r2, #2079	; 0x81f
 8001af4:	4290      	cmp	r0, r2
 8001af6:	d025      	beq.n	8001b44 <_cbDialog+0x2d8>
 8001af8:	bd38      	pop	{r3, r4, r5, pc}
			case ID_RADIO_0: // Notifications sent by 'FanControl'
			  switch(NCode) {
 8001afa:	2b05      	cmp	r3, #5
 8001afc:	d130      	bne.n	8001b60 <_cbDialog+0x2f4>
				  case WM_NOTIFICATION_CLICKED:
					break;
				  case WM_NOTIFICATION_RELEASED:
					break;
				  case WM_NOTIFICATION_VALUE_CHANGED:
					hItem = WM_GetDialogItem(pMsg->hWin, ID_RADIO_0);
 8001afe:	6860      	ldr	r0, [r4, #4]
 8001b00:	f005 ff62 	bl	80079c8 <WM_GetDialogItem>
					t1 = RADIO_GetValue(hItem);
 8001b04:	f003 fb21 	bl	800514a <RADIO_GetValue>
					g_manCtl.fanCtl = (enm_FanCtl) t1;        
 8001b08:	4b2f      	ldr	r3, [pc, #188]	; (8001bc8 <_cbDialog+0x35c>)
 8001b0a:	7098      	strb	r0, [r3, #2]
					break;
 8001b0c:	bd38      	pop	{r3, r4, r5, pc}
				  }
			break;
			case ID_SLIDER_0: // Notifications sent by 'SetToSlider'
			  switch(NCode) {
 8001b0e:	2b05      	cmp	r3, #5
 8001b10:	d126      	bne.n	8001b60 <_cbDialog+0x2f4>
				  case WM_NOTIFICATION_CLICKED:
					break;
				  case WM_NOTIFICATION_RELEASED:
					break;
				  case WM_NOTIFICATION_VALUE_CHANGED:
					hItem = WM_GetDialogItem(pMsg->hWin, ID_SLIDER_0);
 8001b12:	6860      	ldr	r0, [r4, #4]
 8001b14:	f005 ff58 	bl	80079c8 <WM_GetDialogItem>
					g_manSetTmp = TEMP_MAX - SLIDER_GetValue(hItem);
 8001b18:	f003 f921 	bl	8004d5e <SLIDER_GetValue>
 8001b1c:	4b2e      	ldr	r3, [pc, #184]	; (8001bd8 <_cbDialog+0x36c>)
 8001b1e:	f1c0 005f 	rsb	r0, r0, #95	; 0x5f
 8001b22:	6018      	str	r0, [r3, #0]
					g_manCtl.cx16setTmp = g_manSetTmp;
 8001b24:	4b28      	ldr	r3, [pc, #160]	; (8001bc8 <_cbDialog+0x35c>)
 8001b26:	6058      	str	r0, [r3, #4]
	  break;
	  default:
		WM_DefaultProc(pMsg);
		break;
	}
}
 8001b28:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
					break;
				  case WM_NOTIFICATION_VALUE_CHANGED:
					hItem = WM_GetDialogItem(pMsg->hWin, ID_SLIDER_0);
					g_manSetTmp = TEMP_MAX - SLIDER_GetValue(hItem);
					g_manCtl.cx16setTmp = g_manSetTmp;
					UpdateSetToTemperature();
 8001b2c:	f7ff be84 	b.w	8001838 <UpdateSetToTemperature>
					break;
			  }
			break;
			case ID_RADIO_1: // Notifications sent by 'rdo_Cndtnr'
			  switch(NCode) {
 8001b30:	2b05      	cmp	r3, #5
 8001b32:	d115      	bne.n	8001b60 <_cbDialog+0x2f4>
				  case WM_NOTIFICATION_CLICKED:
					break;
				  case WM_NOTIFICATION_RELEASED:
					break;
				  case WM_NOTIFICATION_VALUE_CHANGED:
					hItem = WM_GetDialogItem(pMsg->hWin, ID_RADIO_1);
 8001b34:	6860      	ldr	r0, [r4, #4]
 8001b36:	f005 ff47 	bl	80079c8 <WM_GetDialogItem>
					t1 = RADIO_GetValue(hItem);
 8001b3a:	f003 fb06 	bl	800514a <RADIO_GetValue>
					g_manCtl.airCtl = (enm_AirCtl) t1;
 8001b3e:	4b22      	ldr	r3, [pc, #136]	; (8001bc8 <_cbDialog+0x35c>)
 8001b40:	7058      	strb	r0, [r3, #1]
					break;
 8001b42:	bd38      	pop	{r3, r4, r5, pc}
			  }
			break;
			case ID_BUTTON_9: // Notifications sent by 'btnSetup'
			  switch(NCode) {
 8001b44:	2b02      	cmp	r3, #2
 8001b46:	d10b      	bne.n	8001b60 <_cbDialog+0x2f4>
				  case WM_NOTIFICATION_CLICKED:
					break;
				  case WM_NOTIFICATION_RELEASED:
					ShowWindow(_hWindow4);
 8001b48:	4b25      	ldr	r3, [pc, #148]	; (8001be0 <_cbDialog+0x374>)
 8001b4a:	6818      	ldr	r0, [r3, #0]
 8001b4c:	f000 f89c 	bl	8001c88 <ShowWindow>
					Touch_thermo = true;
 8001b50:	4b24      	ldr	r3, [pc, #144]	; (8001be4 <_cbDialog+0x378>)
 8001b52:	2201      	movs	r2, #1
 8001b54:	701a      	strb	r2, [r3, #0]
					break;
 8001b56:	bd38      	pop	{r3, r4, r5, pc}
	  break;
	  default:
		WM_DefaultProc(pMsg);
		break;
	}
}
 8001b58:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
			  }
			break;*/
		}
	  break;
	  default:
		WM_DefaultProc(pMsg);
 8001b5c:	f007 b87e 	b.w	8008c5c <WM_DefaultProc>
 8001b60:	bd38      	pop	{r3, r4, r5, pc}
 8001b62:	bf00      	nop
 8001b64:	08024b70 	.word	0x08024b70
 8001b68:	080188a4 	.word	0x080188a4
 8001b6c:	08022b94 	.word	0x08022b94
 8001b70:	00258d52 	.word	0x00258d52
 8001b74:	08026c4c 	.word	0x08026c4c
 8001b78:	080188a7 	.word	0x080188a7
 8001b7c:	080188aa 	.word	0x080188aa
 8001b80:	08023950 	.word	0x08023950
 8001b84:	008d2552 	.word	0x008d2552
 8001b88:	080188ad 	.word	0x080188ad
 8001b8c:	08029ca8 	.word	0x08029ca8
 8001b90:	080188b1 	.word	0x080188b1
 8001b94:	080188b6 	.word	0x080188b6
 8001b98:	0802a9d0 	.word	0x0802a9d0
 8001b9c:	080188b9 	.word	0x080188b9
 8001ba0:	080188bd 	.word	0x080188bd
 8001ba4:	080188c4 	.word	0x080188c4
 8001ba8:	080188cb 	.word	0x080188cb
 8001bac:	0802411c 	.word	0x0802411c
 8001bb0:	080188ce 	.word	0x080188ce
 8001bb4:	080188d0 	.word	0x080188d0
 8001bb8:	08018981 	.word	0x08018981
 8001bbc:	080189af 	.word	0x080189af
 8001bc0:	08028d68 	.word	0x08028d68
 8001bc4:	080188d3 	.word	0x080188d3
 8001bc8:	2000e3a4 	.word	0x2000e3a4
 8001bcc:	080188e2 	.word	0x080188e2
 8001bd0:	080188e6 	.word	0x080188e6
 8001bd4:	080189a9 	.word	0x080189a9
 8001bd8:	2000e3b8 	.word	0x2000e3b8
 8001bdc:	2000d398 	.word	0x2000d398
 8001be0:	2000e3e4 	.word	0x2000e3e4
 8001be4:	2000d39c 	.word	0x2000d39c

08001be8 <CreateThermostat>:
*
*       CreateThermostat
**********************************************************************
*/

WM_HWIN CreateThermostat(void) {
 8001be8:	b530      	push	{r4, r5, lr}
  WM_HWIN hWin;
  
  FRAMEWIN_SetDefaultSkin(FRAMEWIN_SKIN_FLEX);
 8001bea:	4813      	ldr	r0, [pc, #76]	; (8001c38 <CreateThermostat+0x50>)
*
*       CreateThermostat
**********************************************************************
*/

WM_HWIN CreateThermostat(void) {
 8001bec:	b085      	sub	sp, #20
  WM_HWIN hWin;
  
  FRAMEWIN_SetDefaultSkin(FRAMEWIN_SKIN_FLEX);
 8001bee:	f004 f975 	bl	8005edc <FRAMEWIN_SetDefaultSkin>
  BUTTON_SetDefaultSkin(BUTTON_SKIN_FLEX);
 8001bf2:	4812      	ldr	r0, [pc, #72]	; (8001c3c <CreateThermostat+0x54>)
 8001bf4:	f005 f8f6 	bl	8006de4 <BUTTON_SetDefaultSkin>

  hWin = GUI_CreateDialogBox(_aDialogCreate, GUI_COUNTOF(_aDialogCreate), &_cbDialog, WM_HBKWIN, 0, 0);
 8001bf8:	f005 feea 	bl	80079d0 <WM_GetDesktopWindow>
 8001bfc:	2500      	movs	r5, #0
 8001bfe:	4603      	mov	r3, r0
 8001c00:	9500      	str	r5, [sp, #0]
 8001c02:	9501      	str	r5, [sp, #4]
 8001c04:	2111      	movs	r1, #17
 8001c06:	4a0e      	ldr	r2, [pc, #56]	; (8001c40 <CreateThermostat+0x58>)
 8001c08:	480e      	ldr	r0, [pc, #56]	; (8001c44 <CreateThermostat+0x5c>)
 8001c0a:	f004 fd97 	bl	800673c <GUI_CreateDialogBox>
  #ifdef SHOW_FAN
	hWinFanImg = WM_CreateWindowAsChild(114, 104, 63, 63, 
 8001c0e:	2306      	movs	r3, #6
 8001c10:	223f      	movs	r2, #63	; 0x3f
 8001c12:	9301      	str	r3, [sp, #4]
 8001c14:	4b0c      	ldr	r3, [pc, #48]	; (8001c48 <CreateThermostat+0x60>)
 8001c16:	9000      	str	r0, [sp, #0]
  WM_HWIN hWin;
  
  FRAMEWIN_SetDefaultSkin(FRAMEWIN_SKIN_FLEX);
  BUTTON_SetDefaultSkin(BUTTON_SKIN_FLEX);

  hWin = GUI_CreateDialogBox(_aDialogCreate, GUI_COUNTOF(_aDialogCreate), &_cbDialog, WM_HBKWIN, 0, 0);
 8001c18:	4604      	mov	r4, r0
  #ifdef SHOW_FAN
	hWinFanImg = WM_CreateWindowAsChild(114, 104, 63, 63, 
 8001c1a:	9302      	str	r3, [sp, #8]
 8001c1c:	2168      	movs	r1, #104	; 0x68
 8001c1e:	4613      	mov	r3, r2
 8001c20:	9503      	str	r5, [sp, #12]
 8001c22:	2072      	movs	r0, #114	; 0x72
 8001c24:	f006 fcac 	bl	8008580 <WM_CreateWindowAsChild>
 8001c28:	4b08      	ldr	r3, [pc, #32]	; (8001c4c <CreateThermostat+0x64>)
 8001c2a:	6018      	str	r0, [r3, #0]
		hWin,
		WM_CF_FGND | WM_CF_MEMDEV | WM_CF_SHOW,
		_cbFanImg, 0
	);
  #endif
  WM_HideWindow(hWin);
 8001c2c:	4620      	mov	r0, r4
 8001c2e:	f005 fe08 	bl	8007842 <WM_HideWindow>
  
  return hWin;
}
 8001c32:	4620      	mov	r0, r4
 8001c34:	b005      	add	sp, #20
 8001c36:	bd30      	pop	{r4, r5, pc}
 8001c38:	08005a0d 	.word	0x08005a0d
 8001c3c:	08006ac5 	.word	0x08006ac5
 8001c40:	0800186d 	.word	0x0800186d
 8001c44:	080189b4 	.word	0x080189b4
 8001c48:	0800178d 	.word	0x0800178d
 8001c4c:	2000e3b0 	.word	0x2000e3b0

08001c50 <_cbButton>:
				if(UnPressed_Flag == true){
				}
			}
			break;*/		
		default:
			BUTTON_Callback(pMsg);
 8001c50:	f005 b95c 	b.w	8006f0c <BUTTON_Callback>

08001c54 <_cbBkWindow>:
/*********************************************************************
*	_cbBkWindow
*		:CallBack for BkWindow
**********************************************************************
*/
static void _cbBkWindow(WM_MESSAGE *pMsg){
 8001c54:	b508      	push	{r3, lr}
	switch(pMsg->MsgId){
 8001c56:	6803      	ldr	r3, [r0, #0]
 8001c58:	2b0f      	cmp	r3, #15
 8001c5a:	d10d      	bne.n	8001c78 <_cbBkWindow+0x24>
	case WM_PAINT:
		GUI_SetColor(GUI_WHITE);
 8001c5c:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8001c60:	f00a fba6 	bl	800c3b0 <GUI_SetColor>
		GUI_SetFont(&GUI_Font24_ASCII);
 8001c64:	4806      	ldr	r0, [pc, #24]	; (8001c80 <_cbBkWindow+0x2c>)
 8001c66:	f00a fb75 	bl	800c354 <GUI_SetFont>
		GUI_DispStringAt(_acInfoText, 5, 40);
 8001c6a:	4806      	ldr	r0, [pc, #24]	; (8001c84 <_cbBkWindow+0x30>)
 8001c6c:	2105      	movs	r1, #5
 8001c6e:	2228      	movs	r2, #40	; 0x28
		break;
	default:
		WM_DefaultProc(pMsg);
		break;
	}
}
 8001c70:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
static void _cbBkWindow(WM_MESSAGE *pMsg){
	switch(pMsg->MsgId){
	case WM_PAINT:
		GUI_SetColor(GUI_WHITE);
		GUI_SetFont(&GUI_Font24_ASCII);
		GUI_DispStringAt(_acInfoText, 5, 40);
 8001c74:	f00b b980 	b.w	800cf78 <GUI_DispStringAt>
		break;
	default:
		WM_DefaultProc(pMsg);
		break;
	}
}
 8001c78:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
		GUI_SetColor(GUI_WHITE);
		GUI_SetFont(&GUI_Font24_ASCII);
		GUI_DispStringAt(_acInfoText, 5, 40);
		break;
	default:
		WM_DefaultProc(pMsg);
 8001c7c:	f006 bfee 	b.w	8008c5c <WM_DefaultProc>
 8001c80:	08027c0c 	.word	0x08027c0c
 8001c84:	2000d3a8 	.word	0x2000d3a8

08001c88 <ShowWindow>:
*		:Hide all windows and then show 'Window'
**********************************************************************
*/
void ShowWindow(WM_HWIN window)
{
	WM_HideWindow(hWinThermostat);
 8001c88:	4b0c      	ldr	r3, [pc, #48]	; (8001cbc <ShowWindow+0x34>)
*	ShowWindow
*		:Hide all windows and then show 'Window'
**********************************************************************
*/
void ShowWindow(WM_HWIN window)
{
 8001c8a:	b510      	push	{r4, lr}
 8001c8c:	4604      	mov	r4, r0
	WM_HideWindow(hWinThermostat);
 8001c8e:	6818      	ldr	r0, [r3, #0]
 8001c90:	f005 fdd7 	bl	8007842 <WM_HideWindow>
	WM_HideWindow(_hWindow4);
 8001c94:	4b0a      	ldr	r3, [pc, #40]	; (8001cc0 <ShowWindow+0x38>)
 8001c96:	6818      	ldr	r0, [r3, #0]
 8001c98:	f005 fdd3 	bl	8007842 <WM_HideWindow>
	WM_HideWindow(_hWindow5);
 8001c9c:	4b09      	ldr	r3, [pc, #36]	; (8001cc4 <ShowWindow+0x3c>)
 8001c9e:	6818      	ldr	r0, [r3, #0]
 8001ca0:	f005 fdcf 	bl	8007842 <WM_HideWindow>
	WM_HideWindow(_hWindow6);
 8001ca4:	4b08      	ldr	r3, [pc, #32]	; (8001cc8 <ShowWindow+0x40>)
 8001ca6:	6818      	ldr	r0, [r3, #0]
 8001ca8:	f005 fdcb 	bl	8007842 <WM_HideWindow>
	//WM_HideWindow(hWinProgramTime);
	WM_ShowWindow(window);
 8001cac:	4620      	mov	r0, r4
 8001cae:	f005 fa92 	bl	80071d6 <WM_ShowWindow>
	GUI_Exec();
}
 8001cb2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	WM_HideWindow(_hWindow4);
	WM_HideWindow(_hWindow5);
	WM_HideWindow(_hWindow6);
	//WM_HideWindow(hWinProgramTime);
	WM_ShowWindow(window);
	GUI_Exec();
 8001cb6:	f00a bd79 	b.w	800c7ac <GUI_Exec>
 8001cba:	bf00      	nop
 8001cbc:	2000e3c4 	.word	0x2000e3c4
 8001cc0:	2000e3e4 	.word	0x2000e3e4
 8001cc4:	2000e3d0 	.word	0x2000e3d0
 8001cc8:	2000e3e0 	.word	0x2000e3e0

08001ccc <_cbWindow2>:
**********************************************************************
*/
static void _cbWindow2(WM_MESSAGE *pMsg){
	GUI_COLOR Color;
	int Id, NCode;
	switch(pMsg->MsgId){
 8001ccc:	6803      	ldr	r3, [r0, #0]
 8001cce:	2b0f      	cmp	r3, #15
/*********************************************************************
*	_cbWindow2
*		:CallBack for BkWindow
**********************************************************************
*/
static void _cbWindow2(WM_MESSAGE *pMsg){
 8001cd0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001cd2:	4604      	mov	r4, r0
	GUI_COLOR Color;
	int Id, NCode;
	switch(pMsg->MsgId){
 8001cd4:	d02a      	beq.n	8001d2c <_cbWindow2+0x60>
 8001cd6:	2b26      	cmp	r3, #38	; 0x26
 8001cd8:	d133      	bne.n	8001d42 <_cbWindow2+0x76>
		case WM_NOTIFY_PARENT:
			Id    = WM_GetId(pMsg->hWinSrc);
 8001cda:	6880      	ldr	r0, [r0, #8]
 8001cdc:	f005 fe33 	bl	8007946 <WM_GetId>
			NCode = pMsg->Data.v;
			switch(Id) {
 8001ce0:	f640 0211 	movw	r2, #2065	; 0x811
 8001ce4:	4290      	cmp	r0, r2
	GUI_COLOR Color;
	int Id, NCode;
	switch(pMsg->MsgId){
		case WM_NOTIFY_PARENT:
			Id    = WM_GetId(pMsg->hWinSrc);
			NCode = pMsg->Data.v;
 8001ce6:	68e3      	ldr	r3, [r4, #12]
			switch(Id) {
 8001ce8:	d004      	beq.n	8001cf4 <_cbWindow2+0x28>
 8001cea:	f640 0212 	movw	r2, #2066	; 0x812
 8001cee:	4290      	cmp	r0, r2
 8001cf0:	d00c      	beq.n	8001d0c <_cbWindow2+0x40>
 8001cf2:	e028      	b.n	8001d46 <_cbWindow2+0x7a>
				case ID_BUTTON_6: // Notifications sent by 'btnSetup'
					switch(NCode) {
 8001cf4:	2b02      	cmp	r3, #2
 8001cf6:	d126      	bne.n	8001d46 <_cbWindow2+0x7a>
					  case WM_NOTIFICATION_CLICKED:
						break;
					  case WM_NOTIFICATION_RELEASED:
						ShowWindow(_hWindow4);
 8001cf8:	4b14      	ldr	r3, [pc, #80]	; (8001d4c <_cbWindow2+0x80>)
 8001cfa:	6818      	ldr	r0, [r3, #0]
 8001cfc:	f7ff ffc4 	bl	8001c88 <ShowWindow>
						PROGBAR_SetValue(_hProgBar_1, 0);
 8001d00:	4b13      	ldr	r3, [pc, #76]	; (8001d50 <_cbWindow2+0x84>)
 8001d02:	2100      	movs	r1, #0
 8001d04:	6818      	ldr	r0, [r3, #0]
 8001d06:	f003 fcd1 	bl	80056ac <PROGBAR_SetValue>
 8001d0a:	e00b      	b.n	8001d24 <_cbWindow2+0x58>
						Touch_thermo = true;
						break;
					}
				break;
				case ID_BUTTON_7: // Notifications sent by 'btnSetup'
					switch(NCode) {
 8001d0c:	2b02      	cmp	r3, #2
 8001d0e:	d11a      	bne.n	8001d46 <_cbWindow2+0x7a>
					  case WM_NOTIFICATION_CLICKED:
						break;
					  case WM_NOTIFICATION_RELEASED:
						_ProgBarStat(_hProgBar_1);
 8001d10:	4b0f      	ldr	r3, [pc, #60]	; (8001d50 <_cbWindow2+0x84>)
 8001d12:	681d      	ldr	r5, [r3, #0]
*/
static void _ProgBarStat(PROGBAR_Handle _hProgBar){
	int n;
	
	//PROGBAR_SetValue(_hProgBar, -16383);
	for(n=0; n <= 100; n++){
 8001d14:	2400      	movs	r4, #0
		PROGBAR_SetValue(_hProgBar, n);
 8001d16:	4621      	mov	r1, r4
 8001d18:	4628      	mov	r0, r5
*/
static void _ProgBarStat(PROGBAR_Handle _hProgBar){
	int n;
	
	//PROGBAR_SetValue(_hProgBar, -16383);
	for(n=0; n <= 100; n++){
 8001d1a:	3401      	adds	r4, #1
		PROGBAR_SetValue(_hProgBar, n);
 8001d1c:	f003 fcc6 	bl	80056ac <PROGBAR_SetValue>
*/
static void _ProgBarStat(PROGBAR_Handle _hProgBar){
	int n;
	
	//PROGBAR_SetValue(_hProgBar, -16383);
	for(n=0; n <= 100; n++){
 8001d20:	2c65      	cmp	r4, #101	; 0x65
 8001d22:	d1f8      	bne.n	8001d16 <_cbWindow2+0x4a>
					switch(NCode) {
					  case WM_NOTIFICATION_CLICKED:
						break;
					  case WM_NOTIFICATION_RELEASED:
						_ProgBarStat(_hProgBar_1);
						Touch_thermo = true;
 8001d24:	4b0b      	ldr	r3, [pc, #44]	; (8001d54 <_cbWindow2+0x88>)
 8001d26:	2201      	movs	r2, #1
 8001d28:	701a      	strb	r2, [r3, #0]
 8001d2a:	e00c      	b.n	8001d46 <_cbWindow2+0x7a>
					}
				break;
			}
			break;
		case WM_PAINT:
			WM_GetUserData(pMsg->hWin, &Color, 4);
 8001d2c:	a901      	add	r1, sp, #4
 8001d2e:	2204      	movs	r2, #4
 8001d30:	6840      	ldr	r0, [r0, #4]
 8001d32:	f005 fa3a 	bl	80071aa <WM_GetUserData>
			GUI_SetBkColor(Color);
 8001d36:	9801      	ldr	r0, [sp, #4]
 8001d38:	f00a fb38 	bl	800c3ac <GUI_SetBkColor>
			GUI_Clear();
 8001d3c:	f00b faec 	bl	800d318 <GUI_Clear>
			break;
 8001d40:	e001      	b.n	8001d46 <_cbWindow2+0x7a>
		default:
			WM_DefaultProc(pMsg);
 8001d42:	f006 ff8b 	bl	8008c5c <WM_DefaultProc>
			break;
		}
}
 8001d46:	b003      	add	sp, #12
 8001d48:	bd30      	pop	{r4, r5, pc}
 8001d4a:	bf00      	nop
 8001d4c:	2000e3e4 	.word	0x2000e3e4
 8001d50:	2000d3e4 	.word	0x2000d3e4
 8001d54:	2000d39c 	.word	0x2000d39c

08001d58 <_cbWindow1>:
**********************************************************************
*/
void _cbWindow1(WM_MESSAGE *pMsg){
	GUI_COLOR Color;
	int Id, NCode;
	switch(pMsg->MsgId){
 8001d58:	6803      	ldr	r3, [r0, #0]
 8001d5a:	2b0f      	cmp	r3, #15
/*********************************************************************
*	_cbWindow1
*		:CallBack for BkWindow
**********************************************************************
*/
void _cbWindow1(WM_MESSAGE *pMsg){
 8001d5c:	b513      	push	{r0, r1, r4, lr}
 8001d5e:	4604      	mov	r4, r0
	GUI_COLOR Color;
	int Id, NCode;
	switch(pMsg->MsgId){
 8001d60:	d024      	beq.n	8001dac <_cbWindow1+0x54>
 8001d62:	2b26      	cmp	r3, #38	; 0x26
 8001d64:	d12d      	bne.n	8001dc2 <_cbWindow1+0x6a>
		case WM_NOTIFY_PARENT:
			Id    = WM_GetId(pMsg->hWinSrc);
 8001d66:	6880      	ldr	r0, [r0, #8]
 8001d68:	f005 fded 	bl	8007946 <WM_GetId>
			NCode = pMsg->Data.v;
			switch(Id) {
 8001d6c:	f640 020b 	movw	r2, #2059	; 0x80b
 8001d70:	4290      	cmp	r0, r2
	GUI_COLOR Color;
	int Id, NCode;
	switch(pMsg->MsgId){
		case WM_NOTIFY_PARENT:
			Id    = WM_GetId(pMsg->hWinSrc);
			NCode = pMsg->Data.v;
 8001d72:	68e3      	ldr	r3, [r4, #12]
			switch(Id) {
 8001d74:	d004      	beq.n	8001d80 <_cbWindow1+0x28>
 8001d76:	f640 020e 	movw	r2, #2062	; 0x80e
 8001d7a:	4290      	cmp	r0, r2
 8001d7c:	d00c      	beq.n	8001d98 <_cbWindow1+0x40>
 8001d7e:	e022      	b.n	8001dc6 <_cbWindow1+0x6e>
				case ID_BUTTON_0: // Notifications sent by 'btnSetup'
					Touched_Button2 = true;
 8001d80:	4a12      	ldr	r2, [pc, #72]	; (8001dcc <_cbWindow1+0x74>)
 8001d82:	2401      	movs	r4, #1
					switch(NCode) {
 8001d84:	2b02      	cmp	r3, #2
		case WM_NOTIFY_PARENT:
			Id    = WM_GetId(pMsg->hWinSrc);
			NCode = pMsg->Data.v;
			switch(Id) {
				case ID_BUTTON_0: // Notifications sent by 'btnSetup'
					Touched_Button2 = true;
 8001d86:	7014      	strb	r4, [r2, #0]
					switch(NCode) {
 8001d88:	d11d      	bne.n	8001dc6 <_cbWindow1+0x6e>
					  case WM_NOTIFICATION_CLICKED:
						//ShowWindow(_hWindow5);
						break;
					  case WM_NOTIFICATION_RELEASED:
						ShowWindow(_hWindow5);
 8001d8a:	4b11      	ldr	r3, [pc, #68]	; (8001dd0 <_cbWindow1+0x78>)
 8001d8c:	6818      	ldr	r0, [r3, #0]
 8001d8e:	f7ff ff7b 	bl	8001c88 <ShowWindow>
						Touch_thermo = true;
 8001d92:	4b10      	ldr	r3, [pc, #64]	; (8001dd4 <_cbWindow1+0x7c>)
 8001d94:	701c      	strb	r4, [r3, #0]
 8001d96:	e016      	b.n	8001dc6 <_cbWindow1+0x6e>
						break;
					}
				break;
				case ID_BUTTON_3: // Notifications sent by 'btnSetup'
					switch(NCode) {
 8001d98:	2b02      	cmp	r3, #2
 8001d9a:	d114      	bne.n	8001dc6 <_cbWindow1+0x6e>
					  case WM_NOTIFICATION_CLICKED:
						break;
					  case WM_NOTIFICATION_RELEASED:
						ShowWindow(hWinThermostat);
 8001d9c:	4b0e      	ldr	r3, [pc, #56]	; (8001dd8 <_cbWindow1+0x80>)
 8001d9e:	6818      	ldr	r0, [r3, #0]
 8001da0:	f7ff ff72 	bl	8001c88 <ShowWindow>
						Touch_thermo = true;
 8001da4:	4b0b      	ldr	r3, [pc, #44]	; (8001dd4 <_cbWindow1+0x7c>)
 8001da6:	2201      	movs	r2, #1
 8001da8:	701a      	strb	r2, [r3, #0]
 8001daa:	e00c      	b.n	8001dc6 <_cbWindow1+0x6e>
					}
				break;
			}
			break;
		case WM_PAINT:
			WM_GetUserData(pMsg->hWin, &Color, 4);
 8001dac:	a901      	add	r1, sp, #4
 8001dae:	2204      	movs	r2, #4
 8001db0:	6840      	ldr	r0, [r0, #4]
 8001db2:	f005 f9fa 	bl	80071aa <WM_GetUserData>
			GUI_SetBkColor(Color);
 8001db6:	9801      	ldr	r0, [sp, #4]
 8001db8:	f00a faf8 	bl	800c3ac <GUI_SetBkColor>
			GUI_Clear();
 8001dbc:	f00b faac 	bl	800d318 <GUI_Clear>
			break;
 8001dc0:	e001      	b.n	8001dc6 <_cbWindow1+0x6e>
		default:
			WM_DefaultProc(pMsg);
 8001dc2:	f006 ff4b 	bl	8008c5c <WM_DefaultProc>
			break;
		}
}
 8001dc6:	b002      	add	sp, #8
 8001dc8:	bd10      	pop	{r4, pc}
 8001dca:	bf00      	nop
 8001dcc:	2000d3f0 	.word	0x2000d3f0
 8001dd0:	2000e3d0 	.word	0x2000e3d0
 8001dd4:	2000d39c 	.word	0x2000d39c
 8001dd8:	2000e3c4 	.word	0x2000e3c4

08001ddc <Init_GUI_verventa>:
/*********************************************************************
*	Init_GUI_calor
*		:Init all windows and callbacks for the GUI
**********************************************************************
*/
ErrorStatus Init_GUI_verventa(void){
 8001ddc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
*	_SetDesktopColor
*		:Set Color for desktop Black
**********************************************************************
*/
static void _SetDesktopColor(void){
	GUI_SetBkColor(GUI_BLUE);
 8001de0:	f44f 007f 	mov.w	r0, #16711680	; 0xff0000
/*********************************************************************
*	Init_GUI_calor
*		:Init all windows and callbacks for the GUI
**********************************************************************
*/
ErrorStatus Init_GUI_verventa(void){
 8001de4:	b087      	sub	sp, #28
*	_SetDesktopColor
*		:Set Color for desktop Black
**********************************************************************
*/
static void _SetDesktopColor(void){
	GUI_SetBkColor(GUI_BLUE);
 8001de6:	f00a fae1 	bl	800c3ac <GUI_SetBkColor>
	GUI_Clear();
 8001dea:	f00b fa95 	bl	800d318 <GUI_Clear>
*	_DrawInfoText
*		:Drawes the info text directly on the display
**********************************************************************
*/
static void _DrawInfoText(char *pStr){
	GUI_SetColor(GUI_WHITE);
 8001dee:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8001df2:	f00a fadd 	bl	800c3b0 <GUI_SetColor>
	GUI_SetFont(&GUI_Font24_ASCII);
	GUI_DispStringHCenterAt("WindowManager - MultiCalor", 160, 5);
	GUI_SetFont(&GUI_Font8x16);
 8001df6:	f8df 83a4 	ldr.w	r8, [pc, #932]	; 800219c <Init_GUI_verventa+0x3c0>
*		:Drawes the info text directly on the display
**********************************************************************
*/
static void _DrawInfoText(char *pStr){
	GUI_SetColor(GUI_WHITE);
	GUI_SetFont(&GUI_Font24_ASCII);
 8001dfa:	48d4      	ldr	r0, [pc, #848]	; (800214c <Init_GUI_verventa+0x370>)
*	_CreateWindow
*		:Create all windows
**********************************************************************
*/
static void _CreateWindow(void){
	_cbBkWindowOld = WM_SetCallback(WM_HBKWIN, _cbBkWindow);
 8001dfc:	f8df 93a0 	ldr.w	r9, [pc, #928]	; 80021a0 <Init_GUI_verventa+0x3c4>
 8001e00:	4fd3      	ldr	r7, [pc, #844]	; (8002150 <Init_GUI_verventa+0x374>)
	
	_hWindow4 = WM_CreateWindow(0, 0, 320, 240, WM_CF_SHOW | WM_CF_MEMDEV, _cbWindow1, 0);
 8001e02:	4ed4      	ldr	r6, [pc, #848]	; (8002154 <Init_GUI_verventa+0x378>)
	//GUI_Delay(SPEED/3);
	_hWindow5 = WM_CreateWindow(0, 0, 320, 240, WM_CF_SHOW | WM_CF_MEMDEV, _cbWindow2, 0);
 8001e04:	f8df b39c 	ldr.w	fp, [pc, #924]	; 80021a4 <Init_GUI_verventa+0x3c8>
 8001e08:	f8df a39c 	ldr.w	sl, [pc, #924]	; 80021a8 <Init_GUI_verventa+0x3cc>
*		:Drawes the info text directly on the display
**********************************************************************
*/
static void _DrawInfoText(char *pStr){
	GUI_SetColor(GUI_WHITE);
	GUI_SetFont(&GUI_Font24_ASCII);
 8001e0c:	f00a faa2 	bl	800c354 <GUI_SetFont>
	GUI_DispStringHCenterAt("WindowManager - MultiCalor", 160, 5);
 8001e10:	21a0      	movs	r1, #160	; 0xa0
 8001e12:	2205      	movs	r2, #5
 8001e14:	48d0      	ldr	r0, [pc, #832]	; (8002158 <Init_GUI_verventa+0x37c>)
 8001e16:	f00b f88d 	bl	800cf34 <GUI_DispStringHCenterAt>
	GUI_SetFont(&GUI_Font8x16);
 8001e1a:	4640      	mov	r0, r8
 8001e1c:	f00a fa9a 	bl	800c354 <GUI_SetFont>
	GUI_DispStringAtCEOL(pStr, 5, 40);
 8001e20:	2228      	movs	r2, #40	; 0x28
 8001e22:	2105      	movs	r1, #5
 8001e24:	48cd      	ldr	r0, [pc, #820]	; (800215c <Init_GUI_verventa+0x380>)
 8001e26:	f00b f89f 	bl	800cf68 <GUI_DispStringAtCEOL>
*/
static void _SetDesktopColor(void){
	GUI_SetBkColor(GUI_BLUE);
	GUI_Clear();
	_DrawInfoText("WM_SetDesktopColor()");
	GUI_Exec();
 8001e2a:	f00a fcbf 	bl	800c7ac <GUI_Exec>
	//GUI_Delay(SPEED/2);
	WM_SetDesktopColor(GUI_BLACK);
 8001e2e:	2000      	movs	r0, #0
 8001e30:	f005 fb10 	bl	8007454 <WM_SetDesktopColor>
	GUI_Exec();
 8001e34:	f00a fcba 	bl	800c7ac <GUI_Exec>
	//GUI_Delay(SPEED/2);
	GUI_SetBkColor(GUI_BLACK);
 8001e38:	2000      	movs	r0, #0
 8001e3a:	f00a fab7 	bl	800c3ac <GUI_SetBkColor>
	WM_SetDesktopColor(GUI_INVALID_COLOR);
 8001e3e:	f06f 4070 	mvn.w	r0, #4026531840	; 0xf0000000
 8001e42:	f005 fb07 	bl	8007454 <WM_SetDesktopColor>
*	_CreateWindow
*		:Create all windows
**********************************************************************
*/
static void _CreateWindow(void){
	_cbBkWindowOld = WM_SetCallback(WM_HBKWIN, _cbBkWindow);
 8001e46:	f005 fdc3 	bl	80079d0 <WM_GetDesktopWindow>
 8001e4a:	4649      	mov	r1, r9
 8001e4c:	f005 fb8e 	bl	800756c <WM_SetCallback>
	
	_hWindow4 = WM_CreateWindow(0, 0, 320, 240, WM_CF_SHOW | WM_CF_MEMDEV, _cbWindow1, 0);
 8001e50:	2400      	movs	r4, #0
 8001e52:	2506      	movs	r5, #6
 8001e54:	4bc2      	ldr	r3, [pc, #776]	; (8002160 <Init_GUI_verventa+0x384>)
*	_CreateWindow
*		:Create all windows
**********************************************************************
*/
static void _CreateWindow(void){
	_cbBkWindowOld = WM_SetCallback(WM_HBKWIN, _cbBkWindow);
 8001e56:	6038      	str	r0, [r7, #0]
	
	_hWindow4 = WM_CreateWindow(0, 0, 320, 240, WM_CF_SHOW | WM_CF_MEMDEV, _cbWindow1, 0);
 8001e58:	4621      	mov	r1, r4
 8001e5a:	9301      	str	r3, [sp, #4]
 8001e5c:	9402      	str	r4, [sp, #8]
 8001e5e:	9500      	str	r5, [sp, #0]
 8001e60:	4620      	mov	r0, r4
 8001e62:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8001e66:	23f0      	movs	r3, #240	; 0xf0
 8001e68:	f006 fc3a 	bl	80086e0 <WM_CreateWindow>
	//GUI_Delay(SPEED/3);
	_hWindow5 = WM_CreateWindow(0, 0, 320, 240, WM_CF_SHOW | WM_CF_MEMDEV, _cbWindow2, 0);
 8001e6c:	f8cd b004 	str.w	fp, [sp, #4]
**********************************************************************
*/
static void _CreateWindow(void){
	_cbBkWindowOld = WM_SetCallback(WM_HBKWIN, _cbBkWindow);
	
	_hWindow4 = WM_CreateWindow(0, 0, 320, 240, WM_CF_SHOW | WM_CF_MEMDEV, _cbWindow1, 0);
 8001e70:	6030      	str	r0, [r6, #0]
	//GUI_Delay(SPEED/3);
	_hWindow5 = WM_CreateWindow(0, 0, 320, 240, WM_CF_SHOW | WM_CF_MEMDEV, _cbWindow2, 0);
 8001e72:	9402      	str	r4, [sp, #8]
 8001e74:	4621      	mov	r1, r4
 8001e76:	9500      	str	r5, [sp, #0]
 8001e78:	4620      	mov	r0, r4
 8001e7a:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8001e7e:	23f0      	movs	r3, #240	; 0xf0
 8001e80:	f006 fc2e 	bl	80086e0 <WM_CreateWindow>
	//GUI_Delay(SPEED/3);
	_hWindow6 = WM_CreateWindow(0, 0, 320, 240, WM_CF_SHOW | WM_CF_MEMDEV, _cbWindow2, 0);
 8001e84:	4621      	mov	r1, r4
 8001e86:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8001e8a:	23f0      	movs	r3, #240	; 0xf0
static void _CreateWindow(void){
	_cbBkWindowOld = WM_SetCallback(WM_HBKWIN, _cbBkWindow);
	
	_hWindow4 = WM_CreateWindow(0, 0, 320, 240, WM_CF_SHOW | WM_CF_MEMDEV, _cbWindow1, 0);
	//GUI_Delay(SPEED/3);
	_hWindow5 = WM_CreateWindow(0, 0, 320, 240, WM_CF_SHOW | WM_CF_MEMDEV, _cbWindow2, 0);
 8001e8c:	f8ca 0000 	str.w	r0, [sl]
	//GUI_Delay(SPEED/3);
	_hWindow6 = WM_CreateWindow(0, 0, 320, 240, WM_CF_SHOW | WM_CF_MEMDEV, _cbWindow2, 0);
 8001e90:	e88d 0820 	stmia.w	sp, {r5, fp}
 8001e94:	9402      	str	r4, [sp, #8]
 8001e96:	4620      	mov	r0, r4
 8001e98:	f006 fc22 	bl	80086e0 <WM_CreateWindow>
 8001e9c:	f8df c30c 	ldr.w	ip, [pc, #780]	; 80021ac <Init_GUI_verventa+0x3d0>
 8001ea0:	f8cd c014 	str.w	ip, [sp, #20]
 8001ea4:	f8cc 0000 	str.w	r0, [ip]
	//GUI_Delay(SPEED/3);
	
	ShowWindow(_hWindow4);
 8001ea8:	6830      	ldr	r0, [r6, #0]
	BUTTON_SetText(_hButton_button1, "Menu C °");
	BUTTON_SetFocussable(_hButton_button1, 1);
	BUTTON_SetSkin(_hButton_button1, BUTTON_SKIN_FLEX);
	

	_hButton_button2 = BUTTON_CreateAsChild(0, 60, 150, 50, _hWindow4, ID_BUTTON_1, WM_CF_SHOW | WM_CF_MEMDEV);
 8001eaa:	f8df b304 	ldr.w	fp, [pc, #772]	; 80021b0 <Init_GUI_verventa+0x3d4>
	_hWindow5 = WM_CreateWindow(0, 0, 320, 240, WM_CF_SHOW | WM_CF_MEMDEV, _cbWindow2, 0);
	//GUI_Delay(SPEED/3);
	_hWindow6 = WM_CreateWindow(0, 0, 320, 240, WM_CF_SHOW | WM_CF_MEMDEV, _cbWindow2, 0);
	//GUI_Delay(SPEED/3);
	
	ShowWindow(_hWindow4);
 8001eae:	f7ff feeb 	bl	8001c88 <ShowWindow>
*	_CreateWindowAsChild
*		:Create all child windows
**********************************************************************
*/
static void _CreateWindowAsChild(void){
	_cbBkWindowOld = WM_SetCallback(WM_HBKWIN, _cbBkWindow);
 8001eb2:	f005 fd8d 	bl	80079d0 <WM_GetDesktopWindow>
 8001eb6:	4649      	mov	r1, r9
 8001eb8:	f005 fb58 	bl	800756c <WM_SetCallback>
	
	_hButton_button1 = BUTTON_CreateAsChild(0, 0, 150, 50, _hWindow4, ID_BUTTON_0, WM_CF_SHOW | WM_CF_MEMDEV);
 8001ebc:	6833      	ldr	r3, [r6, #0]
*	_CreateWindowAsChild
*		:Create all child windows
**********************************************************************
*/
static void _CreateWindowAsChild(void){
	_cbBkWindowOld = WM_SetCallback(WM_HBKWIN, _cbBkWindow);
 8001ebe:	6038      	str	r0, [r7, #0]
	
	_hButton_button1 = BUTTON_CreateAsChild(0, 0, 150, 50, _hWindow4, ID_BUTTON_0, WM_CF_SHOW | WM_CF_MEMDEV);
 8001ec0:	9300      	str	r3, [sp, #0]
 8001ec2:	f640 030b 	movw	r3, #2059	; 0x80b
 8001ec6:	2296      	movs	r2, #150	; 0x96
 8001ec8:	9301      	str	r3, [sp, #4]
 8001eca:	4621      	mov	r1, r4
 8001ecc:	2332      	movs	r3, #50	; 0x32
 8001ece:	9502      	str	r5, [sp, #8]
 8001ed0:	4620      	mov	r0, r4
 8001ed2:	f004 ffb8 	bl	8006e46 <BUTTON_CreateAsChild>
 8001ed6:	f8df 92dc 	ldr.w	r9, [pc, #732]	; 80021b4 <Init_GUI_verventa+0x3d8>
	BUTTON_SetFont(_hButton_button1, &GUI_Font8x16);
	BUTTON_SetText(_hButton_button1, "Menu C °");
	BUTTON_SetFocussable(_hButton_button1, 1);
	BUTTON_SetSkin(_hButton_button1, BUTTON_SKIN_FLEX);
 8001eda:	4fa2      	ldr	r7, [pc, #648]	; (8002164 <Init_GUI_verventa+0x388>)
**********************************************************************
*/
static void _CreateWindowAsChild(void){
	_cbBkWindowOld = WM_SetCallback(WM_HBKWIN, _cbBkWindow);
	
	_hButton_button1 = BUTTON_CreateAsChild(0, 0, 150, 50, _hWindow4, ID_BUTTON_0, WM_CF_SHOW | WM_CF_MEMDEV);
 8001edc:	f8c9 0000 	str.w	r0, [r9]
	BUTTON_SetFont(_hButton_button1, &GUI_Font8x16);
 8001ee0:	4641      	mov	r1, r8
 8001ee2:	f005 f8ef 	bl	80070c4 <BUTTON_SetFont>
	BUTTON_SetText(_hButton_button1, "Menu C °");
 8001ee6:	f8d9 0000 	ldr.w	r0, [r9]
 8001eea:	499f      	ldr	r1, [pc, #636]	; (8002168 <Init_GUI_verventa+0x38c>)
 8001eec:	f005 f8c2 	bl	8007074 <BUTTON_SetText>
	BUTTON_SetFocussable(_hButton_button1, 1);
 8001ef0:	f8d9 0000 	ldr.w	r0, [r9]
 8001ef4:	2101      	movs	r1, #1
 8001ef6:	f005 f8f6 	bl	80070e6 <BUTTON_SetFocussable>
	BUTTON_SetSkin(_hButton_button1, BUTTON_SKIN_FLEX);
 8001efa:	f8d9 0000 	ldr.w	r0, [r9]
 8001efe:	4639      	mov	r1, r7
 8001f00:	f004 ff5c 	bl	8006dbc <BUTTON_SetSkin>
	

	_hButton_button2 = BUTTON_CreateAsChild(0, 60, 150, 50, _hWindow4, ID_BUTTON_1, WM_CF_SHOW | WM_CF_MEMDEV);
 8001f04:	6833      	ldr	r3, [r6, #0]
 8001f06:	9300      	str	r3, [sp, #0]
 8001f08:	f640 030c 	movw	r3, #2060	; 0x80c
 8001f0c:	2296      	movs	r2, #150	; 0x96
 8001f0e:	9301      	str	r3, [sp, #4]
 8001f10:	9502      	str	r5, [sp, #8]
 8001f12:	2332      	movs	r3, #50	; 0x32
 8001f14:	4620      	mov	r0, r4
 8001f16:	213c      	movs	r1, #60	; 0x3c
 8001f18:	f004 ff95 	bl	8006e46 <BUTTON_CreateAsChild>
	BUTTON_SetFont(_hButton_button2, &GUI_Font8x16);
 8001f1c:	4641      	mov	r1, r8
	BUTTON_SetText(_hButton_button1, "Menu C °");
	BUTTON_SetFocussable(_hButton_button1, 1);
	BUTTON_SetSkin(_hButton_button1, BUTTON_SKIN_FLEX);
	

	_hButton_button2 = BUTTON_CreateAsChild(0, 60, 150, 50, _hWindow4, ID_BUTTON_1, WM_CF_SHOW | WM_CF_MEMDEV);
 8001f1e:	f8cb 0000 	str.w	r0, [fp]
	BUTTON_SetFont(_hButton_button2, &GUI_Font8x16);
 8001f22:	f005 f8cf 	bl	80070c4 <BUTTON_SetFont>
	BUTTON_SetText(_hButton_button2, "Menu T °");
 8001f26:	f8db 0000 	ldr.w	r0, [fp]
 8001f2a:	4990      	ldr	r1, [pc, #576]	; (800216c <Init_GUI_verventa+0x390>)
 8001f2c:	f005 f8a2 	bl	8007074 <BUTTON_SetText>
	BUTTON_SetFocussable(_hButton_button2, 1);
 8001f30:	f8db 0000 	ldr.w	r0, [fp]
 8001f34:	2101      	movs	r1, #1
 8001f36:	f005 f8d6 	bl	80070e6 <BUTTON_SetFocussable>
	BUTTON_SetSkin(_hButton_button2, BUTTON_SKIN_FLEX);
 8001f3a:	f8db 0000 	ldr.w	r0, [fp]
	

	_hButton_button3 = BUTTON_CreateAsChild(0, 120, 150, 50, _hWindow4, ID_BUTTON_2, WM_CF_SHOW | WM_CF_MEMDEV);
 8001f3e:	f8df b278 	ldr.w	fp, [pc, #632]	; 80021b8 <Init_GUI_verventa+0x3dc>

	_hButton_button2 = BUTTON_CreateAsChild(0, 60, 150, 50, _hWindow4, ID_BUTTON_1, WM_CF_SHOW | WM_CF_MEMDEV);
	BUTTON_SetFont(_hButton_button2, &GUI_Font8x16);
	BUTTON_SetText(_hButton_button2, "Menu T °");
	BUTTON_SetFocussable(_hButton_button2, 1);
	BUTTON_SetSkin(_hButton_button2, BUTTON_SKIN_FLEX);
 8001f42:	4639      	mov	r1, r7
 8001f44:	f004 ff3a 	bl	8006dbc <BUTTON_SetSkin>
	

	_hButton_button3 = BUTTON_CreateAsChild(0, 120, 150, 50, _hWindow4, ID_BUTTON_2, WM_CF_SHOW | WM_CF_MEMDEV);
 8001f48:	6833      	ldr	r3, [r6, #0]
 8001f4a:	9300      	str	r3, [sp, #0]
 8001f4c:	f640 030d 	movw	r3, #2061	; 0x80d
 8001f50:	2296      	movs	r2, #150	; 0x96
 8001f52:	9301      	str	r3, [sp, #4]
 8001f54:	9502      	str	r5, [sp, #8]
 8001f56:	2332      	movs	r3, #50	; 0x32
 8001f58:	4620      	mov	r0, r4
 8001f5a:	2178      	movs	r1, #120	; 0x78
 8001f5c:	f004 ff73 	bl	8006e46 <BUTTON_CreateAsChild>
	BUTTON_SetFont(_hButton_button3, &GUI_Font8x16);
 8001f60:	4641      	mov	r1, r8
	BUTTON_SetText(_hButton_button2, "Menu T °");
	BUTTON_SetFocussable(_hButton_button2, 1);
	BUTTON_SetSkin(_hButton_button2, BUTTON_SKIN_FLEX);
	

	_hButton_button3 = BUTTON_CreateAsChild(0, 120, 150, 50, _hWindow4, ID_BUTTON_2, WM_CF_SHOW | WM_CF_MEMDEV);
 8001f62:	f8cb 0000 	str.w	r0, [fp]
	BUTTON_SetFont(_hButton_button3, &GUI_Font8x16);
 8001f66:	f005 f8ad 	bl	80070c4 <BUTTON_SetFont>
	BUTTON_SetText(_hButton_button3, "Menu Settings");
 8001f6a:	f8db 0000 	ldr.w	r0, [fp]
 8001f6e:	4980      	ldr	r1, [pc, #512]	; (8002170 <Init_GUI_verventa+0x394>)
 8001f70:	f005 f880 	bl	8007074 <BUTTON_SetText>
	BUTTON_SetFocussable(_hButton_button3, 1);
 8001f74:	f8db 0000 	ldr.w	r0, [fp]
 8001f78:	2101      	movs	r1, #1
 8001f7a:	f005 f8b4 	bl	80070e6 <BUTTON_SetFocussable>
	BUTTON_SetSkin(_hButton_button3, BUTTON_SKIN_FLEX);
 8001f7e:	f8db 0000 	ldr.w	r0, [fp]
	BUTTON_SetText(_hButton_button4, "Menu Vent");
	BUTTON_SetFocussable(_hButton_button4, 1);
	BUTTON_SetSkin(_hButton_button4, BUTTON_SKIN_FLEX);
	

	_hButton_button5 = BUTTON_CreateAsChild(160, 60, 150, 50, _hWindow4, ID_BUTTON_4, WM_CF_SHOW | WM_CF_MEMDEV);
 8001f82:	f8df b238 	ldr.w	fp, [pc, #568]	; 80021bc <Init_GUI_verventa+0x3e0>

	_hButton_button3 = BUTTON_CreateAsChild(0, 120, 150, 50, _hWindow4, ID_BUTTON_2, WM_CF_SHOW | WM_CF_MEMDEV);
	BUTTON_SetFont(_hButton_button3, &GUI_Font8x16);
	BUTTON_SetText(_hButton_button3, "Menu Settings");
	BUTTON_SetFocussable(_hButton_button3, 1);
	BUTTON_SetSkin(_hButton_button3, BUTTON_SKIN_FLEX);
 8001f86:	4639      	mov	r1, r7
 8001f88:	f004 ff18 	bl	8006dbc <BUTTON_SetSkin>
	

	_hButton_button4 = BUTTON_CreateAsChild(160, 0, 150, 50, _hWindow4, ID_BUTTON_3, WM_CF_SHOW | WM_CF_MEMDEV);
 8001f8c:	6833      	ldr	r3, [r6, #0]
 8001f8e:	9300      	str	r3, [sp, #0]
 8001f90:	f640 030e 	movw	r3, #2062	; 0x80e
 8001f94:	2296      	movs	r2, #150	; 0x96
 8001f96:	9301      	str	r3, [sp, #4]
 8001f98:	4621      	mov	r1, r4
 8001f9a:	9502      	str	r5, [sp, #8]
 8001f9c:	2332      	movs	r3, #50	; 0x32
 8001f9e:	20a0      	movs	r0, #160	; 0xa0
 8001fa0:	f004 ff51 	bl	8006e46 <BUTTON_CreateAsChild>
 8001fa4:	4b73      	ldr	r3, [pc, #460]	; (8002174 <Init_GUI_verventa+0x398>)
	BUTTON_SetFont(_hButton_button4, &GUI_Font8x16);
 8001fa6:	4641      	mov	r1, r8
	BUTTON_SetText(_hButton_button3, "Menu Settings");
	BUTTON_SetFocussable(_hButton_button3, 1);
	BUTTON_SetSkin(_hButton_button3, BUTTON_SKIN_FLEX);
	

	_hButton_button4 = BUTTON_CreateAsChild(160, 0, 150, 50, _hWindow4, ID_BUTTON_3, WM_CF_SHOW | WM_CF_MEMDEV);
 8001fa8:	6018      	str	r0, [r3, #0]
	BUTTON_SetFont(_hButton_button4, &GUI_Font8x16);
 8001faa:	f005 f88b 	bl	80070c4 <BUTTON_SetFont>
	BUTTON_SetText(_hButton_button4, "Menu Vent");
 8001fae:	4b71      	ldr	r3, [pc, #452]	; (8002174 <Init_GUI_verventa+0x398>)
 8001fb0:	4971      	ldr	r1, [pc, #452]	; (8002178 <Init_GUI_verventa+0x39c>)
 8001fb2:	6818      	ldr	r0, [r3, #0]
 8001fb4:	f005 f85e 	bl	8007074 <BUTTON_SetText>
	BUTTON_SetFocussable(_hButton_button4, 1);
 8001fb8:	4b6e      	ldr	r3, [pc, #440]	; (8002174 <Init_GUI_verventa+0x398>)
 8001fba:	2101      	movs	r1, #1
 8001fbc:	6818      	ldr	r0, [r3, #0]
 8001fbe:	f005 f892 	bl	80070e6 <BUTTON_SetFocussable>
	BUTTON_SetSkin(_hButton_button4, BUTTON_SKIN_FLEX);
 8001fc2:	4b6c      	ldr	r3, [pc, #432]	; (8002174 <Init_GUI_verventa+0x398>)
 8001fc4:	4639      	mov	r1, r7
 8001fc6:	6818      	ldr	r0, [r3, #0]
 8001fc8:	f004 fef8 	bl	8006dbc <BUTTON_SetSkin>
	

	_hButton_button5 = BUTTON_CreateAsChild(160, 60, 150, 50, _hWindow4, ID_BUTTON_4, WM_CF_SHOW | WM_CF_MEMDEV);
 8001fcc:	6833      	ldr	r3, [r6, #0]
 8001fce:	9300      	str	r3, [sp, #0]
 8001fd0:	f640 030f 	movw	r3, #2063	; 0x80f
 8001fd4:	2296      	movs	r2, #150	; 0x96
 8001fd6:	9301      	str	r3, [sp, #4]
 8001fd8:	9502      	str	r5, [sp, #8]
 8001fda:	2332      	movs	r3, #50	; 0x32
 8001fdc:	213c      	movs	r1, #60	; 0x3c
 8001fde:	20a0      	movs	r0, #160	; 0xa0
 8001fe0:	f004 ff31 	bl	8006e46 <BUTTON_CreateAsChild>
	BUTTON_SetFont(_hButton_button5, &GUI_Font8x16);
 8001fe4:	4641      	mov	r1, r8
	BUTTON_SetText(_hButton_button4, "Menu Vent");
	BUTTON_SetFocussable(_hButton_button4, 1);
	BUTTON_SetSkin(_hButton_button4, BUTTON_SKIN_FLEX);
	

	_hButton_button5 = BUTTON_CreateAsChild(160, 60, 150, 50, _hWindow4, ID_BUTTON_4, WM_CF_SHOW | WM_CF_MEMDEV);
 8001fe6:	f8cb 0000 	str.w	r0, [fp]
	BUTTON_SetFont(_hButton_button5, &GUI_Font8x16);
 8001fea:	f005 f86b 	bl	80070c4 <BUTTON_SetFont>
	BUTTON_SetText(_hButton_button5, "Touch Up");
 8001fee:	f8db 0000 	ldr.w	r0, [fp]
 8001ff2:	4962      	ldr	r1, [pc, #392]	; (800217c <Init_GUI_verventa+0x3a0>)
 8001ff4:	f005 f83e 	bl	8007074 <BUTTON_SetText>
	BUTTON_SetFocussable(_hButton_button5, 1);
 8001ff8:	f8db 0000 	ldr.w	r0, [fp]
 8001ffc:	2101      	movs	r1, #1
 8001ffe:	f005 f872 	bl	80070e6 <BUTTON_SetFocussable>
	BUTTON_SetSkin(_hButton_button5, BUTTON_SKIN_FLEX);
 8002002:	f8db 0000 	ldr.w	r0, [fp]
	

	_hButton_button6 = BUTTON_CreateAsChild(160, 120, 150, 50, _hWindow4, ID_BUTTON_5, WM_CF_SHOW | WM_CF_MEMDEV);
 8002006:	f8df b1b8 	ldr.w	fp, [pc, #440]	; 80021c0 <Init_GUI_verventa+0x3e4>

	_hButton_button5 = BUTTON_CreateAsChild(160, 60, 150, 50, _hWindow4, ID_BUTTON_4, WM_CF_SHOW | WM_CF_MEMDEV);
	BUTTON_SetFont(_hButton_button5, &GUI_Font8x16);
	BUTTON_SetText(_hButton_button5, "Touch Up");
	BUTTON_SetFocussable(_hButton_button5, 1);
	BUTTON_SetSkin(_hButton_button5, BUTTON_SKIN_FLEX);
 800200a:	4639      	mov	r1, r7
 800200c:	f004 fed6 	bl	8006dbc <BUTTON_SetSkin>
	

	_hButton_button6 = BUTTON_CreateAsChild(160, 120, 150, 50, _hWindow4, ID_BUTTON_5, WM_CF_SHOW | WM_CF_MEMDEV);
 8002010:	6833      	ldr	r3, [r6, #0]
 8002012:	9300      	str	r3, [sp, #0]
 8002014:	f44f 6301 	mov.w	r3, #2064	; 0x810
 8002018:	2296      	movs	r2, #150	; 0x96
 800201a:	9301      	str	r3, [sp, #4]
 800201c:	9502      	str	r5, [sp, #8]
 800201e:	2332      	movs	r3, #50	; 0x32
 8002020:	2178      	movs	r1, #120	; 0x78
 8002022:	20a0      	movs	r0, #160	; 0xa0
 8002024:	f004 ff0f 	bl	8006e46 <BUTTON_CreateAsChild>
	BUTTON_SetFont(_hButton_button6, &GUI_Font8x16);
 8002028:	4641      	mov	r1, r8
	BUTTON_SetText(_hButton_button5, "Touch Up");
	BUTTON_SetFocussable(_hButton_button5, 1);
	BUTTON_SetSkin(_hButton_button5, BUTTON_SKIN_FLEX);
	

	_hButton_button6 = BUTTON_CreateAsChild(160, 120, 150, 50, _hWindow4, ID_BUTTON_5, WM_CF_SHOW | WM_CF_MEMDEV);
 800202a:	f8cb 0000 	str.w	r0, [fp]
	BUTTON_SetFont(_hButton_button6, &GUI_Font8x16);
 800202e:	f005 f849 	bl	80070c4 <BUTTON_SetFont>
	BUTTON_SetText(_hButton_button6, "Touch Down");
 8002032:	f8db 0000 	ldr.w	r0, [fp]
 8002036:	4952      	ldr	r1, [pc, #328]	; (8002180 <Init_GUI_verventa+0x3a4>)
	BUTTON_SetFont(_hButton_button7, &GUI_Font24B_ASCII);
	BUTTON_SetText(_hButton_button7, "MAIN");
	BUTTON_SetFocussable(_hButton_button7, 1);
	

	_hButton_button8 = BUTTON_CreateAsChild(0, 110, 320, 50, _hWindow5, ID_BUTTON_7, WM_CF_SHOW | WM_CF_MEMDEV);
 8002038:	f8df 8188 	ldr.w	r8, [pc, #392]	; 80021c4 <Init_GUI_verventa+0x3e8>
	BUTTON_SetSkin(_hButton_button5, BUTTON_SKIN_FLEX);
	

	_hButton_button6 = BUTTON_CreateAsChild(160, 120, 150, 50, _hWindow4, ID_BUTTON_5, WM_CF_SHOW | WM_CF_MEMDEV);
	BUTTON_SetFont(_hButton_button6, &GUI_Font8x16);
	BUTTON_SetText(_hButton_button6, "Touch Down");
 800203c:	f005 f81a 	bl	8007074 <BUTTON_SetText>
	BUTTON_SetFocussable(_hButton_button6, 1);
 8002040:	f8db 0000 	ldr.w	r0, [fp]
 8002044:	2101      	movs	r1, #1
 8002046:	f005 f84e 	bl	80070e6 <BUTTON_SetFocussable>
	BUTTON_SetSkin(_hButton_button6, BUTTON_SKIN_FLEX);
 800204a:	f8db 0000 	ldr.w	r0, [fp]
	

	
	_hButton_button7 = BUTTON_CreateAsChild(0, 50, 320, 50, _hWindow5, ID_BUTTON_6, WM_CF_SHOW | WM_CF_MEMDEV);
 800204e:	f8df b178 	ldr.w	fp, [pc, #376]	; 80021c8 <Init_GUI_verventa+0x3ec>

	_hButton_button6 = BUTTON_CreateAsChild(160, 120, 150, 50, _hWindow4, ID_BUTTON_5, WM_CF_SHOW | WM_CF_MEMDEV);
	BUTTON_SetFont(_hButton_button6, &GUI_Font8x16);
	BUTTON_SetText(_hButton_button6, "Touch Down");
	BUTTON_SetFocussable(_hButton_button6, 1);
	BUTTON_SetSkin(_hButton_button6, BUTTON_SKIN_FLEX);
 8002052:	4639      	mov	r1, r7
 8002054:	f004 feb2 	bl	8006dbc <BUTTON_SetSkin>
	

	
	_hButton_button7 = BUTTON_CreateAsChild(0, 50, 320, 50, _hWindow5, ID_BUTTON_6, WM_CF_SHOW | WM_CF_MEMDEV);
 8002058:	f8da 3000 	ldr.w	r3, [sl]
 800205c:	9300      	str	r3, [sp, #0]
 800205e:	2132      	movs	r1, #50	; 0x32
 8002060:	f640 0311 	movw	r3, #2065	; 0x811
 8002064:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8002068:	9301      	str	r3, [sp, #4]
 800206a:	9502      	str	r5, [sp, #8]
 800206c:	460b      	mov	r3, r1
 800206e:	4620      	mov	r0, r4
 8002070:	f004 fee9 	bl	8006e46 <BUTTON_CreateAsChild>
	BUTTON_SetFont(_hButton_button7, &GUI_Font24B_ASCII);
 8002074:	4943      	ldr	r1, [pc, #268]	; (8002184 <Init_GUI_verventa+0x3a8>)
	BUTTON_SetFocussable(_hButton_button6, 1);
	BUTTON_SetSkin(_hButton_button6, BUTTON_SKIN_FLEX);
	

	
	_hButton_button7 = BUTTON_CreateAsChild(0, 50, 320, 50, _hWindow5, ID_BUTTON_6, WM_CF_SHOW | WM_CF_MEMDEV);
 8002076:	f8cb 0000 	str.w	r0, [fp]
	BUTTON_SetFont(_hButton_button7, &GUI_Font24B_ASCII);
 800207a:	f005 f823 	bl	80070c4 <BUTTON_SetFont>
	BUTTON_SetText(_hButton_button7, "MAIN");
 800207e:	f8db 0000 	ldr.w	r0, [fp]
 8002082:	4941      	ldr	r1, [pc, #260]	; (8002188 <Init_GUI_verventa+0x3ac>)
 8002084:	f004 fff6 	bl	8007074 <BUTTON_SetText>
	BUTTON_SetFocussable(_hButton_button7, 1);
 8002088:	f8db 0000 	ldr.w	r0, [fp]
 800208c:	2101      	movs	r1, #1
 800208e:	f005 f82a 	bl	80070e6 <BUTTON_SetFocussable>
	

	_hButton_button8 = BUTTON_CreateAsChild(0, 110, 320, 50, _hWindow5, ID_BUTTON_7, WM_CF_SHOW | WM_CF_MEMDEV);
 8002092:	f8da 3000 	ldr.w	r3, [sl]
 8002096:	9300      	str	r3, [sp, #0]
 8002098:	f640 0312 	movw	r3, #2066	; 0x812
 800209c:	f44f 72a0 	mov.w	r2, #320	; 0x140
 80020a0:	9301      	str	r3, [sp, #4]
 80020a2:	9502      	str	r5, [sp, #8]
 80020a4:	2332      	movs	r3, #50	; 0x32
 80020a6:	4620      	mov	r0, r4
 80020a8:	216e      	movs	r1, #110	; 0x6e
 80020aa:	f004 fecc 	bl	8006e46 <BUTTON_CreateAsChild>
	BUTTON_SetFont(_hButton_button8, &GUI_Font24B_ASCII);
 80020ae:	4935      	ldr	r1, [pc, #212]	; (8002184 <Init_GUI_verventa+0x3a8>)
	BUTTON_SetFont(_hButton_button7, &GUI_Font24B_ASCII);
	BUTTON_SetText(_hButton_button7, "MAIN");
	BUTTON_SetFocussable(_hButton_button7, 1);
	

	_hButton_button8 = BUTTON_CreateAsChild(0, 110, 320, 50, _hWindow5, ID_BUTTON_7, WM_CF_SHOW | WM_CF_MEMDEV);
 80020b0:	f8c8 0000 	str.w	r0, [r8]
	BUTTON_SetFont(_hButton_button8, &GUI_Font24B_ASCII);
 80020b4:	f005 f806 	bl	80070c4 <BUTTON_SetFont>
	BUTTON_SetText(_hButton_button8, "Load Temp");
 80020b8:	f8d8 0000 	ldr.w	r0, [r8]
 80020bc:	4933      	ldr	r1, [pc, #204]	; (800218c <Init_GUI_verventa+0x3b0>)
 80020be:	f004 ffd9 	bl	8007074 <BUTTON_SetText>
	BUTTON_SetFocussable(_hButton_button8, 1);
 80020c2:	f8d8 0000 	ldr.w	r0, [r8]
 80020c6:	2101      	movs	r1, #1
 80020c8:	f005 f80d 	bl	80070e6 <BUTTON_SetFocussable>
	BUTTON_SetSkin(_hButton_button8, BUTTON_SKIN_FLEX);
 80020cc:	f8d8 0000 	ldr.w	r0, [r8]
 80020d0:	4639      	mov	r1, r7
 80020d2:	f004 fe73 	bl	8006dbc <BUTTON_SetSkin>
	

	_hProgBar_1 = PROGBAR_CreateAsChild(20, 200, 200, 25, _hWindow5, ID_PROGBAR_1, WM_CF_SHOW | WM_CF_MEMDEV);
 80020d6:	f8da 3000 	ldr.w	r3, [sl]
 80020da:	9300      	str	r3, [sp, #0]
 80020dc:	21c8      	movs	r1, #200	; 0xc8
 80020de:	f640 0314 	movw	r3, #2068	; 0x814
 80020e2:	460a      	mov	r2, r1
 80020e4:	9301      	str	r3, [sp, #4]
 80020e6:	9502      	str	r5, [sp, #8]
 80020e8:	2319      	movs	r3, #25
 80020ea:	2014      	movs	r0, #20
 80020ec:	f003 f9b4 	bl	8005458 <PROGBAR_CreateAsChild>
 80020f0:	4b27      	ldr	r3, [pc, #156]	; (8002190 <Init_GUI_verventa+0x3b4>)
	//PROGBAR_SetMinMax(_hProgBar_1, -16383, 16383);
	//PROGBAR_SetText(_hProgBar_1, "Load in temp...");
	PROGBAR_SetSkin(_hProgBar_1, PROGBAR_SKIN_FLEX);
 80020f2:	4928      	ldr	r1, [pc, #160]	; (8002194 <Init_GUI_verventa+0x3b8>)
	BUTTON_SetText(_hButton_button8, "Load Temp");
	BUTTON_SetFocussable(_hButton_button8, 1);
	BUTTON_SetSkin(_hButton_button8, BUTTON_SKIN_FLEX);
	

	_hProgBar_1 = PROGBAR_CreateAsChild(20, 200, 200, 25, _hWindow5, ID_PROGBAR_1, WM_CF_SHOW | WM_CF_MEMDEV);
 80020f4:	6018      	str	r0, [r3, #0]
	//PROGBAR_SetMinMax(_hProgBar_1, -16383, 16383);
	//PROGBAR_SetText(_hProgBar_1, "Load in temp...");
	PROGBAR_SetSkin(_hProgBar_1, PROGBAR_SKIN_FLEX);
 80020f6:	f003 f99b 	bl	8005430 <PROGBAR_SetSkin>
	//PROGBAR_SetValue(_hProgBar_1, 50);
	
	_hButton_button9 = BUTTON_CreateAsChild(0, 50, 320, 50, _hWindow6, ID_BUTTON_8, WM_CF_SHOW | WM_CF_MEMDEV);
 80020fa:	f8dd c014 	ldr.w	ip, [sp, #20]
 80020fe:	4f26      	ldr	r7, [pc, #152]	; (8002198 <Init_GUI_verventa+0x3bc>)
 8002100:	f8dc 3000 	ldr.w	r3, [ip]
 8002104:	9300      	str	r3, [sp, #0]
 8002106:	2132      	movs	r1, #50	; 0x32
 8002108:	f640 0313 	movw	r3, #2067	; 0x813
 800210c:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8002110:	9301      	str	r3, [sp, #4]
 8002112:	9502      	str	r5, [sp, #8]
 8002114:	460b      	mov	r3, r1
 8002116:	4620      	mov	r0, r4
 8002118:	f004 fe95 	bl	8006e46 <BUTTON_CreateAsChild>
	BUTTON_SetFont(_hButton_button9, &GUI_Font24B_ASCII);
 800211c:	4919      	ldr	r1, [pc, #100]	; (8002184 <Init_GUI_verventa+0x3a8>)
	//PROGBAR_SetMinMax(_hProgBar_1, -16383, 16383);
	//PROGBAR_SetText(_hProgBar_1, "Load in temp...");
	PROGBAR_SetSkin(_hProgBar_1, PROGBAR_SKIN_FLEX);
	//PROGBAR_SetValue(_hProgBar_1, 50);
	
	_hButton_button9 = BUTTON_CreateAsChild(0, 50, 320, 50, _hWindow6, ID_BUTTON_8, WM_CF_SHOW | WM_CF_MEMDEV);
 800211e:	6038      	str	r0, [r7, #0]
	BUTTON_SetFont(_hButton_button9, &GUI_Font24B_ASCII);
 8002120:	f004 ffd0 	bl	80070c4 <BUTTON_SetFont>
	BUTTON_SetText(_hButton_button9, "MAIN");
 8002124:	6838      	ldr	r0, [r7, #0]
 8002126:	4918      	ldr	r1, [pc, #96]	; (8002188 <Init_GUI_verventa+0x3ac>)
 8002128:	f004 ffa4 	bl	8007074 <BUTTON_SetText>
	BUTTON_SetFocussable(_hButton_button9, 1);
 800212c:	6838      	ldr	r0, [r7, #0]
 800212e:	2101      	movs	r1, #1
 8002130:	f004 ffd9 	bl	80070e6 <BUTTON_SetFocussable>
	
	_hSlider_1 = SLIDER_CreateEx(20, 180, 150, 35, _hWindow4, WM_CF_SHOW | WM_CF_MEMDEV, 0, ID_SLIDER_1);
 8002134:	6833      	ldr	r3, [r6, #0]
 8002136:	9402      	str	r4, [sp, #8]
 8002138:	e88d 0028 	stmia.w	sp, {r3, r5}
 800213c:	f640 0315 	movw	r3, #2069	; 0x815
 8002140:	2296      	movs	r2, #150	; 0x96
 8002142:	9303      	str	r3, [sp, #12]
 8002144:	21b4      	movs	r1, #180	; 0xb4
 8002146:	2323      	movs	r3, #35	; 0x23
 8002148:	2014      	movs	r0, #20
 800214a:	e03f      	b.n	80021cc <Init_GUI_verventa+0x3f0>
 800214c:	08027c0c 	.word	0x08027c0c
 8002150:	2000d3ec 	.word	0x2000d3ec
 8002154:	2000e3e4 	.word	0x2000e3e4
 8002158:	08018b90 	.word	0x08018b90
 800215c:	08018bab 	.word	0x08018bab
 8002160:	08001d59 	.word	0x08001d59
 8002164:	08006ac5 	.word	0x08006ac5
 8002168:	08018bc0 	.word	0x08018bc0
 800216c:	08018bca 	.word	0x08018bca
 8002170:	08018bd4 	.word	0x08018bd4
 8002174:	2000d3d4 	.word	0x2000d3d4
 8002178:	08018be2 	.word	0x08018be2
 800217c:	08018bec 	.word	0x08018bec
 8002180:	08018bf5 	.word	0x08018bf5
 8002184:	08028d68 	.word	0x08028d68
 8002188:	08018c00 	.word	0x08018c00
 800218c:	08018c05 	.word	0x08018c05
 8002190:	2000d3e4 	.word	0x2000d3e4
 8002194:	08005169 	.word	0x08005169
 8002198:	2000d3e0 	.word	0x2000d3e0
 800219c:	08024b70 	.word	0x08024b70
 80021a0:	08001c55 	.word	0x08001c55
 80021a4:	08001ccd 	.word	0x08001ccd
 80021a8:	2000e3d0 	.word	0x2000e3d0
 80021ac:	2000e3e0 	.word	0x2000e3e0
 80021b0:	2000d3e8 	.word	0x2000d3e8
 80021b4:	2000d3a4 	.word	0x2000d3a4
 80021b8:	2000d3d0 	.word	0x2000d3d0
 80021bc:	2000d3f4 	.word	0x2000d3f4
 80021c0:	2000d3f8 	.word	0x2000d3f8
 80021c4:	2000d3dc 	.word	0x2000d3dc
 80021c8:	2000d3d8 	.word	0x2000d3d8
 80021cc:	f002 fc8a 	bl	8004ae4 <SLIDER_CreateEx>
	
	GUI_Exec();
	

	
	cbButton0 = WM_SetCallback(_hButton_button1, _cbButton);
 80021d0:	4c17      	ldr	r4, [pc, #92]	; (8002230 <Init_GUI_verventa+0x454>)
	_hButton_button9 = BUTTON_CreateAsChild(0, 50, 320, 50, _hWindow6, ID_BUTTON_8, WM_CF_SHOW | WM_CF_MEMDEV);
	BUTTON_SetFont(_hButton_button9, &GUI_Font24B_ASCII);
	BUTTON_SetText(_hButton_button9, "MAIN");
	BUTTON_SetFocussable(_hButton_button9, 1);
	
	_hSlider_1 = SLIDER_CreateEx(20, 180, 150, 35, _hWindow4, WM_CF_SHOW | WM_CF_MEMDEV, 0, ID_SLIDER_1);
 80021d2:	4b18      	ldr	r3, [pc, #96]	; (8002234 <Init_GUI_verventa+0x458>)
 80021d4:	6018      	str	r0, [r3, #0]
	
	GUI_Exec();
 80021d6:	f00a fae9 	bl	800c7ac <GUI_Exec>
	

	
	cbButton0 = WM_SetCallback(_hButton_button1, _cbButton);
 80021da:	4621      	mov	r1, r4
 80021dc:	f8d9 0000 	ldr.w	r0, [r9]
 80021e0:	f005 f9c4 	bl	800756c <WM_SetCallback>
 80021e4:	4b14      	ldr	r3, [pc, #80]	; (8002238 <Init_GUI_verventa+0x45c>)
 80021e6:	6018      	str	r0, [r3, #0]
	cbButton3 = WM_SetCallback(_hButton_button4, _cbButton);
 80021e8:	4b14      	ldr	r3, [pc, #80]	; (800223c <Init_GUI_verventa+0x460>)
 80021ea:	4621      	mov	r1, r4
 80021ec:	6818      	ldr	r0, [r3, #0]
 80021ee:	f005 f9bd 	bl	800756c <WM_SetCallback>
 80021f2:	4b13      	ldr	r3, [pc, #76]	; (8002240 <Init_GUI_verventa+0x464>)
	cbButton1 = WM_SetCallback(_hButton_button7, _cbButton);
 80021f4:	4621      	mov	r1, r4
	GUI_Exec();
	

	
	cbButton0 = WM_SetCallback(_hButton_button1, _cbButton);
	cbButton3 = WM_SetCallback(_hButton_button4, _cbButton);
 80021f6:	6018      	str	r0, [r3, #0]
	cbButton1 = WM_SetCallback(_hButton_button7, _cbButton);
 80021f8:	f8db 0000 	ldr.w	r0, [fp]
 80021fc:	f005 f9b6 	bl	800756c <WM_SetCallback>
 8002200:	4b10      	ldr	r3, [pc, #64]	; (8002244 <Init_GUI_verventa+0x468>)
	cbButton2 = WM_SetCallback(_hButton_button8, _cbButton);
 8002202:	4621      	mov	r1, r4
	

	
	cbButton0 = WM_SetCallback(_hButton_button1, _cbButton);
	cbButton3 = WM_SetCallback(_hButton_button4, _cbButton);
	cbButton1 = WM_SetCallback(_hButton_button7, _cbButton);
 8002204:	6018      	str	r0, [r3, #0]
	cbButton2 = WM_SetCallback(_hButton_button8, _cbButton);
 8002206:	f8d8 0000 	ldr.w	r0, [r8]
 800220a:	f005 f9af 	bl	800756c <WM_SetCallback>
 800220e:	4b0e      	ldr	r3, [pc, #56]	; (8002248 <Init_GUI_verventa+0x46c>)
	cbButton4 = WM_SetCallback(_hButton_button9, _cbButton);
 8002210:	4621      	mov	r1, r4

	
	cbButton0 = WM_SetCallback(_hButton_button1, _cbButton);
	cbButton3 = WM_SetCallback(_hButton_button4, _cbButton);
	cbButton1 = WM_SetCallback(_hButton_button7, _cbButton);
	cbButton2 = WM_SetCallback(_hButton_button8, _cbButton);
 8002212:	6018      	str	r0, [r3, #0]
	cbButton4 = WM_SetCallback(_hButton_button9, _cbButton);
 8002214:	6838      	ldr	r0, [r7, #0]
 8002216:	f005 f9a9 	bl	800756c <WM_SetCallback>
 800221a:	4b0c      	ldr	r3, [pc, #48]	; (800224c <Init_GUI_verventa+0x470>)
 800221c:	6018      	str	r0, [r3, #0]
*/
ErrorStatus Init_GUI_verventa(void){
	_SetDesktopColor();
	_CreateWindow();
	_CreateWindowAsChild();
	hWinThermostat = CreateThermostat();
 800221e:	f7ff fce3 	bl	8001be8 <CreateThermostat>
 8002222:	4b0b      	ldr	r3, [pc, #44]	; (8002250 <Init_GUI_verventa+0x474>)
 8002224:	6018      	str	r0, [r3, #0]
	
	return(SUCCESS);
 8002226:	2001      	movs	r0, #1
 8002228:	b007      	add	sp, #28
 800222a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800222e:	bf00      	nop
 8002230:	08001c51 	.word	0x08001c51
 8002234:	2000d3a0 	.word	0x2000d3a0
 8002238:	2000e3dc 	.word	0x2000e3dc
 800223c:	2000d3d4 	.word	0x2000d3d4
 8002240:	2000e3e8 	.word	0x2000e3e8
 8002244:	2000e3d8 	.word	0x2000e3d8
 8002248:	2000e3ec 	.word	0x2000e3ec
 800224c:	2000e3d4 	.word	0x2000e3d4
 8002250:	2000e3c4 	.word	0x2000e3c4

08002254 <UB_STemWIN_init>:
/**
  * @brief  This function Init STemWin Display Touchpanel.
  * @param  None
  * @retval ErrorStatus
  */
ErrorStatus UB_STemWIN_init(void){
 8002254:	b508      	push	{r3, lr}
  int16_t error_stat;
  uint8_t threshhold = 0;
  RCC_ClocksTypeDef RCC_Clocks;

  RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_CRC, ENABLE); // Don't forget!!
 8002256:	2101      	movs	r1, #1
 8002258:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800225c:	f000 f8a4 	bl	80023a8 <RCC_AHB1PeriphClockCmd>
  
  /*	Display Init	*/
  init_ili9341();
 8002260:	f001 fe70 	bl	8003f44 <init_ili9341>
  HAL_Delay(2);
 8002264:	2002      	movs	r0, #2
 8002266:	f001 fe07 	bl	8003e78 <HAL_Delay>

  /*	Touch Init	*/
  FT6206_begin(threshhold);
 800226a:	2000      	movs	r0, #0
 800226c:	f001 ff8c 	bl	8004188 <FT6206_begin>
  HAL_Delay(5);
 8002270:	2005      	movs	r0, #5
 8002272:	f001 fe01 	bl	8003e78 <HAL_Delay>

  /*	STemWin-GUI Init	*/
  if(GUI_Init()!=0) {
 8002276:	f00b f88d 	bl	800d394 <GUI_Init>
    return(ERROR);
  }
  
  return(SUCCESS);
}
 800227a:	fab0 f080 	clz	r0, r0
 800227e:	0940      	lsrs	r0, r0, #5
 8002280:	bd08      	pop	{r3, pc}
	...

08002284 <UB_STemWIN_updateTouch>:
/**
  * @brief  This function updates Touch every 3ms.
  * @param  None
  * @retval None
  */
void UB_STemWIN_updateTouch(void){
 8002284:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  GUI_PID_STATE TS_State;
  static uint8_t prev_state = 0;
  uint32_t TS_Orientation = 1;  // LandScape Mode
  
  /*	Call Touches	*/
  FT6206_read_data();
 8002286:	f001 ffcf 	bl	8004228 <FT6206_read_data>
    if(TS_Orientation == 0){
		TS_State.x = FT6206.touch_01_xpos;
		TS_State.y = FT6206.touch_01_ypos;
	}
	else{
		TS_State.y = 240 - FT6206.touch_01_xpos;
 800228a:	4b0e      	ldr	r3, [pc, #56]	; (80022c4 <UB_STemWIN_updateTouch+0x40>)
 800228c:	889a      	ldrh	r2, [r3, #4]
 800228e:	f1c2 02f0 	rsb	r2, r2, #240	; 0xf0
 8002292:	9202      	str	r2, [sp, #8]
		TS_State.x = FT6206.touch_01_ypos;
 8002294:	891a      	ldrh	r2, [r3, #8]
	}
	
	if((FT6206.touch_points) != 0){
 8002296:	785b      	ldrb	r3, [r3, #1]
		TS_State.x = FT6206.touch_01_xpos;
		TS_State.y = FT6206.touch_01_ypos;
	}
	else{
		TS_State.y = 240 - FT6206.touch_01_xpos;
		TS_State.x = FT6206.touch_01_ypos;
 8002298:	9201      	str	r2, [sp, #4]
	}
	
	if((FT6206.touch_points) != 0){
 800229a:	b103      	cbz	r3, 800229e <UB_STemWIN_updateTouch+0x1a>
		TS_State.Pressed = 1;
 800229c:	2301      	movs	r3, #1
	}
	else{
		TS_State.Pressed = 0;
 800229e:	f88d 300c 	strb.w	r3, [sp, #12]
	}

	if(prev_state != TS_State.Pressed ){
 80022a2:	4b09      	ldr	r3, [pc, #36]	; (80022c8 <UB_STemWIN_updateTouch+0x44>)
 80022a4:	f89d 200c 	ldrb.w	r2, [sp, #12]
 80022a8:	7819      	ldrb	r1, [r3, #0]
 80022aa:	4291      	cmp	r1, r2
 80022ac:	d006      	beq.n	80022bc <UB_STemWIN_updateTouch+0x38>
		prev_state = TS_State.Pressed;
 80022ae:	701a      	strb	r2, [r3, #0]
		TS_State.Layer = 0;
		GUI_TOUCH_StoreStateEx(&TS_State);
 80022b0:	a801      	add	r0, sp, #4
		TS_State.Pressed = 0;
	}

	if(prev_state != TS_State.Pressed ){
		prev_state = TS_State.Pressed;
		TS_State.Layer = 0;
 80022b2:	2300      	movs	r3, #0
 80022b4:	f88d 300d 	strb.w	r3, [sp, #13]
		GUI_TOUCH_StoreStateEx(&TS_State);
 80022b8:	f00a f82e 	bl	800c318 <GUI_TOUCH_StoreStateEx>
	}
	
}
 80022bc:	b005      	add	sp, #20
 80022be:	f85d fb04 	ldr.w	pc, [sp], #4
 80022c2:	bf00      	nop
 80022c4:	2000e5e2 	.word	0x2000e5e2
 80022c8:	2000d3fc 	.word	0x2000d3fc

080022cc <LcdWriteReg>:
*
* Function description:
*   Sets display register
*/
static void LcdWriteReg(U16 Data) {
  LCD_REG_ADDRESS = Data;
 80022cc:	f04f 43c0 	mov.w	r3, #1610612736	; 0x60000000
 80022d0:	8018      	strh	r0, [r3, #0]
 80022d2:	4770      	bx	lr

080022d4 <LcdWriteData>:
*
* Function description:
*   Writes a value to a display register
*/
static void LcdWriteData(U16 Data) {
  LCD_DATA_ADDRESS = Data;
 80022d4:	4b01      	ldr	r3, [pc, #4]	; (80022dc <LcdWriteData+0x8>)
 80022d6:	8018      	strh	r0, [r3, #0]
 80022d8:	4770      	bx	lr
 80022da:	bf00      	nop
 80022dc:	60020000 	.word	0x60020000

080022e0 <LcdWriteDataMultiple>:
*       LcdWriteDataMultiple
*
* Function description:
*   Writes multiple values to a display register.
*/
static void LcdWriteDataMultiple(U16 * pData, int NumItems) {
 80022e0:	eb00 0141 	add.w	r1, r0, r1, lsl #1
  while (NumItems--) {
 80022e4:	4288      	cmp	r0, r1
 80022e6:	d004      	beq.n	80022f2 <LcdWriteDataMultiple+0x12>
    LCD_DATA_ADDRESS = *pData++;
 80022e8:	4b02      	ldr	r3, [pc, #8]	; (80022f4 <LcdWriteDataMultiple+0x14>)
 80022ea:	f830 2b02 	ldrh.w	r2, [r0], #2
 80022ee:	801a      	strh	r2, [r3, #0]
 80022f0:	e7f8      	b.n	80022e4 <LcdWriteDataMultiple+0x4>
  }
}
 80022f2:	4770      	bx	lr
 80022f4:	60020000 	.word	0x60020000

080022f8 <LcdReadDataMultiple>:
*       LcdReadDataMultiple
*
* Function description:
*   Reads multiple values from a display register.
*/
static void LcdReadDataMultiple(U16 * pData, int NumItems) {
 80022f8:	eb00 0141 	add.w	r1, r0, r1, lsl #1
  while (NumItems--) {
 80022fc:	4288      	cmp	r0, r1
 80022fe:	d004      	beq.n	800230a <LcdReadDataMultiple+0x12>
    *pData++ = LCD_DATA_ADDRESS;
 8002300:	4b02      	ldr	r3, [pc, #8]	; (800230c <LcdReadDataMultiple+0x14>)
 8002302:	881b      	ldrh	r3, [r3, #0]
 8002304:	f820 3b02 	strh.w	r3, [r0], #2
 8002308:	e7f8      	b.n	80022fc <LcdReadDataMultiple+0x4>
  }
}
 800230a:	4770      	bx	lr
 800230c:	60020000 	.word	0x60020000

08002310 <LCD_X_Config>:
*   Called during the initialization process in order to set up the
*   display driver configuration.
*
*/

void LCD_X_Config(void) {
 8002310:	b510      	push	{r4, lr}
 8002312:	b0a0      	sub	sp, #128	; 0x80
  GUI_DEVICE * pDevice;
  CONFIG_FLEXCOLOR Config = {0};
 8002314:	a801      	add	r0, sp, #4
 8002316:	2100      	movs	r1, #0
 8002318:	2214      	movs	r2, #20
 800231a:	f010 fcbb 	bl	8012c94 <memset>
  GUI_PORT_API PortAPI = {0};
 800231e:	a806      	add	r0, sp, #24
 8002320:	2100      	movs	r1, #0
 8002322:	2268      	movs	r2, #104	; 0x68
 8002324:	f010 fcb6 	bl	8012c94 <memset>
  //
  // Set display driver and color conversion
  //
  pDevice = GUI_DEVICE_CreateAndLink(GUIDRV_FLEXCOLOR, GUICC_565, 0, 0);
 8002328:	2200      	movs	r2, #0
 800232a:	4613      	mov	r3, r2
 800232c:	4913      	ldr	r1, [pc, #76]	; (800237c <LCD_X_Config+0x6c>)
 800232e:	4814      	ldr	r0, [pc, #80]	; (8002380 <LCD_X_Config+0x70>)
 8002330:	f00a ff54 	bl	800d1dc <GUI_DEVICE_CreateAndLink>
  //
  // Display driver configuration, required for Lin-driver
  //
  LCD_SetSizeEx (0, XSIZE_PHYS , YSIZE_PHYS);
 8002334:	21f0      	movs	r1, #240	; 0xf0
  CONFIG_FLEXCOLOR Config = {0};
  GUI_PORT_API PortAPI = {0};
  //
  // Set display driver and color conversion
  //
  pDevice = GUI_DEVICE_CreateAndLink(GUIDRV_FLEXCOLOR, GUICC_565, 0, 0);
 8002336:	4604      	mov	r4, r0
  //
  // Display driver configuration, required for Lin-driver
  //
  LCD_SetSizeEx (0, XSIZE_PHYS , YSIZE_PHYS);
 8002338:	f44f 72a0 	mov.w	r2, #320	; 0x140
 800233c:	2000      	movs	r0, #0
 800233e:	f008 fdd8 	bl	800aef2 <LCD_SetSizeEx>
  LCD_SetVSizeEx(0, VXSIZE_PHYS, VYSIZE_PHYS);
 8002342:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8002346:	21f0      	movs	r1, #240	; 0xf0
 8002348:	2000      	movs	r0, #0
 800234a:	f008 fdbb 	bl	800aec4 <LCD_SetVSizeEx>

  //
  // Orientation
  //
  Config.Orientation = GUI_SWAP_XY | GUI_MIRROR_Y; // Landscape
 800234e:	2306      	movs	r3, #6

  GUIDRV_FlexColor_Config(pDevice, &Config);
 8002350:	4620      	mov	r0, r4
 8002352:	a901      	add	r1, sp, #4
  LCD_SetVSizeEx(0, VXSIZE_PHYS, VYSIZE_PHYS);

  //
  // Orientation
  //
  Config.Orientation = GUI_SWAP_XY | GUI_MIRROR_Y; // Landscape
 8002354:	9303      	str	r3, [sp, #12]

  GUIDRV_FlexColor_Config(pDevice, &Config);
 8002356:	f008 fd54 	bl	800ae02 <GUIDRV_FlexColor_Config>
  //
  // Set controller and operation mode
  //
  PortAPI.pfWrite16_A0  = LcdWriteReg;
 800235a:	4b0a      	ldr	r3, [pc, #40]	; (8002384 <LCD_X_Config+0x74>)
 800235c:	930e      	str	r3, [sp, #56]	; 0x38
  PortAPI.pfWrite16_A1  = LcdWriteData;
 800235e:	4b0a      	ldr	r3, [pc, #40]	; (8002388 <LCD_X_Config+0x78>)
 8002360:	930f      	str	r3, [sp, #60]	; 0x3c
  PortAPI.pfWriteM16_A1 = LcdWriteDataMultiple;
 8002362:	4b0a      	ldr	r3, [pc, #40]	; (800238c <LCD_X_Config+0x7c>)
 8002364:	9311      	str	r3, [sp, #68]	; 0x44
  PortAPI.pfReadM16_A1  = LcdReadDataMultiple;
 8002366:	4b0a      	ldr	r3, [pc, #40]	; (8002390 <LCD_X_Config+0x80>)
 8002368:	9315      	str	r3, [sp, #84]	; 0x54
  GUIDRV_FlexColor_SetFunc(pDevice, &PortAPI, GUIDRV_FLEXCOLOR_F66709, GUIDRV_FLEXCOLOR_M16C0B16);
 800236a:	4620      	mov	r0, r4
 800236c:	a906      	add	r1, sp, #24
 800236e:	4a09      	ldr	r2, [pc, #36]	; (8002394 <LCD_X_Config+0x84>)
 8002370:	4b09      	ldr	r3, [pc, #36]	; (8002398 <LCD_X_Config+0x88>)
 8002372:	f008 fd64 	bl	800ae3e <GUIDRV_FlexColor_SetFunc>
}
 8002376:	b020      	add	sp, #128	; 0x80
 8002378:	bd10      	pop	{r4, pc}
 800237a:	bf00      	nop
 800237c:	0802c3d0 	.word	0x0802c3d0
 8002380:	0802c260 	.word	0x0802c260
 8002384:	080022cd 	.word	0x080022cd
 8002388:	080022d5 	.word	0x080022d5
 800238c:	080022e1 	.word	0x080022e1
 8002390:	080022f9 	.word	0x080022f9
 8002394:	0800a169 	.word	0x0800a169
 8002398:	0800a805 	.word	0x0800a805

0800239c <LCD_X_DisplayDriver>:
int LCD_X_DisplayDriver(unsigned LayerIndex, unsigned Cmd, void * pData) {
  int r;
  (void) LayerIndex;
  (void) pData;

  switch (Cmd) {
 800239c:	2901      	cmp	r1, #1
  }
  default:
    r = -1;
  }
  return r;
}
 800239e:	bf14      	ite	ne
 80023a0:	f04f 30ff 	movne.w	r0, #4294967295
 80023a4:	2000      	moveq	r0, #0
 80023a6:	4770      	bx	lr

080023a8 <RCC_AHB1PeriphClockCmd>:
  * @retval None
  */
void RCC_AHB1PeriphClockCmd(uint32_t RCC_AHB1Periph, FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_RCC_AHB1_CLOCK_PERIPH(RCC_AHB1Periph));
 80023a8:	4b0e      	ldr	r3, [pc, #56]	; (80023e4 <RCC_AHB1PeriphClockCmd+0x3c>)
 80023aa:	4003      	ands	r3, r0
  * @param  NewState: new state of the specified peripheral clock.
  *          This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_AHB1PeriphClockCmd(uint32_t RCC_AHB1Periph, FunctionalState NewState)
{
 80023ac:	b570      	push	{r4, r5, r6, lr}
 80023ae:	4605      	mov	r5, r0
 80023b0:	460e      	mov	r6, r1
  /* Check the parameters */
  assert_param(IS_RCC_AHB1_CLOCK_PERIPH(RCC_AHB1Periph));
 80023b2:	b903      	cbnz	r3, 80023b6 <RCC_AHB1PeriphClockCmd+0xe>
 80023b4:	b920      	cbnz	r0, 80023c0 <RCC_AHB1PeriphClockCmd+0x18>
 80023b6:	480c      	ldr	r0, [pc, #48]	; (80023e8 <RCC_AHB1PeriphClockCmd+0x40>)
 80023b8:	f44f 6188 	mov.w	r1, #1088	; 0x440
 80023bc:	f7ff f89e 	bl	80014fc <assert_failed>

  assert_param(IS_FUNCTIONAL_STATE(NewState));
 80023c0:	2e01      	cmp	r6, #1
 80023c2:	4c0a      	ldr	r4, [pc, #40]	; (80023ec <RCC_AHB1PeriphClockCmd+0x44>)
 80023c4:	d905      	bls.n	80023d2 <RCC_AHB1PeriphClockCmd+0x2a>
 80023c6:	4808      	ldr	r0, [pc, #32]	; (80023e8 <RCC_AHB1PeriphClockCmd+0x40>)
 80023c8:	f240 4142 	movw	r1, #1090	; 0x442
 80023cc:	f7ff f896 	bl	80014fc <assert_failed>
 80023d0:	e000      	b.n	80023d4 <RCC_AHB1PeriphClockCmd+0x2c>
  if (NewState != DISABLE)
 80023d2:	b116      	cbz	r6, 80023da <RCC_AHB1PeriphClockCmd+0x32>
  {
    RCC->AHB1ENR |= RCC_AHB1Periph;
 80023d4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80023d6:	431d      	orrs	r5, r3
 80023d8:	e002      	b.n	80023e0 <RCC_AHB1PeriphClockCmd+0x38>
  }
  else
  {
    RCC->AHB1ENR &= ~RCC_AHB1Periph;
 80023da:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80023dc:	ea23 0505 	bic.w	r5, r3, r5
 80023e0:	6325      	str	r5, [r4, #48]	; 0x30
 80023e2:	bd70      	pop	{r4, r5, r6, pc}
 80023e4:	818bee00 	.word	0x818bee00
 80023e8:	08021470 	.word	0x08021470
 80023ec:	40023800 	.word	0x40023800

080023f0 <GUI_X_Config>:
*   Called during the initialization process in order to set up the
*   available memory for the GUI.
*/
void GUI_X_Config(void)
{
  GUI_ALLOC_AssignMemory(extMem, GUI_NUMBYTES);
 80023f0:	4802      	ldr	r0, [pc, #8]	; (80023fc <GUI_X_Config+0xc>)
 80023f2:	f44f 4148 	mov.w	r1, #51200	; 0xc800
 80023f6:	f00b bbc7 	b.w	800db88 <GUI_ALLOC_AssignMemory>
 80023fa:	bf00      	nop
 80023fc:	20000b7c 	.word	0x20000b7c

08002400 <GUI_X_Init>:
*     GUI_X_Init() is called from GUI_Init is a possibility to init
*     some hardware which needs to be up and running before the GUI.
*     If not required, leave this routine blank.
*/

void GUI_X_Init(void) {}
 8002400:	4770      	bx	lr
	...

08002404 <HAL_RCC_OscConfig>:
  *         contains the configuration information for the RCC Oscillators.
  * @note   The PLL is not disabled when used as system clock.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8002404:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  uint32_t tickstart = 0;  
 
  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 8002406:	6803      	ldr	r3, [r0, #0]
 8002408:	2b0f      	cmp	r3, #15
  *         contains the configuration information for the RCC Oscillators.
  * @note   The PLL is not disabled when used as system clock.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800240a:	4604      	mov	r4, r0
  uint32_t tickstart = 0;  
 
  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 800240c:	d904      	bls.n	8002418 <HAL_RCC_OscConfig+0x14>
 800240e:	48a2      	ldr	r0, [pc, #648]	; (8002698 <HAL_RCC_OscConfig+0x294>)
 8002410:	f240 1115 	movw	r1, #277	; 0x115
 8002414:	f7ff f872 	bl	80014fc <assert_failed>
  /*------------------------------- HSE Configuration ------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8002418:	6823      	ldr	r3, [r4, #0]
 800241a:	07d8      	lsls	r0, r3, #31
 800241c:	d403      	bmi.n	8002426 <HAL_RCC_OscConfig+0x22>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800241e:	6823      	ldr	r3, [r4, #0]
 8002420:	0799      	lsls	r1, r3, #30
 8002422:	d456      	bmi.n	80024d2 <HAL_RCC_OscConfig+0xce>
 8002424:	e0b7      	b.n	8002596 <HAL_RCC_OscConfig+0x192>
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 8002426:	6863      	ldr	r3, [r4, #4]
 8002428:	2b01      	cmp	r3, #1
 800242a:	d906      	bls.n	800243a <HAL_RCC_OscConfig+0x36>
 800242c:	2b05      	cmp	r3, #5
 800242e:	d004      	beq.n	800243a <HAL_RCC_OscConfig+0x36>
 8002430:	4899      	ldr	r0, [pc, #612]	; (8002698 <HAL_RCC_OscConfig+0x294>)
 8002432:	f44f 718d 	mov.w	r1, #282	; 0x11a
 8002436:	f7ff f861 	bl	80014fc <assert_failed>
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800243a:	4b98      	ldr	r3, [pc, #608]	; (800269c <HAL_RCC_OscConfig+0x298>)
 800243c:	689a      	ldr	r2, [r3, #8]
 800243e:	f002 020c 	and.w	r2, r2, #12
 8002442:	2a04      	cmp	r2, #4
 8002444:	d007      	beq.n	8002456 <HAL_RCC_OscConfig+0x52>
 8002446:	689a      	ldr	r2, [r3, #8]
 8002448:	f002 020c 	and.w	r2, r2, #12
 800244c:	2a08      	cmp	r2, #8
 800244e:	d10b      	bne.n	8002468 <HAL_RCC_OscConfig+0x64>
 8002450:	685b      	ldr	r3, [r3, #4]
 8002452:	025a      	lsls	r2, r3, #9
 8002454:	d508      	bpl.n	8002468 <HAL_RCC_OscConfig+0x64>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8002456:	4b91      	ldr	r3, [pc, #580]	; (800269c <HAL_RCC_OscConfig+0x298>)
 8002458:	681b      	ldr	r3, [r3, #0]
 800245a:	039b      	lsls	r3, r3, #14
 800245c:	d5df      	bpl.n	800241e <HAL_RCC_OscConfig+0x1a>
 800245e:	6863      	ldr	r3, [r4, #4]
 8002460:	2b00      	cmp	r3, #0
 8002462:	d1dc      	bne.n	800241e <HAL_RCC_OscConfig+0x1a>
      {
        return HAL_ERROR;
 8002464:	2001      	movs	r0, #1
 8002466:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      }
    }
    else
    {
      /* Reset HSEON and HSEBYP bits before configuring the HSE --------------*/
      __HAL_RCC_HSE_CONFIG(RCC_HSE_OFF);
 8002468:	4d8d      	ldr	r5, [pc, #564]	; (80026a0 <HAL_RCC_OscConfig+0x29c>)
 800246a:	2300      	movs	r3, #0
 800246c:	702b      	strb	r3, [r5, #0]
      
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800246e:	f001 fcfd 	bl	8003e6c <HAL_GetTick>
 8002472:	4606      	mov	r6, r0
      
      /* Wait till HSE is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8002474:	4b89      	ldr	r3, [pc, #548]	; (800269c <HAL_RCC_OscConfig+0x298>)
 8002476:	681b      	ldr	r3, [r3, #0]
 8002478:	039f      	lsls	r7, r3, #14
 800247a:	d508      	bpl.n	800248e <HAL_RCC_OscConfig+0x8a>
      {
        if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800247c:	f001 fcf6 	bl	8003e6c <HAL_GetTick>
 8002480:	f241 3388 	movw	r3, #5000	; 0x1388
 8002484:	1b80      	subs	r0, r0, r6
 8002486:	4298      	cmp	r0, r3
 8002488:	d9f4      	bls.n	8002474 <HAL_RCC_OscConfig+0x70>
        {
          return HAL_TIMEOUT;
 800248a:	2003      	movs	r0, #3
 800248c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        }       
      }
      
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800248e:	7923      	ldrb	r3, [r4, #4]
 8002490:	702b      	strb	r3, [r5, #0]
      
      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8002492:	6863      	ldr	r3, [r4, #4]
 8002494:	b173      	cbz	r3, 80024b4 <HAL_RCC_OscConfig+0xb0>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002496:	f001 fce9 	bl	8003e6c <HAL_GetTick>
 800249a:	4605      	mov	r5, r0
      
        /* Wait till HSE is ready */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800249c:	4b7f      	ldr	r3, [pc, #508]	; (800269c <HAL_RCC_OscConfig+0x298>)
 800249e:	681b      	ldr	r3, [r3, #0]
 80024a0:	0398      	lsls	r0, r3, #14
 80024a2:	d4bc      	bmi.n	800241e <HAL_RCC_OscConfig+0x1a>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80024a4:	f001 fce2 	bl	8003e6c <HAL_GetTick>
 80024a8:	f241 3388 	movw	r3, #5000	; 0x1388
 80024ac:	1b40      	subs	r0, r0, r5
 80024ae:	4298      	cmp	r0, r3
 80024b0:	d9f4      	bls.n	800249c <HAL_RCC_OscConfig+0x98>
 80024b2:	e7ea      	b.n	800248a <HAL_RCC_OscConfig+0x86>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80024b4:	f001 fcda 	bl	8003e6c <HAL_GetTick>
 80024b8:	4605      	mov	r5, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80024ba:	4b78      	ldr	r3, [pc, #480]	; (800269c <HAL_RCC_OscConfig+0x298>)
 80024bc:	681b      	ldr	r3, [r3, #0]
 80024be:	0399      	lsls	r1, r3, #14
 80024c0:	d5ad      	bpl.n	800241e <HAL_RCC_OscConfig+0x1a>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80024c2:	f001 fcd3 	bl	8003e6c <HAL_GetTick>
 80024c6:	f241 3388 	movw	r3, #5000	; 0x1388
 80024ca:	1b40      	subs	r0, r0, r5
 80024cc:	4298      	cmp	r0, r3
 80024ce:	d9f4      	bls.n	80024ba <HAL_RCC_OscConfig+0xb6>
 80024d0:	e7db      	b.n	800248a <HAL_RCC_OscConfig+0x86>
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 80024d2:	68e3      	ldr	r3, [r4, #12]
 80024d4:	2b01      	cmp	r3, #1
 80024d6:	d904      	bls.n	80024e2 <HAL_RCC_OscConfig+0xde>
 80024d8:	486f      	ldr	r0, [pc, #444]	; (8002698 <HAL_RCC_OscConfig+0x294>)
 80024da:	f44f 71ad 	mov.w	r1, #346	; 0x15a
 80024de:	f7ff f80d 	bl	80014fc <assert_failed>
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 80024e2:	6923      	ldr	r3, [r4, #16]
 80024e4:	2b1f      	cmp	r3, #31
 80024e6:	d904      	bls.n	80024f2 <HAL_RCC_OscConfig+0xee>
 80024e8:	486b      	ldr	r0, [pc, #428]	; (8002698 <HAL_RCC_OscConfig+0x294>)
 80024ea:	f240 115b 	movw	r1, #347	; 0x15b
 80024ee:	f7ff f805 	bl	80014fc <assert_failed>
    
    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */ 
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80024f2:	4b6a      	ldr	r3, [pc, #424]	; (800269c <HAL_RCC_OscConfig+0x298>)
 80024f4:	689a      	ldr	r2, [r3, #8]
 80024f6:	f012 0f0c 	tst.w	r2, #12
 80024fa:	d007      	beq.n	800250c <HAL_RCC_OscConfig+0x108>
 80024fc:	689a      	ldr	r2, [r3, #8]
 80024fe:	f002 020c 	and.w	r2, r2, #12
 8002502:	2a08      	cmp	r2, #8
 8002504:	d118      	bne.n	8002538 <HAL_RCC_OscConfig+0x134>
 8002506:	685b      	ldr	r3, [r3, #4]
 8002508:	025a      	lsls	r2, r3, #9
 800250a:	d415      	bmi.n	8002538 <HAL_RCC_OscConfig+0x134>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800250c:	4a63      	ldr	r2, [pc, #396]	; (800269c <HAL_RCC_OscConfig+0x298>)
 800250e:	6813      	ldr	r3, [r2, #0]
 8002510:	079b      	lsls	r3, r3, #30
 8002512:	d502      	bpl.n	800251a <HAL_RCC_OscConfig+0x116>
 8002514:	68e3      	ldr	r3, [r4, #12]
 8002516:	2b01      	cmp	r3, #1
 8002518:	d1a4      	bne.n	8002464 <HAL_RCC_OscConfig+0x60>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800251a:	6811      	ldr	r1, [r2, #0]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
{
  uint32_t result;

   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800251c:	23f8      	movs	r3, #248	; 0xf8
 800251e:	fa93 f3a3 	rbit	r3, r3
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 8002522:	fab3 f383 	clz	r3, r3
 8002526:	6920      	ldr	r0, [r4, #16]
 8002528:	b2db      	uxtb	r3, r3
 800252a:	4098      	lsls	r0, r3
 800252c:	f021 01f8 	bic.w	r1, r1, #248	; 0xf8
 8002530:	ea40 0301 	orr.w	r3, r0, r1
 8002534:	6013      	str	r3, [r2, #0]
    
    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */ 
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8002536:	e02e      	b.n	8002596 <HAL_RCC_OscConfig+0x192>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8002538:	68e2      	ldr	r2, [r4, #12]
 800253a:	4b5a      	ldr	r3, [pc, #360]	; (80026a4 <HAL_RCC_OscConfig+0x2a0>)
 800253c:	b1ea      	cbz	r2, 800257a <HAL_RCC_OscConfig+0x176>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800253e:	2201      	movs	r2, #1
 8002540:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002542:	f001 fc93 	bl	8003e6c <HAL_GetTick>
 8002546:	4605      	mov	r5, r0

        /* Wait till HSI is ready */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002548:	4954      	ldr	r1, [pc, #336]	; (800269c <HAL_RCC_OscConfig+0x298>)
 800254a:	680b      	ldr	r3, [r1, #0]
 800254c:	079f      	lsls	r7, r3, #30
 800254e:	d405      	bmi.n	800255c <HAL_RCC_OscConfig+0x158>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002550:	f001 fc8c 	bl	8003e6c <HAL_GetTick>
 8002554:	1b40      	subs	r0, r0, r5
 8002556:	2864      	cmp	r0, #100	; 0x64
 8002558:	d9f6      	bls.n	8002548 <HAL_RCC_OscConfig+0x144>
 800255a:	e796      	b.n	800248a <HAL_RCC_OscConfig+0x86>
            return HAL_TIMEOUT;
          }       
        } 
                
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800255c:	680a      	ldr	r2, [r1, #0]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
{
  uint32_t result;

   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800255e:	23f8      	movs	r3, #248	; 0xf8
 8002560:	fa93 f3a3 	rbit	r3, r3
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 8002564:	fab3 f383 	clz	r3, r3
 8002568:	6920      	ldr	r0, [r4, #16]
 800256a:	b2db      	uxtb	r3, r3
 800256c:	4098      	lsls	r0, r3
 800256e:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 8002572:	ea40 0302 	orr.w	r3, r0, r2
 8002576:	600b      	str	r3, [r1, #0]
 8002578:	e00d      	b.n	8002596 <HAL_RCC_OscConfig+0x192>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 800257a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800257c:	f001 fc76 	bl	8003e6c <HAL_GetTick>
 8002580:	4605      	mov	r5, r0
      
        /* Wait till HSI is ready */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8002582:	4b46      	ldr	r3, [pc, #280]	; (800269c <HAL_RCC_OscConfig+0x298>)
 8002584:	681b      	ldr	r3, [r3, #0]
 8002586:	079e      	lsls	r6, r3, #30
 8002588:	d505      	bpl.n	8002596 <HAL_RCC_OscConfig+0x192>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800258a:	f001 fc6f 	bl	8003e6c <HAL_GetTick>
 800258e:	1b40      	subs	r0, r0, r5
 8002590:	2864      	cmp	r0, #100	; 0x64
 8002592:	d9f6      	bls.n	8002582 <HAL_RCC_OscConfig+0x17e>
 8002594:	e779      	b.n	800248a <HAL_RCC_OscConfig+0x86>
        } 
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8002596:	6823      	ldr	r3, [r4, #0]
 8002598:	071d      	lsls	r5, r3, #28
 800259a:	d403      	bmi.n	80025a4 <HAL_RCC_OscConfig+0x1a0>
        }       
      } 
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800259c:	6823      	ldr	r3, [r4, #0]
 800259e:	0758      	lsls	r0, r3, #29
 80025a0:	d428      	bmi.n	80025f4 <HAL_RCC_OscConfig+0x1f0>
 80025a2:	e052      	b.n	800264a <HAL_RCC_OscConfig+0x246>
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 80025a4:	6963      	ldr	r3, [r4, #20]
 80025a6:	2b01      	cmp	r3, #1
 80025a8:	d904      	bls.n	80025b4 <HAL_RCC_OscConfig+0x1b0>
 80025aa:	483b      	ldr	r0, [pc, #236]	; (8002698 <HAL_RCC_OscConfig+0x294>)
 80025ac:	f44f 71cd 	mov.w	r1, #410	; 0x19a
 80025b0:	f7fe ffa4 	bl	80014fc <assert_failed>

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 80025b4:	6962      	ldr	r2, [r4, #20]
 80025b6:	4b3c      	ldr	r3, [pc, #240]	; (80026a8 <HAL_RCC_OscConfig+0x2a4>)
 80025b8:	b172      	cbz	r2, 80025d8 <HAL_RCC_OscConfig+0x1d4>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 80025ba:	2201      	movs	r2, #1
 80025bc:	601a      	str	r2, [r3, #0]
      
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80025be:	f001 fc55 	bl	8003e6c <HAL_GetTick>
 80025c2:	4605      	mov	r5, r0
      
      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80025c4:	4b35      	ldr	r3, [pc, #212]	; (800269c <HAL_RCC_OscConfig+0x298>)
 80025c6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80025c8:	0799      	lsls	r1, r3, #30
 80025ca:	d4e7      	bmi.n	800259c <HAL_RCC_OscConfig+0x198>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80025cc:	f001 fc4e 	bl	8003e6c <HAL_GetTick>
 80025d0:	1b40      	subs	r0, r0, r5
 80025d2:	2864      	cmp	r0, #100	; 0x64
 80025d4:	d9f6      	bls.n	80025c4 <HAL_RCC_OscConfig+0x1c0>
 80025d6:	e758      	b.n	800248a <HAL_RCC_OscConfig+0x86>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 80025d8:	601a      	str	r2, [r3, #0]
      
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80025da:	f001 fc47 	bl	8003e6c <HAL_GetTick>
 80025de:	4605      	mov	r5, r0
      
      /* Wait till LSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80025e0:	4b2e      	ldr	r3, [pc, #184]	; (800269c <HAL_RCC_OscConfig+0x298>)
 80025e2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80025e4:	079a      	lsls	r2, r3, #30
 80025e6:	d5d9      	bpl.n	800259c <HAL_RCC_OscConfig+0x198>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80025e8:	f001 fc40 	bl	8003e6c <HAL_GetTick>
 80025ec:	1b40      	subs	r0, r0, r5
 80025ee:	2864      	cmp	r0, #100	; 0x64
 80025f0:	d9f6      	bls.n	80025e0 <HAL_RCC_OscConfig+0x1dc>
 80025f2:	e74a      	b.n	800248a <HAL_RCC_OscConfig+0x86>
  }
  /*------------------------------ LSE Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 80025f4:	68a3      	ldr	r3, [r4, #8]
 80025f6:	2b01      	cmp	r3, #1
 80025f8:	d830      	bhi.n	800265c <HAL_RCC_OscConfig+0x258>
    
    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 80025fa:	4a28      	ldr	r2, [pc, #160]	; (800269c <HAL_RCC_OscConfig+0x298>)
 80025fc:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80025fe:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002602:	6413      	str	r3, [r2, #64]	; 0x40
    
    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8002604:	f5a2 32e4 	sub.w	r2, r2, #116736	; 0x1c800
 8002608:	6813      	ldr	r3, [r2, #0]
 800260a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800260e:	6013      	str	r3, [r2, #0]
    
    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
 8002610:	f001 fc2c 	bl	8003e6c <HAL_GetTick>
 8002614:	4605      	mov	r5, r0
    
    while((PWR->CR & PWR_CR_DBP) == RESET)
 8002616:	4b25      	ldr	r3, [pc, #148]	; (80026ac <HAL_RCC_OscConfig+0x2a8>)
 8002618:	681b      	ldr	r3, [r3, #0]
 800261a:	05db      	lsls	r3, r3, #23
 800261c:	d526      	bpl.n	800266c <HAL_RCC_OscConfig+0x268>
        return HAL_TIMEOUT;
      }      
    }
    
    /* Reset LSEON and LSEBYP bits before configuring the LSE ----------------*/
    __HAL_RCC_LSE_CONFIG(RCC_LSE_OFF);
 800261e:	4d24      	ldr	r5, [pc, #144]	; (80026b0 <HAL_RCC_OscConfig+0x2ac>)
 8002620:	2300      	movs	r3, #0
 8002622:	702b      	strb	r3, [r5, #0]
    
    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8002624:	f001 fc22 	bl	8003e6c <HAL_GetTick>
 8002628:	4606      	mov	r6, r0
    
    /* Wait till LSE is ready */  
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800262a:	4b1c      	ldr	r3, [pc, #112]	; (800269c <HAL_RCC_OscConfig+0x298>)
 800262c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800262e:	079f      	lsls	r7, r3, #30
 8002630:	d422      	bmi.n	8002678 <HAL_RCC_OscConfig+0x274>
        return HAL_TIMEOUT;
      }    
    } 
    
    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002632:	7a23      	ldrb	r3, [r4, #8]
 8002634:	702b      	strb	r3, [r5, #0]
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) == RCC_LSE_ON)
 8002636:	68a3      	ldr	r3, [r4, #8]
 8002638:	2b01      	cmp	r3, #1
 800263a:	d13b      	bne.n	80026b4 <HAL_RCC_OscConfig+0x2b0>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800263c:	f001 fc16 	bl	8003e6c <HAL_GetTick>
 8002640:	4605      	mov	r5, r0
      
      /* Wait till LSE is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8002642:	4b16      	ldr	r3, [pc, #88]	; (800269c <HAL_RCC_OscConfig+0x298>)
 8002644:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002646:	079e      	lsls	r6, r3, #30
 8002648:	d51e      	bpl.n	8002688 <HAL_RCC_OscConfig+0x284>
      }
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 800264a:	69a3      	ldr	r3, [r4, #24]
 800264c:	2b02      	cmp	r3, #2
 800264e:	d940      	bls.n	80026d2 <HAL_RCC_OscConfig+0x2ce>
 8002650:	4811      	ldr	r0, [pc, #68]	; (8002698 <HAL_RCC_OscConfig+0x294>)
 8002652:	f44f 7102 	mov.w	r1, #520	; 0x208
 8002656:	f7fe ff51 	bl	80014fc <assert_failed>
 800265a:	e03a      	b.n	80026d2 <HAL_RCC_OscConfig+0x2ce>
  }
  /*------------------------------ LSE Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 800265c:	2b05      	cmp	r3, #5
 800265e:	d0cc      	beq.n	80025fa <HAL_RCC_OscConfig+0x1f6>
 8002660:	480d      	ldr	r0, [pc, #52]	; (8002698 <HAL_RCC_OscConfig+0x294>)
 8002662:	f44f 71e2 	mov.w	r1, #452	; 0x1c4
 8002666:	f7fe ff49 	bl	80014fc <assert_failed>
 800266a:	e7c6      	b.n	80025fa <HAL_RCC_OscConfig+0x1f6>
    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
    
    while((PWR->CR & PWR_CR_DBP) == RESET)
    {
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800266c:	f001 fbfe 	bl	8003e6c <HAL_GetTick>
 8002670:	1b40      	subs	r0, r0, r5
 8002672:	2864      	cmp	r0, #100	; 0x64
 8002674:	d9cf      	bls.n	8002616 <HAL_RCC_OscConfig+0x212>
 8002676:	e708      	b.n	800248a <HAL_RCC_OscConfig+0x86>
    tickstart = HAL_GetTick();
    
    /* Wait till LSE is ready */  
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
    {
      if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002678:	f001 fbf8 	bl	8003e6c <HAL_GetTick>
 800267c:	f241 3388 	movw	r3, #5000	; 0x1388
 8002680:	1b80      	subs	r0, r0, r6
 8002682:	4298      	cmp	r0, r3
 8002684:	d9d1      	bls.n	800262a <HAL_RCC_OscConfig+0x226>
 8002686:	e700      	b.n	800248a <HAL_RCC_OscConfig+0x86>
      tickstart = HAL_GetTick();
      
      /* Wait till LSE is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002688:	f001 fbf0 	bl	8003e6c <HAL_GetTick>
 800268c:	f241 3388 	movw	r3, #5000	; 0x1388
 8002690:	1b40      	subs	r0, r0, r5
 8002692:	4298      	cmp	r0, r3
 8002694:	d9d5      	bls.n	8002642 <HAL_RCC_OscConfig+0x23e>
 8002696:	e6f8      	b.n	800248a <HAL_RCC_OscConfig+0x86>
 8002698:	0802149d 	.word	0x0802149d
 800269c:	40023800 	.word	0x40023800
 80026a0:	40023802 	.word	0x40023802
 80026a4:	42470000 	.word	0x42470000
 80026a8:	42470e80 	.word	0x42470e80
 80026ac:	40007000 	.word	0x40007000
 80026b0:	40023870 	.word	0x40023870
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80026b4:	f001 fbda 	bl	8003e6c <HAL_GetTick>
 80026b8:	4605      	mov	r5, r0
      
      /* Wait till LSE is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80026ba:	4b50      	ldr	r3, [pc, #320]	; (80027fc <HAL_RCC_OscConfig+0x3f8>)
 80026bc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80026be:	0798      	lsls	r0, r3, #30
 80026c0:	d5c3      	bpl.n	800264a <HAL_RCC_OscConfig+0x246>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80026c2:	f001 fbd3 	bl	8003e6c <HAL_GetTick>
 80026c6:	f241 3388 	movw	r3, #5000	; 0x1388
 80026ca:	1b40      	subs	r0, r0, r5
 80026cc:	4298      	cmp	r0, r3
 80026ce:	d9f4      	bls.n	80026ba <HAL_RCC_OscConfig+0x2b6>
 80026d0:	e6db      	b.n	800248a <HAL_RCC_OscConfig+0x86>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80026d2:	69a2      	ldr	r2, [r4, #24]
 80026d4:	b90a      	cbnz	r2, 80026da <HAL_RCC_OscConfig+0x2d6>
    else
    {
      return HAL_ERROR;
    }
  }
  return HAL_OK;
 80026d6:	2000      	movs	r0, #0
 80026d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 80026da:	4b48      	ldr	r3, [pc, #288]	; (80027fc <HAL_RCC_OscConfig+0x3f8>)
 80026dc:	689b      	ldr	r3, [r3, #8]
 80026de:	f003 030c 	and.w	r3, r3, #12
 80026e2:	2b08      	cmp	r3, #8
 80026e4:	f43f aebe 	beq.w	8002464 <HAL_RCC_OscConfig+0x60>
    { 
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80026e8:	2a02      	cmp	r2, #2
 80026ea:	4d45      	ldr	r5, [pc, #276]	; (8002800 <HAL_RCC_OscConfig+0x3fc>)
 80026ec:	d175      	bne.n	80027da <HAL_RCC_OscConfig+0x3d6>
      {
        /* Check the parameters */
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 80026ee:	69e3      	ldr	r3, [r4, #28]
 80026f0:	f433 0380 	bics.w	r3, r3, #4194304	; 0x400000
 80026f4:	d004      	beq.n	8002700 <HAL_RCC_OscConfig+0x2fc>
 80026f6:	4843      	ldr	r0, [pc, #268]	; (8002804 <HAL_RCC_OscConfig+0x400>)
 80026f8:	f240 2111 	movw	r1, #529	; 0x211
 80026fc:	f7fe fefe 	bl	80014fc <assert_failed>
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 8002700:	6a23      	ldr	r3, [r4, #32]
 8002702:	2b3f      	cmp	r3, #63	; 0x3f
 8002704:	d904      	bls.n	8002710 <HAL_RCC_OscConfig+0x30c>
 8002706:	483f      	ldr	r0, [pc, #252]	; (8002804 <HAL_RCC_OscConfig+0x400>)
 8002708:	f240 2112 	movw	r1, #530	; 0x212
 800270c:	f7fe fef6 	bl	80014fc <assert_failed>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 8002710:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002712:	3bc0      	subs	r3, #192	; 0xc0
 8002714:	2bf0      	cmp	r3, #240	; 0xf0
 8002716:	d904      	bls.n	8002722 <HAL_RCC_OscConfig+0x31e>
 8002718:	483a      	ldr	r0, [pc, #232]	; (8002804 <HAL_RCC_OscConfig+0x400>)
 800271a:	f240 2113 	movw	r1, #531	; 0x213
 800271e:	f7fe feed 	bl	80014fc <assert_failed>
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 8002722:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8002724:	f023 0204 	bic.w	r2, r3, #4
 8002728:	2a02      	cmp	r2, #2
 800272a:	d008      	beq.n	800273e <HAL_RCC_OscConfig+0x33a>
 800272c:	2b04      	cmp	r3, #4
 800272e:	d006      	beq.n	800273e <HAL_RCC_OscConfig+0x33a>
 8002730:	2b08      	cmp	r3, #8
 8002732:	d004      	beq.n	800273e <HAL_RCC_OscConfig+0x33a>
 8002734:	4833      	ldr	r0, [pc, #204]	; (8002804 <HAL_RCC_OscConfig+0x400>)
 8002736:	f44f 7105 	mov.w	r1, #532	; 0x214
 800273a:	f7fe fedf 	bl	80014fc <assert_failed>
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 800273e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002740:	3b04      	subs	r3, #4
 8002742:	2b0b      	cmp	r3, #11
 8002744:	d904      	bls.n	8002750 <HAL_RCC_OscConfig+0x34c>
 8002746:	482f      	ldr	r0, [pc, #188]	; (8002804 <HAL_RCC_OscConfig+0x400>)
 8002748:	f240 2115 	movw	r1, #533	; 0x215
 800274c:	f7fe fed6 	bl	80014fc <assert_failed>
        
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8002750:	2300      	movs	r3, #0
 8002752:	602b      	str	r3, [r5, #0]
        
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002754:	f001 fb8a 	bl	8003e6c <HAL_GetTick>
 8002758:	4607      	mov	r7, r0
        
        /* Wait till PLL is ready */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800275a:	4e28      	ldr	r6, [pc, #160]	; (80027fc <HAL_RCC_OscConfig+0x3f8>)
 800275c:	6833      	ldr	r3, [r6, #0]
 800275e:	0199      	lsls	r1, r3, #6
 8002760:	d505      	bpl.n	800276e <HAL_RCC_OscConfig+0x36a>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8002762:	f001 fb83 	bl	8003e6c <HAL_GetTick>
 8002766:	1bc0      	subs	r0, r0, r7
 8002768:	2864      	cmp	r0, #100	; 0x64
 800276a:	d9f6      	bls.n	800275a <HAL_RCC_OscConfig+0x356>
 800276c:	e68d      	b.n	800248a <HAL_RCC_OscConfig+0x86>
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
{
  uint32_t result;

   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800276e:	f647 70c0 	movw	r0, #32704	; 0x7fc0
 8002772:	fa90 f0a0 	rbit	r0, r0
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 8002776:	fab0 f080 	clz	r0, r0
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
{
  uint32_t result;

   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800277a:	f44f 3140 	mov.w	r1, #196608	; 0x30000
 800277e:	fa91 f1a1 	rbit	r1, r1
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 8002782:	fab1 f181 	clz	r1, r1
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
{
  uint32_t result;

   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002786:	f04f 6270 	mov.w	r2, #251658240	; 0xf000000
 800278a:	fa92 f2a2 	rbit	r2, r2
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 800278e:	fab2 f282 	clz	r2, r2
 8002792:	6a27      	ldr	r7, [r4, #32]
 8002794:	69e3      	ldr	r3, [r4, #28]
 8002796:	433b      	orrs	r3, r7
 8002798:	f043 5700 	orr.w	r7, r3, #536870912	; 0x20000000
            return HAL_TIMEOUT;
          }
        }        

        /* Configure the main PLL clock source, multiplication and division factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 800279c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800279e:	b2c0      	uxtb	r0, r0
 80027a0:	4083      	lsls	r3, r0
 80027a2:	ea47 0003 	orr.w	r0, r7, r3
 80027a6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80027a8:	085b      	lsrs	r3, r3, #1
 80027aa:	b2c9      	uxtb	r1, r1
 80027ac:	3b01      	subs	r3, #1
 80027ae:	408b      	lsls	r3, r1
 80027b0:	b2d1      	uxtb	r1, r2
 80027b2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80027b4:	4303      	orrs	r3, r0
 80027b6:	408a      	lsls	r2, r1
 80027b8:	4313      	orrs	r3, r2
 80027ba:	6073      	str	r3, [r6, #4]
                             RCC_OscInitStruct->PLL.PLLM,
                             RCC_OscInitStruct->PLL.PLLN,
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 80027bc:	2301      	movs	r3, #1
 80027be:	602b      	str	r3, [r5, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80027c0:	f001 fb54 	bl	8003e6c <HAL_GetTick>
 80027c4:	4604      	mov	r4, r0
        
        /* Wait till PLL is ready */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80027c6:	4b0d      	ldr	r3, [pc, #52]	; (80027fc <HAL_RCC_OscConfig+0x3f8>)
 80027c8:	681b      	ldr	r3, [r3, #0]
 80027ca:	019a      	lsls	r2, r3, #6
 80027cc:	d483      	bmi.n	80026d6 <HAL_RCC_OscConfig+0x2d2>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80027ce:	f001 fb4d 	bl	8003e6c <HAL_GetTick>
 80027d2:	1b00      	subs	r0, r0, r4
 80027d4:	2864      	cmp	r0, #100	; 0x64
 80027d6:	d9f6      	bls.n	80027c6 <HAL_RCC_OscConfig+0x3c2>
 80027d8:	e657      	b.n	800248a <HAL_RCC_OscConfig+0x86>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80027da:	2300      	movs	r3, #0
 80027dc:	602b      	str	r3, [r5, #0]
 
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80027de:	f001 fb45 	bl	8003e6c <HAL_GetTick>
 80027e2:	4604      	mov	r4, r0
        
        /* Wait till PLL is ready */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80027e4:	4b05      	ldr	r3, [pc, #20]	; (80027fc <HAL_RCC_OscConfig+0x3f8>)
 80027e6:	681b      	ldr	r3, [r3, #0]
 80027e8:	019b      	lsls	r3, r3, #6
 80027ea:	f57f af74 	bpl.w	80026d6 <HAL_RCC_OscConfig+0x2d2>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80027ee:	f001 fb3d 	bl	8003e6c <HAL_GetTick>
 80027f2:	1b00      	subs	r0, r0, r4
 80027f4:	2864      	cmp	r0, #100	; 0x64
 80027f6:	d9f5      	bls.n	80027e4 <HAL_RCC_OscConfig+0x3e0>
 80027f8:	e647      	b.n	800248a <HAL_RCC_OscConfig+0x86>
 80027fa:	bf00      	nop
 80027fc:	40023800 	.word	0x40023800
 8002800:	42470060 	.word	0x42470060
 8002804:	0802149d 	.word	0x0802149d

08002808 <HAL_RCC_ClockConfig>:
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
  uint32_t tickstart = 0;   
 
  /* Check the parameters */
  assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 8002808:	6803      	ldr	r3, [r0, #0]
 800280a:	3b01      	subs	r3, #1
 800280c:	2b0e      	cmp	r3, #14
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 800280e:	b570      	push	{r4, r5, r6, lr}
 8002810:	4604      	mov	r4, r0
 8002812:	460d      	mov	r5, r1
  uint32_t tickstart = 0;   
 
  /* Check the parameters */
  assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 8002814:	d904      	bls.n	8002820 <HAL_RCC_ClockConfig+0x18>
 8002816:	48a5      	ldr	r0, [pc, #660]	; (8002aac <HAL_RCC_ClockConfig+0x2a4>)
 8002818:	f240 2173 	movw	r1, #627	; 0x273
 800281c:	f7fe fe6e 	bl	80014fc <assert_failed>
  assert_param(IS_FLASH_LATENCY(FLatency));
 8002820:	2d07      	cmp	r5, #7
 8002822:	d904      	bls.n	800282e <HAL_RCC_ClockConfig+0x26>
 8002824:	48a1      	ldr	r0, [pc, #644]	; (8002aac <HAL_RCC_ClockConfig+0x2a4>)
 8002826:	f44f 711d 	mov.w	r1, #628	; 0x274
 800282a:	f7fe fe67 	bl	80014fc <assert_failed>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
    must be correctly programmed according to the frequency of the CPU clock 
    (HCLK) and the supply voltage of the device. */
  
  /* Increasing the CPU frequency */
  if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 800282e:	4ba0      	ldr	r3, [pc, #640]	; (8002ab0 <HAL_RCC_ClockConfig+0x2a8>)
 8002830:	681a      	ldr	r2, [r3, #0]
 8002832:	f002 020f 	and.w	r2, r2, #15
 8002836:	4295      	cmp	r5, r2
 8002838:	f240 8081 	bls.w	800293e <HAL_RCC_ClockConfig+0x136>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800283c:	b2ea      	uxtb	r2, r5
 800283e:	701a      	strb	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 8002840:	681b      	ldr	r3, [r3, #0]
 8002842:	f003 030f 	and.w	r3, r3, #15
 8002846:	42ab      	cmp	r3, r5
 8002848:	d001      	beq.n	800284e <HAL_RCC_ClockConfig+0x46>
    {
      return HAL_ERROR;
 800284a:	2001      	movs	r0, #1
 800284c:	bd70      	pop	{r4, r5, r6, pc}
    }

    /*-------------------------- HCLK Configuration --------------------------*/
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800284e:	6823      	ldr	r3, [r4, #0]
 8002850:	079e      	lsls	r6, r3, #30
 8002852:	d51d      	bpl.n	8002890 <HAL_RCC_ClockConfig+0x88>
    {
      assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 8002854:	68a3      	ldr	r3, [r4, #8]
 8002856:	f033 0280 	bics.w	r2, r3, #128	; 0x80
 800285a:	d012      	beq.n	8002882 <HAL_RCC_ClockConfig+0x7a>
 800285c:	f023 0220 	bic.w	r2, r3, #32
 8002860:	2a90      	cmp	r2, #144	; 0x90
 8002862:	d00e      	beq.n	8002882 <HAL_RCC_ClockConfig+0x7a>
 8002864:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 8002868:	2aa0      	cmp	r2, #160	; 0xa0
 800286a:	d00a      	beq.n	8002882 <HAL_RCC_ClockConfig+0x7a>
 800286c:	f023 0210 	bic.w	r2, r3, #16
 8002870:	2ac0      	cmp	r2, #192	; 0xc0
 8002872:	d006      	beq.n	8002882 <HAL_RCC_ClockConfig+0x7a>
 8002874:	2bf0      	cmp	r3, #240	; 0xf0
 8002876:	d004      	beq.n	8002882 <HAL_RCC_ClockConfig+0x7a>
 8002878:	488c      	ldr	r0, [pc, #560]	; (8002aac <HAL_RCC_ClockConfig+0x2a4>)
 800287a:	f240 218a 	movw	r1, #650	; 0x28a
 800287e:	f7fe fe3d 	bl	80014fc <assert_failed>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8002882:	498c      	ldr	r1, [pc, #560]	; (8002ab4 <HAL_RCC_ClockConfig+0x2ac>)
 8002884:	688b      	ldr	r3, [r1, #8]
 8002886:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800288a:	68a3      	ldr	r3, [r4, #8]
 800288c:	4313      	orrs	r3, r2
 800288e:	608b      	str	r3, [r1, #8]
    }

    /*------------------------- SYSCLK Configuration ---------------------------*/ 
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8002890:	6823      	ldr	r3, [r4, #0]
 8002892:	07dd      	lsls	r5, r3, #31
 8002894:	d404      	bmi.n	80028a0 <HAL_RCC_ClockConfig+0x98>
      return HAL_ERROR;
    }
 }

  /*-------------------------- PCLK1 Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8002896:	6823      	ldr	r3, [r4, #0]
 8002898:	0758      	lsls	r0, r3, #29
 800289a:	f100 80ce 	bmi.w	8002a3a <HAL_RCC_ClockConfig+0x232>
 800289e:	e0e4      	b.n	8002a6a <HAL_RCC_ClockConfig+0x262>
    }

    /*------------------------- SYSCLK Configuration ---------------------------*/ 
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
    {    
      assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 80028a0:	6863      	ldr	r3, [r4, #4]
 80028a2:	2b02      	cmp	r3, #2
 80028a4:	d904      	bls.n	80028b0 <HAL_RCC_ClockConfig+0xa8>
 80028a6:	4881      	ldr	r0, [pc, #516]	; (8002aac <HAL_RCC_ClockConfig+0x2a4>)
 80028a8:	f240 2191 	movw	r1, #657	; 0x291
 80028ac:	f7fe fe26 	bl	80014fc <assert_failed>
      
      /* HSE is selected as System Clock Source */
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80028b0:	6862      	ldr	r2, [r4, #4]
 80028b2:	4b80      	ldr	r3, [pc, #512]	; (8002ab4 <HAL_RCC_ClockConfig+0x2ac>)
 80028b4:	2a01      	cmp	r2, #1
      {
        /* Check the HSE ready flag */  
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80028b6:	6819      	ldr	r1, [r3, #0]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
    {    
      assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
      
      /* HSE is selected as System Clock Source */
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80028b8:	d102      	bne.n	80028c0 <HAL_RCC_ClockConfig+0xb8>
      {
        /* Check the HSE ready flag */  
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80028ba:	f411 3f00 	tst.w	r1, #131072	; 0x20000
 80028be:	e006      	b.n	80028ce <HAL_RCC_ClockConfig+0xc6>
        {
          return HAL_ERROR;
        }
      }
      /* PLL is selected as System Clock Source */
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80028c0:	2a02      	cmp	r2, #2
 80028c2:	d102      	bne.n	80028ca <HAL_RCC_ClockConfig+0xc2>
      {
        /* Check the PLL ready flag */  
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80028c4:	f011 7f00 	tst.w	r1, #33554432	; 0x2000000
 80028c8:	e001      	b.n	80028ce <HAL_RCC_ClockConfig+0xc6>
      }
      /* HSI is selected as System Clock Source */
      else
      {
        /* Check the HSI ready flag */  
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80028ca:	f011 0f02 	tst.w	r1, #2
 80028ce:	d0bc      	beq.n	800284a <HAL_RCC_ClockConfig+0x42>
        {
          return HAL_ERROR;
        }
      }
      MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 80028d0:	6899      	ldr	r1, [r3, #8]
 80028d2:	f021 0103 	bic.w	r1, r1, #3
 80028d6:	430a      	orrs	r2, r1
 80028d8:	609a      	str	r2, [r3, #8]
 
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80028da:	f001 fac7 	bl	8003e6c <HAL_GetTick>
      
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80028de:	6863      	ldr	r3, [r4, #4]
 80028e0:	2b01      	cmp	r3, #1
        }
      }
      MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80028e2:	4605      	mov	r5, r0
      
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80028e4:	d10e      	bne.n	8002904 <HAL_RCC_ClockConfig+0xfc>
      {
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_HSE)
 80028e6:	4b73      	ldr	r3, [pc, #460]	; (8002ab4 <HAL_RCC_ClockConfig+0x2ac>)
 80028e8:	689b      	ldr	r3, [r3, #8]
 80028ea:	f003 030c 	and.w	r3, r3, #12
 80028ee:	2b04      	cmp	r3, #4
 80028f0:	d0d1      	beq.n	8002896 <HAL_RCC_ClockConfig+0x8e>
        {
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 80028f2:	f001 fabb 	bl	8003e6c <HAL_GetTick>
 80028f6:	f241 3388 	movw	r3, #5000	; 0x1388
 80028fa:	1b40      	subs	r0, r0, r5
 80028fc:	4298      	cmp	r0, r3
 80028fe:	d9f2      	bls.n	80028e6 <HAL_RCC_ClockConfig+0xde>
          {
            return HAL_TIMEOUT;
 8002900:	2003      	movs	r0, #3
 8002902:	bd70      	pop	{r4, r5, r6, pc}
          }
        }
      }
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8002904:	2b02      	cmp	r3, #2
 8002906:	d114      	bne.n	8002932 <HAL_RCC_ClockConfig+0x12a>
      {
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8002908:	4b6a      	ldr	r3, [pc, #424]	; (8002ab4 <HAL_RCC_ClockConfig+0x2ac>)
 800290a:	689b      	ldr	r3, [r3, #8]
 800290c:	f003 030c 	and.w	r3, r3, #12
 8002910:	2b08      	cmp	r3, #8
 8002912:	d0c0      	beq.n	8002896 <HAL_RCC_ClockConfig+0x8e>
        {
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8002914:	f001 faaa 	bl	8003e6c <HAL_GetTick>
 8002918:	f241 3388 	movw	r3, #5000	; 0x1388
 800291c:	1b40      	subs	r0, r0, r5
 800291e:	4298      	cmp	r0, r3
 8002920:	d9f2      	bls.n	8002908 <HAL_RCC_ClockConfig+0x100>
 8002922:	e7ed      	b.n	8002900 <HAL_RCC_ClockConfig+0xf8>
      }
      else
      {
        while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_HSI)
        {
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8002924:	f001 faa2 	bl	8003e6c <HAL_GetTick>
 8002928:	f241 3388 	movw	r3, #5000	; 0x1388
 800292c:	1b40      	subs	r0, r0, r5
 800292e:	4298      	cmp	r0, r3
 8002930:	d8e6      	bhi.n	8002900 <HAL_RCC_ClockConfig+0xf8>
          }
        }
      }
      else
      {
        while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_HSI)
 8002932:	4b60      	ldr	r3, [pc, #384]	; (8002ab4 <HAL_RCC_ClockConfig+0x2ac>)
 8002934:	689b      	ldr	r3, [r3, #8]
 8002936:	f013 0f0c 	tst.w	r3, #12
 800293a:	d1f3      	bne.n	8002924 <HAL_RCC_ClockConfig+0x11c>
 800293c:	e7ab      	b.n	8002896 <HAL_RCC_ClockConfig+0x8e>
  }
  /* Decreasing the CPU frequency */
  else
  {
    /*-------------------------- HCLK Configuration --------------------------*/
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800293e:	6823      	ldr	r3, [r4, #0]
 8002940:	0799      	lsls	r1, r3, #30
 8002942:	d51d      	bpl.n	8002980 <HAL_RCC_ClockConfig+0x178>
    {
      assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 8002944:	68a3      	ldr	r3, [r4, #8]
 8002946:	f033 0280 	bics.w	r2, r3, #128	; 0x80
 800294a:	d012      	beq.n	8002972 <HAL_RCC_ClockConfig+0x16a>
 800294c:	f023 0220 	bic.w	r2, r3, #32
 8002950:	2a90      	cmp	r2, #144	; 0x90
 8002952:	d00e      	beq.n	8002972 <HAL_RCC_ClockConfig+0x16a>
 8002954:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 8002958:	2aa0      	cmp	r2, #160	; 0xa0
 800295a:	d00a      	beq.n	8002972 <HAL_RCC_ClockConfig+0x16a>
 800295c:	f023 0210 	bic.w	r2, r3, #16
 8002960:	2ac0      	cmp	r2, #192	; 0xc0
 8002962:	d006      	beq.n	8002972 <HAL_RCC_ClockConfig+0x16a>
 8002964:	2bf0      	cmp	r3, #240	; 0xf0
 8002966:	d004      	beq.n	8002972 <HAL_RCC_ClockConfig+0x16a>
 8002968:	4850      	ldr	r0, [pc, #320]	; (8002aac <HAL_RCC_ClockConfig+0x2a4>)
 800296a:	f240 21d9 	movw	r1, #729	; 0x2d9
 800296e:	f7fe fdc5 	bl	80014fc <assert_failed>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8002972:	4950      	ldr	r1, [pc, #320]	; (8002ab4 <HAL_RCC_ClockConfig+0x2ac>)
 8002974:	688b      	ldr	r3, [r1, #8]
 8002976:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800297a:	68a3      	ldr	r3, [r4, #8]
 800297c:	4313      	orrs	r3, r2
 800297e:	608b      	str	r3, [r1, #8]
    }

    /*------------------------- SYSCLK Configuration -------------------------*/
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8002980:	6823      	ldr	r3, [r4, #0]
 8002982:	07da      	lsls	r2, r3, #31
 8002984:	d409      	bmi.n	800299a <HAL_RCC_ClockConfig+0x192>
        }
      }
    }
    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8002986:	4b4a      	ldr	r3, [pc, #296]	; (8002ab0 <HAL_RCC_ClockConfig+0x2a8>)
 8002988:	b2ea      	uxtb	r2, r5
 800298a:	701a      	strb	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 800298c:	681b      	ldr	r3, [r3, #0]
 800298e:	f003 030f 	and.w	r3, r3, #15
 8002992:	42ab      	cmp	r3, r5
 8002994:	f47f af59 	bne.w	800284a <HAL_RCC_ClockConfig+0x42>
 8002998:	e77d      	b.n	8002896 <HAL_RCC_ClockConfig+0x8e>
    }

    /*------------------------- SYSCLK Configuration -------------------------*/
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
    {    
      assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 800299a:	6863      	ldr	r3, [r4, #4]
 800299c:	2b02      	cmp	r3, #2
 800299e:	d904      	bls.n	80029aa <HAL_RCC_ClockConfig+0x1a2>
 80029a0:	4842      	ldr	r0, [pc, #264]	; (8002aac <HAL_RCC_ClockConfig+0x2a4>)
 80029a2:	f44f 7138 	mov.w	r1, #736	; 0x2e0
 80029a6:	f7fe fda9 	bl	80014fc <assert_failed>
      
      /* HSE is selected as System Clock Source */
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80029aa:	6862      	ldr	r2, [r4, #4]
 80029ac:	4b41      	ldr	r3, [pc, #260]	; (8002ab4 <HAL_RCC_ClockConfig+0x2ac>)
 80029ae:	2a01      	cmp	r2, #1
      {
        /* Check the HSE ready flag */  
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80029b0:	6819      	ldr	r1, [r3, #0]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
    {    
      assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
      
      /* HSE is selected as System Clock Source */
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80029b2:	d102      	bne.n	80029ba <HAL_RCC_ClockConfig+0x1b2>
      {
        /* Check the HSE ready flag */  
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80029b4:	f411 3f00 	tst.w	r1, #131072	; 0x20000
 80029b8:	e006      	b.n	80029c8 <HAL_RCC_ClockConfig+0x1c0>
        {
          return HAL_ERROR;
        }
      }
      /* PLL is selected as System Clock Source */
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80029ba:	2a02      	cmp	r2, #2
 80029bc:	d102      	bne.n	80029c4 <HAL_RCC_ClockConfig+0x1bc>
      {
        /* Check the PLL ready flag */  
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80029be:	f011 7f00 	tst.w	r1, #33554432	; 0x2000000
 80029c2:	e001      	b.n	80029c8 <HAL_RCC_ClockConfig+0x1c0>
      }
      /* HSI is selected as System Clock Source */
      else
      {
        /* Check the HSI ready flag */  
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80029c4:	f011 0f02 	tst.w	r1, #2
 80029c8:	f43f af3f 	beq.w	800284a <HAL_RCC_ClockConfig+0x42>
        {
          return HAL_ERROR;
        }
      }
      MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 80029cc:	6899      	ldr	r1, [r3, #8]
 80029ce:	f021 0103 	bic.w	r1, r1, #3
 80029d2:	430a      	orrs	r2, r1
 80029d4:	609a      	str	r2, [r3, #8]
      
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80029d6:	f001 fa49 	bl	8003e6c <HAL_GetTick>
      
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80029da:	6863      	ldr	r3, [r4, #4]
 80029dc:	2b01      	cmp	r3, #1
        }
      }
      MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
      
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80029de:	4606      	mov	r6, r0
      
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80029e0:	d10d      	bne.n	80029fe <HAL_RCC_ClockConfig+0x1f6>
      {
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_HSE)
 80029e2:	4b34      	ldr	r3, [pc, #208]	; (8002ab4 <HAL_RCC_ClockConfig+0x2ac>)
 80029e4:	689b      	ldr	r3, [r3, #8]
 80029e6:	f003 030c 	and.w	r3, r3, #12
 80029ea:	2b04      	cmp	r3, #4
 80029ec:	d0cb      	beq.n	8002986 <HAL_RCC_ClockConfig+0x17e>
        {
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 80029ee:	f001 fa3d 	bl	8003e6c <HAL_GetTick>
 80029f2:	f241 3388 	movw	r3, #5000	; 0x1388
 80029f6:	1b80      	subs	r0, r0, r6
 80029f8:	4298      	cmp	r0, r3
 80029fa:	d9f2      	bls.n	80029e2 <HAL_RCC_ClockConfig+0x1da>
 80029fc:	e780      	b.n	8002900 <HAL_RCC_ClockConfig+0xf8>
          {
            return HAL_TIMEOUT;
          } 
        }
      }
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80029fe:	2b02      	cmp	r3, #2
 8002a00:	d115      	bne.n	8002a2e <HAL_RCC_ClockConfig+0x226>
      {
        while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8002a02:	4b2c      	ldr	r3, [pc, #176]	; (8002ab4 <HAL_RCC_ClockConfig+0x2ac>)
 8002a04:	689b      	ldr	r3, [r3, #8]
 8002a06:	f003 030c 	and.w	r3, r3, #12
 8002a0a:	2b08      	cmp	r3, #8
 8002a0c:	d0bb      	beq.n	8002986 <HAL_RCC_ClockConfig+0x17e>
        {
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8002a0e:	f001 fa2d 	bl	8003e6c <HAL_GetTick>
 8002a12:	f241 3388 	movw	r3, #5000	; 0x1388
 8002a16:	1b80      	subs	r0, r0, r6
 8002a18:	4298      	cmp	r0, r3
 8002a1a:	d9f2      	bls.n	8002a02 <HAL_RCC_ClockConfig+0x1fa>
 8002a1c:	e770      	b.n	8002900 <HAL_RCC_ClockConfig+0xf8>
      }
      else
      {
        while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_HSI)
        {
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8002a1e:	f001 fa25 	bl	8003e6c <HAL_GetTick>
 8002a22:	f241 3388 	movw	r3, #5000	; 0x1388
 8002a26:	1b80      	subs	r0, r0, r6
 8002a28:	4298      	cmp	r0, r3
 8002a2a:	f63f af69 	bhi.w	8002900 <HAL_RCC_ClockConfig+0xf8>
          } 
        }
      }
      else
      {
        while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_HSI)
 8002a2e:	4b21      	ldr	r3, [pc, #132]	; (8002ab4 <HAL_RCC_ClockConfig+0x2ac>)
 8002a30:	689b      	ldr	r3, [r3, #8]
 8002a32:	f013 0f0c 	tst.w	r3, #12
 8002a36:	d1f2      	bne.n	8002a1e <HAL_RCC_ClockConfig+0x216>
 8002a38:	e7a5      	b.n	8002986 <HAL_RCC_ClockConfig+0x17e>
 }

  /*-------------------------- PCLK1 Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 8002a3a:	68e3      	ldr	r3, [r4, #12]
 8002a3c:	f433 5280 	bics.w	r2, r3, #4096	; 0x1000
 8002a40:	d00c      	beq.n	8002a5c <HAL_RCC_ClockConfig+0x254>
 8002a42:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 8002a46:	f5b2 5fa0 	cmp.w	r2, #5120	; 0x1400
 8002a4a:	d007      	beq.n	8002a5c <HAL_RCC_ClockConfig+0x254>
 8002a4c:	f5b3 5fc0 	cmp.w	r3, #6144	; 0x1800
 8002a50:	d004      	beq.n	8002a5c <HAL_RCC_ClockConfig+0x254>
 8002a52:	4816      	ldr	r0, [pc, #88]	; (8002aac <HAL_RCC_ClockConfig+0x2a4>)
 8002a54:	f44f 714c 	mov.w	r1, #816	; 0x330
 8002a58:	f7fe fd50 	bl	80014fc <assert_failed>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8002a5c:	4915      	ldr	r1, [pc, #84]	; (8002ab4 <HAL_RCC_ClockConfig+0x2ac>)
 8002a5e:	688b      	ldr	r3, [r1, #8]
 8002a60:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8002a64:	68e3      	ldr	r3, [r4, #12]
 8002a66:	4313      	orrs	r3, r2
 8002a68:	608b      	str	r3, [r1, #8]
  }
  
  /*-------------------------- PCLK2 Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8002a6a:	6823      	ldr	r3, [r4, #0]
 8002a6c:	071b      	lsls	r3, r3, #28
 8002a6e:	d518      	bpl.n	8002aa2 <HAL_RCC_ClockConfig+0x29a>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 8002a70:	6923      	ldr	r3, [r4, #16]
 8002a72:	f433 5280 	bics.w	r2, r3, #4096	; 0x1000
 8002a76:	d00c      	beq.n	8002a92 <HAL_RCC_ClockConfig+0x28a>
 8002a78:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 8002a7c:	f5b2 5fa0 	cmp.w	r2, #5120	; 0x1400
 8002a80:	d007      	beq.n	8002a92 <HAL_RCC_ClockConfig+0x28a>
 8002a82:	f5b3 5fc0 	cmp.w	r3, #6144	; 0x1800
 8002a86:	d004      	beq.n	8002a92 <HAL_RCC_ClockConfig+0x28a>
 8002a88:	4808      	ldr	r0, [pc, #32]	; (8002aac <HAL_RCC_ClockConfig+0x2a4>)
 8002a8a:	f240 3137 	movw	r1, #823	; 0x337
 8002a8e:	f7fe fd35 	bl	80014fc <assert_failed>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8002a92:	4a08      	ldr	r2, [pc, #32]	; (8002ab4 <HAL_RCC_ClockConfig+0x2ac>)
 8002a94:	6921      	ldr	r1, [r4, #16]
 8002a96:	6893      	ldr	r3, [r2, #8]
 8002a98:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8002a9c:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8002aa0:	6093      	str	r3, [r2, #8]
  }

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick (TICK_INT_PRIORITY);
 8002aa2:	200f      	movs	r0, #15
 8002aa4:	f001 f9b2 	bl	8003e0c <HAL_InitTick>
  
  return HAL_OK;
 8002aa8:	2000      	movs	r0, #0
}
 8002aaa:	bd70      	pop	{r4, r5, r6, pc}
 8002aac:	0802149d 	.word	0x0802149d
 8002ab0:	40023c00 	.word	0x40023c00
 8002ab4:	40023800 	.word	0x40023800

08002ab8 <HAL_RCC_GetSysClockFreq>:
  *         
  *               
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8002ab8:	b530      	push	{r4, r5, lr}
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
  uint32_t sysclockfreq = 0;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8002aba:	4c1d      	ldr	r4, [pc, #116]	; (8002b30 <HAL_RCC_GetSysClockFreq+0x78>)
 8002abc:	68a3      	ldr	r3, [r4, #8]
 8002abe:	f003 030c 	and.w	r3, r3, #12
 8002ac2:	2b04      	cmp	r3, #4
 8002ac4:	d030      	beq.n	8002b28 <HAL_RCC_GetSysClockFreq+0x70>
 8002ac6:	2b08      	cmp	r3, #8
 8002ac8:	d130      	bne.n	8002b2c <HAL_RCC_GetSysClockFreq+0x74>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8002aca:	6862      	ldr	r2, [r4, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8002acc:	6863      	ldr	r3, [r4, #4]
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8002ace:	f002 053f 	and.w	r5, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8002ad2:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
 8002ad6:	f647 71c0 	movw	r1, #32704	; 0x7fc0
      {
        /* HSE used as PLL clock source */
        pllvco = ((HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> POSITION_VAL(RCC_PLLCFGR_PLLN)));
 8002ada:	6863      	ldr	r3, [r4, #4]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
{
  uint32_t result;

   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002adc:	fa91 f1a1 	rbit	r1, r1
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 8002ae0:	fab1 f181 	clz	r1, r1
 8002ae4:	f647 70c0 	movw	r0, #32704	; 0x7fc0
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = ((HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> POSITION_VAL(RCC_PLLCFGR_PLLN)));    
 8002ae8:	bf04      	itt	eq
 8002aea:	4a12      	ldreq	r2, [pc, #72]	; (8002b34 <HAL_RCC_GetSysClockFreq+0x7c>)
 8002aec:	fbb2 f2f5 	udiveq	r2, r2, r5
 8002af0:	b2c9      	uxtb	r1, r1
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
      {
        /* HSE used as PLL clock source */
        pllvco = ((HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> POSITION_VAL(RCC_PLLCFGR_PLLN)));
 8002af2:	ea00 0003 	and.w	r0, r0, r3
 8002af6:	fa20 f001 	lsr.w	r0, r0, r1
 8002afa:	bf1c      	itt	ne
 8002afc:	490e      	ldrne	r1, [pc, #56]	; (8002b38 <HAL_RCC_GetSysClockFreq+0x80>)
 8002afe:	fbb1 f2f5 	udivne	r2, r1, r5
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = ((HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> POSITION_VAL(RCC_PLLCFGR_PLLN)));    
 8002b02:	fb02 f300 	mul.w	r3, r2, r0
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> POSITION_VAL(RCC_PLLCFGR_PLLP)) + 1 ) *2);
 8002b06:	4a0a      	ldr	r2, [pc, #40]	; (8002b30 <HAL_RCC_GetSysClockFreq+0x78>)
 8002b08:	6850      	ldr	r0, [r2, #4]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
{
  uint32_t result;

   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002b0a:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8002b0e:	fa92 f2a2 	rbit	r2, r2
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 8002b12:	fab2 f282 	clz	r2, r2
 8002b16:	b2d2      	uxtb	r2, r2
 8002b18:	f400 3040 	and.w	r0, r0, #196608	; 0x30000
 8002b1c:	40d0      	lsrs	r0, r2
 8002b1e:	3001      	adds	r0, #1
 8002b20:	0040      	lsls	r0, r0, #1
      
      sysclockfreq = pllvco/pllp;
 8002b22:	fbb3 f0f0 	udiv	r0, r3, r0
 8002b26:	bd30      	pop	{r4, r5, pc}
      sysclockfreq = HSI_VALUE;
       break;
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8002b28:	4803      	ldr	r0, [pc, #12]	; (8002b38 <HAL_RCC_GetSysClockFreq+0x80>)
 8002b2a:	bd30      	pop	{r4, r5, pc}
  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8002b2c:	4801      	ldr	r0, [pc, #4]	; (8002b34 <HAL_RCC_GetSysClockFreq+0x7c>)
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8002b2e:	bd30      	pop	{r4, r5, pc}
 8002b30:	40023800 	.word	0x40023800
 8002b34:	00f42400 	.word	0x00f42400
 8002b38:	007a1200 	.word	0x007a1200

08002b3c <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8002b3c:	b508      	push	{r3, lr}
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> APBAHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> POSITION_VAL(RCC_CFGR_HPRE)];
 8002b3e:	f7ff ffbb 	bl	8002ab8 <HAL_RCC_GetSysClockFreq>
 8002b42:	4b09      	ldr	r3, [pc, #36]	; (8002b68 <HAL_RCC_GetHCLKFreq+0x2c>)
 8002b44:	689a      	ldr	r2, [r3, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
{
  uint32_t result;

   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002b46:	23f0      	movs	r3, #240	; 0xf0
 8002b48:	fa93 f3a3 	rbit	r3, r3
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 8002b4c:	fab3 f383 	clz	r3, r3
 8002b50:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8002b54:	b2db      	uxtb	r3, r3
 8002b56:	fa22 f303 	lsr.w	r3, r2, r3
 8002b5a:	4a04      	ldr	r2, [pc, #16]	; (8002b6c <HAL_RCC_GetHCLKFreq+0x30>)
 8002b5c:	5cd3      	ldrb	r3, [r2, r3]
 8002b5e:	40d8      	lsrs	r0, r3
 8002b60:	4b03      	ldr	r3, [pc, #12]	; (8002b70 <HAL_RCC_GetHCLKFreq+0x34>)
 8002b62:	6018      	str	r0, [r3, #0]
  return SystemCoreClock;
}
 8002b64:	bd08      	pop	{r3, pc}
 8002b66:	bf00      	nop
 8002b68:	40023800 	.word	0x40023800
 8002b6c:	0802148d 	.word	0x0802148d
 8002b70:	20000000 	.word	0x20000000

08002b74 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{  
 8002b74:	b508      	push	{r3, lr}
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBAHBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> POSITION_VAL(RCC_CFGR_PPRE1)]);
 8002b76:	f7ff ffe1 	bl	8002b3c <HAL_RCC_GetHCLKFreq>
 8002b7a:	4b08      	ldr	r3, [pc, #32]	; (8002b9c <HAL_RCC_GetPCLK1Freq+0x28>)
 8002b7c:	689a      	ldr	r2, [r3, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
{
  uint32_t result;

   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002b7e:	f44f 53e0 	mov.w	r3, #7168	; 0x1c00
 8002b82:	fa93 f3a3 	rbit	r3, r3
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 8002b86:	fab3 f383 	clz	r3, r3
 8002b8a:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8002b8e:	b2db      	uxtb	r3, r3
 8002b90:	fa22 f303 	lsr.w	r3, r2, r3
 8002b94:	4a02      	ldr	r2, [pc, #8]	; (8002ba0 <HAL_RCC_GetPCLK1Freq+0x2c>)
 8002b96:	5cd3      	ldrb	r3, [r2, r3]
}
 8002b98:	40d8      	lsrs	r0, r3
 8002b9a:	bd08      	pop	{r3, pc}
 8002b9c:	40023800 	.word	0x40023800
 8002ba0:	0802148d 	.word	0x0802148d

08002ba4 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 8002ba4:	b508      	push	{r3, lr}
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBAHBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> POSITION_VAL(RCC_CFGR_PPRE2)]);
 8002ba6:	f7ff ffc9 	bl	8002b3c <HAL_RCC_GetHCLKFreq>
 8002baa:	4b08      	ldr	r3, [pc, #32]	; (8002bcc <HAL_RCC_GetPCLK2Freq+0x28>)
 8002bac:	689a      	ldr	r2, [r3, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
{
  uint32_t result;

   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002bae:	f44f 4360 	mov.w	r3, #57344	; 0xe000
 8002bb2:	fa93 f3a3 	rbit	r3, r3
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
 8002bb6:	fab3 f383 	clz	r3, r3
 8002bba:	f402 4260 	and.w	r2, r2, #57344	; 0xe000
 8002bbe:	b2db      	uxtb	r3, r3
 8002bc0:	fa22 f303 	lsr.w	r3, r2, r3
 8002bc4:	4a02      	ldr	r2, [pc, #8]	; (8002bd0 <HAL_RCC_GetPCLK2Freq+0x2c>)
 8002bc6:	5cd3      	ldrb	r3, [r2, r3]
} 
 8002bc8:	40d8      	lsrs	r0, r3
 8002bca:	bd08      	pop	{r3, pc}
 8002bcc:	40023800 	.word	0x40023800
 8002bd0:	0802148d 	.word	0x0802148d

08002bd4 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
  * @param  Flag: specifies the I2C flag to check.
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout)
{
 8002bd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002bd8:	460d      	mov	r5, r1
 8002bda:	4604      	mov	r4, r0
 8002bdc:	4616      	mov	r6, r2
  uint32_t tickstart = 0;

  /* Get tick */
  tickstart = HAL_GetTick();
 8002bde:	f001 f945 	bl	8003e6c <HAL_GetTick>

  while(__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8002be2:	f3c5 4807 	ubfx	r8, r5, #16, #8
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout)
{
  uint32_t tickstart = 0;

  /* Get tick */
  tickstart = HAL_GetTick();
 8002be6:	4607      	mov	r7, r0
 8002be8:	6823      	ldr	r3, [r4, #0]

  while(__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8002bea:	f1b8 0f01 	cmp.w	r8, #1
 8002bee:	bf0c      	ite	eq
 8002bf0:	6958      	ldreq	r0, [r3, #20]
 8002bf2:	6998      	ldrne	r0, [r3, #24]
 8002bf4:	43c0      	mvns	r0, r0
 8002bf6:	b280      	uxth	r0, r0
 8002bf8:	4228      	tst	r0, r5
 8002bfa:	bf14      	ite	ne
 8002bfc:	2001      	movne	r0, #1
 8002bfe:	2000      	moveq	r0, #0
 8002c00:	b328      	cbz	r0, 8002c4e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x7a>
  {
    if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8002c02:	695a      	ldr	r2, [r3, #20]
 8002c04:	0552      	lsls	r2, r2, #21
 8002c06:	d510      	bpl.n	8002c2a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x56>
    {
      /* Generate Stop */
      hi2c->Instance->CR1 |= I2C_CR1_STOP;
 8002c08:	681a      	ldr	r2, [r3, #0]
 8002c0a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002c0e:	601a      	str	r2, [r3, #0]

      /* Clear AF Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8002c10:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8002c14:	615a      	str	r2, [r3, #20]

      hi2c->ErrorCode = HAL_I2C_ERROR_AF;
 8002c16:	2304      	movs	r3, #4
 8002c18:	63a3      	str	r3, [r4, #56]	; 0x38
      hi2c->State= HAL_I2C_STATE_READY;
 8002c1a:	2001      	movs	r0, #1

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8002c1c:	2300      	movs	r3, #0

      /* Clear AF Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

      hi2c->ErrorCode = HAL_I2C_ERROR_AF;
      hi2c->State= HAL_I2C_STATE_READY;
 8002c1e:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8002c22:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34

      return HAL_ERROR;
 8002c26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    }

    /* Check for the Timeout */
    if(Timeout != HAL_MAX_DELAY)
 8002c2a:	1c73      	adds	r3, r6, #1
 8002c2c:	d0dc      	beq.n	8002be8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x14>
    {
      if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 8002c2e:	b946      	cbnz	r6, 8002c42 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x6e>
      {
        hi2c->State= HAL_I2C_STATE_READY;
 8002c30:	2301      	movs	r3, #1
 8002c32:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8002c36:	2300      	movs	r3, #0
 8002c38:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34

        return HAL_TIMEOUT;
 8002c3c:	2003      	movs	r0, #3
 8002c3e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    }

    /* Check for the Timeout */
    if(Timeout != HAL_MAX_DELAY)
    {
      if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 8002c42:	f001 f913 	bl	8003e6c <HAL_GetTick>
 8002c46:	1bc0      	subs	r0, r0, r7
 8002c48:	42b0      	cmp	r0, r6
 8002c4a:	d9cd      	bls.n	8002be8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x14>
 8002c4c:	e7f0      	b.n	8002c30 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x5c>
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
}
 8002c4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08002c52 <I2C_WaitOnFlagUntilTimeout>:
  * @param  Status: The new Flag status (SET or RESET).
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout)
{
 8002c52:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002c56:	460e      	mov	r6, r1
 8002c58:	461d      	mov	r5, r3
 8002c5a:	4604      	mov	r4, r0
 8002c5c:	4690      	mov	r8, r2
  uint32_t tickstart = 0;

  /* Get tick */
  tickstart = HAL_GetTick();
 8002c5e:	f001 f905 	bl	8003e6c <HAL_GetTick>
 8002c62:	0c33      	lsrs	r3, r6, #16
 8002c64:	4607      	mov	r7, r0

  /* Wait until flag is set */
  if(Status == RESET)
 8002c66:	f1b8 0f00 	cmp.w	r8, #0
 8002c6a:	d134      	bne.n	8002cd6 <I2C_WaitOnFlagUntilTimeout+0x84>
  {
    while(__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8002c6c:	fa5f f883 	uxtb.w	r8, r3
 8002c70:	6823      	ldr	r3, [r4, #0]
 8002c72:	f1b8 0f01 	cmp.w	r8, #1
 8002c76:	bf0c      	ite	eq
 8002c78:	695b      	ldreq	r3, [r3, #20]
 8002c7a:	699b      	ldrne	r3, [r3, #24]
 8002c7c:	43db      	mvns	r3, r3
 8002c7e:	b29b      	uxth	r3, r3
 8002c80:	4233      	tst	r3, r6
 8002c82:	bf14      	ite	ne
 8002c84:	2301      	movne	r3, #1
 8002c86:	2300      	moveq	r3, #0
 8002c88:	b1c3      	cbz	r3, 8002cbc <I2C_WaitOnFlagUntilTimeout+0x6a>
    {
      /* Check for the Timeout */
      if(Timeout != HAL_MAX_DELAY)
 8002c8a:	1c6a      	adds	r2, r5, #1
 8002c8c:	d0f0      	beq.n	8002c70 <I2C_WaitOnFlagUntilTimeout+0x1e>
      {
        if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 8002c8e:	b1cd      	cbz	r5, 8002cc4 <I2C_WaitOnFlagUntilTimeout+0x72>
 8002c90:	f001 f8ec 	bl	8003e6c <HAL_GetTick>
 8002c94:	1bc0      	subs	r0, r0, r7
 8002c96:	42a8      	cmp	r0, r5
 8002c98:	d9ea      	bls.n	8002c70 <I2C_WaitOnFlagUntilTimeout+0x1e>
 8002c9a:	e013      	b.n	8002cc4 <I2C_WaitOnFlagUntilTimeout+0x72>
  else
  {
    while(__HAL_I2C_GET_FLAG(hi2c, Flag) != RESET)
    {
      /* Check for the Timeout */
      if(Timeout != HAL_MAX_DELAY)
 8002c9c:	1c6b      	adds	r3, r5, #1
 8002c9e:	d110      	bne.n	8002cc2 <I2C_WaitOnFlagUntilTimeout+0x70>
 8002ca0:	6823      	ldr	r3, [r4, #0]
      }
    }
  }
  else
  {
    while(__HAL_I2C_GET_FLAG(hi2c, Flag) != RESET)
 8002ca2:	f1b8 0f01 	cmp.w	r8, #1
 8002ca6:	bf0c      	ite	eq
 8002ca8:	695b      	ldreq	r3, [r3, #20]
 8002caa:	699b      	ldrne	r3, [r3, #24]
 8002cac:	43db      	mvns	r3, r3
 8002cae:	b29b      	uxth	r3, r3
 8002cb0:	4233      	tst	r3, r6
 8002cb2:	bf0c      	ite	eq
 8002cb4:	2301      	moveq	r3, #1
 8002cb6:	2300      	movne	r3, #0
 8002cb8:	2b00      	cmp	r3, #0
 8002cba:	d1ef      	bne.n	8002c9c <I2C_WaitOnFlagUntilTimeout+0x4a>
          return HAL_TIMEOUT;
        }
      }
    }
  }
  return HAL_OK;
 8002cbc:	2000      	movs	r0, #0
 8002cbe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    while(__HAL_I2C_GET_FLAG(hi2c, Flag) != RESET)
    {
      /* Check for the Timeout */
      if(Timeout != HAL_MAX_DELAY)
      {
        if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 8002cc2:	b95d      	cbnz	r5, 8002cdc <I2C_WaitOnFlagUntilTimeout+0x8a>
        {
          hi2c->State= HAL_I2C_STATE_READY;
 8002cc4:	2301      	movs	r3, #1
 8002cc6:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8002cca:	2300      	movs	r3, #0
 8002ccc:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34

          return HAL_TIMEOUT;
 8002cd0:	2003      	movs	r0, #3
 8002cd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      }
    }
  }
  else
  {
    while(__HAL_I2C_GET_FLAG(hi2c, Flag) != RESET)
 8002cd6:	fa5f f883 	uxtb.w	r8, r3
 8002cda:	e7e1      	b.n	8002ca0 <I2C_WaitOnFlagUntilTimeout+0x4e>
    {
      /* Check for the Timeout */
      if(Timeout != HAL_MAX_DELAY)
      {
        if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 8002cdc:	f001 f8c6 	bl	8003e6c <HAL_GetTick>
 8002ce0:	1bc0      	subs	r0, r0, r7
 8002ce2:	42a8      	cmp	r0, r5
 8002ce4:	d9dc      	bls.n	8002ca0 <I2C_WaitOnFlagUntilTimeout+0x4e>
 8002ce6:	e7ed      	b.n	8002cc4 <I2C_WaitOnFlagUntilTimeout+0x72>

08002ce8 <I2C_MasterRequestWrite>:
  * @param  DevAddress: Target device address
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout)
{
 8002ce8:	b570      	push	{r4, r5, r6, lr}
 8002cea:	4616      	mov	r6, r2
  /* Generate Start */
  hi2c->Instance->CR1 |= I2C_CR1_START;
 8002cec:	6802      	ldr	r2, [r0, #0]
 8002cee:	6813      	ldr	r3, [r2, #0]
 8002cf0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002cf4:	6013      	str	r3, [r2, #0]
  * @param  DevAddress: Target device address
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout)
{
 8002cf6:	460d      	mov	r5, r1
  /* Generate Start */
  hi2c->Instance->CR1 |= I2C_CR1_START;

  /* Wait until SB flag is set */
  if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout) != HAL_OK)
 8002cf8:	2200      	movs	r2, #0
 8002cfa:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8002cfe:	4633      	mov	r3, r6
  * @param  DevAddress: Target device address
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout)
{
 8002d00:	4604      	mov	r4, r0
  /* Generate Start */
  hi2c->Instance->CR1 |= I2C_CR1_START;

  /* Wait until SB flag is set */
  if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout) != HAL_OK)
 8002d02:	f7ff ffa6 	bl	8002c52 <I2C_WaitOnFlagUntilTimeout>
 8002d06:	bb20      	cbnz	r0, 8002d52 <I2C_MasterRequestWrite+0x6a>
  {
    return HAL_TIMEOUT;
  }

  if(hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8002d08:	6923      	ldr	r3, [r4, #16]
 8002d0a:	6822      	ldr	r2, [r4, #0]
 8002d0c:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8002d10:	d103      	bne.n	8002d1a <I2C_MasterRequestWrite+0x32>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8002d12:	f005 05fe 	and.w	r5, r5, #254	; 0xfe
 8002d16:	6115      	str	r5, [r2, #16]
 8002d18:	e013      	b.n	8002d42 <I2C_MasterRequestWrite+0x5a>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8002d1a:	f405 7340 	and.w	r3, r5, #768	; 0x300
 8002d1e:	11db      	asrs	r3, r3, #7
 8002d20:	f043 03f0 	orr.w	r3, r3, #240	; 0xf0
 8002d24:	6113      	str	r3, [r2, #16]

    /* Wait until ADD10 flag is set */
    if(I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout) != HAL_OK)
 8002d26:	4620      	mov	r0, r4
 8002d28:	490b      	ldr	r1, [pc, #44]	; (8002d58 <I2C_MasterRequestWrite+0x70>)
 8002d2a:	4632      	mov	r2, r6
 8002d2c:	f7ff ff52 	bl	8002bd4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8002d30:	b120      	cbz	r0, 8002d3c <I2C_MasterRequestWrite+0x54>
    {
      if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8002d32:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8002d34:	2b04      	cmp	r3, #4
 8002d36:	d10c      	bne.n	8002d52 <I2C_MasterRequestWrite+0x6a>
      {
        return HAL_ERROR;
 8002d38:	2001      	movs	r0, #1
 8002d3a:	bd70      	pop	{r4, r5, r6, pc}
        return HAL_TIMEOUT;
      }
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8002d3c:	6823      	ldr	r3, [r4, #0]
 8002d3e:	b2ed      	uxtb	r5, r5
 8002d40:	611d      	str	r5, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if(I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout) != HAL_OK)
 8002d42:	4620      	mov	r0, r4
 8002d44:	4905      	ldr	r1, [pc, #20]	; (8002d5c <I2C_MasterRequestWrite+0x74>)
 8002d46:	4632      	mov	r2, r6
 8002d48:	f7ff ff44 	bl	8002bd4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8002d4c:	2800      	cmp	r0, #0
 8002d4e:	d1f0      	bne.n	8002d32 <I2C_MasterRequestWrite+0x4a>
 8002d50:	e000      	b.n	8002d54 <I2C_MasterRequestWrite+0x6c>
  hi2c->Instance->CR1 |= I2C_CR1_START;

  /* Wait until SB flag is set */
  if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout) != HAL_OK)
  {
    return HAL_TIMEOUT;
 8002d52:	2003      	movs	r0, #3
      return HAL_TIMEOUT;
    }
  }

  return HAL_OK;
}
 8002d54:	bd70      	pop	{r4, r5, r6, pc}
 8002d56:	bf00      	nop
 8002d58:	00010008 	.word	0x00010008
 8002d5c:	00010002 	.word	0x00010002

08002d60 <I2C_MasterRequestRead>:
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout)
{
  /* Enable Acknowledge */
  hi2c->Instance->CR1 |= I2C_CR1_ACK;
 8002d60:	6803      	ldr	r3, [r0, #0]
  * @param  DevAddress: Target device address
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout)
{
 8002d62:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002d64:	4616      	mov	r6, r2
  /* Enable Acknowledge */
  hi2c->Instance->CR1 |= I2C_CR1_ACK;
 8002d66:	681a      	ldr	r2, [r3, #0]
 8002d68:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8002d6c:	601a      	str	r2, [r3, #0]

  /* Generate Start */
  hi2c->Instance->CR1 |= I2C_CR1_START;
 8002d6e:	681a      	ldr	r2, [r3, #0]
 8002d70:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002d74:	601a      	str	r2, [r3, #0]
  * @param  DevAddress: Target device address
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout)
{
 8002d76:	460d      	mov	r5, r1

  /* Generate Start */
  hi2c->Instance->CR1 |= I2C_CR1_START;

  /* Wait until SB flag is set */
  if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout) != HAL_OK)
 8002d78:	2200      	movs	r2, #0
 8002d7a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8002d7e:	4633      	mov	r3, r6
  * @param  DevAddress: Target device address
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout)
{
 8002d80:	4604      	mov	r4, r0

  /* Generate Start */
  hi2c->Instance->CR1 |= I2C_CR1_START;

  /* Wait until SB flag is set */
  if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout) != HAL_OK)
 8002d82:	f7ff ff66 	bl	8002c52 <I2C_WaitOnFlagUntilTimeout>
 8002d86:	b9d0      	cbnz	r0, 8002dbe <I2C_MasterRequestRead+0x5e>
  {
    return HAL_TIMEOUT;
  }

  if(hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8002d88:	6923      	ldr	r3, [r4, #16]
 8002d8a:	6822      	ldr	r2, [r4, #0]
 8002d8c:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8002d90:	d104      	bne.n	8002d9c <I2C_MasterRequestRead+0x3c>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8002d92:	f045 0501 	orr.w	r5, r5, #1
 8002d96:	b2ed      	uxtb	r5, r5
 8002d98:	6115      	str	r5, [r2, #16]
 8002d9a:	e033      	b.n	8002e04 <I2C_MasterRequestRead+0xa4>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8002d9c:	f405 7340 	and.w	r3, r5, #768	; 0x300
 8002da0:	09df      	lsrs	r7, r3, #7
 8002da2:	f047 03f0 	orr.w	r3, r7, #240	; 0xf0
 8002da6:	6113      	str	r3, [r2, #16]

    /* Wait until ADD10 flag is set */
    if(I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout) != HAL_OK)
 8002da8:	4620      	mov	r0, r4
 8002daa:	491b      	ldr	r1, [pc, #108]	; (8002e18 <I2C_MasterRequestRead+0xb8>)
 8002dac:	4632      	mov	r2, r6
 8002dae:	f7ff ff11 	bl	8002bd4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8002db2:	b130      	cbz	r0, 8002dc2 <I2C_MasterRequestRead+0x62>
    {
      if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8002db4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8002db6:	2b04      	cmp	r3, #4
 8002db8:	d101      	bne.n	8002dbe <I2C_MasterRequestRead+0x5e>
      {
        return HAL_ERROR;
 8002dba:	2001      	movs	r0, #1
 8002dbc:	e029      	b.n	8002e12 <I2C_MasterRequestRead+0xb2>
      }
      else
      {
        return HAL_TIMEOUT;
 8002dbe:	2003      	movs	r0, #3
 8002dc0:	e027      	b.n	8002e12 <I2C_MasterRequestRead+0xb2>
      }
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8002dc2:	6823      	ldr	r3, [r4, #0]

    /* Wait until ADDR flag is set */
    if(I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout) != HAL_OK)
 8002dc4:	4915      	ldr	r1, [pc, #84]	; (8002e1c <I2C_MasterRequestRead+0xbc>)
        return HAL_TIMEOUT;
      }
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8002dc6:	b2ed      	uxtb	r5, r5

    /* Wait until ADDR flag is set */
    if(I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout) != HAL_OK)
 8002dc8:	4632      	mov	r2, r6
        return HAL_TIMEOUT;
      }
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8002dca:	611d      	str	r5, [r3, #16]

    /* Wait until ADDR flag is set */
    if(I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout) != HAL_OK)
 8002dcc:	4620      	mov	r0, r4
 8002dce:	f7ff ff01 	bl	8002bd4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8002dd2:	4602      	mov	r2, r0
 8002dd4:	2800      	cmp	r0, #0
 8002dd6:	d1ed      	bne.n	8002db4 <I2C_MasterRequestRead+0x54>
        return HAL_TIMEOUT;
      }
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8002dd8:	6823      	ldr	r3, [r4, #0]
 8002dda:	6959      	ldr	r1, [r3, #20]
 8002ddc:	9101      	str	r1, [sp, #4]
 8002dde:	6999      	ldr	r1, [r3, #24]
 8002de0:	9101      	str	r1, [sp, #4]
 8002de2:	9901      	ldr	r1, [sp, #4]

    /* Generate Restart */
    hi2c->Instance->CR1 |= I2C_CR1_START;
 8002de4:	6819      	ldr	r1, [r3, #0]
 8002de6:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8002dea:	6019      	str	r1, [r3, #0]

    /* Wait until SB flag is set */
    if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout) != HAL_OK)
 8002dec:	4620      	mov	r0, r4
 8002dee:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8002df2:	4633      	mov	r3, r6
 8002df4:	f7ff ff2d 	bl	8002c52 <I2C_WaitOnFlagUntilTimeout>
 8002df8:	2800      	cmp	r0, #0
 8002dfa:	d1e0      	bne.n	8002dbe <I2C_MasterRequestRead+0x5e>
    {
      return HAL_TIMEOUT;
    }

    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_READ(DevAddress);
 8002dfc:	6822      	ldr	r2, [r4, #0]
 8002dfe:	f047 03f1 	orr.w	r3, r7, #241	; 0xf1
 8002e02:	6113      	str	r3, [r2, #16]
  }

  /* Wait until ADDR flag is set */
  if(I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout) != HAL_OK)
 8002e04:	4620      	mov	r0, r4
 8002e06:	4905      	ldr	r1, [pc, #20]	; (8002e1c <I2C_MasterRequestRead+0xbc>)
 8002e08:	4632      	mov	r2, r6
 8002e0a:	f7ff fee3 	bl	8002bd4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8002e0e:	2800      	cmp	r0, #0
 8002e10:	d1d0      	bne.n	8002db4 <I2C_MasterRequestRead+0x54>
      return HAL_TIMEOUT;
    }
  }

  return HAL_OK;
}
 8002e12:	b003      	add	sp, #12
 8002e14:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002e16:	bf00      	nop
 8002e18:	00010008 	.word	0x00010008
 8002e1c:	00010002 	.word	0x00010002

08002e20 <HAL_I2C_Init>:
  * @param  hi2c: pointer to a I2C_HandleTypeDef structure that contains
  *         the configuration information for I2C module
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 8002e20:	b570      	push	{r4, r5, r6, lr}
  uint32_t freqrange = 0;
  uint32_t pclk1 = 0;

  /* Check the I2C handle allocation */
  if(hi2c == NULL)
 8002e22:	4604      	mov	r4, r0
 8002e24:	2800      	cmp	r0, #0
 8002e26:	f000 80bb 	beq.w	8002fa0 <HAL_I2C_Init+0x180>
  {
    return HAL_ERROR;
  }

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 8002e2a:	6803      	ldr	r3, [r0, #0]
 8002e2c:	4a5d      	ldr	r2, [pc, #372]	; (8002fa4 <HAL_I2C_Init+0x184>)
 8002e2e:	4293      	cmp	r3, r2
 8002e30:	d00c      	beq.n	8002e4c <HAL_I2C_Init+0x2c>
 8002e32:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8002e36:	4293      	cmp	r3, r2
 8002e38:	d008      	beq.n	8002e4c <HAL_I2C_Init+0x2c>
 8002e3a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8002e3e:	4293      	cmp	r3, r2
 8002e40:	d004      	beq.n	8002e4c <HAL_I2C_Init+0x2c>
 8002e42:	4859      	ldr	r0, [pc, #356]	; (8002fa8 <HAL_I2C_Init+0x188>)
 8002e44:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8002e48:	f7fe fb58 	bl	80014fc <assert_failed>
  assert_param(IS_I2C_CLOCK_SPEED(hi2c->Init.ClockSpeed));
 8002e4c:	6863      	ldr	r3, [r4, #4]
 8002e4e:	4a57      	ldr	r2, [pc, #348]	; (8002fac <HAL_I2C_Init+0x18c>)
 8002e50:	3b01      	subs	r3, #1
 8002e52:	4293      	cmp	r3, r2
 8002e54:	d904      	bls.n	8002e60 <HAL_I2C_Init+0x40>
 8002e56:	4854      	ldr	r0, [pc, #336]	; (8002fa8 <HAL_I2C_Init+0x188>)
 8002e58:	f240 112d 	movw	r1, #301	; 0x12d
 8002e5c:	f7fe fb4e 	bl	80014fc <assert_failed>
  assert_param(IS_I2C_DUTY_CYCLE(hi2c->Init.DutyCycle));
 8002e60:	68a3      	ldr	r3, [r4, #8]
 8002e62:	f433 4380 	bics.w	r3, r3, #16384	; 0x4000
 8002e66:	d004      	beq.n	8002e72 <HAL_I2C_Init+0x52>
 8002e68:	484f      	ldr	r0, [pc, #316]	; (8002fa8 <HAL_I2C_Init+0x188>)
 8002e6a:	f44f 7197 	mov.w	r1, #302	; 0x12e
 8002e6e:	f7fe fb45 	bl	80014fc <assert_failed>
  assert_param(IS_I2C_OWN_ADDRESS1(hi2c->Init.OwnAddress1));
 8002e72:	68e3      	ldr	r3, [r4, #12]
 8002e74:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8002e78:	f023 0303 	bic.w	r3, r3, #3
 8002e7c:	b123      	cbz	r3, 8002e88 <HAL_I2C_Init+0x68>
 8002e7e:	484a      	ldr	r0, [pc, #296]	; (8002fa8 <HAL_I2C_Init+0x188>)
 8002e80:	f240 112f 	movw	r1, #303	; 0x12f
 8002e84:	f7fe fb3a 	bl	80014fc <assert_failed>
  assert_param(IS_I2C_ADDRESSING_MODE(hi2c->Init.AddressingMode));
 8002e88:	6923      	ldr	r3, [r4, #16]
 8002e8a:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8002e8e:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8002e92:	d004      	beq.n	8002e9e <HAL_I2C_Init+0x7e>
 8002e94:	4844      	ldr	r0, [pc, #272]	; (8002fa8 <HAL_I2C_Init+0x188>)
 8002e96:	f44f 7198 	mov.w	r1, #304	; 0x130
 8002e9a:	f7fe fb2f 	bl	80014fc <assert_failed>
  assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
 8002e9e:	6963      	ldr	r3, [r4, #20]
 8002ea0:	2b01      	cmp	r3, #1
 8002ea2:	d904      	bls.n	8002eae <HAL_I2C_Init+0x8e>
 8002ea4:	4840      	ldr	r0, [pc, #256]	; (8002fa8 <HAL_I2C_Init+0x188>)
 8002ea6:	f240 1131 	movw	r1, #305	; 0x131
 8002eaa:	f7fe fb27 	bl	80014fc <assert_failed>
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
 8002eae:	69a3      	ldr	r3, [r4, #24]
 8002eb0:	f033 03fe 	bics.w	r3, r3, #254	; 0xfe
 8002eb4:	d004      	beq.n	8002ec0 <HAL_I2C_Init+0xa0>
 8002eb6:	483c      	ldr	r0, [pc, #240]	; (8002fa8 <HAL_I2C_Init+0x188>)
 8002eb8:	f44f 7199 	mov.w	r1, #306	; 0x132
 8002ebc:	f7fe fb1e 	bl	80014fc <assert_failed>
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
 8002ec0:	69e3      	ldr	r3, [r4, #28]
 8002ec2:	f033 0340 	bics.w	r3, r3, #64	; 0x40
 8002ec6:	d004      	beq.n	8002ed2 <HAL_I2C_Init+0xb2>
 8002ec8:	4837      	ldr	r0, [pc, #220]	; (8002fa8 <HAL_I2C_Init+0x188>)
 8002eca:	f240 1133 	movw	r1, #307	; 0x133
 8002ece:	f7fe fb15 	bl	80014fc <assert_failed>
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));
 8002ed2:	6a23      	ldr	r3, [r4, #32]
 8002ed4:	f033 0380 	bics.w	r3, r3, #128	; 0x80
 8002ed8:	d004      	beq.n	8002ee4 <HAL_I2C_Init+0xc4>
 8002eda:	4833      	ldr	r0, [pc, #204]	; (8002fa8 <HAL_I2C_Init+0x188>)
 8002edc:	f44f 719a 	mov.w	r1, #308	; 0x134
 8002ee0:	f7fe fb0c 	bl	80014fc <assert_failed>

  if(hi2c->State == HAL_I2C_STATE_RESET)
 8002ee4:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 8002ee8:	b913      	cbnz	r3, 8002ef0 <HAL_I2C_Init+0xd0>
  {
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_I2C_MspInit(hi2c);
 8002eea:	4620      	mov	r0, r4
 8002eec:	f7fe fb42 	bl	8001574 <HAL_I2C_MspInit>
  }

  hi2c->State = HAL_I2C_STATE_BUSY;

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 8002ef0:	6822      	ldr	r2, [r4, #0]
  /* Configure I2Cx: Frequency range */
  hi2c->Instance->CR2 = freqrange;

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  hi2c->Instance->TRISE = I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed);
 8002ef2:	4d2f      	ldr	r5, [pc, #188]	; (8002fb0 <HAL_I2C_Init+0x190>)
  {
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_I2C_MspInit(hi2c);
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 8002ef4:	2302      	movs	r3, #2
 8002ef6:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 8002efa:	6813      	ldr	r3, [r2, #0]
 8002efc:	f023 0301 	bic.w	r3, r3, #1
 8002f00:	6013      	str	r3, [r2, #0]

  /* Get PCLK1 frequency */
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8002f02:	f7ff fe37 	bl	8002b74 <HAL_RCC_GetPCLK1Freq>
  /* Configure I2Cx: Frequency range */
  hi2c->Instance->CR2 = freqrange;

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  hi2c->Instance->TRISE = I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed);
 8002f06:	6863      	ldr	r3, [r4, #4]
  /* Calculate frequency range */
  freqrange = I2C_FREQRANGE(pclk1);

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Frequency range */
  hi2c->Instance->CR2 = freqrange;
 8002f08:	6822      	ldr	r2, [r4, #0]

  /* Get PCLK1 frequency */
  pclk1 = HAL_RCC_GetPCLK1Freq();

  /* Calculate frequency range */
  freqrange = I2C_FREQRANGE(pclk1);
 8002f0a:	492a      	ldr	r1, [pc, #168]	; (8002fb4 <HAL_I2C_Init+0x194>)
 8002f0c:	fbb0 f1f1 	udiv	r1, r0, r1
  /* Configure I2Cx: Frequency range */
  hi2c->Instance->CR2 = freqrange;

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  hi2c->Instance->TRISE = I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed);
 8002f10:	42ab      	cmp	r3, r5
 8002f12:	462e      	mov	r6, r5
 8002f14:	bf88      	it	hi
 8002f16:	f44f 7596 	movhi.w	r5, #300	; 0x12c
  /* Calculate frequency range */
  freqrange = I2C_FREQRANGE(pclk1);

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Frequency range */
  hi2c->Instance->CR2 = freqrange;
 8002f1a:	6051      	str	r1, [r2, #4]

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  hi2c->Instance->TRISE = I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed);
 8002f1c:	bf82      	ittt	hi
 8002f1e:	4369      	mulhi	r1, r5
 8002f20:	f44f 757a 	movhi.w	r5, #1000	; 0x3e8
 8002f24:	fbb1 f1f5 	udivhi	r1, r1, r5

  /*---------------------------- I2Cx CCR Configuration ----------------------*/
  /* Configure I2Cx: Speed */
  hi2c->Instance->CCR = I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle);
 8002f28:	42b3      	cmp	r3, r6
  /* Configure I2Cx: Frequency range */
  hi2c->Instance->CR2 = freqrange;

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  hi2c->Instance->TRISE = I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed);
 8002f2a:	f101 0101 	add.w	r1, r1, #1
 8002f2e:	6211      	str	r1, [r2, #32]

  /*---------------------------- I2Cx CCR Configuration ----------------------*/
  /* Configure I2Cx: Speed */
  hi2c->Instance->CCR = I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle);
 8002f30:	d808      	bhi.n	8002f44 <HAL_I2C_Init+0x124>
 8002f32:	005b      	lsls	r3, r3, #1
 8002f34:	fbb0 f0f3 	udiv	r0, r0, r3
 8002f38:	f3c0 030b 	ubfx	r3, r0, #0, #12
 8002f3c:	2b03      	cmp	r3, #3
 8002f3e:	bf98      	it	ls
 8002f40:	2004      	movls	r0, #4
 8002f42:	e016      	b.n	8002f72 <HAL_I2C_Init+0x152>
 8002f44:	68a1      	ldr	r1, [r4, #8]
 8002f46:	b949      	cbnz	r1, 8002f5c <HAL_I2C_Init+0x13c>
 8002f48:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8002f4c:	fbb0 f0f3 	udiv	r0, r0, r3
 8002f50:	f3c0 030b 	ubfx	r3, r0, #0, #12
 8002f54:	b163      	cbz	r3, 8002f70 <HAL_I2C_Init+0x150>
 8002f56:	f440 4000 	orr.w	r0, r0, #32768	; 0x8000
 8002f5a:	e00a      	b.n	8002f72 <HAL_I2C_Init+0x152>
 8002f5c:	2119      	movs	r1, #25
 8002f5e:	434b      	muls	r3, r1
 8002f60:	fbb0 f0f3 	udiv	r0, r0, r3
 8002f64:	f3c0 030b 	ubfx	r3, r0, #0, #12
 8002f68:	b113      	cbz	r3, 8002f70 <HAL_I2C_Init+0x150>
 8002f6a:	f440 4040 	orr.w	r0, r0, #49152	; 0xc000
 8002f6e:	e000      	b.n	8002f72 <HAL_I2C_Init+0x152>
 8002f70:	2001      	movs	r0, #1

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8002f72:	6a21      	ldr	r1, [r4, #32]
 8002f74:	69e3      	ldr	r3, [r4, #28]
  /* Configure I2Cx: Rise Time */
  hi2c->Instance->TRISE = I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed);

  /*---------------------------- I2Cx CCR Configuration ----------------------*/
  /* Configure I2Cx: Speed */
  hi2c->Instance->CCR = I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle);
 8002f76:	61d0      	str	r0, [r2, #28]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8002f78:	430b      	orrs	r3, r1
 8002f7a:	6013      	str	r3, [r2, #0]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Configure I2Cx: Own Address1 and addressing mode */
  hi2c->Instance->OAR1 = (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1);
 8002f7c:	68e1      	ldr	r1, [r4, #12]
 8002f7e:	6923      	ldr	r3, [r4, #16]
 8002f80:	430b      	orrs	r3, r1
 8002f82:	6093      	str	r3, [r2, #8]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Configure I2Cx: Dual mode and Own Address2 */
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2);
 8002f84:	69a1      	ldr	r1, [r4, #24]
 8002f86:	6963      	ldr	r3, [r4, #20]
 8002f88:	430b      	orrs	r3, r1
 8002f8a:	60d3      	str	r3, [r2, #12]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 8002f8c:	6813      	ldr	r3, [r2, #0]
 8002f8e:	f043 0301 	orr.w	r3, r3, #1
 8002f92:	6013      	str	r3, [r2, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8002f94:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8002f96:	2301      	movs	r3, #1
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2);

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8002f98:	63a0      	str	r0, [r4, #56]	; 0x38
  hi2c->State = HAL_I2C_STATE_READY;
 8002f9a:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35

  return HAL_OK;
 8002f9e:	bd70      	pop	{r4, r5, r6, pc}
  uint32_t pclk1 = 0;

  /* Check the I2C handle allocation */
  if(hi2c == NULL)
  {
    return HAL_ERROR;
 8002fa0:	2001      	movs	r0, #1

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
  hi2c->State = HAL_I2C_STATE_READY;

  return HAL_OK;
}
 8002fa2:	bd70      	pop	{r4, r5, r6, pc}
 8002fa4:	40005400 	.word	0x40005400
 8002fa8:	080214ec 	.word	0x080214ec
 8002fac:	00061a7f 	.word	0x00061a7f
 8002fb0:	000186a0 	.word	0x000186a0
 8002fb4:	000f4240 	.word	0x000f4240

08002fb8 <HAL_I2C_Master_Transmit>:
  * @param  Size: Amount of data to be sent
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8002fb8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  if(hi2c->State == HAL_I2C_STATE_READY)
 8002fbc:	f890 4035 	ldrb.w	r4, [r0, #53]	; 0x35
 8002fc0:	b2e4      	uxtb	r4, r4
 8002fc2:	2c01      	cmp	r4, #1
  * @param  Size: Amount of data to be sent
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8002fc4:	4605      	mov	r5, r0
 8002fc6:	4617      	mov	r7, r2
 8002fc8:	461e      	mov	r6, r3
  if(hi2c->State == HAL_I2C_STATE_READY)
 8002fca:	d15e      	bne.n	800308a <HAL_I2C_Master_Transmit+0xd2>
  {
    if((pData == NULL) || (Size == 0))
 8002fcc:	2a00      	cmp	r2, #0
 8002fce:	d05a      	beq.n	8003086 <HAL_I2C_Master_Transmit+0xce>
 8002fd0:	2b00      	cmp	r3, #0
 8002fd2:	d058      	beq.n	8003086 <HAL_I2C_Master_Transmit+0xce>
    {
      return  HAL_ERROR;
    }

    if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 8002fd4:	6803      	ldr	r3, [r0, #0]
 8002fd6:	699b      	ldr	r3, [r3, #24]
 8002fd8:	f013 0802 	ands.w	r8, r3, #2
 8002fdc:	d155      	bne.n	800308a <HAL_I2C_Master_Transmit+0xd2>
    {
      return HAL_BUSY;
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8002fde:	f890 3034 	ldrb.w	r3, [r0, #52]	; 0x34
 8002fe2:	2b01      	cmp	r3, #1
 8002fe4:	d051      	beq.n	800308a <HAL_I2C_Master_Transmit+0xd2>

    hi2c->State = HAL_I2C_STATE_BUSY_TX;
 8002fe6:	2312      	movs	r3, #18
 8002fe8:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    {
      return HAL_BUSY;
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8002fec:	f880 4034 	strb.w	r4, [r0, #52]	; 0x34

    hi2c->State = HAL_I2C_STATE_BUSY_TX;
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8002ff0:	f8c0 8038 	str.w	r8, [r0, #56]	; 0x38

    /* Send Slave Address */
    if(I2C_MasterRequestWrite(hi2c, DevAddress, Timeout) != HAL_OK)
 8002ff4:	9a08      	ldr	r2, [sp, #32]
 8002ff6:	f7ff fe77 	bl	8002ce8 <I2C_MasterRequestWrite>
 8002ffa:	b128      	cbz	r0, 8003008 <HAL_I2C_Master_Transmit+0x50>
    {
      if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8002ffc:	6bab      	ldr	r3, [r5, #56]	; 0x38
      {
        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8002ffe:	f885 8034 	strb.w	r8, [r5, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;

    /* Send Slave Address */
    if(I2C_MasterRequestWrite(hi2c, DevAddress, Timeout) != HAL_OK)
    {
      if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8003002:	2b04      	cmp	r3, #4
 8003004:	d10d      	bne.n	8003022 <HAL_I2C_Master_Transmit+0x6a>
 8003006:	e03e      	b.n	8003086 <HAL_I2C_Master_Transmit+0xce>
        return HAL_TIMEOUT;
      }
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003008:	682b      	ldr	r3, [r5, #0]
 800300a:	695a      	ldr	r2, [r3, #20]
 800300c:	9201      	str	r2, [sp, #4]
 800300e:	699b      	ldr	r3, [r3, #24]
 8003010:	9301      	str	r3, [sp, #4]
 8003012:	9b01      	ldr	r3, [sp, #4]

    while(Size > 0)
    {
      /* Wait until TXE flag is set */
      if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TXE, RESET, Timeout) != HAL_OK)
 8003014:	491f      	ldr	r1, [pc, #124]	; (8003094 <HAL_I2C_Master_Transmit+0xdc>)
 8003016:	9b08      	ldr	r3, [sp, #32]
 8003018:	4628      	mov	r0, r5
 800301a:	2200      	movs	r2, #0
 800301c:	f7ff fe19 	bl	8002c52 <I2C_WaitOnFlagUntilTimeout>
 8003020:	b108      	cbz	r0, 8003026 <HAL_I2C_Master_Transmit+0x6e>
      {
        return HAL_TIMEOUT;
 8003022:	2003      	movs	r0, #3
 8003024:	e032      	b.n	800308c <HAL_I2C_Master_Transmit+0xd4>
      }

      /* Write data to DR */
      hi2c->Instance->DR = (*pData++);
 8003026:	682a      	ldr	r2, [r5, #0]
 8003028:	783b      	ldrb	r3, [r7, #0]
 800302a:	6113      	str	r3, [r2, #16]
      Size--;

      if((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (Size != 0))
 800302c:	6951      	ldr	r1, [r2, #20]
        return HAL_TIMEOUT;
      }

      /* Write data to DR */
      hi2c->Instance->DR = (*pData++);
      Size--;
 800302e:	1e73      	subs	r3, r6, #1

      if((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (Size != 0))
 8003030:	0749      	lsls	r1, r1, #29
        return HAL_TIMEOUT;
      }

      /* Write data to DR */
      hi2c->Instance->DR = (*pData++);
      Size--;
 8003032:	b29b      	uxth	r3, r3

      if((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (Size != 0))
 8003034:	d402      	bmi.n	800303c <HAL_I2C_Master_Transmit+0x84>
      {
        return HAL_TIMEOUT;
      }

      /* Write data to DR */
      hi2c->Instance->DR = (*pData++);
 8003036:	3701      	adds	r7, #1
      Size--;
 8003038:	461e      	mov	r6, r3
 800303a:	e00e      	b.n	800305a <HAL_I2C_Master_Transmit+0xa2>

      if((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (Size != 0))
 800303c:	b943      	cbnz	r3, 8003050 <HAL_I2C_Master_Transmit+0x98>
        Size--;
      }
    }

    /* Wait until TXE flag is set */
    if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TXE, RESET, Timeout) != HAL_OK)
 800303e:	4628      	mov	r0, r5
 8003040:	4914      	ldr	r1, [pc, #80]	; (8003094 <HAL_I2C_Master_Transmit+0xdc>)
 8003042:	9b08      	ldr	r3, [sp, #32]
 8003044:	2200      	movs	r2, #0
 8003046:	f7ff fe04 	bl	8002c52 <I2C_WaitOnFlagUntilTimeout>
 800304a:	2800      	cmp	r0, #0
 800304c:	d1e9      	bne.n	8003022 <HAL_I2C_Master_Transmit+0x6a>
 800304e:	e007      	b.n	8003060 <HAL_I2C_Master_Transmit+0xa8>
      Size--;

      if((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (Size != 0))
      {
        /* Write data to DR */
        hi2c->Instance->DR = (*pData++);
 8003050:	787b      	ldrb	r3, [r7, #1]
 8003052:	6113      	str	r3, [r2, #16]
        Size--;
 8003054:	3e02      	subs	r6, #2
 8003056:	b2b6      	uxth	r6, r6
      Size--;

      if((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (Size != 0))
      {
        /* Write data to DR */
        hi2c->Instance->DR = (*pData++);
 8003058:	3702      	adds	r7, #2
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);

    while(Size > 0)
 800305a:	2e00      	cmp	r6, #0
 800305c:	d1da      	bne.n	8003014 <HAL_I2C_Master_Transmit+0x5c>
 800305e:	e7ee      	b.n	800303e <HAL_I2C_Master_Transmit+0x86>
    {
      return HAL_TIMEOUT;
    }

    /* Generate Stop */
    hi2c->Instance->CR1 |= I2C_CR1_STOP;
 8003060:	682a      	ldr	r2, [r5, #0]

    /* Wait until BUSY flag is reset */
    if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout) != HAL_OK)
 8003062:	490d      	ldr	r1, [pc, #52]	; (8003098 <HAL_I2C_Master_Transmit+0xe0>)
    {
      return HAL_TIMEOUT;
    }

    /* Generate Stop */
    hi2c->Instance->CR1 |= I2C_CR1_STOP;
 8003064:	6813      	ldr	r3, [r2, #0]
 8003066:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800306a:	6013      	str	r3, [r2, #0]

    /* Wait until BUSY flag is reset */
    if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout) != HAL_OK)
 800306c:	4628      	mov	r0, r5
 800306e:	2201      	movs	r2, #1
 8003070:	9b08      	ldr	r3, [sp, #32]
 8003072:	f7ff fdee 	bl	8002c52 <I2C_WaitOnFlagUntilTimeout>
 8003076:	2800      	cmp	r0, #0
 8003078:	d1d3      	bne.n	8003022 <HAL_I2C_Master_Transmit+0x6a>
    {
      return HAL_TIMEOUT;
    }

    hi2c->State = HAL_I2C_STATE_READY;
 800307a:	2301      	movs	r3, #1
 800307c:	f885 3035 	strb.w	r3, [r5, #53]	; 0x35

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8003080:	f885 0034 	strb.w	r0, [r5, #52]	; 0x34

    return HAL_OK;
 8003084:	e002      	b.n	800308c <HAL_I2C_Master_Transmit+0xd4>
{
  if(hi2c->State == HAL_I2C_STATE_READY)
  {
    if((pData == NULL) || (Size == 0))
    {
      return  HAL_ERROR;
 8003086:	4620      	mov	r0, r4
 8003088:	e000      	b.n	800308c <HAL_I2C_Master_Transmit+0xd4>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800308a:	2002      	movs	r0, #2
  }
}
 800308c:	b002      	add	sp, #8
 800308e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003092:	bf00      	nop
 8003094:	00010080 	.word	0x00010080
 8003098:	00100002 	.word	0x00100002

0800309c <HAL_I2C_Master_Receive>:
  * @param  Size: Amount of data to be sent
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 800309c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
  if(hi2c->State == HAL_I2C_STATE_READY)
 80030a0:	f890 5035 	ldrb.w	r5, [r0, #53]	; 0x35
 80030a4:	b2ed      	uxtb	r5, r5
 80030a6:	2d01      	cmp	r5, #1
  * @param  Size: Amount of data to be sent
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80030a8:	4604      	mov	r4, r0
 80030aa:	4617      	mov	r7, r2
 80030ac:	461e      	mov	r6, r3
  if(hi2c->State == HAL_I2C_STATE_READY)
 80030ae:	f040 80a9 	bne.w	8003204 <HAL_I2C_Master_Receive+0x168>
  {
    if((pData == NULL) || (Size == 0))
 80030b2:	2a00      	cmp	r2, #0
 80030b4:	f000 80a4 	beq.w	8003200 <HAL_I2C_Master_Receive+0x164>
 80030b8:	2b00      	cmp	r3, #0
 80030ba:	f000 80a1 	beq.w	8003200 <HAL_I2C_Master_Receive+0x164>
    {
      return  HAL_ERROR;
    }

    if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 80030be:	6803      	ldr	r3, [r0, #0]
 80030c0:	699b      	ldr	r3, [r3, #24]
 80030c2:	f013 0802 	ands.w	r8, r3, #2
 80030c6:	f040 809d 	bne.w	8003204 <HAL_I2C_Master_Receive+0x168>
    {
      return HAL_BUSY;
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 80030ca:	f890 3034 	ldrb.w	r3, [r0, #52]	; 0x34
 80030ce:	2b01      	cmp	r3, #1
 80030d0:	f000 8098 	beq.w	8003204 <HAL_I2C_Master_Receive+0x168>

    hi2c->State = HAL_I2C_STATE_BUSY_RX;
 80030d4:	2322      	movs	r3, #34	; 0x22
 80030d6:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    {
      return HAL_BUSY;
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 80030da:	f880 5034 	strb.w	r5, [r0, #52]	; 0x34

    hi2c->State = HAL_I2C_STATE_BUSY_RX;
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80030de:	f8c0 8038 	str.w	r8, [r0, #56]	; 0x38

    /* Send Slave Address */
    if(I2C_MasterRequestRead(hi2c, DevAddress, Timeout) != HAL_OK)
 80030e2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80030e4:	f7ff fe3c 	bl	8002d60 <I2C_MasterRequestRead>
 80030e8:	b128      	cbz	r0, 80030f6 <HAL_I2C_Master_Receive+0x5a>
    {
      if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80030ea:	6ba3      	ldr	r3, [r4, #56]	; 0x38
      {
        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 80030ec:	f884 8034 	strb.w	r8, [r4, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;

    /* Send Slave Address */
    if(I2C_MasterRequestRead(hi2c, DevAddress, Timeout) != HAL_OK)
    {
      if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80030f0:	2b04      	cmp	r3, #4
 80030f2:	d133      	bne.n	800315c <HAL_I2C_Master_Receive+0xc0>
 80030f4:	e084      	b.n	8003200 <HAL_I2C_Master_Receive+0x164>
 80030f6:	6823      	ldr	r3, [r4, #0]
        __HAL_UNLOCK(hi2c);
        return HAL_TIMEOUT;
      }
    }

    if(Size == 1)
 80030f8:	2e01      	cmp	r6, #1
    {
      /* Disable Acknowledge */
      hi2c->Instance->CR1 &= ~I2C_CR1_ACK;
 80030fa:	681a      	ldr	r2, [r3, #0]
        __HAL_UNLOCK(hi2c);
        return HAL_TIMEOUT;
      }
    }

    if(Size == 1)
 80030fc:	d10c      	bne.n	8003118 <HAL_I2C_Master_Receive+0x7c>
    {
      /* Disable Acknowledge */
      hi2c->Instance->CR1 &= ~I2C_CR1_ACK;
 80030fe:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003102:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003104:	695a      	ldr	r2, [r3, #20]
 8003106:	9201      	str	r2, [sp, #4]
 8003108:	699a      	ldr	r2, [r3, #24]
 800310a:	9201      	str	r2, [sp, #4]
 800310c:	9a01      	ldr	r2, [sp, #4]

      /* Generate Stop */
      hi2c->Instance->CR1 |= I2C_CR1_STOP;
 800310e:	681a      	ldr	r2, [r3, #0]
 8003110:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003114:	601a      	str	r2, [r3, #0]
 8003116:	e016      	b.n	8003146 <HAL_I2C_Master_Receive+0xaa>
    }
    else if(Size == 2)
 8003118:	2e02      	cmp	r6, #2
 800311a:	d10c      	bne.n	8003136 <HAL_I2C_Master_Receive+0x9a>
    {
      /* Disable Acknowledge */
      hi2c->Instance->CR1 &= ~I2C_CR1_ACK;
 800311c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003120:	601a      	str	r2, [r3, #0]

      /* Enable Pos */
      hi2c->Instance->CR1 |= I2C_CR1_POS;
 8003122:	681a      	ldr	r2, [r3, #0]
 8003124:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8003128:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800312a:	695a      	ldr	r2, [r3, #20]
 800312c:	9202      	str	r2, [sp, #8]
 800312e:	699b      	ldr	r3, [r3, #24]
 8003130:	9302      	str	r3, [sp, #8]
 8003132:	9b02      	ldr	r3, [sp, #8]
 8003134:	e007      	b.n	8003146 <HAL_I2C_Master_Receive+0xaa>
    }
    else
    {
      /* Enable Acknowledge */
      hi2c->Instance->CR1 |= I2C_CR1_ACK;
 8003136:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800313a:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800313c:	695a      	ldr	r2, [r3, #20]
 800313e:	9203      	str	r2, [sp, #12]
 8003140:	699b      	ldr	r3, [r3, #24]
 8003142:	9303      	str	r3, [sp, #12]
 8003144:	9b03      	ldr	r3, [sp, #12]
    }

    while(Size > 0)
    {
      if(Size <= 3)
 8003146:	2e03      	cmp	r6, #3
      {
        /* One byte */
        if(Size == 1)
        {
          /* Wait until RXNE flag is set */
          if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 8003148:	4620      	mov	r0, r4
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
    }

    while(Size > 0)
    {
      if(Size <= 3)
 800314a:	d840      	bhi.n	80031ce <HAL_I2C_Master_Receive+0x132>
      {
        /* One byte */
        if(Size == 1)
 800314c:	2e01      	cmp	r6, #1
 800314e:	d10b      	bne.n	8003168 <HAL_I2C_Master_Receive+0xcc>
        {
          /* Wait until RXNE flag is set */
          if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 8003150:	4938      	ldr	r1, [pc, #224]	; (8003234 <HAL_I2C_Master_Receive+0x198>)
 8003152:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003154:	2200      	movs	r2, #0
 8003156:	f7ff fd7c 	bl	8002c52 <I2C_WaitOnFlagUntilTimeout>
 800315a:	b108      	cbz	r0, 8003160 <HAL_I2C_Master_Receive+0xc4>
          {
            return HAL_TIMEOUT;
 800315c:	2003      	movs	r0, #3
 800315e:	e065      	b.n	800322c <HAL_I2C_Master_Receive+0x190>
          }

          /* Read data from DR */
          (*pData++) = hi2c->Instance->DR;
 8003160:	6823      	ldr	r3, [r4, #0]
 8003162:	691b      	ldr	r3, [r3, #16]
 8003164:	703b      	strb	r3, [r7, #0]
 8003166:	e04f      	b.n	8003208 <HAL_I2C_Master_Receive+0x16c>
          Size--;
        }
        /* Two bytes */
        else if(Size == 2)
 8003168:	2e02      	cmp	r6, #2
        {
          /* Wait until BTF flag is set */
          if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout) != HAL_OK)
 800316a:	4933      	ldr	r1, [pc, #204]	; (8003238 <HAL_I2C_Master_Receive+0x19c>)
 800316c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800316e:	f04f 0200 	mov.w	r2, #0
          /* Read data from DR */
          (*pData++) = hi2c->Instance->DR;
          Size--;
        }
        /* Two bytes */
        else if(Size == 2)
 8003172:	d10e      	bne.n	8003192 <HAL_I2C_Master_Receive+0xf6>
        {
          /* Wait until BTF flag is set */
          if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout) != HAL_OK)
 8003174:	f7ff fd6d 	bl	8002c52 <I2C_WaitOnFlagUntilTimeout>
 8003178:	2800      	cmp	r0, #0
 800317a:	d1ef      	bne.n	800315c <HAL_I2C_Master_Receive+0xc0>
          {
            return HAL_TIMEOUT;
          }

          /* Generate Stop */
          hi2c->Instance->CR1 |= I2C_CR1_STOP;
 800317c:	6823      	ldr	r3, [r4, #0]
 800317e:	681a      	ldr	r2, [r3, #0]
 8003180:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003184:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          (*pData++) = hi2c->Instance->DR;
 8003186:	691b      	ldr	r3, [r3, #16]
 8003188:	703b      	strb	r3, [r7, #0]
          Size--;

          /* Read data from DR */
          (*pData++) = hi2c->Instance->DR;
 800318a:	6823      	ldr	r3, [r4, #0]
 800318c:	691b      	ldr	r3, [r3, #16]
 800318e:	707b      	strb	r3, [r7, #1]
 8003190:	e03a      	b.n	8003208 <HAL_I2C_Master_Receive+0x16c>
        }
        /* 3 Last bytes */
        else
        {
          /* Wait until BTF flag is set */
          if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout) != HAL_OK)
 8003192:	f7ff fd5e 	bl	8002c52 <I2C_WaitOnFlagUntilTimeout>
 8003196:	4602      	mov	r2, r0
 8003198:	2800      	cmp	r0, #0
 800319a:	d1df      	bne.n	800315c <HAL_I2C_Master_Receive+0xc0>
          {
            return HAL_TIMEOUT;
          }

          /* Disable Acknowledge */
          hi2c->Instance->CR1 &= ~I2C_CR1_ACK;
 800319c:	6823      	ldr	r3, [r4, #0]
 800319e:	6819      	ldr	r1, [r3, #0]
 80031a0:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 80031a4:	6019      	str	r1, [r3, #0]

          /* Read data from DR */
          (*pData++) = hi2c->Instance->DR;
 80031a6:	691b      	ldr	r3, [r3, #16]
 80031a8:	703b      	strb	r3, [r7, #0]
          Size--;

          /* Wait until BTF flag is set */
          if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout) != HAL_OK)
 80031aa:	4620      	mov	r0, r4
 80031ac:	4922      	ldr	r1, [pc, #136]	; (8003238 <HAL_I2C_Master_Receive+0x19c>)
 80031ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80031b0:	f7ff fd4f 	bl	8002c52 <I2C_WaitOnFlagUntilTimeout>
 80031b4:	2800      	cmp	r0, #0
 80031b6:	d1d1      	bne.n	800315c <HAL_I2C_Master_Receive+0xc0>
          {
            return HAL_TIMEOUT;
          }

          /* Generate Stop */
          hi2c->Instance->CR1 |= I2C_CR1_STOP;
 80031b8:	6823      	ldr	r3, [r4, #0]
 80031ba:	681a      	ldr	r2, [r3, #0]
 80031bc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80031c0:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          (*pData++) = hi2c->Instance->DR;
 80031c2:	691b      	ldr	r3, [r3, #16]
 80031c4:	707b      	strb	r3, [r7, #1]
          Size--;

          /* Read data from DR */
          (*pData++) = hi2c->Instance->DR;
 80031c6:	6823      	ldr	r3, [r4, #0]
 80031c8:	691b      	ldr	r3, [r3, #16]
 80031ca:	70bb      	strb	r3, [r7, #2]
 80031cc:	e01c      	b.n	8003208 <HAL_I2C_Master_Receive+0x16c>
        }
      }
      else
      {
        /* Wait until RXNE flag is set */
        if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 80031ce:	4919      	ldr	r1, [pc, #100]	; (8003234 <HAL_I2C_Master_Receive+0x198>)
 80031d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80031d2:	2200      	movs	r2, #0
 80031d4:	f7ff fd3d 	bl	8002c52 <I2C_WaitOnFlagUntilTimeout>
 80031d8:	2800      	cmp	r0, #0
 80031da:	d1bf      	bne.n	800315c <HAL_I2C_Master_Receive+0xc0>
        {
          return HAL_TIMEOUT;
        }

        /* Read data from DR */
        (*pData++) = hi2c->Instance->DR;
 80031dc:	6823      	ldr	r3, [r4, #0]
 80031de:	691b      	ldr	r3, [r3, #16]
 80031e0:	703b      	strb	r3, [r7, #0]
        Size--;

        if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80031e2:	6822      	ldr	r2, [r4, #0]
 80031e4:	6953      	ldr	r3, [r2, #20]
 80031e6:	075b      	lsls	r3, r3, #29
        {
          return HAL_TIMEOUT;
        }

        /* Read data from DR */
        (*pData++) = hi2c->Instance->DR;
 80031e8:	bf59      	ittee	pl
 80031ea:	1c7b      	addpl	r3, r7, #1
        Size--;
 80031ec:	f106 36ff 	addpl.w	r6, r6, #4294967295

        if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
        {
          /* Read data from DR */
          (*pData++) = hi2c->Instance->DR;
 80031f0:	1cbb      	addmi	r3, r7, #2
 80031f2:	6912      	ldrmi	r2, [r2, #16]
 80031f4:	bf44      	itt	mi
 80031f6:	707a      	strbmi	r2, [r7, #1]
          Size--;
 80031f8:	3e02      	submi	r6, #2
 80031fa:	b2b6      	uxth	r6, r6
 80031fc:	461f      	mov	r7, r3
 80031fe:	e7a2      	b.n	8003146 <HAL_I2C_Master_Receive+0xaa>
{
  if(hi2c->State == HAL_I2C_STATE_READY)
  {
    if((pData == NULL) || (Size == 0))
    {
      return  HAL_ERROR;
 8003200:	4628      	mov	r0, r5
 8003202:	e013      	b.n	800322c <HAL_I2C_Master_Receive+0x190>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 8003204:	2002      	movs	r0, #2
 8003206:	e011      	b.n	800322c <HAL_I2C_Master_Receive+0x190>
        }
      }
    }

    /* Disable Pos */
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 8003208:	6822      	ldr	r2, [r4, #0]

    /* Wait until BUSY flag is reset */
    if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout) != HAL_OK)
 800320a:	490c      	ldr	r1, [pc, #48]	; (800323c <HAL_I2C_Master_Receive+0x1a0>)
        }
      }
    }

    /* Disable Pos */
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800320c:	6813      	ldr	r3, [r2, #0]
 800320e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8003212:	6013      	str	r3, [r2, #0]

    /* Wait until BUSY flag is reset */
    if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout) != HAL_OK)
 8003214:	4620      	mov	r0, r4
 8003216:	2201      	movs	r2, #1
 8003218:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800321a:	f7ff fd1a 	bl	8002c52 <I2C_WaitOnFlagUntilTimeout>
 800321e:	2800      	cmp	r0, #0
 8003220:	d19c      	bne.n	800315c <HAL_I2C_Master_Receive+0xc0>
    {
      return HAL_TIMEOUT;
    }

    hi2c->State = HAL_I2C_STATE_READY;
 8003222:	2301      	movs	r3, #1
 8003224:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8003228:	f884 0034 	strb.w	r0, [r4, #52]	; 0x34
  }
  else
  {
    return HAL_BUSY;
  }
}
 800322c:	b004      	add	sp, #16
 800322e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003232:	bf00      	nop
 8003234:	00010040 	.word	0x00010040
 8003238:	00010004 	.word	0x00010004
 800323c:	00100002 	.word	0x00100002

08003240 <HAL_I2C_GetState>:
  *         the configuration information for I2C module
  * @retval HAL state
  */
HAL_I2C_StateTypeDef HAL_I2C_GetState(I2C_HandleTypeDef *hi2c)
{
  return hi2c->State;
 8003240:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 8003244:	4770      	bx	lr
	...

08003248 <HAL_NVIC_SetPriorityGrouping>:
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 8003248:	1ec3      	subs	r3, r0, #3
 800324a:	2b04      	cmp	r3, #4
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 800324c:	b510      	push	{r4, lr}
 800324e:	4604      	mov	r4, r0
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 8003250:	d903      	bls.n	800325a <HAL_NVIC_SetPriorityGrouping+0x12>
 8003252:	4809      	ldr	r0, [pc, #36]	; (8003278 <HAL_NVIC_SetPriorityGrouping+0x30>)
 8003254:	21a4      	movs	r1, #164	; 0xa4
 8003256:	f7fe f951 	bl	80014fc <assert_failed>
__STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07);               /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800325a:	4a08      	ldr	r2, [pc, #32]	; (800327c <HAL_NVIC_SetPriorityGrouping+0x34>)
 800325c:	68d1      	ldr	r1, [r2, #12]
  reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to change               */
 800325e:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8003262:	400b      	ands	r3, r1
 8003264:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8003268:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
    \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07);               /* only values 0..7 are used          */
 800326c:	f004 0407 	and.w	r4, r4, #7

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
  reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to change               */
  reg_value  =  (reg_value                                 |
 8003270:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
                ((uint32_t)0x5FA << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << 8));                                     /* Insert write key and priorty group */
  SCB->AIRCR =  reg_value;
 8003274:	60d3      	str	r3, [r2, #12]
 8003276:	bd10      	pop	{r4, pc}
 8003278:	0802153b 	.word	0x0802153b
 800327c:	e000ed00 	.word	0xe000ed00

08003280 <HAL_NVIC_SetPriority>:
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
  uint32_t prioritygroup = 0x00;
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 8003280:	2a0f      	cmp	r2, #15
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8003282:	b570      	push	{r4, r5, r6, lr}
 8003284:	4605      	mov	r5, r0
 8003286:	460c      	mov	r4, r1
 8003288:	4616      	mov	r6, r2
  uint32_t prioritygroup = 0x00;
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 800328a:	d903      	bls.n	8003294 <HAL_NVIC_SetPriority+0x14>
 800328c:	481a      	ldr	r0, [pc, #104]	; (80032f8 <HAL_NVIC_SetPriority+0x78>)
 800328e:	21bc      	movs	r1, #188	; 0xbc
 8003290:	f7fe f934 	bl	80014fc <assert_failed>
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 8003294:	2c0f      	cmp	r4, #15
 8003296:	d903      	bls.n	80032a0 <HAL_NVIC_SetPriority+0x20>
 8003298:	4817      	ldr	r0, [pc, #92]	; (80032f8 <HAL_NVIC_SetPriority+0x78>)
 800329a:	21bd      	movs	r1, #189	; 0xbd
 800329c:	f7fe f92e 	bl	80014fc <assert_failed>

    \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
{
  return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grouping field */
 80032a0:	4b16      	ldr	r3, [pc, #88]	; (80032fc <HAL_NVIC_SetPriority+0x7c>)
 80032a2:	68db      	ldr	r3, [r3, #12]
 80032a4:	f3c3 2302 	ubfx	r3, r3, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - PriorityGroupTmp;
 80032a8:	f1c3 0207 	rsb	r2, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __NVIC_PRIO_BITS;
 80032ac:	1d19      	adds	r1, r3, #4
{
  uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - PriorityGroupTmp;
 80032ae:	2a04      	cmp	r2, #4
 80032b0:	bf28      	it	cs
 80032b2:	2204      	movcs	r2, #4
  SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __NVIC_PRIO_BITS;
 80032b4:	2906      	cmp	r1, #6
 80032b6:	bf8c      	ite	hi
 80032b8:	3b03      	subhi	r3, #3
 80032ba:	2300      	movls	r3, #0

  return (
           ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
           ((SubPriority     & ((1 << (SubPriorityBits    )) - 1)))
 80032bc:	2101      	movs	r1, #1
 80032be:	fa01 f003 	lsl.w	r0, r1, r3

  PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - PriorityGroupTmp;
  SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __NVIC_PRIO_BITS;

  return (
           ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
 80032c2:	4091      	lsls	r1, r2
 80032c4:	3901      	subs	r1, #1
           ((SubPriority     & ((1 << (SubPriorityBits    )) - 1)))
 80032c6:	3801      	subs	r0, #1

  PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - PriorityGroupTmp;
  SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __NVIC_PRIO_BITS;

  return (
           ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
 80032c8:	400c      	ands	r4, r1
 80032ca:	409c      	lsls	r4, r3
           ((SubPriority     & ((1 << (SubPriorityBits    )) - 1)))
 80032cc:	4006      	ands	r6, r0
    \param [in]      IRQn  Interrupt number.
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
 80032ce:	2d00      	cmp	r5, #0
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - PriorityGroupTmp;
  SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __NVIC_PRIO_BITS;

  return (
 80032d0:	ea44 0406 	orr.w	r4, r4, r6
 80032d4:	ea4f 1404 	mov.w	r4, r4, lsl #4
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
 80032d8:	bfaf      	iteee	ge
 80032da:	f105 4560 	addge.w	r5, r5, #3758096384	; 0xe0000000
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
 80032de:	f005 050f 	andlt.w	r5, r5, #15
 80032e2:	4b07      	ldrlt	r3, [pc, #28]	; (8003300 <HAL_NVIC_SetPriority+0x80>)
 80032e4:	b2e4      	uxtblt	r4, r4
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
 80032e6:	bfa5      	ittet	ge
 80032e8:	f505 4561 	addge.w	r5, r5, #57600	; 0xe100
 80032ec:	b2e4      	uxtbge	r4, r4
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
 80032ee:	555c      	strblt	r4, [r3, r5]
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
 80032f0:	f885 4300 	strbge.w	r4, [r5, #768]	; 0x300
 80032f4:	bd70      	pop	{r4, r5, r6, pc}
 80032f6:	bf00      	nop
 80032f8:	0802153b 	.word	0x0802153b
 80032fc:	e000ed00 	.word	0xe000ed00
 8003300:	e000ed14 	.word	0xe000ed14

08003304 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8003304:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 8003306:	1e04      	subs	r4, r0, #0
 8003308:	da03      	bge.n	8003312 <HAL_NVIC_EnableIRQ+0xe>
 800330a:	4806      	ldr	r0, [pc, #24]	; (8003324 <HAL_NVIC_EnableIRQ+0x20>)
 800330c:	21d0      	movs	r1, #208	; 0xd0
 800330e:	f7fe f8f5 	bl	80014fc <assert_failed>
    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
/*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
 8003312:	0961      	lsrs	r1, r4, #5
 8003314:	2301      	movs	r3, #1
 8003316:	f004 041f 	and.w	r4, r4, #31
 800331a:	4a03      	ldr	r2, [pc, #12]	; (8003328 <HAL_NVIC_EnableIRQ+0x24>)
 800331c:	40a3      	lsls	r3, r4
 800331e:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 8003322:	bd10      	pop	{r4, pc}
 8003324:	0802153b 	.word	0x0802153b
 8003328:	e000e100 	.word	0xe000e100

0800332c <HAL_SYSTICK_Config>:
    must contain a vendor-specific implementation of this function.

 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1) > SysTick_LOAD_RELOAD_Msk)  return (1);      /* Reload value impossible */
 800332c:	3801      	subs	r0, #1
 800332e:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000

  SysTick->LOAD  = ticks - 1;                                  /* set reload register */
 8003332:	bf3f      	itttt	cc
 8003334:	4b06      	ldrcc	r3, [pc, #24]	; (8003350 <HAL_SYSTICK_Config+0x24>)
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
 8003336:	4a07      	ldrcc	r2, [pc, #28]	; (8003354 <HAL_SYSTICK_Config+0x28>)
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1) > SysTick_LOAD_RELOAD_Msk)  return (1);      /* Reload value impossible */

  SysTick->LOAD  = ticks - 1;                                  /* set reload register */
 8003338:	6058      	strcc	r0, [r3, #4]
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
 800333a:	21f0      	movcc	r1, #240	; 0xf0
 800333c:	bf3f      	itttt	cc
 800333e:	f882 1023 	strbcc.w	r1, [r2, #35]	; 0x23
{
  if ((ticks - 1) > SysTick_LOAD_RELOAD_Msk)  return (1);      /* Reload value impossible */

  SysTick->LOAD  = ticks - 1;                                  /* set reload register */
  NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
 8003342:	2000      	movcc	r0, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8003344:	2207      	movcc	r2, #7
{
  if ((ticks - 1) > SysTick_LOAD_RELOAD_Msk)  return (1);      /* Reload value impossible */

  SysTick->LOAD  = ticks - 1;                                  /* set reload register */
  NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
 8003346:	6098      	strcc	r0, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8003348:	bf34      	ite	cc
 800334a:	601a      	strcc	r2, [r3, #0]
    must contain a vendor-specific implementation of this function.

 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1) > SysTick_LOAD_RELOAD_Msk)  return (1);      /* Reload value impossible */
 800334c:	2001      	movcs	r0, #1
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 800334e:	4770      	bx	lr
 8003350:	e000e010 	.word	0xe000e010
 8003354:	e000ed00 	.word	0xe000ed00

08003358 <UART_SetConfig>:
  * @param  huart: pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 8003358:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  uint32_t tmpreg = 0x00;
  
  /* Check the parameters */
  assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));  
 800335c:	6842      	ldr	r2, [r0, #4]
 800335e:	4b62      	ldr	r3, [pc, #392]	; (80034e8 <UART_SetConfig+0x190>)
 8003360:	429a      	cmp	r2, r3
  * @param  huart: pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 8003362:	4604      	mov	r4, r0
  uint32_t tmpreg = 0x00;
  
  /* Check the parameters */
  assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));  
 8003364:	d904      	bls.n	8003370 <UART_SetConfig+0x18>
 8003366:	4861      	ldr	r0, [pc, #388]	; (80034ec <UART_SetConfig+0x194>)
 8003368:	f240 712e 	movw	r1, #1838	; 0x72e
 800336c:	f7fe f8c6 	bl	80014fc <assert_failed>
  assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 8003370:	68e3      	ldr	r3, [r4, #12]
 8003372:	f433 5300 	bics.w	r3, r3, #8192	; 0x2000
 8003376:	d004      	beq.n	8003382 <UART_SetConfig+0x2a>
 8003378:	485c      	ldr	r0, [pc, #368]	; (80034ec <UART_SetConfig+0x194>)
 800337a:	f240 712f 	movw	r1, #1839	; 0x72f
 800337e:	f7fe f8bd 	bl	80014fc <assert_failed>
  assert_param(IS_UART_PARITY(huart->Init.Parity));
 8003382:	6923      	ldr	r3, [r4, #16]
 8003384:	f433 6280 	bics.w	r2, r3, #1024	; 0x400
 8003388:	d007      	beq.n	800339a <UART_SetConfig+0x42>
 800338a:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 800338e:	d004      	beq.n	800339a <UART_SetConfig+0x42>
 8003390:	4856      	ldr	r0, [pc, #344]	; (80034ec <UART_SetConfig+0x194>)
 8003392:	f44f 61e6 	mov.w	r1, #1840	; 0x730
 8003396:	f7fe f8b1 	bl	80014fc <assert_failed>
  assert_param(IS_UART_MODE(huart->Init.Mode));
 800339a:	6962      	ldr	r2, [r4, #20]
 800339c:	f64f 73f3 	movw	r3, #65523	; 0xfff3
 80033a0:	4013      	ands	r3, r2
 80033a2:	b903      	cbnz	r3, 80033a6 <UART_SetConfig+0x4e>
 80033a4:	b922      	cbnz	r2, 80033b0 <UART_SetConfig+0x58>
 80033a6:	4851      	ldr	r0, [pc, #324]	; (80034ec <UART_SetConfig+0x194>)
 80033a8:	f240 7131 	movw	r1, #1841	; 0x731
 80033ac:	f7fe f8a6 	bl	80014fc <assert_failed>

  /*-------------------------- USART CR2 Configuration -----------------------*/
  tmpreg = huart->Instance->CR2;
 80033b0:	6826      	ldr	r6, [r4, #0]
  /* Configure the UART Word Length, Parity and mode: 
     Set the M bits according to huart->Init.WordLength value 
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 80033b2:	6921      	ldr	r1, [r4, #16]
  assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
  assert_param(IS_UART_PARITY(huart->Init.Parity));
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  tmpreg = huart->Instance->CR2;
 80033b4:	6933      	ldr	r3, [r6, #16]
  /* Configure the UART Word Length, Parity and mode: 
     Set the M bits according to huart->Init.WordLength value 
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 80033b6:	69e0      	ldr	r0, [r4, #28]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  tmpreg = huart->Instance->CR2;

  /* Clear STOP[13:12] bits */
  tmpreg &= (uint32_t)~((uint32_t)USART_CR2_STOP);
 80033b8:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000

  /* Configure the UART Stop Bits: Set STOP[13:12] bits according to huart->Init.StopBits value */
  tmpreg |= (uint32_t)huart->Init.StopBits;
 80033bc:	68e3      	ldr	r3, [r4, #12]
 80033be:	4313      	orrs	r3, r2
  /* Configure the UART Word Length, Parity and mode: 
     Set the M bits according to huart->Init.WordLength value 
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 80033c0:	68a2      	ldr	r2, [r4, #8]

  /* Configure the UART Stop Bits: Set STOP[13:12] bits according to huart->Init.StopBits value */
  tmpreg |= (uint32_t)huart->Init.StopBits;
  
  /* Write to USART CR2 */
  huart->Instance->CR2 = (uint32_t)tmpreg;
 80033c2:	6133      	str	r3, [r6, #16]

  /*-------------------------- USART CR1 Configuration -----------------------*/
  tmpreg = huart->Instance->CR1;
 80033c4:	68f3      	ldr	r3, [r6, #12]
  /* Configure the UART Word Length, Parity and mode: 
     Set the M bits according to huart->Init.WordLength value 
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 80033c6:	4311      	orrs	r1, r2
 80033c8:	6962      	ldr	r2, [r4, #20]

  /*-------------------------- USART CR1 Configuration -----------------------*/
  tmpreg = huart->Instance->CR1;

  /* Clear M, PCE, PS, TE and RE bits */
  tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | \
 80033ca:	f423 4316 	bic.w	r3, r3, #38400	; 0x9600
  /* Configure the UART Word Length, Parity and mode: 
     Set the M bits according to huart->Init.WordLength value 
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 80033ce:	430a      	orrs	r2, r1
 80033d0:	4302      	orrs	r2, r0

  /*-------------------------- USART CR1 Configuration -----------------------*/
  tmpreg = huart->Instance->CR1;

  /* Clear M, PCE, PS, TE and RE bits */
  tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | \
 80033d2:	f023 030c 	bic.w	r3, r3, #12
  /* Configure the UART Word Length, Parity and mode: 
     Set the M bits according to huart->Init.WordLength value 
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 80033d6:	4313      	orrs	r3, r2
  
  /* Write to USART CR1 */
  huart->Instance->CR1 = (uint32_t)tmpreg;
 80033d8:	60f3      	str	r3, [r6, #12]
  
  /*-------------------------- USART CR3 Configuration -----------------------*/  
  tmpreg = huart->Instance->CR3;
 80033da:	6973      	ldr	r3, [r6, #20]
  
  /* Clear CTSE and RTSE bits */
  tmpreg &= (uint32_t)~((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE));
 80033dc:	f423 7240 	bic.w	r2, r3, #768	; 0x300
  
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  tmpreg |= huart->Init.HwFlowCtl;
 80033e0:	69a3      	ldr	r3, [r4, #24]
  
  /* Write to USART CR3 */
  huart->Instance->CR3 = (uint32_t)tmpreg;
  
  /* Check the Over Sampling */
  if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80033e2:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
  
  /* Clear CTSE and RTSE bits */
  tmpreg &= (uint32_t)~((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE));
  
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  tmpreg |= huart->Init.HwFlowCtl;
 80033e6:	ea43 0302 	orr.w	r3, r3, r2
  
  /* Write to USART CR3 */
  huart->Instance->CR3 = (uint32_t)tmpreg;
 80033ea:	6173      	str	r3, [r6, #20]
 80033ec:	4b40      	ldr	r3, [pc, #256]	; (80034f0 <UART_SetConfig+0x198>)
  
  /* Check the Over Sampling */
  if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80033ee:	d136      	bne.n	800345e <UART_SetConfig+0x106>
  {
    /*-------------------------- USART BRR Configuration ---------------------*/
    if((huart->Instance == USART1) || (huart->Instance == USART6))
 80033f0:	429e      	cmp	r6, r3
 80033f2:	d003      	beq.n	80033fc <UART_SetConfig+0xa4>
 80033f4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80033f8:	429e      	cmp	r6, r3
 80033fa:	d116      	bne.n	800342a <UART_SetConfig+0xd2>
    {
      huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 80033fc:	f7ff fbd2 	bl	8002ba4 <HAL_RCC_GetPCLK2Freq>
 8003400:	6867      	ldr	r7, [r4, #4]
 8003402:	2519      	movs	r5, #25
 8003404:	4368      	muls	r0, r5
 8003406:	007f      	lsls	r7, r7, #1
 8003408:	fbb0 f7f7 	udiv	r7, r0, r7
 800340c:	f7ff fbca 	bl	8002ba4 <HAL_RCC_GetPCLK2Freq>
 8003410:	6862      	ldr	r2, [r4, #4]
 8003412:	f04f 0864 	mov.w	r8, #100	; 0x64
 8003416:	4368      	muls	r0, r5
 8003418:	fbb7 f7f8 	udiv	r7, r7, r8
 800341c:	0052      	lsls	r2, r2, #1
 800341e:	013f      	lsls	r7, r7, #4
 8003420:	fbb0 f9f2 	udiv	r9, r0, r2
 8003424:	f7ff fbbe 	bl	8002ba4 <HAL_RCC_GetPCLK2Freq>
 8003428:	e015      	b.n	8003456 <UART_SetConfig+0xfe>
    }
    else
    {
      huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 800342a:	f7ff fba3 	bl	8002b74 <HAL_RCC_GetPCLK1Freq>
 800342e:	6867      	ldr	r7, [r4, #4]
 8003430:	2519      	movs	r5, #25
 8003432:	4368      	muls	r0, r5
 8003434:	007f      	lsls	r7, r7, #1
 8003436:	fbb0 f7f7 	udiv	r7, r0, r7
 800343a:	f7ff fb9b 	bl	8002b74 <HAL_RCC_GetPCLK1Freq>
 800343e:	6862      	ldr	r2, [r4, #4]
 8003440:	f04f 0864 	mov.w	r8, #100	; 0x64
 8003444:	4368      	muls	r0, r5
 8003446:	fbb7 f7f8 	udiv	r7, r7, r8
 800344a:	0052      	lsls	r2, r2, #1
 800344c:	013f      	lsls	r7, r7, #4
 800344e:	fbb0 f9f2 	udiv	r9, r0, r2
 8003452:	f7ff fb8f 	bl	8002b74 <HAL_RCC_GetPCLK1Freq>
 8003456:	4345      	muls	r5, r0
 8003458:	6860      	ldr	r0, [r4, #4]
 800345a:	0040      	lsls	r0, r0, #1
 800345c:	e034      	b.n	80034c8 <UART_SetConfig+0x170>
    }
  }
  else
  {
    /*-------------------------- USART BRR Configuration ---------------------*/
    if((huart->Instance == USART1) || (huart->Instance == USART6))
 800345e:	429e      	cmp	r6, r3
 8003460:	d002      	beq.n	8003468 <UART_SetConfig+0x110>
 8003462:	4b24      	ldr	r3, [pc, #144]	; (80034f4 <UART_SetConfig+0x19c>)
 8003464:	429e      	cmp	r6, r3
 8003466:	d116      	bne.n	8003496 <UART_SetConfig+0x13e>
    {
      huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 8003468:	f7ff fb9c 	bl	8002ba4 <HAL_RCC_GetPCLK2Freq>
 800346c:	6867      	ldr	r7, [r4, #4]
 800346e:	2519      	movs	r5, #25
 8003470:	4368      	muls	r0, r5
 8003472:	00bf      	lsls	r7, r7, #2
 8003474:	fbb0 f7f7 	udiv	r7, r0, r7
 8003478:	f7ff fb94 	bl	8002ba4 <HAL_RCC_GetPCLK2Freq>
 800347c:	6862      	ldr	r2, [r4, #4]
 800347e:	f04f 0864 	mov.w	r8, #100	; 0x64
 8003482:	4368      	muls	r0, r5
 8003484:	fbb7 f7f8 	udiv	r7, r7, r8
 8003488:	0092      	lsls	r2, r2, #2
 800348a:	013f      	lsls	r7, r7, #4
 800348c:	fbb0 f9f2 	udiv	r9, r0, r2
 8003490:	f7ff fb88 	bl	8002ba4 <HAL_RCC_GetPCLK2Freq>
 8003494:	e015      	b.n	80034c2 <UART_SetConfig+0x16a>
    }
    else
    {
      huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 8003496:	f7ff fb6d 	bl	8002b74 <HAL_RCC_GetPCLK1Freq>
 800349a:	6867      	ldr	r7, [r4, #4]
 800349c:	2519      	movs	r5, #25
 800349e:	4368      	muls	r0, r5
 80034a0:	00bf      	lsls	r7, r7, #2
 80034a2:	fbb0 f7f7 	udiv	r7, r0, r7
 80034a6:	f7ff fb65 	bl	8002b74 <HAL_RCC_GetPCLK1Freq>
 80034aa:	6862      	ldr	r2, [r4, #4]
 80034ac:	f04f 0864 	mov.w	r8, #100	; 0x64
 80034b0:	4368      	muls	r0, r5
 80034b2:	fbb7 f7f8 	udiv	r7, r7, r8
 80034b6:	0092      	lsls	r2, r2, #2
 80034b8:	013f      	lsls	r7, r7, #4
 80034ba:	fbb0 f9f2 	udiv	r9, r0, r2
 80034be:	f7ff fb59 	bl	8002b74 <HAL_RCC_GetPCLK1Freq>
 80034c2:	4345      	muls	r5, r0
 80034c4:	6860      	ldr	r0, [r4, #4]
 80034c6:	0080      	lsls	r0, r0, #2
 80034c8:	fbb5 f0f0 	udiv	r0, r5, r0
 80034cc:	fbb0 f0f8 	udiv	r0, r0, r8
 80034d0:	fb08 9210 	mls	r2, r8, r0, r9
 80034d4:	0112      	lsls	r2, r2, #4
 80034d6:	3232      	adds	r2, #50	; 0x32
 80034d8:	fbb2 f3f8 	udiv	r3, r2, r8
 80034dc:	f003 030f 	and.w	r3, r3, #15
 80034e0:	433b      	orrs	r3, r7
 80034e2:	60b3      	str	r3, [r6, #8]
 80034e4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80034e8:	00a037a0 	.word	0x00a037a0
 80034ec:	0802158d 	.word	0x0802158d
 80034f0:	40011000 	.word	0x40011000
 80034f4:	40011400 	.word	0x40011400

080034f8 <HAL_UART_Init>:
  * @param  huart: pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 80034f8:	b510      	push	{r4, lr}
  /* Check the UART handle allocation */
  if(huart == NULL)
 80034fa:	4604      	mov	r4, r0
 80034fc:	2800      	cmp	r0, #0
 80034fe:	d06c      	beq.n	80035da <HAL_UART_Init+0xe2>
  {
    return HAL_ERROR;
  }

  /* Check the parameters */
  if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 8003500:	6981      	ldr	r1, [r0, #24]
 8003502:	6803      	ldr	r3, [r0, #0]
 8003504:	4a36      	ldr	r2, [pc, #216]	; (80035e0 <HAL_UART_Init+0xe8>)
 8003506:	b1c1      	cbz	r1, 800353a <HAL_UART_Init+0x42>
  { 
    /* The hardware flow control is available only for USART1, USART2, USART3 and USART6 */
    assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 8003508:	4293      	cmp	r3, r2
 800350a:	d00f      	beq.n	800352c <HAL_UART_Init+0x34>
 800350c:	f5a2 424c 	sub.w	r2, r2, #52224	; 0xcc00
 8003510:	4293      	cmp	r3, r2
 8003512:	d00b      	beq.n	800352c <HAL_UART_Init+0x34>
 8003514:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8003518:	4293      	cmp	r3, r2
 800351a:	d007      	beq.n	800352c <HAL_UART_Init+0x34>
 800351c:	f502 424c 	add.w	r2, r2, #52224	; 0xcc00
 8003520:	4293      	cmp	r3, r2
 8003522:	d003      	beq.n	800352c <HAL_UART_Init+0x34>
 8003524:	482f      	ldr	r0, [pc, #188]	; (80035e4 <HAL_UART_Init+0xec>)
 8003526:	21fc      	movs	r1, #252	; 0xfc
 8003528:	f7fd ffe8 	bl	80014fc <assert_failed>
    assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 800352c:	69a3      	ldr	r3, [r4, #24]
 800352e:	f433 7340 	bics.w	r3, r3, #768	; 0x300
 8003532:	d01c      	beq.n	800356e <HAL_UART_Init+0x76>
 8003534:	482b      	ldr	r0, [pc, #172]	; (80035e4 <HAL_UART_Init+0xec>)
 8003536:	21fd      	movs	r1, #253	; 0xfd
 8003538:	e017      	b.n	800356a <HAL_UART_Init+0x72>
  }
  else
  {
    assert_param(IS_UART_INSTANCE(huart->Instance));
 800353a:	4293      	cmp	r3, r2
 800353c:	d017      	beq.n	800356e <HAL_UART_Init+0x76>
 800353e:	4a2a      	ldr	r2, [pc, #168]	; (80035e8 <HAL_UART_Init+0xf0>)
 8003540:	4293      	cmp	r3, r2
 8003542:	d014      	beq.n	800356e <HAL_UART_Init+0x76>
 8003544:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8003548:	4293      	cmp	r3, r2
 800354a:	d010      	beq.n	800356e <HAL_UART_Init+0x76>
 800354c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8003550:	4293      	cmp	r3, r2
 8003552:	d00c      	beq.n	800356e <HAL_UART_Init+0x76>
 8003554:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8003558:	4293      	cmp	r3, r2
 800355a:	d008      	beq.n	800356e <HAL_UART_Init+0x76>
 800355c:	f502 4244 	add.w	r2, r2, #50176	; 0xc400
 8003560:	4293      	cmp	r3, r2
 8003562:	d004      	beq.n	800356e <HAL_UART_Init+0x76>
 8003564:	481f      	ldr	r0, [pc, #124]	; (80035e4 <HAL_UART_Init+0xec>)
 8003566:	f240 1101 	movw	r1, #257	; 0x101
 800356a:	f7fd ffc7 	bl	80014fc <assert_failed>
  }
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 800356e:	68a3      	ldr	r3, [r4, #8]
 8003570:	f433 5380 	bics.w	r3, r3, #4096	; 0x1000
 8003574:	d004      	beq.n	8003580 <HAL_UART_Init+0x88>
 8003576:	481b      	ldr	r0, [pc, #108]	; (80035e4 <HAL_UART_Init+0xec>)
 8003578:	f240 1103 	movw	r1, #259	; 0x103
 800357c:	f7fd ffbe 	bl	80014fc <assert_failed>
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 8003580:	69e3      	ldr	r3, [r4, #28]
 8003582:	f433 4300 	bics.w	r3, r3, #32768	; 0x8000
 8003586:	d004      	beq.n	8003592 <HAL_UART_Init+0x9a>
 8003588:	4816      	ldr	r0, [pc, #88]	; (80035e4 <HAL_UART_Init+0xec>)
 800358a:	f44f 7182 	mov.w	r1, #260	; 0x104
 800358e:	f7fd ffb5 	bl	80014fc <assert_failed>
  
  if(huart->State == HAL_UART_STATE_RESET)
 8003592:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8003596:	b913      	cbnz	r3, 800359e <HAL_UART_Init+0xa6>
  {  
    /* Init the low level hardware */
    HAL_UART_MspInit(huart);
 8003598:	4620      	mov	r0, r4
 800359a:	f7fd ffb9 	bl	8001510 <HAL_UART_MspInit>
  }

  huart->State = HAL_UART_STATE_BUSY;

  /* Disable the peripheral */
  __HAL_UART_DISABLE(huart);
 800359e:	6822      	ldr	r2, [r4, #0]
  {  
    /* Init the low level hardware */
    HAL_UART_MspInit(huart);
  }

  huart->State = HAL_UART_STATE_BUSY;
 80035a0:	2302      	movs	r3, #2
 80035a2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  /* Disable the peripheral */
  __HAL_UART_DISABLE(huart);
 80035a6:	68d3      	ldr	r3, [r2, #12]
 80035a8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80035ac:	60d3      	str	r3, [r2, #12]
  
  /* Set the UART Communication parameters */
  UART_SetConfig(huart);
 80035ae:	4620      	mov	r0, r4
 80035b0:	f7ff fed2 	bl	8003358 <UART_SetConfig>
  
  /* In asynchronous mode, the following bits must be kept cleared: 
     - LINEN and CLKEN bits in the USART_CR2 register,
     - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  huart->Instance->CR2 &= ~(USART_CR2_LINEN | USART_CR2_CLKEN);
 80035b4:	6823      	ldr	r3, [r4, #0]
 80035b6:	691a      	ldr	r2, [r3, #16]
 80035b8:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80035bc:	611a      	str	r2, [r3, #16]
  huart->Instance->CR3 &= ~(USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN);
 80035be:	695a      	ldr	r2, [r3, #20]
 80035c0:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80035c4:	615a      	str	r2, [r3, #20]
  
  /* Enable the peripheral */
  __HAL_UART_ENABLE(huart);
 80035c6:	68da      	ldr	r2, [r3, #12]
 80035c8:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80035cc:	60da      	str	r2, [r3, #12]
  
  /* Initialize the UART state */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80035ce:	2000      	movs	r0, #0
  huart->State= HAL_UART_STATE_READY;
 80035d0:	2301      	movs	r3, #1
  
  /* Enable the peripheral */
  __HAL_UART_ENABLE(huart);
  
  /* Initialize the UART state */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80035d2:	63e0      	str	r0, [r4, #60]	; 0x3c
  huart->State= HAL_UART_STATE_READY;
 80035d4:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  
  return HAL_OK;
 80035d8:	bd10      	pop	{r4, pc}
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
  /* Check the UART handle allocation */
  if(huart == NULL)
  {
    return HAL_ERROR;
 80035da:	2001      	movs	r0, #1
  /* Initialize the UART state */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
  huart->State= HAL_UART_STATE_READY;
  
  return HAL_OK;
}
 80035dc:	bd10      	pop	{r4, pc}
 80035de:	bf00      	nop
 80035e0:	40011000 	.word	0x40011000
 80035e4:	0802158d 	.word	0x0802158d
 80035e8:	40004400 	.word	0x40004400

080035ec <HAL_UART_Transmit_IT>:
  */
HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
{
  uint32_t tmp = 0;
  
  tmp = huart->State;
 80035ec:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 80035f0:	b2db      	uxtb	r3, r3
  if((tmp == HAL_UART_STATE_READY) || (tmp == HAL_UART_STATE_BUSY_RX))
 80035f2:	2b01      	cmp	r3, #1
 80035f4:	d001      	beq.n	80035fa <HAL_UART_Transmit_IT+0xe>
 80035f6:	2b22      	cmp	r3, #34	; 0x22
 80035f8:	d12a      	bne.n	8003650 <HAL_UART_Transmit_IT+0x64>
  {
    if((pData == NULL ) || (Size == 0)) 
 80035fa:	b339      	cbz	r1, 800364c <HAL_UART_Transmit_IT+0x60>
 80035fc:	b332      	cbz	r2, 800364c <HAL_UART_Transmit_IT+0x60>
    {
      return HAL_ERROR;
    }
    
    /* Process Locked */
    __HAL_LOCK(huart);
 80035fe:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8003602:	2b01      	cmp	r3, #1
 8003604:	d024      	beq.n	8003650 <HAL_UART_Transmit_IT+0x64>
 8003606:	2301      	movs	r3, #1
 8003608:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
    
    huart->pTxBuffPtr = pData;
    huart->TxXferSize = Size;
    huart->TxXferCount = Size;

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800360c:	2300      	movs	r3, #0
 800360e:	63c3      	str	r3, [r0, #60]	; 0x3c
    /* Check if a receive process is ongoing or not */
    if(huart->State == HAL_UART_STATE_BUSY_RX) 
 8003610:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
    
    /* Process Locked */
    __HAL_LOCK(huart);
    
    huart->pTxBuffPtr = pData;
    huart->TxXferSize = Size;
 8003614:	8482      	strh	r2, [r0, #36]	; 0x24
    huart->TxXferCount = Size;

    huart->ErrorCode = HAL_UART_ERROR_NONE;
    /* Check if a receive process is ongoing or not */
    if(huart->State == HAL_UART_STATE_BUSY_RX) 
 8003616:	2b22      	cmp	r3, #34	; 0x22
    /* Process Locked */
    __HAL_LOCK(huart);
    
    huart->pTxBuffPtr = pData;
    huart->TxXferSize = Size;
    huart->TxXferCount = Size;
 8003618:	84c2      	strh	r2, [r0, #38]	; 0x26

    huart->ErrorCode = HAL_UART_ERROR_NONE;
    /* Check if a receive process is ongoing or not */
    if(huart->State == HAL_UART_STATE_BUSY_RX) 
    {
      huart->State = HAL_UART_STATE_BUSY_TX_RX;
 800361a:	bf08      	it	eq
 800361c:	2332      	moveq	r3, #50	; 0x32
    {
      huart->State = HAL_UART_STATE_BUSY_TX;
    }

    /* Enable the UART Parity Error Interrupt */
    __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 800361e:	6802      	ldr	r2, [r0, #0]
    }
    
    /* Process Locked */
    __HAL_LOCK(huart);
    
    huart->pTxBuffPtr = pData;
 8003620:	6201      	str	r1, [r0, #32]
    {
      huart->State = HAL_UART_STATE_BUSY_TX_RX;
    }
    else
    {
      huart->State = HAL_UART_STATE_BUSY_TX;
 8003622:	bf18      	it	ne
 8003624:	2312      	movne	r3, #18
 8003626:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
    }

    /* Enable the UART Parity Error Interrupt */
    __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 800362a:	68d3      	ldr	r3, [r2, #12]
 800362c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003630:	60d3      	str	r3, [r2, #12]

    /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
    __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 8003632:	6953      	ldr	r3, [r2, #20]
 8003634:	f043 0301 	orr.w	r3, r3, #1
 8003638:	6153      	str	r3, [r2, #20]

    /* Process Unlocked */
    __HAL_UNLOCK(huart);

    /* Enable the UART Transmit data register empty Interrupt */
    __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 800363a:	68d1      	ldr	r1, [r2, #12]

    /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
    __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);

    /* Process Unlocked */
    __HAL_UNLOCK(huart);
 800363c:	2300      	movs	r3, #0

    /* Enable the UART Transmit data register empty Interrupt */
    __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 800363e:	f041 0180 	orr.w	r1, r1, #128	; 0x80

    /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
    __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);

    /* Process Unlocked */
    __HAL_UNLOCK(huart);
 8003642:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

    /* Enable the UART Transmit data register empty Interrupt */
    __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 8003646:	60d1      	str	r1, [r2, #12]
    
    return HAL_OK;
 8003648:	4618      	mov	r0, r3
 800364a:	4770      	bx	lr
  tmp = huart->State;
  if((tmp == HAL_UART_STATE_READY) || (tmp == HAL_UART_STATE_BUSY_RX))
  {
    if((pData == NULL ) || (Size == 0)) 
    {
      return HAL_ERROR;
 800364c:	2001      	movs	r0, #1
 800364e:	4770      	bx	lr
    
    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;   
 8003650:	2002      	movs	r0, #2
  }
}
 8003652:	4770      	bx	lr

08003654 <HAL_UART_Receive_IT>:
  */
HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
{
  uint32_t tmp = 0;
  
  tmp = huart->State;  
 8003654:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8003658:	b2db      	uxtb	r3, r3
  if((tmp == HAL_UART_STATE_READY) || (tmp == HAL_UART_STATE_BUSY_TX))
 800365a:	2b01      	cmp	r3, #1
 800365c:	d001      	beq.n	8003662 <HAL_UART_Receive_IT+0xe>
 800365e:	2b12      	cmp	r3, #18
 8003660:	d12a      	bne.n	80036b8 <HAL_UART_Receive_IT+0x64>
  {
    if((pData == NULL ) || (Size == 0)) 
 8003662:	b339      	cbz	r1, 80036b4 <HAL_UART_Receive_IT+0x60>
 8003664:	b332      	cbz	r2, 80036b4 <HAL_UART_Receive_IT+0x60>
    {
      return HAL_ERROR;
    }
    
    /* Process Locked */
    __HAL_LOCK(huart);
 8003666:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800366a:	2b01      	cmp	r3, #1
 800366c:	d024      	beq.n	80036b8 <HAL_UART_Receive_IT+0x64>
 800366e:	2301      	movs	r3, #1
 8003670:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
    
    huart->pRxBuffPtr = pData;
    huart->RxXferSize = Size;
    huart->RxXferCount = Size;
    
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003674:	2300      	movs	r3, #0
 8003676:	63c3      	str	r3, [r0, #60]	; 0x3c
    /* Check if a transmit process is ongoing or not */
    if(huart->State == HAL_UART_STATE_BUSY_TX) 
 8003678:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
    
    /* Process Locked */
    __HAL_LOCK(huart);
    
    huart->pRxBuffPtr = pData;
    huart->RxXferSize = Size;
 800367c:	8582      	strh	r2, [r0, #44]	; 0x2c
    huart->RxXferCount = Size;
    
    huart->ErrorCode = HAL_UART_ERROR_NONE;
    /* Check if a transmit process is ongoing or not */
    if(huart->State == HAL_UART_STATE_BUSY_TX) 
 800367e:	2b12      	cmp	r3, #18
    /* Process Locked */
    __HAL_LOCK(huart);
    
    huart->pRxBuffPtr = pData;
    huart->RxXferSize = Size;
    huart->RxXferCount = Size;
 8003680:	85c2      	strh	r2, [r0, #46]	; 0x2e
    
    huart->ErrorCode = HAL_UART_ERROR_NONE;
    /* Check if a transmit process is ongoing or not */
    if(huart->State == HAL_UART_STATE_BUSY_TX) 
    {
      huart->State = HAL_UART_STATE_BUSY_TX_RX;
 8003682:	bf08      	it	eq
 8003684:	2332      	moveq	r3, #50	; 0x32
    {
      huart->State = HAL_UART_STATE_BUSY_RX;
    }
    
    /* Enable the UART Parity Error Interrupt */
    __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 8003686:	6802      	ldr	r2, [r0, #0]
    }
    
    /* Process Locked */
    __HAL_LOCK(huart);
    
    huart->pRxBuffPtr = pData;
 8003688:	6281      	str	r1, [r0, #40]	; 0x28
    {
      huart->State = HAL_UART_STATE_BUSY_TX_RX;
    }
    else
    {
      huart->State = HAL_UART_STATE_BUSY_RX;
 800368a:	bf18      	it	ne
 800368c:	2322      	movne	r3, #34	; 0x22
 800368e:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
    }
    
    /* Enable the UART Parity Error Interrupt */
    __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 8003692:	68d3      	ldr	r3, [r2, #12]
 8003694:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003698:	60d3      	str	r3, [r2, #12]
    
    /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
    __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 800369a:	6953      	ldr	r3, [r2, #20]
 800369c:	f043 0301 	orr.w	r3, r3, #1
 80036a0:	6153      	str	r3, [r2, #20]
    
    /* Process Unlocked */
    __HAL_UNLOCK(huart);
    
    /* Enable the UART Data Register not empty Interrupt */
    __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 80036a2:	68d1      	ldr	r1, [r2, #12]
    
    /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
    __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
    
    /* Process Unlocked */
    __HAL_UNLOCK(huart);
 80036a4:	2300      	movs	r3, #0
    
    /* Enable the UART Data Register not empty Interrupt */
    __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 80036a6:	f041 0120 	orr.w	r1, r1, #32
    
    /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
    __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
    
    /* Process Unlocked */
    __HAL_UNLOCK(huart);
 80036aa:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
    
    /* Enable the UART Data Register not empty Interrupt */
    __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 80036ae:	60d1      	str	r1, [r2, #12]
    
    return HAL_OK;
 80036b0:	4618      	mov	r0, r3
 80036b2:	4770      	bx	lr
  tmp = huart->State;  
  if((tmp == HAL_UART_STATE_READY) || (tmp == HAL_UART_STATE_BUSY_TX))
  {
    if((pData == NULL ) || (Size == 0)) 
    {
      return HAL_ERROR;
 80036b4:	2001      	movs	r0, #1
 80036b6:	4770      	bx	lr
    
    return HAL_OK;
  }
  else
  {
    return HAL_BUSY; 
 80036b8:	2002      	movs	r0, #2
  }
}
 80036ba:	4770      	bx	lr

080036bc <HAL_UART_IRQHandler>:
  * @param  huart: pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
{
 80036bc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  uint32_t tmp1 = 0, tmp2 = 0;

  tmp1 = __HAL_UART_GET_FLAG(huart, UART_FLAG_PE);
 80036be:	6803      	ldr	r3, [r0, #0]
 80036c0:	6819      	ldr	r1, [r3, #0]
  tmp2 = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_PE);  
 80036c2:	68da      	ldr	r2, [r3, #12]
  /* UART parity error interrupt occurred ------------------------------------*/
  if((tmp1 != RESET) && (tmp2 != RESET))
 80036c4:	07c9      	lsls	r1, r1, #31
  * @param  huart: pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
{
 80036c6:	4604      	mov	r4, r0
  uint32_t tmp1 = 0, tmp2 = 0;

  tmp1 = __HAL_UART_GET_FLAG(huart, UART_FLAG_PE);
  tmp2 = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_PE);  
  /* UART parity error interrupt occurred ------------------------------------*/
  if((tmp1 != RESET) && (tmp2 != RESET))
 80036c8:	d50a      	bpl.n	80036e0 <HAL_UART_IRQHandler+0x24>
 80036ca:	05d0      	lsls	r0, r2, #23
 80036cc:	d508      	bpl.n	80036e0 <HAL_UART_IRQHandler+0x24>
  { 
    __HAL_UART_CLEAR_PEFLAG(huart);
 80036ce:	681a      	ldr	r2, [r3, #0]
 80036d0:	9201      	str	r2, [sp, #4]
 80036d2:	685a      	ldr	r2, [r3, #4]
 80036d4:	9201      	str	r2, [sp, #4]
 80036d6:	9a01      	ldr	r2, [sp, #4]
    
    huart->ErrorCode |= HAL_UART_ERROR_PE;
 80036d8:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80036da:	f042 0201 	orr.w	r2, r2, #1
 80036de:	63e2      	str	r2, [r4, #60]	; 0x3c
  }
  
  tmp1 = __HAL_UART_GET_FLAG(huart, UART_FLAG_FE);
 80036e0:	6819      	ldr	r1, [r3, #0]
  tmp2 = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_ERR);
 80036e2:	695a      	ldr	r2, [r3, #20]
  /* UART frame error interrupt occurred -------------------------------------*/
  if((tmp1 != RESET) && (tmp2 != RESET))
 80036e4:	0789      	lsls	r1, r1, #30
 80036e6:	d50a      	bpl.n	80036fe <HAL_UART_IRQHandler+0x42>
 80036e8:	07d0      	lsls	r0, r2, #31
 80036ea:	d508      	bpl.n	80036fe <HAL_UART_IRQHandler+0x42>
  { 
    __HAL_UART_CLEAR_FEFLAG(huart);
 80036ec:	681a      	ldr	r2, [r3, #0]
 80036ee:	9202      	str	r2, [sp, #8]
 80036f0:	685a      	ldr	r2, [r3, #4]
 80036f2:	9202      	str	r2, [sp, #8]
 80036f4:	9a02      	ldr	r2, [sp, #8]
    
    huart->ErrorCode |= HAL_UART_ERROR_FE;
 80036f6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80036f8:	f042 0204 	orr.w	r2, r2, #4
 80036fc:	63e2      	str	r2, [r4, #60]	; 0x3c
  }
  
  tmp1 = __HAL_UART_GET_FLAG(huart, UART_FLAG_NE);
 80036fe:	6819      	ldr	r1, [r3, #0]
  tmp2 = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_ERR);
 8003700:	695a      	ldr	r2, [r3, #20]
  /* UART noise error interrupt occurred -------------------------------------*/
  if((tmp1 != RESET) && (tmp2 != RESET))
 8003702:	0749      	lsls	r1, r1, #29
 8003704:	d50a      	bpl.n	800371c <HAL_UART_IRQHandler+0x60>
 8003706:	07d0      	lsls	r0, r2, #31
 8003708:	d508      	bpl.n	800371c <HAL_UART_IRQHandler+0x60>
  { 
    __HAL_UART_CLEAR_NEFLAG(huart);
 800370a:	681a      	ldr	r2, [r3, #0]
 800370c:	9203      	str	r2, [sp, #12]
 800370e:	685a      	ldr	r2, [r3, #4]
 8003710:	9203      	str	r2, [sp, #12]
 8003712:	9a03      	ldr	r2, [sp, #12]
    
    huart->ErrorCode |= HAL_UART_ERROR_NE;
 8003714:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8003716:	f042 0202 	orr.w	r2, r2, #2
 800371a:	63e2      	str	r2, [r4, #60]	; 0x3c
    __HAL_UART_CLEAR_OREFLAG(huart);
    
    huart->ErrorCode |= HAL_UART_ERROR_ORE;
  }*/
  
  tmp1 = __HAL_UART_GET_FLAG(huart, UART_FLAG_RXNE);
 800371c:	6819      	ldr	r1, [r3, #0]
  tmp2 = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_RXNE);
 800371e:	68da      	ldr	r2, [r3, #12]
  /* UART in mode Receiver ---------------------------------------------------*/
  if((tmp1 != RESET) && (tmp2 != RESET))
 8003720:	0689      	lsls	r1, r1, #26
 8003722:	d542      	bpl.n	80037aa <HAL_UART_IRQHandler+0xee>
 8003724:	0690      	lsls	r0, r2, #26
 8003726:	d540      	bpl.n	80037aa <HAL_UART_IRQHandler+0xee>
static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
{
  uint16_t* tmp;
  uint32_t tmp1 = 0;
  
  tmp1 = huart->State; 
 8003728:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
  if((tmp1 == HAL_UART_STATE_BUSY_RX) || (tmp1 == HAL_UART_STATE_BUSY_TX_RX))
 800372c:	f002 02ef 	and.w	r2, r2, #239	; 0xef
 8003730:	2a22      	cmp	r2, #34	; 0x22
 8003732:	d13a      	bne.n	80037aa <HAL_UART_IRQHandler+0xee>
  {
    if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 8003734:	68a2      	ldr	r2, [r4, #8]
 8003736:	6921      	ldr	r1, [r4, #16]
 8003738:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
 800373c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800373e:	d10b      	bne.n	8003758 <HAL_UART_IRQHandler+0x9c>
    {
      tmp = (uint16_t*) huart->pRxBuffPtr;
      if(huart->Init.Parity == UART_PARITY_NONE)
      {
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 8003740:	685b      	ldr	r3, [r3, #4]
  if((tmp1 == HAL_UART_STATE_BUSY_RX) || (tmp1 == HAL_UART_STATE_BUSY_TX_RX))
  {
    if(huart->Init.WordLength == UART_WORDLENGTH_9B)
    {
      tmp = (uint16_t*) huart->pRxBuffPtr;
      if(huart->Init.Parity == UART_PARITY_NONE)
 8003742:	b921      	cbnz	r1, 800374e <HAL_UART_IRQHandler+0x92>
      {
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 8003744:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003748:	f822 3b02 	strh.w	r3, [r2], #2
 800374c:	e002      	b.n	8003754 <HAL_UART_IRQHandler+0x98>
        huart->pRxBuffPtr += 2;
      }
      else
      {
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 800374e:	b2db      	uxtb	r3, r3
 8003750:	f822 3b01 	strh.w	r3, [r2], #1
        huart->pRxBuffPtr += 1;
 8003754:	62a2      	str	r2, [r4, #40]	; 0x28
 8003756:	e00a      	b.n	800376e <HAL_UART_IRQHandler+0xb2>
      }
    }
    else
    {
      if(huart->Init.Parity == UART_PARITY_NONE)
 8003758:	b919      	cbnz	r1, 8003762 <HAL_UART_IRQHandler+0xa6>
      {
        *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 800375a:	1c51      	adds	r1, r2, #1
 800375c:	62a1      	str	r1, [r4, #40]	; 0x28
 800375e:	685b      	ldr	r3, [r3, #4]
 8003760:	e004      	b.n	800376c <HAL_UART_IRQHandler+0xb0>
      }
      else
      {
        *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 8003762:	685b      	ldr	r3, [r3, #4]
 8003764:	1c51      	adds	r1, r2, #1
 8003766:	62a1      	str	r1, [r4, #40]	; 0x28
 8003768:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800376c:	7013      	strb	r3, [r2, #0]
      }
    }

    if(--huart->RxXferCount == 0)
 800376e:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8003770:	3b01      	subs	r3, #1
 8003772:	b29b      	uxth	r3, r3
 8003774:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8003776:	b9c3      	cbnz	r3, 80037aa <HAL_UART_IRQHandler+0xee>
    {
      __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 8003778:	6823      	ldr	r3, [r4, #0]
 800377a:	68da      	ldr	r2, [r3, #12]
 800377c:	f022 0220 	bic.w	r2, r2, #32
 8003780:	60da      	str	r2, [r3, #12]

      /* Check if a transmit process is ongoing or not */
      if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
 8003782:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8003786:	2a32      	cmp	r2, #50	; 0x32
        huart->State = HAL_UART_STATE_BUSY_TX;
      }
      else
      {
        /* Disable the UART Parity Error Interrupt */
        __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 8003788:	bf1f      	itttt	ne
 800378a:	68da      	ldrne	r2, [r3, #12]
 800378c:	f422 7280 	bicne.w	r2, r2, #256	; 0x100
 8003790:	60da      	strne	r2, [r3, #12]

        /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
        __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 8003792:	695a      	ldrne	r2, [r3, #20]
 8003794:	bf1b      	ittet	ne
 8003796:	f022 0201 	bicne.w	r2, r2, #1
 800379a:	615a      	strne	r2, [r3, #20]
      __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);

      /* Check if a transmit process is ongoing or not */
      if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
      {
        huart->State = HAL_UART_STATE_BUSY_TX;
 800379c:	2312      	moveq	r3, #18
        __HAL_UART_DISABLE_IT(huart, UART_IT_PE);

        /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
        __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);

        huart->State = HAL_UART_STATE_READY;
 800379e:	2301      	movne	r3, #1
 80037a0:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      }
      HAL_UART_RxCpltCallback(huart);
 80037a4:	4620      	mov	r0, r4
 80037a6:	f000 fff9 	bl	800479c <HAL_UART_RxCpltCallback>
  if((tmp1 != RESET) && (tmp2 != RESET))
  { 
    UART_Receive_IT(huart);
  }
  
  tmp1 = __HAL_UART_GET_FLAG(huart, UART_FLAG_TXE);
 80037aa:	6823      	ldr	r3, [r4, #0]
 80037ac:	6819      	ldr	r1, [r3, #0]
  tmp2 = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_TXE);
 80037ae:	68da      	ldr	r2, [r3, #12]
  /* UART in mode Transmitter ------------------------------------------------*/
  if((tmp1 != RESET) && (tmp2 != RESET))
 80037b0:	0609      	lsls	r1, r1, #24
 80037b2:	d528      	bpl.n	8003806 <HAL_UART_IRQHandler+0x14a>
 80037b4:	0610      	lsls	r0, r2, #24
 80037b6:	d526      	bpl.n	8003806 <HAL_UART_IRQHandler+0x14a>
static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
{
  uint16_t* tmp;
  uint32_t tmp1 = 0;
  
  tmp1 = huart->State;
 80037b8:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
  if((tmp1 == HAL_UART_STATE_BUSY_TX) || (tmp1 == HAL_UART_STATE_BUSY_TX_RX))
 80037bc:	f002 02df 	and.w	r2, r2, #223	; 0xdf
 80037c0:	2a12      	cmp	r2, #18
 80037c2:	d120      	bne.n	8003806 <HAL_UART_IRQHandler+0x14a>
  {
    if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 80037c4:	68a2      	ldr	r2, [r4, #8]
 80037c6:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
 80037ca:	6a22      	ldr	r2, [r4, #32]
 80037cc:	d10a      	bne.n	80037e4 <HAL_UART_IRQHandler+0x128>
    {
      tmp = (uint16_t*) huart->pTxBuffPtr;
      huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 80037ce:	8811      	ldrh	r1, [r2, #0]
 80037d0:	f3c1 0108 	ubfx	r1, r1, #0, #9
 80037d4:	6059      	str	r1, [r3, #4]
      if(huart->Init.Parity == UART_PARITY_NONE)
 80037d6:	6921      	ldr	r1, [r4, #16]
 80037d8:	b909      	cbnz	r1, 80037de <HAL_UART_IRQHandler+0x122>
      {
        huart->pTxBuffPtr += 2;
 80037da:	3202      	adds	r2, #2
 80037dc:	e000      	b.n	80037e0 <HAL_UART_IRQHandler+0x124>
      }
      else
      {
        huart->pTxBuffPtr += 1;
 80037de:	3201      	adds	r2, #1
 80037e0:	6222      	str	r2, [r4, #32]
 80037e2:	e003      	b.n	80037ec <HAL_UART_IRQHandler+0x130>
      }
    } 
    else
    {
      huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 80037e4:	1c51      	adds	r1, r2, #1
 80037e6:	6221      	str	r1, [r4, #32]
 80037e8:	7812      	ldrb	r2, [r2, #0]
 80037ea:	605a      	str	r2, [r3, #4]
    }

    if(--huart->TxXferCount == 0)
 80037ec:	8ce2      	ldrh	r2, [r4, #38]	; 0x26
 80037ee:	3a01      	subs	r2, #1
 80037f0:	b292      	uxth	r2, r2
 80037f2:	84e2      	strh	r2, [r4, #38]	; 0x26
 80037f4:	b93a      	cbnz	r2, 8003806 <HAL_UART_IRQHandler+0x14a>
    {
      /* Disable the UART Transmit Complete Interrupt */
      __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 80037f6:	68da      	ldr	r2, [r3, #12]
 80037f8:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80037fc:	60da      	str	r2, [r3, #12]

      /* Enable the UART Transmit Complete Interrupt */    
      __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 80037fe:	68da      	ldr	r2, [r3, #12]
 8003800:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8003804:	60da      	str	r2, [r3, #12]
  if((tmp1 != RESET) && (tmp2 != RESET))
  {
    UART_Transmit_IT(huart);
  }
  
  tmp1 = __HAL_UART_GET_FLAG(huart, UART_FLAG_TC);
 8003806:	6819      	ldr	r1, [r3, #0]
  tmp2 = __HAL_UART_GET_IT_SOURCE(huart, UART_IT_TC);
 8003808:	68da      	ldr	r2, [r3, #12]
  /* UART in mode Transmitter end --------------------------------------------*/
  if((tmp1 != RESET) && (tmp2 != RESET))
 800380a:	0649      	lsls	r1, r1, #25
 800380c:	d519      	bpl.n	8003842 <HAL_UART_IRQHandler+0x186>
 800380e:	0652      	lsls	r2, r2, #25
 8003810:	d517      	bpl.n	8003842 <HAL_UART_IRQHandler+0x186>
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
  /* Disable the UART Transmit Complete Interrupt */    
  __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 8003812:	68da      	ldr	r2, [r3, #12]
 8003814:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003818:	60da      	str	r2, [r3, #12]
  
  /* Check if a receive process is ongoing or not */
  if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
 800381a:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800381e:	2a32      	cmp	r2, #50	; 0x32
    huart->State = HAL_UART_STATE_BUSY_RX;
  }
  else
  {
    /* Disable the UART Parity Error Interrupt */
    __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 8003820:	bf1f      	itttt	ne
 8003822:	68da      	ldrne	r2, [r3, #12]
 8003824:	f422 7280 	bicne.w	r2, r2, #256	; 0x100
 8003828:	60da      	strne	r2, [r3, #12]

    /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
    __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 800382a:	695a      	ldrne	r2, [r3, #20]
 800382c:	bf1b      	ittet	ne
 800382e:	f022 0201 	bicne.w	r2, r2, #1
 8003832:	615a      	strne	r2, [r3, #20]
  __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
  
  /* Check if a receive process is ongoing or not */
  if(huart->State == HAL_UART_STATE_BUSY_TX_RX) 
  {
    huart->State = HAL_UART_STATE_BUSY_RX;
 8003834:	2322      	moveq	r3, #34	; 0x22
    __HAL_UART_DISABLE_IT(huart, UART_IT_PE);

    /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
    __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);

    huart->State = HAL_UART_STATE_READY;
 8003836:	2301      	movne	r3, #1
 8003838:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  }
  
  HAL_UART_TxCpltCallback(huart);
 800383c:	4620      	mov	r0, r4
 800383e:	f000 ffa7 	bl	8004790 <HAL_UART_TxCpltCallback>
  if((tmp1 != RESET) && (tmp2 != RESET))
  {
    UART_EndTransmit_IT(huart);
  }

  if(huart->ErrorCode != HAL_UART_ERROR_NONE)
 8003842:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003844:	b12b      	cbz	r3, 8003852 <HAL_UART_IRQHandler+0x196>
  {
    /* Set the UART state ready to be able to start again the process */
    huart->State = HAL_UART_STATE_READY;
 8003846:	2301      	movs	r3, #1
 8003848:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
    
    HAL_UART_ErrorCallback(huart);
 800384c:	4620      	mov	r0, r4
 800384e:	f000 ffab 	bl	80047a8 <HAL_UART_ErrorCallback>
  }  
}
 8003852:	b004      	add	sp, #16
 8003854:	bd10      	pop	{r4, pc}
	...

08003858 <FSMC_NORSRAM_Init>:
HAL_StatusTypeDef  FSMC_NORSRAM_Init(FSMC_NORSRAM_TypeDef *Device, FSMC_NORSRAM_InitTypeDef* Init)
{ 
  uint32_t tmpr = 0;
    
  /* Check the parameters */
  assert_param(IS_FSMC_NORSRAM_BANK(Init->NSBank));
 8003858:	680b      	ldr	r3, [r1, #0]
 800385a:	f033 0306 	bics.w	r3, r3, #6
  * @param  Device: Pointer to NORSRAM device instance
  * @param  Init: Pointer to NORSRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef  FSMC_NORSRAM_Init(FSMC_NORSRAM_TypeDef *Device, FSMC_NORSRAM_InitTypeDef* Init)
{ 
 800385e:	b570      	push	{r4, r5, r6, lr}
 8003860:	4605      	mov	r5, r0
 8003862:	460c      	mov	r4, r1
  uint32_t tmpr = 0;
    
  /* Check the parameters */
  assert_param(IS_FSMC_NORSRAM_BANK(Init->NSBank));
 8003864:	d003      	beq.n	800386e <FSMC_NORSRAM_Init+0x16>
 8003866:	4847      	ldr	r0, [pc, #284]	; (8003984 <FSMC_NORSRAM_Init+0x12c>)
 8003868:	2197      	movs	r1, #151	; 0x97
 800386a:	f7fd fe47 	bl	80014fc <assert_failed>
  assert_param(IS_FSMC_MUX(Init->DataAddressMux));
 800386e:	6863      	ldr	r3, [r4, #4]
 8003870:	f033 0302 	bics.w	r3, r3, #2
 8003874:	d003      	beq.n	800387e <FSMC_NORSRAM_Init+0x26>
 8003876:	4843      	ldr	r0, [pc, #268]	; (8003984 <FSMC_NORSRAM_Init+0x12c>)
 8003878:	2198      	movs	r1, #152	; 0x98
 800387a:	f7fd fe3f 	bl	80014fc <assert_failed>
  assert_param(IS_FSMC_MEMORY(Init->MemoryType));
 800387e:	68a3      	ldr	r3, [r4, #8]
 8003880:	f033 0204 	bics.w	r2, r3, #4
 8003884:	d005      	beq.n	8003892 <FSMC_NORSRAM_Init+0x3a>
 8003886:	2b08      	cmp	r3, #8
 8003888:	d003      	beq.n	8003892 <FSMC_NORSRAM_Init+0x3a>
 800388a:	483e      	ldr	r0, [pc, #248]	; (8003984 <FSMC_NORSRAM_Init+0x12c>)
 800388c:	2199      	movs	r1, #153	; 0x99
 800388e:	f7fd fe35 	bl	80014fc <assert_failed>
  assert_param(IS_FSMC_NORSRAM_MEMORY_WIDTH(Init->MemoryDataWidth));
 8003892:	68e3      	ldr	r3, [r4, #12]
 8003894:	f033 0210 	bics.w	r2, r3, #16
 8003898:	d005      	beq.n	80038a6 <FSMC_NORSRAM_Init+0x4e>
 800389a:	2b20      	cmp	r3, #32
 800389c:	d003      	beq.n	80038a6 <FSMC_NORSRAM_Init+0x4e>
 800389e:	4839      	ldr	r0, [pc, #228]	; (8003984 <FSMC_NORSRAM_Init+0x12c>)
 80038a0:	219a      	movs	r1, #154	; 0x9a
 80038a2:	f7fd fe2b 	bl	80014fc <assert_failed>
  assert_param(IS_FSMC_BURSTMODE(Init->BurstAccessMode));
 80038a6:	6923      	ldr	r3, [r4, #16]
 80038a8:	f433 7380 	bics.w	r3, r3, #256	; 0x100
 80038ac:	d003      	beq.n	80038b6 <FSMC_NORSRAM_Init+0x5e>
 80038ae:	4835      	ldr	r0, [pc, #212]	; (8003984 <FSMC_NORSRAM_Init+0x12c>)
 80038b0:	219b      	movs	r1, #155	; 0x9b
 80038b2:	f7fd fe23 	bl	80014fc <assert_failed>
  assert_param(IS_FSMC_WAIT_POLARITY(Init->WaitSignalPolarity));
 80038b6:	6963      	ldr	r3, [r4, #20]
 80038b8:	f433 7300 	bics.w	r3, r3, #512	; 0x200
 80038bc:	d003      	beq.n	80038c6 <FSMC_NORSRAM_Init+0x6e>
 80038be:	4831      	ldr	r0, [pc, #196]	; (8003984 <FSMC_NORSRAM_Init+0x12c>)
 80038c0:	219c      	movs	r1, #156	; 0x9c
 80038c2:	f7fd fe1b 	bl	80014fc <assert_failed>
  assert_param(IS_FSMC_WRAP_MODE(Init->WrapMode));
 80038c6:	69a3      	ldr	r3, [r4, #24]
 80038c8:	f433 6380 	bics.w	r3, r3, #1024	; 0x400
 80038cc:	d003      	beq.n	80038d6 <FSMC_NORSRAM_Init+0x7e>
 80038ce:	482d      	ldr	r0, [pc, #180]	; (8003984 <FSMC_NORSRAM_Init+0x12c>)
 80038d0:	219d      	movs	r1, #157	; 0x9d
 80038d2:	f7fd fe13 	bl	80014fc <assert_failed>
  assert_param(IS_FSMC_WAIT_SIGNAL_ACTIVE(Init->WaitSignalActive));
 80038d6:	69e3      	ldr	r3, [r4, #28]
 80038d8:	f433 6300 	bics.w	r3, r3, #2048	; 0x800
 80038dc:	d003      	beq.n	80038e6 <FSMC_NORSRAM_Init+0x8e>
 80038de:	4829      	ldr	r0, [pc, #164]	; (8003984 <FSMC_NORSRAM_Init+0x12c>)
 80038e0:	219e      	movs	r1, #158	; 0x9e
 80038e2:	f7fd fe0b 	bl	80014fc <assert_failed>
  assert_param(IS_FSMC_WRITE_OPERATION(Init->WriteOperation));
 80038e6:	6a23      	ldr	r3, [r4, #32]
 80038e8:	f433 5380 	bics.w	r3, r3, #4096	; 0x1000
 80038ec:	d003      	beq.n	80038f6 <FSMC_NORSRAM_Init+0x9e>
 80038ee:	4825      	ldr	r0, [pc, #148]	; (8003984 <FSMC_NORSRAM_Init+0x12c>)
 80038f0:	219f      	movs	r1, #159	; 0x9f
 80038f2:	f7fd fe03 	bl	80014fc <assert_failed>
  assert_param(IS_FSMC_WAITE_SIGNAL(Init->WaitSignal));
 80038f6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80038f8:	f433 5300 	bics.w	r3, r3, #8192	; 0x2000
 80038fc:	d003      	beq.n	8003906 <FSMC_NORSRAM_Init+0xae>
 80038fe:	4821      	ldr	r0, [pc, #132]	; (8003984 <FSMC_NORSRAM_Init+0x12c>)
 8003900:	21a0      	movs	r1, #160	; 0xa0
 8003902:	f7fd fdfb 	bl	80014fc <assert_failed>
  assert_param(IS_FSMC_EXTENDED_MODE(Init->ExtendedMode));
 8003906:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8003908:	f433 4380 	bics.w	r3, r3, #16384	; 0x4000
 800390c:	d003      	beq.n	8003916 <FSMC_NORSRAM_Init+0xbe>
 800390e:	481d      	ldr	r0, [pc, #116]	; (8003984 <FSMC_NORSRAM_Init+0x12c>)
 8003910:	21a1      	movs	r1, #161	; 0xa1
 8003912:	f7fd fdf3 	bl	80014fc <assert_failed>
  assert_param(IS_FSMC_ASYNWAIT(Init->AsynchronousWait));
 8003916:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8003918:	f433 4300 	bics.w	r3, r3, #32768	; 0x8000
 800391c:	d003      	beq.n	8003926 <FSMC_NORSRAM_Init+0xce>
 800391e:	4819      	ldr	r0, [pc, #100]	; (8003984 <FSMC_NORSRAM_Init+0x12c>)
 8003920:	21a2      	movs	r1, #162	; 0xa2
 8003922:	f7fd fdeb 	bl	80014fc <assert_failed>
  assert_param(IS_FSMC_WRITE_BURST(Init->WriteBurst));
 8003926:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8003928:	f433 2300 	bics.w	r3, r3, #524288	; 0x80000
 800392c:	d003      	beq.n	8003936 <FSMC_NORSRAM_Init+0xde>
 800392e:	4815      	ldr	r0, [pc, #84]	; (8003984 <FSMC_NORSRAM_Init+0x12c>)
 8003930:	21a3      	movs	r1, #163	; 0xa3
 8003932:	f7fd fde3 	bl	80014fc <assert_failed>
 8003936:	6820      	ldr	r0, [r4, #0]
  /* Get the BTCR register value */
  tmpr = Device->BTCR[Init->NSBank];

  /* Clear MBKEN, MUXEN, MTYP, MWID, FACCEN, BURSTEN, WAITPOL, WRAPMOD, WAITCFG, WREN,
           WAITEN, EXTMOD, ASYNCWAIT, CBURSTRW and CCLKEN bits */
  tmpr &= ((uint32_t)~(FSMC_BCR1_MBKEN     | FSMC_BCR1_MUXEN    | FSMC_BCR1_MTYP     | \
 8003938:	4a13      	ldr	r2, [pc, #76]	; (8003988 <FSMC_NORSRAM_Init+0x130>)
  assert_param(IS_FSMC_EXTENDED_MODE(Init->ExtendedMode));
  assert_param(IS_FSMC_ASYNWAIT(Init->AsynchronousWait));
  assert_param(IS_FSMC_WRITE_BURST(Init->WriteBurst));
  
  /* Get the BTCR register value */
  tmpr = Device->BTCR[Init->NSBank];
 800393a:	f855 3020 	ldr.w	r3, [r5, r0, lsl #2]
                       FSMC_BCR1_WAITPOL   | FSMC_BCR1_WRAPMOD  | FSMC_BCR1_WAITCFG  | \
                       FSMC_BCR1_WREN      | FSMC_BCR1_WAITEN   | FSMC_BCR1_EXTMOD   | \
                       FSMC_BCR1_ASYNCWAIT | FSMC_BCR1_CBURSTRW));
  /* Set NORSRAM device control parameters */
  tmpr |= (uint32_t)(Init->DataAddressMux       |\
                     Init->MemoryType           |\
 800393e:	68a6      	ldr	r6, [r4, #8]
  /* Get the BTCR register value */
  tmpr = Device->BTCR[Init->NSBank];

  /* Clear MBKEN, MUXEN, MTYP, MWID, FACCEN, BURSTEN, WAITPOL, WRAPMOD, WAITCFG, WREN,
           WAITEN, EXTMOD, ASYNCWAIT, CBURSTRW and CCLKEN bits */
  tmpr &= ((uint32_t)~(FSMC_BCR1_MBKEN     | FSMC_BCR1_MUXEN    | FSMC_BCR1_MTYP     | \
 8003940:	401a      	ands	r2, r3
                       FSMC_BCR1_MWID      | FSMC_BCR1_FACCEN   | FSMC_BCR1_BURSTEN  | \
                       FSMC_BCR1_WAITPOL   | FSMC_BCR1_WRAPMOD  | FSMC_BCR1_WAITCFG  | \
                       FSMC_BCR1_WREN      | FSMC_BCR1_WAITEN   | FSMC_BCR1_EXTMOD   | \
                       FSMC_BCR1_ASYNCWAIT | FSMC_BCR1_CBURSTRW));
  /* Set NORSRAM device control parameters */
  tmpr |= (uint32_t)(Init->DataAddressMux       |\
 8003942:	6863      	ldr	r3, [r4, #4]
 8003944:	ea46 0103 	orr.w	r1, r6, r3
                     Init->MemoryType           |\
 8003948:	68e3      	ldr	r3, [r4, #12]
 800394a:	4319      	orrs	r1, r3
                     Init->MemoryDataWidth      |\
 800394c:	6923      	ldr	r3, [r4, #16]
 800394e:	4319      	orrs	r1, r3
                     Init->BurstAccessMode      |\
 8003950:	6963      	ldr	r3, [r4, #20]
 8003952:	4319      	orrs	r1, r3
                     Init->WaitSignalPolarity   |\
 8003954:	69a3      	ldr	r3, [r4, #24]
 8003956:	4319      	orrs	r1, r3
                     Init->WrapMode             |\
 8003958:	69e3      	ldr	r3, [r4, #28]
 800395a:	4319      	orrs	r1, r3
                     Init->WaitSignalActive     |\
 800395c:	6a23      	ldr	r3, [r4, #32]
 800395e:	4319      	orrs	r1, r3
                     Init->WriteOperation       |\
 8003960:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003962:	4319      	orrs	r1, r3
                     Init->WaitSignal           |\
 8003964:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8003966:	4319      	orrs	r1, r3
                     Init->ExtendedMode         |\
 8003968:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800396a:	430b      	orrs	r3, r1
                       FSMC_BCR1_MWID      | FSMC_BCR1_FACCEN   | FSMC_BCR1_BURSTEN  | \
                       FSMC_BCR1_WAITPOL   | FSMC_BCR1_WRAPMOD  | FSMC_BCR1_WAITCFG  | \
                       FSMC_BCR1_WREN      | FSMC_BCR1_WAITEN   | FSMC_BCR1_EXTMOD   | \
                       FSMC_BCR1_ASYNCWAIT | FSMC_BCR1_CBURSTRW));
  /* Set NORSRAM device control parameters */
  tmpr |= (uint32_t)(Init->DataAddressMux       |\
 800396c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800396e:	430b      	orrs	r3, r1
 8003970:	4313      	orrs	r3, r2
                     Init->ExtendedMode         |\
                     Init->AsynchronousWait     |\
                     Init->WriteBurst
                     );
                    
  if(Init->MemoryType == FSMC_MEMORY_TYPE_NOR)
 8003972:	2e08      	cmp	r6, #8
  {
    tmpr |= (uint32_t)FSMC_NORSRAM_FLASH_ACCESS_ENABLE;
 8003974:	bf08      	it	eq
 8003976:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
  }
  
  Device->BTCR[Init->NSBank] = tmpr;                   
 800397a:	f845 3020 	str.w	r3, [r5, r0, lsl #2]
  
  return HAL_OK;
}
 800397e:	2000      	movs	r0, #0
 8003980:	bd70      	pop	{r4, r5, r6, pc}
 8003982:	bf00      	nop
 8003984:	080215dd 	.word	0x080215dd
 8003988:	fff70080 	.word	0xfff70080

0800398c <FSMC_NORSRAM_Timing_Init>:
HAL_StatusTypeDef FSMC_NORSRAM_Timing_Init(FSMC_NORSRAM_TypeDef *Device, FSMC_NORSRAM_TimingTypeDef *Timing, uint32_t Bank)
{
  uint32_t tmpr = 0;
  
  /* Check the parameters */
  assert_param(IS_FSMC_ADDRESS_SETUP_TIME(Timing->AddressSetupTime));
 800398c:	680b      	ldr	r3, [r1, #0]
 800398e:	2b0f      	cmp	r3, #15
  * @param  Timing: Pointer to NORSRAM Timing structure
  * @param  Bank: NORSRAM bank number  
  * @retval HAL status
  */
HAL_StatusTypeDef FSMC_NORSRAM_Timing_Init(FSMC_NORSRAM_TypeDef *Device, FSMC_NORSRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 8003990:	b570      	push	{r4, r5, r6, lr}
 8003992:	4605      	mov	r5, r0
 8003994:	460c      	mov	r4, r1
 8003996:	4616      	mov	r6, r2
  uint32_t tmpr = 0;
  
  /* Check the parameters */
  assert_param(IS_FSMC_ADDRESS_SETUP_TIME(Timing->AddressSetupTime));
 8003998:	d903      	bls.n	80039a2 <FSMC_NORSRAM_Timing_Init+0x16>
 800399a:	4828      	ldr	r0, [pc, #160]	; (8003a3c <FSMC_NORSRAM_Timing_Init+0xb0>)
 800399c:	21f8      	movs	r1, #248	; 0xf8
 800399e:	f7fd fdad 	bl	80014fc <assert_failed>
  assert_param(IS_FSMC_ADDRESS_HOLD_TIME(Timing->AddressHoldTime));
 80039a2:	6863      	ldr	r3, [r4, #4]
 80039a4:	3b01      	subs	r3, #1
 80039a6:	2b0e      	cmp	r3, #14
 80039a8:	d903      	bls.n	80039b2 <FSMC_NORSRAM_Timing_Init+0x26>
 80039aa:	4824      	ldr	r0, [pc, #144]	; (8003a3c <FSMC_NORSRAM_Timing_Init+0xb0>)
 80039ac:	21f9      	movs	r1, #249	; 0xf9
 80039ae:	f7fd fda5 	bl	80014fc <assert_failed>
  assert_param(IS_FSMC_DATASETUP_TIME(Timing->DataSetupTime));
 80039b2:	68a3      	ldr	r3, [r4, #8]
 80039b4:	3b01      	subs	r3, #1
 80039b6:	2bfe      	cmp	r3, #254	; 0xfe
 80039b8:	d903      	bls.n	80039c2 <FSMC_NORSRAM_Timing_Init+0x36>
 80039ba:	4820      	ldr	r0, [pc, #128]	; (8003a3c <FSMC_NORSRAM_Timing_Init+0xb0>)
 80039bc:	21fa      	movs	r1, #250	; 0xfa
 80039be:	f7fd fd9d 	bl	80014fc <assert_failed>
  assert_param(IS_FSMC_TURNAROUND_TIME(Timing->BusTurnAroundDuration));
 80039c2:	68e3      	ldr	r3, [r4, #12]
 80039c4:	2b0f      	cmp	r3, #15
 80039c6:	d903      	bls.n	80039d0 <FSMC_NORSRAM_Timing_Init+0x44>
 80039c8:	481c      	ldr	r0, [pc, #112]	; (8003a3c <FSMC_NORSRAM_Timing_Init+0xb0>)
 80039ca:	21fb      	movs	r1, #251	; 0xfb
 80039cc:	f7fd fd96 	bl	80014fc <assert_failed>
  assert_param(IS_FSMC_CLK_DIV(Timing->CLKDivision));
 80039d0:	6923      	ldr	r3, [r4, #16]
 80039d2:	3b01      	subs	r3, #1
 80039d4:	2b0f      	cmp	r3, #15
 80039d6:	d903      	bls.n	80039e0 <FSMC_NORSRAM_Timing_Init+0x54>
 80039d8:	4818      	ldr	r0, [pc, #96]	; (8003a3c <FSMC_NORSRAM_Timing_Init+0xb0>)
 80039da:	21fc      	movs	r1, #252	; 0xfc
 80039dc:	f7fd fd8e 	bl	80014fc <assert_failed>
  assert_param(IS_FSMC_DATA_LATENCY(Timing->DataLatency));
 80039e0:	6963      	ldr	r3, [r4, #20]
 80039e2:	3b01      	subs	r3, #1
 80039e4:	2b10      	cmp	r3, #16
 80039e6:	d903      	bls.n	80039f0 <FSMC_NORSRAM_Timing_Init+0x64>
 80039e8:	4814      	ldr	r0, [pc, #80]	; (8003a3c <FSMC_NORSRAM_Timing_Init+0xb0>)
 80039ea:	21fd      	movs	r1, #253	; 0xfd
 80039ec:	f7fd fd86 	bl	80014fc <assert_failed>
  assert_param(IS_FSMC_ACCESS_MODE(Timing->AccessMode));
 80039f0:	69a3      	ldr	r3, [r4, #24]
 80039f2:	f033 5340 	bics.w	r3, r3, #805306368	; 0x30000000
 80039f6:	d003      	beq.n	8003a00 <FSMC_NORSRAM_Timing_Init+0x74>
 80039f8:	4810      	ldr	r0, [pc, #64]	; (8003a3c <FSMC_NORSRAM_Timing_Init+0xb0>)
 80039fa:	21fe      	movs	r1, #254	; 0xfe
 80039fc:	f7fd fd7e 	bl	80014fc <assert_failed>
 8003a00:	eb05 0286 	add.w	r2, r5, r6, lsl #2
 8003a04:	69a1      	ldr	r1, [r4, #24]
  
  /* Get the BTCR register value */
  tmpr = Device->BTCR[Bank + 1];
 8003a06:	6853      	ldr	r3, [r2, #4]
                       FSMC_BTR1_ACCMOD));
  
  /* Set FSMC_NORSRAM device timing parameters */  
  tmpr |= (uint32_t)(Timing->AddressSetupTime                 |\
                    ((Timing->AddressHoldTime) << 4)          |\
                    ((Timing->DataSetupTime) << 8)            |\
 8003a08:	68a5      	ldr	r5, [r4, #8]
  
  /* Get the BTCR register value */
  tmpr = Device->BTCR[Bank + 1];

  /* Clear ADDSET, ADDHLD, DATAST, BUSTURN, CLKDIV, DATLAT and ACCMOD bits */
  tmpr &= ((uint32_t)~(FSMC_BTR1_ADDSET  | FSMC_BTR1_ADDHLD | FSMC_BTR1_DATAST | \
 8003a0a:	f003 4640 	and.w	r6, r3, #3221225472	; 0xc0000000
 8003a0e:	6823      	ldr	r3, [r4, #0]
 8003a10:	430b      	orrs	r3, r1
                       FSMC_BTR1_BUSTURN | FSMC_BTR1_CLKDIV | FSMC_BTR1_DATLAT | \
                       FSMC_BTR1_ACCMOD));
  
  /* Set FSMC_NORSRAM device timing parameters */  
  tmpr |= (uint32_t)(Timing->AddressSetupTime                 |\
                    ((Timing->AddressHoldTime) << 4)          |\
 8003a12:	6861      	ldr	r1, [r4, #4]
 8003a14:	ea43 1101 	orr.w	r1, r3, r1, lsl #4
 8003a18:	ea41 2105 	orr.w	r1, r1, r5, lsl #8
                    ((Timing->DataSetupTime) << 8)            |\
                    ((Timing->BusTurnAroundDuration) << 16)   |\
                    (((Timing->CLKDivision)-1) << 20)         |\
 8003a1c:	6923      	ldr	r3, [r4, #16]
  
  /* Set FSMC_NORSRAM device timing parameters */  
  tmpr |= (uint32_t)(Timing->AddressSetupTime                 |\
                    ((Timing->AddressHoldTime) << 4)          |\
                    ((Timing->DataSetupTime) << 8)            |\
                    ((Timing->BusTurnAroundDuration) << 16)   |\
 8003a1e:	68e5      	ldr	r5, [r4, #12]
                    (((Timing->CLKDivision)-1) << 20)         |\
 8003a20:	3b01      	subs	r3, #1
 8003a22:	ea41 4505 	orr.w	r5, r1, r5, lsl #16
 8003a26:	ea45 5103 	orr.w	r1, r5, r3, lsl #20
                    (((Timing->DataLatency)-2) << 24)         |\
 8003a2a:	6963      	ldr	r3, [r4, #20]
 8003a2c:	3b02      	subs	r3, #2
  tmpr &= ((uint32_t)~(FSMC_BTR1_ADDSET  | FSMC_BTR1_ADDHLD | FSMC_BTR1_DATAST | \
                       FSMC_BTR1_BUSTURN | FSMC_BTR1_CLKDIV | FSMC_BTR1_DATLAT | \
                       FSMC_BTR1_ACCMOD));
  
  /* Set FSMC_NORSRAM device timing parameters */  
  tmpr |= (uint32_t)(Timing->AddressSetupTime                 |\
 8003a2e:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8003a32:	4333      	orrs	r3, r6
                    ((Timing->BusTurnAroundDuration) << 16)   |\
                    (((Timing->CLKDivision)-1) << 20)         |\
                    (((Timing->DataLatency)-2) << 24)         |\
                    (Timing->AccessMode));
  
  Device->BTCR[Bank + 1] = tmpr; 
 8003a34:	6053      	str	r3, [r2, #4]
  
  return HAL_OK;   
}
 8003a36:	2000      	movs	r0, #0
 8003a38:	bd70      	pop	{r4, r5, r6, pc}
 8003a3a:	bf00      	nop
 8003a3c:	080215dd 	.word	0x080215dd

08003a40 <FSMC_NORSRAM_Extended_Timing_Init>:
HAL_StatusTypeDef  FSMC_NORSRAM_Extended_Timing_Init(FSMC_NORSRAM_EXTENDED_TypeDef *Device, FSMC_NORSRAM_TimingTypeDef *Timing, uint32_t Bank, uint32_t ExtendedMode)
{
  uint32_t tmpr = 0;
  
  /* Set NORSRAM device timing register for write configuration, if extended mode is used */
  if(ExtendedMode == FSMC_EXTENDED_MODE_ENABLE)
 8003a40:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
  * @param  Timing: Pointer to NORSRAM Timing structure
  * @param  Bank: NORSRAM bank number  
  * @retval HAL status
  */
HAL_StatusTypeDef  FSMC_NORSRAM_Extended_Timing_Init(FSMC_NORSRAM_EXTENDED_TypeDef *Device, FSMC_NORSRAM_TimingTypeDef *Timing, uint32_t Bank, uint32_t ExtendedMode)
{
 8003a44:	b570      	push	{r4, r5, r6, lr}
 8003a46:	4605      	mov	r5, r0
 8003a48:	460c      	mov	r4, r1
 8003a4a:	4616      	mov	r6, r2
  uint32_t tmpr = 0;
  
  /* Set NORSRAM device timing register for write configuration, if extended mode is used */
  if(ExtendedMode == FSMC_EXTENDED_MODE_ENABLE)
 8003a4c:	d156      	bne.n	8003afc <FSMC_NORSRAM_Extended_Timing_Init+0xbc>
  {
    /* Check the parameters */  
    assert_param(IS_FSMC_ADDRESS_SETUP_TIME(Timing->AddressSetupTime));
 8003a4e:	680b      	ldr	r3, [r1, #0]
 8003a50:	2b0f      	cmp	r3, #15
 8003a52:	d904      	bls.n	8003a5e <FSMC_NORSRAM_Extended_Timing_Init+0x1e>
 8003a54:	482c      	ldr	r0, [pc, #176]	; (8003b08 <FSMC_NORSRAM_Extended_Timing_Init+0xc8>)
 8003a56:	f44f 7193 	mov.w	r1, #294	; 0x126
 8003a5a:	f7fd fd4f 	bl	80014fc <assert_failed>
    assert_param(IS_FSMC_ADDRESS_HOLD_TIME(Timing->AddressHoldTime));
 8003a5e:	6863      	ldr	r3, [r4, #4]
 8003a60:	3b01      	subs	r3, #1
 8003a62:	2b0e      	cmp	r3, #14
 8003a64:	d904      	bls.n	8003a70 <FSMC_NORSRAM_Extended_Timing_Init+0x30>
 8003a66:	4828      	ldr	r0, [pc, #160]	; (8003b08 <FSMC_NORSRAM_Extended_Timing_Init+0xc8>)
 8003a68:	f240 1127 	movw	r1, #295	; 0x127
 8003a6c:	f7fd fd46 	bl	80014fc <assert_failed>
    assert_param(IS_FSMC_DATASETUP_TIME(Timing->DataSetupTime));
 8003a70:	68a3      	ldr	r3, [r4, #8]
 8003a72:	3b01      	subs	r3, #1
 8003a74:	2bfe      	cmp	r3, #254	; 0xfe
 8003a76:	d904      	bls.n	8003a82 <FSMC_NORSRAM_Extended_Timing_Init+0x42>
 8003a78:	4823      	ldr	r0, [pc, #140]	; (8003b08 <FSMC_NORSRAM_Extended_Timing_Init+0xc8>)
 8003a7a:	f44f 7194 	mov.w	r1, #296	; 0x128
 8003a7e:	f7fd fd3d 	bl	80014fc <assert_failed>
    assert_param(IS_FSMC_TURNAROUND_TIME(Timing->BusTurnAroundDuration));
 8003a82:	68e3      	ldr	r3, [r4, #12]
 8003a84:	2b0f      	cmp	r3, #15
 8003a86:	d904      	bls.n	8003a92 <FSMC_NORSRAM_Extended_Timing_Init+0x52>
 8003a88:	481f      	ldr	r0, [pc, #124]	; (8003b08 <FSMC_NORSRAM_Extended_Timing_Init+0xc8>)
 8003a8a:	f240 1129 	movw	r1, #297	; 0x129
 8003a8e:	f7fd fd35 	bl	80014fc <assert_failed>
    assert_param(IS_FSMC_CLK_DIV(Timing->CLKDivision));
 8003a92:	6923      	ldr	r3, [r4, #16]
 8003a94:	3b01      	subs	r3, #1
 8003a96:	2b0f      	cmp	r3, #15
 8003a98:	d904      	bls.n	8003aa4 <FSMC_NORSRAM_Extended_Timing_Init+0x64>
 8003a9a:	481b      	ldr	r0, [pc, #108]	; (8003b08 <FSMC_NORSRAM_Extended_Timing_Init+0xc8>)
 8003a9c:	f44f 7195 	mov.w	r1, #298	; 0x12a
 8003aa0:	f7fd fd2c 	bl	80014fc <assert_failed>
    assert_param(IS_FSMC_DATA_LATENCY(Timing->DataLatency));
 8003aa4:	6963      	ldr	r3, [r4, #20]
 8003aa6:	3b01      	subs	r3, #1
 8003aa8:	2b10      	cmp	r3, #16
 8003aaa:	d904      	bls.n	8003ab6 <FSMC_NORSRAM_Extended_Timing_Init+0x76>
 8003aac:	4816      	ldr	r0, [pc, #88]	; (8003b08 <FSMC_NORSRAM_Extended_Timing_Init+0xc8>)
 8003aae:	f240 112b 	movw	r1, #299	; 0x12b
 8003ab2:	f7fd fd23 	bl	80014fc <assert_failed>
    assert_param(IS_FSMC_ACCESS_MODE(Timing->AccessMode));
 8003ab6:	69a3      	ldr	r3, [r4, #24]
 8003ab8:	f033 5340 	bics.w	r3, r3, #805306368	; 0x30000000
 8003abc:	d004      	beq.n	8003ac8 <FSMC_NORSRAM_Extended_Timing_Init+0x88>
 8003abe:	4812      	ldr	r0, [pc, #72]	; (8003b08 <FSMC_NORSRAM_Extended_Timing_Init+0xc8>)
 8003ac0:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8003ac4:	f7fd fd1a 	bl	80014fc <assert_failed>
  
    /* Get the BWTR register value */
    tmpr = Device->BWTR[Bank];
 8003ac8:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
 8003acc:	69a2      	ldr	r2, [r4, #24]
                         FSMC_BWTR1_BUSTURN | FSMC_BWTR1_CLKDIV | FSMC_BWTR1_DATLAT | \
                         FSMC_BWTR1_ACCMOD));

    tmpr |= (uint32_t)(Timing->AddressSetupTime                 |\
                     ((Timing->AddressHoldTime) << 4)          |\
                     ((Timing->DataSetupTime) << 8)            |\
 8003ace:	68a1      	ldr	r1, [r4, #8]
  
    /* Get the BWTR register value */
    tmpr = Device->BWTR[Bank];
    
    /* Clear ADDSET, ADDHLD, DATAST, BUSTURN, CLKDIV, DATLAT and ACCMOD bits */
    tmpr &= ((uint32_t)~(FSMC_BWTR1_ADDSET  | FSMC_BWTR1_ADDHLD | FSMC_BWTR1_DATAST | \
 8003ad0:	f003 4040 	and.w	r0, r3, #3221225472	; 0xc0000000
 8003ad4:	6823      	ldr	r3, [r4, #0]
 8003ad6:	4313      	orrs	r3, r2
                         FSMC_BWTR1_BUSTURN | FSMC_BWTR1_CLKDIV | FSMC_BWTR1_DATLAT | \
                         FSMC_BWTR1_ACCMOD));

    tmpr |= (uint32_t)(Timing->AddressSetupTime                 |\
                     ((Timing->AddressHoldTime) << 4)          |\
 8003ad8:	6862      	ldr	r2, [r4, #4]
 8003ada:	ea43 1202 	orr.w	r2, r3, r2, lsl #4
 8003ade:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
                     ((Timing->DataSetupTime) << 8)            |\
                     ((Timing->BusTurnAroundDuration) << 16)   |\
                     (((Timing->CLKDivision)-1) << 20)         |\
 8003ae2:	6923      	ldr	r3, [r4, #16]
                         FSMC_BWTR1_ACCMOD));

    tmpr |= (uint32_t)(Timing->AddressSetupTime                 |\
                     ((Timing->AddressHoldTime) << 4)          |\
                     ((Timing->DataSetupTime) << 8)            |\
                     ((Timing->BusTurnAroundDuration) << 16)   |\
 8003ae4:	68e1      	ldr	r1, [r4, #12]
                     (((Timing->CLKDivision)-1) << 20)         |\
 8003ae6:	3b01      	subs	r3, #1
 8003ae8:	ea42 4101 	orr.w	r1, r2, r1, lsl #16
 8003aec:	ea41 5203 	orr.w	r2, r1, r3, lsl #20
                     (((Timing->DataLatency)-2) << 24)         |\
 8003af0:	6963      	ldr	r3, [r4, #20]
 8003af2:	3b02      	subs	r3, #2
    /* Clear ADDSET, ADDHLD, DATAST, BUSTURN, CLKDIV, DATLAT and ACCMOD bits */
    tmpr &= ((uint32_t)~(FSMC_BWTR1_ADDSET  | FSMC_BWTR1_ADDHLD | FSMC_BWTR1_DATAST | \
                         FSMC_BWTR1_BUSTURN | FSMC_BWTR1_CLKDIV | FSMC_BWTR1_DATLAT | \
                         FSMC_BWTR1_ACCMOD));

    tmpr |= (uint32_t)(Timing->AddressSetupTime                 |\
 8003af4:	ea42 6303 	orr.w	r3, r2, r3, lsl #24
 8003af8:	4303      	orrs	r3, r0
 8003afa:	e001      	b.n	8003b00 <FSMC_NORSRAM_Extended_Timing_Init+0xc0>
    
    Device->BWTR[Bank] = tmpr; 
  }
  else                                        
  {
    Device->BWTR[Bank] = 0x0FFFFFFF;
 8003afc:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8003b00:	f845 3026 	str.w	r3, [r5, r6, lsl #2]
  }   
  
  return HAL_OK;  
}
 8003b04:	2000      	movs	r0, #0
 8003b06:	bd70      	pop	{r4, r5, r6, pc}
 8003b08:	080215dd 	.word	0x080215dd

08003b0c <HAL_SRAM_Init>:
  * @param  Timing: Pointer to SRAM control timing structure 
  * @param  ExtTiming: Pointer to SRAM extended mode timing structure  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SRAM_Init(SRAM_HandleTypeDef *hsram, FMC_NORSRAM_TimingTypeDef *Timing, FMC_NORSRAM_TimingTypeDef *ExtTiming)
{ 
 8003b0c:	b570      	push	{r4, r5, r6, lr}
 8003b0e:	460e      	mov	r6, r1
 8003b10:	4615      	mov	r5, r2
  /* Check the SRAM handle parameter */
  if(hsram == NULL)
 8003b12:	4604      	mov	r4, r0
 8003b14:	b1f0      	cbz	r0, 8003b54 <HAL_SRAM_Init+0x48>
  {
     return HAL_ERROR;
  }
  
  if(hsram->State == HAL_SRAM_STATE_RESET)
 8003b16:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8003b1a:	b90b      	cbnz	r3, 8003b20 <HAL_SRAM_Init+0x14>
  {  
    /* Initialize the low level hardware (MSP) */
    HAL_SRAM_MspInit(hsram);
 8003b1c:	f7fd fd80 	bl	8001620 <HAL_SRAM_MspInit>
  }
  
  /* Initialize SRAM control Interface */
  FMC_NORSRAM_Init(hsram->Instance, &(hsram->Init));
 8003b20:	f104 0108 	add.w	r1, r4, #8
 8003b24:	6820      	ldr	r0, [r4, #0]
 8003b26:	f7ff fe97 	bl	8003858 <FSMC_NORSRAM_Init>

  /* Initialize SRAM timing Interface */
  FMC_NORSRAM_Timing_Init(hsram->Instance, Timing, hsram->Init.NSBank); 
 8003b2a:	4631      	mov	r1, r6
 8003b2c:	68a2      	ldr	r2, [r4, #8]
 8003b2e:	6820      	ldr	r0, [r4, #0]
 8003b30:	f7ff ff2c 	bl	800398c <FSMC_NORSRAM_Timing_Init>

  /* Initialize SRAM extended mode timing Interface */
  FMC_NORSRAM_Extended_Timing_Init(hsram->Extended, ExtTiming, hsram->Init.NSBank,  hsram->Init.ExtendedMode);  
 8003b34:	4629      	mov	r1, r5
 8003b36:	68a2      	ldr	r2, [r4, #8]
 8003b38:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8003b3a:	6860      	ldr	r0, [r4, #4]
 8003b3c:	f7ff ff80 	bl	8003a40 <FSMC_NORSRAM_Extended_Timing_Init>
 8003b40:	68a1      	ldr	r1, [r4, #8]
 8003b42:	6822      	ldr	r2, [r4, #0]
  
  /* Enable the NORSRAM device */
  __FMC_NORSRAM_ENABLE(hsram->Instance, hsram->Init.NSBank); 
 8003b44:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8003b48:	f043 0301 	orr.w	r3, r3, #1
 8003b4c:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  
  return HAL_OK;
 8003b50:	2000      	movs	r0, #0
 8003b52:	bd70      	pop	{r4, r5, r6, pc}
HAL_StatusTypeDef HAL_SRAM_Init(SRAM_HandleTypeDef *hsram, FMC_NORSRAM_TimingTypeDef *Timing, FMC_NORSRAM_TimingTypeDef *ExtTiming)
{ 
  /* Check the SRAM handle parameter */
  if(hsram == NULL)
  {
     return HAL_ERROR;
 8003b54:	2001      	movs	r0, #1
  
  /* Enable the NORSRAM device */
  __FMC_NORSRAM_ENABLE(hsram->Instance, hsram->Init.NSBank); 
  
  return HAL_OK;
}
 8003b56:	bd70      	pop	{r4, r5, r6, pc}

08003b58 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003b58:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  uint32_t ioposition = 0x00;
  uint32_t iocurrent = 0x00;
  uint32_t temp = 0x00;

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 8003b5c:	4b91      	ldr	r3, [pc, #580]	; (8003da4 <HAL_GPIO_Init+0x24c>)
 8003b5e:	4298      	cmp	r0, r3
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003b60:	4604      	mov	r4, r0
 8003b62:	460d      	mov	r5, r1
  uint32_t ioposition = 0x00;
  uint32_t iocurrent = 0x00;
  uint32_t temp = 0x00;

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 8003b64:	d023      	beq.n	8003bae <HAL_GPIO_Init+0x56>
 8003b66:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003b6a:	4298      	cmp	r0, r3
 8003b6c:	d01f      	beq.n	8003bae <HAL_GPIO_Init+0x56>
 8003b6e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003b72:	4298      	cmp	r0, r3
 8003b74:	d01b      	beq.n	8003bae <HAL_GPIO_Init+0x56>
 8003b76:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003b7a:	4298      	cmp	r0, r3
 8003b7c:	d017      	beq.n	8003bae <HAL_GPIO_Init+0x56>
 8003b7e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003b82:	4298      	cmp	r0, r3
 8003b84:	d013      	beq.n	8003bae <HAL_GPIO_Init+0x56>
 8003b86:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003b8a:	4298      	cmp	r0, r3
 8003b8c:	d00f      	beq.n	8003bae <HAL_GPIO_Init+0x56>
 8003b8e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003b92:	4298      	cmp	r0, r3
 8003b94:	d00b      	beq.n	8003bae <HAL_GPIO_Init+0x56>
 8003b96:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003b9a:	4298      	cmp	r0, r3
 8003b9c:	d007      	beq.n	8003bae <HAL_GPIO_Init+0x56>
 8003b9e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003ba2:	4298      	cmp	r0, r3
 8003ba4:	d003      	beq.n	8003bae <HAL_GPIO_Init+0x56>
 8003ba6:	4880      	ldr	r0, [pc, #512]	; (8003da8 <HAL_GPIO_Init+0x250>)
 8003ba8:	21c5      	movs	r1, #197	; 0xc5
 8003baa:	f7fd fca7 	bl	80014fc <assert_failed>
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
 8003bae:	882b      	ldrh	r3, [r5, #0]
 8003bb0:	b91b      	cbnz	r3, 8003bba <HAL_GPIO_Init+0x62>
 8003bb2:	487d      	ldr	r0, [pc, #500]	; (8003da8 <HAL_GPIO_Init+0x250>)
 8003bb4:	21c6      	movs	r1, #198	; 0xc6
 8003bb6:	f7fd fca1 	bl	80014fc <assert_failed>
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 8003bba:	686b      	ldr	r3, [r5, #4]
 8003bbc:	2b03      	cmp	r3, #3
 8003bbe:	d917      	bls.n	8003bf0 <HAL_GPIO_Init+0x98>
 8003bc0:	f1a3 0211 	sub.w	r2, r3, #17
 8003bc4:	2a01      	cmp	r2, #1
 8003bc6:	d913      	bls.n	8003bf0 <HAL_GPIO_Init+0x98>
 8003bc8:	4978      	ldr	r1, [pc, #480]	; (8003dac <HAL_GPIO_Init+0x254>)
 8003bca:	f423 1200 	bic.w	r2, r3, #2097152	; 0x200000
 8003bce:	428a      	cmp	r2, r1
 8003bd0:	d00e      	beq.n	8003bf0 <HAL_GPIO_Init+0x98>
 8003bd2:	f501 1180 	add.w	r1, r1, #1048576	; 0x100000
 8003bd6:	428b      	cmp	r3, r1
 8003bd8:	d00a      	beq.n	8003bf0 <HAL_GPIO_Init+0x98>
 8003bda:	f5a1 2170 	sub.w	r1, r1, #983040	; 0xf0000
 8003bde:	428a      	cmp	r2, r1
 8003be0:	d006      	beq.n	8003bf0 <HAL_GPIO_Init+0x98>
 8003be2:	4a73      	ldr	r2, [pc, #460]	; (8003db0 <HAL_GPIO_Init+0x258>)
 8003be4:	4293      	cmp	r3, r2
 8003be6:	d003      	beq.n	8003bf0 <HAL_GPIO_Init+0x98>
 8003be8:	486f      	ldr	r0, [pc, #444]	; (8003da8 <HAL_GPIO_Init+0x250>)
 8003bea:	21c7      	movs	r1, #199	; 0xc7
 8003bec:	f7fd fc86 	bl	80014fc <assert_failed>
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
 8003bf0:	68ab      	ldr	r3, [r5, #8]
 8003bf2:	2b02      	cmp	r3, #2
 8003bf4:	d903      	bls.n	8003bfe <HAL_GPIO_Init+0xa6>
 8003bf6:	486c      	ldr	r0, [pc, #432]	; (8003da8 <HAL_GPIO_Init+0x250>)
 8003bf8:	21c8      	movs	r1, #200	; 0xc8
 8003bfa:	f7fd fc7f 	bl	80014fc <assert_failed>
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003bfe:	2600      	movs	r6, #0

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
 8003c00:	2301      	movs	r3, #1
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003c02:	682f      	ldr	r7, [r5, #0]

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
 8003c04:	40b3      	lsls	r3, r6
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003c06:	401f      	ands	r7, r3

    if(iocurrent == ioposition)
 8003c08:	429f      	cmp	r7, r3
 8003c0a:	f040 80c5 	bne.w	8003d98 <HAL_GPIO_Init+0x240>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8003c0e:	686b      	ldr	r3, [r5, #4]
 8003c10:	f023 0310 	bic.w	r3, r3, #16
 8003c14:	2b02      	cmp	r3, #2
 8003c16:	d117      	bne.n	8003c48 <HAL_GPIO_Init+0xf0>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 8003c18:	692b      	ldr	r3, [r5, #16]
 8003c1a:	2b0d      	cmp	r3, #13
 8003c1c:	d905      	bls.n	8003c2a <HAL_GPIO_Init+0xd2>
 8003c1e:	2b0f      	cmp	r3, #15
 8003c20:	d003      	beq.n	8003c2a <HAL_GPIO_Init+0xd2>
 8003c22:	4861      	ldr	r0, [pc, #388]	; (8003da8 <HAL_GPIO_Init+0x250>)
 8003c24:	21d9      	movs	r1, #217	; 0xd9
 8003c26:	f7fd fc69 	bl	80014fc <assert_failed>
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3];
 8003c2a:	08f2      	lsrs	r2, r6, #3
 8003c2c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8003c30:	f006 0107 	and.w	r1, r6, #7
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3];
 8003c34:	6a10      	ldr	r0, [r2, #32]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8003c36:	0089      	lsls	r1, r1, #2
 8003c38:	230f      	movs	r3, #15
 8003c3a:	408b      	lsls	r3, r1
 8003c3c:	ea20 0003 	bic.w	r0, r0, r3
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 8003c40:	692b      	ldr	r3, [r5, #16]
 8003c42:	408b      	lsls	r3, r1
 8003c44:	4303      	orrs	r3, r0
        GPIOx->AFR[position >> 3] = temp;
 8003c46:	6213      	str	r3, [r2, #32]
 8003c48:	ea4f 0946 	mov.w	r9, r6, lsl #1
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 8003c4c:	f04f 0803 	mov.w	r8, #3
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
        GPIOx->AFR[position >> 3] = temp;
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8003c50:	6822      	ldr	r2, [r4, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8003c52:	686b      	ldr	r3, [r5, #4]
        GPIOx->AFR[position >> 3] = temp;
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 8003c54:	fa08 f809 	lsl.w	r8, r8, r9
 8003c58:	ea6f 0808 	mvn.w	r8, r8
 8003c5c:	ea08 0102 	and.w	r1, r8, r2
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8003c60:	f003 0203 	and.w	r2, r3, #3
      GPIOx->MODER = temp;

      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8003c64:	f023 0310 	bic.w	r3, r3, #16
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8003c68:	fa02 f209 	lsl.w	r2, r2, r9
      GPIOx->MODER = temp;

      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8003c6c:	3b01      	subs	r3, #1
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8003c6e:	430a      	orrs	r2, r1
      GPIOx->MODER = temp;

      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8003c70:	2b01      	cmp	r3, #1

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
      GPIOx->MODER = temp;
 8003c72:	6022      	str	r2, [r4, #0]

      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8003c74:	d817      	bhi.n	8003ca6 <HAL_GPIO_Init+0x14e>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
 8003c76:	68eb      	ldr	r3, [r5, #12]
 8003c78:	2b03      	cmp	r3, #3
 8003c7a:	d903      	bls.n	8003c84 <HAL_GPIO_Init+0x12c>
 8003c7c:	484a      	ldr	r0, [pc, #296]	; (8003da8 <HAL_GPIO_Init+0x250>)
 8003c7e:	21ec      	movs	r1, #236	; 0xec
 8003c80:	f7fd fc3c 	bl	80014fc <assert_failed>
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8003c84:	68a3      	ldr	r3, [r4, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8003c86:	ea08 0203 	and.w	r2, r8, r3
        temp |= (GPIO_Init->Speed << (position * 2));
 8003c8a:	68eb      	ldr	r3, [r5, #12]
 8003c8c:	fa03 f309 	lsl.w	r3, r3, r9
 8003c90:	4313      	orrs	r3, r2
        GPIOx->OSPEEDR = temp;
 8003c92:	60a3      	str	r3, [r4, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8003c94:	6863      	ldr	r3, [r4, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003c96:	ea23 0207 	bic.w	r2, r3, r7
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4) << position);
 8003c9a:	686b      	ldr	r3, [r5, #4]
 8003c9c:	f3c3 1300 	ubfx	r3, r3, #4, #1
 8003ca0:	40b3      	lsls	r3, r6
 8003ca2:	4313      	orrs	r3, r2
        GPIOx->OTYPER = temp;
 8003ca4:	6063      	str	r3, [r4, #4]
      }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 8003ca6:	68e3      	ldr	r3, [r4, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2));
      GPIOx->PUPDR = temp;

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8003ca8:	6869      	ldr	r1, [r5, #4]
        GPIOx->OTYPER = temp;
      }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 8003caa:	ea08 0803 	and.w	r8, r8, r3
      temp |= ((GPIO_Init->Pull) << (position * 2));
 8003cae:	68ab      	ldr	r3, [r5, #8]
 8003cb0:	fa03 f309 	lsl.w	r3, r3, r9
 8003cb4:	ea48 0303 	orr.w	r3, r8, r3
      GPIOx->PUPDR = temp;
 8003cb8:	60e3      	str	r3, [r4, #12]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8003cba:	00cb      	lsls	r3, r1, #3
 8003cbc:	d56c      	bpl.n	8003d98 <HAL_GPIO_Init+0x240>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003cbe:	4a3d      	ldr	r2, [pc, #244]	; (8003db4 <HAL_GPIO_Init+0x25c>)
 8003cc0:	6c53      	ldr	r3, [r2, #68]	; 0x44
 8003cc2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8003cc6:	6453      	str	r3, [r2, #68]	; 0x44
 8003cc8:	f026 0203 	bic.w	r2, r6, #3
 8003ccc:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 8003cd0:	f502 329c 	add.w	r2, r2, #79872	; 0x13800

        temp = SYSCFG->EXTICR[position >> 2];
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8003cd4:	f006 0e03 	and.w	lr, r6, #3
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();

        temp = SYSCFG->EXTICR[position >> 2];
 8003cd8:	6890      	ldr	r0, [r2, #8]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8003cda:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8003cde:	230f      	movs	r3, #15
 8003ce0:	fa03 f30e 	lsl.w	r3, r3, lr
 8003ce4:	ea20 0003 	bic.w	r0, r0, r3
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8003ce8:	4b2e      	ldr	r3, [pc, #184]	; (8003da4 <HAL_GPIO_Init+0x24c>)
 8003cea:	429c      	cmp	r4, r3
 8003cec:	d022      	beq.n	8003d34 <HAL_GPIO_Init+0x1dc>
 8003cee:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003cf2:	429c      	cmp	r4, r3
 8003cf4:	d020      	beq.n	8003d38 <HAL_GPIO_Init+0x1e0>
 8003cf6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003cfa:	429c      	cmp	r4, r3
 8003cfc:	d01e      	beq.n	8003d3c <HAL_GPIO_Init+0x1e4>
 8003cfe:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003d02:	429c      	cmp	r4, r3
 8003d04:	d01c      	beq.n	8003d40 <HAL_GPIO_Init+0x1e8>
 8003d06:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003d0a:	429c      	cmp	r4, r3
 8003d0c:	d01a      	beq.n	8003d44 <HAL_GPIO_Init+0x1ec>
 8003d0e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003d12:	429c      	cmp	r4, r3
 8003d14:	d018      	beq.n	8003d48 <HAL_GPIO_Init+0x1f0>
 8003d16:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003d1a:	429c      	cmp	r4, r3
 8003d1c:	d016      	beq.n	8003d4c <HAL_GPIO_Init+0x1f4>
 8003d1e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003d22:	429c      	cmp	r4, r3
 8003d24:	d014      	beq.n	8003d50 <HAL_GPIO_Init+0x1f8>
 8003d26:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003d2a:	429c      	cmp	r4, r3
 8003d2c:	bf0c      	ite	eq
 8003d2e:	2308      	moveq	r3, #8
 8003d30:	2309      	movne	r3, #9
 8003d32:	e00e      	b.n	8003d52 <HAL_GPIO_Init+0x1fa>
 8003d34:	2300      	movs	r3, #0
 8003d36:	e00c      	b.n	8003d52 <HAL_GPIO_Init+0x1fa>
 8003d38:	2301      	movs	r3, #1
 8003d3a:	e00a      	b.n	8003d52 <HAL_GPIO_Init+0x1fa>
 8003d3c:	2302      	movs	r3, #2
 8003d3e:	e008      	b.n	8003d52 <HAL_GPIO_Init+0x1fa>
 8003d40:	2303      	movs	r3, #3
 8003d42:	e006      	b.n	8003d52 <HAL_GPIO_Init+0x1fa>
 8003d44:	2304      	movs	r3, #4
 8003d46:	e004      	b.n	8003d52 <HAL_GPIO_Init+0x1fa>
 8003d48:	2305      	movs	r3, #5
 8003d4a:	e002      	b.n	8003d52 <HAL_GPIO_Init+0x1fa>
 8003d4c:	2306      	movs	r3, #6
 8003d4e:	e000      	b.n	8003d52 <HAL_GPIO_Init+0x1fa>
 8003d50:	2307      	movs	r3, #7
 8003d52:	fa03 f30e 	lsl.w	r3, r3, lr
 8003d56:	4303      	orrs	r3, r0
        SYSCFG->EXTICR[position >> 2] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8003d58:	4817      	ldr	r0, [pc, #92]	; (8003db8 <HAL_GPIO_Init+0x260>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();

        temp = SYSCFG->EXTICR[position >> 2];
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
        SYSCFG->EXTICR[position >> 2] = temp;
 8003d5a:	6093      	str	r3, [r2, #8]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8003d5c:	6803      	ldr	r3, [r0, #0]
        temp &= ~((uint32_t)iocurrent);
 8003d5e:	43fa      	mvns	r2, r7
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8003d60:	f411 3f80 	tst.w	r1, #65536	; 0x10000
        {
          temp |= iocurrent;
 8003d64:	bf14      	ite	ne
 8003d66:	433b      	orrne	r3, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
        SYSCFG->EXTICR[position >> 2] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
        temp &= ~((uint32_t)iocurrent);
 8003d68:	4013      	andeq	r3, r2
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
        {
          temp |= iocurrent;
        }
        EXTI->IMR = temp;
 8003d6a:	6003      	str	r3, [r0, #0]

        temp = EXTI->EMR;
 8003d6c:	6843      	ldr	r3, [r0, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8003d6e:	0388      	lsls	r0, r1, #14
        {
          temp |= iocurrent;
        }
        EXTI->EMR = temp;
 8003d70:	4811      	ldr	r0, [pc, #68]	; (8003db8 <HAL_GPIO_Init+0x260>)

        temp = EXTI->EMR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
        {
          temp |= iocurrent;
 8003d72:	bf4c      	ite	mi
 8003d74:	433b      	orrmi	r3, r7
          temp |= iocurrent;
        }
        EXTI->IMR = temp;

        temp = EXTI->EMR;
        temp &= ~((uint32_t)iocurrent);
 8003d76:	4013      	andpl	r3, r2
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
        {
          temp |= iocurrent;
        }
        EXTI->EMR = temp;
 8003d78:	6043      	str	r3, [r0, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8003d7a:	6883      	ldr	r3, [r0, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8003d7c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
        {
          temp |= iocurrent;
 8003d80:	bf14      	ite	ne
 8003d82:	433b      	orrne	r3, r7
        }
        EXTI->EMR = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
        temp &= ~((uint32_t)iocurrent);
 8003d84:	4013      	andeq	r3, r2
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
        {
          temp |= iocurrent;
        }
        EXTI->RTSR = temp;
 8003d86:	6083      	str	r3, [r0, #8]

        temp = EXTI->FTSR;
 8003d88:	68c3      	ldr	r3, [r0, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8003d8a:	0289      	lsls	r1, r1, #10
          temp |= iocurrent;
        }
        EXTI->RTSR = temp;

        temp = EXTI->FTSR;
        temp &= ~((uint32_t)iocurrent);
 8003d8c:	bf54      	ite	pl
 8003d8e:	ea02 0703 	andpl.w	r7, r2, r3
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
        {
          temp |= iocurrent;
 8003d92:	431f      	orrmi	r7, r3
        }
        EXTI->FTSR = temp;
 8003d94:	4b08      	ldr	r3, [pc, #32]	; (8003db8 <HAL_GPIO_Init+0x260>)
 8003d96:	60df      	str	r7, [r3, #12]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 8003d98:	3601      	adds	r6, #1
 8003d9a:	2e10      	cmp	r6, #16
 8003d9c:	f47f af30 	bne.w	8003c00 <HAL_GPIO_Init+0xa8>
        }
        EXTI->FTSR = temp;
      }
    }
  }
}
 8003da0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003da4:	40020000 	.word	0x40020000
 8003da8:	0802162c 	.word	0x0802162c
 8003dac:	10110000 	.word	0x10110000
 8003db0:	10220000 	.word	0x10220000
 8003db4:	40023800 	.word	0x40023800
 8003db8:	40013c00 	.word	0x40013c00

08003dbc <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8003dbc:	b570      	push	{r4, r5, r6, lr}
 8003dbe:	4605      	mov	r5, r0
 8003dc0:	4616      	mov	r6, r2
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
 8003dc2:	460c      	mov	r4, r1
 8003dc4:	b921      	cbnz	r1, 8003dd0 <HAL_GPIO_WritePin+0x14>
 8003dc6:	4808      	ldr	r0, [pc, #32]	; (8003de8 <HAL_GPIO_WritePin+0x2c>)
 8003dc8:	f44f 71d6 	mov.w	r1, #428	; 0x1ac
 8003dcc:	f7fd fb96 	bl	80014fc <assert_failed>
  assert_param(IS_GPIO_PIN_ACTION(PinState));
 8003dd0:	2e01      	cmp	r6, #1
 8003dd2:	d905      	bls.n	8003de0 <HAL_GPIO_WritePin+0x24>
 8003dd4:	4804      	ldr	r0, [pc, #16]	; (8003de8 <HAL_GPIO_WritePin+0x2c>)
 8003dd6:	f240 11ad 	movw	r1, #429	; 0x1ad
 8003dda:	f7fd fb8f 	bl	80014fc <assert_failed>
 8003dde:	e001      	b.n	8003de4 <HAL_GPIO_WritePin+0x28>

  if(PinState != GPIO_PIN_RESET)
 8003de0:	b906      	cbnz	r6, 8003de4 <HAL_GPIO_WritePin+0x28>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 8003de2:	0424      	lsls	r4, r4, #16
 8003de4:	61ac      	str	r4, [r5, #24]
 8003de6:	bd70      	pop	{r4, r5, r6, pc}
 8003de8:	0802162c 	.word	0x0802162c

08003dec <HAL_GPIO_TogglePin>:
  *                      x can be (A..I) to select the GPIO peripheral for STM32F40XX and STM32F427X devices.
  * @param  GPIO_Pin: Specifies the pins to be toggled.
  * @retval None
  */
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 8003dec:	b538      	push	{r3, r4, r5, lr}
 8003dee:	4604      	mov	r4, r0
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
 8003df0:	460d      	mov	r5, r1
 8003df2:	b921      	cbnz	r1, 8003dfe <HAL_GPIO_TogglePin+0x12>
 8003df4:	4804      	ldr	r0, [pc, #16]	; (8003e08 <HAL_GPIO_TogglePin+0x1c>)
 8003df6:	f240 11c3 	movw	r1, #451	; 0x1c3
 8003dfa:	f7fd fb7f 	bl	80014fc <assert_failed>

  GPIOx->ODR ^= GPIO_Pin;
 8003dfe:	6961      	ldr	r1, [r4, #20]
 8003e00:	4069      	eors	r1, r5
 8003e02:	6161      	str	r1, [r4, #20]
 8003e04:	bd38      	pop	{r3, r4, r5, pc}
 8003e06:	bf00      	nop
 8003e08:	0802162c 	.word	0x0802162c

08003e0c <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8003e0c:	b510      	push	{r4, lr}
 8003e0e:	4604      	mov	r4, r0
  /*Configure the SysTick to have interrupt in 1ms time basis*/
  HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 8003e10:	f7fe fe94 	bl	8002b3c <HAL_RCC_GetHCLKFreq>
 8003e14:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003e18:	fbb0 f0f3 	udiv	r0, r0, r3
 8003e1c:	f7ff fa86 	bl	800332c <HAL_SYSTICK_Config>

  /*Configure the SysTick IRQ priority */
  HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority ,0);
 8003e20:	f04f 30ff 	mov.w	r0, #4294967295
 8003e24:	4621      	mov	r1, r4
 8003e26:	2200      	movs	r2, #0
 8003e28:	f7ff fa2a 	bl	8003280 <HAL_NVIC_SetPriority>

  /* Return function status */
  return HAL_OK;
}
 8003e2c:	2000      	movs	r0, #0
 8003e2e:	bd10      	pop	{r4, pc}

08003e30 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8003e30:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0)
   __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8003e32:	4b09      	ldr	r3, [pc, #36]	; (8003e58 <HAL_Init+0x28>)
 8003e34:	681a      	ldr	r2, [r3, #0]
 8003e36:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003e3a:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0)
   __HAL_FLASH_DATA_CACHE_ENABLE();
 8003e3c:	681a      	ldr	r2, [r3, #0]
 8003e3e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8003e42:	601a      	str	r2, [r3, #0]
#if (PREFETCH_ENABLE != 0)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003e44:	2003      	movs	r0, #3
 8003e46:	f7ff f9ff 	bl	8003248 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8003e4a:	200f      	movs	r0, #15
 8003e4c:	f7ff ffde 	bl	8003e0c <HAL_InitTick>
  
  /* Init the low level hardware */
  HAL_MspInit();
 8003e50:	f7fd fc2e 	bl	80016b0 <HAL_MspInit>
  
  /* Return function status */
  return HAL_OK;
}
 8003e54:	2000      	movs	r0, #0
 8003e56:	bd08      	pop	{r3, pc}
 8003e58:	40023c00 	.word	0x40023c00

08003e5c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick++;
 8003e5c:	4a02      	ldr	r2, [pc, #8]	; (8003e68 <HAL_IncTick+0xc>)
 8003e5e:	6813      	ldr	r3, [r2, #0]
 8003e60:	3301      	adds	r3, #1
 8003e62:	6013      	str	r3, [r2, #0]
 8003e64:	4770      	bx	lr
 8003e66:	bf00      	nop
 8003e68:	2000d400 	.word	0x2000d400

08003e6c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8003e6c:	4b01      	ldr	r3, [pc, #4]	; (8003e74 <HAL_GetTick+0x8>)
 8003e6e:	6818      	ldr	r0, [r3, #0]
}
 8003e70:	4770      	bx	lr
 8003e72:	bf00      	nop
 8003e74:	2000d400 	.word	0x2000d400

08003e78 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay: specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(__IO uint32_t Delay)
{
 8003e78:	b513      	push	{r0, r1, r4, lr}
 8003e7a:	9001      	str	r0, [sp, #4]
  uint32_t tickstart = 0;
  tickstart = HAL_GetTick();
 8003e7c:	f7ff fff6 	bl	8003e6c <HAL_GetTick>
 8003e80:	4604      	mov	r4, r0
  while((HAL_GetTick() - tickstart) < Delay)
 8003e82:	f7ff fff3 	bl	8003e6c <HAL_GetTick>
 8003e86:	9b01      	ldr	r3, [sp, #4]
 8003e88:	1b00      	subs	r0, r0, r4
 8003e8a:	4298      	cmp	r0, r3
 8003e8c:	d3f9      	bcc.n	8003e82 <HAL_Delay+0xa>
  {
  }
}
 8003e8e:	b002      	add	sp, #8
 8003e90:	bd10      	pop	{r4, pc}
	...

08003e94 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
 8003e94:	4b01      	ldr	r3, [pc, #4]	; (8003e9c <HAL_GetREVID+0x8>)
 8003e96:	6818      	ldr	r0, [r3, #0]
}
 8003e98:	0c00      	lsrs	r0, r0, #16
 8003e9a:	4770      	bx	lr
 8003e9c:	e0042000 	.word	0xe0042000

08003ea0 <modbus_Setup>:
#include "modbusConfig.h"
/*	private variables-------------------------------*/

/*	public functions--------------------------------*/
// Setup the modbus packets array
void modbus_Setup(){
 8003ea0:	b537      	push	{r0, r1, r2, r4, r5, lr}
	uint16_t polling = 0;
	uint16_t timeout = 800;
	uint8_t retry_count = 0;
	
	// read 2 registers starting at address 0
	modbus_construct(packet1, 20, READ_HOLDING_REGISTERS, 0, 2, regs);
 8003ea2:	4b1c      	ldr	r3, [pc, #112]	; (8003f14 <modbus_Setup+0x74>)
 8003ea4:	4c1c      	ldr	r4, [pc, #112]	; (8003f18 <modbus_Setup+0x78>)
 8003ea6:	9401      	str	r4, [sp, #4]
 8003ea8:	2502      	movs	r5, #2
 8003eaa:	9500      	str	r5, [sp, #0]
 8003eac:	6818      	ldr	r0, [r3, #0]
 8003eae:	2114      	movs	r1, #20
 8003eb0:	2203      	movs	r2, #3
 8003eb2:	2300      	movs	r3, #0
 8003eb4:	f000 fc60 	bl	8004778 <modbus_construct>
	// read the 10 registers to the PLC starting at address 2
	modbus_construct(packet2, 20, READ_HOLDING_REGISTERS, 0, 2, regs);
 8003eb8:	4b18      	ldr	r3, [pc, #96]	; (8003f1c <modbus_Setup+0x7c>)
 8003eba:	9500      	str	r5, [sp, #0]
 8003ebc:	9401      	str	r4, [sp, #4]
 8003ebe:	6818      	ldr	r0, [r3, #0]
 8003ec0:	2114      	movs	r1, #20
 8003ec2:	2203      	movs	r2, #3
 8003ec4:	2300      	movs	r3, #0
 8003ec6:	f000 fc57 	bl	8004778 <modbus_construct>
	//
	modbus_construct(packet3, 20, READ_HOLDING_REGISTERS, 0, 2, regs);
 8003eca:	4b15      	ldr	r3, [pc, #84]	; (8003f20 <modbus_Setup+0x80>)
 8003ecc:	9500      	str	r5, [sp, #0]
 8003ece:	9401      	str	r4, [sp, #4]
 8003ed0:	6818      	ldr	r0, [r3, #0]
 8003ed2:	2114      	movs	r1, #20
 8003ed4:	2203      	movs	r2, #3
 8003ed6:	2300      	movs	r3, #0
 8003ed8:	f000 fc4e 	bl	8004778 <modbus_construct>
	//
	modbus_construct(packet4, 20, READ_HOLDING_REGISTERS, 0, 2, regs);
 8003edc:	4b11      	ldr	r3, [pc, #68]	; (8003f24 <modbus_Setup+0x84>)
 8003ede:	9500      	str	r5, [sp, #0]
 8003ee0:	9401      	str	r4, [sp, #4]
 8003ee2:	6818      	ldr	r0, [r3, #0]
 8003ee4:	2114      	movs	r1, #20
 8003ee6:	2203      	movs	r2, #3
 8003ee8:	2300      	movs	r3, #0
 8003eea:	f000 fc45 	bl	8004778 <modbus_construct>
	
	modbus_configure(baud, timeout, polling, retry_count, packets, TOTAL_NO_OF_PACKETS);
 8003eee:	4b0e      	ldr	r3, [pc, #56]	; (8003f28 <modbus_Setup+0x88>)
 8003ef0:	9300      	str	r3, [sp, #0]
 8003ef2:	2200      	movs	r2, #0
 8003ef4:	2304      	movs	r3, #4
 8003ef6:	9301      	str	r3, [sp, #4]
 8003ef8:	f44f 30e1 	mov.w	r0, #115200	; 0x1c200
 8003efc:	f44f 7148 	mov.w	r1, #800	; 0x320
 8003f00:	4613      	mov	r3, r2
 8003f02:	f000 fc0d 	bl	8004720 <modbus_configure>
	
	printf("Modbus Up...\n");
 8003f06:	4809      	ldr	r0, [pc, #36]	; (8003f2c <modbus_Setup+0x8c>)
}
 8003f08:	b003      	add	sp, #12
 8003f0a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	//
	modbus_construct(packet4, 20, READ_HOLDING_REGISTERS, 0, 2, regs);
	
	modbus_configure(baud, timeout, polling, retry_count, packets, TOTAL_NO_OF_PACKETS);
	
	printf("Modbus Up...\n");
 8003f0e:	f00e bf51 	b.w	8012db4 <puts>
 8003f12:	bf00      	nop
 8003f14:	2000000c 	.word	0x2000000c
 8003f18:	2000e450 	.word	0x2000e450
 8003f1c:	20000010 	.word	0x20000010
 8003f20:	20000004 	.word	0x20000004
 8003f24:	20000008 	.word	0x20000008
 8003f28:	2000e3f0 	.word	0x2000e3f0
 8003f2c:	0802167c 	.word	0x0802167c

08003f30 <tft_delay>:
  FSMC_NORSRAMInit(&FSMC_NORSRAMInitStructure);
  // Enable Bank-1 / PSRAM-1
  FSMC_NORSRAMCmd(FSMC_Bank1_NORSRAM1, ENABLE);
}*/

void tft_delay (volatile uint32_t count){
 8003f30:	b082      	sub	sp, #8
 8003f32:	9001      	str	r0, [sp, #4]
	while (count--) {
 8003f34:	9b01      	ldr	r3, [sp, #4]
 8003f36:	1e5a      	subs	r2, r3, #1
 8003f38:	9201      	str	r2, [sp, #4]
 8003f3a:	2b00      	cmp	r3, #0
 8003f3c:	d1fa      	bne.n	8003f34 <tft_delay+0x4>
	}
}
 8003f3e:	b002      	add	sp, #8
 8003f40:	4770      	bx	lr
	...

08003f44 <init_ili9341>:
	LCD_REG = MEMORY_WRITE;
	LCD_DATA = color;
}


void init_ili9341(void) {
 8003f44:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}

	LCD_REG = 0x11;
 8003f48:	f04f 44c0 	mov.w	r4, #1610612736	; 0x60000000
 8003f4c:	2511      	movs	r5, #17
 8003f4e:	8025      	strh	r5, [r4, #0]
	tft_delay(50000);
 8003f50:	f24c 3050 	movw	r0, #50000	; 0xc350
 8003f54:	f7ff ffec 	bl	8003f30 <tft_delay>

 	LCD_REG  = 0xCF;
 8003f58:	23cf      	movs	r3, #207	; 0xcf
 8003f5a:	8023      	strh	r3, [r4, #0]
	LCD_DATA = 0x00;
 8003f5c:	4b59      	ldr	r3, [pc, #356]	; (80040c4 <init_ili9341+0x180>)
 8003f5e:	2200      	movs	r2, #0
	LCD_DATA = 0xc3;
 8003f60:	21c3      	movs	r1, #195	; 0xc3

	LCD_REG = 0x11;
	tft_delay(50000);

 	LCD_REG  = 0xCF;
	LCD_DATA = 0x00;
 8003f62:	801a      	strh	r2, [r3, #0]
	LCD_DATA = 0xc3;
	LCD_DATA = 0X30;
 8003f64:	f04f 0e30 	mov.w	lr, #48	; 0x30
	LCD_REG = 0x11;
	tft_delay(50000);

 	LCD_REG  = 0xCF;
	LCD_DATA = 0x00;
	LCD_DATA = 0xc3;
 8003f68:	8019      	strh	r1, [r3, #0]
	LCD_DATA = 0X30;

 	LCD_REG  = 0xED;
 8003f6a:	21ed      	movs	r1, #237	; 0xed
	tft_delay(50000);

 	LCD_REG  = 0xCF;
	LCD_DATA = 0x00;
	LCD_DATA = 0xc3;
	LCD_DATA = 0X30;
 8003f6c:	f8a3 e000 	strh.w	lr, [r3]

 	LCD_REG  = 0xED;
 8003f70:	8021      	strh	r1, [r4, #0]
	LCD_DATA = 0x64;
 8003f72:	2164      	movs	r1, #100	; 0x64
 8003f74:	8019      	strh	r1, [r3, #0]
	LCD_DATA = 0x03;
	LCD_DATA = 0X12;
 8003f76:	2012      	movs	r0, #18
	LCD_DATA = 0xc3;
	LCD_DATA = 0X30;

 	LCD_REG  = 0xED;
	LCD_DATA = 0x64;
	LCD_DATA = 0x03;
 8003f78:	2103      	movs	r1, #3
 8003f7a:	8019      	strh	r1, [r3, #0]
	LCD_DATA = 0X12;
 8003f7c:	8018      	strh	r0, [r3, #0]
	LCD_DATA = 0X81;
 8003f7e:	2081      	movs	r0, #129	; 0x81
 8003f80:	8018      	strh	r0, [r3, #0]

 	LCD_REG  = 0xE8;
 8003f82:	20e8      	movs	r0, #232	; 0xe8
 8003f84:	8020      	strh	r0, [r4, #0]
	LCD_DATA = 0x85;
 8003f86:	2085      	movs	r0, #133	; 0x85
 8003f88:	8018      	strh	r0, [r3, #0]
	LCD_DATA = 0x10;
 8003f8a:	2610      	movs	r6, #16
	LCD_DATA = 0x79;
 8003f8c:	2079      	movs	r0, #121	; 0x79
	LCD_DATA = 0X12;
	LCD_DATA = 0X81;

 	LCD_REG  = 0xE8;
	LCD_DATA = 0x85;
	LCD_DATA = 0x10;
 8003f8e:	801e      	strh	r6, [r3, #0]
	LCD_DATA = 0x79;
 8003f90:	8018      	strh	r0, [r3, #0]

 	LCD_REG  = 0xCB;
 8003f92:	20cb      	movs	r0, #203	; 0xcb
 8003f94:	8020      	strh	r0, [r4, #0]
	LCD_DATA = 0x39;
 8003f96:	2039      	movs	r0, #57	; 0x39
 8003f98:	8018      	strh	r0, [r3, #0]
	LCD_DATA = 0x2C;
 8003f9a:	f04f 092c 	mov.w	r9, #44	; 0x2c
	LCD_DATA = 0x00;
	LCD_DATA = 0x34;
 8003f9e:	2034      	movs	r0, #52	; 0x34
	LCD_DATA = 0x10;
	LCD_DATA = 0x79;

 	LCD_REG  = 0xCB;
	LCD_DATA = 0x39;
	LCD_DATA = 0x2C;
 8003fa0:	f8a3 9000 	strh.w	r9, [r3]
	LCD_DATA = 0x00;
 8003fa4:	801a      	strh	r2, [r3, #0]
	LCD_DATA = 0x34;
 8003fa6:	8018      	strh	r0, [r3, #0]
	LCD_DATA = 0x02;
 8003fa8:	2002      	movs	r0, #2
 8003faa:	8018      	strh	r0, [r3, #0]

 	LCD_REG  = 0xF7;
 8003fac:	20f7      	movs	r0, #247	; 0xf7
 8003fae:	8020      	strh	r0, [r4, #0]
	LCD_DATA = 0x20;

 	LCD_REG  = 0xEA;
 8003fb0:	27ea      	movs	r7, #234	; 0xea
	LCD_DATA = 0x00;
	LCD_DATA = 0x34;
	LCD_DATA = 0x02;

 	LCD_REG  = 0xF7;
	LCD_DATA = 0x20;
 8003fb2:	2020      	movs	r0, #32
 8003fb4:	8018      	strh	r0, [r3, #0]

 	LCD_REG  = 0xEA;
 8003fb6:	8027      	strh	r7, [r4, #0]
	LCD_DATA = 0x00;
	LCD_DATA = 0x00;

 	LCD_REG  = 0xC0;    //Power control
 8003fb8:	27c0      	movs	r7, #192	; 0xc0

 	LCD_REG  = 0xF7;
	LCD_DATA = 0x20;

 	LCD_REG  = 0xEA;
	LCD_DATA = 0x00;
 8003fba:	801a      	strh	r2, [r3, #0]
	LCD_DATA = 0x00;
 8003fbc:	801a      	strh	r2, [r3, #0]

 	LCD_REG  = 0xC0;    //Power control
 8003fbe:	8027      	strh	r7, [r4, #0]
	LCD_DATA = 0x22;   //VRH[5:0]
 8003fc0:	2722      	movs	r7, #34	; 0x22
 8003fc2:	801f      	strh	r7, [r3, #0]

 	LCD_REG  = 0xC1;    //Power control
 8003fc4:	27c1      	movs	r7, #193	; 0xc1
 8003fc6:	8027      	strh	r7, [r4, #0]
	LCD_DATA = 0x11;   //SAP[2:0];BT[3:0]

 	LCD_REG  = 0xC5;    //VCM control
 8003fc8:	27c5      	movs	r7, #197	; 0xc5

 	LCD_REG  = 0xC0;    //Power control
	LCD_DATA = 0x22;   //VRH[5:0]

 	LCD_REG  = 0xC1;    //Power control
	LCD_DATA = 0x11;   //SAP[2:0];BT[3:0]
 8003fca:	801d      	strh	r5, [r3, #0]

 	LCD_REG  = 0xC5;    //VCM control
 8003fcc:	8027      	strh	r7, [r4, #0]
	LCD_DATA = 0x3d;
 8003fce:	273d      	movs	r7, #61	; 0x3d
 8003fd0:	801f      	strh	r7, [r3, #0]
    //LCD_DataWrite_ILI9341(0x30);
	LCD_DATA = 0x20;
 8003fd2:	8018      	strh	r0, [r3, #0]

 	LCD_REG = 0xC7;    //VCM control2
 8003fd4:	20c7      	movs	r0, #199	; 0xc7
 8003fd6:	8020      	strh	r0, [r4, #0]
    //LCD_DataWrite_ILI9341(0xBD);
	LCD_DATA = 0xAA; //0xB0
 8003fd8:	20aa      	movs	r0, #170	; 0xaa
 8003fda:	8018      	strh	r0, [r3, #0]

 	LCD_REG  = 0x36;    // Memory Access Control
 8003fdc:	2036      	movs	r0, #54	; 0x36
 8003fde:	8020      	strh	r0, [r4, #0]
	LCD_DATA = 0x88;
 8003fe0:	2088      	movs	r0, #136	; 0x88
 8003fe2:	8018      	strh	r0, [r3, #0]

 	LCD_REG  = 0x3A;
 8003fe4:	203a      	movs	r0, #58	; 0x3a
 8003fe6:	8020      	strh	r0, [r4, #0]
	LCD_DATA = 0x55;
 8003fe8:	2055      	movs	r0, #85	; 0x55
 8003fea:	8018      	strh	r0, [r3, #0]

 	LCD_REG  = 0xB1;
 8003fec:	20b1      	movs	r0, #177	; 0xb1
 8003fee:	8020      	strh	r0, [r4, #0]
	LCD_DATA = 0x00;
	LCD_DATA = 0x13;
 8003ff0:	f04f 0a13 	mov.w	sl, #19

 	LCD_REG  = 0xB6;    // Display Function Control
 8003ff4:	20b6      	movs	r0, #182	; 0xb6

 	LCD_REG  = 0x3A;
	LCD_DATA = 0x55;

 	LCD_REG  = 0xB1;
	LCD_DATA = 0x00;
 8003ff6:	801a      	strh	r2, [r3, #0]
	LCD_DATA = 0x13;

 	LCD_REG  = 0xB6;    // Display Function Control
	LCD_DATA = 0x0A;
 8003ff8:	270a      	movs	r7, #10
 	LCD_REG  = 0x3A;
	LCD_DATA = 0x55;

 	LCD_REG  = 0xB1;
	LCD_DATA = 0x00;
	LCD_DATA = 0x13;
 8003ffa:	f8a3 a000 	strh.w	sl, [r3]

 	LCD_REG  = 0xB6;    // Display Function Control
	LCD_DATA = 0x0A;
	LCD_DATA = 0xA2;
 8003ffe:	f04f 08a2 	mov.w	r8, #162	; 0xa2

 	LCD_REG  = 0xB1;
	LCD_DATA = 0x00;
	LCD_DATA = 0x13;

 	LCD_REG  = 0xB6;    // Display Function Control
 8004002:	8020      	strh	r0, [r4, #0]
	LCD_DATA = 0x0A;
	LCD_DATA = 0xA2;

 	LCD_REG  = 0xF6;
 8004004:	20f6      	movs	r0, #246	; 0xf6
 	LCD_REG  = 0xB1;
	LCD_DATA = 0x00;
	LCD_DATA = 0x13;

 	LCD_REG  = 0xB6;    // Display Function Control
	LCD_DATA = 0x0A;
 8004006:	801f      	strh	r7, [r3, #0]
	LCD_DATA = 0xA2;
 8004008:	f8a3 8000 	strh.w	r8, [r3]

 	LCD_REG  = 0xF6;
 800400c:	8020      	strh	r0, [r4, #0]
	LCD_DATA = 0x01;
 800400e:	2001      	movs	r0, #1
 8004010:	8018      	strh	r0, [r3, #0]
	LCD_DATA = 0x30;
 8004012:	f8a3 e000 	strh.w	lr, [r3]

 	LCD_REG  = 0xF2;    // 3Gamma Function Disable
 8004016:	f04f 0ef2 	mov.w	lr, #242	; 0xf2
 800401a:	f8a4 e000 	strh.w	lr, [r4]
	LCD_DATA = 0x00;

 	LCD_REG  = 0x26;    //Gamma curve selected
 800401e:	f04f 0e26 	mov.w	lr, #38	; 0x26
 	LCD_REG  = 0xF6;
	LCD_DATA = 0x01;
	LCD_DATA = 0x30;

 	LCD_REG  = 0xF2;    // 3Gamma Function Disable
	LCD_DATA = 0x00;
 8004022:	801a      	strh	r2, [r3, #0]

 	LCD_REG  = 0x26;    //Gamma curve selected
 8004024:	f8a4 e000 	strh.w	lr, [r4]
	LCD_DATA = 0x01;
 8004028:	8018      	strh	r0, [r3, #0]

 	LCD_REG  = 0xE0;    //Set Gamma
 800402a:	20e0      	movs	r0, #224	; 0xe0
 800402c:	8020      	strh	r0, [r4, #0]
	LCD_DATA = 0x0F;
	LCD_DATA = 0x3F;
 800402e:	f04f 0c3f 	mov.w	ip, #63	; 0x3f

 	LCD_REG  = 0x26;    //Gamma curve selected
	LCD_DATA = 0x01;

 	LCD_REG  = 0xE0;    //Set Gamma
	LCD_DATA = 0x0F;
 8004032:	200f      	movs	r0, #15
	LCD_DATA = 0x3F;
	LCD_DATA = 0x2F;
 8004034:	f04f 0e2f 	mov.w	lr, #47	; 0x2f

 	LCD_REG  = 0x26;    //Gamma curve selected
	LCD_DATA = 0x01;

 	LCD_REG  = 0xE0;    //Set Gamma
	LCD_DATA = 0x0F;
 8004038:	8018      	strh	r0, [r3, #0]
	LCD_DATA = 0x3F;
	LCD_DATA = 0x2F;
	LCD_DATA = 0x0C;
	LCD_DATA = 0x10;
	LCD_DATA = 0x0A;
	LCD_DATA = 0x53;
 800403a:	f04f 0b53 	mov.w	fp, #83	; 0x53
 	LCD_REG  = 0x26;    //Gamma curve selected
	LCD_DATA = 0x01;

 	LCD_REG  = 0xE0;    //Set Gamma
	LCD_DATA = 0x0F;
	LCD_DATA = 0x3F;
 800403e:	f8a3 c000 	strh.w	ip, [r3]
	LCD_DATA = 0x2F;
 8004042:	f8a3 e000 	strh.w	lr, [r3]
	LCD_DATA = 0x0C;
 8004046:	f04f 0e0c 	mov.w	lr, #12
 800404a:	f8a3 e000 	strh.w	lr, [r3]
	LCD_DATA = 0x10;
 800404e:	801e      	strh	r6, [r3, #0]
	LCD_DATA = 0x0A;
 8004050:	801f      	strh	r7, [r3, #0]
	LCD_DATA = 0x53;
 8004052:	f8a3 b000 	strh.w	fp, [r3]
	LCD_DATA = 0XD5;
 8004056:	f04f 0bd5 	mov.w	fp, #213	; 0xd5
 800405a:	f8a3 b000 	strh.w	fp, [r3]
	LCD_DATA = 0x40;
 800405e:	f04f 0b40 	mov.w	fp, #64	; 0x40
 8004062:	f8a3 b000 	strh.w	fp, [r3]
	LCD_DATA = 0x0A;
 8004066:	801f      	strh	r7, [r3, #0]
	LCD_DATA = 0x13;
	LCD_DATA = 0x03;
	LCD_DATA = 0x08;
 8004068:	2708      	movs	r7, #8
	LCD_DATA = 0x0A;
	LCD_DATA = 0x53;
	LCD_DATA = 0XD5;
	LCD_DATA = 0x40;
	LCD_DATA = 0x0A;
	LCD_DATA = 0x13;
 800406a:	f8a3 a000 	strh.w	sl, [r3]
	LCD_DATA = 0x03;
 800406e:	8019      	strh	r1, [r3, #0]
	LCD_DATA = 0x08;
 8004070:	801f      	strh	r7, [r3, #0]
	LCD_DATA = 0x03;
	LCD_DATA = 0x00;

 	LCD_REG  = 0XE1;    //Set Gamma
 8004072:	27e1      	movs	r7, #225	; 0xe1
	LCD_DATA = 0x40;
	LCD_DATA = 0x0A;
	LCD_DATA = 0x13;
	LCD_DATA = 0x03;
	LCD_DATA = 0x08;
	LCD_DATA = 0x03;
 8004074:	8019      	strh	r1, [r3, #0]
	LCD_DATA = 0x00;
 8004076:	801a      	strh	r2, [r3, #0]

 	LCD_REG  = 0XE1;    //Set Gamma
 8004078:	8027      	strh	r7, [r4, #0]
	LCD_DATA = 0x00;
 800407a:	801a      	strh	r2, [r3, #0]
	LCD_DATA = 0x00;
 800407c:	801a      	strh	r2, [r3, #0]
	LCD_DATA = 0x10;
	LCD_DATA = 0x03;
	LCD_DATA = 0x0F;
	LCD_DATA = 0x05;
 800407e:	2205      	movs	r2, #5
	LCD_DATA = 0x00;

 	LCD_REG  = 0XE1;    //Set Gamma
	LCD_DATA = 0x00;
	LCD_DATA = 0x00;
	LCD_DATA = 0x10;
 8004080:	801e      	strh	r6, [r3, #0]
	LCD_DATA = 0x03;
 8004082:	8019      	strh	r1, [r3, #0]
	LCD_DATA = 0x0F;
 8004084:	8018      	strh	r0, [r3, #0]
	LCD_DATA = 0x05;
 8004086:	801a      	strh	r2, [r3, #0]
	LCD_DATA = 0x2C;
 8004088:	f8a3 9000 	strh.w	r9, [r3]
	LCD_DATA = 0xA2;
 800408c:	f8a3 8000 	strh.w	r8, [r3]
	LCD_DATA = 0x3F;
 8004090:	f8a3 c000 	strh.w	ip, [r3]
	LCD_DATA = 0x05;
 8004094:	801a      	strh	r2, [r3, #0]
	LCD_DATA = 0x0E;
 8004096:	220e      	movs	r2, #14
 8004098:	801a      	strh	r2, [r3, #0]
	LCD_DATA = 0x0C;
	LCD_DATA = 0x37;
 800409a:	2237      	movs	r2, #55	; 0x37
	LCD_DATA = 0x2C;
	LCD_DATA = 0xA2;
	LCD_DATA = 0x3F;
	LCD_DATA = 0x05;
	LCD_DATA = 0x0E;
	LCD_DATA = 0x0C;
 800409c:	f8a3 e000 	strh.w	lr, [r3]
	LCD_DATA = 0x37;
 80040a0:	801a      	strh	r2, [r3, #0]
	LCD_DATA = 0x3C;
 80040a2:	223c      	movs	r2, #60	; 0x3c
 80040a4:	801a      	strh	r2, [r3, #0]
	LCD_DATA = 0x0F;
 80040a6:	8018      	strh	r0, [r3, #0]

	LCD_REG  = 0x11;    //Exit Sleep
 80040a8:	8025      	strh	r5, [r4, #0]
	tft_delay(50000);
 80040aa:	f24c 3050 	movw	r0, #50000	; 0xc350
 80040ae:	f7ff ff3f 	bl	8003f30 <tft_delay>
 	LCD_REG  = 0x29;    //Display on
 80040b2:	2329      	movs	r3, #41	; 0x29
 80040b4:	8023      	strh	r3, [r4, #0]
	tft_delay(50000);
 80040b6:	f24c 3050 	movw	r0, #50000	; 0xc350

	LCD_REG = MEMORY_WRITE;
	*/


}
 80040ba:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	LCD_DATA = 0x0F;

	LCD_REG  = 0x11;    //Exit Sleep
	tft_delay(50000);
 	LCD_REG  = 0x29;    //Display on
	tft_delay(50000);
 80040be:	f7ff bf37 	b.w	8003f30 <tft_delay>
 80040c2:	bf00      	nop
 80040c4:	60020000 	.word	0x60020000

080040c8 <FT6206_write_register>:

static uint8_t FT6206_write_register(uint8_t reg, uint8_t data){
	uint8_t return_val = 0;
	
	
	aTxBuffer_I2C[0] = reg;
 80040c8:	4b0c      	ldr	r3, [pc, #48]	; (80040fc <FT6206_write_register+0x34>)
	return_val = aRxBuffer_I2C[0];
	
	return return_val;
}

static uint8_t FT6206_write_register(uint8_t reg, uint8_t data){
 80040ca:	b507      	push	{r0, r1, r2, lr}
	uint8_t return_val = 0;
	
	
	aTxBuffer_I2C[0] = reg;
 80040cc:	7018      	strb	r0, [r3, #0]
	aTxBuffer_I2C[1] = data;
 80040ce:	7059      	strb	r1, [r3, #1]
	/*	REady to transmit?	*/
	while(HAL_I2C_GetState(&I2cHandle) != HAL_I2C_STATE_READY);
 80040d0:	480b      	ldr	r0, [pc, #44]	; (8004100 <FT6206_write_register+0x38>)
 80040d2:	f7ff f8b5 	bl	8003240 <HAL_I2C_GetState>
 80040d6:	2801      	cmp	r0, #1
 80040d8:	d1fa      	bne.n	80040d0 <FT6206_write_register+0x8>
	/* transmit data through "aTxBuffer" buffer */
	if(HAL_I2C_Master_Transmit(&I2cHandle, (uint8_t)FT6206_ADDR<<1, (uint8_t*)aTxBuffer_I2C, TXBUFFERSIZEI2C, 1000)!= HAL_OK){
 80040da:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80040de:	9300      	str	r3, [sp, #0]
 80040e0:	4807      	ldr	r0, [pc, #28]	; (8004100 <FT6206_write_register+0x38>)
 80040e2:	4a06      	ldr	r2, [pc, #24]	; (80040fc <FT6206_write_register+0x34>)
 80040e4:	2170      	movs	r1, #112	; 0x70
 80040e6:	2302      	movs	r3, #2
 80040e8:	f7fe ff66 	bl	8002fb8 <HAL_I2C_Master_Transmit>
 80040ec:	b110      	cbz	r0, 80040f4 <FT6206_write_register+0x2c>
		/* Error_Handler() function is called when Timeout error occurs.
		When Acknowledge failure occurs (Slave don't acknowledge it's address)
		Master restarts communication */
		printf("Error\n");
 80040ee:	4805      	ldr	r0, [pc, #20]	; (8004104 <FT6206_write_register+0x3c>)
 80040f0:	f00e fe60 	bl	8012db4 <puts>
	}
	
	return return_val;
}
 80040f4:	2000      	movs	r0, #0
 80040f6:	b003      	add	sp, #12
 80040f8:	f85d fb04 	ldr.w	pc, [sp], #4
 80040fc:	2000e5fe 	.word	0x2000e5fe
 8004100:	2000e35c 	.word	0x2000e35c
 8004104:	08021737 	.word	0x08021737

08004108 <FT6206_read_register>:


static uint8_t FT6206_read_register(uint8_t reg){
	uint8_t return_val = 0;
	
	aTxBuffer_I2C[0] = reg;
 8004108:	4b1a      	ldr	r3, [pc, #104]	; (8004174 <FT6206_read_register+0x6c>)
static uint8_t FT6206_read_register(uint8_t reg);
static uint8_t FT6206_write_register(uint8_t reg, uint8_t data);



static uint8_t FT6206_read_register(uint8_t reg){
 800410a:	b507      	push	{r0, r1, r2, lr}
	uint8_t return_val = 0;
	
	aTxBuffer_I2C[0] = reg;
 800410c:	7018      	strb	r0, [r3, #0]
	/*	REady to transmit?	*/
	while(HAL_I2C_GetState(&I2cHandle) != HAL_I2C_STATE_READY);
 800410e:	481a      	ldr	r0, [pc, #104]	; (8004178 <FT6206_read_register+0x70>)
 8004110:	f7ff f896 	bl	8003240 <HAL_I2C_GetState>
 8004114:	2801      	cmp	r0, #1
 8004116:	4603      	mov	r3, r0
 8004118:	d1f9      	bne.n	800410e <FT6206_read_register+0x6>
	/* transmit data through "aTxBuffer" buffer */
	if(HAL_I2C_Master_Transmit(&I2cHandle, (uint8_t)FT6206_ADDR<<1, (uint8_t*)aTxBuffer_I2C, (TXBUFFERSIZEI2C -1), 1000)!= HAL_OK){
 800411a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800411e:	9200      	str	r2, [sp, #0]
 8004120:	4815      	ldr	r0, [pc, #84]	; (8004178 <FT6206_read_register+0x70>)
 8004122:	4a14      	ldr	r2, [pc, #80]	; (8004174 <FT6206_read_register+0x6c>)
 8004124:	2170      	movs	r1, #112	; 0x70
 8004126:	f7fe ff47 	bl	8002fb8 <HAL_I2C_Master_Transmit>
 800412a:	b138      	cbz	r0, 800413c <FT6206_read_register+0x34>
		/* Error_Handler() function is called when Timeout error occurs.
		When Acknowledge failure occurs (Slave don't acknowledge it's address)
		Master restarts communication */
		HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_12);
 800412c:	4813      	ldr	r0, [pc, #76]	; (800417c <FT6206_read_register+0x74>)
 800412e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8004132:	f7ff fe5b 	bl	8003dec <HAL_GPIO_TogglePin>
		printf("Error\n");
 8004136:	4812      	ldr	r0, [pc, #72]	; (8004180 <FT6206_read_register+0x78>)
 8004138:	f00e fe3c 	bl	8012db4 <puts>
	}
	
	/*	Wait till end of transmit	*/
	while(HAL_I2C_GetState(&I2cHandle) != HAL_I2C_STATE_READY);
 800413c:	480e      	ldr	r0, [pc, #56]	; (8004178 <FT6206_read_register+0x70>)
 800413e:	f7ff f87f 	bl	8003240 <HAL_I2C_GetState>
 8004142:	2801      	cmp	r0, #1
 8004144:	4603      	mov	r3, r0
 8004146:	d1f9      	bne.n	800413c <FT6206_read_register+0x34>
	/* recept data through "aRxBuffer" buffer */
	if(HAL_I2C_Master_Receive(&I2cHandle, (uint8_t)FT6206_ADDR<<1, (uint8_t *)aRxBuffer_I2C, (RXBUFFERSIZEI2C -1), 1000) != HAL_OK){
 8004148:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800414c:	9200      	str	r2, [sp, #0]
 800414e:	480a      	ldr	r0, [pc, #40]	; (8004178 <FT6206_read_register+0x70>)
 8004150:	4a0c      	ldr	r2, [pc, #48]	; (8004184 <FT6206_read_register+0x7c>)
 8004152:	2170      	movs	r1, #112	; 0x70
 8004154:	f7fe ffa2 	bl	800309c <HAL_I2C_Master_Receive>
 8004158:	b138      	cbz	r0, 800416a <FT6206_read_register+0x62>
		/* Error_Handler() function is called when Timeout error occurs.
		When Acknowledge failure occurs (Slave don't acknowledge it's address)
		Master restarts communication */
		HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_12);
 800415a:	4808      	ldr	r0, [pc, #32]	; (800417c <FT6206_read_register+0x74>)
 800415c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8004160:	f7ff fe44 	bl	8003dec <HAL_GPIO_TogglePin>
		printf("Error\n");
 8004164:	4806      	ldr	r0, [pc, #24]	; (8004180 <FT6206_read_register+0x78>)
 8004166:	f00e fe25 	bl	8012db4 <puts>
	}
	
	return_val = aRxBuffer_I2C[0];
	
	return return_val;
}
 800416a:	4b06      	ldr	r3, [pc, #24]	; (8004184 <FT6206_read_register+0x7c>)
 800416c:	7818      	ldrb	r0, [r3, #0]
 800416e:	b003      	add	sp, #12
 8004170:	f85d fb04 	ldr.w	pc, [sp], #4
 8004174:	2000e5fe 	.word	0x2000e5fe
 8004178:	2000e35c 	.word	0x2000e35c
 800417c:	40020c00 	.word	0x40020c00
 8004180:	08021737 	.word	0x08021737
 8004184:	2000e5e0 	.word	0x2000e5e0

08004188 <FT6206_begin>:
	
	return return_val;
}


uint8_t FT6206_begin(uint8_t threshold){
 8004188:	b538      	push	{r3, r4, r5, lr}
	//  0...255 last byte value read
	uint8_t x = 0;
	
	/*Reset pin 5 msec. low */
	HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_3);
 800418a:	4c20      	ldr	r4, [pc, #128]	; (800420c <FT6206_begin+0x84>)
	
	return return_val;
}


uint8_t FT6206_begin(uint8_t threshold){
 800418c:	4605      	mov	r5, r0
	//  0...255 last byte value read
	uint8_t x = 0;
	
	/*Reset pin 5 msec. low */
	HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_3);
 800418e:	2108      	movs	r1, #8
 8004190:	4620      	mov	r0, r4
 8004192:	f7ff fe2b 	bl	8003dec <HAL_GPIO_TogglePin>
	delay_msec(5);
 8004196:	2005      	movs	r0, #5
 8004198:	f7fd f81e 	bl	80011d8 <delay_msec>
	HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_3);
 800419c:	4620      	mov	r0, r4
 800419e:	2108      	movs	r1, #8
 80041a0:	f7ff fe24 	bl	8003dec <HAL_GPIO_TogglePin>
	
	// change threshold to be higher/lower
	FT6206_write_register((uint8_t)FT6206_REG_THRESHOLD, threshold);
 80041a4:	4629      	mov	r1, r5
 80041a6:	2080      	movs	r0, #128	; 0x80
 80041a8:	f7ff ff8e 	bl	80040c8 <FT6206_write_register>
	
	FT6206_write_register((uint8_t)FT6206_REG_G_MODE, FT6206_INT_POLLING_MODE);
 80041ac:	2100      	movs	r1, #0
 80041ae:	20a4      	movs	r0, #164	; 0xa4
 80041b0:	f7ff ff8a 	bl	80040c8 <FT6206_write_register>
	
	// fill structure
	FT6206.vendor_id = FT6206_read_register((uint8_t)FT6206_REG_VENDID);
 80041b4:	20a8      	movs	r0, #168	; 0xa8
 80041b6:	f7ff ffa7 	bl	8004108 <FT6206_read_register>
 80041ba:	4c15      	ldr	r4, [pc, #84]	; (8004210 <FT6206_begin+0x88>)
 80041bc:	75a0      	strb	r0, [r4, #22]
	FT6206.chip_id = FT6206_read_register((uint8_t)FT6206_REG_CHIPID);
 80041be:	20a3      	movs	r0, #163	; 0xa3
 80041c0:	f7ff ffa2 	bl	8004108 <FT6206_read_register>
 80041c4:	75e0      	strb	r0, [r4, #23]
	FT6206.firmware_version = FT6206_read_register((uint8_t)FT6206_REG_FIRMVERS);
 80041c6:	20a6      	movs	r0, #166	; 0xa6
 80041c8:	f7ff ff9e 	bl	8004108 <FT6206_read_register>
 80041cc:	7620      	strb	r0, [r4, #24]
	FT6206.pointrate = FT6206_read_register((uint8_t)FT6206_REG_POINTRATE);
 80041ce:	2088      	movs	r0, #136	; 0x88
 80041d0:	f7ff ff9a 	bl	8004108 <FT6206_read_register>
 80041d4:	7660      	strb	r0, [r4, #25]
	FT6206.threshold = FT6206_read_register((uint8_t)FT6206_REG_THRESHOLD);
 80041d6:	2080      	movs	r0, #128	; 0x80
 80041d8:	f7ff ff96 	bl	8004108 <FT6206_read_register>

	  printf("Vendor ID       : %6d\n", FT6206.vendor_id);
 80041dc:	7da1      	ldrb	r1, [r4, #22]
	// fill structure
	FT6206.vendor_id = FT6206_read_register((uint8_t)FT6206_REG_VENDID);
	FT6206.chip_id = FT6206_read_register((uint8_t)FT6206_REG_CHIPID);
	FT6206.firmware_version = FT6206_read_register((uint8_t)FT6206_REG_FIRMVERS);
	FT6206.pointrate = FT6206_read_register((uint8_t)FT6206_REG_POINTRATE);
	FT6206.threshold = FT6206_read_register((uint8_t)FT6206_REG_THRESHOLD);
 80041de:	76a0      	strb	r0, [r4, #26]

	  printf("Vendor ID       : %6d\n", FT6206.vendor_id);
 80041e0:	480c      	ldr	r0, [pc, #48]	; (8004214 <FT6206_begin+0x8c>)
 80041e2:	f00e fda5 	bl	8012d30 <printf>
	  printf("Chip ID         : %6d\n", FT6206.chip_id);
 80041e6:	7de1      	ldrb	r1, [r4, #23]
 80041e8:	480b      	ldr	r0, [pc, #44]	; (8004218 <FT6206_begin+0x90>)
 80041ea:	f00e fda1 	bl	8012d30 <printf>
	  printf("Firmware version: %6d\n", FT6206.firmware_version);
 80041ee:	7e21      	ldrb	r1, [r4, #24]
 80041f0:	480a      	ldr	r0, [pc, #40]	; (800421c <FT6206_begin+0x94>)
 80041f2:	f00e fd9d 	bl	8012d30 <printf>
	  printf("Pointrate       : %6d\n", FT6206.pointrate);
 80041f6:	7e61      	ldrb	r1, [r4, #25]
 80041f8:	4809      	ldr	r0, [pc, #36]	; (8004220 <FT6206_begin+0x98>)
 80041fa:	f00e fd99 	bl	8012d30 <printf>
	  printf("Threshold       : %6d\n", FT6206.threshold);
 80041fe:	7ea1      	ldrb	r1, [r4, #26]
 8004200:	4808      	ldr	r0, [pc, #32]	; (8004224 <FT6206_begin+0x9c>)
 8004202:	f00e fd95 	bl	8012d30 <printf>

  return x;
}
 8004206:	2000      	movs	r0, #0
 8004208:	bd38      	pop	{r3, r4, r5, pc}
 800420a:	bf00      	nop
 800420c:	40020800 	.word	0x40020800
 8004210:	2000e5e2 	.word	0x2000e5e2
 8004214:	08021689 	.word	0x08021689
 8004218:	080216a0 	.word	0x080216a0
 800421c:	080216b7 	.word	0x080216b7
 8004220:	080216ce 	.word	0x080216ce
 8004224:	080216e5 	.word	0x080216e5

08004228 <FT6206_read_data>:
	else{
		return 0;
	}
}

void FT6206_read_data(void){
 8004228:	b530      	push	{r4, r5, lr}
 800422a:	b085      	sub	sp, #20
 800422c:	f10d 0501 	add.w	r5, sp, #1
	// array to hold values
  uint8_t raw_tp_data[16];		// array to hold packed info
  uint8_t i;
  uint8_t x;
  
  for (i=2; i<7; i++){
 8004230:	2402      	movs	r4, #2
	  x = FT6206_read_register(i);
 8004232:	4620      	mov	r0, r4
 8004234:	f7ff ff68 	bl	8004108 <FT6206_read_register>
	// array to hold values
  uint8_t raw_tp_data[16];		// array to hold packed info
  uint8_t i;
  uint8_t x;
  
  for (i=2; i<7; i++){
 8004238:	3401      	adds	r4, #1
 800423a:	b2e4      	uxtb	r4, r4
 800423c:	2c07      	cmp	r4, #7
	  x = FT6206_read_register(i);
  	  raw_tp_data[i] = x;
 800423e:	f805 0f01 	strb.w	r0, [r5, #1]!
	// array to hold values
  uint8_t raw_tp_data[16];		// array to hold packed info
  uint8_t i;
  uint8_t x;
  
  for (i=2; i<7; i++){
 8004242:	d1f6      	bne.n	8004232 <FT6206_read_data+0xa>
  	  raw_tp_data[i] = x;
  }

  //FT6206.gesture_id = raw_tp_data[1];

  FT6206.touch_points = raw_tp_data[2];
 8004244:	f89d 2002 	ldrb.w	r2, [sp, #2]
 8004248:	4b11      	ldr	r3, [pc, #68]	; (8004290 <FT6206_read_data+0x68>)
 800424a:	705a      	strb	r2, [r3, #1]
  	FT6206.touch_02_ypos = 0;
  	FT6206.touch_02_weight = 0;
  	FT6206.touch_02_area = 0;
  	return;
  }
  if(FT6206.touch_points == 0){	// error! only 0/1/2 are valid
 800424c:	3a01      	subs	r2, #1
 800424e:	2a01      	cmp	r2, #1
 8004250:	d90a      	bls.n	8004268 <FT6206_read_data+0x40>
  //FT6206.gesture_id = raw_tp_data[1];

  FT6206.touch_points = raw_tp_data[2];

  if(FT6206.touch_points > 2){	// error! only 0/1/2 are valid
  	FT6206.touch_points = 0;
 8004252:	2200      	movs	r2, #0
 8004254:	705a      	strb	r2, [r3, #1]
  	FT6206.touch_01_xpos = 0;
 8004256:	809a      	strh	r2, [r3, #4]
  	FT6206.touch_01_ypos = 0;
 8004258:	811a      	strh	r2, [r3, #8]
  	FT6206.touch_01_weight = 0;
 800425a:	729a      	strb	r2, [r3, #10]
  	FT6206.touch_01_area = 0;
 800425c:	72da      	strb	r2, [r3, #11]
  	FT6206.touch_02_xpos = 0;
 800425e:	81da      	strh	r2, [r3, #14]
  	FT6206.touch_02_ypos = 0;
 8004260:	825a      	strh	r2, [r3, #18]
  	FT6206.touch_02_weight = 0;
 8004262:	751a      	strb	r2, [r3, #20]
  	FT6206.touch_02_area = 0;
 8004264:	755a      	strb	r2, [r3, #21]
 8004266:	e011      	b.n	800428c <FT6206_read_data+0x64>
  	FT6206.touch_02_weight = 0;
  	FT6206.touch_02_area = 0;
    return;
  }

  FT6206.touch_01_xpos = ((raw_tp_data[3]) & 0x0F);	// Mask low nibble of byte
 8004268:	f89d 2003 	ldrb.w	r2, [sp, #3]
 800426c:	f002 010f 	and.w	r1, r2, #15
  FT6206.touch_01_xpos <<= 8;					// left shift 8
  FT6206.touch_01_xpos |= raw_tp_data[4];		// OR with reg(0x04)
 8004270:	f89d 2004 	ldrb.w	r2, [sp, #4]
 8004274:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8004278:	809a      	strh	r2, [r3, #4]
  
  //FT6206.touch_01_event = ((raw_tp_data[3]) >> 4) & 0b11;	//0b00->PressDown 0b01->LiftUp

  FT6206.touch_01_ypos = ((raw_tp_data[5]) & 0x0F);	// Mask low nibble of byte
 800427a:	f89d 2005 	ldrb.w	r2, [sp, #5]
 800427e:	f002 010f 	and.w	r1, r2, #15
  FT6206.touch_01_ypos <<= 8;					// left shift 8
  FT6206.touch_01_ypos |= raw_tp_data[6];		// OR with reg(0x06)
 8004282:	f89d 2006 	ldrb.w	r2, [sp, #6]
 8004286:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800428a:	811a      	strh	r2, [r3, #8]
  //FT6206.touch_02_ypos |= raw_tp_data[12];			// OR with reg(0x04)

  //FT6206.touch_02_id |= (raw_tp_data[11] >> 4);
 	//FT6206.touch_02_weight = raw_tp_data[13];
 	//FT6206.touch_02_area = raw_tp_data[14];
}
 800428c:	b005      	add	sp, #20
 800428e:	bd30      	pop	{r4, r5, pc}
 8004290:	2000e5e2 	.word	0x2000e5e2

08004294 <_ZL12calculateCRCh>:
  * @brief  calculate the crc
  * @param  uint8_t: bufferSize. 
  * @note
  * @retval uint16_t: temp
  */
static uint16_t calculateCRC(uint8_t bufferSize){
 8004294:	b510      	push	{r4, lr}
  uint16_t temp, temp2, flag;
  temp = 0xFFFF;
  for (uint8_t i = 0; i < bufferSize; i++)
 8004296:	2100      	movs	r1, #0
  * @note
  * @retval uint16_t: temp
  */
static uint16_t calculateCRC(uint8_t bufferSize){
  uint16_t temp, temp2, flag;
  temp = 0xFFFF;
 8004298:	f64f 73ff 	movw	r3, #65535	; 0xffff
  for (uint8_t i = 0; i < bufferSize; i++)
 800429c:	b2ca      	uxtb	r2, r1
 800429e:	4282      	cmp	r2, r0
 80042a0:	d212      	bcs.n	80042c8 <_ZL12calculateCRCh+0x34>
  {
    temp = temp ^ frame[i];
 80042a2:	4a0c      	ldr	r2, [pc, #48]	; (80042d4 <_ZL12calculateCRCh+0x40>)
 80042a4:	5c8a      	ldrb	r2, [r1, r2]
 80042a6:	4053      	eors	r3, r2
 80042a8:	2208      	movs	r2, #8
    for (uint8_t j = 1; j <= 8; j++)
    {
      flag = temp & 0x0001;
 80042aa:	f003 0401 	and.w	r4, r3, #1
      temp >>= 1;
 80042ae:	085b      	lsrs	r3, r3, #1
      if (flag)
 80042b0:	b124      	cbz	r4, 80042bc <_ZL12calculateCRCh+0x28>
        temp ^= 0xA001;
 80042b2:	f483 4320 	eor.w	r3, r3, #40960	; 0xa000
 80042b6:	f083 0301 	eor.w	r3, r3, #1
 80042ba:	b29b      	uxth	r3, r3
 80042bc:	3a01      	subs	r2, #1
  uint16_t temp, temp2, flag;
  temp = 0xFFFF;
  for (uint8_t i = 0; i < bufferSize; i++)
  {
    temp = temp ^ frame[i];
    for (uint8_t j = 1; j <= 8; j++)
 80042be:	f012 02ff 	ands.w	r2, r2, #255	; 0xff
 80042c2:	d1f2      	bne.n	80042aa <_ZL12calculateCRCh+0x16>
 80042c4:	3101      	adds	r1, #1
 80042c6:	e7e9      	b.n	800429c <_ZL12calculateCRCh+0x8>
 80042c8:	0a18      	lsrs	r0, r3, #8
 80042ca:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
  temp = (temp << 8) | temp2;
  temp &= 0xFFFF;
  // the returned value is already swapped
  // crcLo byte is first & crcHi byte is last
  return temp; 
}
 80042ce:	b280      	uxth	r0, r0
 80042d0:	bd10      	pop	{r4, pc}
 80042d2:	bf00      	nop
 80042d4:	2000d408 	.word	0x2000d408

080042d8 <_ZL14processSuccessv>:
	state = WAITING_FOR_TURNAROUND;
	delayStart = timeout_timer(); // start the turnaround delay
}

void processSuccess()
{
 80042d8:	b508      	push	{r3, lr}
	packet->successful_requests++; // transaction sent successfully
 80042da:	4b07      	ldr	r3, [pc, #28]	; (80042f8 <_ZL14processSuccessv+0x20>)
 80042dc:	681b      	ldr	r3, [r3, #0]
 80042de:	89da      	ldrh	r2, [r3, #14]
 80042e0:	3201      	adds	r2, #1
 80042e2:	81da      	strh	r2, [r3, #14]
	packet->retries = 0; // if a request was successful reset the retry counter
 80042e4:	2200      	movs	r2, #0
 80042e6:	829a      	strh	r2, [r3, #20]
	state = WAITING_FOR_TURNAROUND;
 80042e8:	4b04      	ldr	r3, [pc, #16]	; (80042fc <_ZL14processSuccessv+0x24>)
 80042ea:	2203      	movs	r2, #3
 80042ec:	701a      	strb	r2, [r3, #0]
	delayStart = timeout_timer(); // start the turnaround delay
 80042ee:	f7fc ff7d 	bl	80011ec <timeout_timer>
 80042f2:	4b03      	ldr	r3, [pc, #12]	; (8004300 <_ZL14processSuccessv+0x28>)
 80042f4:	6018      	str	r0, [r3, #0]
 80042f6:	bd08      	pop	{r3, pc}
 80042f8:	2000e01c 	.word	0x2000e01c
 80042fc:	2000e020 	.word	0x2000e020
 8004300:	2000dc10 	.word	0x2000dc10

08004304 <_ZL12processErrorv>:
  else
    processError();
}

void processError()
{
 8004304:	b508      	push	{r3, lr}
	packet->retries++;
 8004306:	4b0c      	ldr	r3, [pc, #48]	; (8004338 <_ZL12processErrorv+0x34>)
 8004308:	681b      	ldr	r3, [r3, #0]
	packet->failed_requests++;
 800430a:	8a19      	ldrh	r1, [r3, #16]
    processError();
}

void processError()
{
	packet->retries++;
 800430c:	8a9a      	ldrh	r2, [r3, #20]
	packet->failed_requests++;
 800430e:	3101      	adds	r1, #1
 8004310:	8219      	strh	r1, [r3, #16]
	
	// if the number of retries have reached the max number of retries 
	// allowable, stop requesting the specific packet
	if (packet->retries == retry_count){
 8004312:	490a      	ldr	r1, [pc, #40]	; (800433c <_ZL12processErrorv+0x38>)
    processError();
}

void processError()
{
	packet->retries++;
 8004314:	3201      	adds	r2, #1
	packet->failed_requests++;
	
	// if the number of retries have reached the max number of retries 
	// allowable, stop requesting the specific packet
	if (packet->retries == retry_count){
 8004316:	7809      	ldrb	r1, [r1, #0]
    processError();
}

void processError()
{
	packet->retries++;
 8004318:	b292      	uxth	r2, r2
	packet->failed_requests++;
	
	// if the number of retries have reached the max number of retries 
	// allowable, stop requesting the specific packet
	if (packet->retries == retry_count){
 800431a:	4291      	cmp	r1, r2
    processError();
}

void processError()
{
	packet->retries++;
 800431c:	829a      	strh	r2, [r3, #20]
	packet->failed_requests++;
	
	// if the number of retries have reached the max number of retries 
	// allowable, stop requesting the specific packet
	if (packet->retries == retry_count){
		packet->connection = 0;
 800431e:	bf02      	ittt	eq
 8004320:	2200      	moveq	r2, #0
 8004322:	759a      	strbeq	r2, [r3, #22]
		packet->retries = 0;
 8004324:	829a      	strheq	r2, [r3, #20]
	}
	state = WAITING_FOR_TURNAROUND;
 8004326:	4b06      	ldr	r3, [pc, #24]	; (8004340 <_ZL12processErrorv+0x3c>)
 8004328:	2203      	movs	r2, #3
 800432a:	701a      	strb	r2, [r3, #0]
	delayStart = timeout_timer(); // start the turnaround delay
 800432c:	f7fc ff5e 	bl	80011ec <timeout_timer>
 8004330:	4b04      	ldr	r3, [pc, #16]	; (8004344 <_ZL12processErrorv+0x40>)
 8004332:	6018      	str	r0, [r3, #0]
 8004334:	bd08      	pop	{r3, pc}
 8004336:	bf00      	nop
 8004338:	2000e01c 	.word	0x2000e01c
 800433c:	2000d808 	.word	0x2000d808
 8004340:	2000e020 	.word	0x2000e020
 8004344:	2000dc10 	.word	0x2000dc10

08004348 <modbus_update>:
  * @brief  update the state machine
  * @param  none 
  * @note   3 states: idle, waiting reply, waiting turnaround
  * @retval None
  */
void modbus_update(){
 8004348:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	//std::printf("state: %d\n", state);
	switch (state)
 800434c:	4cb2      	ldr	r4, [pc, #712]	; (8004618 <modbus_update+0x2d0>)
 800434e:	7823      	ldrb	r3, [r4, #0]
 8004350:	2b02      	cmp	r3, #2
 8004352:	4625      	mov	r5, r4
 8004354:	f000 80d1 	beq.w	80044fa <modbus_update+0x1b2>
 8004358:	2b03      	cmp	r3, #3
 800435a:	f000 81c2 	beq.w	80046e2 <modbus_update+0x39a>
 800435e:	2b01      	cmp	r3, #1
 8004360:	f040 81d0 	bne.w	8004704 <modbus_update+0x3bc>
	uint16_t failed_connections = 0;
	uint8_t current_connection;
	
	do
	{		
		if (packet_index == total_no_of_packets) // wrap around to the beginning
 8004364:	4bad      	ldr	r3, [pc, #692]	; (800461c <modbus_update+0x2d4>)
 8004366:	49ae      	ldr	r1, [pc, #696]	; (8004620 <modbus_update+0x2d8>)
 8004368:	881e      	ldrh	r6, [r3, #0]
			packet_index = 0;
				
		// proceed to the next packet
		packet = &packetArray[packet_index];
 800436a:	4bae      	ldr	r3, [pc, #696]	; (8004624 <modbus_update+0x2dc>)
 800436c:	681f      	ldr	r7, [r3, #0]
 800436e:	880b      	ldrh	r3, [r1, #0]
 8004370:	2000      	movs	r0, #0
	uint8_t current_connection;
	
	do
	{		
		if (packet_index == total_no_of_packets) // wrap around to the beginning
			packet_index = 0;
 8004372:	42b3      	cmp	r3, r6
 8004374:	bf08      	it	eq
 8004376:	2300      	moveq	r3, #0
				
		// proceed to the next packet
		packet = &packetArray[packet_index];
 8004378:	2218      	movs	r2, #24
 800437a:	fb02 7203 	mla	r2, r2, r3, r7
		
		// get the current connection status
		current_connection = packet->connection;
 800437e:	7d94      	ldrb	r4, [r2, #22]
		
		if (!current_connection)
 8004380:	b944      	cbnz	r4, 8004394 <modbus_update+0x4c>
		{			
			// If all the connection attributes are false return
			// immediately to the main sketch
			if (++failed_connections == total_no_of_packets)
 8004382:	3001      	adds	r0, #1
 8004384:	b280      	uxth	r0, r0
 8004386:	42b0      	cmp	r0, r6
 8004388:	d104      	bne.n	8004394 <modbus_update+0x4c>
 800438a:	800b      	strh	r3, [r1, #0]
 800438c:	4ba6      	ldr	r3, [pc, #664]	; (8004628 <modbus_update+0x2e0>)
 800438e:	601a      	str	r2, [r3, #0]
 8004390:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
				return;
		}
		packet_index++;     
 8004394:	3301      	adds	r3, #1
 8004396:	b29b      	uxth	r3, r3
{
	static uint16_t packet_index;
	uint16_t failed_connections = 0;
	uint8_t current_connection;
	
	do
 8004398:	2c00      	cmp	r4, #0
 800439a:	d0ea      	beq.n	8004372 <modbus_update+0x2a>
 800439c:	800b      	strh	r3, [r1, #0]
 800439e:	4fa2      	ldr	r7, [pc, #648]	; (8004628 <modbus_update+0x2e0>)
  
void constructPacket()
{
  uint8_t frameSize;
  
  packet->requests++;
 80043a0:	8993      	ldrh	r3, [r2, #12]
  frame[0] = packet->id;
 80043a2:	4ea2      	ldr	r6, [pc, #648]	; (800462c <modbus_update+0x2e4>)
 80043a4:	603a      	str	r2, [r7, #0]
  
void constructPacket()
{
  uint8_t frameSize;
  
  packet->requests++;
 80043a6:	3301      	adds	r3, #1
 80043a8:	8193      	strh	r3, [r2, #12]
  frame[0] = packet->id;
 80043aa:	7813      	ldrb	r3, [r2, #0]
 80043ac:	7033      	strb	r3, [r6, #0]
  frame[1] = packet->function;
 80043ae:	7853      	ldrb	r3, [r2, #1]
 80043b0:	7073      	strb	r3, [r6, #1]
  frame[2] = packet->address >> 8; // address Hi
 80043b2:	8853      	ldrh	r3, [r2, #2]
 80043b4:	121b      	asrs	r3, r3, #8
 80043b6:	70b3      	strb	r3, [r6, #2]
  frame[3] = packet->address & 0xFF; // address Lo
 80043b8:	8853      	ldrh	r3, [r2, #2]
 80043ba:	70f3      	strb	r3, [r6, #3]
  // For functions 1 & 2 data is the number of points
  // For functions 3, 4 & 16 data is the number of registers
  // For function 15 data is the number of coils
  frame[4] = packet->data >> 8; // MSB
 80043bc:	8893      	ldrh	r3, [r2, #4]
 80043be:	121b      	asrs	r3, r3, #8
 80043c0:	7133      	strb	r3, [r6, #4]
  frame[5] = packet->data & 0xFF; // LSB
 80043c2:	8893      	ldrh	r3, [r2, #4]
 80043c4:	7173      	strb	r3, [r6, #5]
	
  // construct the frame according to the modbus function  
  if (packet->function == PRESET_MULTIPLE_REGISTERS) 
 80043c6:	7853      	ldrb	r3, [r2, #1]
 80043c8:	2b10      	cmp	r3, #16
 80043ca:	d11a      	bne.n	8004402 <modbus_update+0xba>
	return frameSize;
}

uint8_t construct_F16()
{
	uint8_t no_of_bytes = packet->data * 2; 
 80043cc:	7914      	ldrb	r4, [r2, #4]
 80043ce:	0064      	lsls	r4, r4, #1
 80043d0:	b2e4      	uxtb	r4, r4
    
	// first 6 bytes of the array + no_of_bytes + 2 bytes CRC 
	frame[6] = no_of_bytes; // number of bytes
 80043d2:	71b4      	strb	r4, [r6, #6]
 80043d4:	f892 e004 	ldrb.w	lr, [r2, #4]
	uint8_t index = 7; // user data starts at index 7
	uint8_t no_of_registers = packet->data;
 80043d8:	2100      	movs	r1, #0
 80043da:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 80043de:	b2cb      	uxtb	r3, r1
 80043e0:	f103 0c07 	add.w	ip, r3, #7
	uint16_t temp;

  for(uint8_t i = 0; i < no_of_registers; i++)
 80043e4:	4571      	cmp	r1, lr
 80043e6:	fa5f fc8c 	uxtb.w	ip, ip
 80043ea:	d03e      	beq.n	800446a <modbus_update+0x122>
  {
    temp = packet->register_array[i]; // get the data
 80043ec:	6890      	ldr	r0, [r2, #8]
 80043ee:	3308      	adds	r3, #8
 80043f0:	5a40      	ldrh	r0, [r0, r1]
    frame[index] = temp >> 8;
    index++;
    frame[index] = temp & 0xFF;
 80043f2:	b2db      	uxtb	r3, r3
	uint16_t temp;

  for(uint8_t i = 0; i < no_of_registers; i++)
  {
    temp = packet->register_array[i]; // get the data
    frame[index] = temp >> 8;
 80043f4:	ea4f 2820 	mov.w	r8, r0, asr #8
 80043f8:	f806 800c 	strb.w	r8, [r6, ip]
 80043fc:	3102      	adds	r1, #2
    index++;
    frame[index] = temp & 0xFF;
 80043fe:	54f0      	strb	r0, [r6, r3]
 8004400:	e7ed      	b.n	80043de <modbus_update+0x96>
  frame[5] = packet->data & 0xFF; // LSB
	
  // construct the frame according to the modbus function  
  if (packet->function == PRESET_MULTIPLE_REGISTERS) 
		frameSize = construct_F16();
	else if (packet->function == FORCE_MULTIPLE_COILS)
 8004402:	2b0f      	cmp	r3, #15
 8004404:	d134      	bne.n	8004470 <modbus_update+0x128>

uint8_t construct_F15()
{
  // function 15 coil information is packed LSB first until the first 16 bits are completed
  // It is received the same way..
  uint8_t no_of_registers = packet->data / 16;
 8004406:	8893      	ldrh	r3, [r2, #4]
 8004408:	f3c3 1e07 	ubfx	lr, r3, #4, #8
  uint8_t no_of_bytes = no_of_registers * 2;
 800440c:	ea4f 044e 	mov.w	r4, lr, lsl #1
  uint8_t bytes_processed = 0;
  uint8_t index = 7; // user data starts at index 7
  uint16_t temp;
	
  // if the number of points dont fit in even 2byte amounts (one register) then use another register and pad 
  if (packet->data % 16 > 0) 
 8004410:	0719      	lsls	r1, r3, #28
uint8_t construct_F15()
{
  // function 15 coil information is packed LSB first until the first 16 bits are completed
  // It is received the same way..
  uint8_t no_of_registers = packet->data / 16;
  uint8_t no_of_bytes = no_of_registers * 2;
 8004412:	b2e4      	uxtb	r4, r4
	
  // if the number of points dont fit in even 2byte amounts (one register) then use another register and pad 
  if (packet->data % 16 > 0) 
  {
    no_of_registers++;
    no_of_bytes++;
 8004414:	bf1e      	ittt	ne
 8004416:	3401      	addne	r4, #1
  uint16_t temp;
	
  // if the number of points dont fit in even 2byte amounts (one register) then use another register and pad 
  if (packet->data % 16 > 0) 
  {
    no_of_registers++;
 8004418:	f10e 0e01 	addne.w	lr, lr, #1
    no_of_bytes++;
 800441c:	b2e4      	uxtbne	r4, r4
  }
	
  frame[6] = no_of_bytes;
 800441e:	f04f 0800 	mov.w	r8, #0
  uint16_t temp;
	
  // if the number of points dont fit in even 2byte amounts (one register) then use another register and pad 
  if (packet->data % 16 > 0) 
  {
    no_of_registers++;
 8004422:	bf18      	it	ne
 8004424:	fa5f fe8e 	uxtbne.w	lr, lr
    no_of_bytes++;
  }
	
  frame[6] = no_of_bytes;
 8004428:	71b4      	strb	r4, [r6, #6]
  // function 15 coil information is packed LSB first until the first 16 bits are completed
  // It is received the same way..
  uint8_t no_of_registers = packet->data / 16;
  uint8_t no_of_bytes = no_of_registers * 2;
  uint8_t bytes_processed = 0;
  uint8_t index = 7; // user data starts at index 7
 800442a:	f04f 0c07 	mov.w	ip, #7
{
  // function 15 coil information is packed LSB first until the first 16 bits are completed
  // It is received the same way..
  uint8_t no_of_registers = packet->data / 16;
  uint8_t no_of_bytes = no_of_registers * 2;
  uint8_t bytes_processed = 0;
 800442e:	46c1      	mov	r9, r8
    no_of_bytes++;
  }
	
  frame[6] = no_of_bytes;
	
  for(uint8_t i = 0; i < no_of_registers; i++)
 8004430:	fa5f f388 	uxtb.w	r3, r8
 8004434:	4573      	cmp	r3, lr
 8004436:	d218      	bcs.n	800446a <modbus_update+0x122>
  {
    temp = packet->register_array[i]; // get the data
 8004438:	6891      	ldr	r1, [r2, #8]
 800443a:	f831 0018 	ldrh.w	r0, [r1, r8, lsl #1]
    frame[index] = temp & 0xFF; 
 800443e:	f806 000c 	strb.w	r0, [r6, ip]
    bytes_processed++;
 8004442:	f109 0101 	add.w	r1, r9, #1
 8004446:	b2cb      	uxtb	r3, r1
     
    if (bytes_processed < no_of_bytes)
 8004448:	42a3      	cmp	r3, r4
 800444a:	d20a      	bcs.n	8004462 <modbus_update+0x11a>
    {
      frame[index + 1] = temp >> 8;
 800444c:	4b77      	ldr	r3, [pc, #476]	; (800462c <modbus_update+0x2e4>)
 800444e:	4463      	add	r3, ip
 8004450:	1200      	asrs	r0, r0, #8
 8004452:	7058      	strb	r0, [r3, #1]
      bytes_processed++;
      index += 2;
 8004454:	f10c 0c02 	add.w	ip, ip, #2
    bytes_processed++;
     
    if (bytes_processed < no_of_bytes)
    {
      frame[index + 1] = temp >> 8;
      bytes_processed++;
 8004458:	f109 0302 	add.w	r3, r9, #2
 800445c:	b2db      	uxtb	r3, r3
      index += 2;
 800445e:	fa5f fc8c 	uxtb.w	ip, ip
 8004462:	f108 0801 	add.w	r8, r8, #1
{
  // function 15 coil information is packed LSB first until the first 16 bits are completed
  // It is received the same way..
  uint8_t no_of_registers = packet->data / 16;
  uint8_t no_of_bytes = no_of_registers * 2;
  uint8_t bytes_processed = 0;
 8004466:	4699      	mov	r9, r3
 8004468:	e7e2      	b.n	8004430 <modbus_update+0xe8>
      frame[index + 1] = temp >> 8;
      bytes_processed++;
      index += 2;
    }
  }
	uint8_t frameSize = (9 + no_of_bytes); // first 7 bytes of the array + 2 bytes CRC + noOfBytes 
 800446a:	3409      	adds	r4, #9
 800446c:	b2e4      	uxtb	r4, r4
 800446e:	e000      	b.n	8004472 <modbus_update+0x12a>
  if (packet->function == PRESET_MULTIPLE_REGISTERS) 
		frameSize = construct_F16();
	else if (packet->function == FORCE_MULTIPLE_COILS)
		frameSize = construct_F15();
	else // else functions 1,2,3 & 4 is assumed. They all share the exact same request format.
    frameSize = 8; // the request is always 8 bytes in size for the above mentioned functions.
 8004470:	2408      	movs	r4, #8
		
  uint16_t crc16 = calculateCRC(frameSize - 2);	
 8004472:	1ea0      	subs	r0, r4, #2
 8004474:	b2c0      	uxtb	r0, r0
 8004476:	f7ff ff0d 	bl	8004294 <_ZL12calculateCRCh>
  frame[frameSize - 2] = crc16 >> 8; // split crc into 2 bytes
 800447a:	1933      	adds	r3, r6, r4
 800447c:	1202      	asrs	r2, r0, #8
 800447e:	f803 2c02 	strb.w	r2, [r3, #-2]
  frame[frameSize - 1] = crc16 & 0xFF;
 8004482:	f803 0c01 	strb.w	r0, [r3, #-1]
	//digitalWrite(TxEnablePin, HIGH);
		
	// It may be necessary to add a another character delay T1_5 here to
	// avoid truncating the message on slow and long distance connections

	if(HAL_UART_Transmit_IT(&UartHandle, (uint8_t*)aTxBuffer_Usart, bufferSize)!= HAL_OK){
 8004486:	496a      	ldr	r1, [pc, #424]	; (8004630 <modbus_update+0x2e8>)
 8004488:	486a      	ldr	r0, [pc, #424]	; (8004634 <modbus_update+0x2ec>)
 800448a:	4622      	mov	r2, r4
 800448c:	f7ff f8ae 	bl	80035ec <HAL_UART_Transmit_IT>
 8004490:	b110      	cbz	r0, 8004498 <modbus_update+0x150>
		std::printf("USART Transmit Error\n");
 8004492:	4869      	ldr	r0, [pc, #420]	; (8004638 <modbus_update+0x2f0>)
 8004494:	f00e fc8e 	bl	8012db4 <puts>
  if (packet->function == PRESET_MULTIPLE_REGISTERS) 
		frameSize = construct_F16();
	else if (packet->function == FORCE_MULTIPLE_COILS)
		frameSize = construct_F15();
	else // else functions 1,2,3 & 4 is assumed. They all share the exact same request format.
    frameSize = 8; // the request is always 8 bytes in size for the above mentioned functions.
 8004498:	f04f 0800 	mov.w	r8, #0

	if(HAL_UART_Transmit_IT(&UartHandle, (uint8_t*)aTxBuffer_Usart, bufferSize)!= HAL_OK){
		std::printf("USART Transmit Error\n");
	}

	for (uint8_t i = 0; i < bufferSize; i++){
 800449c:	fa5f f388 	uxtb.w	r3, r8
 80044a0:	42a3      	cmp	r3, r4
 80044a2:	d20b      	bcs.n	80044bc <modbus_update+0x174>
		aTxBuffer_Usart[i] = frame[i];
 80044a4:	4b62      	ldr	r3, [pc, #392]	; (8004630 <modbus_update+0x2e8>)
 80044a6:	f816 2008 	ldrb.w	r2, [r6, r8]
 80044aa:	f808 2003 	strb.w	r2, [r8, r3]
		std::printf("Transmitbuffer[%d]: %d\n", i, frame[i]);
 80044ae:	4641      	mov	r1, r8
 80044b0:	4862      	ldr	r0, [pc, #392]	; (800463c <modbus_update+0x2f4>)
 80044b2:	f00e fc3d 	bl	8012d30 <printf>
 80044b6:	f108 0801 	add.w	r8, r8, #1
 80044ba:	e7ef      	b.n	800449c <modbus_update+0x154>
		
	/*while(UartReady_Transmit != SET){
		std::printf("Waiting on bus free!\n");
	}*/
		
	UartReady_Transmit = RESET;
 80044bc:	4b60      	ldr	r3, [pc, #384]	; (8004640 <modbus_update+0x2f8>)

	if(HAL_UART_Receive_IT(&UartHandle, (uint8_t *)aRxBuffer_Usart, (packet->data * 2) + 5) != HAL_OK){
 80044be:	485d      	ldr	r0, [pc, #372]	; (8004634 <modbus_update+0x2ec>)
 80044c0:	4960      	ldr	r1, [pc, #384]	; (8004644 <modbus_update+0x2fc>)
		
	/*while(UartReady_Transmit != SET){
		std::printf("Waiting on bus free!\n");
	}*/
		
	UartReady_Transmit = RESET;
 80044c2:	2200      	movs	r2, #0
 80044c4:	701a      	strb	r2, [r3, #0]

	if(HAL_UART_Receive_IT(&UartHandle, (uint8_t *)aRxBuffer_Usart, (packet->data * 2) + 5) != HAL_OK){
 80044c6:	683b      	ldr	r3, [r7, #0]
 80044c8:	889a      	ldrh	r2, [r3, #4]
 80044ca:	0052      	lsls	r2, r2, #1
 80044cc:	3205      	adds	r2, #5
 80044ce:	b292      	uxth	r2, r2
 80044d0:	f7ff f8c0 	bl	8003654 <HAL_UART_Receive_IT>
 80044d4:	b110      	cbz	r0, 80044dc <modbus_update+0x194>
		std::printf("USART Receive Error\n");
 80044d6:	485c      	ldr	r0, [pc, #368]	; (8004648 <modbus_update+0x300>)
 80044d8:	f00e fc6c 	bl	8012db4 <puts>
		std::printf("Bussy receiving");
	}*/
	
	//digitalWrite(TxEnablePin, LOW);
		
	delayStart = timeout_timer(); // start the timeout delay	
 80044dc:	f7fc fe86 	bl	80011ec <timeout_timer>
 80044e0:	4b5a      	ldr	r3, [pc, #360]	; (800464c <modbus_update+0x304>)
 80044e2:	6018      	str	r0, [r3, #0]
  uint16_t crc16 = calculateCRC(frameSize - 2);	
  frame[frameSize - 2] = crc16 >> 8; // split crc into 2 bytes
  frame[frameSize - 1] = crc16 & 0xFF;
  sendPacket(frameSize);

  state = WAITING_FOR_REPLY; // state change
 80044e4:	2302      	movs	r3, #2
 80044e6:	702b      	strb	r3, [r5, #0]
	
  // if broadcast is requested (id == 0) for function 15 or 16 then override 
  // the previous state and force a success since the slave wont respond
  if (packet->id == 0)
 80044e8:	683b      	ldr	r3, [r7, #0]
 80044ea:	781b      	ldrb	r3, [r3, #0]
 80044ec:	2b00      	cmp	r3, #0
 80044ee:	f040 8109 	bne.w	8004704 <modbus_update+0x3bc>
		break;
		case WAITING_FOR_TURNAROUND:
		waiting_for_turnaround();
		break;
	}
}
 80044f2:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  state = WAITING_FOR_REPLY; // state change
	
  // if broadcast is requested (id == 0) for function 15 or 16 then override 
  // the previous state and force a success since the slave wont respond
  if (packet->id == 0)
		processSuccess();
 80044f6:	f7ff beef 	b.w	80042d8 <_ZL14processSuccessv>
  * @note   wait a reply from requested slave
  * @retval None
  */
void waiting_for_reply()
{
	buffer = 0;
 80044fa:	4b55      	ldr	r3, [pc, #340]	; (8004650 <modbus_update+0x308>)
 80044fc:	2200      	movs	r2, #0
 80044fe:	701a      	strb	r2, [r3, #0]
		
	if(__HAL_UART_GET_FLAG(&UartHandle, UART_FLAG_RXNE) != RESET){
 8004500:	4a4c      	ldr	r2, [pc, #304]	; (8004634 <modbus_update+0x2ec>)
 8004502:	6812      	ldr	r2, [r2, #0]
 8004504:	6812      	ldr	r2, [r2, #0]
 8004506:	f012 0f20 	tst.w	r2, #32
 800450a:	4699      	mov	r9, r3
 800450c:	f040 80f6 	bne.w	80046fc <modbus_update+0x3b4>
		std::printf("RX not empty...\n");
	}

	if(UartReady_Receive != RESET){
 8004510:	4b50      	ldr	r3, [pc, #320]	; (8004654 <modbus_update+0x30c>)
 8004512:	781a      	ldrb	r2, [r3, #0]
 8004514:	469a      	mov	sl, r3
 8004516:	2a00      	cmp	r2, #0
 8004518:	f000 80cd 	beq.w	80046b6 <modbus_update+0x36e>
		for(buffer = 0; buffer < (packet->data * 2) + 5; buffer++){
 800451c:	2300      	movs	r3, #0
 800451e:	f889 3000 	strb.w	r3, [r9]
 8004522:	4e41      	ldr	r6, [pc, #260]	; (8004628 <modbus_update+0x2e0>)
 8004524:	f899 4000 	ldrb.w	r4, [r9]
 8004528:	6837      	ldr	r7, [r6, #0]
 800452a:	f8df b124 	ldr.w	fp, [pc, #292]	; 8004650 <modbus_update+0x308>
 800452e:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8004532:	4d3e      	ldr	r5, [pc, #248]	; (800462c <modbus_update+0x2e4>)
 8004534:	f108 0302 	add.w	r3, r8, #2
 8004538:	ebb4 0f43 	cmp.w	r4, r3, lsl #1
 800453c:	dc0c      	bgt.n	8004558 <modbus_update+0x210>
			frame[buffer] = aRxBuffer_Usart[buffer];
 800453e:	4b41      	ldr	r3, [pc, #260]	; (8004644 <modbus_update+0x2fc>)
			std::printf("ReceiveBuffer[%d]: %d\n", buffer, frame[buffer]);
 8004540:	4845      	ldr	r0, [pc, #276]	; (8004658 <modbus_update+0x310>)
		std::printf("RX not empty...\n");
	}

	if(UartReady_Receive != RESET){
		for(buffer = 0; buffer < (packet->data * 2) + 5; buffer++){
			frame[buffer] = aRxBuffer_Usart[buffer];
 8004542:	5d1a      	ldrb	r2, [r3, r4]
 8004544:	552a      	strb	r2, [r5, r4]
			std::printf("ReceiveBuffer[%d]: %d\n", buffer, frame[buffer]);
 8004546:	4621      	mov	r1, r4
 8004548:	f00e fbf2 	bl	8012d30 <printf>
	if(__HAL_UART_GET_FLAG(&UartHandle, UART_FLAG_RXNE) != RESET){
		std::printf("RX not empty...\n");
	}

	if(UartReady_Receive != RESET){
		for(buffer = 0; buffer < (packet->data * 2) + 5; buffer++){
 800454c:	f89b 3000 	ldrb.w	r3, [fp]
 8004550:	3301      	adds	r3, #1
 8004552:	f88b 3000 	strb.w	r3, [fp]
 8004556:	e7e4      	b.n	8004522 <modbus_update+0x1da>
			frame[buffer] = aRxBuffer_Usart[buffer];
			std::printf("ReceiveBuffer[%d]: %d\n", buffer, frame[buffer]);
		}
		UartReady_Receive = RESET;
 8004558:	2300      	movs	r3, #0
 800455a:	f88a 3000 	strb.w	r3, [sl]

		if(frame[0] = packet->id){
 800455e:	783b      	ldrb	r3, [r7, #0]
 8004560:	702b      	strb	r3, [r5, #0]
 8004562:	2b00      	cmp	r3, #0
 8004564:	f000 80ce 	beq.w	8004704 <modbus_update+0x3bc>

void processReply()
{
  // combine the crc Low & High bytes
  uint16_t received_crc = ((frame[buffer - 2] << 8) | frame[buffer - 1]); 
  uint16_t calculated_crc = calculateCRC(buffer - 2);
 8004568:	1ea0      	subs	r0, r4, #2
}

void processReply()
{
  // combine the crc Low & High bytes
  uint16_t received_crc = ((frame[buffer - 2] << 8) | frame[buffer - 1]); 
 800456a:	442c      	add	r4, r5
  uint16_t calculated_crc = calculateCRC(buffer - 2);
 800456c:	b2c0      	uxtb	r0, r0
 800456e:	f7ff fe91 	bl	8004294 <_ZL12calculateCRCh>
}

void processReply()
{
  // combine the crc Low & High bytes
  uint16_t received_crc = ((frame[buffer - 2] << 8) | frame[buffer - 1]); 
 8004572:	f814 2c02 	ldrb.w	r2, [r4, #-2]
 8004576:	f814 3c01 	ldrb.w	r3, [r4, #-1]
  uint16_t calculated_crc = calculateCRC(buffer - 2);
	
	// verify checksum
	if(calculated_crc == received_crc){
 800457a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800457e:	4298      	cmp	r0, r3
 8004580:	f040 8095 	bne.w	80046ae <modbus_update+0x366>
		// To indicate an exception response a slave will 'OR' 
		// the requested function with 0x80
		if((frame[1] & 0x80) == 0x80){
 8004584:	786b      	ldrb	r3, [r5, #1]
 8004586:	061a      	lsls	r2, r3, #24
 8004588:	d503      	bpl.n	8004592 <modbus_update+0x24a>
			packet->exception_errors++;
 800458a:	8a7b      	ldrh	r3, [r7, #18]
 800458c:	3301      	adds	r3, #1
 800458e:	827b      	strh	r3, [r7, #18]
 8004590:	e08d      	b.n	80046ae <modbus_update+0x366>
 8004592:	3b01      	subs	r3, #1
 8004594:	b2db      	uxtb	r3, r3
 8004596:	2b0f      	cmp	r3, #15
 8004598:	f200 8089 	bhi.w	80046ae <modbus_update+0x366>
 800459c:	2201      	movs	r2, #1
 800459e:	fa02 f303 	lsl.w	r3, r2, r3
 80045a2:	f413 4240 	ands.w	r2, r3, #49152	; 0xc000
 80045a6:	d174      	bne.n	8004692 <modbus_update+0x34a>
 80045a8:	f013 0f0c 	tst.w	r3, #12
 80045ac:	d156      	bne.n	800465c <modbus_update+0x314>
 80045ae:	079b      	lsls	r3, r3, #30
 80045b0:	d07d      	beq.n	80046ae <modbus_update+0x366>
}

void process_F1_F2()
{
	// packet->data for function 1 & 2 is actually the number of boolean points
  uint8_t no_of_registers = packet->data / 16;
 80045b2:	f3c8 1007 	ubfx	r0, r8, #4, #8
  uint8_t number_of_bytes = no_of_registers * 2; 
 80045b6:	0043      	lsls	r3, r0, #1
       
  // if the number of points dont fit in even 2byte amounts (one register) then use another register and pad 
  if(packet->data % 16 > 0) 
 80045b8:	f018 0f0f 	tst.w	r8, #15

void process_F1_F2()
{
	// packet->data for function 1 & 2 is actually the number of boolean points
  uint8_t no_of_registers = packet->data / 16;
  uint8_t number_of_bytes = no_of_registers * 2; 
 80045bc:	b2db      	uxtb	r3, r3
       
  // if the number of points dont fit in even 2byte amounts (one register) then use another register and pad 
  if(packet->data % 16 > 0) 
  {
    no_of_registers++;
    number_of_bytes++;
 80045be:	bf18      	it	ne
 80045c0:	3301      	addne	r3, #1
  }
             
  if (frame[2] == number_of_bytes) // check number of bytes returned
 80045c2:	78ae      	ldrb	r6, [r5, #2]
  uint8_t number_of_bytes = no_of_registers * 2; 
       
  // if the number of points dont fit in even 2byte amounts (one register) then use another register and pad 
  if(packet->data % 16 > 0) 
  {
    no_of_registers++;
 80045c4:	bf1e      	ittt	ne
 80045c6:	3001      	addne	r0, #1
    number_of_bytes++;
 80045c8:	b2db      	uxtbne	r3, r3
  uint8_t number_of_bytes = no_of_registers * 2; 
       
  // if the number of points dont fit in even 2byte amounts (one register) then use another register and pad 
  if(packet->data % 16 > 0) 
  {
    no_of_registers++;
 80045ca:	b2c0      	uxtbne	r0, r0
    number_of_bytes++;
  }
             
  if (frame[2] == number_of_bytes) // check number of bytes returned
 80045cc:	429e      	cmp	r6, r3
 80045ce:	d16e      	bne.n	80046ae <modbus_update+0x366>
 80045d0:	f04f 0e00 	mov.w	lr, #0
 80045d4:	2403      	movs	r4, #3
 80045d6:	46f4      	mov	ip, lr
  { 
    uint8_t bytes_processed = 0;
    uint8_t index = 3; // start at the 4th element in the frame and combine the Lo byte  
    uint16_t temp;
    for(uint8_t i = 0; i < no_of_registers; i++)
 80045d8:	fa5f f38e 	uxtb.w	r3, lr
 80045dc:	4283      	cmp	r3, r0
 80045de:	d288      	bcs.n	80044f2 <modbus_update+0x1aa>
    {
      temp = frame[index]; 
      bytes_processed++;
 80045e0:	f10c 0201 	add.w	r2, ip, #1
 80045e4:	b2d3      	uxtb	r3, r2
      if(bytes_processed < number_of_bytes)
 80045e6:	42b3      	cmp	r3, r6
      {
				temp = (frame[index + 1] << 8) | temp;
 80045e8:	bf38      	it	cc
 80045ea:	4a10      	ldrcc	r2, [pc, #64]	; (800462c <modbus_update+0x2e4>)
    uint8_t bytes_processed = 0;
    uint8_t index = 3; // start at the 4th element in the frame and combine the Lo byte  
    uint16_t temp;
    for(uint8_t i = 0; i < no_of_registers; i++)
    {
      temp = frame[index]; 
 80045ec:	5d29      	ldrb	r1, [r5, r4]
      bytes_processed++;
      if(bytes_processed < number_of_bytes)
      {
				temp = (frame[index + 1] << 8) | temp;
 80045ee:	bf37      	itett	cc
 80045f0:	1912      	addcc	r2, r2, r4
    uint8_t bytes_processed = 0;
    uint8_t index = 3; // start at the 4th element in the frame and combine the Lo byte  
    uint16_t temp;
    for(uint8_t i = 0; i < no_of_registers; i++)
    {
      temp = frame[index]; 
 80045f2:	b28a      	uxthcs	r2, r1
      bytes_processed++;
      if(bytes_processed < number_of_bytes)
      {
				temp = (frame[index + 1] << 8) | temp;
 80045f4:	7852      	ldrbcc	r2, [r2, #1]
        bytes_processed++;
 80045f6:	f10c 0302 	addcc.w	r3, ip, #2
    {
      temp = frame[index]; 
      bytes_processed++;
      if(bytes_processed < number_of_bytes)
      {
				temp = (frame[index + 1] << 8) | temp;
 80045fa:	bf38      	it	cc
 80045fc:	ea41 2202 	orrcc.w	r2, r1, r2, lsl #8
        bytes_processed++;
        index += 2;
      }
      packet->register_array[i] = temp;
 8004600:	68b9      	ldr	r1, [r7, #8]
      temp = frame[index]; 
      bytes_processed++;
      if(bytes_processed < number_of_bytes)
      {
				temp = (frame[index + 1] << 8) | temp;
        bytes_processed++;
 8004602:	bf3c      	itt	cc
 8004604:	b2db      	uxtbcc	r3, r3
        index += 2;
 8004606:	3402      	addcc	r4, #2
      }
      packet->register_array[i] = temp;
 8004608:	f821 201e 	strh.w	r2, [r1, lr, lsl #1]
      bytes_processed++;
      if(bytes_processed < number_of_bytes)
      {
				temp = (frame[index + 1] << 8) | temp;
        bytes_processed++;
        index += 2;
 800460c:	bf38      	it	cc
 800460e:	b2e4      	uxtbcc	r4, r4
 8004610:	f10e 0e01 	add.w	lr, lr, #1
      }
      packet->register_array[i] = temp;
 8004614:	469c      	mov	ip, r3
 8004616:	e7df      	b.n	80045d8 <modbus_update+0x290>
 8004618:	2000e020 	.word	0x2000e020
 800461c:	2000d406 	.word	0x2000d406
 8004620:	2000dc14 	.word	0x2000dc14
 8004624:	2000dc0c 	.word	0x2000dc0c
 8004628:	2000e01c 	.word	0x2000e01c
 800462c:	2000d408 	.word	0x2000d408
 8004630:	2000dc1a 	.word	0x2000dc1a
 8004634:	2000e2bc 	.word	0x2000e2bc
 8004638:	080216fc 	.word	0x080216fc
 800463c:	08021711 	.word	0x08021711
 8004640:	2000e01a 	.word	0x2000e01a
 8004644:	2000d809 	.word	0x2000d809
 8004648:	08021729 	.word	0x08021729
 800464c:	2000dc10 	.word	0x2000dc10
 8004650:	2000e01b 	.word	0x2000e01b
 8004654:	2000d404 	.word	0x2000d404
 8004658:	0802173d 	.word	0x0802173d

void process_F3_F4()
{
  // check number of bytes returned - unsigned int == 2 bytes
  // data for function 3 & 4 is the number of registers
  if (frame[2] == (packet->data * 2)) 
 800465c:	78ab      	ldrb	r3, [r5, #2]
 800465e:	ebb3 0f48 	cmp.w	r3, r8, lsl #1
 8004662:	d124      	bne.n	80046ae <modbus_update+0x366>
  {
    uint8_t index = 3;
    for(uint8_t i = 0; i < packet->data; i++)
 8004664:	6830      	ldr	r0, [r6, #0]
 8004666:	b2d1      	uxtb	r1, r2
 8004668:	1c54      	adds	r4, r2, #1
 800466a:	8882      	ldrh	r2, [r0, #4]
 800466c:	004b      	lsls	r3, r1, #1
 800466e:	3303      	adds	r3, #3
 8004670:	428a      	cmp	r2, r1
 8004672:	b2db      	uxtb	r3, r3
 8004674:	f67f af3d 	bls.w	80044f2 <modbus_update+0x1aa>
    {
      // start at the 4th element in the frame and combine the Lo byte 
      packet->register_array[i] = (frame[index] << 8) | frame[index + 1]; 
 8004678:	5cea      	ldrb	r2, [r5, r3]
 800467a:	442b      	add	r3, r5
 800467c:	785b      	ldrb	r3, [r3, #1]
 800467e:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 8004682:	6883      	ldr	r3, [r0, #8]
      std::printf("Reg[%d]: %#04x\n", i, packet->register_array[i]);
 8004684:	4820      	ldr	r0, [pc, #128]	; (8004708 <modbus_update+0x3c0>)
  {
    uint8_t index = 3;
    for(uint8_t i = 0; i < packet->data; i++)
    {
      // start at the 4th element in the frame and combine the Lo byte 
      packet->register_array[i] = (frame[index] << 8) | frame[index + 1]; 
 8004686:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
      std::printf("Reg[%d]: %#04x\n", i, packet->register_array[i]);
 800468a:	f00e fb51 	bl	8012d30 <printf>
 800468e:	4622      	mov	r2, r4
 8004690:	e7e8      	b.n	8004664 <modbus_update+0x31c>

void process_F15_F16()
{
	// Functions 15 & 16 is just an echo of the query
  uint16_t recieved_address = ((frame[2] << 8) | frame[3]);
  uint16_t recieved_data = ((frame[4] << 8) | frame[5]);
 8004692:	792a      	ldrb	r2, [r5, #4]
 8004694:	796b      	ldrb	r3, [r5, #5]
}

void process_F15_F16()
{
	// Functions 15 & 16 is just an echo of the query
  uint16_t recieved_address = ((frame[2] << 8) | frame[3]);
 8004696:	78a8      	ldrb	r0, [r5, #2]
  uint16_t recieved_data = ((frame[4] << 8) | frame[5]);
		
  if ((recieved_address == packet->address) && (recieved_data == packet->data))
 8004698:	8879      	ldrh	r1, [r7, #2]

void process_F15_F16()
{
	// Functions 15 & 16 is just an echo of the query
  uint16_t recieved_address = ((frame[2] << 8) | frame[3]);
  uint16_t recieved_data = ((frame[4] << 8) | frame[5]);
 800469a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
}

void process_F15_F16()
{
	// Functions 15 & 16 is just an echo of the query
  uint16_t recieved_address = ((frame[2] << 8) | frame[3]);
 800469e:	78ea      	ldrb	r2, [r5, #3]
  uint16_t recieved_data = ((frame[4] << 8) | frame[5]);
		
  if ((recieved_address == packet->address) && (recieved_data == packet->data))
 80046a0:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80046a4:	4291      	cmp	r1, r2
 80046a6:	d102      	bne.n	80046ae <modbus_update+0x366>
 80046a8:	4543      	cmp	r3, r8
 80046aa:	f43f af22 	beq.w	80044f2 <modbus_update+0x1aa>
		break;
		case WAITING_FOR_TURNAROUND:
		waiting_for_turnaround();
		break;
	}
}
 80046ae:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
				case FORCE_MULTIPLE_COILS:
				case PRESET_MULTIPLE_REGISTERS:
				process_F15_F16();
				break;
				default: // illegal function returned
				processError();
 80046b2:	f7ff be27 	b.w	8004304 <_ZL12processErrorv>
	/*else if(frame[0] != packet->id)
		processError();*/
	/*else
		processReply();*/

	else if((timeout_timer() - delayStart) > timeout){
 80046b6:	4c15      	ldr	r4, [pc, #84]	; (800470c <modbus_update+0x3c4>)
 80046b8:	f7fc fd98 	bl	80011ec <timeout_timer>
 80046bc:	6823      	ldr	r3, [r4, #0]
 80046be:	1ac0      	subs	r0, r0, r3
 80046c0:	4b13      	ldr	r3, [pc, #76]	; (8004710 <modbus_update+0x3c8>)
 80046c2:	881b      	ldrh	r3, [r3, #0]
 80046c4:	4298      	cmp	r0, r3
 80046c6:	d91d      	bls.n	8004704 <modbus_update+0x3bc>
		std::printf("TimeOut: %d\n", (timeout_timer() - delayStart));
 80046c8:	f7fc fd90 	bl	80011ec <timeout_timer>
 80046cc:	6821      	ldr	r1, [r4, #0]
 80046ce:	1a41      	subs	r1, r0, r1
 80046d0:	4810      	ldr	r0, [pc, #64]	; (8004714 <modbus_update+0x3cc>)
 80046d2:	f00e fb2d 	bl	8012d30 <printf>
		processError();
 80046d6:	f7ff fe15 	bl	8004304 <_ZL12processErrorv>
		state = IDLE; //state change, override processError() state
 80046da:	2301      	movs	r3, #1
 80046dc:	702b      	strb	r3, [r5, #0]
 80046de:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	return frameSize;
}

void waiting_for_turnaround()
{
  if ((timeout_timer() - delayStart) > polling)
 80046e2:	f7fc fd83 	bl	80011ec <timeout_timer>
 80046e6:	4b09      	ldr	r3, [pc, #36]	; (800470c <modbus_update+0x3c4>)
 80046e8:	681b      	ldr	r3, [r3, #0]
 80046ea:	1ac0      	subs	r0, r0, r3
 80046ec:	4b0a      	ldr	r3, [pc, #40]	; (8004718 <modbus_update+0x3d0>)
 80046ee:	881b      	ldrh	r3, [r3, #0]
 80046f0:	4298      	cmp	r0, r3
 80046f2:	d907      	bls.n	8004704 <modbus_update+0x3bc>
		state = IDLE;
 80046f4:	2301      	movs	r3, #1
 80046f6:	7023      	strb	r3, [r4, #0]
 80046f8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
void waiting_for_reply()
{
	buffer = 0;
		
	if(__HAL_UART_GET_FLAG(&UartHandle, UART_FLAG_RXNE) != RESET){
		std::printf("RX not empty...\n");
 80046fc:	4807      	ldr	r0, [pc, #28]	; (800471c <modbus_update+0x3d4>)
 80046fe:	f00e fb59 	bl	8012db4 <puts>
 8004702:	e705      	b.n	8004510 <modbus_update+0x1c8>
 8004704:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004708:	08021754 	.word	0x08021754
 800470c:	2000dc10 	.word	0x2000dc10
 8004710:	2000dc08 	.word	0x2000dc08
 8004714:	08021764 	.word	0x08021764
 8004718:	2000dc18 	.word	0x2000dc18
 800471c:	08021771 	.word	0x08021771

08004720 <modbus_configure>:
				uint16_t _timeout, 
				uint16_t _polling,
				uint8_t _retry_count,
				Packet* _packets, 
				uint16_t _total_no_of_packets)
{ 
 8004720:	b530      	push	{r4, r5, lr}
  // an inter-character must be 1.5T or 1.5 times longer than a character. Thus
  // 1.5T = 1.14583ms * 1.5 = 1.71875ms. A frame delay is 3.5T.
  // Thus the formula is T1.5(us) = (1000ms * 1000(us) * 1.5 * 11bits)/baud
  // 1000ms * 1000(us) * 1.5 * 11bits = 16500000 can be calculated as a constant
	
	if (baud > 19200)
 8004722:	f5b0 4f96 	cmp.w	r0, #19200	; 0x4b00
 8004726:	4d0c      	ldr	r5, [pc, #48]	; (8004758 <modbus_configure+0x38>)
		T1_5 = 750;
	else 
		T1_5 = 16500000/baud; // 1T * 1.5 = T1.5
 8004728:	bf9a      	itte	ls
 800472a:	4c0c      	ldrls	r4, [pc, #48]	; (800475c <modbus_configure+0x3c>)
 800472c:	fbb4 f0f0 	udivls	r0, r4, r0
  // 1.5T = 1.14583ms * 1.5 = 1.71875ms. A frame delay is 3.5T.
  // Thus the formula is T1.5(us) = (1000ms * 1000(us) * 1.5 * 11bits)/baud
  // 1000ms * 1000(us) * 1.5 * 11bits = 16500000 can be calculated as a constant
	
	if (baud > 19200)
		T1_5 = 750;
 8004730:	f240 20ee 	movwhi	r0, #750	; 0x2ee
	else 
		T1_5 = 16500000/baud; // 1T * 1.5 = T1.5
 8004734:	8028      	strh	r0, [r5, #0]
	
	// initialize
	state = IDLE;
 8004736:	480a      	ldr	r0, [pc, #40]	; (8004760 <modbus_configure+0x40>)
 8004738:	2401      	movs	r4, #1
 800473a:	7004      	strb	r4, [r0, #0]
	timeout = _timeout;
 800473c:	4809      	ldr	r0, [pc, #36]	; (8004764 <modbus_configure+0x44>)
 800473e:	8001      	strh	r1, [r0, #0]
	polling = _polling;
 8004740:	4909      	ldr	r1, [pc, #36]	; (8004768 <modbus_configure+0x48>)
 8004742:	800a      	strh	r2, [r1, #0]
	retry_count = _retry_count;
 8004744:	4a09      	ldr	r2, [pc, #36]	; (800476c <modbus_configure+0x4c>)
 8004746:	7013      	strb	r3, [r2, #0]
	//TxEnablePin = _TxEnablePin;
	total_no_of_packets = _total_no_of_packets;
 8004748:	4b09      	ldr	r3, [pc, #36]	; (8004770 <modbus_configure+0x50>)
 800474a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800474e:	801a      	strh	r2, [r3, #0]
	packetArray = _packets;
 8004750:	4b08      	ldr	r3, [pc, #32]	; (8004774 <modbus_configure+0x54>)
 8004752:	9a03      	ldr	r2, [sp, #12]
 8004754:	601a      	str	r2, [r3, #0]
 8004756:	bd30      	pop	{r4, r5, pc}
 8004758:	2000dc16 	.word	0x2000dc16
 800475c:	00fbc520 	.word	0x00fbc520
 8004760:	2000e020 	.word	0x2000e020
 8004764:	2000dc08 	.word	0x2000dc08
 8004768:	2000dc18 	.word	0x2000dc18
 800476c:	2000d808 	.word	0x2000d808
 8004770:	2000d406 	.word	0x2000d406
 8004774:	2000dc0c 	.word	0x2000dc0c

08004778 <modbus_construct>:
				uint16_t data, 
				uint16_t* register_array)
{
	_packet->id = id;
	_packet->function = function;
	_packet->address = address;
 8004778:	8043      	strh	r3, [r0, #2]
	_packet->data = data;
 800477a:	f8bd 3000 	ldrh.w	r3, [sp]
 800477e:	8083      	strh	r3, [r0, #4]
	_packet->register_array = register_array;
 8004780:	9b01      	ldr	r3, [sp, #4]
 8004782:	6083      	str	r3, [r0, #8]
	_packet->connection = 1;
 8004784:	2301      	movs	r3, #1
				uint8_t function, 
				uint16_t address, 
				uint16_t data, 
				uint16_t* register_array)
{
	_packet->id = id;
 8004786:	7001      	strb	r1, [r0, #0]
	_packet->function = function;
 8004788:	7042      	strb	r2, [r0, #1]
	_packet->address = address;
	_packet->data = data;
	_packet->register_array = register_array;
	_packet->connection = 1;
 800478a:	7583      	strb	r3, [r0, #22]
 800478c:	4770      	bx	lr
	...

08004790 <HAL_UART_TxCpltCallback>:
  *         you can add your own implementation. 
  * @retval None
  */
void HAL_UART_TxCpltCallback(UART_HandleTypeDef *UartHandle){
  /* Set transmission flag: transfer complete */
  UartReady_Transmit = SET;
 8004790:	4b01      	ldr	r3, [pc, #4]	; (8004798 <HAL_UART_TxCpltCallback+0x8>)
 8004792:	2201      	movs	r2, #1
 8004794:	701a      	strb	r2, [r3, #0]
 8004796:	4770      	bx	lr
 8004798:	2000e01a 	.word	0x2000e01a

0800479c <HAL_UART_RxCpltCallback>:
  *         you can add your own implementation.
  * @retval None
  */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *UartHandle){
  /* Set transmission flag: transfer complete */
  UartReady_Receive = SET;
 800479c:	4b01      	ldr	r3, [pc, #4]	; (80047a4 <HAL_UART_RxCpltCallback+0x8>)
 800479e:	2201      	movs	r2, #1
 80047a0:	701a      	strb	r2, [r3, #0]
 80047a2:	4770      	bx	lr
 80047a4:	2000d404 	.word	0x2000d404

080047a8 <HAL_UART_ErrorCallback>:
  * @param  UartHandle: UART handle
  * @note   This example shows a simple way to report transfer error, and you can
  *         add your own implementation.
  * @retval None
  */
void HAL_UART_ErrorCallback(UART_HandleTypeDef *UartHandle){
 80047a8:	b510      	push	{r4, lr}
 80047aa:	4604      	mov	r4, r0
  /* Transfer error in reception/transmission process */
	std::printf("USART bus Error\n"); 
 80047ac:	4804      	ldr	r0, [pc, #16]	; (80047c0 <HAL_UART_ErrorCallback+0x18>)
 80047ae:	f00e fb01 	bl	8012db4 <puts>
	std::printf("Uart Error Code: %d\n", UartHandle->ErrorCode);
 80047b2:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 80047b4:	4803      	ldr	r0, [pc, #12]	; (80047c4 <HAL_UART_ErrorCallback+0x1c>)
}
 80047b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  * @retval None
  */
void HAL_UART_ErrorCallback(UART_HandleTypeDef *UartHandle){
  /* Transfer error in reception/transmission process */
	std::printf("USART bus Error\n"); 
	std::printf("Uart Error Code: %d\n", UartHandle->ErrorCode);
 80047ba:	f00e bab9 	b.w	8012d30 <printf>
 80047be:	bf00      	nop
 80047c0:	08021781 	.word	0x08021781
 80047c4:	08021791 	.word	0x08021791

080047c8 <TEXT_SetTextColor>:
 80047c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80047ca:	460c      	mov	r4, r1
 80047cc:	4605      	mov	r5, r0
 80047ce:	b160      	cbz	r0, 80047ea <TEXT_SetTextColor+0x22>
 80047d0:	f009 f9b4 	bl	800db3c <GUI_ALLOC_LockH>
 80047d4:	6b82      	ldr	r2, [r0, #56]	; 0x38
 80047d6:	9001      	str	r0, [sp, #4]
 80047d8:	42a2      	cmp	r2, r4
 80047da:	d003      	beq.n	80047e4 <TEXT_SetTextColor+0x1c>
 80047dc:	6384      	str	r4, [r0, #56]	; 0x38
 80047de:	4628      	mov	r0, r5
 80047e0:	f003 fe12 	bl	8008408 <WM_InvalidateWindow>
 80047e4:	a801      	add	r0, sp, #4
 80047e6:	f009 f9b7 	bl	800db58 <GUI_ALLOC_UnlockH>
 80047ea:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

080047ec <TEXT_SetTextAlign>:
 80047ec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80047ee:	460d      	mov	r5, r1
 80047f0:	4604      	mov	r4, r0
 80047f2:	b160      	cbz	r0, 800480e <TEXT_SetTextAlign+0x22>
 80047f4:	f009 f9a2 	bl	800db3c <GUI_ALLOC_LockH>
 80047f8:	4602      	mov	r2, r0
 80047fa:	a802      	add	r0, sp, #8
 80047fc:	f8a2 5048 	strh.w	r5, [r2, #72]	; 0x48
 8004800:	f840 2d04 	str.w	r2, [r0, #-4]!
 8004804:	f009 f9a8 	bl	800db58 <GUI_ALLOC_UnlockH>
 8004808:	4620      	mov	r0, r4
 800480a:	f003 fdfd 	bl	8008408 <WM_InvalidateWindow>
 800480e:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08004810 <TEXT_SetText>:
 8004810:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004812:	460c      	mov	r4, r1
 8004814:	4605      	mov	r5, r0
 8004816:	b300      	cbz	r0, 800485a <TEXT_SetText+0x4a>
 8004818:	f009 f990 	bl	800db3c <GUI_ALLOC_LockH>
 800481c:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800481e:	9000      	str	r0, [sp, #0]
 8004820:	4668      	mov	r0, sp
 8004822:	9301      	str	r3, [sp, #4]
 8004824:	f009 f998 	bl	800db58 <GUI_ALLOC_UnlockH>
 8004828:	4621      	mov	r1, r4
 800482a:	a801      	add	r0, sp, #4
 800482c:	f007 f85e 	bl	800b8ec <GUI__SetText>
 8004830:	f1d0 0401 	rsbs	r4, r0, #1
 8004834:	bf38      	it	cc
 8004836:	2400      	movcc	r4, #0
 8004838:	b984      	cbnz	r4, 800485c <TEXT_SetText+0x4c>
 800483a:	4628      	mov	r0, r5
 800483c:	f009 f97e 	bl	800db3c <GUI_ALLOC_LockH>
 8004840:	9a01      	ldr	r2, [sp, #4]
 8004842:	6c41      	ldr	r1, [r0, #68]	; 0x44
 8004844:	9000      	str	r0, [sp, #0]
 8004846:	4291      	cmp	r1, r2
 8004848:	bf18      	it	ne
 800484a:	6442      	strne	r2, [r0, #68]	; 0x44
 800484c:	4668      	mov	r0, sp
 800484e:	f009 f983 	bl	800db58 <GUI_ALLOC_UnlockH>
 8004852:	4628      	mov	r0, r5
 8004854:	f003 fdd8 	bl	8008408 <WM_InvalidateWindow>
 8004858:	e000      	b.n	800485c <TEXT_SetText+0x4c>
 800485a:	2401      	movs	r4, #1
 800485c:	4620      	mov	r0, r4
 800485e:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08004860 <TEXT_SetFont>:
 8004860:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004862:	460c      	mov	r4, r1
 8004864:	4605      	mov	r5, r0
 8004866:	b160      	cbz	r0, 8004882 <TEXT_SetFont+0x22>
 8004868:	f009 f968 	bl	800db3c <GUI_ALLOC_LockH>
 800486c:	6b42      	ldr	r2, [r0, #52]	; 0x34
 800486e:	9001      	str	r0, [sp, #4]
 8004870:	42a2      	cmp	r2, r4
 8004872:	d003      	beq.n	800487c <TEXT_SetFont+0x1c>
 8004874:	6344      	str	r4, [r0, #52]	; 0x34
 8004876:	4628      	mov	r0, r5
 8004878:	f003 fdc6 	bl	8008408 <WM_InvalidateWindow>
 800487c:	a801      	add	r0, sp, #4
 800487e:	f009 f96b 	bl	800db58 <GUI_ALLOC_UnlockH>
 8004882:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08004884 <TEXT_CreateIndirect>:
 8004884:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004886:	b087      	sub	sp, #28
 8004888:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 800488c:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8004890:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8004894:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8004898:	9100      	str	r1, [sp, #0]
 800489a:	2102      	movs	r1, #2
 800489c:	9101      	str	r1, [sp, #4]
 800489e:	8a44      	ldrh	r4, [r0, #18]
 80048a0:	9402      	str	r4, [sp, #8]
 80048a2:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80048a6:	9103      	str	r1, [sp, #12]
 80048a8:	6844      	ldr	r4, [r0, #4]
 80048aa:	9404      	str	r4, [sp, #16]
 80048ac:	6984      	ldr	r4, [r0, #24]
 80048ae:	18f9      	adds	r1, r7, r3
 80048b0:	eb0e 0002 	add.w	r0, lr, r2
 80048b4:	9405      	str	r4, [sp, #20]
 80048b6:	4632      	mov	r2, r6
 80048b8:	462b      	mov	r3, r5
 80048ba:	f000 f865 	bl	8004988 <TEXT_CreateUser>
 80048be:	b007      	add	sp, #28
 80048c0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080048c2 <TEXT_Callback>:
 80048c2:	b530      	push	{r4, r5, lr}
 80048c4:	6845      	ldr	r5, [r0, #4]
 80048c6:	4604      	mov	r4, r0
 80048c8:	b085      	sub	sp, #20
 80048ca:	4628      	mov	r0, r5
 80048cc:	4621      	mov	r1, r4
 80048ce:	f009 fd75 	bl	800e3bc <WIDGET_HandleActive>
 80048d2:	2800      	cmp	r0, #0
 80048d4:	d056      	beq.n	8004984 <TEXT_Callback+0xc2>
 80048d6:	6823      	ldr	r3, [r4, #0]
 80048d8:	2b0f      	cmp	r3, #15
 80048da:	d01e      	beq.n	800491a <TEXT_Callback+0x58>
 80048dc:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 80048e0:	d00e      	beq.n	8004900 <TEXT_Callback+0x3e>
 80048e2:	2b0b      	cmp	r3, #11
 80048e4:	d14b      	bne.n	800497e <TEXT_Callback+0xbc>
 80048e6:	4628      	mov	r0, r5
 80048e8:	f009 f928 	bl	800db3c <GUI_ALLOC_LockH>
 80048ec:	ad04      	add	r5, sp, #16
 80048ee:	f845 0d0c 	str.w	r0, [r5, #-12]!
 80048f2:	3044      	adds	r0, #68	; 0x44
 80048f4:	f009 fb74 	bl	800dfe0 <GUI_ALLOC_FreePtr>
 80048f8:	4628      	mov	r0, r5
 80048fa:	f009 f92d 	bl	800db58 <GUI_ALLOC_UnlockH>
 80048fe:	e03e      	b.n	800497e <TEXT_Callback+0xbc>
 8004900:	68e0      	ldr	r0, [r4, #12]
 8004902:	b128      	cbz	r0, 8004910 <TEXT_Callback+0x4e>
 8004904:	7a01      	ldrb	r1, [r0, #8]
 8004906:	2900      	cmp	r1, #0
 8004908:	bf0c      	ite	eq
 800490a:	2102      	moveq	r1, #2
 800490c:	2101      	movne	r1, #1
 800490e:	e000      	b.n	8004912 <TEXT_Callback+0x50>
 8004910:	2103      	movs	r1, #3
 8004912:	4628      	mov	r0, r5
 8004914:	f002 febb 	bl	800768e <WM_NotifyParent>
 8004918:	e031      	b.n	800497e <TEXT_Callback+0xbc>
 800491a:	4628      	mov	r0, r5
 800491c:	f009 f90e 	bl	800db3c <GUI_ALLOC_LockH>
 8004920:	9000      	str	r0, [sp, #0]
 8004922:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8004924:	f006 ff7a 	bl	800b81c <LCD_SetColor>
 8004928:	9a00      	ldr	r2, [sp, #0]
 800492a:	6b50      	ldr	r0, [r2, #52]	; 0x34
 800492c:	f007 fd12 	bl	800c354 <GUI_SetFont>
 8004930:	4628      	mov	r0, r5
 8004932:	f002 fc8d 	bl	8007250 <WM_GetHasTrans>
 8004936:	b928      	cbnz	r0, 8004944 <TEXT_Callback+0x82>
 8004938:	9b00      	ldr	r3, [sp, #0]
 800493a:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 800493c:	f006 ff66 	bl	800b80c <LCD_SetBkColor>
 8004940:	f008 fcea 	bl	800d318 <GUI_Clear>
 8004944:	9800      	ldr	r0, [sp, #0]
 8004946:	6c41      	ldr	r1, [r0, #68]	; 0x44
 8004948:	b1a9      	cbz	r1, 8004976 <TEXT_Callback+0xb4>
 800494a:	2002      	movs	r0, #2
 800494c:	f007 fcf8 	bl	800c340 <GUI_SetTextMode>
 8004950:	a802      	add	r0, sp, #8
 8004952:	f003 f869 	bl	8007a28 <WM_GetClientRect>
 8004956:	9a00      	ldr	r2, [sp, #0]
 8004958:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800495a:	f009 f8ef 	bl	800db3c <GUI_ALLOC_LockH>
 800495e:	9b00      	ldr	r3, [sp, #0]
 8004960:	9001      	str	r0, [sp, #4]
 8004962:	f9b3 2048 	ldrsh.w	r2, [r3, #72]	; 0x48
 8004966:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800496a:	a902      	add	r1, sp, #8
 800496c:	f008 f97a 	bl	800cc64 <GUI_DispStringInRectWrap>
 8004970:	a801      	add	r0, sp, #4
 8004972:	f009 f8f1 	bl	800db58 <GUI_ALLOC_UnlockH>
 8004976:	4668      	mov	r0, sp
 8004978:	f009 f8ee 	bl	800db58 <GUI_ALLOC_UnlockH>
 800497c:	e002      	b.n	8004984 <TEXT_Callback+0xc2>
 800497e:	4620      	mov	r0, r4
 8004980:	f004 f96c 	bl	8008c5c <WM_DefaultProc>
 8004984:	b005      	add	sp, #20
 8004986:	bd30      	pop	{r4, r5, pc}

08004988 <TEXT_CreateUser>:
 8004988:	b5f0      	push	{r4, r5, r6, r7, lr}
 800498a:	b087      	sub	sp, #28
 800498c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800498e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8004990:	9500      	str	r5, [sp, #0]
 8004992:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8004994:	f045 0501 	orr.w	r5, r5, #1
 8004998:	9501      	str	r5, [sp, #4]
 800499a:	4d1d      	ldr	r5, [pc, #116]	; (8004a10 <TEXT_CreateUser+0x88>)
 800499c:	9502      	str	r5, [sp, #8]
 800499e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80049a0:	3520      	adds	r5, #32
 80049a2:	9503      	str	r5, [sp, #12]
 80049a4:	f003 fdec 	bl	8008580 <WM_CreateWindowAsChild>
 80049a8:	4605      	mov	r5, r0
 80049aa:	b368      	cbz	r0, 8004a08 <TEXT_CreateUser+0x80>
 80049ac:	b90c      	cbnz	r4, 80049b2 <TEXT_CreateUser+0x2a>
 80049ae:	2700      	movs	r7, #0
 80049b0:	e013      	b.n	80049da <TEXT_CreateUser+0x52>
 80049b2:	4620      	mov	r0, r4
 80049b4:	f00e fa8a 	bl	8012ecc <strlen>
 80049b8:	3001      	adds	r0, #1
 80049ba:	f009 fb33 	bl	800e024 <GUI_ALLOC_AllocZero>
 80049be:	4607      	mov	r7, r0
 80049c0:	2800      	cmp	r0, #0
 80049c2:	d0f4      	beq.n	80049ae <TEXT_CreateUser+0x26>
 80049c4:	f009 f8ba 	bl	800db3c <GUI_ALLOC_LockH>
 80049c8:	ae06      	add	r6, sp, #24
 80049ca:	4621      	mov	r1, r4
 80049cc:	f846 0d04 	str.w	r0, [r6, #-4]!
 80049d0:	f00e fa1e 	bl	8012e10 <strcpy>
 80049d4:	4630      	mov	r0, r6
 80049d6:	f009 f8bf 	bl	800db58 <GUI_ALLOC_UnlockH>
 80049da:	4628      	mov	r0, r5
 80049dc:	f009 f8ae 	bl	800db3c <GUI_ALLOC_LockH>
 80049e0:	ae06      	add	r6, sp, #24
 80049e2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80049e4:	9005      	str	r0, [sp, #20]
 80049e6:	2200      	movs	r2, #0
 80049e8:	f009 fce0 	bl	800e3ac <WIDGET__Init>
 80049ec:	f856 4d04 	ldr.w	r4, [r6, #-4]!
 80049f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80049f2:	4808      	ldr	r0, [pc, #32]	; (8004a14 <TEXT_CreateUser+0x8c>)
 80049f4:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
 80049f8:	c80f      	ldmia	r0, {r0, r1, r2, r3}
 80049fa:	6467      	str	r7, [r4, #68]	; 0x44
 80049fc:	3434      	adds	r4, #52	; 0x34
 80049fe:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8004a02:	4630      	mov	r0, r6
 8004a04:	f009 f8a8 	bl	800db58 <GUI_ALLOC_UnlockH>
 8004a08:	4628      	mov	r0, r5
 8004a0a:	b007      	add	sp, #28
 8004a0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004a0e:	bf00      	nop
 8004a10:	080048c3 	.word	0x080048c3
 8004a14:	20000014 	.word	0x20000014

08004a18 <SLIDER_CreateIndirect>:
 8004a18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004a1a:	b087      	sub	sp, #28
 8004a1c:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8004a20:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8004a24:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8004a28:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8004a2c:	9100      	str	r1, [sp, #0]
 8004a2e:	2100      	movs	r1, #0
 8004a30:	9101      	str	r1, [sp, #4]
 8004a32:	8a44      	ldrh	r4, [r0, #18]
 8004a34:	9402      	str	r4, [sp, #8]
 8004a36:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8004a3a:	9103      	str	r1, [sp, #12]
 8004a3c:	6984      	ldr	r4, [r0, #24]
 8004a3e:	18f9      	adds	r1, r7, r3
 8004a40:	eb0e 0002 	add.w	r0, lr, r2
 8004a44:	9404      	str	r4, [sp, #16]
 8004a46:	4632      	mov	r2, r6
 8004a48:	462b      	mov	r3, r5
 8004a4a:	f000 f803 	bl	8004a54 <SLIDER_CreateUser>
 8004a4e:	b007      	add	sp, #28
 8004a50:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08004a54 <SLIDER_CreateUser>:
 8004a54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004a58:	b086      	sub	sp, #24
 8004a5a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8004a5c:	9400      	str	r4, [sp, #0]
 8004a5e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8004a60:	f044 0401 	orr.w	r4, r4, #1
 8004a64:	9401      	str	r4, [sp, #4]
 8004a66:	4c1c      	ldr	r4, [pc, #112]	; (8004ad8 <SLIDER_CreateUser+0x84>)
 8004a68:	9402      	str	r4, [sp, #8]
 8004a6a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8004a6c:	3438      	adds	r4, #56	; 0x38
 8004a6e:	9403      	str	r4, [sp, #12]
 8004a70:	f003 fd86 	bl	8008580 <WM_CreateWindowAsChild>
 8004a74:	4680      	mov	r8, r0
 8004a76:	b358      	cbz	r0, 8004ad0 <SLIDER_CreateUser+0x7c>
 8004a78:	f009 f860 	bl	800db3c <GUI_ALLOC_LockH>
 8004a7c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004a7e:	4d17      	ldr	r5, [pc, #92]	; (8004adc <SLIDER_CreateUser+0x88>)
 8004a80:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004a82:	9005      	str	r0, [sp, #20]
 8004a84:	f013 0f08 	tst.w	r3, #8
 8004a88:	bf14      	ite	ne
 8004a8a:	2218      	movne	r2, #24
 8004a8c:	2210      	moveq	r2, #16
 8004a8e:	f009 fc8d 	bl	800e3ac <WIDGET__Init>
 8004a92:	af06      	add	r7, sp, #24
 8004a94:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004a96:	f857 6d04 	ldr.w	r6, [r7, #-4]!
 8004a9a:	f106 0434 	add.w	r4, r6, #52	; 0x34
 8004a9e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004aa0:	e895 0003 	ldmia.w	r5, {r0, r1}
 8004aa4:	e884 0003 	stmia.w	r4, {r0, r1}
 8004aa8:	4c0d      	ldr	r4, [pc, #52]	; (8004ae0 <SLIDER_CreateUser+0x8c>)
 8004aaa:	6820      	ldr	r0, [r4, #0]
 8004aac:	2108      	movs	r1, #8
 8004aae:	2264      	movs	r2, #100	; 0x64
 8004ab0:	64f0      	str	r0, [r6, #76]	; 0x4c
 8004ab2:	2300      	movs	r3, #0
 8004ab4:	f04f 30ff 	mov.w	r0, #4294967295
 8004ab8:	f8a6 1060 	strh.w	r1, [r6, #96]	; 0x60
 8004abc:	6572      	str	r2, [r6, #84]	; 0x54
 8004abe:	6530      	str	r0, [r6, #80]	; 0x50
 8004ac0:	65b3      	str	r3, [r6, #88]	; 0x58
 8004ac2:	4638      	mov	r0, r7
 8004ac4:	f009 f848 	bl	800db58 <GUI_ALLOC_UnlockH>
 8004ac8:	6821      	ldr	r1, [r4, #0]
 8004aca:	4640      	mov	r0, r8
 8004acc:	684a      	ldr	r2, [r1, #4]
 8004ace:	4790      	blx	r2
 8004ad0:	4640      	mov	r0, r8
 8004ad2:	b006      	add	sp, #24
 8004ad4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004ad8:	08004bc3 	.word	0x08004bc3
 8004adc:	20000028 	.word	0x20000028
 8004ae0:	20000024 	.word	0x20000024

08004ae4 <SLIDER_CreateEx>:
 8004ae4:	b510      	push	{r4, lr}
 8004ae6:	b086      	sub	sp, #24
 8004ae8:	9c08      	ldr	r4, [sp, #32]
 8004aea:	9400      	str	r4, [sp, #0]
 8004aec:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8004aee:	9401      	str	r4, [sp, #4]
 8004af0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004af2:	9402      	str	r4, [sp, #8]
 8004af4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8004af6:	9403      	str	r4, [sp, #12]
 8004af8:	2400      	movs	r4, #0
 8004afa:	9404      	str	r4, [sp, #16]
 8004afc:	f7ff ffaa 	bl	8004a54 <SLIDER_CreateUser>
 8004b00:	b006      	add	sp, #24
 8004b02:	bd10      	pop	{r4, pc}

08004b04 <SLIDER_Dec>:
 8004b04:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004b06:	4605      	mov	r5, r0
 8004b08:	b1c0      	cbz	r0, 8004b3c <SLIDER_Dec+0x38>
 8004b0a:	f009 f817 	bl	800db3c <GUI_ALLOC_LockH>
 8004b0e:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8004b10:	6d81      	ldr	r1, [r0, #88]	; 0x58
 8004b12:	ac02      	add	r4, sp, #8
 8004b14:	428a      	cmp	r2, r1
 8004b16:	f844 0d04 	str.w	r0, [r4, #-4]!
 8004b1a:	dd0c      	ble.n	8004b36 <SLIDER_Dec+0x32>
 8004b1c:	1e53      	subs	r3, r2, #1
 8004b1e:	65c3      	str	r3, [r0, #92]	; 0x5c
 8004b20:	4628      	mov	r0, r5
 8004b22:	f003 fc71 	bl	8008408 <WM_InvalidateWindow>
 8004b26:	4620      	mov	r0, r4
 8004b28:	f009 f816 	bl	800db58 <GUI_ALLOC_UnlockH>
 8004b2c:	4628      	mov	r0, r5
 8004b2e:	2105      	movs	r1, #5
 8004b30:	f002 fdad 	bl	800768e <WM_NotifyParent>
 8004b34:	e002      	b.n	8004b3c <SLIDER_Dec+0x38>
 8004b36:	4620      	mov	r0, r4
 8004b38:	f009 f80e 	bl	800db58 <GUI_ALLOC_UnlockH>
 8004b3c:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08004b3e <SLIDER_Inc>:
 8004b3e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004b40:	4605      	mov	r5, r0
 8004b42:	b1c0      	cbz	r0, 8004b76 <SLIDER_Inc+0x38>
 8004b44:	f008 fffa 	bl	800db3c <GUI_ALLOC_LockH>
 8004b48:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8004b4a:	6d41      	ldr	r1, [r0, #84]	; 0x54
 8004b4c:	ac02      	add	r4, sp, #8
 8004b4e:	428a      	cmp	r2, r1
 8004b50:	f844 0d04 	str.w	r0, [r4, #-4]!
 8004b54:	da0c      	bge.n	8004b70 <SLIDER_Inc+0x32>
 8004b56:	1c53      	adds	r3, r2, #1
 8004b58:	65c3      	str	r3, [r0, #92]	; 0x5c
 8004b5a:	4628      	mov	r0, r5
 8004b5c:	f003 fc54 	bl	8008408 <WM_InvalidateWindow>
 8004b60:	4620      	mov	r0, r4
 8004b62:	f008 fff9 	bl	800db58 <GUI_ALLOC_UnlockH>
 8004b66:	4628      	mov	r0, r5
 8004b68:	2105      	movs	r1, #5
 8004b6a:	f002 fd90 	bl	800768e <WM_NotifyParent>
 8004b6e:	e002      	b.n	8004b76 <SLIDER_Inc+0x38>
 8004b70:	4620      	mov	r0, r4
 8004b72:	f008 fff1 	bl	800db58 <GUI_ALLOC_UnlockH>
 8004b76:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08004b78 <SLIDER_SetValue>:
 8004b78:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004b7a:	460e      	mov	r6, r1
 8004b7c:	4605      	mov	r5, r0
 8004b7e:	b1f8      	cbz	r0, 8004bc0 <SLIDER_SetValue+0x48>
 8004b80:	f008 ffdc 	bl	800db3c <GUI_ALLOC_LockH>
 8004b84:	6d82      	ldr	r2, [r0, #88]	; 0x58
 8004b86:	6d43      	ldr	r3, [r0, #84]	; 0x54
 8004b88:	4296      	cmp	r6, r2
 8004b8a:	bfac      	ite	ge
 8004b8c:	4631      	movge	r1, r6
 8004b8e:	4611      	movlt	r1, r2
 8004b90:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8004b92:	ac02      	add	r4, sp, #8
 8004b94:	4299      	cmp	r1, r3
 8004b96:	bfa8      	it	ge
 8004b98:	4619      	movge	r1, r3
 8004b9a:	428a      	cmp	r2, r1
 8004b9c:	f844 0d04 	str.w	r0, [r4, #-4]!
 8004ba0:	d00b      	beq.n	8004bba <SLIDER_SetValue+0x42>
 8004ba2:	65c1      	str	r1, [r0, #92]	; 0x5c
 8004ba4:	4628      	mov	r0, r5
 8004ba6:	f003 fc2f 	bl	8008408 <WM_InvalidateWindow>
 8004baa:	4620      	mov	r0, r4
 8004bac:	f008 ffd4 	bl	800db58 <GUI_ALLOC_UnlockH>
 8004bb0:	4628      	mov	r0, r5
 8004bb2:	2105      	movs	r1, #5
 8004bb4:	f002 fd6b 	bl	800768e <WM_NotifyParent>
 8004bb8:	e002      	b.n	8004bc0 <SLIDER_SetValue+0x48>
 8004bba:	4620      	mov	r0, r4
 8004bbc:	f008 ffcc 	bl	800db58 <GUI_ALLOC_UnlockH>
 8004bc0:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

08004bc2 <SLIDER_Callback>:
 8004bc2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004bc6:	6844      	ldr	r4, [r0, #4]
 8004bc8:	4605      	mov	r5, r0
 8004bca:	4629      	mov	r1, r5
 8004bcc:	4620      	mov	r0, r4
 8004bce:	f009 fbf5 	bl	800e3bc <WIDGET_HandleActive>
 8004bd2:	2800      	cmp	r0, #0
 8004bd4:	f000 80a4 	beq.w	8004d20 <SLIDER_Callback+0x15e>
 8004bd8:	682b      	ldr	r3, [r5, #0]
 8004bda:	2b0f      	cmp	r3, #15
 8004bdc:	d006      	beq.n	8004bec <SLIDER_Callback+0x2a>
 8004bde:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8004be2:	d014      	beq.n	8004c0e <SLIDER_Callback+0x4c>
 8004be4:	2b0e      	cmp	r3, #14
 8004be6:	f040 8098 	bne.w	8004d1a <SLIDER_Callback+0x158>
 8004bea:	e086      	b.n	8004cfa <SLIDER_Callback+0x138>
 8004bec:	4620      	mov	r0, r4
 8004bee:	f008 ffa5 	bl	800db3c <GUI_ALLOC_LockH>
 8004bf2:	a902      	add	r1, sp, #8
 8004bf4:	f841 0d04 	str.w	r0, [r1, #-4]!
 8004bf8:	6cc5      	ldr	r5, [r0, #76]	; 0x4c
 8004bfa:	682d      	ldr	r5, [r5, #0]
 8004bfc:	4608      	mov	r0, r1
 8004bfe:	f008 ffab 	bl	800db58 <GUI_ALLOC_UnlockH>
 8004c02:	2d00      	cmp	r5, #0
 8004c04:	f000 808c 	beq.w	8004d20 <SLIDER_Callback+0x15e>
 8004c08:	4620      	mov	r0, r4
 8004c0a:	47a8      	blx	r5
 8004c0c:	e088      	b.n	8004d20 <SLIDER_Callback+0x15e>
 8004c0e:	68ef      	ldr	r7, [r5, #12]
 8004c10:	2f00      	cmp	r7, #0
 8004c12:	f000 8082 	beq.w	8004d1a <SLIDER_Callback+0x158>
 8004c16:	4620      	mov	r0, r4
 8004c18:	f008 ff90 	bl	800db3c <GUI_ALLOC_LockH>
 8004c1c:	4603      	mov	r3, r0
 8004c1e:	a802      	add	r0, sp, #8
 8004c20:	6d9e      	ldr	r6, [r3, #88]	; 0x58
 8004c22:	f840 3d04 	str.w	r3, [r0, #-4]!
 8004c26:	f8d3 9054 	ldr.w	r9, [r3, #84]	; 0x54
 8004c2a:	f8b3 b060 	ldrh.w	fp, [r3, #96]	; 0x60
 8004c2e:	f8b3 8032 	ldrh.w	r8, [r3, #50]	; 0x32
 8004c32:	f8d3 a028 	ldr.w	sl, [r3, #40]	; 0x28
 8004c36:	f008 ff8f 	bl	800db58 <GUI_ALLOC_UnlockH>
 8004c3a:	7a3a      	ldrb	r2, [r7, #8]
 8004c3c:	2a00      	cmp	r2, #0
 8004c3e:	d048      	beq.n	8004cd2 <SLIDER_Callback+0x110>
 8004c40:	fa0f fb8b 	sxth.w	fp, fp
 8004c44:	2302      	movs	r3, #2
 8004c46:	f008 0008 	and.w	r0, r8, #8
 8004c4a:	fb9b f2f3 	sdiv	r2, fp, r3
 8004c4e:	b281      	uxth	r1, r0
 8004c50:	f102 0b01 	add.w	fp, r2, #1
 8004c54:	b109      	cbz	r1, 8004c5a <SLIDER_Callback+0x98>
 8004c56:	687f      	ldr	r7, [r7, #4]
 8004c58:	e000      	b.n	8004c5c <SLIDER_Callback+0x9a>
 8004c5a:	683f      	ldr	r7, [r7, #0]
 8004c5c:	ebcb 0707 	rsb	r7, fp, r7
 8004c60:	4620      	mov	r0, r4
 8004c62:	f009 fb53 	bl	800e30c <WIDGET__GetWindowSizeX>
 8004c66:	2f00      	cmp	r7, #0
 8004c68:	dd12      	ble.n	8004c90 <SLIDER_Callback+0xce>
 8004c6a:	eba0 024b 	sub.w	r2, r0, fp, lsl #1
 8004c6e:	4297      	cmp	r7, r2
 8004c70:	da0d      	bge.n	8004c8e <SLIDER_Callback+0xcc>
 8004c72:	2a00      	cmp	r2, #0
 8004c74:	bf08      	it	eq
 8004c76:	2201      	moveq	r2, #1
 8004c78:	2302      	movs	r3, #2
 8004c7a:	ebc6 0909 	rsb	r9, r6, r9
 8004c7e:	fb92 f0f3 	sdiv	r0, r2, r3
 8004c82:	fb09 0707 	mla	r7, r9, r7, r0
 8004c86:	fbb7 f1f2 	udiv	r1, r7, r2
 8004c8a:	198e      	adds	r6, r1, r6
 8004c8c:	e000      	b.n	8004c90 <SLIDER_Callback+0xce>
 8004c8e:	464e      	mov	r6, r9
 8004c90:	4620      	mov	r0, r4
 8004c92:	f002 fdc7 	bl	8007824 <WM_IsFocussable>
 8004c96:	b110      	cbz	r0, 8004c9e <SLIDER_Callback+0xdc>
 8004c98:	4620      	mov	r0, r4
 8004c9a:	f002 fb77 	bl	800738c <WM_SetFocus>
 8004c9e:	4620      	mov	r0, r4
 8004ca0:	2101      	movs	r1, #1
 8004ca2:	f002 fc47 	bl	8007534 <WM_SetCapture>
 8004ca6:	f408 7880 	and.w	r8, r8, #256	; 0x100
 8004caa:	4620      	mov	r0, r4
 8004cac:	4631      	mov	r1, r6
 8004cae:	f7ff ff63 	bl	8004b78 <SLIDER_SetValue>
 8004cb2:	fa1f f288 	uxth.w	r2, r8
 8004cb6:	bb82      	cbnz	r2, 8004d1a <SLIDER_Callback+0x158>
 8004cb8:	4620      	mov	r0, r4
 8004cba:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004cbe:	f00a 0a02 	and.w	sl, sl, #2
 8004cc2:	f009 fb4a 	bl	800e35a <WIDGET_OrState>
 8004cc6:	fa1f f38a 	uxth.w	r3, sl
 8004cca:	b333      	cbz	r3, 8004d1a <SLIDER_Callback+0x158>
 8004ccc:	4620      	mov	r0, r4
 8004cce:	2101      	movs	r1, #1
 8004cd0:	e010      	b.n	8004cf4 <SLIDER_Callback+0x132>
 8004cd2:	f408 7880 	and.w	r8, r8, #256	; 0x100
 8004cd6:	fa1f f088 	uxth.w	r0, r8
 8004cda:	b1f0      	cbz	r0, 8004d1a <SLIDER_Callback+0x158>
 8004cdc:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004ce0:	4620      	mov	r0, r4
 8004ce2:	f00a 0a02 	and.w	sl, sl, #2
 8004ce6:	f009 fb4d 	bl	800e384 <WIDGET_AndState>
 8004cea:	fa1f f18a 	uxth.w	r1, sl
 8004cee:	b1a1      	cbz	r1, 8004d1a <SLIDER_Callback+0x158>
 8004cf0:	4620      	mov	r0, r4
 8004cf2:	2102      	movs	r1, #2
 8004cf4:	f002 fccb 	bl	800768e <WM_NotifyParent>
 8004cf8:	e00f      	b.n	8004d1a <SLIDER_Callback+0x158>
 8004cfa:	68ea      	ldr	r2, [r5, #12]
 8004cfc:	6851      	ldr	r1, [r2, #4]
 8004cfe:	6810      	ldr	r0, [r2, #0]
 8004d00:	2900      	cmp	r1, #0
 8004d02:	dd0a      	ble.n	8004d1a <SLIDER_Callback+0x158>
 8004d04:	2810      	cmp	r0, #16
 8004d06:	d005      	beq.n	8004d14 <SLIDER_Callback+0x152>
 8004d08:	2812      	cmp	r0, #18
 8004d0a:	d106      	bne.n	8004d1a <SLIDER_Callback+0x158>
 8004d0c:	4620      	mov	r0, r4
 8004d0e:	f7ff ff16 	bl	8004b3e <SLIDER_Inc>
 8004d12:	e002      	b.n	8004d1a <SLIDER_Callback+0x158>
 8004d14:	4620      	mov	r0, r4
 8004d16:	f7ff fef5 	bl	8004b04 <SLIDER_Dec>
 8004d1a:	4628      	mov	r0, r5
 8004d1c:	f003 ff9e 	bl	8008c5c <WM_DefaultProc>
 8004d20:	e8bd 8ffe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08004d24 <SLIDER_SetRange>:
 8004d24:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004d26:	460c      	mov	r4, r1
 8004d28:	4616      	mov	r6, r2
 8004d2a:	4605      	mov	r5, r0
 8004d2c:	b1b0      	cbz	r0, 8004d5c <SLIDER_SetRange+0x38>
 8004d2e:	f008 ff05 	bl	800db3c <GUI_ALLOC_LockH>
 8004d32:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 8004d34:	9001      	str	r0, [sp, #4]
 8004d36:	42a6      	cmp	r6, r4
 8004d38:	bfac      	ite	ge
 8004d3a:	4632      	movge	r2, r6
 8004d3c:	4622      	movlt	r2, r4
 8004d3e:	42a1      	cmp	r1, r4
 8004d40:	bfb8      	it	lt
 8004d42:	65c4      	strlt	r4, [r0, #92]	; 0x5c
 8004d44:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 8004d46:	6584      	str	r4, [r0, #88]	; 0x58
 8004d48:	4293      	cmp	r3, r2
 8004d4a:	6542      	str	r2, [r0, #84]	; 0x54
 8004d4c:	bfc8      	it	gt
 8004d4e:	65c2      	strgt	r2, [r0, #92]	; 0x5c
 8004d50:	a801      	add	r0, sp, #4
 8004d52:	f008 ff01 	bl	800db58 <GUI_ALLOC_UnlockH>
 8004d56:	4628      	mov	r0, r5
 8004d58:	f003 fb56 	bl	8008408 <WM_InvalidateWindow>
 8004d5c:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

08004d5e <SLIDER_GetValue>:
 8004d5e:	b513      	push	{r0, r1, r4, lr}
 8004d60:	4604      	mov	r4, r0
 8004d62:	b140      	cbz	r0, 8004d76 <SLIDER_GetValue+0x18>
 8004d64:	f008 feea 	bl	800db3c <GUI_ALLOC_LockH>
 8004d68:	ab02      	add	r3, sp, #8
 8004d6a:	6dc4      	ldr	r4, [r0, #92]	; 0x5c
 8004d6c:	f843 0d04 	str.w	r0, [r3, #-4]!
 8004d70:	4618      	mov	r0, r3
 8004d72:	f008 fef1 	bl	800db58 <GUI_ALLOC_UnlockH>
 8004d76:	4620      	mov	r0, r4
 8004d78:	bd1c      	pop	{r2, r3, r4, pc}

08004d7a <RADIO_SetText>:
 8004d7a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8004d7e:	460c      	mov	r4, r1
 8004d80:	4616      	mov	r6, r2
 8004d82:	4607      	mov	r7, r0
 8004d84:	b1e0      	cbz	r0, 8004dc0 <RADIO_SetText+0x46>
 8004d86:	f008 fed9 	bl	800db3c <GUI_ALLOC_LockH>
 8004d8a:	4605      	mov	r5, r0
 8004d8c:	a802      	add	r0, sp, #8
 8004d8e:	f8d5 805c 	ldr.w	r8, [r5, #92]	; 0x5c
 8004d92:	f840 5d04 	str.w	r5, [r0, #-4]!
 8004d96:	f8b5 5064 	ldrh.w	r5, [r5, #100]	; 0x64
 8004d9a:	f008 fedd 	bl	800db58 <GUI_ALLOC_UnlockH>
 8004d9e:	42ae      	cmp	r6, r5
 8004da0:	d20e      	bcs.n	8004dc0 <RADIO_SetText+0x46>
 8004da2:	b124      	cbz	r4, 8004dae <RADIO_SetText+0x34>
 8004da4:	4620      	mov	r0, r4
 8004da6:	f006 fd41 	bl	800b82c <GUI__strlen>
 8004daa:	1c43      	adds	r3, r0, #1
 8004dac:	e000      	b.n	8004db0 <RADIO_SetText+0x36>
 8004dae:	4623      	mov	r3, r4
 8004db0:	4640      	mov	r0, r8
 8004db2:	4631      	mov	r1, r6
 8004db4:	4622      	mov	r2, r4
 8004db6:	f000 fdc2 	bl	800593e <GUI_ARRAY_SetItem>
 8004dba:	4638      	mov	r0, r7
 8004dbc:	f003 fb24 	bl	8008408 <WM_InvalidateWindow>
 8004dc0:	e8bd 81fc 	ldmia.w	sp!, {r2, r3, r4, r5, r6, r7, r8, pc}

08004dc4 <RADIO_SetFont>:
 8004dc4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004dc6:	460c      	mov	r4, r1
 8004dc8:	4605      	mov	r5, r0
 8004dca:	b180      	cbz	r0, 8004dee <RADIO_SetFont+0x2a>
 8004dcc:	f008 feb6 	bl	800db3c <GUI_ALLOC_LockH>
 8004dd0:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8004dd2:	9001      	str	r0, [sp, #4]
 8004dd4:	4294      	cmp	r4, r2
 8004dd6:	d007      	beq.n	8004de8 <RADIO_SetFont+0x24>
 8004dd8:	6404      	str	r4, [r0, #64]	; 0x40
 8004dda:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8004ddc:	f000 fd30 	bl	8005840 <GUI_ARRAY_GetNumItems>
 8004de0:	b110      	cbz	r0, 8004de8 <RADIO_SetFont+0x24>
 8004de2:	4628      	mov	r0, r5
 8004de4:	f003 fb10 	bl	8008408 <WM_InvalidateWindow>
 8004de8:	a801      	add	r0, sp, #4
 8004dea:	f008 feb5 	bl	800db58 <GUI_ALLOC_UnlockH>
 8004dee:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08004df0 <RADIO_CreateIndirect>:
 8004df0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004df2:	b089      	sub	sp, #36	; 0x24
 8004df4:	6944      	ldr	r4, [r0, #20]
 8004df6:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8004dfa:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8004dfe:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8004e02:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8004e06:	9100      	str	r1, [sp, #0]
 8004e08:	8a41      	ldrh	r1, [r0, #18]
 8004e0a:	9101      	str	r1, [sp, #4]
 8004e0c:	2100      	movs	r1, #0
 8004e0e:	9102      	str	r1, [sp, #8]
 8004e10:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8004e14:	9103      	str	r1, [sp, #12]
 8004e16:	b2e1      	uxtb	r1, r4
 8004e18:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8004e1c:	9104      	str	r1, [sp, #16]
 8004e1e:	9405      	str	r4, [sp, #20]
 8004e20:	6984      	ldr	r4, [r0, #24]
 8004e22:	18f9      	adds	r1, r7, r3
 8004e24:	eb0e 0002 	add.w	r0, lr, r2
 8004e28:	9406      	str	r4, [sp, #24]
 8004e2a:	4632      	mov	r2, r6
 8004e2c:	462b      	mov	r3, r5
 8004e2e:	f000 f837 	bl	8004ea0 <RADIO_CreateUser>
 8004e32:	b009      	add	sp, #36	; 0x24
 8004e34:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004e36 <RADIO__GetButtonSize>:
 8004e36:	b530      	push	{r4, r5, lr}
 8004e38:	b08b      	sub	sp, #44	; 0x2c
 8004e3a:	4605      	mov	r5, r0
 8004e3c:	f008 fe7e 	bl	800db3c <GUI_ALLOC_LockH>
 8004e40:	ab0a      	add	r3, sp, #40	; 0x28
 8004e42:	6d82      	ldr	r2, [r0, #88]	; 0x58
 8004e44:	f843 0d28 	str.w	r0, [r3, #-40]!
 8004e48:	6894      	ldr	r4, [r2, #8]
 8004e4a:	4668      	mov	r0, sp
 8004e4c:	f008 fe84 	bl	800db58 <GUI_ALLOC_UnlockH>
 8004e50:	2019      	movs	r0, #25
 8004e52:	9002      	str	r0, [sp, #8]
 8004e54:	9501      	str	r5, [sp, #4]
 8004e56:	6861      	ldr	r1, [r4, #4]
 8004e58:	a801      	add	r0, sp, #4
 8004e5a:	4788      	blx	r1
 8004e5c:	b00b      	add	sp, #44	; 0x2c
 8004e5e:	bd30      	pop	{r4, r5, pc}

08004e60 <RADIO__SetValue>:
 8004e60:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004e62:	460c      	mov	r4, r1
 8004e64:	4605      	mov	r5, r0
 8004e66:	f008 fe69 	bl	800db3c <GUI_ALLOC_LockH>
 8004e6a:	f8b0 2064 	ldrh.w	r2, [r0, #100]	; 0x64
 8004e6e:	f9b0 1060 	ldrsh.w	r1, [r0, #96]	; 0x60
 8004e72:	9001      	str	r0, [sp, #4]
 8004e74:	4294      	cmp	r4, r2
 8004e76:	bfa8      	it	ge
 8004e78:	1e54      	subge	r4, r2, #1
 8004e7a:	428c      	cmp	r4, r1
 8004e7c:	d00c      	beq.n	8004e98 <RADIO__SetValue+0x38>
 8004e7e:	f8a0 4060 	strh.w	r4, [r0, #96]	; 0x60
 8004e82:	4628      	mov	r0, r5
 8004e84:	f003 fac0 	bl	8008408 <WM_InvalidateWindow>
 8004e88:	a801      	add	r0, sp, #4
 8004e8a:	f008 fe65 	bl	800db58 <GUI_ALLOC_UnlockH>
 8004e8e:	4628      	mov	r0, r5
 8004e90:	2105      	movs	r1, #5
 8004e92:	f002 fbfc 	bl	800768e <WM_NotifyParent>
 8004e96:	e002      	b.n	8004e9e <RADIO__SetValue+0x3e>
 8004e98:	a801      	add	r0, sp, #4
 8004e9a:	f008 fe5d 	bl	800db58 <GUI_ALLOC_UnlockH>
 8004e9e:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08004ea0 <RADIO_CreateUser>:
 8004ea0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004ea4:	4c35      	ldr	r4, [pc, #212]	; (8004f7c <RADIO_CreateUser+0xdc>)
 8004ea6:	b087      	sub	sp, #28
 8004ea8:	6924      	ldr	r4, [r4, #16]
 8004eaa:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8004eac:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8004eae:	f8dd a040 	ldr.w	sl, [sp, #64]	; 0x40
 8004eb2:	8866      	ldrh	r6, [r4, #2]
 8004eb4:	2d00      	cmp	r5, #0
 8004eb6:	bfcc      	ite	gt
 8004eb8:	46a9      	movgt	r9, r5
 8004eba:	f04f 0914 	movle.w	r9, #20
 8004ebe:	2f00      	cmp	r7, #0
 8004ec0:	bfd8      	it	le
 8004ec2:	2702      	movle	r7, #2
 8004ec4:	b91b      	cbnz	r3, 8004ece <RADIO_CreateUser+0x2e>
 8004ec6:	3604      	adds	r6, #4
 8004ec8:	1e7b      	subs	r3, r7, #1
 8004eca:	fb09 6303 	mla	r3, r9, r3, r6
 8004ece:	b90a      	cbnz	r2, 8004ed4 <RADIO_CreateUser+0x34>
 8004ed0:	8822      	ldrh	r2, [r4, #0]
 8004ed2:	3204      	adds	r2, #4
 8004ed4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8004ed6:	f8cd a000 	str.w	sl, [sp]
 8004eda:	f044 0601 	orr.w	r6, r4, #1
 8004ede:	4c28      	ldr	r4, [pc, #160]	; (8004f80 <RADIO_CreateUser+0xe0>)
 8004ee0:	9601      	str	r6, [sp, #4]
 8004ee2:	9402      	str	r4, [sp, #8]
 8004ee4:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8004ee6:	343c      	adds	r4, #60	; 0x3c
 8004ee8:	9403      	str	r4, [sp, #12]
 8004eea:	f003 fb49 	bl	8008580 <WM_CreateWindowAsChild>
 8004eee:	4606      	mov	r6, r0
 8004ef0:	2800      	cmp	r0, #0
 8004ef2:	d03f      	beq.n	8004f74 <RADIO_CreateUser+0xd4>
 8004ef4:	f000 fd87 	bl	8005a06 <GUI_ARRAY_Create>
 8004ef8:	2400      	movs	r4, #0
 8004efa:	4605      	mov	r5, r0
 8004efc:	2100      	movs	r1, #0
 8004efe:	4628      	mov	r0, r5
 8004f00:	460a      	mov	r2, r1
 8004f02:	3401      	adds	r4, #1
 8004f04:	f000 fcaa 	bl	800585c <GUI_ARRAY_AddItem>
 8004f08:	42bc      	cmp	r4, r7
 8004f0a:	dbf7      	blt.n	8004efc <RADIO_CreateUser+0x5c>
 8004f0c:	4630      	mov	r0, r6
 8004f0e:	f008 fe15 	bl	800db3c <GUI_ALLOC_LockH>
 8004f12:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004f14:	f8df b06c 	ldr.w	fp, [pc, #108]	; 8004f84 <RADIO_CreateUser+0xe4>
 8004f18:	65c5      	str	r5, [r0, #92]	; 0x5c
 8004f1a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8004f1e:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8004f20:	9005      	str	r0, [sp, #20]
 8004f22:	2a00      	cmp	r2, #0
 8004f24:	bf14      	ite	ne
 8004f26:	f44f 7288 	movne.w	r2, #272	; 0x110
 8004f2a:	2210      	moveq	r2, #16
 8004f2c:	f009 fa3e 	bl	800e3ac <WIDGET__Init>
 8004f30:	4d12      	ldr	r5, [pc, #72]	; (8004f7c <RADIO_CreateUser+0xdc>)
 8004f32:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8004f36:	f8db 0000 	ldr.w	r0, [fp]
 8004f3a:	f8c8 0058 	str.w	r0, [r8, #88]	; 0x58
 8004f3e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004f40:	f108 0434 	add.w	r4, r8, #52	; 0x34
 8004f44:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004f46:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004f48:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004f4a:	6829      	ldr	r1, [r5, #0]
 8004f4c:	4650      	mov	r0, sl
 8004f4e:	6021      	str	r1, [r4, #0]
 8004f50:	f002 fd78 	bl	8007a44 <WM_GetBkColor>
 8004f54:	f8c8 0034 	str.w	r0, [r8, #52]	; 0x34
 8004f58:	a806      	add	r0, sp, #24
 8004f5a:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 8004f5e:	f8a3 7064 	strh.w	r7, [r3, #100]	; 0x64
 8004f62:	f8a3 9062 	strh.w	r9, [r3, #98]	; 0x62
 8004f66:	f008 fdf7 	bl	800db58 <GUI_ALLOC_UnlockH>
 8004f6a:	f8db 2000 	ldr.w	r2, [fp]
 8004f6e:	4630      	mov	r0, r6
 8004f70:	6851      	ldr	r1, [r2, #4]
 8004f72:	4788      	blx	r1
 8004f74:	4630      	mov	r0, r6
 8004f76:	b007      	add	sp, #28
 8004f78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004f7c:	20000040 	.word	0x20000040
 8004f80:	08004ff9 	.word	0x08004ff9
 8004f84:	20000064 	.word	0x20000064

08004f88 <RADIO_SetValue>:
 8004f88:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004f8a:	460c      	mov	r4, r1
 8004f8c:	4605      	mov	r5, r0
 8004f8e:	b1a8      	cbz	r0, 8004fbc <RADIO_SetValue+0x34>
 8004f90:	f008 fdd4 	bl	800db3c <GUI_ALLOC_LockH>
 8004f94:	ab02      	add	r3, sp, #8
 8004f96:	f890 6066 	ldrb.w	r6, [r0, #102]	; 0x66
 8004f9a:	f843 0d04 	str.w	r0, [r3, #-4]!
 8004f9e:	4618      	mov	r0, r3
 8004fa0:	f008 fdda 	bl	800db58 <GUI_ALLOC_UnlockH>
 8004fa4:	4628      	mov	r0, r5
 8004fa6:	b12e      	cbz	r6, 8004fb4 <RADIO_SetValue+0x2c>
 8004fa8:	4905      	ldr	r1, [pc, #20]	; (8004fc0 <RADIO_SetValue+0x38>)
 8004faa:	680a      	ldr	r2, [r1, #0]
 8004fac:	b112      	cbz	r2, 8004fb4 <RADIO_SetValue+0x2c>
 8004fae:	4621      	mov	r1, r4
 8004fb0:	4790      	blx	r2
 8004fb2:	e003      	b.n	8004fbc <RADIO_SetValue+0x34>
 8004fb4:	ea24 71e4 	bic.w	r1, r4, r4, asr #31
 8004fb8:	f7ff ff52 	bl	8004e60 <RADIO__SetValue>
 8004fbc:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
 8004fbe:	bf00      	nop
 8004fc0:	2000e600 	.word	0x2000e600

08004fc4 <RADIO_AddValue>:
 8004fc4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004fc6:	460c      	mov	r4, r1
 8004fc8:	4606      	mov	r6, r0
 8004fca:	b168      	cbz	r0, 8004fe8 <RADIO_AddValue+0x24>
 8004fcc:	f008 fdb6 	bl	800db3c <GUI_ALLOC_LockH>
 8004fd0:	4602      	mov	r2, r0
 8004fd2:	a802      	add	r0, sp, #8
 8004fd4:	f9b2 5060 	ldrsh.w	r5, [r2, #96]	; 0x60
 8004fd8:	f840 2d04 	str.w	r2, [r0, #-4]!
 8004fdc:	f008 fdbc 	bl	800db58 <GUI_ALLOC_UnlockH>
 8004fe0:	4630      	mov	r0, r6
 8004fe2:	1929      	adds	r1, r5, r4
 8004fe4:	f7ff ffd0 	bl	8004f88 <RADIO_SetValue>
 8004fe8:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

08004fea <RADIO_Inc>:
 8004fea:	2101      	movs	r1, #1
 8004fec:	f7ff bfea 	b.w	8004fc4 <RADIO_AddValue>

08004ff0 <RADIO_Dec>:
 8004ff0:	f04f 31ff 	mov.w	r1, #4294967295
 8004ff4:	f7ff bfe6 	b.w	8004fc4 <RADIO_AddValue>

08004ff8 <RADIO_Callback>:
 8004ff8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8004ffc:	6844      	ldr	r4, [r0, #4]
 8004ffe:	4605      	mov	r5, r0
 8005000:	4629      	mov	r1, r5
 8005002:	4620      	mov	r0, r4
 8005004:	f009 f9da 	bl	800e3bc <WIDGET_HandleActive>
 8005008:	2800      	cmp	r0, #0
 800500a:	f000 809c 	beq.w	8005146 <RADIO_Callback+0x14e>
 800500e:	682b      	ldr	r3, [r5, #0]
 8005010:	2b0f      	cmp	r3, #15
 8005012:	d00e      	beq.n	8005032 <RADIO_Callback+0x3a>
 8005014:	dc06      	bgt.n	8005024 <RADIO_Callback+0x2c>
 8005016:	2b0b      	cmp	r3, #11
 8005018:	f000 8086 	beq.w	8005128 <RADIO_Callback+0x130>
 800501c:	2b0e      	cmp	r3, #14
 800501e:	f040 808f 	bne.w	8005140 <RADIO_Callback+0x148>
 8005022:	e06d      	b.n	8005100 <RADIO_Callback+0x108>
 8005024:	2b2b      	cmp	r3, #43	; 0x2b
 8005026:	d014      	beq.n	8005052 <RADIO_Callback+0x5a>
 8005028:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 800502c:	f040 8088 	bne.w	8005140 <RADIO_Callback+0x148>
 8005030:	e01c      	b.n	800506c <RADIO_Callback+0x74>
 8005032:	4620      	mov	r0, r4
 8005034:	f008 fd82 	bl	800db3c <GUI_ALLOC_LockH>
 8005038:	ab02      	add	r3, sp, #8
 800503a:	f843 0d04 	str.w	r0, [r3, #-4]!
 800503e:	6d85      	ldr	r5, [r0, #88]	; 0x58
 8005040:	682d      	ldr	r5, [r5, #0]
 8005042:	4618      	mov	r0, r3
 8005044:	f008 fd88 	bl	800db58 <GUI_ALLOC_UnlockH>
 8005048:	2d00      	cmp	r5, #0
 800504a:	d07c      	beq.n	8005146 <RADIO_Callback+0x14e>
 800504c:	4620      	mov	r0, r4
 800504e:	47a8      	blx	r5
 8005050:	e079      	b.n	8005146 <RADIO_Callback+0x14e>
 8005052:	4620      	mov	r0, r4
 8005054:	f008 fd72 	bl	800db3c <GUI_ALLOC_LockH>
 8005058:	a902      	add	r1, sp, #8
 800505a:	f841 0d04 	str.w	r0, [r1, #-4]!
 800505e:	f890 0066 	ldrb.w	r0, [r0, #102]	; 0x66
 8005062:	60e8      	str	r0, [r5, #12]
 8005064:	4608      	mov	r0, r1
 8005066:	f008 fd77 	bl	800db58 <GUI_ALLOC_UnlockH>
 800506a:	e06c      	b.n	8005146 <RADIO_Callback+0x14e>
 800506c:	4620      	mov	r0, r4
 800506e:	68ee      	ldr	r6, [r5, #12]
 8005070:	f008 fd64 	bl	800db3c <GUI_ALLOC_LockH>
 8005074:	9001      	str	r0, [sp, #4]
 8005076:	f890 3066 	ldrb.w	r3, [r0, #102]	; 0x66
 800507a:	f8b0 7062 	ldrh.w	r7, [r0, #98]	; 0x62
 800507e:	b143      	cbz	r3, 8005092 <RADIO_Callback+0x9a>
 8005080:	f9b0 9006 	ldrsh.w	r9, [r0, #6]
 8005084:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8005088:	ebc3 0009 	rsb	r0, r3, r9
 800508c:	f100 0901 	add.w	r9, r0, #1
 8005090:	e006      	b.n	80050a0 <RADIO_Callback+0xa8>
 8005092:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8005094:	6882      	ldr	r2, [r0, #8]
 8005096:	4620      	mov	r0, r4
 8005098:	6811      	ldr	r1, [r2, #0]
 800509a:	4788      	blx	r1
 800509c:	f100 0904 	add.w	r9, r0, #4
 80050a0:	a802      	add	r0, sp, #8
 80050a2:	f850 2d04 	ldr.w	r2, [r0, #-4]!
 80050a6:	f8b2 8030 	ldrh.w	r8, [r2, #48]	; 0x30
 80050aa:	f008 fd55 	bl	800db58 <GUI_ALLOC_UnlockH>
 80050ae:	68e9      	ldr	r1, [r5, #12]
 80050b0:	b1a1      	cbz	r1, 80050dc <RADIO_Callback+0xe4>
 80050b2:	7a33      	ldrb	r3, [r6, #8]
 80050b4:	b1ab      	cbz	r3, 80050e2 <RADIO_Callback+0xea>
 80050b6:	6876      	ldr	r6, [r6, #4]
 80050b8:	fb96 f1f7 	sdiv	r1, r6, r7
 80050bc:	fb07 6711 	mls	r7, r7, r1, r6
 80050c0:	454f      	cmp	r7, r9
 80050c2:	dc02      	bgt.n	80050ca <RADIO_Callback+0xd2>
 80050c4:	4620      	mov	r0, r4
 80050c6:	f7ff ff5f 	bl	8004f88 <RADIO_SetValue>
 80050ca:	4620      	mov	r0, r4
 80050cc:	f002 fbaa 	bl	8007824 <WM_IsFocussable>
 80050d0:	b150      	cbz	r0, 80050e8 <RADIO_Callback+0xf0>
 80050d2:	4620      	mov	r0, r4
 80050d4:	f002 f95a 	bl	800738c <WM_SetFocus>
 80050d8:	2600      	movs	r6, #0
 80050da:	e006      	b.n	80050ea <RADIO_Callback+0xf2>
 80050dc:	460e      	mov	r6, r1
 80050de:	2103      	movs	r1, #3
 80050e0:	e004      	b.n	80050ec <RADIO_Callback+0xf4>
 80050e2:	2601      	movs	r6, #1
 80050e4:	2102      	movs	r1, #2
 80050e6:	e001      	b.n	80050ec <RADIO_Callback+0xf4>
 80050e8:	4606      	mov	r6, r0
 80050ea:	2101      	movs	r1, #1
 80050ec:	4620      	mov	r0, r4
 80050ee:	f002 face 	bl	800768e <WM_NotifyParent>
 80050f2:	2e01      	cmp	r6, #1
 80050f4:	d124      	bne.n	8005140 <RADIO_Callback+0x148>
 80050f6:	fa0f f088 	sxth.w	r0, r8
 80050fa:	f007 fa89 	bl	800c610 <GUI_StoreKey>
 80050fe:	e01f      	b.n	8005140 <RADIO_Callback+0x148>
 8005100:	68e8      	ldr	r0, [r5, #12]
 8005102:	6842      	ldr	r2, [r0, #4]
 8005104:	2a00      	cmp	r2, #0
 8005106:	dd1b      	ble.n	8005140 <RADIO_Callback+0x148>
 8005108:	6801      	ldr	r1, [r0, #0]
 800510a:	3910      	subs	r1, #16
 800510c:	2903      	cmp	r1, #3
 800510e:	d817      	bhi.n	8005140 <RADIO_Callback+0x148>
 8005110:	e8df f001 	tbb	[pc, r1]
 8005114:	02020606 	.word	0x02020606
 8005118:	4620      	mov	r0, r4
 800511a:	f7ff ff66 	bl	8004fea <RADIO_Inc>
 800511e:	e00f      	b.n	8005140 <RADIO_Callback+0x148>
 8005120:	4620      	mov	r0, r4
 8005122:	f7ff ff65 	bl	8004ff0 <RADIO_Dec>
 8005126:	e00b      	b.n	8005140 <RADIO_Callback+0x148>
 8005128:	4620      	mov	r0, r4
 800512a:	f008 fd07 	bl	800db3c <GUI_ALLOC_LockH>
 800512e:	ac02      	add	r4, sp, #8
 8005130:	f844 0d04 	str.w	r0, [r4, #-4]!
 8005134:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8005136:	f000 fbda 	bl	80058ee <GUI_ARRAY_Delete>
 800513a:	4620      	mov	r0, r4
 800513c:	f008 fd0c 	bl	800db58 <GUI_ALLOC_UnlockH>
 8005140:	4628      	mov	r0, r5
 8005142:	f003 fd8b 	bl	8008c5c <WM_DefaultProc>
 8005146:	e8bd 83fe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}

0800514a <RADIO_GetValue>:
 800514a:	b513      	push	{r0, r1, r4, lr}
 800514c:	4604      	mov	r4, r0
 800514e:	b148      	cbz	r0, 8005164 <RADIO_GetValue+0x1a>
 8005150:	f008 fcf4 	bl	800db3c <GUI_ALLOC_LockH>
 8005154:	ab02      	add	r3, sp, #8
 8005156:	f9b0 4060 	ldrsh.w	r4, [r0, #96]	; 0x60
 800515a:	f843 0d04 	str.w	r0, [r3, #-4]!
 800515e:	4618      	mov	r0, r3
 8005160:	f008 fcfa 	bl	800db58 <GUI_ALLOC_UnlockH>
 8005164:	4620      	mov	r0, r4
 8005166:	bd1c      	pop	{r2, r3, r4, pc}

08005168 <PROGBAR_DrawSkinFlex>:
 8005168:	6843      	ldr	r3, [r0, #4]
 800516a:	2b0b      	cmp	r3, #11
 800516c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800516e:	4604      	mov	r4, r0
 8005170:	6a05      	ldr	r5, [r0, #32]
 8005172:	d006      	beq.n	8005182 <PROGBAR_DrawSkinFlex+0x1a>
 8005174:	2b12      	cmp	r3, #18
 8005176:	f000 808f 	beq.w	8005298 <PROGBAR_DrawSkinFlex+0x130>
 800517a:	2b05      	cmp	r3, #5
 800517c:	f040 809b 	bne.w	80052b6 <PROGBAR_DrawSkinFlex+0x14e>
 8005180:	e01c      	b.n	80051bc <PROGBAR_DrawSkinFlex+0x54>
 8005182:	484e      	ldr	r0, [pc, #312]	; (80052bc <PROGBAR_DrawSkinFlex+0x154>)
 8005184:	6a00      	ldr	r0, [r0, #32]
 8005186:	f007 f913 	bl	800c3b0 <GUI_SetColor>
 800518a:	6960      	ldr	r0, [r4, #20]
 800518c:	6921      	ldr	r1, [r4, #16]
 800518e:	69a2      	ldr	r2, [r4, #24]
 8005190:	f007 fb58 	bl	800c844 <GUI_DrawHLine>
 8005194:	69e0      	ldr	r0, [r4, #28]
 8005196:	6921      	ldr	r1, [r4, #16]
 8005198:	69a2      	ldr	r2, [r4, #24]
 800519a:	f007 fb53 	bl	800c844 <GUI_DrawHLine>
 800519e:	6963      	ldr	r3, [r4, #20]
 80051a0:	69e2      	ldr	r2, [r4, #28]
 80051a2:	6920      	ldr	r0, [r4, #16]
 80051a4:	1c59      	adds	r1, r3, #1
 80051a6:	3a01      	subs	r2, #1
 80051a8:	f007 fb0a 	bl	800c7c0 <GUI_DrawVLine>
 80051ac:	6961      	ldr	r1, [r4, #20]
 80051ae:	69e3      	ldr	r3, [r4, #28]
 80051b0:	69a0      	ldr	r0, [r4, #24]
 80051b2:	3101      	adds	r1, #1
 80051b4:	1e5a      	subs	r2, r3, #1
 80051b6:	f007 fb03 	bl	800c7c0 <GUI_DrawVLine>
 80051ba:	e07c      	b.n	80052b6 <PROGBAR_DrawSkinFlex+0x14e>
 80051bc:	6828      	ldr	r0, [r5, #0]
 80051be:	2800      	cmp	r0, #0
 80051c0:	d034      	beq.n	800522c <PROGBAR_DrawSkinFlex+0xc4>
 80051c2:	6922      	ldr	r2, [r4, #16]
 80051c4:	69a7      	ldr	r7, [r4, #24]
 80051c6:	686b      	ldr	r3, [r5, #4]
 80051c8:	493c      	ldr	r1, [pc, #240]	; (80052bc <PROGBAR_DrawSkinFlex+0x154>)
 80051ca:	1abe      	subs	r6, r7, r2
 80051cc:	1c70      	adds	r0, r6, #1
 80051ce:	1046      	asrs	r6, r0, #1
 80051d0:	b923      	cbnz	r3, 80051dc <PROGBAR_DrawSkinFlex+0x74>
 80051d2:	690f      	ldr	r7, [r1, #16]
 80051d4:	6948      	ldr	r0, [r1, #20]
 80051d6:	f04f 0c01 	mov.w	ip, #1
 80051da:	e004      	b.n	80051e6 <PROGBAR_DrawSkinFlex+0x7e>
 80051dc:	680f      	ldr	r7, [r1, #0]
 80051de:	6848      	ldr	r0, [r1, #4]
 80051e0:	2301      	movs	r3, #1
 80051e2:	f04f 0c00 	mov.w	ip, #0
 80051e6:	9001      	str	r0, [sp, #4]
 80051e8:	9700      	str	r7, [sp, #0]
 80051ea:	6961      	ldr	r1, [r4, #20]
 80051ec:	69e7      	ldr	r7, [r4, #28]
 80051ee:	1c50      	adds	r0, r2, #1
 80051f0:	1afb      	subs	r3, r7, r3
 80051f2:	4461      	add	r1, ip
 80051f4:	1992      	adds	r2, r2, r6
 80051f6:	f007 fc67 	bl	800cac8 <GUI_DrawGradientH>
 80051fa:	686b      	ldr	r3, [r5, #4]
 80051fc:	4d2f      	ldr	r5, [pc, #188]	; (80052bc <PROGBAR_DrawSkinFlex+0x154>)
 80051fe:	b91b      	cbnz	r3, 8005208 <PROGBAR_DrawSkinFlex+0xa0>
 8005200:	69af      	ldr	r7, [r5, #24]
 8005202:	69ed      	ldr	r5, [r5, #28]
 8005204:	2101      	movs	r1, #1
 8005206:	e003      	b.n	8005210 <PROGBAR_DrawSkinFlex+0xa8>
 8005208:	68af      	ldr	r7, [r5, #8]
 800520a:	68ed      	ldr	r5, [r5, #12]
 800520c:	2301      	movs	r3, #1
 800520e:	2100      	movs	r1, #0
 8005210:	6922      	ldr	r2, [r4, #16]
 8005212:	18b0      	adds	r0, r6, r2
 8005214:	6966      	ldr	r6, [r4, #20]
 8005216:	69a2      	ldr	r2, [r4, #24]
 8005218:	69e4      	ldr	r4, [r4, #28]
 800521a:	9700      	str	r7, [sp, #0]
 800521c:	9501      	str	r5, [sp, #4]
 800521e:	3001      	adds	r0, #1
 8005220:	1989      	adds	r1, r1, r6
 8005222:	3a01      	subs	r2, #1
 8005224:	1ae3      	subs	r3, r4, r3
 8005226:	f007 fc4f 	bl	800cac8 <GUI_DrawGradientH>
 800522a:	e044      	b.n	80052b6 <PROGBAR_DrawSkinFlex+0x14e>
 800522c:	69e7      	ldr	r7, [r4, #28]
 800522e:	6963      	ldr	r3, [r4, #20]
 8005230:	4e22      	ldr	r6, [pc, #136]	; (80052bc <PROGBAR_DrawSkinFlex+0x154>)
 8005232:	1af9      	subs	r1, r7, r3
 8005234:	1c4a      	adds	r2, r1, #1
 8005236:	1057      	asrs	r7, r2, #1
 8005238:	686a      	ldr	r2, [r5, #4]
 800523a:	b922      	cbnz	r2, 8005246 <PROGBAR_DrawSkinFlex+0xde>
 800523c:	f8d6 c000 	ldr.w	ip, [r6]
 8005240:	6871      	ldr	r1, [r6, #4]
 8005242:	2001      	movs	r0, #1
 8005244:	e003      	b.n	800524e <PROGBAR_DrawSkinFlex+0xe6>
 8005246:	f8d6 c010 	ldr.w	ip, [r6, #16]
 800524a:	6971      	ldr	r1, [r6, #20]
 800524c:	2201      	movs	r2, #1
 800524e:	69a6      	ldr	r6, [r4, #24]
 8005250:	f8cd c000 	str.w	ip, [sp]
 8005254:	9101      	str	r1, [sp, #4]
 8005256:	6921      	ldr	r1, [r4, #16]
 8005258:	1ab2      	subs	r2, r6, r2
 800525a:	1840      	adds	r0, r0, r1
 800525c:	1c59      	adds	r1, r3, #1
 800525e:	19db      	adds	r3, r3, r7
 8005260:	f007 fc00 	bl	800ca64 <GUI_DrawGradientV>
 8005264:	686a      	ldr	r2, [r5, #4]
 8005266:	4d15      	ldr	r5, [pc, #84]	; (80052bc <PROGBAR_DrawSkinFlex+0x154>)
 8005268:	b91a      	cbnz	r2, 8005272 <PROGBAR_DrawSkinFlex+0x10a>
 800526a:	68ae      	ldr	r6, [r5, #8]
 800526c:	68ed      	ldr	r5, [r5, #12]
 800526e:	2001      	movs	r0, #1
 8005270:	e003      	b.n	800527a <PROGBAR_DrawSkinFlex+0x112>
 8005272:	69ae      	ldr	r6, [r5, #24]
 8005274:	69ed      	ldr	r5, [r5, #28]
 8005276:	2201      	movs	r2, #1
 8005278:	2000      	movs	r0, #0
 800527a:	6963      	ldr	r3, [r4, #20]
 800527c:	f8d4 e010 	ldr.w	lr, [r4, #16]
 8005280:	18f9      	adds	r1, r7, r3
 8005282:	69a7      	ldr	r7, [r4, #24]
 8005284:	69e3      	ldr	r3, [r4, #28]
 8005286:	9600      	str	r6, [sp, #0]
 8005288:	9501      	str	r5, [sp, #4]
 800528a:	4470      	add	r0, lr
 800528c:	3101      	adds	r1, #1
 800528e:	1aba      	subs	r2, r7, r2
 8005290:	3b01      	subs	r3, #1
 8005292:	f007 fbe7 	bl	800ca64 <GUI_DrawGradientV>
 8005296:	e00e      	b.n	80052b6 <PROGBAR_DrawSkinFlex+0x14e>
 8005298:	682b      	ldr	r3, [r5, #0]
 800529a:	b963      	cbnz	r3, 80052b6 <PROGBAR_DrawSkinFlex+0x14e>
 800529c:	4907      	ldr	r1, [pc, #28]	; (80052bc <PROGBAR_DrawSkinFlex+0x154>)
 800529e:	68ad      	ldr	r5, [r5, #8]
 80052a0:	6a48      	ldr	r0, [r1, #36]	; 0x24
 80052a2:	f007 f885 	bl	800c3b0 <GUI_SetColor>
 80052a6:	2002      	movs	r0, #2
 80052a8:	f007 f84a 	bl	800c340 <GUI_SetTextMode>
 80052ac:	4628      	mov	r0, r5
 80052ae:	6921      	ldr	r1, [r4, #16]
 80052b0:	6962      	ldr	r2, [r4, #20]
 80052b2:	f007 fe61 	bl	800cf78 <GUI_DispStringAt>
 80052b6:	2000      	movs	r0, #0
 80052b8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80052ba:	bf00      	nop
 80052bc:	20000068 	.word	0x20000068

080052c0 <_Create>:
 80052c0:	b530      	push	{r4, r5, lr}
 80052c2:	b08b      	sub	sp, #44	; 0x2c
 80052c4:	4605      	mov	r5, r0
 80052c6:	f008 fc39 	bl	800db3c <GUI_ALLOC_LockH>
 80052ca:	ab0a      	add	r3, sp, #40	; 0x28
 80052cc:	6e42      	ldr	r2, [r0, #100]	; 0x64
 80052ce:	f843 0d28 	str.w	r0, [r3, #-40]!
 80052d2:	4668      	mov	r0, sp
 80052d4:	6894      	ldr	r4, [r2, #8]
 80052d6:	f008 fc3f 	bl	800db58 <GUI_ALLOC_UnlockH>
 80052da:	2000      	movs	r0, #0
 80052dc:	9002      	str	r0, [sp, #8]
 80052de:	a80a      	add	r0, sp, #40	; 0x28
 80052e0:	6821      	ldr	r1, [r4, #0]
 80052e2:	f840 5d24 	str.w	r5, [r0, #-36]!
 80052e6:	4788      	blx	r1
 80052e8:	b00b      	add	sp, #44	; 0x2c
 80052ea:	bd30      	pop	{r4, r5, pc}

080052ec <_Paint>:
 80052ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80052f0:	b093      	sub	sp, #76	; 0x4c
 80052f2:	4604      	mov	r4, r0
 80052f4:	f008 fc22 	bl	800db3c <GUI_ALLOC_LockH>
 80052f8:	f890 2068 	ldrb.w	r2, [r0, #104]	; 0x68
 80052fc:	6e06      	ldr	r6, [r0, #96]	; 0x60
 80052fe:	9000      	str	r0, [sp, #0]
 8005300:	f002 0101 	and.w	r1, r2, #1
 8005304:	9106      	str	r1, [sp, #24]
 8005306:	6b41      	ldr	r1, [r0, #52]	; 0x34
 8005308:	f8d0 904c 	ldr.w	r9, [r0, #76]	; 0x4c
 800530c:	f000 f939 	bl	8005582 <PROGBAR__Value2Pos>
 8005310:	4607      	mov	r7, r0
 8005312:	4668      	mov	r0, sp
 8005314:	f008 fc20 	bl	800db58 <GUI_ALLOC_UnlockH>
 8005318:	f10d 0808 	add.w	r8, sp, #8
 800531c:	a806      	add	r0, sp, #24
 800531e:	9011      	str	r0, [sp, #68]	; 0x44
 8005320:	4641      	mov	r1, r8
 8005322:	4620      	mov	r0, r4
 8005324:	f002 fb7d 	bl	8007a22 <WM_GetClientRectEx>
 8005328:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800532c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8005330:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 8005334:	f9bd 000e 	ldrsh.w	r0, [sp, #14]
 8005338:	930d      	str	r3, [sp, #52]	; 0x34
 800533a:	250b      	movs	r5, #11
 800533c:	950a      	str	r5, [sp, #40]	; 0x28
 800533e:	920e      	str	r2, [sp, #56]	; 0x38
 8005340:	910f      	str	r1, [sp, #60]	; 0x3c
 8005342:	9010      	str	r0, [sp, #64]	; 0x40
 8005344:	9409      	str	r4, [sp, #36]	; 0x24
 8005346:	a809      	add	r0, sp, #36	; 0x24
 8005348:	47b0      	blx	r6
 800534a:	e898 0003 	ldmia.w	r8, {r0, r1}
 800534e:	ad04      	add	r5, sp, #16
 8005350:	e885 0003 	stmia.w	r5, {r0, r1}
 8005354:	2201      	movs	r2, #1
 8005356:	4629      	mov	r1, r5
 8005358:	4628      	mov	r0, r5
 800535a:	f006 fb01 	bl	800b960 <GUI__ReduceRect>
 800535e:	4628      	mov	r0, r5
 8005360:	f001 ff4c 	bl	80071fc <WM_SetUserClipRect>
 8005364:	f9bd 0008 	ldrsh.w	r0, [sp, #8]
 8005368:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 800536c:	9906      	ldr	r1, [sp, #24]
 800536e:	9409      	str	r4, [sp, #36]	; 0x24
 8005370:	2305      	movs	r3, #5
 8005372:	930a      	str	r3, [sp, #40]	; 0x28
 8005374:	900d      	str	r0, [sp, #52]	; 0x34
 8005376:	920e      	str	r2, [sp, #56]	; 0x38
 8005378:	b129      	cbz	r1, 8005386 <_Paint+0x9a>
 800537a:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 800537e:	19d2      	adds	r2, r2, r7
 8005380:	910f      	str	r1, [sp, #60]	; 0x3c
 8005382:	9210      	str	r2, [sp, #64]	; 0x40
 8005384:	e004      	b.n	8005390 <_Paint+0xa4>
 8005386:	19c3      	adds	r3, r0, r7
 8005388:	f9bd 000e 	ldrsh.w	r0, [sp, #14]
 800538c:	930f      	str	r3, [sp, #60]	; 0x3c
 800538e:	9010      	str	r0, [sp, #64]	; 0x40
 8005390:	2300      	movs	r3, #0
 8005392:	9307      	str	r3, [sp, #28]
 8005394:	a809      	add	r0, sp, #36	; 0x24
 8005396:	47b0      	blx	r6
 8005398:	9906      	ldr	r1, [sp, #24]
 800539a:	f9bd 0008 	ldrsh.w	r0, [sp, #8]
 800539e:	b131      	cbz	r1, 80053ae <_Paint+0xc2>
 80053a0:	f9bd 100a 	ldrsh.w	r1, [sp, #10]
 80053a4:	900d      	str	r0, [sp, #52]	; 0x34
 80053a6:	19cf      	adds	r7, r1, r7
 80053a8:	3701      	adds	r7, #1
 80053aa:	970e      	str	r7, [sp, #56]	; 0x38
 80053ac:	e005      	b.n	80053ba <_Paint+0xce>
 80053ae:	19c2      	adds	r2, r0, r7
 80053b0:	f9bd 000a 	ldrsh.w	r0, [sp, #10]
 80053b4:	1c53      	adds	r3, r2, #1
 80053b6:	930d      	str	r3, [sp, #52]	; 0x34
 80053b8:	900e      	str	r0, [sp, #56]	; 0x38
 80053ba:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80053be:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80053c2:	920f      	str	r2, [sp, #60]	; 0x3c
 80053c4:	2001      	movs	r0, #1
 80053c6:	9310      	str	r3, [sp, #64]	; 0x40
 80053c8:	9007      	str	r0, [sp, #28]
 80053ca:	a809      	add	r0, sp, #36	; 0x24
 80053cc:	47b0      	blx	r6
 80053ce:	4620      	mov	r0, r4
 80053d0:	f008 fbb4 	bl	800db3c <GUI_ALLOC_LockH>
 80053d4:	9000      	str	r0, [sp, #0]
 80053d6:	f000 f88e 	bl	80054f6 <PROGBAR__GetTextLocked>
 80053da:	9001      	str	r0, [sp, #4]
 80053dc:	b1f8      	cbz	r0, 800541e <_Paint+0x132>
 80053de:	4648      	mov	r0, r9
 80053e0:	f006 ffb8 	bl	800c354 <GUI_SetFont>
 80053e4:	a902      	add	r1, sp, #8
 80053e6:	9a01      	ldr	r2, [sp, #4]
 80053e8:	9800      	ldr	r0, [sp, #0]
 80053ea:	f000 f887 	bl	80054fc <PROGBAR__GetTextRect>
 80053ee:	4668      	mov	r0, sp
 80053f0:	f008 fbb2 	bl	800db58 <GUI_ALLOC_UnlockH>
 80053f4:	9901      	ldr	r1, [sp, #4]
 80053f6:	f9bd 000a 	ldrsh.w	r0, [sp, #10]
 80053fa:	9108      	str	r1, [sp, #32]
 80053fc:	2212      	movs	r2, #18
 80053fe:	920a      	str	r2, [sp, #40]	; 0x28
 8005400:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8005404:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 8005408:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 800540c:	900e      	str	r0, [sp, #56]	; 0x38
 800540e:	9409      	str	r4, [sp, #36]	; 0x24
 8005410:	930d      	str	r3, [sp, #52]	; 0x34
 8005412:	910f      	str	r1, [sp, #60]	; 0x3c
 8005414:	9210      	str	r2, [sp, #64]	; 0x40
 8005416:	a809      	add	r0, sp, #36	; 0x24
 8005418:	47b0      	blx	r6
 800541a:	a801      	add	r0, sp, #4
 800541c:	e000      	b.n	8005420 <_Paint+0x134>
 800541e:	4668      	mov	r0, sp
 8005420:	f008 fb9a 	bl	800db58 <GUI_ALLOC_UnlockH>
 8005424:	2000      	movs	r0, #0
 8005426:	f001 fee9 	bl	80071fc <WM_SetUserClipRect>
 800542a:	b013      	add	sp, #76	; 0x4c
 800542c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08005430 <PROGBAR_SetSkin>:
 8005430:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005432:	460d      	mov	r5, r1
 8005434:	4604      	mov	r4, r0
 8005436:	f008 fb81 	bl	800db3c <GUI_ALLOC_LockH>
 800543a:	4906      	ldr	r1, [pc, #24]	; (8005454 <PROGBAR_SetSkin+0x24>)
 800543c:	4602      	mov	r2, r0
 800543e:	a802      	add	r0, sp, #8
 8005440:	6651      	str	r1, [r2, #100]	; 0x64
 8005442:	f840 2d04 	str.w	r2, [r0, #-4]!
 8005446:	6615      	str	r5, [r2, #96]	; 0x60
 8005448:	f008 fb86 	bl	800db58 <GUI_ALLOC_UnlockH>
 800544c:	4620      	mov	r0, r4
 800544e:	f002 ffdb 	bl	8008408 <WM_InvalidateWindow>
 8005452:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 8005454:	20000090 	.word	0x20000090

08005458 <PROGBAR_CreateAsChild>:
 8005458:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800545a:	9c06      	ldr	r4, [sp, #24]
 800545c:	9400      	str	r4, [sp, #0]
 800545e:	9c08      	ldr	r4, [sp, #32]
 8005460:	9401      	str	r4, [sp, #4]
 8005462:	2400      	movs	r4, #0
 8005464:	9402      	str	r4, [sp, #8]
 8005466:	9c07      	ldr	r4, [sp, #28]
 8005468:	9403      	str	r4, [sp, #12]
 800546a:	f000 f90f 	bl	800568c <PROGBAR_CreateEx>
 800546e:	b004      	add	sp, #16
 8005470:	bd10      	pop	{r4, pc}

08005472 <_SetValue>:
 8005472:	b513      	push	{r0, r1, r4, lr}
 8005474:	ab02      	add	r3, sp, #8
 8005476:	6342      	str	r2, [r0, #52]	; 0x34
 8005478:	f843 1d04 	str.w	r1, [r3, #-4]!
 800547c:	6c41      	ldr	r1, [r0, #68]	; 0x44
 800547e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8005480:	1a52      	subs	r2, r2, r1
 8005482:	2464      	movs	r4, #100	; 0x64
 8005484:	4362      	muls	r2, r4
 8005486:	1a41      	subs	r1, r0, r1
 8005488:	fb92 f0f1 	sdiv	r0, r2, r1
 800548c:	4619      	mov	r1, r3
 800548e:	f008 fdbc 	bl	800e00a <GUI_AddDecMin>
 8005492:	9b01      	ldr	r3, [sp, #4]
 8005494:	2225      	movs	r2, #37	; 0x25
 8005496:	2000      	movs	r0, #0
 8005498:	701a      	strb	r2, [r3, #0]
 800549a:	7058      	strb	r0, [r3, #1]
 800549c:	bd1c      	pop	{r2, r3, r4, pc}

0800549e <PROGBAR_Callback>:
 800549e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80054a0:	6845      	ldr	r5, [r0, #4]
 80054a2:	4604      	mov	r4, r0
 80054a4:	4621      	mov	r1, r4
 80054a6:	4628      	mov	r0, r5
 80054a8:	f008 ff88 	bl	800e3bc <WIDGET_HandleActive>
 80054ac:	b310      	cbz	r0, 80054f4 <PROGBAR_Callback+0x56>
 80054ae:	6823      	ldr	r3, [r4, #0]
 80054b0:	2b0b      	cmp	r3, #11
 80054b2:	d010      	beq.n	80054d6 <PROGBAR_Callback+0x38>
 80054b4:	2b0f      	cmp	r3, #15
 80054b6:	d11a      	bne.n	80054ee <PROGBAR_Callback+0x50>
 80054b8:	4628      	mov	r0, r5
 80054ba:	f008 fb3f 	bl	800db3c <GUI_ALLOC_LockH>
 80054be:	a902      	add	r1, sp, #8
 80054c0:	f841 0d04 	str.w	r0, [r1, #-4]!
 80054c4:	6e42      	ldr	r2, [r0, #100]	; 0x64
 80054c6:	6814      	ldr	r4, [r2, #0]
 80054c8:	4608      	mov	r0, r1
 80054ca:	f008 fb45 	bl	800db58 <GUI_ALLOC_UnlockH>
 80054ce:	b18c      	cbz	r4, 80054f4 <PROGBAR_Callback+0x56>
 80054d0:	4628      	mov	r0, r5
 80054d2:	47a0      	blx	r4
 80054d4:	e00e      	b.n	80054f4 <PROGBAR_Callback+0x56>
 80054d6:	4628      	mov	r0, r5
 80054d8:	f008 fb30 	bl	800db3c <GUI_ALLOC_LockH>
 80054dc:	ad02      	add	r5, sp, #8
 80054de:	f845 0d04 	str.w	r0, [r5, #-4]!
 80054e2:	3038      	adds	r0, #56	; 0x38
 80054e4:	f008 fd7c 	bl	800dfe0 <GUI_ALLOC_FreePtr>
 80054e8:	4628      	mov	r0, r5
 80054ea:	f008 fb35 	bl	800db58 <GUI_ALLOC_UnlockH>
 80054ee:	4620      	mov	r0, r4
 80054f0:	f003 fbb4 	bl	8008c5c <WM_DefaultProc>
 80054f4:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

080054f6 <PROGBAR__GetTextLocked>:
 80054f6:	6b80      	ldr	r0, [r0, #56]	; 0x38
 80054f8:	f008 bb20 	b.w	800db3c <GUI_ALLOC_LockH>

080054fc <PROGBAR__GetTextRect>:
 80054fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005500:	f9b0 3000 	ldrsh.w	r3, [r0]
 8005504:	f9b0 7004 	ldrsh.w	r7, [r0, #4]
 8005508:	4604      	mov	r4, r0
 800550a:	460d      	mov	r5, r1
 800550c:	1af8      	subs	r0, r7, r3
 800550e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8005512:	f9b4 8006 	ldrsh.w	r8, [r4, #6]
 8005516:	1c47      	adds	r7, r0, #1
 8005518:	4610      	mov	r0, r2
 800551a:	ebc1 0608 	rsb	r6, r1, r8
 800551e:	f007 f8e5 	bl	800c6ec <GUI_GetStringDistX>
 8005522:	f106 0801 	add.w	r8, r6, #1
 8005526:	4606      	mov	r6, r0
 8005528:	f007 f8f8 	bl	800c71c <GUI_GetFontSizeY>
 800552c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800552e:	f8b4 3040 	ldrh.w	r3, [r4, #64]	; 0x40
 8005532:	6811      	ldr	r1, [r2, #0]
 8005534:	f003 0203 	and.w	r2, r3, #3
 8005538:	2a01      	cmp	r2, #1
 800553a:	d006      	beq.n	800554a <PROGBAR__GetTextRect+0x4e>
 800553c:	2a02      	cmp	r2, #2
 800553e:	d109      	bne.n	8005554 <PROGBAR__GetTextRect+0x58>
 8005540:	1bbf      	subs	r7, r7, r6
 8005542:	fb97 f1f2 	sdiv	r1, r7, r2
 8005546:	8029      	strh	r1, [r5, #0]
 8005548:	e005      	b.n	8005556 <PROGBAR__GetTextRect+0x5a>
 800554a:	43cb      	mvns	r3, r1
 800554c:	19df      	adds	r7, r3, r7
 800554e:	1bbf      	subs	r7, r7, r6
 8005550:	802f      	strh	r7, [r5, #0]
 8005552:	e000      	b.n	8005556 <PROGBAR__GetTextRect+0x5a>
 8005554:	8029      	strh	r1, [r5, #0]
 8005556:	8fa2      	ldrh	r2, [r4, #60]	; 0x3c
 8005558:	8829      	ldrh	r1, [r5, #0]
 800555a:	ebc0 0808 	rsb	r8, r0, r8
 800555e:	1853      	adds	r3, r2, r1
 8005560:	2102      	movs	r1, #2
 8005562:	b29a      	uxth	r2, r3
 8005564:	fb98 f3f1 	sdiv	r3, r8, r1
 8005568:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800556a:	802a      	strh	r2, [r5, #0]
 800556c:	185b      	adds	r3, r3, r1
 800556e:	b299      	uxth	r1, r3
 8005570:	3a01      	subs	r2, #1
 8005572:	3801      	subs	r0, #1
 8005574:	1996      	adds	r6, r2, r6
 8005576:	180b      	adds	r3, r1, r0
 8005578:	8069      	strh	r1, [r5, #2]
 800557a:	80ae      	strh	r6, [r5, #4]
 800557c:	80eb      	strh	r3, [r5, #6]
 800557e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005582 <PROGBAR__Value2Pos>:
 8005582:	b570      	push	{r4, r5, r6, lr}
 8005584:	f890 3068 	ldrb.w	r3, [r0, #104]	; 0x68
 8005588:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800558a:	f013 0601 	ands.w	r6, r3, #1
 800558e:	bf15      	itete	ne
 8005590:	f9b0 3002 	ldrshne.w	r3, [r0, #2]
 8005594:	f9b0 3000 	ldrsheq.w	r3, [r0]
 8005598:	f9b0 5006 	ldrshne.w	r5, [r0, #6]
 800559c:	f9b0 5004 	ldrsheq.w	r5, [r0, #4]
 80055a0:	6814      	ldr	r4, [r2, #0]
 80055a2:	1aed      	subs	r5, r5, r3
 80055a4:	6c43      	ldr	r3, [r0, #68]	; 0x44
 80055a6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80055a8:	3501      	adds	r5, #1
 80055aa:	4299      	cmp	r1, r3
 80055ac:	bfb8      	it	lt
 80055ae:	4619      	movlt	r1, r3
 80055b0:	4281      	cmp	r1, r0
 80055b2:	bfa8      	it	ge
 80055b4:	4601      	movge	r1, r0
 80055b6:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
 80055ba:	b10e      	cbz	r6, 80055c0 <PROGBAR__Value2Pos+0x3e>
 80055bc:	1a41      	subs	r1, r0, r1
 80055be:	e000      	b.n	80055c2 <PROGBAR__Value2Pos+0x40>
 80055c0:	1ac9      	subs	r1, r1, r3
 80055c2:	1ac2      	subs	r2, r0, r3
 80055c4:	4369      	muls	r1, r5
 80055c6:	fb91 f3f2 	sdiv	r3, r1, r2
 80055ca:	18e0      	adds	r0, r4, r3
 80055cc:	bd70      	pop	{r4, r5, r6, pc}
	...

080055d0 <PROGBAR_CreateUser>:
 80055d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80055d4:	b087      	sub	sp, #28
 80055d6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80055d8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80055da:	9400      	str	r4, [sp, #0]
 80055dc:	4c27      	ldr	r4, [pc, #156]	; (800567c <PROGBAR_CreateUser+0xac>)
 80055de:	9701      	str	r7, [sp, #4]
 80055e0:	9402      	str	r4, [sp, #8]
 80055e2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80055e4:	3440      	adds	r4, #64	; 0x40
 80055e6:	9403      	str	r4, [sp, #12]
 80055e8:	f002 ffca 	bl	8008580 <WM_CreateWindowAsChild>
 80055ec:	4607      	mov	r7, r0
 80055ee:	2800      	cmp	r0, #0
 80055f0:	d040      	beq.n	8005674 <PROGBAR_CreateUser+0xa4>
 80055f2:	2005      	movs	r0, #5
 80055f4:	f008 fd16 	bl	800e024 <GUI_ALLOC_AllocZero>
 80055f8:	4680      	mov	r8, r0
 80055fa:	2800      	cmp	r0, #0
 80055fc:	d03a      	beq.n	8005674 <PROGBAR_CreateUser+0xa4>
 80055fe:	4638      	mov	r0, r7
 8005600:	f008 fa9c 	bl	800db3c <GUI_ALLOC_LockH>
 8005604:	f8df 9080 	ldr.w	r9, [pc, #128]	; 8005688 <PROGBAR_CreateUser+0xb8>
 8005608:	9911      	ldr	r1, [sp, #68]	; 0x44
 800560a:	9004      	str	r0, [sp, #16]
 800560c:	2200      	movs	r2, #0
 800560e:	f008 fecd 	bl	800e3ac <WIDGET__Init>
 8005612:	4638      	mov	r0, r7
 8005614:	491a      	ldr	r1, [pc, #104]	; (8005680 <PROGBAR_CreateUser+0xb0>)
 8005616:	4d1b      	ldr	r5, [pc, #108]	; (8005684 <PROGBAR_CreateUser+0xb4>)
 8005618:	f008 fdf0 	bl	800e1fc <WIDGET_SetEffect>
 800561c:	9e04      	ldr	r6, [sp, #16]
 800561e:	f8d9 3000 	ldr.w	r3, [r9]
 8005622:	f8c6 8038 	str.w	r8, [r6, #56]	; 0x38
 8005626:	6673      	str	r3, [r6, #100]	; 0x64
 8005628:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800562a:	f106 044c 	add.w	r4, r6, #76	; 0x4c
 800562e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005630:	e895 0003 	ldmia.w	r5, {r0, r1}
 8005634:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005636:	e884 0003 	stmia.w	r4, {r0, r1}
 800563a:	2164      	movs	r1, #100	; 0x64
 800563c:	2002      	movs	r0, #2
 800563e:	2400      	movs	r4, #0
 8005640:	f8a6 0040 	strh.w	r0, [r6, #64]	; 0x40
 8005644:	64b1      	str	r1, [r6, #72]	; 0x48
 8005646:	f886 2068 	strb.w	r2, [r6, #104]	; 0x68
 800564a:	6474      	str	r4, [r6, #68]	; 0x44
 800564c:	4640      	mov	r0, r8
 800564e:	f008 fa75 	bl	800db3c <GUI_ALLOC_LockH>
 8005652:	4622      	mov	r2, r4
 8005654:	4601      	mov	r1, r0
 8005656:	9005      	str	r0, [sp, #20]
 8005658:	9804      	ldr	r0, [sp, #16]
 800565a:	f7ff ff0a 	bl	8005472 <_SetValue>
 800565e:	a805      	add	r0, sp, #20
 8005660:	f008 fa7a 	bl	800db58 <GUI_ALLOC_UnlockH>
 8005664:	a804      	add	r0, sp, #16
 8005666:	f008 fa77 	bl	800db58 <GUI_ALLOC_UnlockH>
 800566a:	f8d9 3000 	ldr.w	r3, [r9]
 800566e:	4638      	mov	r0, r7
 8005670:	6859      	ldr	r1, [r3, #4]
 8005672:	4788      	blx	r1
 8005674:	4638      	mov	r0, r7
 8005676:	b007      	add	sp, #28
 8005678:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800567c:	0800549f 	.word	0x0800549f
 8005680:	0802c3e8 	.word	0x0802c3e8
 8005684:	200000a0 	.word	0x200000a0
 8005688:	2000009c 	.word	0x2000009c

0800568c <PROGBAR_CreateEx>:
 800568c:	b510      	push	{r4, lr}
 800568e:	b086      	sub	sp, #24
 8005690:	9c08      	ldr	r4, [sp, #32]
 8005692:	9400      	str	r4, [sp, #0]
 8005694:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8005696:	9401      	str	r4, [sp, #4]
 8005698:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800569a:	9402      	str	r4, [sp, #8]
 800569c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800569e:	9403      	str	r4, [sp, #12]
 80056a0:	2400      	movs	r4, #0
 80056a2:	9404      	str	r4, [sp, #16]
 80056a4:	f7ff ff94 	bl	80055d0 <PROGBAR_CreateUser>
 80056a8:	b006      	add	sp, #24
 80056aa:	bd10      	pop	{r4, pc}

080056ac <PROGBAR_SetValue>:
 80056ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80056b0:	460d      	mov	r5, r1
 80056b2:	b086      	sub	sp, #24
 80056b4:	4607      	mov	r7, r0
 80056b6:	2800      	cmp	r0, #0
 80056b8:	f000 809f 	beq.w	80057fa <PROGBAR_SetValue+0x14e>
 80056bc:	f008 fa3e 	bl	800db3c <GUI_ALLOC_LockH>
 80056c0:	6c43      	ldr	r3, [r0, #68]	; 0x44
 80056c2:	6c81      	ldr	r1, [r0, #72]	; 0x48
 80056c4:	6b46      	ldr	r6, [r0, #52]	; 0x34
 80056c6:	9000      	str	r0, [sp, #0]
 80056c8:	429d      	cmp	r5, r3
 80056ca:	bfb8      	it	lt
 80056cc:	461d      	movlt	r5, r3
 80056ce:	428d      	cmp	r5, r1
 80056d0:	bfa8      	it	ge
 80056d2:	460d      	movge	r5, r1
 80056d4:	42ae      	cmp	r6, r5
 80056d6:	4604      	mov	r4, r0
 80056d8:	f000 808c 	beq.w	80057f4 <PROGBAR_SetValue+0x148>
 80056dc:	f890 8068 	ldrb.w	r8, [r0, #104]	; 0x68
 80056e0:	f018 0f01 	tst.w	r8, #1
 80056e4:	d01c      	beq.n	8005720 <PROGBAR_SetValue+0x74>
 80056e6:	42b5      	cmp	r5, r6
 80056e8:	da07      	bge.n	80056fa <PROGBAR_SetValue+0x4e>
 80056ea:	4629      	mov	r1, r5
 80056ec:	f7ff ff49 	bl	8005582 <PROGBAR__Value2Pos>
 80056f0:	4631      	mov	r1, r6
 80056f2:	f8ad 000e 	strh.w	r0, [sp, #14]
 80056f6:	4620      	mov	r0, r4
 80056f8:	e006      	b.n	8005708 <PROGBAR_SetValue+0x5c>
 80056fa:	4631      	mov	r1, r6
 80056fc:	f7ff ff41 	bl	8005582 <PROGBAR__Value2Pos>
 8005700:	4629      	mov	r1, r5
 8005702:	f8ad 000e 	strh.w	r0, [sp, #14]
 8005706:	4620      	mov	r0, r4
 8005708:	f7ff ff3b 	bl	8005582 <PROGBAR__Value2Pos>
 800570c:	2200      	movs	r2, #0
 800570e:	f640 73ff 	movw	r3, #4095	; 0xfff
 8005712:	f8ad 000a 	strh.w	r0, [sp, #10]
 8005716:	f8ad 2008 	strh.w	r2, [sp, #8]
 800571a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800571e:	e064      	b.n	80057ea <PROGBAR_SetValue+0x13e>
 8005720:	42b5      	cmp	r5, r6
 8005722:	da07      	bge.n	8005734 <PROGBAR_SetValue+0x88>
 8005724:	4629      	mov	r1, r5
 8005726:	f7ff ff2c 	bl	8005582 <PROGBAR__Value2Pos>
 800572a:	4631      	mov	r1, r6
 800572c:	f8ad 0008 	strh.w	r0, [sp, #8]
 8005730:	4620      	mov	r0, r4
 8005732:	e006      	b.n	8005742 <PROGBAR_SetValue+0x96>
 8005734:	4631      	mov	r1, r6
 8005736:	f7ff ff24 	bl	8005582 <PROGBAR__Value2Pos>
 800573a:	4629      	mov	r1, r5
 800573c:	f8ad 0008 	strh.w	r0, [sp, #8]
 8005740:	4620      	mov	r0, r4
 8005742:	f7ff ff1e 	bl	8005582 <PROGBAR__Value2Pos>
 8005746:	f008 0302 	and.w	r3, r8, #2
 800574a:	f8ad 000c 	strh.w	r0, [sp, #12]
 800574e:	f640 72ff 	movw	r2, #4095	; 0xfff
 8005752:	2000      	movs	r0, #0
 8005754:	b2d9      	uxtb	r1, r3
 8005756:	f8ad 000a 	strh.w	r0, [sp, #10]
 800575a:	f8ad 200e 	strh.w	r2, [sp, #14]
 800575e:	2900      	cmp	r1, #0
 8005760:	d143      	bne.n	80057ea <PROGBAR_SetValue+0x13e>
 8005762:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8005764:	9104      	str	r1, [sp, #16]
 8005766:	9105      	str	r1, [sp, #20]
 8005768:	f008 fa16 	bl	800db98 <GUI_ALLOC_GetSize>
 800576c:	2804      	cmp	r0, #4
 800576e:	dc10      	bgt.n	8005792 <PROGBAR_SetValue+0xe6>
 8005770:	ac06      	add	r4, sp, #24
 8005772:	f854 0d18 	ldr.w	r0, [r4, #-24]!
 8005776:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8005778:	4668      	mov	r0, sp
 800577a:	f008 f9ed 	bl	800db58 <GUI_ALLOC_UnlockH>
 800577e:	4620      	mov	r0, r4
 8005780:	2105      	movs	r1, #5
 8005782:	f006 fe8c 	bl	800c49e <GUI_ALLOC_Realloc>
 8005786:	4604      	mov	r4, r0
 8005788:	4638      	mov	r0, r7
 800578a:	f008 f9d7 	bl	800db3c <GUI_ALLOC_LockH>
 800578e:	9000      	str	r0, [sp, #0]
 8005790:	6384      	str	r4, [r0, #56]	; 0x38
 8005792:	9800      	ldr	r0, [sp, #0]
 8005794:	f7ff feaf 	bl	80054f6 <PROGBAR__GetTextLocked>
 8005798:	9001      	str	r0, [sp, #4]
 800579a:	b338      	cbz	r0, 80057ec <PROGBAR_SetValue+0x140>
 800579c:	9e00      	ldr	r6, [sp, #0]
 800579e:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 80057a0:	f006 fdd8 	bl	800c354 <GUI_SetFont>
 80057a4:	a904      	add	r1, sp, #16
 80057a6:	4606      	mov	r6, r0
 80057a8:	9a01      	ldr	r2, [sp, #4]
 80057aa:	9800      	ldr	r0, [sp, #0]
 80057ac:	f7ff fea6 	bl	80054fc <PROGBAR__GetTextRect>
 80057b0:	a802      	add	r0, sp, #8
 80057b2:	aa04      	add	r2, sp, #16
 80057b4:	ac06      	add	r4, sp, #24
 80057b6:	4601      	mov	r1, r0
 80057b8:	f006 ff60 	bl	800c67c <GUI_MergeRect>
 80057bc:	e89d 0003 	ldmia.w	sp, {r0, r1}
 80057c0:	462a      	mov	r2, r5
 80057c2:	f7ff fe56 	bl	8005472 <_SetValue>
 80057c6:	f854 2d14 	ldr.w	r2, [r4, #-20]!
 80057ca:	9800      	ldr	r0, [sp, #0]
 80057cc:	a904      	add	r1, sp, #16
 80057ce:	f7ff fe95 	bl	80054fc <PROGBAR__GetTextRect>
 80057d2:	a802      	add	r0, sp, #8
 80057d4:	4601      	mov	r1, r0
 80057d6:	aa04      	add	r2, sp, #16
 80057d8:	f006 ff50 	bl	800c67c <GUI_MergeRect>
 80057dc:	4630      	mov	r0, r6
 80057de:	f006 fdb9 	bl	800c354 <GUI_SetFont>
 80057e2:	4620      	mov	r0, r4
 80057e4:	f008 f9b8 	bl	800db58 <GUI_ALLOC_UnlockH>
 80057e8:	e000      	b.n	80057ec <PROGBAR_SetValue+0x140>
 80057ea:	6365      	str	r5, [r4, #52]	; 0x34
 80057ec:	4638      	mov	r0, r7
 80057ee:	a902      	add	r1, sp, #8
 80057f0:	f002 fdce 	bl	8008390 <WM_InvalidateRect>
 80057f4:	4668      	mov	r0, sp
 80057f6:	f008 f9af 	bl	800db58 <GUI_ALLOC_UnlockH>
 80057fa:	b006      	add	sp, #24
 80057fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005800 <GUI_ARRAY__GethItem>:
 8005800:	8803      	ldrh	r3, [r0, #0]
 8005802:	4299      	cmp	r1, r3
 8005804:	b513      	push	{r0, r1, r4, lr}
 8005806:	460c      	mov	r4, r1
 8005808:	d20e      	bcs.n	8005828 <GUI_ARRAY__GethItem+0x28>
 800580a:	6840      	ldr	r0, [r0, #4]
 800580c:	b150      	cbz	r0, 8005824 <GUI_ARRAY__GethItem+0x24>
 800580e:	f008 f995 	bl	800db3c <GUI_ALLOC_LockH>
 8005812:	a902      	add	r1, sp, #8
 8005814:	f850 4024 	ldr.w	r4, [r0, r4, lsl #2]
 8005818:	f841 0d04 	str.w	r0, [r1, #-4]!
 800581c:	4608      	mov	r0, r1
 800581e:	f008 f99b 	bl	800db58 <GUI_ALLOC_UnlockH>
 8005822:	e002      	b.n	800582a <GUI_ARRAY__GethItem+0x2a>
 8005824:	4604      	mov	r4, r0
 8005826:	e000      	b.n	800582a <GUI_ARRAY__GethItem+0x2a>
 8005828:	2400      	movs	r4, #0
 800582a:	4620      	mov	r0, r4
 800582c:	bd1c      	pop	{r2, r3, r4, pc}

0800582e <GUI_ARRAY__GetpItemLocked>:
 800582e:	b508      	push	{r3, lr}
 8005830:	f7ff ffe6 	bl	8005800 <GUI_ARRAY__GethItem>
 8005834:	b118      	cbz	r0, 800583e <GUI_ARRAY__GetpItemLocked+0x10>
 8005836:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800583a:	f008 b97f 	b.w	800db3c <GUI_ALLOC_LockH>
 800583e:	bd08      	pop	{r3, pc}

08005840 <GUI_ARRAY_GetNumItems>:
 8005840:	b513      	push	{r0, r1, r4, lr}
 8005842:	4604      	mov	r4, r0
 8005844:	b140      	cbz	r0, 8005858 <GUI_ARRAY_GetNumItems+0x18>
 8005846:	f008 f979 	bl	800db3c <GUI_ALLOC_LockH>
 800584a:	ab02      	add	r3, sp, #8
 800584c:	8804      	ldrh	r4, [r0, #0]
 800584e:	f843 0d04 	str.w	r0, [r3, #-4]!
 8005852:	4618      	mov	r0, r3
 8005854:	f008 f980 	bl	800db58 <GUI_ALLOC_UnlockH>
 8005858:	4620      	mov	r0, r4
 800585a:	bd1c      	pop	{r2, r3, r4, pc}

0800585c <GUI_ARRAY_AddItem>:
 800585c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005860:	4605      	mov	r5, r0
 8005862:	2800      	cmp	r0, #0
 8005864:	d03d      	beq.n	80058e2 <GUI_ARRAY_AddItem+0x86>
 8005866:	b14a      	cbz	r2, 800587c <GUI_ARRAY_AddItem+0x20>
 8005868:	4608      	mov	r0, r1
 800586a:	4611      	mov	r1, r2
 800586c:	f008 fbee 	bl	800e04c <GUI_ALLOC_AllocInit>
 8005870:	f1d0 0401 	rsbs	r4, r0, #1
 8005874:	4607      	mov	r7, r0
 8005876:	bf38      	it	cc
 8005878:	2400      	movcc	r4, #0
 800587a:	e001      	b.n	8005880 <GUI_ARRAY_AddItem+0x24>
 800587c:	4614      	mov	r4, r2
 800587e:	4617      	mov	r7, r2
 8005880:	4628      	mov	r0, r5
 8005882:	f008 f95b 	bl	800db3c <GUI_ALLOC_LockH>
 8005886:	ae02      	add	r6, sp, #8
 8005888:	f8b0 8000 	ldrh.w	r8, [r0]
 800588c:	f846 0d08 	str.w	r0, [r6, #-8]!
 8005890:	f8d0 9004 	ldr.w	r9, [r0, #4]
 8005894:	4668      	mov	r0, sp
 8005896:	f008 f95f 	bl	800db58 <GUI_ALLOC_UnlockH>
 800589a:	bb24      	cbnz	r4, 80058e6 <GUI_ARRAY_AddItem+0x8a>
 800589c:	f108 0101 	add.w	r1, r8, #1
 80058a0:	4648      	mov	r0, r9
 80058a2:	0089      	lsls	r1, r1, #2
 80058a4:	f006 fdfb 	bl	800c49e <GUI_ALLOC_Realloc>
 80058a8:	4681      	mov	r9, r0
 80058aa:	b918      	cbnz	r0, 80058b4 <GUI_ARRAY_AddItem+0x58>
 80058ac:	4638      	mov	r0, r7
 80058ae:	f008 f97f 	bl	800dbb0 <GUI_ALLOC_Free>
 80058b2:	e018      	b.n	80058e6 <GUI_ARRAY_AddItem+0x8a>
 80058b4:	f008 f942 	bl	800db3c <GUI_ALLOC_LockH>
 80058b8:	ab02      	add	r3, sp, #8
 80058ba:	f843 0d04 	str.w	r0, [r3, #-4]!
 80058be:	f840 7028 	str.w	r7, [r0, r8, lsl #2]
 80058c2:	4618      	mov	r0, r3
 80058c4:	f008 f948 	bl	800db58 <GUI_ALLOC_UnlockH>
 80058c8:	4628      	mov	r0, r5
 80058ca:	f008 f937 	bl	800db3c <GUI_ALLOC_LockH>
 80058ce:	8802      	ldrh	r2, [r0, #0]
 80058d0:	9000      	str	r0, [sp, #0]
 80058d2:	1c51      	adds	r1, r2, #1
 80058d4:	f8c0 9004 	str.w	r9, [r0, #4]
 80058d8:	8001      	strh	r1, [r0, #0]
 80058da:	4668      	mov	r0, sp
 80058dc:	f008 f93c 	bl	800db58 <GUI_ALLOC_UnlockH>
 80058e0:	e002      	b.n	80058e8 <GUI_ARRAY_AddItem+0x8c>
 80058e2:	4604      	mov	r4, r0
 80058e4:	e000      	b.n	80058e8 <GUI_ARRAY_AddItem+0x8c>
 80058e6:	2401      	movs	r4, #1
 80058e8:	4620      	mov	r0, r4
 80058ea:	e8bd 83fe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}

080058ee <GUI_ARRAY_Delete>:
 80058ee:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80058f0:	4605      	mov	r5, r0
 80058f2:	b318      	cbz	r0, 800593c <GUI_ARRAY_Delete+0x4e>
 80058f4:	f008 f922 	bl	800db3c <GUI_ALLOC_LockH>
 80058f8:	9000      	str	r0, [sp, #0]
 80058fa:	6840      	ldr	r0, [r0, #4]
 80058fc:	b1c0      	cbz	r0, 8005930 <GUI_ARRAY_Delete+0x42>
 80058fe:	f008 f91d 	bl	800db3c <GUI_ALLOC_LockH>
 8005902:	2400      	movs	r4, #0
 8005904:	9001      	str	r0, [sp, #4]
 8005906:	9b00      	ldr	r3, [sp, #0]
 8005908:	8818      	ldrh	r0, [r3, #0]
 800590a:	4284      	cmp	r4, r0
 800590c:	da06      	bge.n	800591c <GUI_ARRAY_Delete+0x2e>
 800590e:	9801      	ldr	r0, [sp, #4]
 8005910:	eb00 0084 	add.w	r0, r0, r4, lsl #2
 8005914:	f008 fb64 	bl	800dfe0 <GUI_ALLOC_FreePtr>
 8005918:	3401      	adds	r4, #1
 800591a:	e7f4      	b.n	8005906 <GUI_ARRAY_Delete+0x18>
 800591c:	a801      	add	r0, sp, #4
 800591e:	f008 f91b 	bl	800db58 <GUI_ALLOC_UnlockH>
 8005922:	9900      	ldr	r1, [sp, #0]
 8005924:	1d08      	adds	r0, r1, #4
 8005926:	f008 fb5b 	bl	800dfe0 <GUI_ALLOC_FreePtr>
 800592a:	9b00      	ldr	r3, [sp, #0]
 800592c:	2200      	movs	r2, #0
 800592e:	801a      	strh	r2, [r3, #0]
 8005930:	4668      	mov	r0, sp
 8005932:	f008 f911 	bl	800db58 <GUI_ALLOC_UnlockH>
 8005936:	4628      	mov	r0, r5
 8005938:	f008 f93a 	bl	800dbb0 <GUI_ALLOC_Free>
 800593c:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800593e <GUI_ARRAY_SetItem>:
 800593e:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005942:	460d      	mov	r5, r1
 8005944:	4691      	mov	r9, r2
 8005946:	461e      	mov	r6, r3
 8005948:	b908      	cbnz	r0, 800594e <GUI_ARRAY_SetItem+0x10>
 800594a:	2400      	movs	r4, #0
 800594c:	e045      	b.n	80059da <GUI_ARRAY_SetItem+0x9c>
 800594e:	f008 f8f5 	bl	800db3c <GUI_ALLOC_LockH>
 8005952:	ab04      	add	r3, sp, #16
 8005954:	8804      	ldrh	r4, [r0, #0]
 8005956:	f843 0d0c 	str.w	r0, [r3, #-12]!
 800595a:	6847      	ldr	r7, [r0, #4]
 800595c:	4618      	mov	r0, r3
 800595e:	f008 f8fb 	bl	800db58 <GUI_ALLOC_UnlockH>
 8005962:	42a5      	cmp	r5, r4
 8005964:	d2f1      	bcs.n	800594a <GUI_ARRAY_SetItem+0xc>
 8005966:	2f00      	cmp	r7, #0
 8005968:	d0ef      	beq.n	800594a <GUI_ARRAY_SetItem+0xc>
 800596a:	4638      	mov	r0, r7
 800596c:	f008 f8e6 	bl	800db3c <GUI_ALLOC_LockH>
 8005970:	a904      	add	r1, sp, #16
 8005972:	f850 4025 	ldr.w	r4, [r0, r5, lsl #2]
 8005976:	f841 0d08 	str.w	r0, [r1, #-8]!
 800597a:	4608      	mov	r0, r1
 800597c:	ea4f 0a85 	mov.w	sl, r5, lsl #2
 8005980:	f008 f8ea 	bl	800db58 <GUI_ALLOC_UnlockH>
 8005984:	b124      	cbz	r4, 8005990 <GUI_ARRAY_SetItem+0x52>
 8005986:	4620      	mov	r0, r4
 8005988:	f008 f906 	bl	800db98 <GUI_ALLOC_GetSize>
 800598c:	42b0      	cmp	r0, r6
 800598e:	d014      	beq.n	80059ba <GUI_ARRAY_SetItem+0x7c>
 8005990:	4630      	mov	r0, r6
 8005992:	f008 fb47 	bl	800e024 <GUI_ALLOC_AllocZero>
 8005996:	4604      	mov	r4, r0
 8005998:	2800      	cmp	r0, #0
 800599a:	d0d6      	beq.n	800594a <GUI_ARRAY_SetItem+0xc>
 800599c:	4638      	mov	r0, r7
 800599e:	f008 f8cd 	bl	800db3c <GUI_ALLOC_LockH>
 80059a2:	af04      	add	r7, sp, #16
 80059a4:	4680      	mov	r8, r0
 80059a6:	f847 0d08 	str.w	r0, [r7, #-8]!
 80059aa:	4450      	add	r0, sl
 80059ac:	f008 fb18 	bl	800dfe0 <GUI_ALLOC_FreePtr>
 80059b0:	f848 4025 	str.w	r4, [r8, r5, lsl #2]
 80059b4:	4638      	mov	r0, r7
 80059b6:	f008 f8cf 	bl	800db58 <GUI_ALLOC_UnlockH>
 80059ba:	f1b9 0f00 	cmp.w	r9, #0
 80059be:	d00c      	beq.n	80059da <GUI_ARRAY_SetItem+0x9c>
 80059c0:	4620      	mov	r0, r4
 80059c2:	f008 f8bb 	bl	800db3c <GUI_ALLOC_LockH>
 80059c6:	ad04      	add	r5, sp, #16
 80059c8:	4649      	mov	r1, r9
 80059ca:	f845 0d04 	str.w	r0, [r5, #-4]!
 80059ce:	4632      	mov	r2, r6
 80059d0:	f7fa fbda 	bl	8000188 <memcpy>
 80059d4:	4628      	mov	r0, r5
 80059d6:	f008 f8bf 	bl	800db58 <GUI_ALLOC_UnlockH>
 80059da:	4620      	mov	r0, r4
 80059dc:	b004      	add	sp, #16
 80059de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080059e2 <GUI_ARRAY_GetpItemLocked>:
 80059e2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80059e4:	460e      	mov	r6, r1
 80059e6:	4605      	mov	r5, r0
 80059e8:	b158      	cbz	r0, 8005a02 <GUI_ARRAY_GetpItemLocked+0x20>
 80059ea:	f008 f8a7 	bl	800db3c <GUI_ALLOC_LockH>
 80059ee:	ac02      	add	r4, sp, #8
 80059f0:	4631      	mov	r1, r6
 80059f2:	f844 0d04 	str.w	r0, [r4, #-4]!
 80059f6:	f7ff ff1a 	bl	800582e <GUI_ARRAY__GetpItemLocked>
 80059fa:	4605      	mov	r5, r0
 80059fc:	4620      	mov	r0, r4
 80059fe:	f008 f8ab 	bl	800db58 <GUI_ALLOC_UnlockH>
 8005a02:	4628      	mov	r0, r5
 8005a04:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

08005a06 <GUI_ARRAY_Create>:
 8005a06:	2008      	movs	r0, #8
 8005a08:	f008 bb0c 	b.w	800e024 <GUI_ALLOC_AllocZero>

08005a0c <FRAMEWIN_DrawSkinFlex>:
 8005a0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005a10:	4604      	mov	r4, r0
 8005a12:	b092      	sub	sp, #72	; 0x48
 8005a14:	6800      	ldr	r0, [r0, #0]
 8005a16:	4d9b      	ldr	r5, [pc, #620]	; (8005c84 <FRAMEWIN_DrawSkinFlex+0x278>)
 8005a18:	f000 faba 	bl	8005f90 <FRAMEWIN_GetActive>
 8005a1c:	4b9a      	ldr	r3, [pc, #616]	; (8005c88 <FRAMEWIN_DrawSkinFlex+0x27c>)
 8005a1e:	2800      	cmp	r0, #0
 8005a20:	bf18      	it	ne
 8005a22:	461d      	movne	r5, r3
 8005a24:	6860      	ldr	r0, [r4, #4]
 8005a26:	281c      	cmp	r0, #28
 8005a28:	f200 81a5 	bhi.w	8005d76 <FRAMEWIN_DrawSkinFlex+0x36a>
 8005a2c:	e8df f010 	tbh	[pc, r0, lsl #1]
 8005a30:	01a30191 	.word	0x01a30191
 8005a34:	01a301a3 	.word	0x01a301a3
 8005a38:	012e01a3 	.word	0x012e01a3
 8005a3c:	01a301a3 	.word	0x01a301a3
 8005a40:	01a301a3 	.word	0x01a301a3
 8005a44:	002701a3 	.word	0x002701a3
 8005a48:	01a301a3 	.word	0x01a301a3
 8005a4c:	01a3017e 	.word	0x01a3017e
 8005a50:	01a301a3 	.word	0x01a301a3
 8005a54:	01a30145 	.word	0x01a30145
 8005a58:	002301a3 	.word	0x002301a3
 8005a5c:	001f001d 	.word	0x001f001d
 8005a60:	01a30021 	.word	0x01a30021
 8005a64:	01a301a3 	.word	0x01a301a3
 8005a68:	0025      	.short	0x0025
 8005a6a:	69e8      	ldr	r0, [r5, #28]
 8005a6c:	e188      	b.n	8005d80 <FRAMEWIN_DrawSkinFlex+0x374>
 8005a6e:	6a28      	ldr	r0, [r5, #32]
 8005a70:	e186      	b.n	8005d80 <FRAMEWIN_DrawSkinFlex+0x374>
 8005a72:	6a68      	ldr	r0, [r5, #36]	; 0x24
 8005a74:	e184      	b.n	8005d80 <FRAMEWIN_DrawSkinFlex+0x374>
 8005a76:	6aa8      	ldr	r0, [r5, #40]	; 0x28
 8005a78:	e182      	b.n	8005d80 <FRAMEWIN_DrawSkinFlex+0x374>
 8005a7a:	6968      	ldr	r0, [r5, #20]
 8005a7c:	e180      	b.n	8005d80 <FRAMEWIN_DrawSkinFlex+0x374>
 8005a7e:	6820      	ldr	r0, [r4, #0]
 8005a80:	261c      	movs	r6, #28
 8005a82:	960a      	str	r6, [sp, #40]	; 0x28
 8005a84:	9009      	str	r0, [sp, #36]	; 0x24
 8005a86:	f008 f859 	bl	800db3c <GUI_ALLOC_LockH>
 8005a8a:	9005      	str	r0, [sp, #20]
 8005a8c:	6d07      	ldr	r7, [r0, #80]	; 0x50
 8005a8e:	a809      	add	r0, sp, #36	; 0x24
 8005a90:	47b8      	blx	r7
 8005a92:	4606      	mov	r6, r0
 8005a94:	a805      	add	r0, sp, #20
 8005a96:	f008 f85f 	bl	800db58 <GUI_ALLOC_UnlockH>
 8005a9a:	2e01      	cmp	r6, #1
 8005a9c:	dd11      	ble.n	8005ac2 <FRAMEWIN_DrawSkinFlex+0xb6>
 8005a9e:	6828      	ldr	r0, [r5, #0]
 8005aa0:	9000      	str	r0, [sp, #0]
 8005aa2:	686a      	ldr	r2, [r5, #4]
 8005aa4:	9201      	str	r2, [sp, #4]
 8005aa6:	68a9      	ldr	r1, [r5, #8]
 8005aa8:	9102      	str	r1, [sp, #8]
 8005aaa:	4633      	mov	r3, r6
 8005aac:	6920      	ldr	r0, [r4, #16]
 8005aae:	69a1      	ldr	r1, [r4, #24]
 8005ab0:	6962      	ldr	r2, [r4, #20]
 8005ab2:	f006 f853 	bl	800bb5c <GUI__DrawTwinArc2>
 8005ab6:	6923      	ldr	r3, [r4, #16]
 8005ab8:	69a7      	ldr	r7, [r4, #24]
 8005aba:	eb06 0803 	add.w	r8, r6, r3
 8005abe:	1bbf      	subs	r7, r7, r6
 8005ac0:	e02c      	b.n	8005b1c <FRAMEWIN_DrawSkinFlex+0x110>
 8005ac2:	6828      	ldr	r0, [r5, #0]
 8005ac4:	f006 fc74 	bl	800c3b0 <GUI_SetColor>
 8005ac8:	6921      	ldr	r1, [r4, #16]
 8005aca:	69e8      	ldr	r0, [r5, #28]
 8005acc:	180a      	adds	r2, r1, r0
 8005ace:	3a01      	subs	r2, #1
 8005ad0:	6960      	ldr	r0, [r4, #20]
 8005ad2:	f006 feb7 	bl	800c844 <GUI_DrawHLine>
 8005ad6:	69a2      	ldr	r2, [r4, #24]
 8005ad8:	69e9      	ldr	r1, [r5, #28]
 8005ada:	6960      	ldr	r0, [r4, #20]
 8005adc:	1a53      	subs	r3, r2, r1
 8005ade:	1c59      	adds	r1, r3, #1
 8005ae0:	f006 feb0 	bl	800c844 <GUI_DrawHLine>
 8005ae4:	6967      	ldr	r7, [r4, #20]
 8005ae6:	6920      	ldr	r0, [r4, #16]
 8005ae8:	3701      	adds	r7, #1
 8005aea:	4639      	mov	r1, r7
 8005aec:	f006 fe88 	bl	800c800 <GUI_DrawPixel>
 8005af0:	4639      	mov	r1, r7
 8005af2:	69a0      	ldr	r0, [r4, #24]
 8005af4:	f006 fe84 	bl	800c800 <GUI_DrawPixel>
 8005af8:	6868      	ldr	r0, [r5, #4]
 8005afa:	f006 fc59 	bl	800c3b0 <GUI_SetColor>
 8005afe:	6920      	ldr	r0, [r4, #16]
 8005b00:	4639      	mov	r1, r7
 8005b02:	3001      	adds	r0, #1
 8005b04:	f006 fe7c 	bl	800c800 <GUI_DrawPixel>
 8005b08:	69a2      	ldr	r2, [r4, #24]
 8005b0a:	4639      	mov	r1, r7
 8005b0c:	1e50      	subs	r0, r2, #1
 8005b0e:	f006 fe77 	bl	800c800 <GUI_DrawPixel>
 8005b12:	6921      	ldr	r1, [r4, #16]
 8005b14:	69a3      	ldr	r3, [r4, #24]
 8005b16:	f101 0802 	add.w	r8, r1, #2
 8005b1a:	1e9f      	subs	r7, r3, #2
 8005b1c:	6828      	ldr	r0, [r5, #0]
 8005b1e:	f006 fc47 	bl	800c3b0 <GUI_SetColor>
 8005b22:	4641      	mov	r1, r8
 8005b24:	463a      	mov	r2, r7
 8005b26:	6960      	ldr	r0, [r4, #20]
 8005b28:	f006 fe8c 	bl	800c844 <GUI_DrawHLine>
 8005b2c:	6868      	ldr	r0, [r5, #4]
 8005b2e:	f006 fc3f 	bl	800c3b0 <GUI_SetColor>
 8005b32:	6960      	ldr	r0, [r4, #20]
 8005b34:	463a      	mov	r2, r7
 8005b36:	3001      	adds	r0, #1
 8005b38:	4641      	mov	r1, r8
 8005b3a:	f006 fe83 	bl	800c844 <GUI_DrawHLine>
 8005b3e:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 8005b40:	2a02      	cmp	r2, #2
 8005b42:	dd0a      	ble.n	8005b5a <FRAMEWIN_DrawSkinFlex+0x14e>
 8005b44:	68a8      	ldr	r0, [r5, #8]
 8005b46:	f006 fc33 	bl	800c3b0 <GUI_SetColor>
 8005b4a:	6962      	ldr	r2, [r4, #20]
 8005b4c:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8005b4e:	1853      	adds	r3, r2, r1
 8005b50:	4640      	mov	r0, r8
 8005b52:	1c91      	adds	r1, r2, #2
 8005b54:	3b01      	subs	r3, #1
 8005b56:	463a      	mov	r2, r7
 8005b58:	e01d      	b.n	8005b96 <FRAMEWIN_DrawSkinFlex+0x18a>
 8005b5a:	6a29      	ldr	r1, [r5, #32]
 8005b5c:	42b1      	cmp	r1, r6
 8005b5e:	dd1c      	ble.n	8005b9a <FRAMEWIN_DrawSkinFlex+0x18e>
 8005b60:	6967      	ldr	r7, [r4, #20]
 8005b62:	6923      	ldr	r3, [r4, #16]
 8005b64:	2e01      	cmp	r6, #1
 8005b66:	f107 0802 	add.w	r8, r7, #2
 8005b6a:	f340 8106 	ble.w	8005d7a <FRAMEWIN_DrawSkinFlex+0x36e>
 8005b6e:	19bf      	adds	r7, r7, r6
 8005b70:	18f0      	adds	r0, r6, r3
 8005b72:	18ca      	adds	r2, r1, r3
 8005b74:	3a01      	subs	r2, #1
 8005b76:	4641      	mov	r1, r8
 8005b78:	463b      	mov	r3, r7
 8005b7a:	f006 fde1 	bl	800c740 <GUI_FillRect>
 8005b7e:	69a1      	ldr	r1, [r4, #24]
 8005b80:	69e8      	ldr	r0, [r5, #28]
 8005b82:	2e01      	cmp	r6, #1
 8005b84:	ebc0 0301 	rsb	r3, r0, r1
 8005b88:	bfcc      	ite	gt
 8005b8a:	ebc6 0201 	rsbgt	r2, r6, r1
 8005b8e:	1e8a      	suble	r2, r1, #2
 8005b90:	1c58      	adds	r0, r3, #1
 8005b92:	4641      	mov	r1, r8
 8005b94:	463b      	mov	r3, r7
 8005b96:	f006 fdd3 	bl	800c740 <GUI_FillRect>
 8005b9a:	6967      	ldr	r7, [r4, #20]
 8005b9c:	69e0      	ldr	r0, [r4, #28]
 8005b9e:	2e01      	cmp	r6, #1
 8005ba0:	bfcc      	ite	gt
 8005ba2:	19f6      	addgt	r6, r6, r7
 8005ba4:	1cbe      	addle	r6, r7, #2
 8005ba6:	1e47      	subs	r7, r0, #1
 8005ba8:	6828      	ldr	r0, [r5, #0]
 8005baa:	f006 fc01 	bl	800c3b0 <GUI_SetColor>
 8005bae:	463a      	mov	r2, r7
 8005bb0:	6920      	ldr	r0, [r4, #16]
 8005bb2:	4631      	mov	r1, r6
 8005bb4:	f006 fe04 	bl	800c7c0 <GUI_DrawVLine>
 8005bb8:	4631      	mov	r1, r6
 8005bba:	463a      	mov	r2, r7
 8005bbc:	69a0      	ldr	r0, [r4, #24]
 8005bbe:	f006 fdff 	bl	800c7c0 <GUI_DrawVLine>
 8005bc2:	69e2      	ldr	r2, [r4, #28]
 8005bc4:	6868      	ldr	r0, [r5, #4]
 8005bc6:	1e97      	subs	r7, r2, #2
 8005bc8:	f006 fbf2 	bl	800c3b0 <GUI_SetColor>
 8005bcc:	6921      	ldr	r1, [r4, #16]
 8005bce:	463a      	mov	r2, r7
 8005bd0:	1c48      	adds	r0, r1, #1
 8005bd2:	4631      	mov	r1, r6
 8005bd4:	f006 fdf4 	bl	800c7c0 <GUI_DrawVLine>
 8005bd8:	69a3      	ldr	r3, [r4, #24]
 8005bda:	4631      	mov	r1, r6
 8005bdc:	1e58      	subs	r0, r3, #1
 8005bde:	463a      	mov	r2, r7
 8005be0:	f006 fdee 	bl	800c7c0 <GUI_DrawVLine>
 8005be4:	69e8      	ldr	r0, [r5, #28]
 8005be6:	2802      	cmp	r0, #2
 8005be8:	dc02      	bgt.n	8005bf0 <FRAMEWIN_DrawSkinFlex+0x1e4>
 8005bea:	6a2a      	ldr	r2, [r5, #32]
 8005bec:	2a02      	cmp	r2, #2
 8005bee:	dd20      	ble.n	8005c32 <FRAMEWIN_DrawSkinFlex+0x226>
 8005bf0:	6aa9      	ldr	r1, [r5, #40]	; 0x28
 8005bf2:	69e7      	ldr	r7, [r4, #28]
 8005bf4:	68a8      	ldr	r0, [r5, #8]
 8005bf6:	2902      	cmp	r1, #2
 8005bf8:	bfcc      	ite	gt
 8005bfa:	ebc1 0707 	rsbgt	r7, r1, r7
 8005bfe:	3f02      	suble	r7, #2
 8005c00:	f006 fbd6 	bl	800c3b0 <GUI_SetColor>
 8005c04:	69eb      	ldr	r3, [r5, #28]
 8005c06:	2b02      	cmp	r3, #2
 8005c08:	dd07      	ble.n	8005c1a <FRAMEWIN_DrawSkinFlex+0x20e>
 8005c0a:	6920      	ldr	r0, [r4, #16]
 8005c0c:	18c2      	adds	r2, r0, r3
 8005c0e:	4631      	mov	r1, r6
 8005c10:	3002      	adds	r0, #2
 8005c12:	3a01      	subs	r2, #1
 8005c14:	463b      	mov	r3, r7
 8005c16:	f006 fd93 	bl	800c740 <GUI_FillRect>
 8005c1a:	6a29      	ldr	r1, [r5, #32]
 8005c1c:	2902      	cmp	r1, #2
 8005c1e:	dd08      	ble.n	8005c32 <FRAMEWIN_DrawSkinFlex+0x226>
 8005c20:	69a3      	ldr	r3, [r4, #24]
 8005c22:	69e8      	ldr	r0, [r5, #28]
 8005c24:	1a1a      	subs	r2, r3, r0
 8005c26:	1c50      	adds	r0, r2, #1
 8005c28:	4631      	mov	r1, r6
 8005c2a:	1e9a      	subs	r2, r3, #2
 8005c2c:	463b      	mov	r3, r7
 8005c2e:	f006 fd87 	bl	800c740 <GUI_FillRect>
 8005c32:	6828      	ldr	r0, [r5, #0]
 8005c34:	f006 fbbc 	bl	800c3b0 <GUI_SetColor>
 8005c38:	6921      	ldr	r1, [r4, #16]
 8005c3a:	69a2      	ldr	r2, [r4, #24]
 8005c3c:	69e0      	ldr	r0, [r4, #28]
 8005c3e:	f006 fe01 	bl	800c844 <GUI_DrawHLine>
 8005c42:	6868      	ldr	r0, [r5, #4]
 8005c44:	f006 fbb4 	bl	800c3b0 <GUI_SetColor>
 8005c48:	69e6      	ldr	r6, [r4, #28]
 8005c4a:	6921      	ldr	r1, [r4, #16]
 8005c4c:	69a3      	ldr	r3, [r4, #24]
 8005c4e:	1e70      	subs	r0, r6, #1
 8005c50:	3101      	adds	r1, #1
 8005c52:	1e5a      	subs	r2, r3, #1
 8005c54:	f006 fdf6 	bl	800c844 <GUI_DrawHLine>
 8005c58:	6aae      	ldr	r6, [r5, #40]	; 0x28
 8005c5a:	2e02      	cmp	r6, #2
 8005c5c:	f340 808b 	ble.w	8005d76 <FRAMEWIN_DrawSkinFlex+0x36a>
 8005c60:	6927      	ldr	r7, [r4, #16]
 8005c62:	69a0      	ldr	r0, [r4, #24]
 8005c64:	69e4      	ldr	r4, [r4, #28]
 8005c66:	f107 0802 	add.w	r8, r7, #2
 8005c6a:	1e87      	subs	r7, r0, #2
 8005c6c:	68a8      	ldr	r0, [r5, #8]
 8005c6e:	f006 fb9f 	bl	800c3b0 <GUI_SetColor>
 8005c72:	1ba2      	subs	r2, r4, r6
 8005c74:	1c51      	adds	r1, r2, #1
 8005c76:	4640      	mov	r0, r8
 8005c78:	463a      	mov	r2, r7
 8005c7a:	1ea3      	subs	r3, r4, #2
 8005c7c:	f006 fd60 	bl	800c740 <GUI_FillRect>
 8005c80:	e079      	b.n	8005d76 <FRAMEWIN_DrawSkinFlex+0x36a>
 8005c82:	bf00      	nop
 8005c84:	200000e4 	.word	0x200000e4
 8005c88:	200000b8 	.word	0x200000b8
 8005c8c:	8a20      	ldrh	r0, [r4, #16]
 8005c8e:	8aa1      	ldrh	r1, [r4, #20]
 8005c90:	8b22      	ldrh	r2, [r4, #24]
 8005c92:	8ba3      	ldrh	r3, [r4, #28]
 8005c94:	68ec      	ldr	r4, [r5, #12]
 8005c96:	f8ad 001c 	strh.w	r0, [sp, #28]
 8005c9a:	9400      	str	r4, [sp, #0]
 8005c9c:	692c      	ldr	r4, [r5, #16]
 8005c9e:	f8ad 101e 	strh.w	r1, [sp, #30]
 8005ca2:	f8ad 2020 	strh.w	r2, [sp, #32]
 8005ca6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8005caa:	9401      	str	r4, [sp, #4]
 8005cac:	b200      	sxth	r0, r0
 8005cae:	b209      	sxth	r1, r1
 8005cb0:	b212      	sxth	r2, r2
 8005cb2:	b21b      	sxth	r3, r3
 8005cb4:	f006 fed6 	bl	800ca64 <GUI_DrawGradientV>
 8005cb8:	e05d      	b.n	8005d76 <FRAMEWIN_DrawSkinFlex+0x36a>
 8005cba:	8b29      	ldrh	r1, [r5, #24]
 8005cbc:	6922      	ldr	r2, [r4, #16]
 8005cbe:	6960      	ldr	r0, [r4, #20]
 8005cc0:	188b      	adds	r3, r1, r2
 8005cc2:	69a2      	ldr	r2, [r4, #24]
 8005cc4:	f8ad 301c 	strh.w	r3, [sp, #28]
 8005cc8:	69e3      	ldr	r3, [r4, #28]
 8005cca:	f8ad 001e 	strh.w	r0, [sp, #30]
 8005cce:	1a51      	subs	r1, r2, r1
 8005cd0:	6820      	ldr	r0, [r4, #0]
 8005cd2:	f8ad 1020 	strh.w	r1, [sp, #32]
 8005cd6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8005cda:	f007 ff2f 	bl	800db3c <GUI_ALLOC_LockH>
 8005cde:	9005      	str	r0, [sp, #20]
 8005ce0:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8005ce2:	b1f8      	cbz	r0, 8005d24 <FRAMEWIN_DrawSkinFlex+0x318>
 8005ce4:	2002      	movs	r0, #2
 8005ce6:	f006 fb2b 	bl	800c340 <GUI_SetTextMode>
 8005cea:	9905      	ldr	r1, [sp, #20]
 8005cec:	f8b1 207c 	ldrh.w	r2, [r1, #124]	; 0x7c
 8005cf0:	f3c2 03c0 	ubfx	r3, r2, #3, #1
 8005cf4:	330e      	adds	r3, #14
 8005cf6:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 8005cfa:	6880      	ldr	r0, [r0, #8]
 8005cfc:	f006 fb58 	bl	800c3b0 <GUI_SetColor>
 8005d00:	9905      	ldr	r1, [sp, #20]
 8005d02:	6b48      	ldr	r0, [r1, #52]	; 0x34
 8005d04:	f006 fb26 	bl	800c354 <GUI_SetFont>
 8005d08:	9a05      	ldr	r2, [sp, #20]
 8005d0a:	6f10      	ldr	r0, [r2, #112]	; 0x70
 8005d0c:	f007 ff16 	bl	800db3c <GUI_ALLOC_LockH>
 8005d10:	9b05      	ldr	r3, [sp, #20]
 8005d12:	9006      	str	r0, [sp, #24]
 8005d14:	a907      	add	r1, sp, #28
 8005d16:	f9b3 205a 	ldrsh.w	r2, [r3, #90]	; 0x5a
 8005d1a:	f007 f906 	bl	800cf2a <GUI_DispStringInRect>
 8005d1e:	a806      	add	r0, sp, #24
 8005d20:	f007 ff1a 	bl	800db58 <GUI_ALLOC_UnlockH>
 8005d24:	a805      	add	r0, sp, #20
 8005d26:	f007 ff17 	bl	800db58 <GUI_ALLOC_UnlockH>
 8005d2a:	e024      	b.n	8005d76 <FRAMEWIN_DrawSkinFlex+0x36a>
 8005d2c:	6920      	ldr	r0, [r4, #16]
 8005d2e:	6961      	ldr	r1, [r4, #20]
 8005d30:	69a2      	ldr	r2, [r4, #24]
 8005d32:	69e3      	ldr	r3, [r4, #28]
 8005d34:	f8ad 001c 	strh.w	r0, [sp, #28]
 8005d38:	68a8      	ldr	r0, [r5, #8]
 8005d3a:	f8ad 101e 	strh.w	r1, [sp, #30]
 8005d3e:	f8ad 2020 	strh.w	r2, [sp, #32]
 8005d42:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8005d46:	f006 fb33 	bl	800c3b0 <GUI_SetColor>
 8005d4a:	a807      	add	r0, sp, #28
 8005d4c:	f006 fcec 	bl	800c728 <GUI_FillRectEx>
 8005d50:	e011      	b.n	8005d76 <FRAMEWIN_DrawSkinFlex+0x36a>
 8005d52:	6820      	ldr	r0, [r4, #0]
 8005d54:	f007 fef2 	bl	800db3c <GUI_ALLOC_LockH>
 8005d58:	a912      	add	r1, sp, #72	; 0x48
 8005d5a:	f8b0 205a 	ldrh.w	r2, [r0, #90]	; 0x5a
 8005d5e:	f841 0d34 	str.w	r0, [r1, #-52]!
 8005d62:	f042 030c 	orr.w	r3, r2, #12
 8005d66:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8005d6a:	4608      	mov	r0, r1
 8005d6c:	f007 fef4 	bl	800db58 <GUI_ALLOC_UnlockH>
 8005d70:	6820      	ldr	r0, [r4, #0]
 8005d72:	f001 fa4f 	bl	8007214 <WM_SetHasTrans>
 8005d76:	2000      	movs	r0, #0
 8005d78:	e002      	b.n	8005d80 <FRAMEWIN_DrawSkinFlex+0x374>
 8005d7a:	1c98      	adds	r0, r3, #2
 8005d7c:	4647      	mov	r7, r8
 8005d7e:	e6f8      	b.n	8005b72 <FRAMEWIN_DrawSkinFlex+0x166>
 8005d80:	b012      	add	sp, #72	; 0x48
 8005d82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005d86:	bf00      	nop

08005d88 <_GetBorderSize>:
 8005d88:	b570      	push	{r4, r5, r6, lr}
 8005d8a:	b08a      	sub	sp, #40	; 0x28
 8005d8c:	4605      	mov	r5, r0
 8005d8e:	460c      	mov	r4, r1
 8005d90:	f007 fed4 	bl	800db3c <GUI_ALLOC_LockH>
 8005d94:	ab0a      	add	r3, sp, #40	; 0x28
 8005d96:	6d06      	ldr	r6, [r0, #80]	; 0x50
 8005d98:	f843 0d28 	str.w	r0, [r3, #-40]!
 8005d9c:	4668      	mov	r0, sp
 8005d9e:	f007 fedb 	bl	800db58 <GUI_ALLOC_UnlockH>
 8005da2:	9501      	str	r5, [sp, #4]
 8005da4:	2c03      	cmp	r4, #3
 8005da6:	d80b      	bhi.n	8005dc0 <_GetBorderSize+0x38>
 8005da8:	e8df f004 	tbb	[pc, r4]
 8005dac:	08060402 	.word	0x08060402
 8005db0:	2018      	movs	r0, #24
 8005db2:	e004      	b.n	8005dbe <_GetBorderSize+0x36>
 8005db4:	2016      	movs	r0, #22
 8005db6:	e002      	b.n	8005dbe <_GetBorderSize+0x36>
 8005db8:	2015      	movs	r0, #21
 8005dba:	e000      	b.n	8005dbe <_GetBorderSize+0x36>
 8005dbc:	2017      	movs	r0, #23
 8005dbe:	9002      	str	r0, [sp, #8]
 8005dc0:	a801      	add	r0, sp, #4
 8005dc2:	47b0      	blx	r6
 8005dc4:	b00a      	add	sp, #40	; 0x28
 8005dc6:	bd70      	pop	{r4, r5, r6, pc}

08005dc8 <_Create>:
 8005dc8:	b530      	push	{r4, r5, lr}
 8005dca:	b08b      	sub	sp, #44	; 0x2c
 8005dcc:	4605      	mov	r5, r0
 8005dce:	f007 feb5 	bl	800db3c <GUI_ALLOC_LockH>
 8005dd2:	ab0a      	add	r3, sp, #40	; 0x28
 8005dd4:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 8005dd6:	f843 0d28 	str.w	r0, [r3, #-40]!
 8005dda:	4668      	mov	r0, sp
 8005ddc:	6894      	ldr	r4, [r2, #8]
 8005dde:	f007 febb 	bl	800db58 <GUI_ALLOC_UnlockH>
 8005de2:	2000      	movs	r0, #0
 8005de4:	9002      	str	r0, [sp, #8]
 8005de6:	a80a      	add	r0, sp, #40	; 0x28
 8005de8:	6861      	ldr	r1, [r4, #4]
 8005dea:	f840 5d24 	str.w	r5, [r0, #-36]!
 8005dee:	4788      	blx	r1
 8005df0:	b00b      	add	sp, #44	; 0x2c
 8005df2:	bd30      	pop	{r4, r5, pc}

08005df4 <_Paint>:
 8005df4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005df8:	b08f      	sub	sp, #60	; 0x3c
 8005dfa:	4604      	mov	r4, r0
 8005dfc:	f007 fe9e 	bl	800db3c <GUI_ALLOC_LockH>
 8005e00:	6b42      	ldr	r2, [r0, #52]	; 0x34
 8005e02:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 8005e04:	9202      	str	r2, [sp, #8]
 8005e06:	688e      	ldr	r6, [r1, #8]
 8005e08:	9004      	str	r0, [sp, #16]
 8005e0a:	6d05      	ldr	r5, [r0, #80]	; 0x50
 8005e0c:	f000 f9a6 	bl	800615c <FRAMEWIN__CalcTitleHeight>
 8005e10:	4682      	mov	sl, r0
 8005e12:	a80e      	add	r0, sp, #56	; 0x38
 8005e14:	f850 7d28 	ldr.w	r7, [r0, #-40]!
 8005e18:	f8b7 3058 	ldrh.w	r3, [r7, #88]	; 0x58
 8005e1c:	9303      	str	r3, [sp, #12]
 8005e1e:	f007 fe9b 	bl	800db58 <GUI_ALLOC_UnlockH>
 8005e22:	4620      	mov	r0, r4
 8005e24:	f001 fd4c 	bl	80078c0 <WM_GetWindowSizeX>
 8005e28:	4680      	mov	r8, r0
 8005e2a:	4620      	mov	r0, r4
 8005e2c:	f001 fd5c 	bl	80078e8 <WM_GetWindowSizeY>
 8005e30:	6832      	ldr	r2, [r6, #0]
 8005e32:	2101      	movs	r1, #1
 8005e34:	4683      	mov	fp, r0
 8005e36:	4620      	mov	r0, r4
 8005e38:	4790      	blx	r2
 8005e3a:	6833      	ldr	r3, [r6, #0]
 8005e3c:	2103      	movs	r1, #3
 8005e3e:	4607      	mov	r7, r0
 8005e40:	4620      	mov	r0, r4
 8005e42:	4798      	blx	r3
 8005e44:	6836      	ldr	r6, [r6, #0]
 8005e46:	4681      	mov	r9, r0
 8005e48:	2100      	movs	r1, #0
 8005e4a:	4620      	mov	r0, r4
 8005e4c:	47b0      	blx	r6
 8005e4e:	4606      	mov	r6, r0
 8005e50:	2000      	movs	r0, #0
 8005e52:	9405      	str	r4, [sp, #20]
 8005e54:	f002 fd18 	bl	8008888 <WM__InitIVRSearch>
 8005e58:	2800      	cmp	r0, #0
 8005e5a:	d03c      	beq.n	8005ed6 <_Paint+0xe2>
 8005e5c:	2000      	movs	r0, #0
 8005e5e:	f108 31ff 	add.w	r1, r8, #4294967295
 8005e62:	f10b 32ff 	add.w	r2, fp, #4294967295
 8005e66:	230b      	movs	r3, #11
 8005e68:	900a      	str	r0, [sp, #40]	; 0x28
 8005e6a:	9009      	str	r0, [sp, #36]	; 0x24
 8005e6c:	910b      	str	r1, [sp, #44]	; 0x2c
 8005e6e:	920c      	str	r2, [sp, #48]	; 0x30
 8005e70:	9306      	str	r3, [sp, #24]
 8005e72:	a805      	add	r0, sp, #20
 8005e74:	47a8      	blx	r5
 8005e76:	9903      	ldr	r1, [sp, #12]
 8005e78:	9709      	str	r7, [sp, #36]	; 0x24
 8005e7a:	eb06 030a 	add.w	r3, r6, sl
 8005e7e:	ebc9 0008 	rsb	r0, r9, r8
 8005e82:	1e42      	subs	r2, r0, #1
 8005e84:	fa03 f081 	sxtah	r0, r3, r1
 8005e88:	1e41      	subs	r1, r0, #1
 8005e8a:	200e      	movs	r0, #14
 8005e8c:	e88d 000c 	stmia.w	sp, {r2, r3}
 8005e90:	930a      	str	r3, [sp, #40]	; 0x28
 8005e92:	920b      	str	r2, [sp, #44]	; 0x2c
 8005e94:	910c      	str	r1, [sp, #48]	; 0x30
 8005e96:	9006      	str	r0, [sp, #24]
 8005e98:	a805      	add	r0, sp, #20
 8005e9a:	47a8      	blx	r5
 8005e9c:	9b01      	ldr	r3, [sp, #4]
 8005e9e:	9a00      	ldr	r2, [sp, #0]
 8005ea0:	9709      	str	r7, [sp, #36]	; 0x24
 8005ea2:	1e59      	subs	r1, r3, #1
 8005ea4:	2005      	movs	r0, #5
 8005ea6:	920b      	str	r2, [sp, #44]	; 0x2c
 8005ea8:	910c      	str	r1, [sp, #48]	; 0x30
 8005eaa:	9006      	str	r0, [sp, #24]
 8005eac:	960a      	str	r6, [sp, #40]	; 0x28
 8005eae:	a805      	add	r0, sp, #20
 8005eb0:	47a8      	blx	r5
 8005eb2:	a909      	add	r1, sp, #36	; 0x24
 8005eb4:	aa0b      	add	r2, sp, #44	; 0x2c
 8005eb6:	4620      	mov	r0, r4
 8005eb8:	f000 f95f 	bl	800617a <FRAMEWIN__GetTitleLimits>
 8005ebc:	2002      	movs	r0, #2
 8005ebe:	f006 fa3f 	bl	800c340 <GUI_SetTextMode>
 8005ec2:	9802      	ldr	r0, [sp, #8]
 8005ec4:	f006 fa46 	bl	800c354 <GUI_SetFont>
 8005ec8:	2212      	movs	r2, #18
 8005eca:	9206      	str	r2, [sp, #24]
 8005ecc:	a805      	add	r0, sp, #20
 8005ece:	47a8      	blx	r5
 8005ed0:	f002 fc1a 	bl	8008708 <WM__GetNextIVR>
 8005ed4:	e7c0      	b.n	8005e58 <_Paint+0x64>
 8005ed6:	b00f      	add	sp, #60	; 0x3c
 8005ed8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08005edc <FRAMEWIN_SetDefaultSkin>:
 8005edc:	4a06      	ldr	r2, [pc, #24]	; (8005ef8 <FRAMEWIN_SetDefaultSkin+0x1c>)
 8005ede:	4b07      	ldr	r3, [pc, #28]	; (8005efc <FRAMEWIN_SetDefaultSkin+0x20>)
 8005ee0:	4907      	ldr	r1, [pc, #28]	; (8005f00 <FRAMEWIN_SetDefaultSkin+0x24>)
 8005ee2:	b510      	push	{r4, lr}
 8005ee4:	601a      	str	r2, [r3, #0]
 8005ee6:	6048      	str	r0, [r1, #4]
 8005ee8:	4a06      	ldr	r2, [pc, #24]	; (8005f04 <FRAMEWIN_SetDefaultSkin+0x28>)
 8005eea:	c903      	ldmia	r1, {r0, r1}
 8005eec:	69d4      	ldr	r4, [r2, #28]
 8005eee:	3218      	adds	r2, #24
 8005ef0:	e882 0003 	stmia.w	r2, {r0, r1}
 8005ef4:	4620      	mov	r0, r4
 8005ef6:	bd10      	pop	{r4, pc}
 8005ef8:	20000118 	.word	0x20000118
 8005efc:	2000014c 	.word	0x2000014c
 8005f00:	20000110 	.word	0x20000110
 8005f04:	20000124 	.word	0x20000124

08005f08 <FRAMEWIN_SetFont>:
 8005f08:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005f0c:	460e      	mov	r6, r1
 8005f0e:	4604      	mov	r4, r0
 8005f10:	2800      	cmp	r0, #0
 8005f12:	d029      	beq.n	8005f68 <FRAMEWIN_SetFont+0x60>
 8005f14:	f007 fe12 	bl	800db3c <GUI_ALLOC_LockH>
 8005f18:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 8005f1a:	9003      	str	r0, [sp, #12]
 8005f1c:	688d      	ldr	r5, [r1, #8]
 8005f1e:	f000 f91d 	bl	800615c <FRAMEWIN__CalcTitleHeight>
 8005f22:	4680      	mov	r8, r0
 8005f24:	a804      	add	r0, sp, #16
 8005f26:	f850 2d04 	ldr.w	r2, [r0, #-4]!
 8005f2a:	6356      	str	r6, [r2, #52]	; 0x34
 8005f2c:	f007 fe14 	bl	800db58 <GUI_ALLOC_UnlockH>
 8005f30:	682e      	ldr	r6, [r5, #0]
 8005f32:	2101      	movs	r1, #1
 8005f34:	4620      	mov	r0, r4
 8005f36:	47b0      	blx	r6
 8005f38:	682b      	ldr	r3, [r5, #0]
 8005f3a:	4607      	mov	r7, r0
 8005f3c:	2103      	movs	r1, #3
 8005f3e:	4620      	mov	r0, r4
 8005f40:	4798      	blx	r3
 8005f42:	2100      	movs	r1, #0
 8005f44:	4606      	mov	r6, r0
 8005f46:	682d      	ldr	r5, [r5, #0]
 8005f48:	4620      	mov	r0, r4
 8005f4a:	47a8      	blx	r5
 8005f4c:	4605      	mov	r5, r0
 8005f4e:	4620      	mov	r0, r4
 8005f50:	f000 f9ca 	bl	80062e8 <FRAMEWIN__UpdatePositions>
 8005f54:	4620      	mov	r0, r4
 8005f56:	9500      	str	r5, [sp, #0]
 8005f58:	4641      	mov	r1, r8
 8005f5a:	463a      	mov	r2, r7
 8005f5c:	4633      	mov	r3, r6
 8005f5e:	f008 fdba 	bl	800ead6 <FRAMEWIN__UpdateButtons>
 8005f62:	4620      	mov	r0, r4
 8005f64:	f002 fa50 	bl	8008408 <WM_InvalidateWindow>
 8005f68:	e8bd 81ff 	ldmia.w	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}

08005f6c <FRAMEWIN_SetTextColor>:
 8005f6c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005f6e:	460c      	mov	r4, r1
 8005f70:	4605      	mov	r5, r0
 8005f72:	b160      	cbz	r0, 8005f8e <FRAMEWIN_SetTextColor+0x22>
 8005f74:	f007 fde2 	bl	800db3c <GUI_ALLOC_LockH>
 8005f78:	4602      	mov	r2, r0
 8005f7a:	a802      	add	r0, sp, #8
 8005f7c:	6414      	str	r4, [r2, #64]	; 0x40
 8005f7e:	f840 2d04 	str.w	r2, [r0, #-4]!
 8005f82:	6454      	str	r4, [r2, #68]	; 0x44
 8005f84:	f007 fde8 	bl	800db58 <GUI_ALLOC_UnlockH>
 8005f88:	4628      	mov	r0, r5
 8005f8a:	f002 fa3d 	bl	8008408 <WM_InvalidateWindow>
 8005f8e:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08005f90 <FRAMEWIN_GetActive>:
 8005f90:	b513      	push	{r0, r1, r4, lr}
 8005f92:	4604      	mov	r4, r0
 8005f94:	b158      	cbz	r0, 8005fae <FRAMEWIN_GetActive+0x1e>
 8005f96:	f007 fdd1 	bl	800db3c <GUI_ALLOC_LockH>
 8005f9a:	ab02      	add	r3, sp, #8
 8005f9c:	f8b0 407c 	ldrh.w	r4, [r0, #124]	; 0x7c
 8005fa0:	f843 0d04 	str.w	r0, [r3, #-4]!
 8005fa4:	4618      	mov	r0, r3
 8005fa6:	f3c4 04c0 	ubfx	r4, r4, #3, #1
 8005faa:	f007 fdd5 	bl	800db58 <GUI_ALLOC_UnlockH>
 8005fae:	4620      	mov	r0, r4
 8005fb0:	bd1c      	pop	{r2, r3, r4, pc}

08005fb2 <FRAMEWIN_CreateIndirect>:
 8005fb2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005fb4:	b089      	sub	sp, #36	; 0x24
 8005fb6:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8005fba:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8005fbe:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 8005fc2:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8005fc6:	9100      	str	r1, [sp, #0]
 8005fc8:	2100      	movs	r1, #0
 8005fca:	9101      	str	r1, [sp, #4]
 8005fcc:	8a44      	ldrh	r4, [r0, #18]
 8005fce:	9402      	str	r4, [sp, #8]
 8005fd0:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8005fd4:	9103      	str	r1, [sp, #12]
 8005fd6:	6844      	ldr	r4, [r0, #4]
 8005fd8:	990e      	ldr	r1, [sp, #56]	; 0x38
 8005fda:	9404      	str	r4, [sp, #16]
 8005fdc:	9105      	str	r1, [sp, #20]
 8005fde:	6984      	ldr	r4, [r0, #24]
 8005fe0:	18f9      	adds	r1, r7, r3
 8005fe2:	eb0e 0002 	add.w	r0, lr, r2
 8005fe6:	9406      	str	r4, [sp, #24]
 8005fe8:	4632      	mov	r2, r6
 8005fea:	462b      	mov	r3, r5
 8005fec:	f000 f9d2 	bl	8006394 <FRAMEWIN_CreateUser>
 8005ff0:	b009      	add	sp, #36	; 0x24
 8005ff2:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005ff4 <_SetActive>:
 8005ff4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005ff6:	460d      	mov	r5, r1
 8005ff8:	4604      	mov	r4, r0
 8005ffa:	f007 fd9f 	bl	800db3c <GUI_ALLOC_LockH>
 8005ffe:	f8b0 207c 	ldrh.w	r2, [r0, #124]	; 0x7c
 8006002:	9001      	str	r0, [sp, #4]
 8006004:	f002 0108 	and.w	r1, r2, #8
 8006008:	b28b      	uxth	r3, r1
 800600a:	b11d      	cbz	r5, 8006014 <_SetActive+0x20>
 800600c:	b953      	cbnz	r3, 8006024 <_SetActive+0x30>
 800600e:	f042 0208 	orr.w	r2, r2, #8
 8006012:	e002      	b.n	800601a <_SetActive+0x26>
 8006014:	b133      	cbz	r3, 8006024 <_SetActive+0x30>
 8006016:	f022 0208 	bic.w	r2, r2, #8
 800601a:	f8a0 207c 	strh.w	r2, [r0, #124]	; 0x7c
 800601e:	4620      	mov	r0, r4
 8006020:	f002 f9f2 	bl	8008408 <WM_InvalidateWindow>
 8006024:	a801      	add	r0, sp, #4
 8006026:	f007 fd97 	bl	800db58 <GUI_ALLOC_UnlockH>
 800602a:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800602c <FRAMEWIN__GetBorderSize>:
 800602c:	b570      	push	{r4, r5, r6, lr}
 800602e:	b08a      	sub	sp, #40	; 0x28
 8006030:	4605      	mov	r5, r0
 8006032:	460c      	mov	r4, r1
 8006034:	f007 fd82 	bl	800db3c <GUI_ALLOC_LockH>
 8006038:	ab0a      	add	r3, sp, #40	; 0x28
 800603a:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 800603c:	f843 0d28 	str.w	r0, [r3, #-40]!
 8006040:	4668      	mov	r0, sp
 8006042:	6896      	ldr	r6, [r2, #8]
 8006044:	f007 fd88 	bl	800db58 <GUI_ALLOC_UnlockH>
 8006048:	9501      	str	r5, [sp, #4]
 800604a:	2c03      	cmp	r4, #3
 800604c:	d80b      	bhi.n	8006066 <FRAMEWIN__GetBorderSize+0x3a>
 800604e:	e8df f004 	tbb	[pc, r4]
 8006052:	0402      	.short	0x0402
 8006054:	0806      	.short	0x0806
 8006056:	2018      	movs	r0, #24
 8006058:	e004      	b.n	8006064 <FRAMEWIN__GetBorderSize+0x38>
 800605a:	2016      	movs	r0, #22
 800605c:	e002      	b.n	8006064 <FRAMEWIN__GetBorderSize+0x38>
 800605e:	2015      	movs	r0, #21
 8006060:	e000      	b.n	8006064 <FRAMEWIN__GetBorderSize+0x38>
 8006062:	2017      	movs	r0, #23
 8006064:	9002      	str	r0, [sp, #8]
 8006066:	6871      	ldr	r1, [r6, #4]
 8006068:	a801      	add	r0, sp, #4
 800606a:	4788      	blx	r1
 800606c:	b00a      	add	sp, #40	; 0x28
 800606e:	bd70      	pop	{r4, r5, r6, pc}

08006070 <FRAMEWIN__cbClient>:
 8006070:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006074:	6845      	ldr	r5, [r0, #4]
 8006076:	b087      	sub	sp, #28
 8006078:	4604      	mov	r4, r0
 800607a:	4628      	mov	r0, r5
 800607c:	f001 fc53 	bl	8007926 <WM_GetParent>
 8006080:	4606      	mov	r6, r0
 8006082:	f007 fd5b 	bl	800db3c <GUI_ALLOC_LockH>
 8006086:	4603      	mov	r3, r0
 8006088:	a806      	add	r0, sp, #24
 800608a:	6e5f      	ldr	r7, [r3, #100]	; 0x64
 800608c:	f840 3d14 	str.w	r3, [r0, #-20]!
 8006090:	f8d3 8048 	ldr.w	r8, [r3, #72]	; 0x48
 8006094:	f8d3 9080 	ldr.w	r9, [r3, #128]	; 0x80
 8006098:	f007 fd5e 	bl	800db58 <GUI_ALLOC_UnlockH>
 800609c:	6820      	ldr	r0, [r4, #0]
 800609e:	380e      	subs	r0, #14
 80060a0:	2814      	cmp	r0, #20
 80060a2:	d850      	bhi.n	8006146 <FRAMEWIN__cbClient+0xd6>
 80060a4:	e8df f000 	tbb	[pc, r0]
 80060a8:	4f4f0b2f 	.word	0x4f4f0b2f
 80060ac:	54544f4f 	.word	0x54544f4f
 80060b0:	4f4f544f 	.word	0x4f4f544f
 80060b4:	4f4f4f4f 	.word	0x4f4f4f4f
 80060b8:	4f4f2a1e 	.word	0x4f4f2a1e
 80060bc:	4c          	.byte	0x4c
 80060bd:	00          	.byte	0x00
 80060be:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 80060c2:	4590      	cmp	r8, r2
 80060c4:	d004      	beq.n	80060d0 <FRAMEWIN__cbClient+0x60>
 80060c6:	4640      	mov	r0, r8
 80060c8:	f005 fba0 	bl	800b80c <LCD_SetBkColor>
 80060cc:	f007 f924 	bl	800d318 <GUI_Clear>
 80060d0:	2f00      	cmp	r7, #0
 80060d2:	d040      	beq.n	8006156 <FRAMEWIN__cbClient+0xe6>
 80060d4:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 80060d8:	ae02      	add	r6, sp, #8
 80060da:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 80060de:	9503      	str	r5, [sp, #12]
 80060e0:	4630      	mov	r0, r6
 80060e2:	e033      	b.n	800614c <FRAMEWIN__cbClient+0xdc>
 80060e4:	68e1      	ldr	r1, [r4, #12]
 80060e6:	2900      	cmp	r1, #0
 80060e8:	d035      	beq.n	8006156 <FRAMEWIN__cbClient+0xe6>
 80060ea:	f1b9 0f00 	cmp.w	r9, #0
 80060ee:	d023      	beq.n	8006138 <FRAMEWIN__cbClient+0xc8>
 80060f0:	45a9      	cmp	r9, r5
 80060f2:	d021      	beq.n	8006138 <FRAMEWIN__cbClient+0xc8>
 80060f4:	4648      	mov	r0, r9
 80060f6:	f001 f949 	bl	800738c <WM_SetFocus>
 80060fa:	e02c      	b.n	8006156 <FRAMEWIN__cbClient+0xe6>
 80060fc:	4630      	mov	r0, r6
 80060fe:	4621      	mov	r1, r4
 8006100:	f008 f95c 	bl	800e3bc <WIDGET_HandleActive>
 8006104:	e027      	b.n	8006156 <FRAMEWIN__cbClient+0xe6>
 8006106:	68e3      	ldr	r3, [r4, #12]
 8006108:	6858      	ldr	r0, [r3, #4]
 800610a:	2800      	cmp	r0, #0
 800610c:	dd1b      	ble.n	8006146 <FRAMEWIN__cbClient+0xd6>
 800610e:	6819      	ldr	r1, [r3, #0]
 8006110:	2909      	cmp	r1, #9
 8006112:	d011      	beq.n	8006138 <FRAMEWIN__cbClient+0xc8>
 8006114:	290a      	cmp	r1, #10
 8006116:	d116      	bne.n	8006146 <FRAMEWIN__cbClient+0xd6>
 8006118:	4628      	mov	r0, r5
 800611a:	f001 f8d5 	bl	80072c8 <WM_SetFocusOnPrevChild>
 800611e:	4604      	mov	r4, r0
 8006120:	4630      	mov	r0, r6
 8006122:	f007 fd0b 	bl	800db3c <GUI_ALLOC_LockH>
 8006126:	4602      	mov	r2, r0
 8006128:	a806      	add	r0, sp, #24
 800612a:	f840 2d14 	str.w	r2, [r0, #-20]!
 800612e:	f8c2 4080 	str.w	r4, [r2, #128]	; 0x80
 8006132:	f007 fd11 	bl	800db58 <GUI_ALLOC_UnlockH>
 8006136:	e00e      	b.n	8006156 <FRAMEWIN__cbClient+0xe6>
 8006138:	4628      	mov	r0, r5
 800613a:	f001 f8f5 	bl	8007328 <WM_SetFocusOnNextChild>
 800613e:	e7ee      	b.n	800611e <FRAMEWIN__cbClient+0xae>
 8006140:	f8c4 800c 	str.w	r8, [r4, #12]
 8006144:	e007      	b.n	8006156 <FRAMEWIN__cbClient+0xe6>
 8006146:	b11f      	cbz	r7, 8006150 <FRAMEWIN__cbClient+0xe0>
 8006148:	6066      	str	r6, [r4, #4]
 800614a:	4620      	mov	r0, r4
 800614c:	47b8      	blx	r7
 800614e:	e002      	b.n	8006156 <FRAMEWIN__cbClient+0xe6>
 8006150:	4620      	mov	r0, r4
 8006152:	f002 fd83 	bl	8008c5c <WM_DefaultProc>
 8006156:	b007      	add	sp, #28
 8006158:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800615c <FRAMEWIN__CalcTitleHeight>:
 800615c:	b508      	push	{r3, lr}
 800615e:	4603      	mov	r3, r0
 8006160:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 8006162:	f000 0120 	and.w	r1, r0, #32
 8006166:	b288      	uxth	r0, r1
 8006168:	b130      	cbz	r0, 8006178 <FRAMEWIN__CalcTitleHeight+0x1c>
 800616a:	f9b3 0054 	ldrsh.w	r0, [r3, #84]	; 0x54
 800616e:	b918      	cbnz	r0, 8006178 <FRAMEWIN__CalcTitleHeight+0x1c>
 8006170:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8006172:	f006 fab7 	bl	800c6e4 <GUI_GetYSizeOfFont>
 8006176:	3002      	adds	r0, #2
 8006178:	bd08      	pop	{r3, pc}

0800617a <FRAMEWIN__GetTitleLimits>:
 800617a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800617c:	b085      	sub	sp, #20
 800617e:	4604      	mov	r4, r0
 8006180:	460d      	mov	r5, r1
 8006182:	4616      	mov	r6, r2
 8006184:	f007 fcda 	bl	800db3c <GUI_ALLOC_LockH>
 8006188:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 800618a:	9000      	str	r0, [sp, #0]
 800618c:	c803      	ldmia	r0, {r0, r1}
 800618e:	6897      	ldr	r7, [r2, #8]
 8006190:	ab04      	add	r3, sp, #16
 8006192:	e903 0003 	stmdb	r3, {r0, r1}
 8006196:	4668      	mov	r0, sp
 8006198:	f007 fcde 	bl	800db58 <GUI_ALLOC_UnlockH>
 800619c:	683a      	ldr	r2, [r7, #0]
 800619e:	4620      	mov	r0, r4
 80061a0:	2100      	movs	r1, #0
 80061a2:	4790      	blx	r2
 80061a4:	4607      	mov	r7, r0
 80061a6:	4620      	mov	r0, r4
 80061a8:	f001 fbe8 	bl	800797c <WM_GetFirstChild>
 80061ac:	4604      	mov	r4, r0
 80061ae:	b350      	cbz	r0, 8006206 <FRAMEWIN__GetTitleLimits+0x8c>
 80061b0:	4620      	mov	r0, r4
 80061b2:	f007 fcc3 	bl	800db3c <GUI_ALLOC_LockH>
 80061b6:	4603      	mov	r3, r0
 80061b8:	f9bd e00a 	ldrsh.w	lr, [sp, #10]
 80061bc:	f9b3 c002 	ldrsh.w	ip, [r3, #2]
 80061c0:	9001      	str	r0, [sp, #4]
 80061c2:	ebce 0c0c 	rsb	ip, lr, ip
 80061c6:	45bc      	cmp	ip, r7
 80061c8:	8800      	ldrh	r0, [r0, #0]
 80061ca:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80061ce:	8899      	ldrh	r1, [r3, #4]
 80061d0:	d112      	bne.n	80061f8 <FRAMEWIN__GetTitleLimits+0x7e>
 80061d2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80061d4:	061b      	lsls	r3, r3, #24
 80061d6:	b212      	sxth	r2, r2
 80061d8:	d507      	bpl.n	80061ea <FRAMEWIN__GetTitleLimits+0x70>
 80061da:	b200      	sxth	r0, r0
 80061dc:	1a81      	subs	r1, r0, r2
 80061de:	6832      	ldr	r2, [r6, #0]
 80061e0:	4291      	cmp	r1, r2
 80061e2:	dc09      	bgt.n	80061f8 <FRAMEWIN__GetTitleLimits+0x7e>
 80061e4:	1e4b      	subs	r3, r1, #1
 80061e6:	6033      	str	r3, [r6, #0]
 80061e8:	e006      	b.n	80061f8 <FRAMEWIN__GetTitleLimits+0x7e>
 80061ea:	b208      	sxth	r0, r1
 80061ec:	1a81      	subs	r1, r0, r2
 80061ee:	682a      	ldr	r2, [r5, #0]
 80061f0:	4291      	cmp	r1, r2
 80061f2:	db01      	blt.n	80061f8 <FRAMEWIN__GetTitleLimits+0x7e>
 80061f4:	1c4b      	adds	r3, r1, #1
 80061f6:	602b      	str	r3, [r5, #0]
 80061f8:	a801      	add	r0, sp, #4
 80061fa:	f007 fcad 	bl	800db58 <GUI_ALLOC_UnlockH>
 80061fe:	4620      	mov	r0, r4
 8006200:	f001 fb99 	bl	8007936 <WM_GetNextSibling>
 8006204:	e7d2      	b.n	80061ac <FRAMEWIN__GetTitleLimits+0x32>
 8006206:	b005      	add	sp, #20
 8006208:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800620a <FRAMEWIN__CalcPositions>:
 800620a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800620e:	b087      	sub	sp, #28
 8006210:	4604      	mov	r4, r0
 8006212:	460f      	mov	r7, r1
 8006214:	f007 fc92 	bl	800db3c <GUI_ALLOC_LockH>
 8006218:	6dc2      	ldr	r2, [r0, #92]	; 0x5c
 800621a:	9003      	str	r0, [sp, #12]
 800621c:	6895      	ldr	r5, [r2, #8]
 800621e:	2101      	movs	r1, #1
 8006220:	682b      	ldr	r3, [r5, #0]
 8006222:	4620      	mov	r0, r4
 8006224:	4798      	blx	r3
 8006226:	682e      	ldr	r6, [r5, #0]
 8006228:	2103      	movs	r1, #3
 800622a:	4683      	mov	fp, r0
 800622c:	4620      	mov	r0, r4
 800622e:	47b0      	blx	r6
 8006230:	682a      	ldr	r2, [r5, #0]
 8006232:	2102      	movs	r1, #2
 8006234:	4681      	mov	r9, r0
 8006236:	4620      	mov	r0, r4
 8006238:	4790      	blx	r2
 800623a:	2100      	movs	r1, #0
 800623c:	9001      	str	r0, [sp, #4]
 800623e:	682d      	ldr	r5, [r5, #0]
 8006240:	4620      	mov	r0, r4
 8006242:	47a8      	blx	r5
 8006244:	4605      	mov	r5, r0
 8006246:	9803      	ldr	r0, [sp, #12]
 8006248:	f001 fb2c 	bl	80078a4 <WM__GetWindowSizeX>
 800624c:	4682      	mov	sl, r0
 800624e:	9803      	ldr	r0, [sp, #12]
 8006250:	f001 fb2f 	bl	80078b2 <WM__GetWindowSizeY>
 8006254:	4680      	mov	r8, r0
 8006256:	9803      	ldr	r0, [sp, #12]
 8006258:	8e41      	ldrh	r1, [r0, #50]	; 0x32
 800625a:	f001 0320 	and.w	r3, r1, #32
 800625e:	b29e      	uxth	r6, r3
 8006260:	b10e      	cbz	r6, 8006266 <FRAMEWIN__CalcPositions+0x5c>
 8006262:	f9b0 6058 	ldrsh.w	r6, [r0, #88]	; 0x58
 8006266:	f7ff ff79 	bl	800615c <FRAMEWIN__CalcTitleHeight>
 800626a:	4602      	mov	r2, r0
 800626c:	9803      	ldr	r0, [sp, #12]
 800626e:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8006270:	b118      	cbz	r0, 800627a <FRAMEWIN__CalcPositions+0x70>
 8006272:	9200      	str	r2, [sp, #0]
 8006274:	f001 fb38 	bl	80078e8 <WM_GetWindowSizeY>
 8006278:	9a00      	ldr	r2, [sp, #0]
 800627a:	803a      	strh	r2, [r7, #0]
 800627c:	b292      	uxth	r2, r2
 800627e:	1993      	adds	r3, r2, r6
 8006280:	b2a9      	uxth	r1, r5
 8006282:	18ce      	adds	r6, r1, r3
 8006284:	f10a 3aff 	add.w	sl, sl, #4294967295
 8006288:	9b01      	ldr	r3, [sp, #4]
 800628a:	8078      	strh	r0, [r7, #2]
 800628c:	ebc9 0c0a 	rsb	ip, r9, sl
 8006290:	3901      	subs	r1, #1
 8006292:	1830      	adds	r0, r6, r0
 8006294:	f108 38ff 	add.w	r8, r8, #4294967295
 8006298:	fa1f f98c 	uxth.w	r9, ip
 800629c:	1852      	adds	r2, r2, r1
 800629e:	fa1f fb8b 	uxth.w	fp, fp
 80062a2:	80f8      	strh	r0, [r7, #6]
 80062a4:	ebc3 0008 	rsb	r0, r3, r8
 80062a8:	8178      	strh	r0, [r7, #10]
 80062aa:	827a      	strh	r2, [r7, #18]
 80062ac:	f8a7 b004 	strh.w	fp, [r7, #4]
 80062b0:	f8a7 9008 	strh.w	r9, [r7, #8]
 80062b4:	f8a7 b00c 	strh.w	fp, [r7, #12]
 80062b8:	f8a7 9010 	strh.w	r9, [r7, #16]
 80062bc:	81fd      	strh	r5, [r7, #14]
 80062be:	a803      	add	r0, sp, #12
 80062c0:	f007 fc4a 	bl	800db58 <GUI_ALLOC_UnlockH>
 80062c4:	f9b7 0010 	ldrsh.w	r0, [r7, #16]
 80062c8:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80062cc:	9005      	str	r0, [sp, #20]
 80062ce:	a904      	add	r1, sp, #16
 80062d0:	aa05      	add	r2, sp, #20
 80062d2:	4620      	mov	r0, r4
 80062d4:	9304      	str	r3, [sp, #16]
 80062d6:	f7ff ff50 	bl	800617a <FRAMEWIN__GetTitleLimits>
 80062da:	9904      	ldr	r1, [sp, #16]
 80062dc:	9a05      	ldr	r2, [sp, #20]
 80062de:	81b9      	strh	r1, [r7, #12]
 80062e0:	823a      	strh	r2, [r7, #16]
 80062e2:	b007      	add	sp, #28
 80062e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080062e8 <FRAMEWIN__UpdatePositions>:
 80062e8:	b570      	push	{r4, r5, r6, lr}
 80062ea:	b086      	sub	sp, #24
 80062ec:	4606      	mov	r6, r0
 80062ee:	f007 fc25 	bl	800db3c <GUI_ALLOC_LockH>
 80062f2:	4602      	mov	r2, r0
 80062f4:	a806      	add	r0, sp, #24
 80062f6:	6e94      	ldr	r4, [r2, #104]	; 0x68
 80062f8:	f840 2d18 	str.w	r2, [r0, #-24]!
 80062fc:	4668      	mov	r0, sp
 80062fe:	6ed5      	ldr	r5, [r2, #108]	; 0x6c
 8006300:	f007 fc2a 	bl	800db58 <GUI_ALLOC_UnlockH>
 8006304:	b904      	cbnz	r4, 8006308 <FRAMEWIN__UpdatePositions+0x20>
 8006306:	b32d      	cbz	r5, 8006354 <FRAMEWIN__UpdatePositions+0x6c>
 8006308:	4630      	mov	r0, r6
 800630a:	a901      	add	r1, sp, #4
 800630c:	f7ff ff7d 	bl	800620a <FRAMEWIN__CalcPositions>
 8006310:	b1ac      	cbz	r4, 800633e <FRAMEWIN__UpdatePositions+0x56>
 8006312:	4620      	mov	r0, r4
 8006314:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8006318:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 800631c:	f001 f9c0 	bl	80076a0 <WM_MoveChildTo>
 8006320:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8006324:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8006328:	f9bd 000a 	ldrsh.w	r0, [sp, #10]
 800632c:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 8006330:	1ac9      	subs	r1, r1, r3
 8006332:	1a13      	subs	r3, r2, r0
 8006334:	3101      	adds	r1, #1
 8006336:	4620      	mov	r0, r4
 8006338:	1c5a      	adds	r2, r3, #1
 800633a:	f000 ff92 	bl	8007262 <WM_SetSize>
 800633e:	b14d      	cbz	r5, 8006354 <FRAMEWIN__UpdatePositions+0x6c>
 8006340:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8006344:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8006348:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 800634c:	4628      	mov	r0, r5
 800634e:	1ad2      	subs	r2, r2, r3
 8006350:	f001 f9a6 	bl	80076a0 <WM_MoveChildTo>
 8006354:	b006      	add	sp, #24
 8006356:	bd70      	pop	{r4, r5, r6, pc}

08006358 <FRAMEWIN_SetText>:
 8006358:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800635a:	460d      	mov	r5, r1
 800635c:	4604      	mov	r4, r0
 800635e:	b1c0      	cbz	r0, 8006392 <FRAMEWIN_SetText+0x3a>
 8006360:	f007 fbec 	bl	800db3c <GUI_ALLOC_LockH>
 8006364:	6f03      	ldr	r3, [r0, #112]	; 0x70
 8006366:	9000      	str	r0, [sp, #0]
 8006368:	4668      	mov	r0, sp
 800636a:	9301      	str	r3, [sp, #4]
 800636c:	f007 fbf4 	bl	800db58 <GUI_ALLOC_UnlockH>
 8006370:	a801      	add	r0, sp, #4
 8006372:	4629      	mov	r1, r5
 8006374:	f005 faba 	bl	800b8ec <GUI__SetText>
 8006378:	b158      	cbz	r0, 8006392 <FRAMEWIN_SetText+0x3a>
 800637a:	4620      	mov	r0, r4
 800637c:	f007 fbde 	bl	800db3c <GUI_ALLOC_LockH>
 8006380:	9901      	ldr	r1, [sp, #4]
 8006382:	9000      	str	r0, [sp, #0]
 8006384:	6701      	str	r1, [r0, #112]	; 0x70
 8006386:	4668      	mov	r0, sp
 8006388:	f007 fbe6 	bl	800db58 <GUI_ALLOC_UnlockH>
 800638c:	4620      	mov	r0, r4
 800638e:	f002 f83b 	bl	8008408 <WM_InvalidateWindow>
 8006392:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08006394 <FRAMEWIN_CreateUser>:
 8006394:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006398:	b08b      	sub	sp, #44	; 0x2c
 800639a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 800639c:	f8dd 904c 	ldr.w	r9, [sp, #76]	; 0x4c
 80063a0:	9400      	str	r4, [sp, #0]
 80063a2:	4c35      	ldr	r4, [pc, #212]	; (8006478 <FRAMEWIN_CreateUser+0xe4>)
 80063a4:	9402      	str	r4, [sp, #8]
 80063a6:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80063a8:	f449 5680 	orr.w	r6, r9, #4096	; 0x1000
 80063ac:	3460      	adds	r4, #96	; 0x60
 80063ae:	9601      	str	r6, [sp, #4]
 80063b0:	9403      	str	r4, [sp, #12]
 80063b2:	f002 f8e5 	bl	8008580 <WM_CreateWindowAsChild>
 80063b6:	4606      	mov	r6, r0
 80063b8:	2800      	cmp	r0, #0
 80063ba:	d058      	beq.n	800646e <FRAMEWIN_CreateUser+0xda>
 80063bc:	f007 fbbe 	bl	800db3c <GUI_ALLOC_LockH>
 80063c0:	4d2e      	ldr	r5, [pc, #184]	; (800647c <FRAMEWIN_CreateUser+0xe8>)
 80063c2:	9915      	ldr	r1, [sp, #84]	; 0x54
 80063c4:	9004      	str	r0, [sp, #16]
 80063c6:	2230      	movs	r2, #48	; 0x30
 80063c8:	f007 fff0 	bl	800e3ac <WIDGET__Init>
 80063cc:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 80063d0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80063d2:	f858 7d18 	ldr.w	r7, [r8, #-24]!
 80063d6:	f107 0434 	add.w	r4, r7, #52	; 0x34
 80063da:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80063dc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80063de:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80063e0:	e895 0003 	ldmia.w	r5, {r0, r1}
 80063e4:	4d26      	ldr	r5, [pc, #152]	; (8006480 <FRAMEWIN_CreateUser+0xec>)
 80063e6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80063e8:	e884 0003 	stmia.w	r4, {r0, r1}
 80063ec:	9814      	ldr	r0, [sp, #80]	; 0x50
 80063ee:	6829      	ldr	r1, [r5, #0]
 80063f0:	667b      	str	r3, [r7, #100]	; 0x64
 80063f2:	2400      	movs	r4, #0
 80063f4:	f8a7 007c 	strh.w	r0, [r7, #124]	; 0x7c
 80063f8:	f8c7 4080 	str.w	r4, [r7, #128]	; 0x80
 80063fc:	66fc      	str	r4, [r7, #108]	; 0x6c
 80063fe:	f8c7 4088 	str.w	r4, [r7, #136]	; 0x88
 8006402:	65f9      	str	r1, [r7, #92]	; 0x5c
 8006404:	4640      	mov	r0, r8
 8006406:	f007 fba7 	bl	800db58 <GUI_ALLOC_UnlockH>
 800640a:	4630      	mov	r0, r6
 800640c:	a905      	add	r1, sp, #20
 800640e:	f7ff fefc 	bl	800620a <FRAMEWIN__CalcPositions>
 8006412:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 8006416:	f9bd 701e 	ldrsh.w	r7, [sp, #30]
 800641a:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 800641e:	f9bd 201c 	ldrsh.w	r2, [sp, #28]
 8006422:	9403      	str	r4, [sp, #12]
 8006424:	1a7b      	subs	r3, r7, r1
 8006426:	f241 7782 	movw	r7, #6018	; 0x1782
 800642a:	9701      	str	r7, [sp, #4]
 800642c:	4f15      	ldr	r7, [pc, #84]	; (8006484 <FRAMEWIN_CreateUser+0xf0>)
 800642e:	9600      	str	r6, [sp, #0]
 8006430:	1a12      	subs	r2, r2, r0
 8006432:	3201      	adds	r2, #1
 8006434:	3301      	adds	r3, #1
 8006436:	9702      	str	r7, [sp, #8]
 8006438:	f002 f8a2 	bl	8008580 <WM_CreateWindowAsChild>
 800643c:	4604      	mov	r4, r0
 800643e:	6828      	ldr	r0, [r5, #0]
 8006440:	6841      	ldr	r1, [r0, #4]
 8006442:	4630      	mov	r0, r6
 8006444:	4788      	blx	r1
 8006446:	4630      	mov	r0, r6
 8006448:	f007 fb78 	bl	800db3c <GUI_ALLOC_LockH>
 800644c:	9004      	str	r0, [sp, #16]
 800644e:	6684      	str	r4, [r0, #104]	; 0x68
 8006450:	4640      	mov	r0, r8
 8006452:	f007 fb81 	bl	800db58 <GUI_ALLOC_UnlockH>
 8006456:	f242 0204 	movw	r2, #8196	; 0x2004
 800645a:	ea09 0302 	and.w	r3, r9, r2
 800645e:	b913      	cbnz	r3, 8006466 <FRAMEWIN_CreateUser+0xd2>
 8006460:	4630      	mov	r0, r6
 8006462:	f001 f9d2 	bl	800780a <WM_DisableMemdev>
 8006466:	4630      	mov	r0, r6
 8006468:	9916      	ldr	r1, [sp, #88]	; 0x58
 800646a:	f7ff ff75 	bl	8006358 <FRAMEWIN_SetText>
 800646e:	4630      	mov	r0, r6
 8006470:	b00b      	add	sp, #44	; 0x2c
 8006472:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006476:	bf00      	nop
 8006478:	080064b9 	.word	0x080064b9
 800647c:	20000124 	.word	0x20000124
 8006480:	2000014c 	.word	0x2000014c
 8006484:	08006071 	.word	0x08006071

08006488 <FRAMEWIN_SetTextAlign>:
 8006488:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800648a:	460c      	mov	r4, r1
 800648c:	4605      	mov	r5, r0
 800648e:	b170      	cbz	r0, 80064ae <FRAMEWIN_SetTextAlign+0x26>
 8006490:	f007 fb54 	bl	800db3c <GUI_ALLOC_LockH>
 8006494:	f9b0 205a 	ldrsh.w	r2, [r0, #90]	; 0x5a
 8006498:	9001      	str	r0, [sp, #4]
 800649a:	42a2      	cmp	r2, r4
 800649c:	d004      	beq.n	80064a8 <FRAMEWIN_SetTextAlign+0x20>
 800649e:	f8a0 405a 	strh.w	r4, [r0, #90]	; 0x5a
 80064a2:	4628      	mov	r0, r5
 80064a4:	f001 ffb0 	bl	8008408 <WM_InvalidateWindow>
 80064a8:	a801      	add	r0, sp, #4
 80064aa:	f007 fb55 	bl	800db58 <GUI_ALLOC_UnlockH>
 80064ae:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

080064b0 <FRAMEWIN_SetActive>:
 80064b0:	b108      	cbz	r0, 80064b6 <FRAMEWIN_SetActive+0x6>
 80064b2:	f7ff bd9f 	b.w	8005ff4 <_SetActive>
 80064b6:	4770      	bx	lr

080064b8 <FRAMEWIN_Callback>:
 80064b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80064bc:	6844      	ldr	r4, [r0, #4]
 80064be:	b08c      	sub	sp, #48	; 0x30
 80064c0:	4605      	mov	r5, r0
 80064c2:	4620      	mov	r0, r4
 80064c4:	f007 fb3a 	bl	800db3c <GUI_ALLOC_LockH>
 80064c8:	6dc3      	ldr	r3, [r0, #92]	; 0x5c
 80064ca:	9001      	str	r0, [sp, #4]
 80064cc:	f8d0 7088 	ldr.w	r7, [r0, #136]	; 0x88
 80064d0:	f8d0 6080 	ldr.w	r6, [r0, #128]	; 0x80
 80064d4:	f8d0 8068 	ldr.w	r8, [r0, #104]	; 0x68
 80064d8:	f8b0 907c 	ldrh.w	r9, [r0, #124]	; 0x7c
 80064dc:	b113      	cbz	r3, 80064e4 <FRAMEWIN_Callback+0x2c>
 80064de:	f8d3 a000 	ldr.w	sl, [r3]
 80064e2:	e000      	b.n	80064e6 <FRAMEWIN_Callback+0x2e>
 80064e4:	469a      	mov	sl, r3
 80064e6:	a801      	add	r0, sp, #4
 80064e8:	f007 fb36 	bl	800db58 <GUI_ALLOC_UnlockH>
 80064ec:	b13f      	cbz	r7, 80064fe <FRAMEWIN_Callback+0x46>
 80064ee:	687b      	ldr	r3, [r7, #4]
 80064f0:	4628      	mov	r0, r5
 80064f2:	4798      	blx	r3
 80064f4:	2800      	cmp	r0, #0
 80064f6:	f040 8118 	bne.w	800672a <FRAMEWIN_Callback+0x272>
 80064fa:	683f      	ldr	r7, [r7, #0]
 80064fc:	e7f6      	b.n	80064ec <FRAMEWIN_Callback+0x34>
 80064fe:	6828      	ldr	r0, [r5, #0]
 8006500:	2817      	cmp	r0, #23
 8006502:	f000 808d 	beq.w	8006620 <FRAMEWIN_Callback+0x168>
 8006506:	dc18      	bgt.n	800653a <FRAMEWIN_Callback+0x82>
 8006508:	280f      	cmp	r0, #15
 800650a:	d044      	beq.n	8006596 <FRAMEWIN_Callback+0xde>
 800650c:	dc06      	bgt.n	800651c <FRAMEWIN_Callback+0x64>
 800650e:	280b      	cmp	r0, #11
 8006510:	f000 80f7 	beq.w	8006702 <FRAMEWIN_Callback+0x24a>
 8006514:	280d      	cmp	r0, #13
 8006516:	f040 8100 	bne.w	800671a <FRAMEWIN_Callback+0x262>
 800651a:	e0c2      	b.n	80066a2 <FRAMEWIN_Callback+0x1ea>
 800651c:	2811      	cmp	r0, #17
 800651e:	d01c      	beq.n	800655a <FRAMEWIN_Callback+0xa2>
 8006520:	2814      	cmp	r0, #20
 8006522:	f040 80fa 	bne.w	800671a <FRAMEWIN_Callback+0x262>
 8006526:	4620      	mov	r0, r4
 8006528:	a907      	add	r1, sp, #28
 800652a:	f7ff fe6e 	bl	800620a <FRAMEWIN__CalcPositions>
 800652e:	ab08      	add	r3, sp, #32
 8006530:	cb03      	ldmia	r3!, {r0, r1}
 8006532:	68ea      	ldr	r2, [r5, #12]
 8006534:	6010      	str	r0, [r2, #0]
 8006536:	6051      	str	r1, [r2, #4]
 8006538:	e0f7      	b.n	800672a <FRAMEWIN_Callback+0x272>
 800653a:	2826      	cmp	r0, #38	; 0x26
 800653c:	d073      	beq.n	8006626 <FRAMEWIN_Callback+0x16e>
 800653e:	dc05      	bgt.n	800654c <FRAMEWIN_Callback+0x94>
 8006540:	281e      	cmp	r0, #30
 8006542:	d07d      	beq.n	8006640 <FRAMEWIN_Callback+0x188>
 8006544:	2820      	cmp	r0, #32
 8006546:	f040 80e8 	bne.w	800671a <FRAMEWIN_Callback+0x262>
 800654a:	e0ba      	b.n	80066c2 <FRAMEWIN_Callback+0x20a>
 800654c:	282a      	cmp	r0, #42	; 0x2a
 800654e:	d014      	beq.n	800657a <FRAMEWIN_Callback+0xc2>
 8006550:	f5b0 7f10 	cmp.w	r0, #576	; 0x240
 8006554:	f040 80e1 	bne.w	800671a <FRAMEWIN_Callback+0x262>
 8006558:	e024      	b.n	80065a4 <FRAMEWIN_Callback+0xec>
 800655a:	4620      	mov	r0, r4
 800655c:	68ee      	ldr	r6, [r5, #12]
 800655e:	f007 faed 	bl	800db3c <GUI_ALLOC_LockH>
 8006562:	9002      	str	r0, [sp, #8]
 8006564:	8931      	ldrh	r1, [r6, #8]
 8006566:	2901      	cmp	r1, #1
 8006568:	d105      	bne.n	8006576 <FRAMEWIN_Callback+0xbe>
 800656a:	f8b0 207c 	ldrh.w	r2, [r0, #124]	; 0x7c
 800656e:	f442 7380 	orr.w	r3, r2, #256	; 0x100
 8006572:	f8a0 307c 	strh.w	r3, [r0, #124]	; 0x7c
 8006576:	a802      	add	r0, sp, #8
 8006578:	e0cd      	b.n	8006716 <FRAMEWIN_Callback+0x25e>
 800657a:	4620      	mov	r0, r4
 800657c:	f007 fade 	bl	800db3c <GUI_ALLOC_LockH>
 8006580:	68eb      	ldr	r3, [r5, #12]
 8006582:	9001      	str	r0, [sp, #4]
 8006584:	b113      	cbz	r3, 800658c <FRAMEWIN_Callback+0xd4>
 8006586:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
 800658a:	e002      	b.n	8006592 <FRAMEWIN_Callback+0xda>
 800658c:	f8d0 0084 	ldr.w	r0, [r0, #132]	; 0x84
 8006590:	60e8      	str	r0, [r5, #12]
 8006592:	a801      	add	r0, sp, #4
 8006594:	e041      	b.n	800661a <FRAMEWIN_Callback+0x162>
 8006596:	f1ba 0f00 	cmp.w	sl, #0
 800659a:	f000 80be 	beq.w	800671a <FRAMEWIN_Callback+0x262>
 800659e:	4620      	mov	r0, r4
 80065a0:	47d0      	blx	sl
 80065a2:	e0ba      	b.n	800671a <FRAMEWIN_Callback+0x262>
 80065a4:	4620      	mov	r0, r4
 80065a6:	f8d5 800c 	ldr.w	r8, [r5, #12]
 80065aa:	f007 fac7 	bl	800db3c <GUI_ALLOC_LockH>
 80065ae:	ae0c      	add	r6, sp, #48	; 0x30
 80065b0:	f8b0 707c 	ldrh.w	r7, [r0, #124]	; 0x7c
 80065b4:	f846 0d28 	str.w	r0, [r6, #-40]!
 80065b8:	4630      	mov	r0, r6
 80065ba:	f007 facd 	bl	800db58 <GUI_ALLOC_UnlockH>
 80065be:	68e8      	ldr	r0, [r5, #12]
 80065c0:	2800      	cmp	r0, #0
 80065c2:	f000 80b2 	beq.w	800672a <FRAMEWIN_Callback+0x272>
 80065c6:	f898 1008 	ldrb.w	r1, [r8, #8]
 80065ca:	b1d9      	cbz	r1, 8006604 <FRAMEWIN_Callback+0x14c>
 80065cc:	f007 0008 	and.w	r0, r7, #8
 80065d0:	b281      	uxth	r1, r0
 80065d2:	b911      	cbnz	r1, 80065da <FRAMEWIN_Callback+0x122>
 80065d4:	4620      	mov	r0, r4
 80065d6:	f000 fed9 	bl	800738c <WM_SetFocus>
 80065da:	4620      	mov	r0, r4
 80065dc:	f001 fa44 	bl	8007a68 <WM_BringToTop>
 80065e0:	f407 7288 	and.w	r2, r7, #272	; 0x110
 80065e4:	f5b2 7f88 	cmp.w	r2, #272	; 0x110
 80065e8:	f040 809f 	bne.w	800672a <FRAMEWIN_Callback+0x272>
 80065ec:	f007 0780 	and.w	r7, r7, #128	; 0x80
 80065f0:	b2bb      	uxth	r3, r7
 80065f2:	2b00      	cmp	r3, #0
 80065f4:	f040 8099 	bne.w	800672a <FRAMEWIN_Callback+0x272>
 80065f8:	4620      	mov	r0, r4
 80065fa:	4641      	mov	r1, r8
 80065fc:	2205      	movs	r2, #5
 80065fe:	f000 ff31 	bl	8007464 <WM_SetCaptureMove>
 8006602:	e092      	b.n	800672a <FRAMEWIN_Callback+0x272>
 8006604:	4620      	mov	r0, r4
 8006606:	f007 fa99 	bl	800db3c <GUI_ALLOC_LockH>
 800660a:	f8b0 207c 	ldrh.w	r2, [r0, #124]	; 0x7c
 800660e:	9002      	str	r0, [sp, #8]
 8006610:	f422 7380 	bic.w	r3, r2, #256	; 0x100
 8006614:	f8a0 307c 	strh.w	r3, [r0, #124]	; 0x7c
 8006618:	4630      	mov	r0, r6
 800661a:	f007 fa9d 	bl	800db58 <GUI_ALLOC_UnlockH>
 800661e:	e084      	b.n	800672a <FRAMEWIN_Callback+0x272>
 8006620:	f8c5 800c 	str.w	r8, [r5, #12]
 8006624:	e081      	b.n	800672a <FRAMEWIN_Callback+0x272>
 8006626:	68e9      	ldr	r1, [r5, #12]
 8006628:	2902      	cmp	r1, #2
 800662a:	d17e      	bne.n	800672a <FRAMEWIN_Callback+0x272>
 800662c:	9106      	str	r1, [sp, #24]
 800662e:	a90c      	add	r1, sp, #48	; 0x30
 8006630:	2227      	movs	r2, #39	; 0x27
 8006632:	f841 2d24 	str.w	r2, [r1, #-36]!
 8006636:	68a8      	ldr	r0, [r5, #8]
 8006638:	9405      	str	r4, [sp, #20]
 800663a:	f000 fd5b 	bl	80070f4 <WM__SendMessage>
 800663e:	e074      	b.n	800672a <FRAMEWIN_Callback+0x272>
 8006640:	f8d5 900c 	ldr.w	r9, [r5, #12]
 8006644:	f1b9 0f01 	cmp.w	r9, #1
 8006648:	d126      	bne.n	8006698 <FRAMEWIN_Callback+0x1e0>
 800664a:	4630      	mov	r0, r6
 800664c:	f001 f8e8 	bl	8007820 <WM_IsWindow>
 8006650:	b158      	cbz	r0, 800666a <FRAMEWIN_Callback+0x1b2>
 8006652:	4630      	mov	r0, r6
 8006654:	f000 fe9a 	bl	800738c <WM_SetFocus>
 8006658:	4630      	mov	r0, r6
 800665a:	f001 f907 	bl	800786c <WM_HasFocus>
 800665e:	b198      	cbz	r0, 8006688 <FRAMEWIN_Callback+0x1d0>
 8006660:	4630      	mov	r0, r6
 8006662:	4649      	mov	r1, r9
 8006664:	f007 fe79 	bl	800e35a <WIDGET_OrState>
 8006668:	e00e      	b.n	8006688 <FRAMEWIN_Callback+0x1d0>
 800666a:	4640      	mov	r0, r8
 800666c:	f000 fe5c 	bl	8007328 <WM_SetFocusOnNextChild>
 8006670:	4606      	mov	r6, r0
 8006672:	4620      	mov	r0, r4
 8006674:	f007 fa62 	bl	800db3c <GUI_ALLOC_LockH>
 8006678:	ab0c      	add	r3, sp, #48	; 0x30
 800667a:	f8c0 6080 	str.w	r6, [r0, #128]	; 0x80
 800667e:	f843 0d2c 	str.w	r0, [r3, #-44]!
 8006682:	4618      	mov	r0, r3
 8006684:	f007 fa68 	bl	800db58 <GUI_ALLOC_UnlockH>
 8006688:	4620      	mov	r0, r4
 800668a:	2101      	movs	r1, #1
 800668c:	f7ff ff10 	bl	80064b0 <FRAMEWIN_SetActive>
 8006690:	2e00      	cmp	r6, #0
 8006692:	d14a      	bne.n	800672a <FRAMEWIN_Callback+0x272>
 8006694:	60ee      	str	r6, [r5, #12]
 8006696:	e048      	b.n	800672a <FRAMEWIN_Callback+0x272>
 8006698:	4620      	mov	r0, r4
 800669a:	4639      	mov	r1, r7
 800669c:	f7ff ff08 	bl	80064b0 <FRAMEWIN_SetActive>
 80066a0:	e043      	b.n	800672a <FRAMEWIN_Callback+0x272>
 80066a2:	f009 0908 	and.w	r9, r9, #8
 80066a6:	fa1f f189 	uxth.w	r1, r9
 80066aa:	2900      	cmp	r1, #0
 80066ac:	d135      	bne.n	800671a <FRAMEWIN_Callback+0x262>
 80066ae:	68ea      	ldr	r2, [r5, #12]
 80066b0:	68d3      	ldr	r3, [r2, #12]
 80066b2:	2b00      	cmp	r3, #0
 80066b4:	d031      	beq.n	800671a <FRAMEWIN_Callback+0x262>
 80066b6:	7a18      	ldrb	r0, [r3, #8]
 80066b8:	b378      	cbz	r0, 800671a <FRAMEWIN_Callback+0x262>
 80066ba:	4620      	mov	r0, r4
 80066bc:	f000 fe66 	bl	800738c <WM_SetFocus>
 80066c0:	e02b      	b.n	800671a <FRAMEWIN_Callback+0x262>
 80066c2:	68ee      	ldr	r6, [r5, #12]
 80066c4:	b34e      	cbz	r6, 800671a <FRAMEWIN_Callback+0x262>
 80066c6:	6870      	ldr	r0, [r6, #4]
 80066c8:	4621      	mov	r1, r4
 80066ca:	f000 fd4b 	bl	8007164 <WM__IsAncestorOrSelf>
 80066ce:	b120      	cbz	r0, 80066da <FRAMEWIN_Callback+0x222>
 80066d0:	4620      	mov	r0, r4
 80066d2:	2101      	movs	r1, #1
 80066d4:	f7ff fc8e 	bl	8005ff4 <_SetActive>
 80066d8:	e01f      	b.n	800671a <FRAMEWIN_Callback+0x262>
 80066da:	4620      	mov	r0, r4
 80066dc:	4639      	mov	r1, r7
 80066de:	f7ff fc89 	bl	8005ff4 <_SetActive>
 80066e2:	6830      	ldr	r0, [r6, #0]
 80066e4:	4621      	mov	r1, r4
 80066e6:	f000 fd2c 	bl	8007142 <WM__IsAncestor>
 80066ea:	b1b0      	cbz	r0, 800671a <FRAMEWIN_Callback+0x262>
 80066ec:	4620      	mov	r0, r4
 80066ee:	f007 fa25 	bl	800db3c <GUI_ALLOC_LockH>
 80066f2:	a90c      	add	r1, sp, #48	; 0x30
 80066f4:	6832      	ldr	r2, [r6, #0]
 80066f6:	f841 0d28 	str.w	r0, [r1, #-40]!
 80066fa:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 80066fe:	4608      	mov	r0, r1
 8006700:	e009      	b.n	8006716 <FRAMEWIN_Callback+0x25e>
 8006702:	4620      	mov	r0, r4
 8006704:	f007 fa1a 	bl	800db3c <GUI_ALLOC_LockH>
 8006708:	ae0c      	add	r6, sp, #48	; 0x30
 800670a:	f846 0d2c 	str.w	r0, [r6, #-44]!
 800670e:	3070      	adds	r0, #112	; 0x70
 8006710:	f007 fc66 	bl	800dfe0 <GUI_ALLOC_FreePtr>
 8006714:	4630      	mov	r0, r6
 8006716:	f007 fa1f 	bl	800db58 <GUI_ALLOC_UnlockH>
 800671a:	4620      	mov	r0, r4
 800671c:	4629      	mov	r1, r5
 800671e:	f007 fe4d 	bl	800e3bc <WIDGET_HandleActive>
 8006722:	b110      	cbz	r0, 800672a <FRAMEWIN_Callback+0x272>
 8006724:	4628      	mov	r0, r5
 8006726:	f002 fa99 	bl	8008c5c <WM_DefaultProc>
 800672a:	b00c      	add	sp, #48	; 0x30
 800672c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08006730 <DIALOG_GetBkColor>:
 8006730:	4b01      	ldr	r3, [pc, #4]	; (8006738 <DIALOG_GetBkColor+0x8>)
 8006732:	6818      	ldr	r0, [r3, #0]
 8006734:	4770      	bx	lr
 8006736:	bf00      	nop
 8006738:	20000150 	.word	0x20000150

0800673c <GUI_CreateDialogBox>:
 800673c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006740:	4605      	mov	r5, r0
 8006742:	4688      	mov	r8, r1
 8006744:	4614      	mov	r4, r2
 8006746:	461e      	mov	r6, r3
 8006748:	b913      	cbnz	r3, 8006750 <GUI_CreateDialogBox+0x14>
 800674a:	f001 f941 	bl	80079d0 <WM_GetDesktopWindow>
 800674e:	4606      	mov	r6, r0
 8006750:	9400      	str	r4, [sp, #0]
 8006752:	4628      	mov	r0, r5
 8006754:	682c      	ldr	r4, [r5, #0]
 8006756:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006758:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800675a:	4631      	mov	r1, r6
 800675c:	47a0      	blx	r4
 800675e:	4604      	mov	r4, r0
 8006760:	2800      	cmp	r0, #0
 8006762:	d037      	beq.n	80067d4 <GUI_CreateDialogBox+0x98>
 8006764:	f001 f940 	bl	80079e8 <WM_GetClientWindow>
 8006768:	8a69      	ldrh	r1, [r5, #18]
 800676a:	4607      	mov	r7, r0
 800676c:	4620      	mov	r0, r4
 800676e:	f007 fdf4 	bl	800e35a <WIDGET_OrState>
 8006772:	4620      	mov	r0, r4
 8006774:	f000 fd2f 	bl	80071d6 <WM_ShowWindow>
 8006778:	4638      	mov	r0, r7
 800677a:	f108 38ff 	add.w	r8, r8, #4294967295
 800677e:	f000 fd2a 	bl	80071d6 <WM_ShowWindow>
 8006782:	f1b8 0f00 	cmp.w	r8, #0
 8006786:	dd0f      	ble.n	80067a8 <GUI_CreateDialogBox+0x6c>
 8006788:	f855 cf1c 	ldr.w	ip, [r5, #28]!
 800678c:	2200      	movs	r2, #0
 800678e:	9200      	str	r2, [sp, #0]
 8006790:	4628      	mov	r0, r5
 8006792:	4639      	mov	r1, r7
 8006794:	4613      	mov	r3, r2
 8006796:	47e0      	blx	ip
 8006798:	4681      	mov	r9, r0
 800679a:	2800      	cmp	r0, #0
 800679c:	d1ed      	bne.n	800677a <GUI_CreateDialogBox+0x3e>
 800679e:	4620      	mov	r0, r4
 80067a0:	f001 fe74 	bl	800848c <WM_DeleteWindow>
 80067a4:	464c      	mov	r4, r9
 80067a6:	e015      	b.n	80067d4 <GUI_CreateDialogBox+0x98>
 80067a8:	211d      	movs	r1, #29
 80067aa:	4638      	mov	r0, r7
 80067ac:	f000 fef3 	bl	8007596 <WM_SendMessageNoPara>
 80067b0:	1c73      	adds	r3, r6, #1
 80067b2:	d00f      	beq.n	80067d4 <GUI_CreateDialogBox+0x98>
 80067b4:	f001 f8d8 	bl	8007968 <WM_GetFocussedWindow>
 80067b8:	b150      	cbz	r0, 80067d0 <GUI_CreateDialogBox+0x94>
 80067ba:	f007 f9b5 	bl	800db28 <GUI_ALLOC_h2p>
 80067be:	6980      	ldr	r0, [r0, #24]
 80067c0:	42a0      	cmp	r0, r4
 80067c2:	d007      	beq.n	80067d4 <GUI_CreateDialogBox+0x98>
 80067c4:	2800      	cmp	r0, #0
 80067c6:	d1f8      	bne.n	80067ba <GUI_CreateDialogBox+0x7e>
 80067c8:	4620      	mov	r0, r4
 80067ca:	f000 fdad 	bl	8007328 <WM_SetFocusOnNextChild>
 80067ce:	e001      	b.n	80067d4 <GUI_CreateDialogBox+0x98>
 80067d0:	42a6      	cmp	r6, r4
 80067d2:	d1f9      	bne.n	80067c8 <GUI_CreateDialogBox+0x8c>
 80067d4:	4620      	mov	r0, r4
 80067d6:	e8bd 83fe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}

080067da <CHECKBOX_SetText>:
 80067da:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80067dc:	460e      	mov	r6, r1
 80067de:	4604      	mov	r4, r0
 80067e0:	b1e0      	cbz	r0, 800681c <CHECKBOX_SetText+0x42>
 80067e2:	b1d9      	cbz	r1, 800681c <CHECKBOX_SetText+0x42>
 80067e4:	f007 f9aa 	bl	800db3c <GUI_ALLOC_LockH>
 80067e8:	6f85      	ldr	r5, [r0, #120]	; 0x78
 80067ea:	9000      	str	r0, [sp, #0]
 80067ec:	4668      	mov	r0, sp
 80067ee:	9501      	str	r5, [sp, #4]
 80067f0:	f007 f9b2 	bl	800db58 <GUI_ALLOC_UnlockH>
 80067f4:	a801      	add	r0, sp, #4
 80067f6:	4631      	mov	r1, r6
 80067f8:	f005 f878 	bl	800b8ec <GUI__SetText>
 80067fc:	b170      	cbz	r0, 800681c <CHECKBOX_SetText+0x42>
 80067fe:	9b01      	ldr	r3, [sp, #4]
 8006800:	42ab      	cmp	r3, r5
 8006802:	d008      	beq.n	8006816 <CHECKBOX_SetText+0x3c>
 8006804:	4620      	mov	r0, r4
 8006806:	f007 f999 	bl	800db3c <GUI_ALLOC_LockH>
 800680a:	9901      	ldr	r1, [sp, #4]
 800680c:	9000      	str	r0, [sp, #0]
 800680e:	6781      	str	r1, [r0, #120]	; 0x78
 8006810:	4668      	mov	r0, sp
 8006812:	f007 f9a1 	bl	800db58 <GUI_ALLOC_UnlockH>
 8006816:	4620      	mov	r0, r4
 8006818:	f001 fdf6 	bl	8008408 <WM_InvalidateWindow>
 800681c:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

0800681e <CHECKBOX_SetState>:
 800681e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006820:	460d      	mov	r5, r1
 8006822:	4604      	mov	r4, r0
 8006824:	b1b8      	cbz	r0, 8006856 <CHECKBOX_SetState+0x38>
 8006826:	f007 f989 	bl	800db3c <GUI_ALLOC_LockH>
 800682a:	4602      	mov	r2, r0
 800682c:	a802      	add	r0, sp, #8
 800682e:	f892 1074 	ldrb.w	r1, [r2, #116]	; 0x74
 8006832:	f840 2d04 	str.w	r2, [r0, #-4]!
 8006836:	428d      	cmp	r5, r1
 8006838:	d20b      	bcs.n	8006852 <CHECKBOX_SetState+0x34>
 800683a:	f882 5075 	strb.w	r5, [r2, #117]	; 0x75
 800683e:	f007 f98b 	bl	800db58 <GUI_ALLOC_UnlockH>
 8006842:	4620      	mov	r0, r4
 8006844:	f001 fde0 	bl	8008408 <WM_InvalidateWindow>
 8006848:	4620      	mov	r0, r4
 800684a:	2105      	movs	r1, #5
 800684c:	f000 ff1f 	bl	800768e <WM_NotifyParent>
 8006850:	e001      	b.n	8006856 <CHECKBOX_SetState+0x38>
 8006852:	f007 f981 	bl	800db58 <GUI_ALLOC_UnlockH>
 8006856:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08006858 <CHECKBOX_SetFont>:
 8006858:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800685a:	460c      	mov	r4, r1
 800685c:	4605      	mov	r5, r0
 800685e:	b160      	cbz	r0, 800687a <CHECKBOX_SetFont+0x22>
 8006860:	f007 f96c 	bl	800db3c <GUI_ALLOC_LockH>
 8006864:	6b42      	ldr	r2, [r0, #52]	; 0x34
 8006866:	9001      	str	r0, [sp, #4]
 8006868:	42a2      	cmp	r2, r4
 800686a:	d003      	beq.n	8006874 <CHECKBOX_SetFont+0x1c>
 800686c:	6344      	str	r4, [r0, #52]	; 0x34
 800686e:	4628      	mov	r0, r5
 8006870:	f001 fdca 	bl	8008408 <WM_InvalidateWindow>
 8006874:	a801      	add	r0, sp, #4
 8006876:	f007 f96f 	bl	800db58 <GUI_ALLOC_UnlockH>
 800687a:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800687c <CHECKBOX_CreateIndirect>:
 800687c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800687e:	b087      	sub	sp, #28
 8006880:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 8006884:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8006888:	f9b0 5010 	ldrsh.w	r5, [r0, #16]
 800688c:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
 8006890:	9100      	str	r1, [sp, #0]
 8006892:	2100      	movs	r1, #0
 8006894:	9101      	str	r1, [sp, #4]
 8006896:	8a44      	ldrh	r4, [r0, #18]
 8006898:	9402      	str	r4, [sp, #8]
 800689a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800689e:	9103      	str	r1, [sp, #12]
 80068a0:	6984      	ldr	r4, [r0, #24]
 80068a2:	18f9      	adds	r1, r7, r3
 80068a4:	eb0e 0002 	add.w	r0, lr, r2
 80068a8:	9404      	str	r4, [sp, #16]
 80068aa:	4632      	mov	r2, r6
 80068ac:	462b      	mov	r3, r5
 80068ae:	f000 f8ab 	bl	8006a08 <CHECKBOX_CreateUser>
 80068b2:	b007      	add	sp, #28
 80068b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080068b8 <CHECKBOX__GetButtonSize>:
 80068b8:	b500      	push	{lr}
 80068ba:	b08b      	sub	sp, #44	; 0x2c
 80068bc:	2100      	movs	r1, #0
 80068be:	2224      	movs	r2, #36	; 0x24
 80068c0:	a801      	add	r0, sp, #4
 80068c2:	f00c f9e7 	bl	8012c94 <memset>
 80068c6:	4805      	ldr	r0, [pc, #20]	; (80068dc <CHECKBOX__GetButtonSize+0x24>)
 80068c8:	6801      	ldr	r1, [r0, #0]
 80068ca:	688a      	ldr	r2, [r1, #8]
 80068cc:	2319      	movs	r3, #25
 80068ce:	9302      	str	r3, [sp, #8]
 80068d0:	a801      	add	r0, sp, #4
 80068d2:	6853      	ldr	r3, [r2, #4]
 80068d4:	4798      	blx	r3
 80068d6:	b00b      	add	sp, #44	; 0x2c
 80068d8:	bd00      	pop	{pc}
 80068da:	bf00      	nop
 80068dc:	20000190 	.word	0x20000190

080068e0 <CHECKBOX_Callback>:
 80068e0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80068e4:	6844      	ldr	r4, [r0, #4]
 80068e6:	4605      	mov	r5, r0
 80068e8:	4629      	mov	r1, r5
 80068ea:	4620      	mov	r0, r4
 80068ec:	f007 fd66 	bl	800e3bc <WIDGET_HandleActive>
 80068f0:	2800      	cmp	r0, #0
 80068f2:	f000 8086 	beq.w	8006a02 <CHECKBOX_Callback+0x122>
 80068f6:	682b      	ldr	r3, [r5, #0]
 80068f8:	2b0e      	cmp	r3, #14
 80068fa:	d015      	beq.n	8006928 <CHECKBOX_Callback+0x48>
 80068fc:	dc0e      	bgt.n	800691c <CHECKBOX_Callback+0x3c>
 80068fe:	2b0b      	cmp	r3, #11
 8006900:	d17c      	bne.n	80069fc <CHECKBOX_Callback+0x11c>
 8006902:	4620      	mov	r0, r4
 8006904:	f007 f91a 	bl	800db3c <GUI_ALLOC_LockH>
 8006908:	ac02      	add	r4, sp, #8
 800690a:	f844 0d04 	str.w	r0, [r4, #-4]!
 800690e:	3078      	adds	r0, #120	; 0x78
 8006910:	f007 fb66 	bl	800dfe0 <GUI_ALLOC_FreePtr>
 8006914:	4620      	mov	r0, r4
 8006916:	f007 f91f 	bl	800db58 <GUI_ALLOC_UnlockH>
 800691a:	e06f      	b.n	80069fc <CHECKBOX_Callback+0x11c>
 800691c:	2b0f      	cmp	r3, #15
 800691e:	d025      	beq.n	800696c <CHECKBOX_Callback+0x8c>
 8006920:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8006924:	d16a      	bne.n	80069fc <CHECKBOX_Callback+0x11c>
 8006926:	e031      	b.n	800698c <CHECKBOX_Callback+0xac>
 8006928:	4620      	mov	r0, r4
 800692a:	f007 f907 	bl	800db3c <GUI_ALLOC_LockH>
 800692e:	a902      	add	r1, sp, #8
 8006930:	f841 0d04 	str.w	r0, [r1, #-4]!
 8006934:	f890 6074 	ldrb.w	r6, [r0, #116]	; 0x74
 8006938:	f890 7075 	ldrb.w	r7, [r0, #117]	; 0x75
 800693c:	4608      	mov	r0, r1
 800693e:	f007 f90b 	bl	800db58 <GUI_ALLOC_UnlockH>
 8006942:	4620      	mov	r0, r4
 8006944:	f000 fbf4 	bl	8007130 <WM__IsEnabled>
 8006948:	2800      	cmp	r0, #0
 800694a:	d057      	beq.n	80069fc <CHECKBOX_Callback+0x11c>
 800694c:	68e8      	ldr	r0, [r5, #12]
 800694e:	6842      	ldr	r2, [r0, #4]
 8006950:	2a00      	cmp	r2, #0
 8006952:	dd53      	ble.n	80069fc <CHECKBOX_Callback+0x11c>
 8006954:	6803      	ldr	r3, [r0, #0]
 8006956:	2b20      	cmp	r3, #32
 8006958:	d150      	bne.n	80069fc <CHECKBOX_Callback+0x11c>
 800695a:	1c7a      	adds	r2, r7, #1
 800695c:	fb92 f1f6 	sdiv	r1, r2, r6
 8006960:	4620      	mov	r0, r4
 8006962:	fb06 2111 	mls	r1, r6, r1, r2
 8006966:	f7ff ff5a 	bl	800681e <CHECKBOX_SetState>
 800696a:	e047      	b.n	80069fc <CHECKBOX_Callback+0x11c>
 800696c:	4620      	mov	r0, r4
 800696e:	f007 f8e5 	bl	800db3c <GUI_ALLOC_LockH>
 8006972:	ab02      	add	r3, sp, #8
 8006974:	f843 0d04 	str.w	r0, [r3, #-4]!
 8006978:	6f05      	ldr	r5, [r0, #112]	; 0x70
 800697a:	682d      	ldr	r5, [r5, #0]
 800697c:	4618      	mov	r0, r3
 800697e:	f007 f8eb 	bl	800db58 <GUI_ALLOC_UnlockH>
 8006982:	2d00      	cmp	r5, #0
 8006984:	d03d      	beq.n	8006a02 <CHECKBOX_Callback+0x122>
 8006986:	4620      	mov	r0, r4
 8006988:	47a8      	blx	r5
 800698a:	e03a      	b.n	8006a02 <CHECKBOX_Callback+0x122>
 800698c:	4620      	mov	r0, r4
 800698e:	f007 f8d5 	bl	800db3c <GUI_ALLOC_LockH>
 8006992:	4601      	mov	r1, r0
 8006994:	a802      	add	r0, sp, #8
 8006996:	f8b1 8030 	ldrh.w	r8, [r1, #48]	; 0x30
 800699a:	f840 1d04 	str.w	r1, [r0, #-4]!
 800699e:	f891 7074 	ldrb.w	r7, [r1, #116]	; 0x74
 80069a2:	f891 9075 	ldrb.w	r9, [r1, #117]	; 0x75
 80069a6:	f007 f8d7 	bl	800db58 <GUI_ALLOC_UnlockH>
 80069aa:	68ee      	ldr	r6, [r5, #12]
 80069ac:	b1b6      	cbz	r6, 80069dc <CHECKBOX_Callback+0xfc>
 80069ae:	4620      	mov	r0, r4
 80069b0:	f000 ff6a 	bl	8007888 <WM_HasCaptured>
 80069b4:	4682      	mov	sl, r0
 80069b6:	b998      	cbnz	r0, 80069e0 <CHECKBOX_Callback+0x100>
 80069b8:	7a30      	ldrb	r0, [r6, #8]
 80069ba:	b1a0      	cbz	r0, 80069e6 <CHECKBOX_Callback+0x106>
 80069bc:	4620      	mov	r0, r4
 80069be:	2101      	movs	r1, #1
 80069c0:	f109 0901 	add.w	r9, r9, #1
 80069c4:	f000 fdb6 	bl	8007534 <WM_SetCapture>
 80069c8:	fb99 f2f7 	sdiv	r2, r9, r7
 80069cc:	fb07 9112 	mls	r1, r7, r2, r9
 80069d0:	4620      	mov	r0, r4
 80069d2:	f7ff ff24 	bl	800681e <CHECKBOX_SetState>
 80069d6:	4656      	mov	r6, sl
 80069d8:	2101      	movs	r1, #1
 80069da:	e006      	b.n	80069ea <CHECKBOX_Callback+0x10a>
 80069dc:	2103      	movs	r1, #3
 80069de:	e004      	b.n	80069ea <CHECKBOX_Callback+0x10a>
 80069e0:	2600      	movs	r6, #0
 80069e2:	4631      	mov	r1, r6
 80069e4:	e001      	b.n	80069ea <CHECKBOX_Callback+0x10a>
 80069e6:	2601      	movs	r6, #1
 80069e8:	2102      	movs	r1, #2
 80069ea:	4620      	mov	r0, r4
 80069ec:	f000 fe4f 	bl	800768e <WM_NotifyParent>
 80069f0:	2e01      	cmp	r6, #1
 80069f2:	d103      	bne.n	80069fc <CHECKBOX_Callback+0x11c>
 80069f4:	fa0f f088 	sxth.w	r0, r8
 80069f8:	f005 fe0a 	bl	800c610 <GUI_StoreKey>
 80069fc:	4628      	mov	r0, r5
 80069fe:	f002 f92d 	bl	8008c5c <WM_DefaultProc>
 8006a02:	e8bd 87fc 	ldmia.w	sp!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
	...

08006a08 <CHECKBOX_CreateUser>:
 8006a08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006a0c:	b086      	sub	sp, #24
 8006a0e:	4680      	mov	r8, r0
 8006a10:	460f      	mov	r7, r1
 8006a12:	461c      	mov	r4, r3
 8006a14:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8006a16:	4616      	mov	r6, r2
 8006a18:	b92a      	cbnz	r2, 8006a26 <CHECKBOX_CreateUser+0x1e>
 8006a1a:	4b27      	ldr	r3, [pc, #156]	; (8006ab8 <CHECKBOX_CreateUser+0xb0>)
 8006a1c:	6818      	ldr	r0, [r3, #0]
 8006a1e:	6881      	ldr	r1, [r0, #8]
 8006a20:	680a      	ldr	r2, [r1, #0]
 8006a22:	4790      	blx	r2
 8006a24:	4606      	mov	r6, r0
 8006a26:	b92c      	cbnz	r4, 8006a34 <CHECKBOX_CreateUser+0x2c>
 8006a28:	4c23      	ldr	r4, [pc, #140]	; (8006ab8 <CHECKBOX_CreateUser+0xb0>)
 8006a2a:	6823      	ldr	r3, [r4, #0]
 8006a2c:	6898      	ldr	r0, [r3, #8]
 8006a2e:	6801      	ldr	r1, [r0, #0]
 8006a30:	4788      	blx	r1
 8006a32:	4604      	mov	r4, r0
 8006a34:	4a21      	ldr	r2, [pc, #132]	; (8006abc <CHECKBOX_CreateUser+0xb4>)
 8006a36:	4922      	ldr	r1, [pc, #136]	; (8006ac0 <CHECKBOX_CreateUser+0xb8>)
 8006a38:	68d0      	ldr	r0, [r2, #12]
 8006a3a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8006a3c:	9102      	str	r1, [sp, #8]
 8006a3e:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8006a42:	4298      	cmp	r0, r3
 8006a44:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006a46:	bf08      	it	eq
 8006a48:	f045 0501 	orreq.w	r5, r5, #1
 8006a4c:	3254      	adds	r2, #84	; 0x54
 8006a4e:	e88d 0028 	stmia.w	sp, {r3, r5}
 8006a52:	9203      	str	r2, [sp, #12]
 8006a54:	4640      	mov	r0, r8
 8006a56:	4639      	mov	r1, r7
 8006a58:	4632      	mov	r2, r6
 8006a5a:	4623      	mov	r3, r4
 8006a5c:	f001 fd90 	bl	8008580 <WM_CreateWindowAsChild>
 8006a60:	4680      	mov	r8, r0
 8006a62:	b328      	cbz	r0, 8006ab0 <CHECKBOX_CreateUser+0xa8>
 8006a64:	f007 f86a 	bl	800db3c <GUI_ALLOC_LockH>
 8006a68:	4d14      	ldr	r5, [pc, #80]	; (8006abc <CHECKBOX_CreateUser+0xb4>)
 8006a6a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8006a6c:	9005      	str	r0, [sp, #20]
 8006a6e:	2210      	movs	r2, #16
 8006a70:	f007 fc9c 	bl	800e3ac <WIDGET__Init>
 8006a74:	af06      	add	r7, sp, #24
 8006a76:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006a78:	f857 6d04 	ldr.w	r6, [r7, #-4]!
 8006a7c:	f106 0434 	add.w	r4, r6, #52	; 0x34
 8006a80:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006a82:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006a84:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006a86:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006a88:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006a8a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006a8e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8006a92:	4c09      	ldr	r4, [pc, #36]	; (8006ab8 <CHECKBOX_CreateUser+0xb0>)
 8006a94:	6820      	ldr	r0, [r4, #0]
 8006a96:	2302      	movs	r3, #2
 8006a98:	210f      	movs	r1, #15
 8006a9a:	6730      	str	r0, [r6, #112]	; 0x70
 8006a9c:	f886 3074 	strb.w	r3, [r6, #116]	; 0x74
 8006aa0:	4638      	mov	r0, r7
 8006aa2:	67f1      	str	r1, [r6, #124]	; 0x7c
 8006aa4:	f007 f858 	bl	800db58 <GUI_ALLOC_UnlockH>
 8006aa8:	6822      	ldr	r2, [r4, #0]
 8006aaa:	4640      	mov	r0, r8
 8006aac:	6853      	ldr	r3, [r2, #4]
 8006aae:	4798      	blx	r3
 8006ab0:	4640      	mov	r0, r8
 8006ab2:	b006      	add	sp, #24
 8006ab4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006ab8:	20000190 	.word	0x20000190
 8006abc:	20000154 	.word	0x20000154
 8006ac0:	080068e1 	.word	0x080068e1

08006ac4 <BUTTON_DrawSkinFlex>:
 8006ac4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006ac6:	6883      	ldr	r3, [r0, #8]
 8006ac8:	4a8b      	ldr	r2, [pc, #556]	; (8006cf8 <BUTTON_DrawSkinFlex+0x234>)
 8006aca:	4604      	mov	r4, r0
 8006acc:	6840      	ldr	r0, [r0, #4]
 8006ace:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
 8006ad2:	2805      	cmp	r0, #5
 8006ad4:	b089      	sub	sp, #36	; 0x24
 8006ad6:	d00e      	beq.n	8006af6 <BUTTON_DrawSkinFlex+0x32>
 8006ad8:	dc06      	bgt.n	8006ae8 <BUTTON_DrawSkinFlex+0x24>
 8006ada:	2800      	cmp	r0, #0
 8006adc:	f040 8108 	bne.w	8006cf0 <BUTTON_DrawSkinFlex+0x22c>
 8006ae0:	6820      	ldr	r0, [r4, #0]
 8006ae2:	f000 fb97 	bl	8007214 <WM_SetHasTrans>
 8006ae6:	e103      	b.n	8006cf0 <BUTTON_DrawSkinFlex+0x22c>
 8006ae8:	2806      	cmp	r0, #6
 8006aea:	f000 808a 	beq.w	8006c02 <BUTTON_DrawSkinFlex+0x13e>
 8006aee:	2812      	cmp	r0, #18
 8006af0:	f040 80fe 	bne.w	8006cf0 <BUTTON_DrawSkinFlex+0x22c>
 8006af4:	e0ab      	b.n	8006c4e <BUTTON_DrawSkinFlex+0x18a>
 8006af6:	69ee      	ldr	r6, [r5, #28]
 8006af8:	2e00      	cmp	r6, #0
 8006afa:	d052      	beq.n	8006ba2 <BUTTON_DrawSkinFlex+0xde>
 8006afc:	9600      	str	r6, [sp, #0]
 8006afe:	682e      	ldr	r6, [r5, #0]
 8006b00:	9601      	str	r6, [sp, #4]
 8006b02:	6868      	ldr	r0, [r5, #4]
 8006b04:	9002      	str	r0, [sp, #8]
 8006b06:	68ab      	ldr	r3, [r5, #8]
 8006b08:	f104 0210 	add.w	r2, r4, #16
 8006b0c:	9303      	str	r3, [sp, #12]
 8006b0e:	ca0f      	ldmia	r2, {r0, r1, r2, r3}
 8006b10:	f005 f8ca 	bl	800bca8 <GUI__DrawTwinArc4>
 8006b14:	2600      	movs	r6, #0
 8006b16:	f855 0026 	ldr.w	r0, [r5, r6, lsl #2]
 8006b1a:	f005 fc49 	bl	800c3b0 <GUI_SetColor>
 8006b1e:	69ef      	ldr	r7, [r5, #28]
 8006b20:	69a3      	ldr	r3, [r4, #24]
 8006b22:	6960      	ldr	r0, [r4, #20]
 8006b24:	6921      	ldr	r1, [r4, #16]
 8006b26:	1bda      	subs	r2, r3, r7
 8006b28:	1830      	adds	r0, r6, r0
 8006b2a:	1879      	adds	r1, r7, r1
 8006b2c:	f005 fe8a 	bl	800c844 <GUI_DrawHLine>
 8006b30:	69ef      	ldr	r7, [r5, #28]
 8006b32:	69e0      	ldr	r0, [r4, #28]
 8006b34:	6921      	ldr	r1, [r4, #16]
 8006b36:	69a2      	ldr	r2, [r4, #24]
 8006b38:	1b80      	subs	r0, r0, r6
 8006b3a:	1879      	adds	r1, r7, r1
 8006b3c:	1bd2      	subs	r2, r2, r7
 8006b3e:	f005 fe81 	bl	800c844 <GUI_DrawHLine>
 8006b42:	69eb      	ldr	r3, [r5, #28]
 8006b44:	6927      	ldr	r7, [r4, #16]
 8006b46:	6961      	ldr	r1, [r4, #20]
 8006b48:	69e2      	ldr	r2, [r4, #28]
 8006b4a:	19f0      	adds	r0, r6, r7
 8006b4c:	1859      	adds	r1, r3, r1
 8006b4e:	1ad2      	subs	r2, r2, r3
 8006b50:	f005 fe36 	bl	800c7c0 <GUI_DrawVLine>
 8006b54:	69eb      	ldr	r3, [r5, #28]
 8006b56:	69a0      	ldr	r0, [r4, #24]
 8006b58:	6967      	ldr	r7, [r4, #20]
 8006b5a:	69e2      	ldr	r2, [r4, #28]
 8006b5c:	1b80      	subs	r0, r0, r6
 8006b5e:	19d9      	adds	r1, r3, r7
 8006b60:	1ad2      	subs	r2, r2, r3
 8006b62:	3601      	adds	r6, #1
 8006b64:	f005 fe2c 	bl	800c7c0 <GUI_DrawVLine>
 8006b68:	2e02      	cmp	r6, #2
 8006b6a:	d1d4      	bne.n	8006b16 <BUTTON_DrawSkinFlex+0x52>
 8006b6c:	68a8      	ldr	r0, [r5, #8]
 8006b6e:	f005 fc1f 	bl	800c3b0 <GUI_SetColor>
 8006b72:	69eb      	ldr	r3, [r5, #28]
 8006b74:	6920      	ldr	r0, [r4, #16]
 8006b76:	69e6      	ldr	r6, [r4, #28]
 8006b78:	6961      	ldr	r1, [r4, #20]
 8006b7a:	18c7      	adds	r7, r0, r3
 8006b7c:	1859      	adds	r1, r3, r1
 8006b7e:	1e7a      	subs	r2, r7, #1
 8006b80:	1af3      	subs	r3, r6, r3
 8006b82:	3002      	adds	r0, #2
 8006b84:	f005 fddc 	bl	800c740 <GUI_FillRect>
 8006b88:	69eb      	ldr	r3, [r5, #28]
 8006b8a:	69a2      	ldr	r2, [r4, #24]
 8006b8c:	6961      	ldr	r1, [r4, #20]
 8006b8e:	69e7      	ldr	r7, [r4, #28]
 8006b90:	1ad0      	subs	r0, r2, r3
 8006b92:	1859      	adds	r1, r3, r1
 8006b94:	3001      	adds	r0, #1
 8006b96:	3a02      	subs	r2, #2
 8006b98:	1afb      	subs	r3, r7, r3
 8006b9a:	f005 fdd1 	bl	800c740 <GUI_FillRect>
 8006b9e:	69ee      	ldr	r6, [r5, #28]
 8006ba0:	e010      	b.n	8006bc4 <BUTTON_DrawSkinFlex+0x100>
 8006ba2:	f855 0026 	ldr.w	r0, [r5, r6, lsl #2]
 8006ba6:	f104 0710 	add.w	r7, r4, #16
 8006baa:	f005 fc01 	bl	800c3b0 <GUI_SetColor>
 8006bae:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8006bb2:	1830      	adds	r0, r6, r0
 8006bb4:	1871      	adds	r1, r6, r1
 8006bb6:	1b92      	subs	r2, r2, r6
 8006bb8:	1b9b      	subs	r3, r3, r6
 8006bba:	3601      	adds	r6, #1
 8006bbc:	f007 fa62 	bl	800e084 <GUI_DrawRect>
 8006bc0:	2e02      	cmp	r6, #2
 8006bc2:	d1ee      	bne.n	8006ba2 <BUTTON_DrawSkinFlex+0xde>
 8006bc4:	f104 0210 	add.w	r2, r4, #16
 8006bc8:	ca0f      	ldmia	r2, {r0, r1, r2, r3}
 8006bca:	68ef      	ldr	r7, [r5, #12]
 8006bcc:	9700      	str	r7, [sp, #0]
 8006bce:	692f      	ldr	r7, [r5, #16]
 8006bd0:	18cb      	adds	r3, r1, r3
 8006bd2:	1830      	adds	r0, r6, r0
 8006bd4:	3102      	adds	r1, #2
 8006bd6:	1b92      	subs	r2, r2, r6
 8006bd8:	105b      	asrs	r3, r3, #1
 8006bda:	9701      	str	r7, [sp, #4]
 8006bdc:	f005 ff42 	bl	800ca64 <GUI_DrawGradientV>
 8006be0:	69e3      	ldr	r3, [r4, #28]
 8006be2:	6961      	ldr	r1, [r4, #20]
 8006be4:	6920      	ldr	r0, [r4, #16]
 8006be6:	185a      	adds	r2, r3, r1
 8006be8:	1051      	asrs	r1, r2, #1
 8006bea:	69a2      	ldr	r2, [r4, #24]
 8006bec:	696c      	ldr	r4, [r5, #20]
 8006bee:	9400      	str	r4, [sp, #0]
 8006bf0:	69ac      	ldr	r4, [r5, #24]
 8006bf2:	1830      	adds	r0, r6, r0
 8006bf4:	9401      	str	r4, [sp, #4]
 8006bf6:	3101      	adds	r1, #1
 8006bf8:	1b92      	subs	r2, r2, r6
 8006bfa:	3b02      	subs	r3, #2
 8006bfc:	f005 ff32 	bl	800ca64 <GUI_DrawGradientV>
 8006c00:	e076      	b.n	8006cf0 <BUTTON_DrawSkinFlex+0x22c>
 8006c02:	6820      	ldr	r0, [r4, #0]
 8006c04:	f006 ff9a 	bl	800db3c <GUI_ALLOC_LockH>
 8006c08:	9004      	str	r0, [sp, #16]
 8006c0a:	6820      	ldr	r0, [r4, #0]
 8006c0c:	f000 fa90 	bl	8007130 <WM__IsEnabled>
 8006c10:	9d04      	ldr	r5, [sp, #16]
 8006c12:	b130      	cbz	r0, 8006c22 <BUTTON_DrawSkinFlex+0x15e>
 8006c14:	68a1      	ldr	r1, [r4, #8]
 8006c16:	b951      	cbnz	r1, 8006c2e <BUTTON_DrawSkinFlex+0x16a>
 8006c18:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8006c1a:	1c13      	adds	r3, r2, #0
 8006c1c:	bf18      	it	ne
 8006c1e:	2301      	movne	r3, #1
 8006c20:	e006      	b.n	8006c30 <BUTTON_DrawSkinFlex+0x16c>
 8006c22:	6f68      	ldr	r0, [r5, #116]	; 0x74
 8006c24:	2800      	cmp	r0, #0
 8006c26:	bf14      	ite	ne
 8006c28:	2302      	movne	r3, #2
 8006c2a:	2300      	moveq	r3, #0
 8006c2c:	e000      	b.n	8006c30 <BUTTON_DrawSkinFlex+0x16c>
 8006c2e:	2300      	movs	r3, #0
 8006c30:	a808      	add	r0, sp, #32
 8006c32:	f850 5d10 	ldr.w	r5, [r0, #-16]!
 8006c36:	eb05 0183 	add.w	r1, r5, r3, lsl #2
 8006c3a:	6ecd      	ldr	r5, [r1, #108]	; 0x6c
 8006c3c:	f006 ff8c 	bl	800db58 <GUI_ALLOC_UnlockH>
 8006c40:	2200      	movs	r2, #0
 8006c42:	4628      	mov	r0, r5
 8006c44:	6821      	ldr	r1, [r4, #0]
 8006c46:	4613      	mov	r3, r2
 8006c48:	f007 ff2d 	bl	800eaa6 <GUI_DRAW__Draw>
 8006c4c:	e050      	b.n	8006cf0 <BUTTON_DrawSkinFlex+0x22c>
 8006c4e:	6820      	ldr	r0, [r4, #0]
 8006c50:	f006 ff74 	bl	800db3c <GUI_ALLOC_LockH>
 8006c54:	6e86      	ldr	r6, [r0, #104]	; 0x68
 8006c56:	9004      	str	r0, [sp, #16]
 8006c58:	2e00      	cmp	r6, #0
 8006c5a:	d046      	beq.n	8006cea <BUTTON_DrawSkinFlex+0x226>
 8006c5c:	68a1      	ldr	r1, [r4, #8]
 8006c5e:	f9b0 705c 	ldrsh.w	r7, [r0, #92]	; 0x5c
 8006c62:	b121      	cbz	r1, 8006c6e <BUTTON_DrawSkinFlex+0x1aa>
 8006c64:	2903      	cmp	r1, #3
 8006c66:	bf0c      	ite	eq
 8006c68:	2402      	moveq	r4, #2
 8006c6a:	2400      	movne	r4, #0
 8006c6c:	e000      	b.n	8006c70 <BUTTON_DrawSkinFlex+0x1ac>
 8006c6e:	2401      	movs	r4, #1
 8006c70:	eb00 0384 	add.w	r3, r0, r4, lsl #2
 8006c74:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8006c76:	6c1c      	ldr	r4, [r3, #64]	; 0x40
 8006c78:	f005 fb6c 	bl	800c354 <GUI_SetFont>
 8006c7c:	4620      	mov	r0, r4
 8006c7e:	f005 fb97 	bl	800c3b0 <GUI_SetColor>
 8006c82:	a806      	add	r0, sp, #24
 8006c84:	f005 fd4c 	bl	800c720 <GUI_GetClientRect>
 8006c88:	8ba8      	ldrh	r0, [r5, #28]
 8006c8a:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 8006c8e:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 8006c92:	1881      	adds	r1, r0, r2
 8006c94:	1a1c      	subs	r4, r3, r0
 8006c96:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8006c9a:	f8ad 401c 	strh.w	r4, [sp, #28]
 8006c9e:	ac08      	add	r4, sp, #32
 8006ca0:	1c82      	adds	r2, r0, #2
 8006ca2:	f8ad 1018 	strh.w	r1, [sp, #24]
 8006ca6:	f8ad 201a 	strh.w	r2, [sp, #26]
 8006caa:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 8006cae:	f854 2d10 	ldr.w	r2, [r4, #-16]!
 8006cb2:	1e8b      	subs	r3, r1, #2
 8006cb4:	a806      	add	r0, sp, #24
 8006cb6:	f9b2 105e 	ldrsh.w	r1, [r2, #94]	; 0x5e
 8006cba:	f9b2 2060 	ldrsh.w	r2, [r2, #96]	; 0x60
 8006cbe:	f8ad 301e 	strh.w	r3, [sp, #30]
 8006cc2:	f005 fccb 	bl	800c65c <GUI_MoveRect>
 8006cc6:	4620      	mov	r0, r4
 8006cc8:	f006 ff46 	bl	800db58 <GUI_ALLOC_UnlockH>
 8006ccc:	2002      	movs	r0, #2
 8006cce:	f005 fb37 	bl	800c340 <GUI_SetTextMode>
 8006cd2:	4630      	mov	r0, r6
 8006cd4:	f006 ff32 	bl	800db3c <GUI_ALLOC_LockH>
 8006cd8:	ac08      	add	r4, sp, #32
 8006cda:	a906      	add	r1, sp, #24
 8006cdc:	f844 0d0c 	str.w	r0, [r4, #-12]!
 8006ce0:	463a      	mov	r2, r7
 8006ce2:	f006 f922 	bl	800cf2a <GUI_DispStringInRect>
 8006ce6:	4620      	mov	r0, r4
 8006ce8:	e000      	b.n	8006cec <BUTTON_DrawSkinFlex+0x228>
 8006cea:	a804      	add	r0, sp, #16
 8006cec:	f006 ff34 	bl	800db58 <GUI_ALLOC_UnlockH>
 8006cf0:	2000      	movs	r0, #0
 8006cf2:	b009      	add	sp, #36	; 0x24
 8006cf4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006cf6:	bf00      	nop
 8006cf8:	080217a8 	.word	0x080217a8

08006cfc <_Create>:
 8006cfc:	b530      	push	{r4, r5, lr}
 8006cfe:	b08b      	sub	sp, #44	; 0x2c
 8006d00:	2100      	movs	r1, #0
 8006d02:	4604      	mov	r4, r0
 8006d04:	2224      	movs	r2, #36	; 0x24
 8006d06:	a801      	add	r0, sp, #4
 8006d08:	f00b ffc4 	bl	8012c94 <memset>
 8006d0c:	4620      	mov	r0, r4
 8006d0e:	f006 ff15 	bl	800db3c <GUI_ALLOC_LockH>
 8006d12:	ab0a      	add	r3, sp, #40	; 0x28
 8006d14:	6e42      	ldr	r2, [r0, #100]	; 0x64
 8006d16:	f843 0d28 	str.w	r0, [r3, #-40]!
 8006d1a:	6895      	ldr	r5, [r2, #8]
 8006d1c:	4668      	mov	r0, sp
 8006d1e:	f006 ff1b 	bl	800db58 <GUI_ALLOC_UnlockH>
 8006d22:	2000      	movs	r0, #0
 8006d24:	9002      	str	r0, [sp, #8]
 8006d26:	9401      	str	r4, [sp, #4]
 8006d28:	6829      	ldr	r1, [r5, #0]
 8006d2a:	a801      	add	r0, sp, #4
 8006d2c:	4788      	blx	r1
 8006d2e:	b00b      	add	sp, #44	; 0x2c
 8006d30:	bd30      	pop	{r4, r5, pc}

08006d32 <_Paint>:
 8006d32:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006d36:	b08a      	sub	sp, #40	; 0x28
 8006d38:	4605      	mov	r5, r0
 8006d3a:	f006 feff 	bl	800db3c <GUI_ALLOC_LockH>
 8006d3e:	4603      	mov	r3, r0
 8006d40:	a80a      	add	r0, sp, #40	; 0x28
 8006d42:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 8006d44:	f840 3d28 	str.w	r3, [r0, #-40]!
 8006d48:	4668      	mov	r0, sp
 8006d4a:	6d9c      	ldr	r4, [r3, #88]	; 0x58
 8006d4c:	8e5f      	ldrh	r7, [r3, #50]	; 0x32
 8006d4e:	f006 ff03 	bl	800db58 <GUI_ALLOC_UnlockH>
 8006d52:	4628      	mov	r0, r5
 8006d54:	f000 fdb4 	bl	80078c0 <WM_GetWindowSizeX>
 8006d58:	4680      	mov	r8, r0
 8006d5a:	4628      	mov	r0, r5
 8006d5c:	f000 fdc4 	bl	80078e8 <WM_GetWindowSizeY>
 8006d60:	2100      	movs	r1, #0
 8006d62:	1e43      	subs	r3, r0, #1
 8006d64:	f108 32ff 	add.w	r2, r8, #4294967295
 8006d68:	f016 0610 	ands.w	r6, r6, #16
 8006d6c:	9501      	str	r5, [sp, #4]
 8006d6e:	9106      	str	r1, [sp, #24]
 8006d70:	9105      	str	r1, [sp, #20]
 8006d72:	9207      	str	r2, [sp, #28]
 8006d74:	9308      	str	r3, [sp, #32]
 8006d76:	d001      	beq.n	8006d7c <_Paint+0x4a>
 8006d78:	2203      	movs	r2, #3
 8006d7a:	e00a      	b.n	8006d92 <_Paint+0x60>
 8006d7c:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8006d80:	b281      	uxth	r1, r0
 8006d82:	b109      	cbz	r1, 8006d88 <_Paint+0x56>
 8006d84:	9603      	str	r6, [sp, #12]
 8006d86:	e005      	b.n	8006d94 <_Paint+0x62>
 8006d88:	07fb      	lsls	r3, r7, #31
 8006d8a:	d501      	bpl.n	8006d90 <_Paint+0x5e>
 8006d8c:	2201      	movs	r2, #1
 8006d8e:	e000      	b.n	8006d92 <_Paint+0x60>
 8006d90:	2202      	movs	r2, #2
 8006d92:	9203      	str	r2, [sp, #12]
 8006d94:	2305      	movs	r3, #5
 8006d96:	9302      	str	r3, [sp, #8]
 8006d98:	a801      	add	r0, sp, #4
 8006d9a:	47a0      	blx	r4
 8006d9c:	2006      	movs	r0, #6
 8006d9e:	9002      	str	r0, [sp, #8]
 8006da0:	a801      	add	r0, sp, #4
 8006da2:	47a0      	blx	r4
 8006da4:	2112      	movs	r1, #18
 8006da6:	9102      	str	r1, [sp, #8]
 8006da8:	a801      	add	r0, sp, #4
 8006daa:	47a0      	blx	r4
 8006dac:	220a      	movs	r2, #10
 8006dae:	9202      	str	r2, [sp, #8]
 8006db0:	a801      	add	r0, sp, #4
 8006db2:	47a0      	blx	r4
 8006db4:	b00a      	add	sp, #40	; 0x28
 8006db6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08006dbc <BUTTON_SetSkin>:
 8006dbc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006dbe:	460d      	mov	r5, r1
 8006dc0:	4604      	mov	r4, r0
 8006dc2:	f006 febb 	bl	800db3c <GUI_ALLOC_LockH>
 8006dc6:	4906      	ldr	r1, [pc, #24]	; (8006de0 <BUTTON_SetSkin+0x24>)
 8006dc8:	4602      	mov	r2, r0
 8006dca:	a802      	add	r0, sp, #8
 8006dcc:	6651      	str	r1, [r2, #100]	; 0x64
 8006dce:	f840 2d04 	str.w	r2, [r0, #-4]!
 8006dd2:	6595      	str	r5, [r2, #88]	; 0x58
 8006dd4:	f006 fec0 	bl	800db58 <GUI_ALLOC_UnlockH>
 8006dd8:	4620      	mov	r0, r4
 8006dda:	f001 fb15 	bl	8008408 <WM_InvalidateWindow>
 8006dde:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 8006de0:	20000214 	.word	0x20000214

08006de4 <BUTTON_SetDefaultSkin>:
 8006de4:	4903      	ldr	r1, [pc, #12]	; (8006df4 <BUTTON_SetDefaultSkin+0x10>)
 8006de6:	4a04      	ldr	r2, [pc, #16]	; (8006df8 <BUTTON_SetDefaultSkin+0x14>)
 8006de8:	4b04      	ldr	r3, [pc, #16]	; (8006dfc <BUTTON_SetDefaultSkin+0x18>)
 8006dea:	601a      	str	r2, [r3, #0]
 8006dec:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8006dee:	6248      	str	r0, [r1, #36]	; 0x24
 8006df0:	4610      	mov	r0, r2
 8006df2:	4770      	bx	lr
 8006df4:	20000224 	.word	0x20000224
 8006df8:	20000214 	.word	0x20000214
 8006dfc:	20000254 	.word	0x20000254

08006e00 <BUTTON_CreateIndirect>:
 8006e00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006e02:	4604      	mov	r4, r0
 8006e04:	b087      	sub	sp, #28
 8006e06:	8a65      	ldrh	r5, [r4, #18]
 8006e08:	f9b0 000a 	ldrsh.w	r0, [r0, #10]
 8006e0c:	9100      	str	r1, [sp, #0]
 8006e0e:	2100      	movs	r1, #0
 8006e10:	f9b4 e00c 	ldrsh.w	lr, [r4, #12]
 8006e14:	f9b4 700e 	ldrsh.w	r7, [r4, #14]
 8006e18:	f9b4 6010 	ldrsh.w	r6, [r4, #16]
 8006e1c:	9101      	str	r1, [sp, #4]
 8006e1e:	9502      	str	r5, [sp, #8]
 8006e20:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8006e24:	69a5      	ldr	r5, [r4, #24]
 8006e26:	9103      	str	r1, [sp, #12]
 8006e28:	9504      	str	r5, [sp, #16]
 8006e2a:	eb0e 0103 	add.w	r1, lr, r3
 8006e2e:	1880      	adds	r0, r0, r2
 8006e30:	4633      	mov	r3, r6
 8006e32:	463a      	mov	r2, r7
 8006e34:	f000 f8d6 	bl	8006fe4 <BUTTON_CreateUser>
 8006e38:	6861      	ldr	r1, [r4, #4]
 8006e3a:	4605      	mov	r5, r0
 8006e3c:	f000 f91a 	bl	8007074 <BUTTON_SetText>
 8006e40:	4628      	mov	r0, r5
 8006e42:	b007      	add	sp, #28
 8006e44:	bdf0      	pop	{r4, r5, r6, r7, pc}

08006e46 <BUTTON_CreateAsChild>:
 8006e46:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8006e48:	9c06      	ldr	r4, [sp, #24]
 8006e4a:	9400      	str	r4, [sp, #0]
 8006e4c:	9c08      	ldr	r4, [sp, #32]
 8006e4e:	9401      	str	r4, [sp, #4]
 8006e50:	2400      	movs	r4, #0
 8006e52:	9402      	str	r4, [sp, #8]
 8006e54:	9c07      	ldr	r4, [sp, #28]
 8006e56:	9403      	str	r4, [sp, #12]
 8006e58:	f000 f8fc 	bl	8007054 <BUTTON_CreateEx>
 8006e5c:	b004      	add	sp, #16
 8006e5e:	bd10      	pop	{r4, pc}

08006e60 <_OnButtonPressed>:
 8006e60:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006e62:	f44f 7180 	mov.w	r1, #256	; 0x100
 8006e66:	4604      	mov	r4, r0
 8006e68:	f007 fa77 	bl	800e35a <WIDGET_OrState>
 8006e6c:	4620      	mov	r0, r4
 8006e6e:	f006 fe65 	bl	800db3c <GUI_ALLOC_LockH>
 8006e72:	ab02      	add	r3, sp, #8
 8006e74:	6a85      	ldr	r5, [r0, #40]	; 0x28
 8006e76:	f843 0d04 	str.w	r0, [r3, #-4]!
 8006e7a:	4618      	mov	r0, r3
 8006e7c:	f006 fe6c 	bl	800db58 <GUI_ALLOC_UnlockH>
 8006e80:	07ab      	lsls	r3, r5, #30
 8006e82:	d503      	bpl.n	8006e8c <_OnButtonPressed+0x2c>
 8006e84:	4620      	mov	r0, r4
 8006e86:	2101      	movs	r1, #1
 8006e88:	f000 fc01 	bl	800768e <WM_NotifyParent>
 8006e8c:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08006e8e <_OnButtonReleased>:
 8006e8e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006e90:	4605      	mov	r5, r0
 8006e92:	460c      	mov	r4, r1
 8006e94:	f44f 7180 	mov.w	r1, #256	; 0x100
 8006e98:	f007 fa74 	bl	800e384 <WIDGET_AndState>
 8006e9c:	4628      	mov	r0, r5
 8006e9e:	f006 fe4d 	bl	800db3c <GUI_ALLOC_LockH>
 8006ea2:	4602      	mov	r2, r0
 8006ea4:	a802      	add	r0, sp, #8
 8006ea6:	6a96      	ldr	r6, [r2, #40]	; 0x28
 8006ea8:	f840 2d04 	str.w	r2, [r0, #-4]!
 8006eac:	8e17      	ldrh	r7, [r2, #48]	; 0x30
 8006eae:	f006 fe53 	bl	800db58 <GUI_ALLOC_UnlockH>
 8006eb2:	2c02      	cmp	r4, #2
 8006eb4:	d102      	bne.n	8006ebc <_OnButtonReleased+0x2e>
 8006eb6:	4638      	mov	r0, r7
 8006eb8:	f005 fbaa 	bl	800c610 <GUI_StoreKey>
 8006ebc:	07b2      	lsls	r2, r6, #30
 8006ebe:	d503      	bpl.n	8006ec8 <_OnButtonReleased+0x3a>
 8006ec0:	4628      	mov	r0, r5
 8006ec2:	4621      	mov	r1, r4
 8006ec4:	f000 fbe3 	bl	800768e <WM_NotifyParent>
 8006ec8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

08006eca <_OnTouchDefault>:
 8006eca:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006ecc:	460d      	mov	r5, r1
 8006ece:	4604      	mov	r4, r0
 8006ed0:	f006 fe34 	bl	800db3c <GUI_ALLOC_LockH>
 8006ed4:	ab02      	add	r3, sp, #8
 8006ed6:	8e46      	ldrh	r6, [r0, #50]	; 0x32
 8006ed8:	f843 0d04 	str.w	r0, [r3, #-4]!
 8006edc:	4618      	mov	r0, r3
 8006ede:	f006 fe3b 	bl	800db58 <GUI_ALLOC_UnlockH>
 8006ee2:	68ea      	ldr	r2, [r5, #12]
 8006ee4:	b162      	cbz	r2, 8006f00 <_OnTouchDefault+0x36>
 8006ee6:	7a10      	ldrb	r0, [r2, #8]
 8006ee8:	f406 7180 	and.w	r1, r6, #256	; 0x100
 8006eec:	b120      	cbz	r0, 8006ef8 <_OnTouchDefault+0x2e>
 8006eee:	b959      	cbnz	r1, 8006f08 <_OnTouchDefault+0x3e>
 8006ef0:	4620      	mov	r0, r4
 8006ef2:	f7ff ffb5 	bl	8006e60 <_OnButtonPressed>
 8006ef6:	e007      	b.n	8006f08 <_OnTouchDefault+0x3e>
 8006ef8:	b131      	cbz	r1, 8006f08 <_OnTouchDefault+0x3e>
 8006efa:	4620      	mov	r0, r4
 8006efc:	2102      	movs	r1, #2
 8006efe:	e001      	b.n	8006f04 <_OnTouchDefault+0x3a>
 8006f00:	4620      	mov	r0, r4
 8006f02:	2103      	movs	r1, #3
 8006f04:	f7ff ffc3 	bl	8006e8e <_OnButtonReleased>
 8006f08:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
	...

08006f0c <BUTTON_Callback>:
 8006f0c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006f0e:	6844      	ldr	r4, [r0, #4]
 8006f10:	4605      	mov	r5, r0
 8006f12:	4629      	mov	r1, r5
 8006f14:	4620      	mov	r0, r4
 8006f16:	f007 fa51 	bl	800e3bc <WIDGET_HandleActive>
 8006f1a:	2800      	cmp	r0, #0
 8006f1c:	d05d      	beq.n	8006fda <BUTTON_Callback+0xce>
 8006f1e:	682b      	ldr	r3, [r5, #0]
 8006f20:	2b0f      	cmp	r3, #15
 8006f22:	d016      	beq.n	8006f52 <BUTTON_Callback+0x46>
 8006f24:	dc04      	bgt.n	8006f30 <BUTTON_Callback+0x24>
 8006f26:	2b0b      	cmp	r3, #11
 8006f28:	d023      	beq.n	8006f72 <BUTTON_Callback+0x66>
 8006f2a:	2b0e      	cmp	r3, #14
 8006f2c:	d152      	bne.n	8006fd4 <BUTTON_Callback+0xc8>
 8006f2e:	e032      	b.n	8006f96 <BUTTON_Callback+0x8a>
 8006f30:	2b28      	cmp	r3, #40	; 0x28
 8006f32:	d048      	beq.n	8006fc6 <BUTTON_Callback+0xba>
 8006f34:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8006f38:	d005      	beq.n	8006f46 <BUTTON_Callback+0x3a>
 8006f3a:	2b11      	cmp	r3, #17
 8006f3c:	d14a      	bne.n	8006fd4 <BUTTON_Callback+0xc8>
 8006f3e:	4827      	ldr	r0, [pc, #156]	; (8006fdc <BUTTON_Callback+0xd0>)
 8006f40:	6803      	ldr	r3, [r0, #0]
 8006f42:	b913      	cbnz	r3, 8006f4a <BUTTON_Callback+0x3e>
 8006f44:	e049      	b.n	8006fda <BUTTON_Callback+0xce>
 8006f46:	4926      	ldr	r1, [pc, #152]	; (8006fe0 <BUTTON_Callback+0xd4>)
 8006f48:	680b      	ldr	r3, [r1, #0]
 8006f4a:	4620      	mov	r0, r4
 8006f4c:	4629      	mov	r1, r5
 8006f4e:	4798      	blx	r3
 8006f50:	e043      	b.n	8006fda <BUTTON_Callback+0xce>
 8006f52:	4620      	mov	r0, r4
 8006f54:	f006 fdf2 	bl	800db3c <GUI_ALLOC_LockH>
 8006f58:	a902      	add	r1, sp, #8
 8006f5a:	f841 0d04 	str.w	r0, [r1, #-4]!
 8006f5e:	6e45      	ldr	r5, [r0, #100]	; 0x64
 8006f60:	682d      	ldr	r5, [r5, #0]
 8006f62:	4608      	mov	r0, r1
 8006f64:	f006 fdf8 	bl	800db58 <GUI_ALLOC_UnlockH>
 8006f68:	2d00      	cmp	r5, #0
 8006f6a:	d036      	beq.n	8006fda <BUTTON_Callback+0xce>
 8006f6c:	4620      	mov	r0, r4
 8006f6e:	47a8      	blx	r5
 8006f70:	e033      	b.n	8006fda <BUTTON_Callback+0xce>
 8006f72:	4620      	mov	r0, r4
 8006f74:	f006 fde2 	bl	800db3c <GUI_ALLOC_LockH>
 8006f78:	ac02      	add	r4, sp, #8
 8006f7a:	9001      	str	r0, [sp, #4]
 8006f7c:	3068      	adds	r0, #104	; 0x68
 8006f7e:	f007 f82f 	bl	800dfe0 <GUI_ALLOC_FreePtr>
 8006f82:	f854 0d04 	ldr.w	r0, [r4, #-4]!
 8006f86:	2103      	movs	r1, #3
 8006f88:	306c      	adds	r0, #108	; 0x6c
 8006f8a:	f007 f831 	bl	800dff0 <GUI_ALLOC_FreePtrArray>
 8006f8e:	4620      	mov	r0, r4
 8006f90:	f006 fde2 	bl	800db58 <GUI_ALLOC_UnlockH>
 8006f94:	e01e      	b.n	8006fd4 <BUTTON_Callback+0xc8>
 8006f96:	68ea      	ldr	r2, [r5, #12]
 8006f98:	ca0c      	ldmia	r2, {r2, r3}
 8006f9a:	2a0d      	cmp	r2, #13
 8006f9c:	d002      	beq.n	8006fa4 <BUTTON_Callback+0x98>
 8006f9e:	2a20      	cmp	r2, #32
 8006fa0:	d111      	bne.n	8006fc6 <BUTTON_Callback+0xba>
 8006fa2:	e006      	b.n	8006fb2 <BUTTON_Callback+0xa6>
 8006fa4:	2b00      	cmp	r3, #0
 8006fa6:	dd0e      	ble.n	8006fc6 <BUTTON_Callback+0xba>
 8006fa8:	4620      	mov	r0, r4
 8006faa:	f7ff ff59 	bl	8006e60 <_OnButtonPressed>
 8006fae:	4620      	mov	r0, r4
 8006fb0:	e005      	b.n	8006fbe <BUTTON_Callback+0xb2>
 8006fb2:	2b00      	cmp	r3, #0
 8006fb4:	4620      	mov	r0, r4
 8006fb6:	dd02      	ble.n	8006fbe <BUTTON_Callback+0xb2>
 8006fb8:	f7ff ff52 	bl	8006e60 <_OnButtonPressed>
 8006fbc:	e00d      	b.n	8006fda <BUTTON_Callback+0xce>
 8006fbe:	2102      	movs	r1, #2
 8006fc0:	f7ff ff65 	bl	8006e8e <_OnButtonReleased>
 8006fc4:	e009      	b.n	8006fda <BUTTON_Callback+0xce>
 8006fc6:	68ea      	ldr	r2, [r5, #12]
 8006fc8:	b922      	cbnz	r2, 8006fd4 <BUTTON_Callback+0xc8>
 8006fca:	4620      	mov	r0, r4
 8006fcc:	f44f 7180 	mov.w	r1, #256	; 0x100
 8006fd0:	f007 f9d8 	bl	800e384 <WIDGET_AndState>
 8006fd4:	4628      	mov	r0, r5
 8006fd6:	f001 fe41 	bl	8008c5c <WM_DefaultProc>
 8006fda:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 8006fdc:	2000e024 	.word	0x2000e024
 8006fe0:	20000220 	.word	0x20000220

08006fe4 <BUTTON_CreateUser>:
 8006fe4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006fe6:	b087      	sub	sp, #28
 8006fe8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8006fea:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8006fec:	9400      	str	r4, [sp, #0]
 8006fee:	4c16      	ldr	r4, [pc, #88]	; (8007048 <BUTTON_CreateUser+0x64>)
 8006ff0:	9701      	str	r7, [sp, #4]
 8006ff2:	9402      	str	r4, [sp, #8]
 8006ff4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8006ff6:	344c      	adds	r4, #76	; 0x4c
 8006ff8:	9403      	str	r4, [sp, #12]
 8006ffa:	f001 fac1 	bl	8008580 <WM_CreateWindowAsChild>
 8006ffe:	4607      	mov	r7, r0
 8007000:	b1f8      	cbz	r0, 8007042 <BUTTON_CreateUser+0x5e>
 8007002:	f006 fd9b 	bl	800db3c <GUI_ALLOC_LockH>
 8007006:	4d11      	ldr	r5, [pc, #68]	; (800704c <BUTTON_CreateUser+0x68>)
 8007008:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800700a:	9005      	str	r0, [sp, #20]
 800700c:	2210      	movs	r2, #16
 800700e:	f007 f9cd 	bl	800e3ac <WIDGET__Init>
 8007012:	ae06      	add	r6, sp, #24
 8007014:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007016:	f856 ed04 	ldr.w	lr, [r6, #-4]!
 800701a:	f10e 0434 	add.w	r4, lr, #52	; 0x34
 800701e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007020:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007022:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007024:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8007028:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800702c:	4c08      	ldr	r4, [pc, #32]	; (8007050 <BUTTON_CreateUser+0x6c>)
 800702e:	6823      	ldr	r3, [r4, #0]
 8007030:	4630      	mov	r0, r6
 8007032:	f8ce 3064 	str.w	r3, [lr, #100]	; 0x64
 8007036:	f006 fd8f 	bl	800db58 <GUI_ALLOC_UnlockH>
 800703a:	6820      	ldr	r0, [r4, #0]
 800703c:	6841      	ldr	r1, [r0, #4]
 800703e:	4638      	mov	r0, r7
 8007040:	4788      	blx	r1
 8007042:	4638      	mov	r0, r7
 8007044:	b007      	add	sp, #28
 8007046:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007048:	08006f0d 	.word	0x08006f0d
 800704c:	20000224 	.word	0x20000224
 8007050:	20000254 	.word	0x20000254

08007054 <BUTTON_CreateEx>:
 8007054:	b510      	push	{r4, lr}
 8007056:	b086      	sub	sp, #24
 8007058:	9c08      	ldr	r4, [sp, #32]
 800705a:	9400      	str	r4, [sp, #0]
 800705c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800705e:	9401      	str	r4, [sp, #4]
 8007060:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8007062:	9402      	str	r4, [sp, #8]
 8007064:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8007066:	9403      	str	r4, [sp, #12]
 8007068:	2400      	movs	r4, #0
 800706a:	9404      	str	r4, [sp, #16]
 800706c:	f7ff ffba 	bl	8006fe4 <BUTTON_CreateUser>
 8007070:	b006      	add	sp, #24
 8007072:	bd10      	pop	{r4, pc}

08007074 <BUTTON_SetText>:
 8007074:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007076:	460c      	mov	r4, r1
 8007078:	4605      	mov	r5, r0
 800707a:	b300      	cbz	r0, 80070be <BUTTON_SetText+0x4a>
 800707c:	f006 fd5e 	bl	800db3c <GUI_ALLOC_LockH>
 8007080:	6e86      	ldr	r6, [r0, #104]	; 0x68
 8007082:	9000      	str	r0, [sp, #0]
 8007084:	4668      	mov	r0, sp
 8007086:	9601      	str	r6, [sp, #4]
 8007088:	f006 fd66 	bl	800db58 <GUI_ALLOC_UnlockH>
 800708c:	4621      	mov	r1, r4
 800708e:	a801      	add	r0, sp, #4
 8007090:	f004 fc2c 	bl	800b8ec <GUI__SetText>
 8007094:	f1d0 0401 	rsbs	r4, r0, #1
 8007098:	bf38      	it	cc
 800709a:	2400      	movcc	r4, #0
 800709c:	b984      	cbnz	r4, 80070c0 <BUTTON_SetText+0x4c>
 800709e:	9b01      	ldr	r3, [sp, #4]
 80070a0:	42b3      	cmp	r3, r6
 80070a2:	d008      	beq.n	80070b6 <BUTTON_SetText+0x42>
 80070a4:	4628      	mov	r0, r5
 80070a6:	f006 fd49 	bl	800db3c <GUI_ALLOC_LockH>
 80070aa:	9901      	ldr	r1, [sp, #4]
 80070ac:	9000      	str	r0, [sp, #0]
 80070ae:	6681      	str	r1, [r0, #104]	; 0x68
 80070b0:	4668      	mov	r0, sp
 80070b2:	f006 fd51 	bl	800db58 <GUI_ALLOC_UnlockH>
 80070b6:	4628      	mov	r0, r5
 80070b8:	f001 f9a6 	bl	8008408 <WM_InvalidateWindow>
 80070bc:	e000      	b.n	80070c0 <BUTTON_SetText+0x4c>
 80070be:	2401      	movs	r4, #1
 80070c0:	4620      	mov	r0, r4
 80070c2:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

080070c4 <BUTTON_SetFont>:
 80070c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80070c6:	460c      	mov	r4, r1
 80070c8:	4605      	mov	r5, r0
 80070ca:	b158      	cbz	r0, 80070e4 <BUTTON_SetFont+0x20>
 80070cc:	f006 fd36 	bl	800db3c <GUI_ALLOC_LockH>
 80070d0:	4602      	mov	r2, r0
 80070d2:	a802      	add	r0, sp, #8
 80070d4:	6554      	str	r4, [r2, #84]	; 0x54
 80070d6:	f840 2d04 	str.w	r2, [r0, #-4]!
 80070da:	f006 fd3d 	bl	800db58 <GUI_ALLOC_UnlockH>
 80070de:	4628      	mov	r0, r5
 80070e0:	f001 f992 	bl	8008408 <WM_InvalidateWindow>
 80070e4:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

080070e6 <BUTTON_SetFocussable>:
 80070e6:	b111      	cbz	r1, 80070ee <BUTTON_SetFocussable+0x8>
 80070e8:	2110      	movs	r1, #16
 80070ea:	f007 b936 	b.w	800e35a <WIDGET_OrState>
 80070ee:	2110      	movs	r1, #16
 80070f0:	f007 b948 	b.w	800e384 <WIDGET_AndState>

080070f4 <WM__SendMessage>:
 80070f4:	b570      	push	{r4, r5, r6, lr}
 80070f6:	4c0d      	ldr	r4, [pc, #52]	; (800712c <WM__SendMessage+0x38>)
 80070f8:	6823      	ldr	r3, [r4, #0]
 80070fa:	2b13      	cmp	r3, #19
 80070fc:	4606      	mov	r6, r0
 80070fe:	460d      	mov	r5, r1
 8007100:	dc12      	bgt.n	8007128 <WM__SendMessage+0x34>
 8007102:	f006 fd11 	bl	800db28 <GUI_ALLOC_h2p>
 8007106:	6901      	ldr	r1, [r0, #16]
 8007108:	606e      	str	r6, [r5, #4]
 800710a:	b141      	cbz	r1, 800711e <WM__SendMessage+0x2a>
 800710c:	6822      	ldr	r2, [r4, #0]
 800710e:	1c50      	adds	r0, r2, #1
 8007110:	6020      	str	r0, [r4, #0]
 8007112:	4628      	mov	r0, r5
 8007114:	4788      	blx	r1
 8007116:	6823      	ldr	r3, [r4, #0]
 8007118:	1e59      	subs	r1, r3, #1
 800711a:	6021      	str	r1, [r4, #0]
 800711c:	bd70      	pop	{r4, r5, r6, pc}
 800711e:	4628      	mov	r0, r5
 8007120:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8007124:	f001 bd9a 	b.w	8008c5c <WM_DefaultProc>
 8007128:	bd70      	pop	{r4, r5, r6, pc}
 800712a:	bf00      	nop
 800712c:	2000e028 	.word	0x2000e028

08007130 <WM__IsEnabled>:
 8007130:	b508      	push	{r3, lr}
 8007132:	f006 fcf9 	bl	800db28 <GUI_ALLOC_h2p>
 8007136:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8007138:	f080 0110 	eor.w	r1, r0, #16
 800713c:	f3c1 1000 	ubfx	r0, r1, #4, #1
 8007140:	bd08      	pop	{r3, pc}

08007142 <WM__IsAncestor>:
 8007142:	b510      	push	{r4, lr}
 8007144:	460c      	mov	r4, r1
 8007146:	b908      	cbnz	r0, 800714c <WM__IsAncestor+0xa>
 8007148:	2000      	movs	r0, #0
 800714a:	bd10      	pop	{r4, pc}
 800714c:	2900      	cmp	r1, #0
 800714e:	d0fb      	beq.n	8007148 <WM__IsAncestor+0x6>
 8007150:	f006 fcea 	bl	800db28 <GUI_ALLOC_h2p>
 8007154:	6980      	ldr	r0, [r0, #24]
 8007156:	42a0      	cmp	r0, r4
 8007158:	d002      	beq.n	8007160 <WM__IsAncestor+0x1e>
 800715a:	2800      	cmp	r0, #0
 800715c:	d1f8      	bne.n	8007150 <WM__IsAncestor+0xe>
 800715e:	e7f3      	b.n	8007148 <WM__IsAncestor+0x6>
 8007160:	2001      	movs	r0, #1
 8007162:	bd10      	pop	{r4, pc}

08007164 <WM__IsAncestorOrSelf>:
 8007164:	4288      	cmp	r0, r1
 8007166:	d001      	beq.n	800716c <WM__IsAncestorOrSelf+0x8>
 8007168:	f7ff bfeb 	b.w	8007142 <WM__IsAncestor>
 800716c:	2001      	movs	r0, #1
 800716e:	4770      	bx	lr

08007170 <WM__GetUserDataEx>:
 8007170:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007172:	460f      	mov	r7, r1
 8007174:	4614      	mov	r4, r2
 8007176:	461e      	mov	r6, r3
 8007178:	4605      	mov	r5, r0
 800717a:	b1a0      	cbz	r0, 80071a6 <WM__GetUserDataEx+0x36>
 800717c:	f006 fd0c 	bl	800db98 <GUI_ALLOC_GetSize>
 8007180:	1b80      	subs	r0, r0, r6
 8007182:	4284      	cmp	r4, r0
 8007184:	bfa8      	it	ge
 8007186:	4604      	movge	r4, r0
 8007188:	4628      	mov	r0, r5
 800718a:	f006 fcd7 	bl	800db3c <GUI_ALLOC_LockH>
 800718e:	ad02      	add	r5, sp, #8
 8007190:	4601      	mov	r1, r0
 8007192:	f845 0d04 	str.w	r0, [r5, #-4]!
 8007196:	1989      	adds	r1, r1, r6
 8007198:	4638      	mov	r0, r7
 800719a:	4622      	mov	r2, r4
 800719c:	f7f8 fff4 	bl	8000188 <memcpy>
 80071a0:	4628      	mov	r0, r5
 80071a2:	f006 fcd9 	bl	800db58 <GUI_ALLOC_UnlockH>
 80071a6:	4620      	mov	r0, r4
 80071a8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

080071aa <WM_GetUserData>:
 80071aa:	232c      	movs	r3, #44	; 0x2c
 80071ac:	f7ff bfe0 	b.w	8007170 <WM__GetUserDataEx>

080071b0 <WM_InvalidateWindowAndDescs>:
 80071b0:	b510      	push	{r4, lr}
 80071b2:	4604      	mov	r4, r0
 80071b4:	b170      	cbz	r0, 80071d4 <WM_InvalidateWindowAndDescs+0x24>
 80071b6:	f001 f927 	bl	8008408 <WM_InvalidateWindow>
 80071ba:	4620      	mov	r0, r4
 80071bc:	f000 fbde 	bl	800797c <WM_GetFirstChild>
 80071c0:	4604      	mov	r4, r0
 80071c2:	b13c      	cbz	r4, 80071d4 <WM_InvalidateWindowAndDescs+0x24>
 80071c4:	4620      	mov	r0, r4
 80071c6:	f7ff fff3 	bl	80071b0 <WM_InvalidateWindowAndDescs>
 80071ca:	4620      	mov	r0, r4
 80071cc:	f006 fcac 	bl	800db28 <GUI_ALLOC_h2p>
 80071d0:	6a04      	ldr	r4, [r0, #32]
 80071d2:	e7f6      	b.n	80071c2 <WM_InvalidateWindowAndDescs+0x12>
 80071d4:	bd10      	pop	{r4, pc}

080071d6 <WM_ShowWindow>:
 80071d6:	b513      	push	{r0, r1, r4, lr}
 80071d8:	4604      	mov	r4, r0
 80071da:	b170      	cbz	r0, 80071fa <WM_ShowWindow+0x24>
 80071dc:	f006 fcae 	bl	800db3c <GUI_ALLOC_LockH>
 80071e0:	6a82      	ldr	r2, [r0, #40]	; 0x28
 80071e2:	9001      	str	r0, [sp, #4]
 80071e4:	0793      	lsls	r3, r2, #30
 80071e6:	d405      	bmi.n	80071f4 <WM_ShowWindow+0x1e>
 80071e8:	f042 0102 	orr.w	r1, r2, #2
 80071ec:	6281      	str	r1, [r0, #40]	; 0x28
 80071ee:	4620      	mov	r0, r4
 80071f0:	f7ff ffde 	bl	80071b0 <WM_InvalidateWindowAndDescs>
 80071f4:	a801      	add	r0, sp, #4
 80071f6:	f006 fcaf 	bl	800db58 <GUI_ALLOC_UnlockH>
 80071fa:	bd1c      	pop	{r2, r3, r4, pc}

080071fc <WM_SetUserClipRect>:
 80071fc:	4b04      	ldr	r3, [pc, #16]	; (8007210 <WM_SetUserClipRect+0x14>)
 80071fe:	6819      	ldr	r1, [r3, #0]
 8007200:	b510      	push	{r4, lr}
 8007202:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8007204:	6448      	str	r0, [r1, #68]	; 0x44
 8007206:	f000 ff4b 	bl	80080a0 <WM__ActivateClipRect>
 800720a:	4620      	mov	r0, r4
 800720c:	bd10      	pop	{r4, pc}
 800720e:	bf00      	nop
 8007210:	20000278 	.word	0x20000278

08007214 <WM_SetHasTrans>:
 8007214:	b513      	push	{r0, r1, r4, lr}
 8007216:	4604      	mov	r4, r0
 8007218:	b1b8      	cbz	r0, 800724a <WM_SetHasTrans+0x36>
 800721a:	f006 fc8f 	bl	800db3c <GUI_ALLOC_LockH>
 800721e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8007220:	9001      	str	r0, [sp, #4]
 8007222:	07db      	lsls	r3, r3, #31
 8007224:	d40e      	bmi.n	8007244 <WM_SetHasTrans+0x30>
 8007226:	4620      	mov	r0, r4
 8007228:	f008 f854 	bl	800f2d4 <WM_ValidateWindow>
 800722c:	9801      	ldr	r0, [sp, #4]
 800722e:	4b07      	ldr	r3, [pc, #28]	; (800724c <WM_SetHasTrans+0x38>)
 8007230:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8007232:	f042 0101 	orr.w	r1, r2, #1
 8007236:	6281      	str	r1, [r0, #40]	; 0x28
 8007238:	6818      	ldr	r0, [r3, #0]
 800723a:	1c42      	adds	r2, r0, #1
 800723c:	4620      	mov	r0, r4
 800723e:	601a      	str	r2, [r3, #0]
 8007240:	f001 f8e2 	bl	8008408 <WM_InvalidateWindow>
 8007244:	a801      	add	r0, sp, #4
 8007246:	f006 fc87 	bl	800db58 <GUI_ALLOC_UnlockH>
 800724a:	bd1c      	pop	{r2, r3, r4, pc}
 800724c:	2000e654 	.word	0x2000e654

08007250 <WM_GetHasTrans>:
 8007250:	b508      	push	{r3, lr}
 8007252:	b128      	cbz	r0, 8007260 <WM_GetHasTrans+0x10>
 8007254:	f006 fc68 	bl	800db28 <GUI_ALLOC_h2p>
 8007258:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800725a:	f000 0001 	and.w	r0, r0, #1
 800725e:	bd08      	pop	{r3, pc}
 8007260:	bd08      	pop	{r3, pc}

08007262 <WM_SetSize>:
 8007262:	e92d 41e7 	stmdb	sp!, {r0, r1, r2, r5, r6, r7, r8, lr}
 8007266:	460e      	mov	r6, r1
 8007268:	4690      	mov	r8, r2
 800726a:	4607      	mov	r7, r0
 800726c:	b1d8      	cbz	r0, 80072a6 <WM_SetSize+0x44>
 800726e:	f006 fc65 	bl	800db3c <GUI_ALLOC_LockH>
 8007272:	4603      	mov	r3, r0
 8007274:	a802      	add	r0, sp, #8
 8007276:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800727a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800727e:	f840 3d04 	str.w	r3, [r0, #-4]!
 8007282:	1a8d      	subs	r5, r1, r2
 8007284:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 8007288:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800728c:	43e9      	mvns	r1, r5
 800728e:	1ad5      	subs	r5, r2, r3
 8007290:	1876      	adds	r6, r6, r1
 8007292:	43e9      	mvns	r1, r5
 8007294:	eb08 0501 	add.w	r5, r8, r1
 8007298:	f006 fc5e 	bl	800db58 <GUI_ALLOC_UnlockH>
 800729c:	4638      	mov	r0, r7
 800729e:	4631      	mov	r1, r6
 80072a0:	462a      	mov	r2, r5
 80072a2:	f000 f97a 	bl	800759a <WM_ResizeWindow>
 80072a6:	e8bd 81ee 	ldmia.w	sp!, {r1, r2, r3, r5, r6, r7, r8, pc}

080072aa <_GetPrevChild>:
 80072aa:	b510      	push	{r4, lr}
 80072ac:	4604      	mov	r4, r0
 80072ae:	b918      	cbnz	r0, 80072b8 <_GetPrevChild+0xe>
 80072b0:	4620      	mov	r0, r4
 80072b2:	f007 ffe7 	bl	800f284 <WM__GetLastSibling>
 80072b6:	e003      	b.n	80072c0 <_GetPrevChild+0x16>
 80072b8:	f007 ffd1 	bl	800f25e <WM__GetPrevSibling>
 80072bc:	2800      	cmp	r0, #0
 80072be:	d0f7      	beq.n	80072b0 <_GetPrevChild+0x6>
 80072c0:	42a0      	cmp	r0, r4
 80072c2:	bf08      	it	eq
 80072c4:	2000      	moveq	r0, #0
 80072c6:	bd10      	pop	{r4, pc}

080072c8 <WM_SetFocusOnPrevChild>:
 80072c8:	b538      	push	{r3, r4, r5, lr}
 80072ca:	4604      	mov	r4, r0
 80072cc:	b1c0      	cbz	r0, 8007300 <WM_SetFocusOnPrevChild+0x38>
 80072ce:	f007 ffe5 	bl	800f29c <WM__GetFocussedChild>
 80072d2:	f7ff ffea 	bl	80072aa <_GetPrevChild>
 80072d6:	4605      	mov	r5, r0
 80072d8:	4604      	mov	r4, r0
 80072da:	4620      	mov	r0, r4
 80072dc:	f000 faa2 	bl	8007824 <WM_IsFocussable>
 80072e0:	b930      	cbnz	r0, 80072f0 <WM_SetFocusOnPrevChild+0x28>
 80072e2:	b12c      	cbz	r4, 80072f0 <WM_SetFocusOnPrevChild+0x28>
 80072e4:	4620      	mov	r0, r4
 80072e6:	f7ff ffe0 	bl	80072aa <_GetPrevChild>
 80072ea:	42a8      	cmp	r0, r5
 80072ec:	4604      	mov	r4, r0
 80072ee:	d1f4      	bne.n	80072da <WM_SetFocusOnPrevChild+0x12>
 80072f0:	4620      	mov	r0, r4
 80072f2:	f000 f84b 	bl	800738c <WM_SetFocus>
 80072f6:	2800      	cmp	r0, #0
 80072f8:	bf0c      	ite	eq
 80072fa:	4620      	moveq	r0, r4
 80072fc:	2000      	movne	r0, #0
 80072fe:	bd38      	pop	{r3, r4, r5, pc}
 8007300:	bd38      	pop	{r3, r4, r5, pc}

08007302 <_GetNextChild>:
 8007302:	b538      	push	{r3, r4, r5, lr}
 8007304:	4605      	mov	r5, r0
 8007306:	460c      	mov	r4, r1
 8007308:	b921      	cbnz	r1, 8007314 <_GetNextChild+0x12>
 800730a:	4628      	mov	r0, r5
 800730c:	f006 fc0c 	bl	800db28 <GUI_ALLOC_h2p>
 8007310:	69c0      	ldr	r0, [r0, #28]
 8007312:	e005      	b.n	8007320 <_GetNextChild+0x1e>
 8007314:	4608      	mov	r0, r1
 8007316:	f006 fc07 	bl	800db28 <GUI_ALLOC_h2p>
 800731a:	6a00      	ldr	r0, [r0, #32]
 800731c:	2800      	cmp	r0, #0
 800731e:	d0f4      	beq.n	800730a <_GetNextChild+0x8>
 8007320:	42a0      	cmp	r0, r4
 8007322:	bf08      	it	eq
 8007324:	2000      	moveq	r0, #0
 8007326:	bd38      	pop	{r3, r4, r5, pc}

08007328 <WM_SetFocusOnNextChild>:
 8007328:	b570      	push	{r4, r5, r6, lr}
 800732a:	4605      	mov	r5, r0
 800732c:	b340      	cbz	r0, 8007380 <WM_SetFocusOnNextChild+0x58>
 800732e:	f007 ffb5 	bl	800f29c <WM__GetFocussedChild>
 8007332:	4601      	mov	r1, r0
 8007334:	4628      	mov	r0, r5
 8007336:	f7ff ffe4 	bl	8007302 <_GetNextChild>
 800733a:	4606      	mov	r6, r0
 800733c:	4604      	mov	r4, r0
 800733e:	4620      	mov	r0, r4
 8007340:	f000 fa70 	bl	8007824 <WM_IsFocussable>
 8007344:	b938      	cbnz	r0, 8007356 <WM_SetFocusOnNextChild+0x2e>
 8007346:	b13c      	cbz	r4, 8007358 <WM_SetFocusOnNextChild+0x30>
 8007348:	4621      	mov	r1, r4
 800734a:	4628      	mov	r0, r5
 800734c:	f7ff ffd9 	bl	8007302 <_GetNextChild>
 8007350:	42b0      	cmp	r0, r6
 8007352:	4604      	mov	r4, r0
 8007354:	d1f3      	bne.n	800733e <WM_SetFocusOnNextChild+0x16>
 8007356:	b90c      	cbnz	r4, 800735c <WM_SetFocusOnNextChild+0x34>
 8007358:	2400      	movs	r4, #0
 800735a:	e012      	b.n	8007382 <WM_SetFocusOnNextChild+0x5a>
 800735c:	4d0a      	ldr	r5, [pc, #40]	; (8007388 <WM_SetFocusOnNextChild+0x60>)
 800735e:	4620      	mov	r0, r4
 8007360:	682e      	ldr	r6, [r5, #0]
 8007362:	f001 f855 	bl	8008410 <WM__GetTopLevelLayer>
 8007366:	3001      	adds	r0, #1
 8007368:	d00b      	beq.n	8007382 <WM_SetFocusOnNextChild+0x5a>
 800736a:	4620      	mov	r0, r4
 800736c:	f001 f850 	bl	8008410 <WM__GetTopLevelLayer>
 8007370:	6028      	str	r0, [r5, #0]
 8007372:	4620      	mov	r0, r4
 8007374:	f000 f80a 	bl	800738c <WM_SetFocus>
 8007378:	602e      	str	r6, [r5, #0]
 800737a:	2800      	cmp	r0, #0
 800737c:	d1ec      	bne.n	8007358 <WM_SetFocusOnNextChild+0x30>
 800737e:	e000      	b.n	8007382 <WM_SetFocusOnNextChild+0x5a>
 8007380:	4604      	mov	r4, r0
 8007382:	4620      	mov	r0, r4
 8007384:	bd70      	pop	{r4, r5, r6, pc}
 8007386:	bf00      	nop
 8007388:	2000e62c 	.word	0x2000e62c

0800738c <WM_SetFocus>:
 800738c:	b530      	push	{r4, r5, lr}
 800738e:	b087      	sub	sp, #28
 8007390:	4604      	mov	r4, r0
 8007392:	2100      	movs	r1, #0
 8007394:	a802      	add	r0, sp, #8
 8007396:	2210      	movs	r2, #16
 8007398:	f00b fc7c 	bl	8012c94 <memset>
 800739c:	2c00      	cmp	r4, #0
 800739e:	d03a      	beq.n	8007416 <WM_SetFocus+0x8a>
 80073a0:	4b1f      	ldr	r3, [pc, #124]	; (8007420 <WM_SetFocus+0x94>)
 80073a2:	4820      	ldr	r0, [pc, #128]	; (8007424 <WM_SetFocus+0x98>)
 80073a4:	681a      	ldr	r2, [r3, #0]
 80073a6:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 80073aa:	4284      	cmp	r4, r0
 80073ac:	d033      	beq.n	8007416 <WM_SetFocus+0x8a>
 80073ae:	211e      	movs	r1, #30
 80073b0:	e88d 0011 	stmia.w	sp, {r0, r4}
 80073b4:	9102      	str	r1, [sp, #8]
 80073b6:	b110      	cbz	r0, 80073be <WM_SetFocus+0x32>
 80073b8:	a902      	add	r1, sp, #8
 80073ba:	f7ff fe9b 	bl	80070f4 <WM__SendMessage>
 80073be:	2501      	movs	r5, #1
 80073c0:	4620      	mov	r0, r4
 80073c2:	a902      	add	r1, sp, #8
 80073c4:	9505      	str	r5, [sp, #20]
 80073c6:	f7ff fe95 	bl	80070f4 <WM__SendMessage>
 80073ca:	9d05      	ldr	r5, [sp, #20]
 80073cc:	bb25      	cbnz	r5, 8007418 <WM_SetFocus+0x8c>
 80073ce:	4b14      	ldr	r3, [pc, #80]	; (8007420 <WM_SetFocus+0x94>)
 80073d0:	4814      	ldr	r0, [pc, #80]	; (8007424 <WM_SetFocus+0x98>)
 80073d2:	681a      	ldr	r2, [r3, #0]
 80073d4:	f840 4022 	str.w	r4, [r0, r2, lsl #2]
 80073d8:	4620      	mov	r0, r4
 80073da:	f000 faa4 	bl	8007926 <WM_GetParent>
 80073de:	4604      	mov	r4, r0
 80073e0:	b138      	cbz	r0, 80073f2 <WM_SetFocus+0x66>
 80073e2:	a900      	add	r1, sp, #0
 80073e4:	2220      	movs	r2, #32
 80073e6:	9105      	str	r1, [sp, #20]
 80073e8:	a902      	add	r1, sp, #8
 80073ea:	9202      	str	r2, [sp, #8]
 80073ec:	f7ff fe82 	bl	80070f4 <WM__SendMessage>
 80073f0:	e7f2      	b.n	80073d8 <WM_SetFocus+0x4c>
 80073f2:	9c00      	ldr	r4, [sp, #0]
 80073f4:	4620      	mov	r0, r4
 80073f6:	f000 fa13 	bl	8007820 <WM_IsWindow>
 80073fa:	b168      	cbz	r0, 8007418 <WM_SetFocus+0x8c>
 80073fc:	4620      	mov	r0, r4
 80073fe:	f000 fa92 	bl	8007926 <WM_GetParent>
 8007402:	4604      	mov	r4, r0
 8007404:	b140      	cbz	r0, 8007418 <WM_SetFocus+0x8c>
 8007406:	2120      	movs	r1, #32
 8007408:	9102      	str	r1, [sp, #8]
 800740a:	ab00      	add	r3, sp, #0
 800740c:	a902      	add	r1, sp, #8
 800740e:	9305      	str	r3, [sp, #20]
 8007410:	f7ff fe70 	bl	80070f4 <WM__SendMessage>
 8007414:	e7f2      	b.n	80073fc <WM_SetFocus+0x70>
 8007416:	2501      	movs	r5, #1
 8007418:	4628      	mov	r0, r5
 800741a:	b007      	add	sp, #28
 800741c:	bd30      	pop	{r4, r5, pc}
 800741e:	bf00      	nop
 8007420:	2000e62c 	.word	0x2000e62c
 8007424:	2000e61c 	.word	0x2000e61c

08007428 <WM_SetDesktopColorEx>:
 8007428:	2901      	cmp	r1, #1
 800742a:	b510      	push	{r4, lr}
 800742c:	bf88      	it	hi
 800742e:	f06f 4470 	mvnhi.w	r4, #4026531840	; 0xf0000000
 8007432:	d809      	bhi.n	8007448 <WM_SetDesktopColorEx+0x20>
 8007434:	4b05      	ldr	r3, [pc, #20]	; (800744c <WM_SetDesktopColorEx+0x24>)
 8007436:	f853 4021 	ldr.w	r4, [r3, r1, lsl #2]
 800743a:	f843 0021 	str.w	r0, [r3, r1, lsl #2]
 800743e:	4804      	ldr	r0, [pc, #16]	; (8007450 <WM_SetDesktopColorEx+0x28>)
 8007440:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
 8007444:	f000 ffe0 	bl	8008408 <WM_InvalidateWindow>
 8007448:	4620      	mov	r0, r4
 800744a:	bd10      	pop	{r4, pc}
 800744c:	2000e638 	.word	0x2000e638
 8007450:	2000e60c 	.word	0x2000e60c

08007454 <WM_SetDesktopColor>:
 8007454:	4b02      	ldr	r3, [pc, #8]	; (8007460 <WM_SetDesktopColor+0xc>)
 8007456:	6819      	ldr	r1, [r3, #0]
 8007458:	7c49      	ldrb	r1, [r1, #17]
 800745a:	f7ff bfe5 	b.w	8007428 <WM_SetDesktopColorEx>
 800745e:	bf00      	nop
 8007460:	20000278 	.word	0x20000278

08007464 <WM_SetCaptureMove>:
 8007464:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007468:	b085      	sub	sp, #20
 800746a:	4604      	mov	r4, r0
 800746c:	460d      	mov	r5, r1
 800746e:	4691      	mov	r9, r2
 8007470:	4698      	mov	r8, r3
 8007472:	f000 fa09 	bl	8007888 <WM_HasCaptured>
 8007476:	4e21      	ldr	r6, [pc, #132]	; (80074fc <WM_SetCaptureMove+0x98>)
 8007478:	b940      	cbnz	r0, 800748c <WM_SetCaptureMove+0x28>
 800747a:	4620      	mov	r0, r4
 800747c:	2101      	movs	r1, #1
 800747e:	f000 f859 	bl	8007534 <WM_SetCapture>
 8007482:	682b      	ldr	r3, [r5, #0]
 8007484:	6868      	ldr	r0, [r5, #4]
 8007486:	8033      	strh	r3, [r6, #0]
 8007488:	8070      	strh	r0, [r6, #2]
 800748a:	e034      	b.n	80074f6 <WM_SetCaptureMove+0x92>
 800748c:	682b      	ldr	r3, [r5, #0]
 800748e:	f9b6 0002 	ldrsh.w	r0, [r6, #2]
 8007492:	f9b6 7000 	ldrsh.w	r7, [r6]
 8007496:	686d      	ldr	r5, [r5, #4]
 8007498:	1bdf      	subs	r7, r3, r7
 800749a:	1a2d      	subs	r5, r5, r0
 800749c:	4620      	mov	r0, r4
 800749e:	f1b9 0f00 	cmp.w	r9, #0
 80074a2:	d102      	bne.n	80074aa <WM_SetCaptureMove+0x46>
 80074a4:	f1b8 0f00 	cmp.w	r8, #0
 80074a8:	d021      	beq.n	80074ee <WM_SetCaptureMove+0x8a>
 80074aa:	4669      	mov	r1, sp
 80074ac:	f000 fa30 	bl	8007910 <WM_GetWindowRectEx>
 80074b0:	f1b8 0f00 	cmp.w	r8, #0
 80074b4:	d005      	beq.n	80074c2 <WM_SetCaptureMove+0x5e>
 80074b6:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 80074ba:	1e4a      	subs	r2, r1, #1
 80074bc:	4490      	add	r8, r2
 80074be:	f8ad 8006 	strh.w	r8, [sp, #6]
 80074c2:	4620      	mov	r0, r4
 80074c4:	f000 fa2f 	bl	8007926 <WM_GetParent>
 80074c8:	a902      	add	r1, sp, #8
 80074ca:	f000 fa21 	bl	8007910 <WM_GetWindowRectEx>
 80074ce:	4668      	mov	r0, sp
 80074d0:	4639      	mov	r1, r7
 80074d2:	462a      	mov	r2, r5
 80074d4:	f005 f8c2 	bl	800c65c <GUI_MoveRect>
 80074d8:	a802      	add	r0, sp, #8
 80074da:	4601      	mov	r1, r0
 80074dc:	464a      	mov	r2, r9
 80074de:	f004 fa3f 	bl	800b960 <GUI__ReduceRect>
 80074e2:	4668      	mov	r0, sp
 80074e4:	a902      	add	r1, sp, #8
 80074e6:	f004 ffbd 	bl	800c464 <GUI_RectsIntersect>
 80074ea:	b120      	cbz	r0, 80074f6 <WM_SetCaptureMove+0x92>
 80074ec:	4620      	mov	r0, r4
 80074ee:	4639      	mov	r1, r7
 80074f0:	462a      	mov	r2, r5
 80074f2:	f000 f988 	bl	8007806 <WM_MoveWindow>
 80074f6:	b005      	add	sp, #20
 80074f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80074fc:	2000e02c 	.word	0x2000e02c

08007500 <WM__ReleaseCapture>:
 8007500:	b530      	push	{r4, r5, lr}
 8007502:	4d0a      	ldr	r5, [pc, #40]	; (800752c <WM__ReleaseCapture+0x2c>)
 8007504:	4c0a      	ldr	r4, [pc, #40]	; (8007530 <WM__ReleaseCapture+0x30>)
 8007506:	682b      	ldr	r3, [r5, #0]
 8007508:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800750c:	b085      	sub	sp, #20
 800750e:	b150      	cbz	r0, 8007526 <WM__ReleaseCapture+0x26>
 8007510:	a904      	add	r1, sp, #16
 8007512:	2218      	movs	r2, #24
 8007514:	f841 2d10 	str.w	r2, [r1, #-16]!
 8007518:	4669      	mov	r1, sp
 800751a:	f7ff fdeb 	bl	80070f4 <WM__SendMessage>
 800751e:	6828      	ldr	r0, [r5, #0]
 8007520:	2300      	movs	r3, #0
 8007522:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 8007526:	b005      	add	sp, #20
 8007528:	bd30      	pop	{r4, r5, pc}
 800752a:	bf00      	nop
 800752c:	2000e62c 	.word	0x2000e62c
 8007530:	2000e648 	.word	0x2000e648

08007534 <WM_SetCapture>:
 8007534:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007536:	4b09      	ldr	r3, [pc, #36]	; (800755c <WM_SetCapture+0x28>)
 8007538:	4a09      	ldr	r2, [pc, #36]	; (8007560 <WM_SetCapture+0x2c>)
 800753a:	4604      	mov	r4, r0
 800753c:	6818      	ldr	r0, [r3, #0]
 800753e:	460f      	mov	r7, r1
 8007540:	f852 1020 	ldr.w	r1, [r2, r0, lsl #2]
 8007544:	42a1      	cmp	r1, r4
 8007546:	4615      	mov	r5, r2
 8007548:	461e      	mov	r6, r3
 800754a:	d001      	beq.n	8007550 <WM_SetCapture+0x1c>
 800754c:	f7ff ffd8 	bl	8007500 <WM__ReleaseCapture>
 8007550:	6832      	ldr	r2, [r6, #0]
 8007552:	4b04      	ldr	r3, [pc, #16]	; (8007564 <WM_SetCapture+0x30>)
 8007554:	f845 4022 	str.w	r4, [r5, r2, lsl #2]
 8007558:	701f      	strb	r7, [r3, #0]
 800755a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800755c:	2000e62c 	.word	0x2000e62c
 8007560:	2000e648 	.word	0x2000e648
 8007564:	2000e630 	.word	0x2000e630

08007568 <WM_ReleaseCapture>:
 8007568:	f7ff bfca 	b.w	8007500 <WM__ReleaseCapture>

0800756c <WM_SetCallback>:
 800756c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800756e:	460e      	mov	r6, r1
 8007570:	4605      	mov	r5, r0
 8007572:	b168      	cbz	r0, 8007590 <WM_SetCallback+0x24>
 8007574:	f006 fae2 	bl	800db3c <GUI_ALLOC_LockH>
 8007578:	4602      	mov	r2, r0
 800757a:	a802      	add	r0, sp, #8
 800757c:	6914      	ldr	r4, [r2, #16]
 800757e:	f840 2d04 	str.w	r2, [r0, #-4]!
 8007582:	6116      	str	r6, [r2, #16]
 8007584:	f006 fae8 	bl	800db58 <GUI_ALLOC_UnlockH>
 8007588:	4628      	mov	r0, r5
 800758a:	f000 ff3d 	bl	8008408 <WM_InvalidateWindow>
 800758e:	e000      	b.n	8007592 <WM_SetCallback+0x26>
 8007590:	4604      	mov	r4, r0
 8007592:	4620      	mov	r0, r4
 8007594:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

08007596 <WM_SendMessageNoPara>:
 8007596:	f007 be45 	b.w	800f224 <WM__SendMessageNoPara>

0800759a <WM_ResizeWindow>:
 800759a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800759c:	ea52 0301 	orrs.w	r3, r2, r1
 80075a0:	b08b      	sub	sp, #44	; 0x2c
 80075a2:	4606      	mov	r6, r0
 80075a4:	460c      	mov	r4, r1
 80075a6:	4615      	mov	r5, r2
 80075a8:	d06f      	beq.n	800768a <WM_ResizeWindow+0xf0>
 80075aa:	2800      	cmp	r0, #0
 80075ac:	d06d      	beq.n	800768a <WM_ResizeWindow+0xf0>
 80075ae:	f006 fac5 	bl	800db3c <GUI_ALLOC_LockH>
 80075b2:	4603      	mov	r3, r0
 80075b4:	9003      	str	r0, [sp, #12]
 80075b6:	c803      	ldmia	r0, {r0, r1}
 80075b8:	aa04      	add	r2, sp, #16
 80075ba:	af06      	add	r7, sp, #24
 80075bc:	e882 0003 	stmia.w	r2, {r0, r1}
 80075c0:	e887 0003 	stmia.w	r7, {r0, r1}
 80075c4:	b17c      	cbz	r4, 80075e6 <WM_ResizeWindow+0x4c>
 80075c6:	6a98      	ldr	r0, [r3, #40]	; 0x28
 80075c8:	f400 7120 	and.w	r1, r0, #640	; 0x280
 80075cc:	2980      	cmp	r1, #128	; 0x80
 80075ce:	d105      	bne.n	80075dc <WM_ResizeWindow+0x42>
 80075d0:	f8bd 7018 	ldrh.w	r7, [sp, #24]
 80075d4:	1b38      	subs	r0, r7, r4
 80075d6:	f8ad 0018 	strh.w	r0, [sp, #24]
 80075da:	e004      	b.n	80075e6 <WM_ResizeWindow+0x4c>
 80075dc:	f8bd 201c 	ldrh.w	r2, [sp, #28]
 80075e0:	18a4      	adds	r4, r4, r2
 80075e2:	f8ad 401c 	strh.w	r4, [sp, #28]
 80075e6:	b185      	cbz	r5, 800760a <WM_ResizeWindow+0x70>
 80075e8:	6a99      	ldr	r1, [r3, #40]	; 0x28
 80075ea:	f401 62a0 	and.w	r2, r1, #1280	; 0x500
 80075ee:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 80075f2:	d105      	bne.n	8007600 <WM_ResizeWindow+0x66>
 80075f4:	f8bd 701a 	ldrh.w	r7, [sp, #26]
 80075f8:	1b78      	subs	r0, r7, r5
 80075fa:	f8ad 001a 	strh.w	r0, [sp, #26]
 80075fe:	e004      	b.n	800760a <WM_ResizeWindow+0x70>
 8007600:	f8bd 401e 	ldrh.w	r4, [sp, #30]
 8007604:	192d      	adds	r5, r5, r4
 8007606:	f8ad 501e 	strh.w	r5, [sp, #30]
 800760a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800760c:	03da      	lsls	r2, r3, #15
 800760e:	d502      	bpl.n	8007616 <WM_ResizeWindow+0x7c>
 8007610:	4630      	mov	r0, r6
 8007612:	f000 fd79 	bl	8008108 <WM__InvalidateDrawAndDescs>
 8007616:	aa06      	add	r2, sp, #24
 8007618:	e892 0003 	ldmia.w	r2, {r0, r1}
 800761c:	9c03      	ldr	r4, [sp, #12]
 800761e:	e884 0003 	stmia.w	r4, {r0, r1}
 8007622:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8007624:	078b      	lsls	r3, r1, #30
 8007626:	d509      	bpl.n	800763c <WM_ResizeWindow+0xa2>
 8007628:	a808      	add	r0, sp, #32
 800762a:	a904      	add	r1, sp, #16
 800762c:	f005 f826 	bl	800c67c <GUI_MergeRect>
 8007630:	9a03      	ldr	r2, [sp, #12]
 8007632:	a808      	add	r0, sp, #32
 8007634:	6991      	ldr	r1, [r2, #24]
 8007636:	6a12      	ldr	r2, [r2, #32]
 8007638:	f000 fe61 	bl	80082fe <WM__InvalidateRectEx>
 800763c:	f9bd e01e 	ldrsh.w	lr, [sp, #30]
 8007640:	f9bd 401c 	ldrsh.w	r4, [sp, #28]
 8007644:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8007648:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 800764c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 8007650:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 8007654:	f9bd 501a 	ldrsh.w	r5, [sp, #26]
 8007658:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 800765c:	ebc0 000e 	rsb	r0, r0, lr
 8007660:	1ae3      	subs	r3, r4, r3
 8007662:	ac0a      	add	r4, sp, #40	; 0x28
 8007664:	1aaa      	subs	r2, r5, r2
 8007666:	9000      	str	r0, [sp, #0]
 8007668:	1a79      	subs	r1, r7, r1
 800766a:	9803      	ldr	r0, [sp, #12]
 800766c:	f007 fd58 	bl	800f120 <WM__UpdateChildPositions>
 8007670:	f854 1d1c 	ldr.w	r1, [r4, #-28]!
 8007674:	f101 0008 	add.w	r0, r1, #8
 8007678:	f004 fa26 	bl	800bac8 <GUI__IntersectRect>
 800767c:	4630      	mov	r0, r6
 800767e:	2105      	movs	r1, #5
 8007680:	f000 fe70 	bl	8008364 <WM__SendMsgNoData>
 8007684:	4620      	mov	r0, r4
 8007686:	f006 fa67 	bl	800db58 <GUI_ALLOC_UnlockH>
 800768a:	b00b      	add	sp, #44	; 0x2c
 800768c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800768e <WM_NotifyParent>:
 800768e:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8007690:	2326      	movs	r3, #38	; 0x26
 8007692:	9103      	str	r1, [sp, #12]
 8007694:	4669      	mov	r1, sp
 8007696:	9300      	str	r3, [sp, #0]
 8007698:	f008 f886 	bl	800f7a8 <WM_SendToParent>
 800769c:	b005      	add	sp, #20
 800769e:	bd00      	pop	{pc}

080076a0 <WM_MoveChildTo>:
 80076a0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80076a2:	460f      	mov	r7, r1
 80076a4:	4616      	mov	r6, r2
 80076a6:	4605      	mov	r5, r0
 80076a8:	b320      	cbz	r0, 80076f4 <WM_MoveChildTo+0x54>
 80076aa:	f000 f93c 	bl	8007926 <WM_GetParent>
 80076ae:	b308      	cbz	r0, 80076f4 <WM_MoveChildTo+0x54>
 80076b0:	f006 fa44 	bl	800db3c <GUI_ALLOC_LockH>
 80076b4:	9000      	str	r0, [sp, #0]
 80076b6:	4628      	mov	r0, r5
 80076b8:	f006 fa40 	bl	800db3c <GUI_ALLOC_LockH>
 80076bc:	ab02      	add	r3, sp, #8
 80076be:	4604      	mov	r4, r0
 80076c0:	9001      	str	r0, [sp, #4]
 80076c2:	f853 0d08 	ldr.w	r0, [r3, #-8]!
 80076c6:	f9b4 2000 	ldrsh.w	r2, [r4]
 80076ca:	f9b0 1000 	ldrsh.w	r1, [r0]
 80076ce:	f9b0 0002 	ldrsh.w	r0, [r0, #2]
 80076d2:	1a8b      	subs	r3, r1, r2
 80076d4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80076d8:	1a42      	subs	r2, r0, r1
 80076da:	4668      	mov	r0, sp
 80076dc:	18ff      	adds	r7, r7, r3
 80076de:	18b6      	adds	r6, r6, r2
 80076e0:	f006 fa3a 	bl	800db58 <GUI_ALLOC_UnlockH>
 80076e4:	a801      	add	r0, sp, #4
 80076e6:	f006 fa37 	bl	800db58 <GUI_ALLOC_UnlockH>
 80076ea:	4628      	mov	r0, r5
 80076ec:	4639      	mov	r1, r7
 80076ee:	4632      	mov	r2, r6
 80076f0:	f000 f837 	bl	8007762 <WM__MoveWindow>
 80076f4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

080076f6 <_MoveDescendents>:
 80076f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80076fa:	b088      	sub	sp, #32
 80076fc:	4606      	mov	r6, r0
 80076fe:	460c      	mov	r4, r1
 8007700:	4615      	mov	r5, r2
 8007702:	a804      	add	r0, sp, #16
 8007704:	2100      	movs	r1, #0
 8007706:	2210      	movs	r2, #16
 8007708:	f00b fac4 	bl	8012c94 <memset>
 800770c:	b336      	cbz	r6, 800775c <_MoveDescendents+0x66>
 800770e:	4630      	mov	r0, r6
 8007710:	f006 fa14 	bl	800db3c <GUI_ALLOC_LockH>
 8007714:	4621      	mov	r1, r4
 8007716:	462a      	mov	r2, r5
 8007718:	9001      	str	r0, [sp, #4]
 800771a:	f004 ff9f 	bl	800c65c <GUI_MoveRect>
 800771e:	9801      	ldr	r0, [sp, #4]
 8007720:	4621      	mov	r1, r4
 8007722:	3008      	adds	r0, #8
 8007724:	462a      	mov	r2, r5
 8007726:	f004 ff99 	bl	800c65c <GUI_MoveRect>
 800772a:	a808      	add	r0, sp, #32
 800772c:	f850 2d1c 	ldr.w	r2, [r0, #-28]!
 8007730:	f8d2 801c 	ldr.w	r8, [r2, #28]
 8007734:	6a17      	ldr	r7, [r2, #32]
 8007736:	f006 fa0f 	bl	800db58 <GUI_ALLOC_UnlockH>
 800773a:	4640      	mov	r0, r8
 800773c:	4621      	mov	r1, r4
 800773e:	462a      	mov	r2, r5
 8007740:	f7ff ffd9 	bl	80076f6 <_MoveDescendents>
 8007744:	a802      	add	r0, sp, #8
 8007746:	2303      	movs	r3, #3
 8007748:	9007      	str	r0, [sp, #28]
 800774a:	a904      	add	r1, sp, #16
 800774c:	4630      	mov	r0, r6
 800774e:	9304      	str	r3, [sp, #16]
 8007750:	9402      	str	r4, [sp, #8]
 8007752:	9503      	str	r5, [sp, #12]
 8007754:	463e      	mov	r6, r7
 8007756:	f7ff fccd 	bl	80070f4 <WM__SendMessage>
 800775a:	e7d7      	b.n	800770c <_MoveDescendents+0x16>
 800775c:	b008      	add	sp, #32
 800775e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08007762 <WM__MoveWindow>:
 8007762:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007766:	b08a      	sub	sp, #40	; 0x28
 8007768:	4606      	mov	r6, r0
 800776a:	460d      	mov	r5, r1
 800776c:	4614      	mov	r4, r2
 800776e:	a806      	add	r0, sp, #24
 8007770:	2100      	movs	r1, #0
 8007772:	2210      	movs	r2, #16
 8007774:	f00b fa8e 	bl	8012c94 <memset>
 8007778:	2e00      	cmp	r6, #0
 800777a:	d041      	beq.n	8007800 <WM__MoveWindow+0x9e>
 800777c:	b90d      	cbnz	r5, 8007782 <WM__MoveWindow+0x20>
 800777e:	2c00      	cmp	r4, #0
 8007780:	d03e      	beq.n	8007800 <WM__MoveWindow+0x9e>
 8007782:	4630      	mov	r0, r6
 8007784:	f006 f9da 	bl	800db3c <GUI_ALLOC_LockH>
 8007788:	4603      	mov	r3, r0
 800778a:	9001      	str	r0, [sp, #4]
 800778c:	c803      	ldmia	r0, {r0, r1}
 800778e:	af02      	add	r7, sp, #8
 8007790:	e887 0003 	stmia.w	r7, {r0, r1}
 8007794:	4622      	mov	r2, r4
 8007796:	4618      	mov	r0, r3
 8007798:	4629      	mov	r1, r5
 800779a:	f004 ff5f 	bl	800c65c <GUI_MoveRect>
 800779e:	9801      	ldr	r0, [sp, #4]
 80077a0:	4629      	mov	r1, r5
 80077a2:	3008      	adds	r0, #8
 80077a4:	4622      	mov	r2, r4
 80077a6:	f004 ff59 	bl	800c65c <GUI_MoveRect>
 80077aa:	a80a      	add	r0, sp, #40	; 0x28
 80077ac:	f850 2d24 	ldr.w	r2, [r0, #-36]!
 80077b0:	f8d2 801c 	ldr.w	r8, [r2, #28]
 80077b4:	f006 f9d0 	bl	800db58 <GUI_ALLOC_UnlockH>
 80077b8:	4629      	mov	r1, r5
 80077ba:	4622      	mov	r2, r4
 80077bc:	4640      	mov	r0, r8
 80077be:	f7ff ff9a 	bl	80076f6 <_MoveDescendents>
 80077c2:	4630      	mov	r0, r6
 80077c4:	f006 f9ba 	bl	800db3c <GUI_ALLOC_LockH>
 80077c8:	6a81      	ldr	r1, [r0, #40]	; 0x28
 80077ca:	9001      	str	r0, [sp, #4]
 80077cc:	078a      	lsls	r2, r1, #30
 80077ce:	d50a      	bpl.n	80077e6 <WM__MoveWindow+0x84>
 80077d0:	6981      	ldr	r1, [r0, #24]
 80077d2:	b141      	cbz	r1, 80077e6 <WM__MoveWindow+0x84>
 80077d4:	6a02      	ldr	r2, [r0, #32]
 80077d6:	f000 fda9 	bl	800832c <WM__InvalidateParent>
 80077da:	9a01      	ldr	r2, [sp, #4]
 80077dc:	4638      	mov	r0, r7
 80077de:	6991      	ldr	r1, [r2, #24]
 80077e0:	6a12      	ldr	r2, [r2, #32]
 80077e2:	f000 fda3 	bl	800832c <WM__InvalidateParent>
 80077e6:	a801      	add	r0, sp, #4
 80077e8:	f006 f9b6 	bl	800db58 <GUI_ALLOC_UnlockH>
 80077ec:	2003      	movs	r0, #3
 80077ee:	9006      	str	r0, [sp, #24]
 80077f0:	ab04      	add	r3, sp, #16
 80077f2:	4630      	mov	r0, r6
 80077f4:	a906      	add	r1, sp, #24
 80077f6:	9309      	str	r3, [sp, #36]	; 0x24
 80077f8:	9504      	str	r5, [sp, #16]
 80077fa:	9405      	str	r4, [sp, #20]
 80077fc:	f7ff fc7a 	bl	80070f4 <WM__SendMessage>
 8007800:	b00a      	add	sp, #40	; 0x28
 8007802:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08007806 <WM_MoveWindow>:
 8007806:	f7ff bfac 	b.w	8007762 <WM__MoveWindow>

0800780a <WM_DisableMemdev>:
 800780a:	b508      	push	{r3, lr}
 800780c:	b138      	cbz	r0, 800781e <WM_DisableMemdev+0x14>
 800780e:	f006 f98b 	bl	800db28 <GUI_ALLOC_h2p>
 8007812:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8007814:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 8007818:	f021 0204 	bic.w	r2, r1, #4
 800781c:	6282      	str	r2, [r0, #40]	; 0x28
 800781e:	bd08      	pop	{r3, pc}

08007820 <WM_IsWindow>:
 8007820:	f000 bc62 	b.w	80080e8 <WM__IsWindow>

08007824 <WM_IsFocussable>:
 8007824:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8007826:	b150      	cbz	r0, 800783e <WM_IsFocussable+0x1a>
 8007828:	2100      	movs	r1, #0
 800782a:	aa04      	add	r2, sp, #16
 800782c:	9103      	str	r1, [sp, #12]
 800782e:	231f      	movs	r3, #31
 8007830:	4669      	mov	r1, sp
 8007832:	f842 3d10 	str.w	r3, [r2, #-16]!
 8007836:	f000 fd91 	bl	800835c <WM_SendMessage>
 800783a:	9803      	ldr	r0, [sp, #12]
 800783c:	e7ff      	b.n	800783e <WM_IsFocussable+0x1a>
 800783e:	b005      	add	sp, #20
 8007840:	bd00      	pop	{pc}

08007842 <WM_HideWindow>:
 8007842:	b513      	push	{r0, r1, r4, lr}
 8007844:	b188      	cbz	r0, 800786a <WM_HideWindow+0x28>
 8007846:	f006 f979 	bl	800db3c <GUI_ALLOC_LockH>
 800784a:	6a82      	ldr	r2, [r0, #40]	; 0x28
 800784c:	ac02      	add	r4, sp, #8
 800784e:	0791      	lsls	r1, r2, #30
 8007850:	f844 0d04 	str.w	r0, [r4, #-4]!
 8007854:	d506      	bpl.n	8007864 <WM_HideWindow+0x22>
 8007856:	f022 0102 	bic.w	r1, r2, #2
 800785a:	6281      	str	r1, [r0, #40]	; 0x28
 800785c:	6a02      	ldr	r2, [r0, #32]
 800785e:	6981      	ldr	r1, [r0, #24]
 8007860:	f000 fd4d 	bl	80082fe <WM__InvalidateRectEx>
 8007864:	4620      	mov	r0, r4
 8007866:	f006 f977 	bl	800db58 <GUI_ALLOC_UnlockH>
 800786a:	bd1c      	pop	{r2, r3, r4, pc}

0800786c <WM_HasFocus>:
 800786c:	4b04      	ldr	r3, [pc, #16]	; (8007880 <WM_HasFocus+0x14>)
 800786e:	4905      	ldr	r1, [pc, #20]	; (8007884 <WM_HasFocus+0x18>)
 8007870:	681a      	ldr	r2, [r3, #0]
 8007872:	f851 3022 	ldr.w	r3, [r1, r2, lsl #2]
 8007876:	1ac2      	subs	r2, r0, r3
 8007878:	4250      	negs	r0, r2
 800787a:	4150      	adcs	r0, r2
 800787c:	4770      	bx	lr
 800787e:	bf00      	nop
 8007880:	2000e62c 	.word	0x2000e62c
 8007884:	2000e61c 	.word	0x2000e61c

08007888 <WM_HasCaptured>:
 8007888:	4b04      	ldr	r3, [pc, #16]	; (800789c <WM_HasCaptured+0x14>)
 800788a:	4905      	ldr	r1, [pc, #20]	; (80078a0 <WM_HasCaptured+0x18>)
 800788c:	681a      	ldr	r2, [r3, #0]
 800788e:	f851 3022 	ldr.w	r3, [r1, r2, lsl #2]
 8007892:	1ac2      	subs	r2, r0, r3
 8007894:	4250      	negs	r0, r2
 8007896:	4150      	adcs	r0, r2
 8007898:	4770      	bx	lr
 800789a:	bf00      	nop
 800789c:	2000e62c 	.word	0x2000e62c
 80078a0:	2000e648 	.word	0x2000e648

080078a4 <WM__GetWindowSizeX>:
 80078a4:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 80078a8:	f9b0 3000 	ldrsh.w	r3, [r0]
 80078ac:	1ad0      	subs	r0, r2, r3
 80078ae:	3001      	adds	r0, #1
 80078b0:	4770      	bx	lr

080078b2 <WM__GetWindowSizeY>:
 80078b2:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80078b6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80078ba:	1ad0      	subs	r0, r2, r3
 80078bc:	3001      	adds	r0, #1
 80078be:	4770      	bx	lr

080078c0 <WM_GetWindowSizeX>:
 80078c0:	b513      	push	{r0, r1, r4, lr}
 80078c2:	b908      	cbnz	r0, 80078c8 <WM_GetWindowSizeX+0x8>
 80078c4:	f000 ff1a 	bl	80086fc <WM_GetActiveWindow>
 80078c8:	f006 f938 	bl	800db3c <GUI_ALLOC_LockH>
 80078cc:	ab02      	add	r3, sp, #8
 80078ce:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80078d2:	f9b0 2000 	ldrsh.w	r2, [r0]
 80078d6:	f843 0d04 	str.w	r0, [r3, #-4]!
 80078da:	1aa0      	subs	r0, r4, r2
 80078dc:	1c44      	adds	r4, r0, #1
 80078de:	4618      	mov	r0, r3
 80078e0:	f006 f93a 	bl	800db58 <GUI_ALLOC_UnlockH>
 80078e4:	4620      	mov	r0, r4
 80078e6:	bd1c      	pop	{r2, r3, r4, pc}

080078e8 <WM_GetWindowSizeY>:
 80078e8:	b513      	push	{r0, r1, r4, lr}
 80078ea:	b908      	cbnz	r0, 80078f0 <WM_GetWindowSizeY+0x8>
 80078ec:	f000 ff06 	bl	80086fc <WM_GetActiveWindow>
 80078f0:	f006 f924 	bl	800db3c <GUI_ALLOC_LockH>
 80078f4:	ab02      	add	r3, sp, #8
 80078f6:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 80078fa:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80078fe:	f843 0d04 	str.w	r0, [r3, #-4]!
 8007902:	1aa0      	subs	r0, r4, r2
 8007904:	1c44      	adds	r4, r0, #1
 8007906:	4618      	mov	r0, r3
 8007908:	f006 f926 	bl	800db58 <GUI_ALLOC_UnlockH>
 800790c:	4620      	mov	r0, r4
 800790e:	bd1c      	pop	{r2, r3, r4, pc}

08007910 <WM_GetWindowRectEx>:
 8007910:	b510      	push	{r4, lr}
 8007912:	460c      	mov	r4, r1
 8007914:	b130      	cbz	r0, 8007924 <WM_GetWindowRectEx+0x14>
 8007916:	b129      	cbz	r1, 8007924 <WM_GetWindowRectEx+0x14>
 8007918:	f006 f906 	bl	800db28 <GUI_ALLOC_h2p>
 800791c:	4603      	mov	r3, r0
 800791e:	cb03      	ldmia	r3!, {r0, r1}
 8007920:	6020      	str	r0, [r4, #0]
 8007922:	6061      	str	r1, [r4, #4]
 8007924:	bd10      	pop	{r4, pc}

08007926 <WM_GetParent>:
 8007926:	b508      	push	{r3, lr}
 8007928:	4603      	mov	r3, r0
 800792a:	b110      	cbz	r0, 8007932 <WM_GetParent+0xc>
 800792c:	f006 f8fc 	bl	800db28 <GUI_ALLOC_h2p>
 8007930:	6983      	ldr	r3, [r0, #24]
 8007932:	4618      	mov	r0, r3
 8007934:	bd08      	pop	{r3, pc}

08007936 <WM_GetNextSibling>:
 8007936:	b508      	push	{r3, lr}
 8007938:	4603      	mov	r3, r0
 800793a:	b110      	cbz	r0, 8007942 <WM_GetNextSibling+0xc>
 800793c:	f006 f8f4 	bl	800db28 <GUI_ALLOC_h2p>
 8007940:	6a03      	ldr	r3, [r0, #32]
 8007942:	4618      	mov	r0, r3
 8007944:	bd08      	pop	{r3, pc}

08007946 <WM_GetId>:
 8007946:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8007948:	4604      	mov	r4, r0
 800794a:	2100      	movs	r1, #0
 800794c:	2210      	movs	r2, #16
 800794e:	4668      	mov	r0, sp
 8007950:	f00b f9a0 	bl	8012c94 <memset>
 8007954:	2315      	movs	r3, #21
 8007956:	4620      	mov	r0, r4
 8007958:	4669      	mov	r1, sp
 800795a:	9300      	str	r3, [sp, #0]
 800795c:	f000 fcfe 	bl	800835c <WM_SendMessage>
 8007960:	9803      	ldr	r0, [sp, #12]
 8007962:	b004      	add	sp, #16
 8007964:	bd10      	pop	{r4, pc}
	...

08007968 <WM_GetFocussedWindow>:
 8007968:	4b02      	ldr	r3, [pc, #8]	; (8007974 <WM_GetFocussedWindow+0xc>)
 800796a:	4803      	ldr	r0, [pc, #12]	; (8007978 <WM_GetFocussedWindow+0x10>)
 800796c:	681a      	ldr	r2, [r3, #0]
 800796e:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 8007972:	4770      	bx	lr
 8007974:	2000e62c 	.word	0x2000e62c
 8007978:	2000e61c 	.word	0x2000e61c

0800797c <WM_GetFirstChild>:
 800797c:	b508      	push	{r3, lr}
 800797e:	4603      	mov	r3, r0
 8007980:	b110      	cbz	r0, 8007988 <WM_GetFirstChild+0xc>
 8007982:	f006 f8d1 	bl	800db28 <GUI_ALLOC_h2p>
 8007986:	69c3      	ldr	r3, [r0, #28]
 8007988:	4618      	mov	r0, r3
 800798a:	bd08      	pop	{r3, pc}

0800798c <_GetDialogItem>:
 800798c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800798e:	460d      	mov	r5, r1
 8007990:	f006 f8d4 	bl	800db3c <GUI_ALLOC_LockH>
 8007994:	ab02      	add	r3, sp, #8
 8007996:	69c4      	ldr	r4, [r0, #28]
 8007998:	f843 0d04 	str.w	r0, [r3, #-4]!
 800799c:	4618      	mov	r0, r3
 800799e:	f006 f8db 	bl	800db58 <GUI_ALLOC_UnlockH>
 80079a2:	b17c      	cbz	r4, 80079c4 <_GetDialogItem+0x38>
 80079a4:	4620      	mov	r0, r4
 80079a6:	f7ff ffce 	bl	8007946 <WM_GetId>
 80079aa:	42a8      	cmp	r0, r5
 80079ac:	d00a      	beq.n	80079c4 <_GetDialogItem+0x38>
 80079ae:	4620      	mov	r0, r4
 80079b0:	4629      	mov	r1, r5
 80079b2:	f7ff ffeb 	bl	800798c <_GetDialogItem>
 80079b6:	b920      	cbnz	r0, 80079c2 <_GetDialogItem+0x36>
 80079b8:	4620      	mov	r0, r4
 80079ba:	f006 f8b5 	bl	800db28 <GUI_ALLOC_h2p>
 80079be:	6a04      	ldr	r4, [r0, #32]
 80079c0:	e7ef      	b.n	80079a2 <_GetDialogItem+0x16>
 80079c2:	4604      	mov	r4, r0
 80079c4:	4620      	mov	r0, r4
 80079c6:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

080079c8 <WM_GetDialogItem>:
 80079c8:	b108      	cbz	r0, 80079ce <WM_GetDialogItem+0x6>
 80079ca:	f7ff bfdf 	b.w	800798c <_GetDialogItem>
 80079ce:	4770      	bx	lr

080079d0 <WM_GetDesktopWindow>:
 80079d0:	4b03      	ldr	r3, [pc, #12]	; (80079e0 <WM_GetDesktopWindow+0x10>)
 80079d2:	4904      	ldr	r1, [pc, #16]	; (80079e4 <WM_GetDesktopWindow+0x14>)
 80079d4:	6818      	ldr	r0, [r3, #0]
 80079d6:	7c42      	ldrb	r2, [r0, #17]
 80079d8:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80079dc:	4770      	bx	lr
 80079de:	bf00      	nop
 80079e0:	20000278 	.word	0x20000278
 80079e4:	2000e60c 	.word	0x2000e60c

080079e8 <WM_GetClientWindow>:
 80079e8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80079ea:	a904      	add	r1, sp, #16
 80079ec:	2217      	movs	r2, #23
 80079ee:	2300      	movs	r3, #0
 80079f0:	f841 2d10 	str.w	r2, [r1, #-16]!
 80079f4:	4669      	mov	r1, sp
 80079f6:	9303      	str	r3, [sp, #12]
 80079f8:	f000 fcb0 	bl	800835c <WM_SendMessage>
 80079fc:	9803      	ldr	r0, [sp, #12]
 80079fe:	b005      	add	sp, #20
 8007a00:	bd00      	pop	{pc}

08007a02 <WM__GetClientRectEx>:
 8007a02:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007a04:	460d      	mov	r5, r1
 8007a06:	b158      	cbz	r0, 8007a20 <WM__GetClientRectEx+0x1e>
 8007a08:	b151      	cbz	r1, 8007a20 <WM__GetClientRectEx+0x1e>
 8007a0a:	f006 f897 	bl	800db3c <GUI_ALLOC_LockH>
 8007a0e:	ac02      	add	r4, sp, #8
 8007a10:	4629      	mov	r1, r5
 8007a12:	f844 0d04 	str.w	r0, [r4, #-4]!
 8007a16:	f000 fcaf 	bl	8008378 <WM__GetClientRectWin>
 8007a1a:	4620      	mov	r0, r4
 8007a1c:	f006 f89c 	bl	800db58 <GUI_ALLOC_UnlockH>
 8007a20:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08007a22 <WM_GetClientRectEx>:
 8007a22:	f7ff bfee 	b.w	8007a02 <WM__GetClientRectEx>
	...

08007a28 <WM_GetClientRect>:
 8007a28:	4b04      	ldr	r3, [pc, #16]	; (8007a3c <WM_GetClientRect+0x14>)
 8007a2a:	4601      	mov	r1, r0
 8007a2c:	6818      	ldr	r0, [r3, #0]
 8007a2e:	b910      	cbnz	r0, 8007a36 <WM_GetClientRect+0xe>
 8007a30:	4803      	ldr	r0, [pc, #12]	; (8007a40 <WM_GetClientRect+0x18>)
 8007a32:	6802      	ldr	r2, [r0, #0]
 8007a34:	6c90      	ldr	r0, [r2, #72]	; 0x48
 8007a36:	f7ff bfe4 	b.w	8007a02 <WM__GetClientRectEx>
 8007a3a:	bf00      	nop
 8007a3c:	2000e608 	.word	0x2000e608
 8007a40:	20000278 	.word	0x20000278

08007a44 <WM_GetBkColor>:
 8007a44:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8007a46:	b140      	cbz	r0, 8007a5a <WM_GetBkColor+0x16>
 8007a48:	a904      	add	r1, sp, #16
 8007a4a:	2322      	movs	r3, #34	; 0x22
 8007a4c:	f841 3d10 	str.w	r3, [r1, #-16]!
 8007a50:	4669      	mov	r1, sp
 8007a52:	f000 fc83 	bl	800835c <WM_SendMessage>
 8007a56:	9803      	ldr	r0, [sp, #12]
 8007a58:	e001      	b.n	8007a5e <WM_GetBkColor+0x1a>
 8007a5a:	f06f 4070 	mvn.w	r0, #4026531840	; 0xf0000000
 8007a5e:	b005      	add	sp, #20
 8007a60:	bd00      	pop	{pc}

08007a62 <_cbInvalidateOne>:
 8007a62:	f000 bcd1 	b.w	8008408 <WM_InvalidateWindow>
	...

08007a68 <WM_BringToTop>:
 8007a68:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007a6a:	4604      	mov	r4, r0
 8007a6c:	2800      	cmp	r0, #0
 8007a6e:	d032      	beq.n	8007ad6 <WM_BringToTop+0x6e>
 8007a70:	f006 f864 	bl	800db3c <GUI_ALLOC_LockH>
 8007a74:	4603      	mov	r3, r0
 8007a76:	9000      	str	r0, [sp, #0]
 8007a78:	6a00      	ldr	r0, [r0, #32]
 8007a7a:	b908      	cbnz	r0, 8007a80 <WM_BringToTop+0x18>
 8007a7c:	4668      	mov	r0, sp
 8007a7e:	e00e      	b.n	8007a9e <WM_BringToTop+0x36>
 8007a80:	6a99      	ldr	r1, [r3, #40]	; 0x28
 8007a82:	070a      	lsls	r2, r1, #28
 8007a84:	d411      	bmi.n	8007aaa <WM_BringToTop+0x42>
 8007a86:	f006 f859 	bl	800db3c <GUI_ALLOC_LockH>
 8007a8a:	ad02      	add	r5, sp, #8
 8007a8c:	f845 0d04 	str.w	r0, [r5, #-4]!
 8007a90:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8007a92:	0703      	lsls	r3, r0, #28
 8007a94:	d506      	bpl.n	8007aa4 <WM_BringToTop+0x3c>
 8007a96:	4668      	mov	r0, sp
 8007a98:	f006 f85e 	bl	800db58 <GUI_ALLOC_UnlockH>
 8007a9c:	4628      	mov	r0, r5
 8007a9e:	f006 f85b 	bl	800db58 <GUI_ALLOC_UnlockH>
 8007aa2:	e018      	b.n	8007ad6 <WM_BringToTop+0x6e>
 8007aa4:	4628      	mov	r0, r5
 8007aa6:	f006 f857 	bl	800db58 <GUI_ALLOC_UnlockH>
 8007aaa:	aa02      	add	r2, sp, #8
 8007aac:	4668      	mov	r0, sp
 8007aae:	f852 5d08 	ldr.w	r5, [r2, #-8]!
 8007ab2:	69ad      	ldr	r5, [r5, #24]
 8007ab4:	f006 f850 	bl	800db58 <GUI_ALLOC_UnlockH>
 8007ab8:	4620      	mov	r0, r4
 8007aba:	f000 faa3 	bl	8008004 <WM__RemoveWindowFromList>
 8007abe:	4629      	mov	r1, r5
 8007ac0:	4620      	mov	r0, r4
 8007ac2:	f000 fa51 	bl	8007f68 <WM__InsertWindowIntoList>
 8007ac6:	4620      	mov	r0, r4
 8007ac8:	f000 fc9e 	bl	8008408 <WM_InvalidateWindow>
 8007acc:	4620      	mov	r0, r4
 8007ace:	4902      	ldr	r1, [pc, #8]	; (8007ad8 <WM_BringToTop+0x70>)
 8007ad0:	2200      	movs	r2, #0
 8007ad2:	f007 ff05 	bl	800f8e0 <WM_ForEachDesc>
 8007ad6:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 8007ad8:	08007a63 	.word	0x08007a63

08007adc <_OnExit>:
 8007adc:	4a0a      	ldr	r2, [pc, #40]	; (8007b08 <_OnExit+0x2c>)
 8007ade:	480b      	ldr	r0, [pc, #44]	; (8007b0c <_OnExit+0x30>)
 8007ae0:	490b      	ldr	r1, [pc, #44]	; (8007b10 <_OnExit+0x34>)
 8007ae2:	2300      	movs	r3, #0
 8007ae4:	7013      	strb	r3, [r2, #0]
 8007ae6:	6003      	str	r3, [r0, #0]
 8007ae8:	600b      	str	r3, [r1, #0]
 8007aea:	480a      	ldr	r0, [pc, #40]	; (8007b14 <_OnExit+0x38>)
 8007aec:	4a0a      	ldr	r2, [pc, #40]	; (8007b18 <_OnExit+0x3c>)
 8007aee:	490b      	ldr	r1, [pc, #44]	; (8007b1c <_OnExit+0x40>)
 8007af0:	6003      	str	r3, [r0, #0]
 8007af2:	6013      	str	r3, [r2, #0]
 8007af4:	600b      	str	r3, [r1, #0]
 8007af6:	6043      	str	r3, [r0, #4]
 8007af8:	6053      	str	r3, [r2, #4]
 8007afa:	4809      	ldr	r0, [pc, #36]	; (8007b20 <_OnExit+0x44>)
 8007afc:	4a09      	ldr	r2, [pc, #36]	; (8007b24 <_OnExit+0x48>)
 8007afe:	490a      	ldr	r1, [pc, #40]	; (8007b28 <_OnExit+0x4c>)
 8007b00:	6003      	str	r3, [r0, #0]
 8007b02:	6013      	str	r3, [r2, #0]
 8007b04:	600b      	str	r3, [r1, #0]
 8007b06:	4770      	bx	lr
 8007b08:	2000e058 	.word	0x2000e058
 8007b0c:	2000e030 	.word	0x2000e030
 8007b10:	2000e640 	.word	0x2000e640
 8007b14:	2000e61c 	.word	0x2000e61c
 8007b18:	2000e648 	.word	0x2000e648
 8007b1c:	2000e654 	.word	0x2000e654
 8007b20:	2000e608 	.word	0x2000e608
 8007b24:	2000e634 	.word	0x2000e634
 8007b28:	2000e644 	.word	0x2000e644

08007b2c <_Paint1>:
 8007b2c:	b510      	push	{r4, lr}
 8007b2e:	4604      	mov	r4, r0
 8007b30:	f005 fffa 	bl	800db28 <GUI_ALLOC_h2p>
 8007b34:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8007b36:	4a04      	ldr	r2, [pc, #16]	; (8007b48 <_Paint1+0x1c>)
 8007b38:	4904      	ldr	r1, [pc, #16]	; (8007b4c <_Paint1+0x20>)
 8007b3a:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8007b3e:	bf08      	it	eq
 8007b40:	4611      	moveq	r1, r2
 8007b42:	4620      	mov	r0, r4
 8007b44:	4788      	blx	r1
 8007b46:	bd10      	pop	{r4, pc}
 8007b48:	0800899d 	.word	0x0800899d
 8007b4c:	08008f5d 	.word	0x08008f5d

08007b50 <_Paint1Trans>:
 8007b50:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007b54:	4c21      	ldr	r4, [pc, #132]	; (8007bdc <_Paint1Trans+0x8c>)
 8007b56:	6823      	ldr	r3, [r4, #0]
 8007b58:	4605      	mov	r5, r0
 8007b5a:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8007b5c:	f005 ffee 	bl	800db3c <GUI_ALLOC_LockH>
 8007b60:	9000      	str	r0, [sp, #0]
 8007b62:	4628      	mov	r0, r5
 8007b64:	f005 ffea 	bl	800db3c <GUI_ALLOC_LockH>
 8007b68:	4601      	mov	r1, r0
 8007b6a:	9001      	str	r0, [sp, #4]
 8007b6c:	9800      	ldr	r0, [sp, #0]
 8007b6e:	3008      	adds	r0, #8
 8007b70:	f004 fc78 	bl	800c464 <GUI_RectsIntersect>
 8007b74:	4606      	mov	r6, r0
 8007b76:	b340      	cbz	r0, 8007bca <_Paint1Trans+0x7a>
 8007b78:	ae02      	add	r6, sp, #8
 8007b7a:	6820      	ldr	r0, [r4, #0]
 8007b7c:	9901      	ldr	r1, [sp, #4]
 8007b7e:	f856 2d08 	ldr.w	r2, [r6, #-8]!
 8007b82:	f8d0 804c 	ldr.w	r8, [r0, #76]	; 0x4c
 8007b86:	6d07      	ldr	r7, [r0, #80]	; 0x50
 8007b88:	4e15      	ldr	r6, [pc, #84]	; (8007be0 <_Paint1Trans+0x90>)
 8007b8a:	f101 0008 	add.w	r0, r1, #8
 8007b8e:	3208      	adds	r2, #8
 8007b90:	f003 ff68 	bl	800ba64 <GUI__IntersectRects>
 8007b94:	4668      	mov	r0, sp
 8007b96:	f005 ffdf 	bl	800db58 <GUI_ALLOC_UnlockH>
 8007b9a:	a802      	add	r0, sp, #8
 8007b9c:	6823      	ldr	r3, [r4, #0]
 8007b9e:	f850 2d04 	ldr.w	r2, [r0, #-4]!
 8007ba2:	6035      	str	r5, [r6, #0]
 8007ba4:	f9b2 1000 	ldrsh.w	r1, [r2]
 8007ba8:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 8007bac:	64d9      	str	r1, [r3, #76]	; 0x4c
 8007bae:	651a      	str	r2, [r3, #80]	; 0x50
 8007bb0:	f005 ffd2 	bl	800db58 <GUI_ALLOC_UnlockH>
 8007bb4:	4628      	mov	r0, r5
 8007bb6:	f7ff ffb9 	bl	8007b2c <_Paint1>
 8007bba:	6823      	ldr	r3, [r4, #0]
 8007bbc:	2000      	movs	r0, #0
 8007bbe:	6030      	str	r0, [r6, #0]
 8007bc0:	f8c3 804c 	str.w	r8, [r3, #76]	; 0x4c
 8007bc4:	651f      	str	r7, [r3, #80]	; 0x50
 8007bc6:	2001      	movs	r0, #1
 8007bc8:	e006      	b.n	8007bd8 <_Paint1Trans+0x88>
 8007bca:	4668      	mov	r0, sp
 8007bcc:	f005 ffc4 	bl	800db58 <GUI_ALLOC_UnlockH>
 8007bd0:	a801      	add	r0, sp, #4
 8007bd2:	f005 ffc1 	bl	800db58 <GUI_ALLOC_UnlockH>
 8007bd6:	4630      	mov	r0, r6
 8007bd8:	e8bd 81fc 	ldmia.w	sp!, {r2, r3, r4, r5, r6, r7, r8, pc}
 8007bdc:	20000278 	.word	0x20000278
 8007be0:	2000e608 	.word	0x2000e608

08007be4 <_PaintTransChildren>:
 8007be4:	b530      	push	{r4, r5, lr}
 8007be6:	b085      	sub	sp, #20
 8007be8:	4605      	mov	r5, r0
 8007bea:	f005 ffa7 	bl	800db3c <GUI_ALLOC_LockH>
 8007bee:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8007bf0:	9001      	str	r0, [sp, #4]
 8007bf2:	0793      	lsls	r3, r2, #30
 8007bf4:	d404      	bmi.n	8007c00 <_PaintTransChildren+0x1c>
 8007bf6:	a801      	add	r0, sp, #4
 8007bf8:	f005 ffae 	bl	800db58 <GUI_ALLOC_UnlockH>
 8007bfc:	b005      	add	sp, #20
 8007bfe:	bd30      	pop	{r4, r5, pc}
 8007c00:	69c4      	ldr	r4, [r0, #28]
 8007c02:	2c00      	cmp	r4, #0
 8007c04:	d0f7      	beq.n	8007bf6 <_PaintTransChildren+0x12>
 8007c06:	4620      	mov	r0, r4
 8007c08:	f005 ff98 	bl	800db3c <GUI_ALLOC_LockH>
 8007c0c:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8007c0e:	9000      	str	r0, [sp, #0]
 8007c10:	f001 0203 	and.w	r2, r1, #3
 8007c14:	2a03      	cmp	r2, #3
 8007c16:	d133      	bne.n	8007c80 <_PaintTransChildren+0x9c>
 8007c18:	9901      	ldr	r1, [sp, #4]
 8007c1a:	3108      	adds	r1, #8
 8007c1c:	f004 fc22 	bl	800c464 <GUI_RectsIntersect>
 8007c20:	2800      	cmp	r0, #0
 8007c22:	d02d      	beq.n	8007c80 <_PaintTransChildren+0x9c>
 8007c24:	9801      	ldr	r0, [sp, #4]
 8007c26:	3008      	adds	r0, #8
 8007c28:	c803      	ldmia	r0, {r0, r1}
 8007c2a:	ab04      	add	r3, sp, #16
 8007c2c:	e903 0003 	stmdb	r3, {r0, r1}
 8007c30:	a801      	add	r0, sp, #4
 8007c32:	f005 ff91 	bl	800db58 <GUI_ALLOC_UnlockH>
 8007c36:	4668      	mov	r0, sp
 8007c38:	f005 ff8e 	bl	800db58 <GUI_ALLOC_UnlockH>
 8007c3c:	4620      	mov	r0, r4
 8007c3e:	f7ff ff87 	bl	8007b50 <_Paint1Trans>
 8007c42:	b170      	cbz	r0, 8007c62 <_PaintTransChildren+0x7e>
 8007c44:	4620      	mov	r0, r4
 8007c46:	f005 ff6f 	bl	800db28 <GUI_ALLOC_h2p>
 8007c4a:	9000      	str	r0, [sp, #0]
 8007c4c:	4620      	mov	r0, r4
 8007c4e:	f7ff ffc9 	bl	8007be4 <_PaintTransChildren>
 8007c52:	4620      	mov	r0, r4
 8007c54:	f005 ff68 	bl	800db28 <GUI_ALLOC_h2p>
 8007c58:	9000      	str	r0, [sp, #0]
 8007c5a:	4628      	mov	r0, r5
 8007c5c:	f005 ff64 	bl	800db28 <GUI_ALLOC_h2p>
 8007c60:	9001      	str	r0, [sp, #4]
 8007c62:	4628      	mov	r0, r5
 8007c64:	f005 ff6a 	bl	800db3c <GUI_ALLOC_LockH>
 8007c68:	9001      	str	r0, [sp, #4]
 8007c6a:	4620      	mov	r0, r4
 8007c6c:	f005 ff66 	bl	800db3c <GUI_ALLOC_LockH>
 8007c70:	a904      	add	r1, sp, #16
 8007c72:	9000      	str	r0, [sp, #0]
 8007c74:	9c01      	ldr	r4, [sp, #4]
 8007c76:	e911 0003 	ldmdb	r1, {r0, r1}
 8007c7a:	3408      	adds	r4, #8
 8007c7c:	e884 0003 	stmia.w	r4, {r0, r1}
 8007c80:	a804      	add	r0, sp, #16
 8007c82:	f850 2d10 	ldr.w	r2, [r0, #-16]!
 8007c86:	4668      	mov	r0, sp
 8007c88:	6a14      	ldr	r4, [r2, #32]
 8007c8a:	f005 ff65 	bl	800db58 <GUI_ALLOC_UnlockH>
 8007c8e:	e7b8      	b.n	8007c02 <_PaintTransChildren+0x1e>

08007c90 <_Findy1>:
 8007c90:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007c92:	4606      	mov	r6, r0
 8007c94:	b085      	sub	sp, #20
 8007c96:	460c      	mov	r4, r1
 8007c98:	4615      	mov	r5, r2
 8007c9a:	2e00      	cmp	r6, #0
 8007c9c:	d04c      	beq.n	8007d38 <_Findy1+0xa8>
 8007c9e:	4630      	mov	r0, r6
 8007ca0:	f005 ff4c 	bl	800db3c <GUI_ALLOC_LockH>
 8007ca4:	6a87      	ldr	r7, [r0, #40]	; 0x28
 8007ca6:	9001      	str	r0, [sp, #4]
 8007ca8:	07ba      	lsls	r2, r7, #30
 8007caa:	4601      	mov	r1, r0
 8007cac:	d53d      	bpl.n	8007d2a <_Findy1+0x9a>
 8007cae:	ae02      	add	r6, sp, #8
 8007cb0:	b125      	cbz	r5, 8007cbc <_Findy1+0x2c>
 8007cb2:	4630      	mov	r0, r6
 8007cb4:	462a      	mov	r2, r5
 8007cb6:	f003 fed5 	bl	800ba64 <GUI__IntersectRects>
 8007cba:	e002      	b.n	8007cc2 <_Findy1+0x32>
 8007cbc:	c803      	ldmia	r0, {r0, r1}
 8007cbe:	e886 0003 	stmia.w	r6, {r0, r1}
 8007cc2:	4620      	mov	r0, r4
 8007cc4:	4631      	mov	r1, r6
 8007cc6:	f004 fbcd 	bl	800c464 <GUI_RectsIntersect>
 8007cca:	b370      	cbz	r0, 8007d2a <_Findy1+0x9a>
 8007ccc:	f017 0f01 	tst.w	r7, #1
 8007cd0:	9b01      	ldr	r3, [sp, #4]
 8007cd2:	d11e      	bne.n	8007d12 <_Findy1+0x82>
 8007cd4:	b13d      	cbz	r5, 8007ce6 <_Findy1+0x56>
 8007cd6:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8007cda:	f9b5 0002 	ldrsh.w	r0, [r5, #2]
 8007cde:	4282      	cmp	r2, r0
 8007ce0:	bfa8      	it	ge
 8007ce2:	4610      	movge	r0, r2
 8007ce4:	e001      	b.n	8007cea <_Findy1+0x5a>
 8007ce6:	f9b3 0002 	ldrsh.w	r0, [r3, #2]
 8007cea:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8007cee:	f9b4 6006 	ldrsh.w	r6, [r4, #6]
 8007cf2:	4288      	cmp	r0, r1
 8007cf4:	dd06      	ble.n	8007d04 <_Findy1+0x74>
 8007cf6:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8007cfa:	b211      	sxth	r1, r2
 8007cfc:	428e      	cmp	r6, r1
 8007cfe:	db14      	blt.n	8007d2a <_Findy1+0x9a>
 8007d00:	1e53      	subs	r3, r2, #1
 8007d02:	e004      	b.n	8007d0e <_Findy1+0x7e>
 8007d04:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8007d08:	b218      	sxth	r0, r3
 8007d0a:	4286      	cmp	r6, r0
 8007d0c:	dd0d      	ble.n	8007d2a <_Findy1+0x9a>
 8007d0e:	80e3      	strh	r3, [r4, #6]
 8007d10:	e00b      	b.n	8007d2a <_Findy1+0x9a>
 8007d12:	69de      	ldr	r6, [r3, #28]
 8007d14:	b14e      	cbz	r6, 8007d2a <_Findy1+0x9a>
 8007d16:	4630      	mov	r0, r6
 8007d18:	4621      	mov	r1, r4
 8007d1a:	aa02      	add	r2, sp, #8
 8007d1c:	f7ff ffb8 	bl	8007c90 <_Findy1>
 8007d20:	4630      	mov	r0, r6
 8007d22:	f005 ff01 	bl	800db28 <GUI_ALLOC_h2p>
 8007d26:	6a06      	ldr	r6, [r0, #32]
 8007d28:	e7f4      	b.n	8007d14 <_Findy1+0x84>
 8007d2a:	a804      	add	r0, sp, #16
 8007d2c:	f850 6d0c 	ldr.w	r6, [r0, #-12]!
 8007d30:	6a36      	ldr	r6, [r6, #32]
 8007d32:	f005 ff11 	bl	800db58 <GUI_ALLOC_UnlockH>
 8007d36:	e7b0      	b.n	8007c9a <_Findy1+0xa>
 8007d38:	b005      	add	sp, #20
 8007d3a:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007d3c <_Findx0>:
 8007d3c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8007d40:	4605      	mov	r5, r0
 8007d42:	460e      	mov	r6, r1
 8007d44:	4617      	mov	r7, r2
 8007d46:	2400      	movs	r4, #0
 8007d48:	2d00      	cmp	r5, #0
 8007d4a:	d038      	beq.n	8007dbe <_Findx0+0x82>
 8007d4c:	4628      	mov	r0, r5
 8007d4e:	f005 fef5 	bl	800db3c <GUI_ALLOC_LockH>
 8007d52:	f8d0 8028 	ldr.w	r8, [r0, #40]	; 0x28
 8007d56:	9001      	str	r0, [sp, #4]
 8007d58:	f018 0f02 	tst.w	r8, #2
 8007d5c:	4601      	mov	r1, r0
 8007d5e:	d027      	beq.n	8007db0 <_Findx0+0x74>
 8007d60:	ad02      	add	r5, sp, #8
 8007d62:	b127      	cbz	r7, 8007d6e <_Findx0+0x32>
 8007d64:	4628      	mov	r0, r5
 8007d66:	463a      	mov	r2, r7
 8007d68:	f003 fe7c 	bl	800ba64 <GUI__IntersectRects>
 8007d6c:	e002      	b.n	8007d74 <_Findx0+0x38>
 8007d6e:	c803      	ldmia	r0, {r0, r1}
 8007d70:	e885 0003 	stmia.w	r5, {r0, r1}
 8007d74:	4630      	mov	r0, r6
 8007d76:	4629      	mov	r1, r5
 8007d78:	f004 fb74 	bl	800c464 <GUI_RectsIntersect>
 8007d7c:	b1c0      	cbz	r0, 8007db0 <_Findx0+0x74>
 8007d7e:	f018 0f01 	tst.w	r8, #1
 8007d82:	d105      	bne.n	8007d90 <_Findx0+0x54>
 8007d84:	f8bd 000c 	ldrh.w	r0, [sp, #12]
 8007d88:	1c41      	adds	r1, r0, #1
 8007d8a:	8031      	strh	r1, [r6, #0]
 8007d8c:	2401      	movs	r4, #1
 8007d8e:	e00f      	b.n	8007db0 <_Findx0+0x74>
 8007d90:	9b01      	ldr	r3, [sp, #4]
 8007d92:	69dd      	ldr	r5, [r3, #28]
 8007d94:	b165      	cbz	r5, 8007db0 <_Findx0+0x74>
 8007d96:	4628      	mov	r0, r5
 8007d98:	4631      	mov	r1, r6
 8007d9a:	aa02      	add	r2, sp, #8
 8007d9c:	f7ff ffce 	bl	8007d3c <_Findx0>
 8007da0:	2800      	cmp	r0, #0
 8007da2:	bf18      	it	ne
 8007da4:	2401      	movne	r4, #1
 8007da6:	4628      	mov	r0, r5
 8007da8:	f005 febe 	bl	800db28 <GUI_ALLOC_h2p>
 8007dac:	6a05      	ldr	r5, [r0, #32]
 8007dae:	e7f1      	b.n	8007d94 <_Findx0+0x58>
 8007db0:	a804      	add	r0, sp, #16
 8007db2:	f850 2d0c 	ldr.w	r2, [r0, #-12]!
 8007db6:	6a15      	ldr	r5, [r2, #32]
 8007db8:	f005 fece 	bl	800db58 <GUI_ALLOC_UnlockH>
 8007dbc:	e7c4      	b.n	8007d48 <_Findx0+0xc>
 8007dbe:	4620      	mov	r0, r4
 8007dc0:	b004      	add	sp, #16
 8007dc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08007dc6 <_Findx1>:
 8007dc6:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007dc8:	4604      	mov	r4, r0
 8007dca:	b085      	sub	sp, #20
 8007dcc:	460d      	mov	r5, r1
 8007dce:	4616      	mov	r6, r2
 8007dd0:	2c00      	cmp	r4, #0
 8007dd2:	d031      	beq.n	8007e38 <_Findx1+0x72>
 8007dd4:	4620      	mov	r0, r4
 8007dd6:	f005 feb1 	bl	800db3c <GUI_ALLOC_LockH>
 8007dda:	6a87      	ldr	r7, [r0, #40]	; 0x28
 8007ddc:	9001      	str	r0, [sp, #4]
 8007dde:	4601      	mov	r1, r0
 8007de0:	07b8      	lsls	r0, r7, #30
 8007de2:	d522      	bpl.n	8007e2a <_Findx1+0x64>
 8007de4:	ac02      	add	r4, sp, #8
 8007de6:	b126      	cbz	r6, 8007df2 <_Findx1+0x2c>
 8007de8:	4620      	mov	r0, r4
 8007dea:	4632      	mov	r2, r6
 8007dec:	f003 fe3a 	bl	800ba64 <GUI__IntersectRects>
 8007df0:	e002      	b.n	8007df8 <_Findx1+0x32>
 8007df2:	c903      	ldmia	r1, {r0, r1}
 8007df4:	e884 0003 	stmia.w	r4, {r0, r1}
 8007df8:	4628      	mov	r0, r5
 8007dfa:	4621      	mov	r1, r4
 8007dfc:	f004 fb32 	bl	800c464 <GUI_RectsIntersect>
 8007e00:	b198      	cbz	r0, 8007e2a <_Findx1+0x64>
 8007e02:	07f9      	lsls	r1, r7, #31
 8007e04:	d404      	bmi.n	8007e10 <_Findx1+0x4a>
 8007e06:	f8bd 0008 	ldrh.w	r0, [sp, #8]
 8007e0a:	1e41      	subs	r1, r0, #1
 8007e0c:	80a9      	strh	r1, [r5, #4]
 8007e0e:	e00c      	b.n	8007e2a <_Findx1+0x64>
 8007e10:	9b01      	ldr	r3, [sp, #4]
 8007e12:	69dc      	ldr	r4, [r3, #28]
 8007e14:	b14c      	cbz	r4, 8007e2a <_Findx1+0x64>
 8007e16:	4620      	mov	r0, r4
 8007e18:	4629      	mov	r1, r5
 8007e1a:	aa02      	add	r2, sp, #8
 8007e1c:	f7ff ffd3 	bl	8007dc6 <_Findx1>
 8007e20:	4620      	mov	r0, r4
 8007e22:	f005 fe81 	bl	800db28 <GUI_ALLOC_h2p>
 8007e26:	6a04      	ldr	r4, [r0, #32]
 8007e28:	e7f4      	b.n	8007e14 <_Findx1+0x4e>
 8007e2a:	a804      	add	r0, sp, #16
 8007e2c:	f850 2d0c 	ldr.w	r2, [r0, #-12]!
 8007e30:	6a14      	ldr	r4, [r2, #32]
 8007e32:	f005 fe91 	bl	800db58 <GUI_ALLOC_UnlockH>
 8007e36:	e7cb      	b.n	8007dd0 <_Findx1+0xa>
 8007e38:	b005      	add	sp, #20
 8007e3a:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007e3c <WM__PaintWinAndOverlays>:
 8007e3c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007e3e:	4604      	mov	r4, r0
 8007e40:	f005 fe7c 	bl	800db3c <GUI_ALLOC_LockH>
 8007e44:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8007e46:	9001      	str	r0, [sp, #4]
 8007e48:	f640 0301 	movw	r3, #2049	; 0x801
 8007e4c:	4013      	ands	r3, r2
 8007e4e:	2b01      	cmp	r3, #1
 8007e50:	d005      	beq.n	8007e5e <WM__PaintWinAndOverlays+0x22>
 8007e52:	a801      	add	r0, sp, #4
 8007e54:	f005 fe80 	bl	800db58 <GUI_ALLOC_UnlockH>
 8007e58:	4620      	mov	r0, r4
 8007e5a:	f7ff fe67 	bl	8007b2c <_Paint1>
 8007e5e:	4813      	ldr	r0, [pc, #76]	; (8007eac <WM__PaintWinAndOverlays+0x70>)
 8007e60:	6801      	ldr	r1, [r0, #0]
 8007e62:	b311      	cbz	r1, 8007eaa <WM__PaintWinAndOverlays+0x6e>
 8007e64:	4620      	mov	r0, r4
 8007e66:	f7ff febd 	bl	8007be4 <_PaintTransChildren>
 8007e6a:	4620      	mov	r0, r4
 8007e6c:	f005 fe5c 	bl	800db28 <GUI_ALLOC_h2p>
 8007e70:	6985      	ldr	r5, [r0, #24]
 8007e72:	6a04      	ldr	r4, [r0, #32]
 8007e74:	b1cd      	cbz	r5, 8007eaa <WM__PaintWinAndOverlays+0x6e>
 8007e76:	b194      	cbz	r4, 8007e9e <WM__PaintWinAndOverlays+0x62>
 8007e78:	4620      	mov	r0, r4
 8007e7a:	f005 fe55 	bl	800db28 <GUI_ALLOC_h2p>
 8007e7e:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8007e80:	f002 0303 	and.w	r3, r2, #3
 8007e84:	2b03      	cmp	r3, #3
 8007e86:	d102      	bne.n	8007e8e <WM__PaintWinAndOverlays+0x52>
 8007e88:	4620      	mov	r0, r4
 8007e8a:	f7ff fe61 	bl	8007b50 <_Paint1Trans>
 8007e8e:	4620      	mov	r0, r4
 8007e90:	f7ff fea8 	bl	8007be4 <_PaintTransChildren>
 8007e94:	4620      	mov	r0, r4
 8007e96:	f005 fe47 	bl	800db28 <GUI_ALLOC_h2p>
 8007e9a:	6a04      	ldr	r4, [r0, #32]
 8007e9c:	e7eb      	b.n	8007e76 <WM__PaintWinAndOverlays+0x3a>
 8007e9e:	4628      	mov	r0, r5
 8007ea0:	f005 fe42 	bl	800db28 <GUI_ALLOC_h2p>
 8007ea4:	6a04      	ldr	r4, [r0, #32]
 8007ea6:	6985      	ldr	r5, [r0, #24]
 8007ea8:	e7e4      	b.n	8007e74 <WM__PaintWinAndOverlays+0x38>
 8007eaa:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 8007eac:	2000e654 	.word	0x2000e654

08007eb0 <_cbPaintMemDev>:
 8007eb0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8007eb2:	4d14      	ldr	r5, [pc, #80]	; (8007f04 <_cbPaintMemDev+0x54>)
 8007eb4:	682b      	ldr	r3, [r5, #0]
 8007eb6:	4606      	mov	r6, r0
 8007eb8:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8007eba:	f005 fe3f 	bl	800db3c <GUI_ALLOC_LockH>
 8007ebe:	f100 0308 	add.w	r3, r0, #8
 8007ec2:	9001      	str	r0, [sp, #4]
 8007ec4:	682a      	ldr	r2, [r5, #0]
 8007ec6:	e893 0003 	ldmia.w	r3, {r0, r1}
 8007eca:	3208      	adds	r2, #8
 8007ecc:	ac02      	add	r4, sp, #8
 8007ece:	e884 0003 	stmia.w	r4, {r0, r1}
 8007ed2:	e892 0003 	ldmia.w	r2, {r0, r1}
 8007ed6:	e883 0003 	stmia.w	r3, {r0, r1}
 8007eda:	a801      	add	r0, sp, #4
 8007edc:	f005 fe3c 	bl	800db58 <GUI_ALLOC_UnlockH>
 8007ee0:	6830      	ldr	r0, [r6, #0]
 8007ee2:	f7ff ffab 	bl	8007e3c <WM__PaintWinAndOverlays>
 8007ee6:	6828      	ldr	r0, [r5, #0]
 8007ee8:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8007eea:	f005 fe27 	bl	800db3c <GUI_ALLOC_LockH>
 8007eee:	f100 0308 	add.w	r3, r0, #8
 8007ef2:	9001      	str	r0, [sp, #4]
 8007ef4:	e894 0003 	ldmia.w	r4, {r0, r1}
 8007ef8:	e883 0003 	stmia.w	r3, {r0, r1}
 8007efc:	a801      	add	r0, sp, #4
 8007efe:	f005 fe2b 	bl	800db58 <GUI_ALLOC_UnlockH>
 8007f02:	bd7f      	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
 8007f04:	20000278 	.word	0x20000278

08007f08 <WM__ClipAtParentBorders>:
 8007f08:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007f0a:	4607      	mov	r7, r0
 8007f0c:	460d      	mov	r5, r1
 8007f0e:	4628      	mov	r0, r5
 8007f10:	f005 fe14 	bl	800db3c <GUI_ALLOC_LockH>
 8007f14:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8007f16:	ac02      	add	r4, sp, #8
 8007f18:	f013 0602 	ands.w	r6, r3, #2
 8007f1c:	4601      	mov	r1, r0
 8007f1e:	f844 0d04 	str.w	r0, [r4, #-4]!
 8007f22:	d104      	bne.n	8007f2e <WM__ClipAtParentBorders+0x26>
 8007f24:	4620      	mov	r0, r4
 8007f26:	f005 fe17 	bl	800db58 <GUI_ALLOC_UnlockH>
 8007f2a:	4630      	mov	r0, r6
 8007f2c:	e019      	b.n	8007f62 <WM__ClipAtParentBorders+0x5a>
 8007f2e:	4638      	mov	r0, r7
 8007f30:	f003 fdca 	bl	800bac8 <GUI__IntersectRect>
 8007f34:	9801      	ldr	r0, [sp, #4]
 8007f36:	6986      	ldr	r6, [r0, #24]
 8007f38:	4620      	mov	r0, r4
 8007f3a:	b96e      	cbnz	r6, 8007f58 <WM__ClipAtParentBorders+0x50>
 8007f3c:	f005 fe0c 	bl	800db58 <GUI_ALLOC_UnlockH>
 8007f40:	4908      	ldr	r1, [pc, #32]	; (8007f64 <WM__ClipAtParentBorders+0x5c>)
 8007f42:	680a      	ldr	r2, [r1, #0]
 8007f44:	4295      	cmp	r5, r2
 8007f46:	d00b      	beq.n	8007f60 <WM__ClipAtParentBorders+0x58>
 8007f48:	684b      	ldr	r3, [r1, #4]
 8007f4a:	ebb5 0c03 	subs.w	ip, r5, r3
 8007f4e:	f1dc 0000 	rsbs	r0, ip, #0
 8007f52:	eb50 000c 	adcs.w	r0, r0, ip
 8007f56:	e004      	b.n	8007f62 <WM__ClipAtParentBorders+0x5a>
 8007f58:	f005 fdfe 	bl	800db58 <GUI_ALLOC_UnlockH>
 8007f5c:	4635      	mov	r5, r6
 8007f5e:	e7d6      	b.n	8007f0e <WM__ClipAtParentBorders+0x6>
 8007f60:	2001      	movs	r0, #1
 8007f62:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8007f64:	2000e60c 	.word	0x2000e60c

08007f68 <WM__InsertWindowIntoList>:
 8007f68:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8007f6a:	4604      	mov	r4, r0
 8007f6c:	460d      	mov	r5, r1
 8007f6e:	2900      	cmp	r1, #0
 8007f70:	d047      	beq.n	8008002 <WM__InsertWindowIntoList+0x9a>
 8007f72:	f005 fde3 	bl	800db3c <GUI_ALLOC_LockH>
 8007f76:	2300      	movs	r3, #0
 8007f78:	6185      	str	r5, [r0, #24]
 8007f7a:	9001      	str	r0, [sp, #4]
 8007f7c:	6203      	str	r3, [r0, #32]
 8007f7e:	4628      	mov	r0, r5
 8007f80:	f005 fddc 	bl	800db3c <GUI_ALLOC_LockH>
 8007f84:	9901      	ldr	r1, [sp, #4]
 8007f86:	69c5      	ldr	r5, [r0, #28]
 8007f88:	9002      	str	r0, [sp, #8]
 8007f8a:	6a8e      	ldr	r6, [r1, #40]	; 0x28
 8007f8c:	b92d      	cbnz	r5, 8007f9a <WM__InsertWindowIntoList+0x32>
 8007f8e:	61c4      	str	r4, [r0, #28]
 8007f90:	a801      	add	r0, sp, #4
 8007f92:	f005 fde1 	bl	800db58 <GUI_ALLOC_UnlockH>
 8007f96:	a802      	add	r0, sp, #8
 8007f98:	e031      	b.n	8007ffe <WM__InsertWindowIntoList+0x96>
 8007f9a:	4628      	mov	r0, r5
 8007f9c:	f005 fdce 	bl	800db3c <GUI_ALLOC_LockH>
 8007fa0:	f006 0608 	and.w	r6, r6, #8
 8007fa4:	9003      	str	r0, [sp, #12]
 8007fa6:	b976      	cbnz	r6, 8007fc6 <WM__InsertWindowIntoList+0x5e>
 8007fa8:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8007faa:	0702      	lsls	r2, r0, #28
 8007fac:	d50b      	bpl.n	8007fc6 <WM__InsertWindowIntoList+0x5e>
 8007fae:	9a01      	ldr	r2, [sp, #4]
 8007fb0:	9b02      	ldr	r3, [sp, #8]
 8007fb2:	6215      	str	r5, [r2, #32]
 8007fb4:	61dc      	str	r4, [r3, #28]
 8007fb6:	a801      	add	r0, sp, #4
 8007fb8:	f005 fdce 	bl	800db58 <GUI_ALLOC_UnlockH>
 8007fbc:	a802      	add	r0, sp, #8
 8007fbe:	f005 fdcb 	bl	800db58 <GUI_ALLOC_UnlockH>
 8007fc2:	a803      	add	r0, sp, #12
 8007fc4:	e01b      	b.n	8007ffe <WM__InsertWindowIntoList+0x96>
 8007fc6:	a802      	add	r0, sp, #8
 8007fc8:	f005 fdc6 	bl	800db58 <GUI_ALLOC_UnlockH>
 8007fcc:	a803      	add	r0, sp, #12
 8007fce:	f005 fdc3 	bl	800db58 <GUI_ALLOC_UnlockH>
 8007fd2:	4628      	mov	r0, r5
 8007fd4:	f005 fda8 	bl	800db28 <GUI_ALLOC_h2p>
 8007fd8:	9003      	str	r0, [sp, #12]
 8007fda:	9a03      	ldr	r2, [sp, #12]
 8007fdc:	6a15      	ldr	r5, [r2, #32]
 8007fde:	b90d      	cbnz	r5, 8007fe4 <WM__InsertWindowIntoList+0x7c>
 8007fe0:	6214      	str	r4, [r2, #32]
 8007fe2:	e00b      	b.n	8007ffc <WM__InsertWindowIntoList+0x94>
 8007fe4:	4628      	mov	r0, r5
 8007fe6:	f005 fd9f 	bl	800db28 <GUI_ALLOC_h2p>
 8007fea:	2e00      	cmp	r6, #0
 8007fec:	d1f4      	bne.n	8007fd8 <WM__InsertWindowIntoList+0x70>
 8007fee:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8007ff0:	071b      	lsls	r3, r3, #28
 8007ff2:	d5f1      	bpl.n	8007fd8 <WM__InsertWindowIntoList+0x70>
 8007ff4:	9903      	ldr	r1, [sp, #12]
 8007ff6:	9801      	ldr	r0, [sp, #4]
 8007ff8:	620c      	str	r4, [r1, #32]
 8007ffa:	6205      	str	r5, [r0, #32]
 8007ffc:	a801      	add	r0, sp, #4
 8007ffe:	f005 fdab 	bl	800db58 <GUI_ALLOC_UnlockH>
 8008002:	bd7f      	pop	{r0, r1, r2, r3, r4, r5, r6, pc}

08008004 <WM__RemoveWindowFromList>:
 8008004:	b570      	push	{r4, r5, r6, lr}
 8008006:	4604      	mov	r4, r0
 8008008:	f005 fd8e 	bl	800db28 <GUI_ALLOC_h2p>
 800800c:	4605      	mov	r5, r0
 800800e:	6980      	ldr	r0, [r0, #24]
 8008010:	b1a8      	cbz	r0, 800803e <WM__RemoveWindowFromList+0x3a>
 8008012:	f005 fd89 	bl	800db28 <GUI_ALLOC_h2p>
 8008016:	69c3      	ldr	r3, [r0, #28]
 8008018:	42a3      	cmp	r3, r4
 800801a:	4606      	mov	r6, r0
 800801c:	d105      	bne.n	800802a <WM__RemoveWindowFromList+0x26>
 800801e:	4618      	mov	r0, r3
 8008020:	f005 fd82 	bl	800db28 <GUI_ALLOC_h2p>
 8008024:	6a00      	ldr	r0, [r0, #32]
 8008026:	61f0      	str	r0, [r6, #28]
 8008028:	bd70      	pop	{r4, r5, r6, pc}
 800802a:	b143      	cbz	r3, 800803e <WM__RemoveWindowFromList+0x3a>
 800802c:	4618      	mov	r0, r3
 800802e:	f005 fd7b 	bl	800db28 <GUI_ALLOC_h2p>
 8008032:	6a03      	ldr	r3, [r0, #32]
 8008034:	42a3      	cmp	r3, r4
 8008036:	d1f8      	bne.n	800802a <WM__RemoveWindowFromList+0x26>
 8008038:	6a29      	ldr	r1, [r5, #32]
 800803a:	6201      	str	r1, [r0, #32]
 800803c:	bd70      	pop	{r4, r5, r6, pc}
 800803e:	bd70      	pop	{r4, r5, r6, pc}

08008040 <WM__Client2Screen>:
 8008040:	4603      	mov	r3, r0
 8008042:	4608      	mov	r0, r1
 8008044:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8008048:	f9b3 1000 	ldrsh.w	r1, [r3]
 800804c:	f004 bb06 	b.w	800c65c <GUI_MoveRect>

08008050 <_SetClipRectUserIntersect>:
 8008050:	4b11      	ldr	r3, [pc, #68]	; (8008098 <_SetClipRectUserIntersect+0x48>)
 8008052:	b530      	push	{r4, r5, lr}
 8008054:	681c      	ldr	r4, [r3, #0]
 8008056:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8008058:	b085      	sub	sp, #20
 800805a:	4605      	mov	r5, r0
 800805c:	b1ba      	cbz	r2, 800808e <_SetClipRectUserIntersect+0x3e>
 800805e:	6810      	ldr	r0, [r2, #0]
 8008060:	6851      	ldr	r1, [r2, #4]
 8008062:	ab02      	add	r3, sp, #8
 8008064:	c303      	stmia	r3!, {r0, r1}
 8008066:	480d      	ldr	r0, [pc, #52]	; (800809c <_SetClipRectUserIntersect+0x4c>)
 8008068:	6800      	ldr	r0, [r0, #0]
 800806a:	b900      	cbnz	r0, 800806e <_SetClipRectUserIntersect+0x1e>
 800806c:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800806e:	f005 fd65 	bl	800db3c <GUI_ALLOC_LockH>
 8008072:	ac04      	add	r4, sp, #16
 8008074:	a902      	add	r1, sp, #8
 8008076:	f844 0d0c 	str.w	r0, [r4, #-12]!
 800807a:	f7ff ffe1 	bl	8008040 <WM__Client2Screen>
 800807e:	4620      	mov	r0, r4
 8008080:	f005 fd6a 	bl	800db58 <GUI_ALLOC_UnlockH>
 8008084:	a802      	add	r0, sp, #8
 8008086:	4629      	mov	r1, r5
 8008088:	f003 fd1e 	bl	800bac8 <GUI__IntersectRect>
 800808c:	a802      	add	r0, sp, #8
 800808e:	f002 ff01 	bl	800ae94 <LCD_SetClipRectEx>
 8008092:	b005      	add	sp, #20
 8008094:	bd30      	pop	{r4, r5, pc}
 8008096:	bf00      	nop
 8008098:	20000278 	.word	0x20000278
 800809c:	2000e608 	.word	0x2000e608

080080a0 <WM__ActivateClipRect>:
 80080a0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80080a2:	4b0e      	ldr	r3, [pc, #56]	; (80080dc <WM__ActivateClipRect+0x3c>)
 80080a4:	6818      	ldr	r0, [r3, #0]
 80080a6:	f890 2054 	ldrb.w	r2, [r0, #84]	; 0x54
 80080aa:	b10a      	cbz	r2, 80080b0 <WM__ActivateClipRect+0x10>
 80080ac:	480c      	ldr	r0, [pc, #48]	; (80080e0 <WM__ActivateClipRect+0x40>)
 80080ae:	e011      	b.n	80080d4 <WM__ActivateClipRect+0x34>
 80080b0:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80080b2:	f005 fd43 	bl	800db3c <GUI_ALLOC_LockH>
 80080b6:	9001      	str	r0, [sp, #4]
 80080b8:	c803      	ldmia	r0, {r0, r1}
 80080ba:	ac02      	add	r4, sp, #8
 80080bc:	e884 0003 	stmia.w	r4, {r0, r1}
 80080c0:	a801      	add	r0, sp, #4
 80080c2:	f005 fd49 	bl	800db58 <GUI_ALLOC_UnlockH>
 80080c6:	4907      	ldr	r1, [pc, #28]	; (80080e4 <WM__ActivateClipRect+0x44>)
 80080c8:	6809      	ldr	r1, [r1, #0]
 80080ca:	b111      	cbz	r1, 80080d2 <WM__ActivateClipRect+0x32>
 80080cc:	4620      	mov	r0, r4
 80080ce:	f7ff ff1b 	bl	8007f08 <WM__ClipAtParentBorders>
 80080d2:	4620      	mov	r0, r4
 80080d4:	f7ff ffbc 	bl	8008050 <_SetClipRectUserIntersect>
 80080d8:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}
 80080da:	bf00      	nop
 80080dc:	20000278 	.word	0x20000278
 80080e0:	2000e044 	.word	0x2000e044
 80080e4:	2000e608 	.word	0x2000e608

080080e8 <WM__IsWindow>:
 80080e8:	4b06      	ldr	r3, [pc, #24]	; (8008104 <WM__IsWindow+0x1c>)
 80080ea:	b510      	push	{r4, lr}
 80080ec:	4604      	mov	r4, r0
 80080ee:	6818      	ldr	r0, [r3, #0]
 80080f0:	b128      	cbz	r0, 80080fe <WM__IsWindow+0x16>
 80080f2:	42a0      	cmp	r0, r4
 80080f4:	d004      	beq.n	8008100 <WM__IsWindow+0x18>
 80080f6:	f005 fd17 	bl	800db28 <GUI_ALLOC_h2p>
 80080fa:	6940      	ldr	r0, [r0, #20]
 80080fc:	e7f8      	b.n	80080f0 <WM__IsWindow+0x8>
 80080fe:	bd10      	pop	{r4, pc}
 8008100:	2001      	movs	r0, #1
 8008102:	bd10      	pop	{r4, pc}
 8008104:	2000e628 	.word	0x2000e628

08008108 <WM__InvalidateDrawAndDescs>:
 8008108:	b513      	push	{r0, r1, r4, lr}
 800810a:	4604      	mov	r4, r0
 800810c:	b300      	cbz	r0, 8008150 <WM__InvalidateDrawAndDescs+0x48>
 800810e:	f005 fd15 	bl	800db3c <GUI_ALLOC_LockH>
 8008112:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8008114:	9001      	str	r0, [sp, #4]
 8008116:	0791      	lsls	r1, r2, #30
 8008118:	d517      	bpl.n	800814a <WM__InvalidateDrawAndDescs+0x42>
 800811a:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800811c:	b140      	cbz	r0, 8008130 <WM__InvalidateDrawAndDescs+0x28>
 800811e:	4b0d      	ldr	r3, [pc, #52]	; (8008154 <WM__InvalidateDrawAndDescs+0x4c>)
 8008120:	6819      	ldr	r1, [r3, #0]
 8008122:	42a1      	cmp	r1, r4
 8008124:	d004      	beq.n	8008130 <WM__InvalidateDrawAndDescs+0x28>
 8008126:	f001 fdaf 	bl	8009c88 <GUI_MEMDEV_Delete>
 800812a:	9a01      	ldr	r2, [sp, #4]
 800812c:	2000      	movs	r0, #0
 800812e:	6250      	str	r0, [r2, #36]	; 0x24
 8008130:	4620      	mov	r0, r4
 8008132:	f7ff fc23 	bl	800797c <WM_GetFirstChild>
 8008136:	4604      	mov	r4, r0
 8008138:	b13c      	cbz	r4, 800814a <WM__InvalidateDrawAndDescs+0x42>
 800813a:	4620      	mov	r0, r4
 800813c:	f7ff ffe4 	bl	8008108 <WM__InvalidateDrawAndDescs>
 8008140:	4620      	mov	r0, r4
 8008142:	f005 fcf1 	bl	800db28 <GUI_ALLOC_h2p>
 8008146:	6a04      	ldr	r4, [r0, #32]
 8008148:	e7f6      	b.n	8008138 <WM__InvalidateDrawAndDescs+0x30>
 800814a:	a801      	add	r0, sp, #4
 800814c:	f005 fd04 	bl	800db58 <GUI_ALLOC_UnlockH>
 8008150:	bd1c      	pop	{r2, r3, r4, pc}
 8008152:	bf00      	nop
 8008154:	2000e650 	.word	0x2000e650

08008158 <WM__RemoveFromLinList>:
 8008158:	b538      	push	{r3, r4, r5, lr}
 800815a:	4b08      	ldr	r3, [pc, #32]	; (800817c <WM__RemoveFromLinList+0x24>)
 800815c:	4605      	mov	r5, r0
 800815e:	6818      	ldr	r0, [r3, #0]
 8008160:	b150      	cbz	r0, 8008178 <WM__RemoveFromLinList+0x20>
 8008162:	f005 fce1 	bl	800db28 <GUI_ALLOC_h2p>
 8008166:	4604      	mov	r4, r0
 8008168:	6940      	ldr	r0, [r0, #20]
 800816a:	42a8      	cmp	r0, r5
 800816c:	d1f8      	bne.n	8008160 <WM__RemoveFromLinList+0x8>
 800816e:	f005 fcdb 	bl	800db28 <GUI_ALLOC_h2p>
 8008172:	6940      	ldr	r0, [r0, #20]
 8008174:	6160      	str	r0, [r4, #20]
 8008176:	bd38      	pop	{r3, r4, r5, pc}
 8008178:	bd38      	pop	{r3, r4, r5, pc}
 800817a:	bf00      	nop
 800817c:	2000e628 	.word	0x2000e628

08008180 <WM__RectIsNZ>:
 8008180:	f9b0 2000 	ldrsh.w	r2, [r0]
 8008184:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8008188:	429a      	cmp	r2, r3
 800818a:	dc08      	bgt.n	800819e <WM__RectIsNZ+0x1e>
 800818c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8008190:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8008194:	4291      	cmp	r1, r2
 8008196:	bfcc      	ite	gt
 8008198:	2000      	movgt	r0, #0
 800819a:	2001      	movle	r0, #1
 800819c:	4770      	bx	lr
 800819e:	2000      	movs	r0, #0
 80081a0:	4770      	bx	lr
	...

080081a4 <_Invalidate1Abs>:
 80081a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80081a6:	b085      	sub	sp, #20
 80081a8:	4606      	mov	r6, r0
 80081aa:	460d      	mov	r5, r1
 80081ac:	4617      	mov	r7, r2
 80081ae:	f005 fcbb 	bl	800db28 <GUI_ALLOC_h2p>
 80081b2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80081b4:	9001      	str	r0, [sp, #4]
 80081b6:	07a0      	lsls	r0, r4, #30
 80081b8:	d534      	bpl.n	8008224 <_Invalidate1Abs+0x80>
 80081ba:	4628      	mov	r0, r5
 80081bc:	f7ff ffe0 	bl	8008180 <WM__RectIsNZ>
 80081c0:	2800      	cmp	r0, #0
 80081c2:	d02f      	beq.n	8008224 <_Invalidate1Abs+0x80>
 80081c4:	f640 0301 	movw	r3, #2049	; 0x801
 80081c8:	4023      	ands	r3, r4
 80081ca:	2b01      	cmp	r3, #1
 80081cc:	d02a      	beq.n	8008224 <_Invalidate1Abs+0x80>
 80081ce:	4630      	mov	r0, r6
 80081d0:	f005 fcb4 	bl	800db3c <GUI_ALLOC_LockH>
 80081d4:	ac02      	add	r4, sp, #8
 80081d6:	4602      	mov	r2, r0
 80081d8:	9001      	str	r0, [sp, #4]
 80081da:	4629      	mov	r1, r5
 80081dc:	4620      	mov	r0, r4
 80081de:	f003 fc41 	bl	800ba64 <GUI__IntersectRects>
 80081e2:	4620      	mov	r0, r4
 80081e4:	f7ff ffcc 	bl	8008180 <WM__RectIsNZ>
 80081e8:	b1c8      	cbz	r0, 800821e <_Invalidate1Abs+0x7a>
 80081ea:	9a01      	ldr	r2, [sp, #4]
 80081ec:	6a96      	ldr	r6, [r2, #40]	; 0x28
 80081ee:	f244 0120 	movw	r1, #16416	; 0x4020
 80081f2:	4031      	ands	r1, r6
 80081f4:	f102 0508 	add.w	r5, r2, #8
 80081f8:	b129      	cbz	r1, 8008206 <_Invalidate1Abs+0x62>
 80081fa:	4628      	mov	r0, r5
 80081fc:	4629      	mov	r1, r5
 80081fe:	4622      	mov	r2, r4
 8008200:	f004 fa3c 	bl	800c67c <GUI_MergeRect>
 8008204:	e00b      	b.n	800821e <_Invalidate1Abs+0x7a>
 8008206:	e894 0003 	ldmia.w	r4, {r0, r1}
 800820a:	e885 0003 	stmia.w	r5, {r0, r1}
 800820e:	4806      	ldr	r0, [pc, #24]	; (8008228 <_Invalidate1Abs+0x84>)
 8008210:	8803      	ldrh	r3, [r0, #0]
 8008212:	433e      	orrs	r6, r7
 8008214:	6296      	str	r6, [r2, #40]	; 0x28
 8008216:	1c5a      	adds	r2, r3, #1
 8008218:	8002      	strh	r2, [r0, #0]
 800821a:	f003 ffdb 	bl	800c1d4 <GUI_SignalEvent>
 800821e:	a801      	add	r0, sp, #4
 8008220:	f005 fc9a 	bl	800db58 <GUI_ALLOC_UnlockH>
 8008224:	b005      	add	sp, #20
 8008226:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008228:	2000e624 	.word	0x2000e624

0800822c <WM_InvalidateWindowAndDescsEx>:
 800822c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800822e:	460e      	mov	r6, r1
 8008230:	4615      	mov	r5, r2
 8008232:	4604      	mov	r4, r0
 8008234:	b338      	cbz	r0, 8008286 <WM_InvalidateWindowAndDescsEx+0x5a>
 8008236:	f005 fc81 	bl	800db3c <GUI_ALLOC_LockH>
 800823a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800823c:	9001      	str	r0, [sp, #4]
 800823e:	079b      	lsls	r3, r3, #30
 8008240:	4602      	mov	r2, r0
 8008242:	d403      	bmi.n	800824c <WM_InvalidateWindowAndDescsEx+0x20>
 8008244:	a801      	add	r0, sp, #4
 8008246:	f005 fc87 	bl	800db58 <GUI_ALLOC_UnlockH>
 800824a:	e01c      	b.n	8008286 <WM_InvalidateWindowAndDescsEx+0x5a>
 800824c:	a802      	add	r0, sp, #8
 800824e:	4631      	mov	r1, r6
 8008250:	f003 fc08 	bl	800ba64 <GUI__IntersectRects>
 8008254:	2800      	cmp	r0, #0
 8008256:	d0f5      	beq.n	8008244 <WM_InvalidateWindowAndDescsEx+0x18>
 8008258:	a801      	add	r0, sp, #4
 800825a:	f005 fc7d 	bl	800db58 <GUI_ALLOC_UnlockH>
 800825e:	4620      	mov	r0, r4
 8008260:	a902      	add	r1, sp, #8
 8008262:	462a      	mov	r2, r5
 8008264:	f7ff ff9e 	bl	80081a4 <_Invalidate1Abs>
 8008268:	4620      	mov	r0, r4
 800826a:	f7ff fb87 	bl	800797c <WM_GetFirstChild>
 800826e:	4604      	mov	r4, r0
 8008270:	b14c      	cbz	r4, 8008286 <WM_InvalidateWindowAndDescsEx+0x5a>
 8008272:	4620      	mov	r0, r4
 8008274:	a902      	add	r1, sp, #8
 8008276:	462a      	mov	r2, r5
 8008278:	f7ff ffd8 	bl	800822c <WM_InvalidateWindowAndDescsEx>
 800827c:	4620      	mov	r0, r4
 800827e:	f005 fc53 	bl	800db28 <GUI_ALLOC_h2p>
 8008282:	6a04      	ldr	r4, [r0, #32]
 8008284:	e7f4      	b.n	8008270 <WM_InvalidateWindowAndDescsEx+0x44>
 8008286:	bd7f      	pop	{r0, r1, r2, r3, r4, r5, r6, pc}

08008288 <WM__InvalidateRect>:
 8008288:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800828c:	4680      	mov	r8, r0
 800828e:	4617      	mov	r7, r2
 8008290:	461d      	mov	r5, r3
 8008292:	460c      	mov	r4, r1
 8008294:	2900      	cmp	r1, #0
 8008296:	d030      	beq.n	80082fa <WM__InvalidateRect+0x72>
 8008298:	4608      	mov	r0, r1
 800829a:	f005 fc4f 	bl	800db3c <GUI_ALLOC_LockH>
 800829e:	6a86      	ldr	r6, [r0, #40]	; 0x28
 80082a0:	9001      	str	r0, [sp, #4]
 80082a2:	07b1      	lsls	r1, r6, #30
 80082a4:	4602      	mov	r2, r0
 80082a6:	d525      	bpl.n	80082f4 <WM__InvalidateRect+0x6c>
 80082a8:	a802      	add	r0, sp, #8
 80082aa:	4641      	mov	r1, r8
 80082ac:	f003 fbda 	bl	800ba64 <GUI__IntersectRects>
 80082b0:	b300      	cbz	r0, 80082f4 <WM__InvalidateRect+0x6c>
 80082b2:	f640 0301 	movw	r3, #2049	; 0x801
 80082b6:	4033      	ands	r3, r6
 80082b8:	2b01      	cmp	r3, #1
 80082ba:	d107      	bne.n	80082cc <WM__InvalidateRect+0x44>
 80082bc:	9a01      	ldr	r2, [sp, #4]
 80082be:	a802      	add	r0, sp, #8
 80082c0:	6991      	ldr	r1, [r2, #24]
 80082c2:	6a12      	ldr	r2, [r2, #32]
 80082c4:	462b      	mov	r3, r5
 80082c6:	f7ff ffdf 	bl	8008288 <WM__InvalidateRect>
 80082ca:	e004      	b.n	80082d6 <WM__InvalidateRect+0x4e>
 80082cc:	4620      	mov	r0, r4
 80082ce:	a902      	add	r1, sp, #8
 80082d0:	462a      	mov	r2, r5
 80082d2:	f7ff ff67 	bl	80081a4 <_Invalidate1Abs>
 80082d6:	9801      	ldr	r0, [sp, #4]
 80082d8:	69c4      	ldr	r4, [r0, #28]
 80082da:	b15c      	cbz	r4, 80082f4 <WM__InvalidateRect+0x6c>
 80082dc:	42bc      	cmp	r4, r7
 80082de:	d009      	beq.n	80082f4 <WM__InvalidateRect+0x6c>
 80082e0:	4620      	mov	r0, r4
 80082e2:	a902      	add	r1, sp, #8
 80082e4:	462a      	mov	r2, r5
 80082e6:	f7ff ffa1 	bl	800822c <WM_InvalidateWindowAndDescsEx>
 80082ea:	4620      	mov	r0, r4
 80082ec:	f005 fc1c 	bl	800db28 <GUI_ALLOC_h2p>
 80082f0:	6a04      	ldr	r4, [r0, #32]
 80082f2:	e7f2      	b.n	80082da <WM__InvalidateRect+0x52>
 80082f4:	a801      	add	r0, sp, #4
 80082f6:	f005 fc2f 	bl	800db58 <GUI_ALLOC_UnlockH>
 80082fa:	e8bd 81ff 	ldmia.w	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}

080082fe <WM__InvalidateRectEx>:
 80082fe:	2320      	movs	r3, #32
 8008300:	f7ff bfc2 	b.w	8008288 <WM__InvalidateRect>

08008304 <WM__DetachWindow>:
 8008304:	b513      	push	{r0, r1, r4, lr}
 8008306:	4604      	mov	r4, r0
 8008308:	f005 fc18 	bl	800db3c <GUI_ALLOC_LockH>
 800830c:	6981      	ldr	r1, [r0, #24]
 800830e:	9001      	str	r0, [sp, #4]
 8008310:	b141      	cbz	r1, 8008324 <WM__DetachWindow+0x20>
 8008312:	6a02      	ldr	r2, [r0, #32]
 8008314:	f7ff fff3 	bl	80082fe <WM__InvalidateRectEx>
 8008318:	4620      	mov	r0, r4
 800831a:	f7ff fe73 	bl	8008004 <WM__RemoveWindowFromList>
 800831e:	9801      	ldr	r0, [sp, #4]
 8008320:	2200      	movs	r2, #0
 8008322:	6182      	str	r2, [r0, #24]
 8008324:	a801      	add	r0, sp, #4
 8008326:	f005 fc17 	bl	800db58 <GUI_ALLOC_UnlockH>
 800832a:	bd1c      	pop	{r2, r3, r4, pc}

0800832c <WM__InvalidateParent>:
 800832c:	b570      	push	{r4, r5, r6, lr}
 800832e:	4605      	mov	r5, r0
 8008330:	4608      	mov	r0, r1
 8008332:	460c      	mov	r4, r1
 8008334:	4616      	mov	r6, r2
 8008336:	f005 fbf7 	bl	800db28 <GUI_ALLOC_h2p>
 800833a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800833c:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8008340:	4628      	mov	r0, r5
 8008342:	4621      	mov	r1, r4
 8008344:	4632      	mov	r2, r6
 8008346:	bf0c      	ite	eq
 8008348:	2320      	moveq	r3, #32
 800834a:	f44f 4380 	movne.w	r3, #16384	; 0x4000
 800834e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008352:	f7ff bf99 	b.w	8008288 <WM__InvalidateRect>

08008356 <WM__Invalidate1Abs>:
 8008356:	2220      	movs	r2, #32
 8008358:	f7ff bf24 	b.w	80081a4 <_Invalidate1Abs>

0800835c <WM_SendMessage>:
 800835c:	b108      	cbz	r0, 8008362 <WM_SendMessage+0x6>
 800835e:	f7fe bec9 	b.w	80070f4 <WM__SendMessage>
 8008362:	4770      	bx	lr

08008364 <WM__SendMsgNoData>:
 8008364:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8008366:	ab04      	add	r3, sp, #16
 8008368:	9001      	str	r0, [sp, #4]
 800836a:	f843 1d10 	str.w	r1, [r3, #-16]!
 800836e:	4669      	mov	r1, sp
 8008370:	f7fe fec0 	bl	80070f4 <WM__SendMessage>
 8008374:	b005      	add	sp, #20
 8008376:	bd00      	pop	{pc}

08008378 <WM__GetClientRectWin>:
 8008378:	2300      	movs	r3, #0
 800837a:	800b      	strh	r3, [r1, #0]
 800837c:	8882      	ldrh	r2, [r0, #4]
 800837e:	804b      	strh	r3, [r1, #2]
 8008380:	8803      	ldrh	r3, [r0, #0]
 8008382:	1ad2      	subs	r2, r2, r3
 8008384:	808a      	strh	r2, [r1, #4]
 8008386:	88c2      	ldrh	r2, [r0, #6]
 8008388:	8840      	ldrh	r0, [r0, #2]
 800838a:	1a13      	subs	r3, r2, r0
 800838c:	80cb      	strh	r3, [r1, #6]
 800838e:	4770      	bx	lr

08008390 <WM_InvalidateRect>:
 8008390:	b570      	push	{r4, r5, r6, lr}
 8008392:	460e      	mov	r6, r1
 8008394:	b086      	sub	sp, #24
 8008396:	4604      	mov	r4, r0
 8008398:	2800      	cmp	r0, #0
 800839a:	d033      	beq.n	8008404 <WM_InvalidateRect+0x74>
 800839c:	f005 fbce 	bl	800db3c <GUI_ALLOC_LockH>
 80083a0:	6a85      	ldr	r5, [r0, #40]	; 0x28
 80083a2:	9001      	str	r0, [sp, #4]
 80083a4:	07ab      	lsls	r3, r5, #30
 80083a6:	d52a      	bpl.n	80083fe <WM_InvalidateRect+0x6e>
 80083a8:	c803      	ldmia	r0, {r0, r1}
 80083aa:	ab06      	add	r3, sp, #24
 80083ac:	e903 0003 	stmdb	r3, {r0, r1}
 80083b0:	03e8      	lsls	r0, r5, #15
 80083b2:	d502      	bpl.n	80083ba <WM_InvalidateRect+0x2a>
 80083b4:	4620      	mov	r0, r4
 80083b6:	f7ff fea7 	bl	8008108 <WM__InvalidateDrawAndDescs>
 80083ba:	b15e      	cbz	r6, 80083d4 <WM_InvalidateRect+0x44>
 80083bc:	6830      	ldr	r0, [r6, #0]
 80083be:	6871      	ldr	r1, [r6, #4]
 80083c0:	aa02      	add	r2, sp, #8
 80083c2:	c203      	stmia	r2!, {r0, r1}
 80083c4:	9801      	ldr	r0, [sp, #4]
 80083c6:	a902      	add	r1, sp, #8
 80083c8:	f7ff fe3a 	bl	8008040 <WM__Client2Screen>
 80083cc:	a804      	add	r0, sp, #16
 80083ce:	a902      	add	r1, sp, #8
 80083d0:	f003 fb7a 	bl	800bac8 <GUI__IntersectRect>
 80083d4:	a804      	add	r0, sp, #16
 80083d6:	4621      	mov	r1, r4
 80083d8:	f7ff fd96 	bl	8007f08 <WM__ClipAtParentBorders>
 80083dc:	b178      	cbz	r0, 80083fe <WM_InvalidateRect+0x6e>
 80083de:	f640 0001 	movw	r0, #2049	; 0x801
 80083e2:	4028      	ands	r0, r5
 80083e4:	2801      	cmp	r0, #1
 80083e6:	d106      	bne.n	80083f6 <WM_InvalidateRect+0x66>
 80083e8:	9b01      	ldr	r3, [sp, #4]
 80083ea:	a804      	add	r0, sp, #16
 80083ec:	6999      	ldr	r1, [r3, #24]
 80083ee:	6a1a      	ldr	r2, [r3, #32]
 80083f0:	f7ff ff85 	bl	80082fe <WM__InvalidateRectEx>
 80083f4:	e003      	b.n	80083fe <WM_InvalidateRect+0x6e>
 80083f6:	4620      	mov	r0, r4
 80083f8:	a904      	add	r1, sp, #16
 80083fa:	f7ff ffac 	bl	8008356 <WM__Invalidate1Abs>
 80083fe:	a801      	add	r0, sp, #4
 8008400:	f005 fbaa 	bl	800db58 <GUI_ALLOC_UnlockH>
 8008404:	b006      	add	sp, #24
 8008406:	bd70      	pop	{r4, r5, r6, pc}

08008408 <WM_InvalidateWindow>:
 8008408:	2100      	movs	r1, #0
 800840a:	f7ff bfc1 	b.w	8008390 <WM_InvalidateRect>
	...

08008410 <WM__GetTopLevelLayer>:
 8008410:	b510      	push	{r4, lr}
 8008412:	4604      	mov	r4, r0
 8008414:	f005 fb88 	bl	800db28 <GUI_ALLOC_h2p>
 8008418:	6980      	ldr	r0, [r0, #24]
 800841a:	2800      	cmp	r0, #0
 800841c:	d1f9      	bne.n	8008412 <WM__GetTopLevelLayer+0x2>
 800841e:	4b05      	ldr	r3, [pc, #20]	; (8008434 <WM__GetTopLevelLayer+0x24>)
 8008420:	681a      	ldr	r2, [r3, #0]
 8008422:	4294      	cmp	r4, r2
 8008424:	d005      	beq.n	8008432 <WM__GetTopLevelLayer+0x22>
 8008426:	6858      	ldr	r0, [r3, #4]
 8008428:	4284      	cmp	r4, r0
 800842a:	bf14      	ite	ne
 800842c:	f04f 30ff 	movne.w	r0, #4294967295
 8008430:	2001      	moveq	r0, #1
 8008432:	bd10      	pop	{r4, pc}
 8008434:	2000e60c 	.word	0x2000e60c

08008438 <WM__SelectTopLevelLayer>:
 8008438:	b508      	push	{r3, lr}
 800843a:	f7ff ffe9 	bl	8008410 <WM__GetTopLevelLayer>
 800843e:	2800      	cmp	r0, #0
 8008440:	db03      	blt.n	800844a <WM__SelectTopLevelLayer+0x12>
 8008442:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008446:	f003 bfdb 	b.w	800c400 <GUI_SelectLayer>
 800844a:	bd08      	pop	{r3, pc}

0800844c <WM_SelectWindow>:
 800844c:	b538      	push	{r3, r4, r5, lr}
 800844e:	4b0d      	ldr	r3, [pc, #52]	; (8008484 <WM_SelectWindow+0x38>)
 8008450:	6819      	ldr	r1, [r3, #0]
 8008452:	4604      	mov	r4, r0
 8008454:	6c8d      	ldr	r5, [r1, #72]	; 0x48
 8008456:	b908      	cbnz	r0, 800845c <WM_SelectWindow+0x10>
 8008458:	4a0b      	ldr	r2, [pc, #44]	; (8008488 <WM_SelectWindow+0x3c>)
 800845a:	6814      	ldr	r4, [r2, #0]
 800845c:	648c      	str	r4, [r1, #72]	; 0x48
 800845e:	4620      	mov	r0, r4
 8008460:	f7ff ffea 	bl	8008438 <WM__SelectTopLevelLayer>
 8008464:	f003 f91e 	bl	800b6a4 <LCD_SetClipRectMax>
 8008468:	4620      	mov	r0, r4
 800846a:	f005 fb5d 	bl	800db28 <GUI_ALLOC_h2p>
 800846e:	4b05      	ldr	r3, [pc, #20]	; (8008484 <WM_SelectWindow+0x38>)
 8008470:	f9b0 1000 	ldrsh.w	r1, [r0]
 8008474:	681b      	ldr	r3, [r3, #0]
 8008476:	f9b0 0002 	ldrsh.w	r0, [r0, #2]
 800847a:	64d9      	str	r1, [r3, #76]	; 0x4c
 800847c:	6518      	str	r0, [r3, #80]	; 0x50
 800847e:	4628      	mov	r0, r5
 8008480:	bd38      	pop	{r3, r4, r5, pc}
 8008482:	bf00      	nop
 8008484:	20000278 	.word	0x20000278
 8008488:	2000e628 	.word	0x2000e628

0800848c <WM_DeleteWindow>:
 800848c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800848e:	4604      	mov	r4, r0
 8008490:	2800      	cmp	r0, #0
 8008492:	d061      	beq.n	8008558 <WM_DeleteWindow+0xcc>
 8008494:	f7ff fe28 	bl	80080e8 <WM__IsWindow>
 8008498:	2800      	cmp	r0, #0
 800849a:	d05d      	beq.n	8008558 <WM_DeleteWindow+0xcc>
 800849c:	4620      	mov	r0, r4
 800849e:	f7ff ffb7 	bl	8008410 <WM__GetTopLevelLayer>
 80084a2:	210b      	movs	r1, #11
 80084a4:	4606      	mov	r6, r0
 80084a6:	4620      	mov	r0, r4
 80084a8:	f7ff ff5c 	bl	8008364 <WM__SendMsgNoData>
 80084ac:	4620      	mov	r0, r4
 80084ae:	f007 f957 	bl	800f760 <WM__DeleteAssocTimer>
 80084b2:	4620      	mov	r0, r4
 80084b4:	f005 fb42 	bl	800db3c <GUI_ALLOC_LockH>
 80084b8:	9001      	str	r0, [sp, #4]
 80084ba:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80084bc:	b108      	cbz	r0, 80084c2 <WM_DeleteWindow+0x36>
 80084be:	f001 fbe3 	bl	8009c88 <GUI_MEMDEV_Delete>
 80084c2:	4826      	ldr	r0, [pc, #152]	; (800855c <WM_DeleteWindow+0xd0>)
 80084c4:	4b26      	ldr	r3, [pc, #152]	; (8008560 <WM_DeleteWindow+0xd4>)
 80084c6:	6805      	ldr	r5, [r0, #0]
 80084c8:	4a26      	ldr	r2, [pc, #152]	; (8008564 <WM_DeleteWindow+0xd8>)
 80084ca:	4827      	ldr	r0, [pc, #156]	; (8008568 <WM_DeleteWindow+0xdc>)
 80084cc:	2100      	movs	r1, #0
 80084ce:	6019      	str	r1, [r3, #0]
 80084d0:	f852 3025 	ldr.w	r3, [r2, r5, lsl #2]
 80084d4:	42a3      	cmp	r3, r4
 80084d6:	bf08      	it	eq
 80084d8:	f842 1025 	streq.w	r1, [r2, r5, lsl #2]
 80084dc:	f850 1025 	ldr.w	r1, [r0, r5, lsl #2]
 80084e0:	42a1      	cmp	r1, r4
 80084e2:	d102      	bne.n	80084ea <WM_DeleteWindow+0x5e>
 80084e4:	2200      	movs	r2, #0
 80084e6:	f840 2025 	str.w	r2, [r0, r5, lsl #2]
 80084ea:	4d20      	ldr	r5, [pc, #128]	; (800856c <WM_DeleteWindow+0xe0>)
 80084ec:	682d      	ldr	r5, [r5, #0]
 80084ee:	b12d      	cbz	r5, 80084fc <WM_DeleteWindow+0x70>
 80084f0:	6868      	ldr	r0, [r5, #4]
 80084f2:	42a0      	cmp	r0, r4
 80084f4:	d1fa      	bne.n	80084ec <WM_DeleteWindow+0x60>
 80084f6:	2300      	movs	r3, #0
 80084f8:	606b      	str	r3, [r5, #4]
 80084fa:	e7f7      	b.n	80084ec <WM_DeleteWindow+0x60>
 80084fc:	4620      	mov	r0, r4
 80084fe:	2107      	movs	r1, #7
 8008500:	f7ff f8c5 	bl	800768e <WM_NotifyParent>
 8008504:	9d01      	ldr	r5, [sp, #4]
 8008506:	69e8      	ldr	r0, [r5, #28]
 8008508:	f7ff ffc0 	bl	800848c <WM_DeleteWindow>
 800850c:	69eb      	ldr	r3, [r5, #28]
 800850e:	2b00      	cmp	r3, #0
 8008510:	d1f9      	bne.n	8008506 <WM_DeleteWindow+0x7a>
 8008512:	4620      	mov	r0, r4
 8008514:	f7ff fef6 	bl	8008304 <WM__DetachWindow>
 8008518:	4620      	mov	r0, r4
 800851a:	f7ff fe1d 	bl	8008158 <WM__RemoveFromLinList>
 800851e:	9801      	ldr	r0, [sp, #4]
 8008520:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008522:	07d9      	lsls	r1, r3, #31
 8008524:	d503      	bpl.n	800852e <WM_DeleteWindow+0xa2>
 8008526:	4a12      	ldr	r2, [pc, #72]	; (8008570 <WM_DeleteWindow+0xe4>)
 8008528:	6811      	ldr	r1, [r2, #0]
 800852a:	1e48      	subs	r0, r1, #1
 800852c:	6010      	str	r0, [r2, #0]
 800852e:	069a      	lsls	r2, r3, #26
 8008530:	d503      	bpl.n	800853a <WM_DeleteWindow+0xae>
 8008532:	4b10      	ldr	r3, [pc, #64]	; (8008574 <WM_DeleteWindow+0xe8>)
 8008534:	881a      	ldrh	r2, [r3, #0]
 8008536:	1e51      	subs	r1, r2, #1
 8008538:	8019      	strh	r1, [r3, #0]
 800853a:	a801      	add	r0, sp, #4
 800853c:	f005 fb0c 	bl	800db58 <GUI_ALLOC_UnlockH>
 8008540:	480d      	ldr	r0, [pc, #52]	; (8008578 <WM_DeleteWindow+0xec>)
 8008542:	8803      	ldrh	r3, [r0, #0]
 8008544:	1e5a      	subs	r2, r3, #1
 8008546:	8002      	strh	r2, [r0, #0]
 8008548:	4620      	mov	r0, r4
 800854a:	f005 fb31 	bl	800dbb0 <GUI_ALLOC_Free>
 800854e:	490b      	ldr	r1, [pc, #44]	; (800857c <WM_DeleteWindow+0xf0>)
 8008550:	f851 0026 	ldr.w	r0, [r1, r6, lsl #2]
 8008554:	f7ff ff7a 	bl	800844c <WM_SelectWindow>
 8008558:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
 800855a:	bf00      	nop
 800855c:	2000e62c 	.word	0x2000e62c
 8008560:	2000e054 	.word	0x2000e054
 8008564:	2000e61c 	.word	0x2000e61c
 8008568:	2000e648 	.word	0x2000e648
 800856c:	2000e640 	.word	0x2000e640
 8008570:	2000e654 	.word	0x2000e654
 8008574:	2000e624 	.word	0x2000e624
 8008578:	2000e604 	.word	0x2000e604
 800857c:	2000e60c 	.word	0x2000e60c

08008580 <WM_CreateWindowAsChild>:
 8008580:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008584:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8008586:	469b      	mov	fp, r3
 8008588:	4b4e      	ldr	r3, [pc, #312]	; (80086c4 <WM_CreateWindowAsChild+0x144>)
 800858a:	4680      	mov	r8, r0
 800858c:	4689      	mov	r9, r1
 800858e:	4692      	mov	sl, r2
 8008590:	681d      	ldr	r5, [r3, #0]
 8008592:	bb66      	cbnz	r6, 80085ee <WM_CreateWindowAsChild+0x6e>
 8008594:	484c      	ldr	r0, [pc, #304]	; (80086c8 <WM_CreateWindowAsChild+0x148>)
 8008596:	8801      	ldrh	r1, [r0, #0]
 8008598:	b361      	cbz	r1, 80085f4 <WM_CreateWindowAsChild+0x74>
 800859a:	4a4c      	ldr	r2, [pc, #304]	; (80086cc <WM_CreateWindowAsChild+0x14c>)
 800859c:	4b4c      	ldr	r3, [pc, #304]	; (80086d0 <WM_CreateWindowAsChild+0x150>)
 800859e:	6814      	ldr	r4, [r2, #0]
 80085a0:	7c60      	ldrb	r0, [r4, #17]
 80085a2:	f853 1020 	ldr.w	r1, [r3, r0, lsl #2]
 80085a6:	1c4c      	adds	r4, r1, #1
 80085a8:	d024      	beq.n	80085f4 <WM_CreateWindowAsChild+0x74>
 80085aa:	b319      	cbz	r1, 80085f4 <WM_CreateWindowAsChild+0x74>
 80085ac:	460e      	mov	r6, r1
 80085ae:	4630      	mov	r0, r6
 80085b0:	f005 fac4 	bl	800db3c <GUI_ALLOC_LockH>
 80085b4:	f9b0 2000 	ldrsh.w	r2, [r0]
 80085b8:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 80085bc:	9001      	str	r0, [sp, #4]
 80085be:	4490      	add	r8, r2
 80085c0:	44a1      	add	r9, r4
 80085c2:	f1ba 0f00 	cmp.w	sl, #0
 80085c6:	d105      	bne.n	80085d4 <WM_CreateWindowAsChild+0x54>
 80085c8:	f9b0 a004 	ldrsh.w	sl, [r0, #4]
 80085cc:	ebc2 030a 	rsb	r3, r2, sl
 80085d0:	f103 0a01 	add.w	sl, r3, #1
 80085d4:	f1bb 0f00 	cmp.w	fp, #0
 80085d8:	d105      	bne.n	80085e6 <WM_CreateWindowAsChild+0x66>
 80085da:	f9b0 b006 	ldrsh.w	fp, [r0, #6]
 80085de:	ebc4 000b 	rsb	r0, r4, fp
 80085e2:	f100 0b01 	add.w	fp, r0, #1
 80085e6:	a801      	add	r0, sp, #4
 80085e8:	f005 fab6 	bl	800db58 <GUI_ALLOC_UnlockH>
 80085ec:	e002      	b.n	80085f4 <WM_CreateWindowAsChild+0x74>
 80085ee:	1c70      	adds	r0, r6, #1
 80085f0:	d1dd      	bne.n	80085ae <WM_CreateWindowAsChild+0x2e>
 80085f2:	2600      	movs	r6, #0
 80085f4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80085f6:	302c      	adds	r0, #44	; 0x2c
 80085f8:	f005 fd14 	bl	800e024 <GUI_ALLOC_AllocZero>
 80085fc:	4604      	mov	r4, r0
 80085fe:	2800      	cmp	r0, #0
 8008600:	d05c      	beq.n	80086bc <WM_CreateWindowAsChild+0x13c>
 8008602:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8008604:	432f      	orrs	r7, r5
 8008606:	4d30      	ldr	r5, [pc, #192]	; (80086c8 <WM_CreateWindowAsChild+0x148>)
 8008608:	8829      	ldrh	r1, [r5, #0]
 800860a:	1c4a      	adds	r2, r1, #1
 800860c:	802a      	strh	r2, [r5, #0]
 800860e:	f005 fa95 	bl	800db3c <GUI_ALLOC_LockH>
 8008612:	ab02      	add	r3, sp, #8
 8008614:	4605      	mov	r5, r0
 8008616:	f843 0d08 	str.w	r0, [r3, #-8]!
 800861a:	492e      	ldr	r1, [pc, #184]	; (80086d4 <WM_CreateWindowAsChild+0x154>)
 800861c:	f8a0 8000 	strh.w	r8, [r0]
 8008620:	f8a0 9002 	strh.w	r9, [r0, #2]
 8008624:	44d0      	add	r8, sl
 8008626:	44d9      	add	r9, fp
 8008628:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 800862a:	f108 38ff 	add.w	r8, r8, #4294967295
 800862e:	f109 39ff 	add.w	r9, r9, #4294967295
 8008632:	4039      	ands	r1, r7
 8008634:	f8a0 8004 	strh.w	r8, [r0, #4]
 8008638:	f8a0 9006 	strh.w	r9, [r0, #6]
 800863c:	980e      	ldr	r0, [sp, #56]	; 0x38
 800863e:	ea42 0301 	orr.w	r3, r2, r1
 8008642:	6128      	str	r0, [r5, #16]
 8008644:	62ab      	str	r3, [r5, #40]	; 0x28
 8008646:	4668      	mov	r0, sp
 8008648:	f005 fa86 	bl	800db58 <GUI_ALLOC_UnlockH>
 800864c:	4922      	ldr	r1, [pc, #136]	; (80086d8 <WM_CreateWindowAsChild+0x158>)
 800864e:	6808      	ldr	r0, [r1, #0]
 8008650:	b148      	cbz	r0, 8008666 <WM_CreateWindowAsChild+0xe6>
 8008652:	f005 fa69 	bl	800db28 <GUI_ALLOC_h2p>
 8008656:	4605      	mov	r5, r0
 8008658:	4620      	mov	r0, r4
 800865a:	f005 fa65 	bl	800db28 <GUI_ALLOC_h2p>
 800865e:	696a      	ldr	r2, [r5, #20]
 8008660:	6142      	str	r2, [r0, #20]
 8008662:	616c      	str	r4, [r5, #20]
 8008664:	e000      	b.n	8008668 <WM_CreateWindowAsChild+0xe8>
 8008666:	600c      	str	r4, [r1, #0]
 8008668:	4620      	mov	r0, r4
 800866a:	4631      	mov	r1, r6
 800866c:	f7ff fc7c 	bl	8007f68 <WM__InsertWindowIntoList>
 8008670:	06b8      	lsls	r0, r7, #26
 8008672:	d502      	bpl.n	800867a <WM_CreateWindowAsChild+0xfa>
 8008674:	4620      	mov	r0, r4
 8008676:	f7ff fee9 	bl	800844c <WM_SelectWindow>
 800867a:	07f9      	lsls	r1, r7, #31
 800867c:	d503      	bpl.n	8008686 <WM_CreateWindowAsChild+0x106>
 800867e:	4817      	ldr	r0, [pc, #92]	; (80086dc <WM_CreateWindowAsChild+0x15c>)
 8008680:	6803      	ldr	r3, [r0, #0]
 8008682:	1c59      	adds	r1, r3, #1
 8008684:	6001      	str	r1, [r0, #0]
 8008686:	067a      	lsls	r2, r7, #25
 8008688:	d502      	bpl.n	8008690 <WM_CreateWindowAsChild+0x110>
 800868a:	4620      	mov	r0, r4
 800868c:	f007 f946 	bl	800f91c <WM_BringToBottom>
 8008690:	07bb      	lsls	r3, r7, #30
 8008692:	d50f      	bpl.n	80086b4 <WM_CreateWindowAsChild+0x134>
 8008694:	4620      	mov	r0, r4
 8008696:	f005 fa51 	bl	800db3c <GUI_ALLOC_LockH>
 800869a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800869c:	aa02      	add	r2, sp, #8
 800869e:	f043 0102 	orr.w	r1, r3, #2
 80086a2:	f842 0d08 	str.w	r0, [r2, #-8]!
 80086a6:	6281      	str	r1, [r0, #40]	; 0x28
 80086a8:	4668      	mov	r0, sp
 80086aa:	f005 fa55 	bl	800db58 <GUI_ALLOC_UnlockH>
 80086ae:	4620      	mov	r0, r4
 80086b0:	f7ff feaa 	bl	8008408 <WM_InvalidateWindow>
 80086b4:	4620      	mov	r0, r4
 80086b6:	2101      	movs	r1, #1
 80086b8:	f7ff fe54 	bl	8008364 <WM__SendMsgNoData>
 80086bc:	4620      	mov	r0, r4
 80086be:	e8bd 8ffe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80086c2:	bf00      	nop
 80086c4:	2000e634 	.word	0x2000e634
 80086c8:	2000e604 	.word	0x2000e604
 80086cc:	20000278 	.word	0x20000278
 80086d0:	2000e60c 	.word	0x2000e60c
 80086d4:	003f3f9f 	.word	0x003f3f9f
 80086d8:	2000e628 	.word	0x2000e628
 80086dc:	2000e654 	.word	0x2000e654

080086e0 <WM_CreateWindow>:
 80086e0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80086e2:	2400      	movs	r4, #0
 80086e4:	9400      	str	r4, [sp, #0]
 80086e6:	9c06      	ldr	r4, [sp, #24]
 80086e8:	9401      	str	r4, [sp, #4]
 80086ea:	9c07      	ldr	r4, [sp, #28]
 80086ec:	9402      	str	r4, [sp, #8]
 80086ee:	9c08      	ldr	r4, [sp, #32]
 80086f0:	9403      	str	r4, [sp, #12]
 80086f2:	f7ff ff45 	bl	8008580 <WM_CreateWindowAsChild>
 80086f6:	b004      	add	sp, #16
 80086f8:	bd10      	pop	{r4, pc}
	...

080086fc <WM_GetActiveWindow>:
 80086fc:	4b01      	ldr	r3, [pc, #4]	; (8008704 <WM_GetActiveWindow+0x8>)
 80086fe:	6818      	ldr	r0, [r3, #0]
 8008700:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8008702:	4770      	bx	lr
 8008704:	20000278 	.word	0x20000278

08008708 <WM__GetNextIVR>:
 8008708:	b530      	push	{r4, r5, lr}
 800870a:	4b5d      	ldr	r3, [pc, #372]	; (8008880 <WM__GetNextIVR+0x178>)
 800870c:	6818      	ldr	r0, [r3, #0]
 800870e:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 8008712:	b085      	sub	sp, #20
 8008714:	2800      	cmp	r0, #0
 8008716:	f000 80b1 	beq.w	800887c <WM__GetNextIVR+0x174>
 800871a:	4b5a      	ldr	r3, [pc, #360]	; (8008884 <WM__GetNextIVR+0x17c>)
 800871c:	6959      	ldr	r1, [r3, #20]
 800871e:	2901      	cmp	r1, #1
 8008720:	dc2c      	bgt.n	800877c <WM__GetNextIVR+0x74>
 8008722:	f103 0108 	add.w	r1, r3, #8
 8008726:	691a      	ldr	r2, [r3, #16]
 8008728:	c903      	ldmia	r1, {r0, r1}
 800872a:	3201      	adds	r2, #1
 800872c:	ac04      	add	r4, sp, #16
 800872e:	611a      	str	r2, [r3, #16]
 8008730:	e904 0003 	stmdb	r4, {r0, r1}
 8008734:	b922      	cbnz	r2, 8008740 <WM__GetNextIVR+0x38>
 8008736:	881a      	ldrh	r2, [r3, #0]
 8008738:	f8ad 2008 	strh.w	r2, [sp, #8]
 800873c:	885a      	ldrh	r2, [r3, #2]
 800873e:	e012      	b.n	8008766 <WM__GetNextIVR+0x5e>
 8008740:	8998      	ldrh	r0, [r3, #12]
 8008742:	8959      	ldrh	r1, [r3, #10]
 8008744:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8008748:	f8ad 100a 	strh.w	r1, [sp, #10]
 800874c:	1c42      	adds	r2, r0, #1
 800874e:	b294      	uxth	r4, r2
 8008750:	b220      	sxth	r0, r4
 8008752:	4283      	cmp	r3, r0
 8008754:	f8ad 4008 	strh.w	r4, [sp, #8]
 8008758:	da07      	bge.n	800876a <WM__GetNextIVR+0x62>
 800875a:	484a      	ldr	r0, [pc, #296]	; (8008884 <WM__GetNextIVR+0x17c>)
 800875c:	8804      	ldrh	r4, [r0, #0]
 800875e:	89c3      	ldrh	r3, [r0, #14]
 8008760:	f8ad 4008 	strh.w	r4, [sp, #8]
 8008764:	1c5a      	adds	r2, r3, #1
 8008766:	f8ad 200a 	strh.w	r2, [sp, #10]
 800876a:	4c46      	ldr	r4, [pc, #280]	; (8008884 <WM__GetNextIVR+0x17c>)
 800876c:	f9bd 100a 	ldrsh.w	r1, [sp, #10]
 8008770:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8008774:	4299      	cmp	r1, r3
 8008776:	dd05      	ble.n	8008784 <WM__GetNextIVR+0x7c>
 8008778:	4b42      	ldr	r3, [pc, #264]	; (8008884 <WM__GetNextIVR+0x17c>)
 800877a:	6959      	ldr	r1, [r3, #20]
 800877c:	1e48      	subs	r0, r1, #1
 800877e:	6158      	str	r0, [r3, #20]
 8008780:	2000      	movs	r0, #0
 8008782:	e07b      	b.n	800887c <WM__GetNextIVR+0x174>
 8008784:	4d3e      	ldr	r5, [pc, #248]	; (8008880 <WM__GetNextIVR+0x178>)
 8008786:	6828      	ldr	r0, [r5, #0]
 8008788:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800878a:	f005 f9d7 	bl	800db3c <GUI_ALLOC_LockH>
 800878e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8008792:	f9b4 1000 	ldrsh.w	r1, [r4]
 8008796:	9001      	str	r0, [sp, #4]
 8008798:	428a      	cmp	r2, r1
 800879a:	d118      	bne.n	80087ce <WM__GetNextIVR+0xc6>
 800879c:	6828      	ldr	r0, [r5, #0]
 800879e:	88e3      	ldrh	r3, [r4, #6]
 80087a0:	88a4      	ldrh	r4, [r4, #4]
 80087a2:	6c82      	ldr	r2, [r0, #72]	; 0x48
 80087a4:	f8ad 300e 	strh.w	r3, [sp, #14]
 80087a8:	f8ad 400c 	strh.w	r4, [sp, #12]
 80087ac:	b152      	cbz	r2, 80087c4 <WM__GetNextIVR+0xbc>
 80087ae:	4610      	mov	r0, r2
 80087b0:	f005 f9ba 	bl	800db28 <GUI_ALLOC_h2p>
 80087b4:	4604      	mov	r4, r0
 80087b6:	2200      	movs	r2, #0
 80087b8:	6a00      	ldr	r0, [r0, #32]
 80087ba:	a902      	add	r1, sp, #8
 80087bc:	f7ff fa68 	bl	8007c90 <_Findy1>
 80087c0:	69a2      	ldr	r2, [r4, #24]
 80087c2:	e7f3      	b.n	80087ac <WM__GetNextIVR+0xa4>
 80087c4:	9901      	ldr	r1, [sp, #4]
 80087c6:	69c8      	ldr	r0, [r1, #28]
 80087c8:	a902      	add	r1, sp, #8
 80087ca:	f7ff fa61 	bl	8007c90 <_Findy1>
 80087ce:	4b2c      	ldr	r3, [pc, #176]	; (8008880 <WM__GetNextIVR+0x178>)
 80087d0:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80087d4:	681c      	ldr	r4, [r3, #0]
 80087d6:	f8ad 200c 	strh.w	r2, [sp, #12]
 80087da:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80087dc:	ac02      	add	r4, sp, #8
 80087de:	b162      	cbz	r2, 80087fa <WM__GetNextIVR+0xf2>
 80087e0:	4610      	mov	r0, r2
 80087e2:	f005 f9a1 	bl	800db28 <GUI_ALLOC_h2p>
 80087e6:	4621      	mov	r1, r4
 80087e8:	4605      	mov	r5, r0
 80087ea:	2200      	movs	r2, #0
 80087ec:	6a00      	ldr	r0, [r0, #32]
 80087ee:	f7ff faa5 	bl	8007d3c <_Findx0>
 80087f2:	2800      	cmp	r0, #0
 80087f4:	d1eb      	bne.n	80087ce <WM__GetNextIVR+0xc6>
 80087f6:	69aa      	ldr	r2, [r5, #24]
 80087f8:	e7f0      	b.n	80087dc <WM__GetNextIVR+0xd4>
 80087fa:	9801      	ldr	r0, [sp, #4]
 80087fc:	4621      	mov	r1, r4
 80087fe:	69c0      	ldr	r0, [r0, #28]
 8008800:	f7ff fa9c 	bl	8007d3c <_Findx0>
 8008804:	2800      	cmp	r0, #0
 8008806:	d1e2      	bne.n	80087ce <WM__GetNextIVR+0xc6>
 8008808:	4b1e      	ldr	r3, [pc, #120]	; (8008884 <WM__GetNextIVR+0x17c>)
 800880a:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 800880e:	889a      	ldrh	r2, [r3, #4]
 8008810:	b210      	sxth	r0, r2
 8008812:	4281      	cmp	r1, r0
 8008814:	f8ad 200c 	strh.w	r2, [sp, #12]
 8008818:	dd08      	ble.n	800882c <WM__GetNextIVR+0x124>
 800881a:	e894 0003 	ldmia.w	r4, {r0, r1}
 800881e:	3308      	adds	r3, #8
 8008820:	e883 0003 	stmia.w	r3, {r0, r1}
 8008824:	a801      	add	r0, sp, #4
 8008826:	f005 f997 	bl	800db58 <GUI_ALLOC_UnlockH>
 800882a:	e796      	b.n	800875a <WM__GetNextIVR+0x52>
 800882c:	4d14      	ldr	r5, [pc, #80]	; (8008880 <WM__GetNextIVR+0x178>)
 800882e:	682c      	ldr	r4, [r5, #0]
 8008830:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8008832:	ac02      	add	r4, sp, #8
 8008834:	b152      	cbz	r2, 800884c <WM__GetNextIVR+0x144>
 8008836:	4610      	mov	r0, r2
 8008838:	f005 f976 	bl	800db28 <GUI_ALLOC_h2p>
 800883c:	4605      	mov	r5, r0
 800883e:	2200      	movs	r2, #0
 8008840:	6a00      	ldr	r0, [r0, #32]
 8008842:	4621      	mov	r1, r4
 8008844:	f7ff fabf 	bl	8007dc6 <_Findx1>
 8008848:	69aa      	ldr	r2, [r5, #24]
 800884a:	e7f2      	b.n	8008832 <WM__GetNextIVR+0x12a>
 800884c:	ad04      	add	r5, sp, #16
 800884e:	4621      	mov	r1, r4
 8008850:	f855 3d0c 	ldr.w	r3, [r5, #-12]!
 8008854:	69d8      	ldr	r0, [r3, #28]
 8008856:	f7ff fab6 	bl	8007dc6 <_Findx1>
 800885a:	4628      	mov	r0, r5
 800885c:	f005 f97c 	bl	800db58 <GUI_ALLOC_UnlockH>
 8008860:	4b08      	ldr	r3, [pc, #32]	; (8008884 <WM__GetNextIVR+0x17c>)
 8008862:	691a      	ldr	r2, [r3, #16]
 8008864:	f644 6120 	movw	r1, #20000	; 0x4e20
 8008868:	428a      	cmp	r2, r1
 800886a:	dc85      	bgt.n	8008778 <WM__GetNextIVR+0x70>
 800886c:	e894 0003 	ldmia.w	r4, {r0, r1}
 8008870:	3308      	adds	r3, #8
 8008872:	e883 0003 	stmia.w	r3, {r0, r1}
 8008876:	f7ff fc13 	bl	80080a0 <WM__ActivateClipRect>
 800887a:	2001      	movs	r0, #1
 800887c:	b005      	add	sp, #20
 800887e:	bd30      	pop	{r4, r5, pc}
 8008880:	20000278 	.word	0x20000278
 8008884:	2000e03c 	.word	0x2000e03c

08008888 <WM__InitIVRSearch>:
 8008888:	b570      	push	{r4, r5, r6, lr}
 800888a:	4b3b      	ldr	r3, [pc, #236]	; (8008978 <WM__InitIVRSearch+0xf0>)
 800888c:	4605      	mov	r5, r0
 800888e:	6818      	ldr	r0, [r3, #0]
 8008890:	f890 2054 	ldrb.w	r2, [r0, #84]	; 0x54
 8008894:	b086      	sub	sp, #24
 8008896:	b912      	cbnz	r2, 800889e <WM__InitIVRSearch+0x16>
 8008898:	f7ff fc02 	bl	80080a0 <WM__ActivateClipRect>
 800889c:	e068      	b.n	8008970 <WM__InitIVRSearch+0xe8>
 800889e:	4c37      	ldr	r4, [pc, #220]	; (800897c <WM__InitIVRSearch+0xf4>)
 80088a0:	6961      	ldr	r1, [r4, #20]
 80088a2:	1c4b      	adds	r3, r1, #1
 80088a4:	2b01      	cmp	r3, #1
 80088a6:	6163      	str	r3, [r4, #20]
 80088a8:	dc62      	bgt.n	8008970 <WM__InitIVRSearch+0xe8>
 80088aa:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80088ac:	f005 f946 	bl	800db3c <GUI_ALLOC_LockH>
 80088b0:	4933      	ldr	r1, [pc, #204]	; (8008980 <WM__InitIVRSearch+0xf8>)
 80088b2:	9000      	str	r0, [sp, #0]
 80088b4:	780b      	ldrb	r3, [r1, #0]
 80088b6:	f04f 32ff 	mov.w	r2, #4294967295
 80088ba:	6122      	str	r2, [r4, #16]
 80088bc:	b123      	cbz	r3, 80088c8 <WM__InitIVRSearch+0x40>
 80088be:	f100 0108 	add.w	r1, r0, #8
 80088c2:	ac02      	add	r4, sp, #8
 80088c4:	c903      	ldmia	r1, {r0, r1}
 80088c6:	e005      	b.n	80088d4 <WM__InitIVRSearch+0x4c>
 80088c8:	6a86      	ldr	r6, [r0, #40]	; 0x28
 80088ca:	f016 0602 	ands.w	r6, r6, #2
 80088ce:	d009      	beq.n	80088e4 <WM__InitIVRSearch+0x5c>
 80088d0:	c803      	ldmia	r0, {r0, r1}
 80088d2:	ac02      	add	r4, sp, #8
 80088d4:	e884 0003 	stmia.w	r4, {r0, r1}
 80088d8:	b165      	cbz	r5, 80088f4 <WM__InitIVRSearch+0x6c>
 80088da:	a802      	add	r0, sp, #8
 80088dc:	4629      	mov	r1, r5
 80088de:	f003 f8f3 	bl	800bac8 <GUI__IntersectRect>
 80088e2:	e007      	b.n	80088f4 <WM__InitIVRSearch+0x6c>
 80088e4:	6960      	ldr	r0, [r4, #20]
 80088e6:	1e42      	subs	r2, r0, #1
 80088e8:	4668      	mov	r0, sp
 80088ea:	6162      	str	r2, [r4, #20]
 80088ec:	f005 f934 	bl	800db58 <GUI_ALLOC_UnlockH>
 80088f0:	4630      	mov	r0, r6
 80088f2:	e03e      	b.n	8008972 <WM__InitIVRSearch+0xea>
 80088f4:	4b20      	ldr	r3, [pc, #128]	; (8008978 <WM__InitIVRSearch+0xf0>)
 80088f6:	6818      	ldr	r0, [r3, #0]
 80088f8:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80088fa:	b1ca      	cbz	r2, 8008930 <WM__InitIVRSearch+0xa8>
 80088fc:	9c00      	ldr	r4, [sp, #0]
 80088fe:	6851      	ldr	r1, [r2, #4]
 8008900:	9401      	str	r4, [sp, #4]
 8008902:	6810      	ldr	r0, [r2, #0]
 8008904:	4c1f      	ldr	r4, [pc, #124]	; (8008984 <WM__InitIVRSearch+0xfc>)
 8008906:	ab04      	add	r3, sp, #16
 8008908:	c303      	stmia	r3!, {r0, r1}
 800890a:	6821      	ldr	r1, [r4, #0]
 800890c:	b131      	cbz	r1, 800891c <WM__InitIVRSearch+0x94>
 800890e:	a801      	add	r0, sp, #4
 8008910:	f005 f922 	bl	800db58 <GUI_ALLOC_UnlockH>
 8008914:	6820      	ldr	r0, [r4, #0]
 8008916:	f005 f911 	bl	800db3c <GUI_ALLOC_LockH>
 800891a:	9001      	str	r0, [sp, #4]
 800891c:	9801      	ldr	r0, [sp, #4]
 800891e:	a904      	add	r1, sp, #16
 8008920:	f7ff fb8e 	bl	8008040 <WM__Client2Screen>
 8008924:	a802      	add	r0, sp, #8
 8008926:	a904      	add	r1, sp, #16
 8008928:	f003 f8ce 	bl	800bac8 <GUI__IntersectRect>
 800892c:	a801      	add	r0, sp, #4
 800892e:	e000      	b.n	8008932 <WM__InitIVRSearch+0xaa>
 8008930:	4668      	mov	r0, sp
 8008932:	f005 f911 	bl	800db58 <GUI_ALLOC_UnlockH>
 8008936:	4813      	ldr	r0, [pc, #76]	; (8008984 <WM__InitIVRSearch+0xfc>)
 8008938:	6801      	ldr	r1, [r0, #0]
 800893a:	ac02      	add	r4, sp, #8
 800893c:	b129      	cbz	r1, 800894a <WM__InitIVRSearch+0xc2>
 800893e:	4620      	mov	r0, r4
 8008940:	f7ff fae2 	bl	8007f08 <WM__ClipAtParentBorders>
 8008944:	b908      	cbnz	r0, 800894a <WM__InitIVRSearch+0xc2>
 8008946:	4b0d      	ldr	r3, [pc, #52]	; (800897c <WM__InitIVRSearch+0xf4>)
 8008948:	e007      	b.n	800895a <WM__InitIVRSearch+0xd2>
 800894a:	4a0b      	ldr	r2, [pc, #44]	; (8008978 <WM__InitIVRSearch+0xf0>)
 800894c:	6813      	ldr	r3, [r2, #0]
 800894e:	4620      	mov	r0, r4
 8008950:	6c99      	ldr	r1, [r3, #72]	; 0x48
 8008952:	f7ff fad9 	bl	8007f08 <WM__ClipAtParentBorders>
 8008956:	4b09      	ldr	r3, [pc, #36]	; (800897c <WM__InitIVRSearch+0xf4>)
 8008958:	b918      	cbnz	r0, 8008962 <WM__InitIVRSearch+0xda>
 800895a:	6959      	ldr	r1, [r3, #20]
 800895c:	1e4a      	subs	r2, r1, #1
 800895e:	615a      	str	r2, [r3, #20]
 8008960:	e007      	b.n	8008972 <WM__InitIVRSearch+0xea>
 8008962:	e894 0003 	ldmia.w	r4, {r0, r1}
 8008966:	e883 0003 	stmia.w	r3, {r0, r1}
 800896a:	f7ff fecd 	bl	8008708 <WM__GetNextIVR>
 800896e:	e000      	b.n	8008972 <WM__InitIVRSearch+0xea>
 8008970:	2001      	movs	r0, #1
 8008972:	b006      	add	sp, #24
 8008974:	bd70      	pop	{r4, r5, r6, pc}
 8008976:	bf00      	nop
 8008978:	20000278 	.word	0x20000278
 800897c:	2000e03c 	.word	0x2000e03c
 8008980:	2000e631 	.word	0x2000e631
 8008984:	2000e608 	.word	0x2000e608

08008988 <WM_SetDefault>:
 8008988:	b508      	push	{r3, lr}
 800898a:	f003 fcef 	bl	800c36c <GL_SetDefault>
 800898e:	4b02      	ldr	r3, [pc, #8]	; (8008998 <WM_SetDefault+0x10>)
 8008990:	6818      	ldr	r0, [r3, #0]
 8008992:	2200      	movs	r2, #0
 8008994:	6442      	str	r2, [r0, #68]	; 0x44
 8008996:	bd08      	pop	{r3, pc}
 8008998:	20000278 	.word	0x20000278

0800899c <WM__Paint1>:
 800899c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800899e:	b089      	sub	sp, #36	; 0x24
 80089a0:	4604      	mov	r4, r0
 80089a2:	f005 f8cb 	bl	800db3c <GUI_ALLOC_LockH>
 80089a6:	6907      	ldr	r7, [r0, #16]
 80089a8:	9001      	str	r0, [sp, #4]
 80089aa:	6a86      	ldr	r6, [r0, #40]	; 0x28
 80089ac:	3008      	adds	r0, #8
 80089ae:	c803      	ldmia	r0, {r0, r1}
 80089b0:	ad02      	add	r5, sp, #8
 80089b2:	e885 0003 	stmia.w	r5, {r0, r1}
 80089b6:	a801      	add	r0, sp, #4
 80089b8:	f005 f8ce 	bl	800db58 <GUI_ALLOC_UnlockH>
 80089bc:	2f00      	cmp	r7, #0
 80089be:	d030      	beq.n	8008a22 <WM__Paint1+0x86>
 80089c0:	07b2      	lsls	r2, r6, #30
 80089c2:	d52e      	bpl.n	8008a22 <WM__Paint1+0x86>
 80089c4:	4620      	mov	r0, r4
 80089c6:	212e      	movs	r1, #46	; 0x2e
 80089c8:	f7fe fde5 	bl	8007596 <WM_SendMessageNoPara>
 80089cc:	4b16      	ldr	r3, [pc, #88]	; (8008a28 <WM__Paint1+0x8c>)
 80089ce:	781a      	ldrb	r2, [r3, #0]
 80089d0:	1c50      	adds	r0, r2, #1
 80089d2:	7018      	strb	r0, [r3, #0]
 80089d4:	04f3      	lsls	r3, r6, #19
 80089d6:	d50a      	bpl.n	80089ee <WM__Paint1+0x52>
 80089d8:	220f      	movs	r2, #15
 80089da:	9405      	str	r4, [sp, #20]
 80089dc:	9204      	str	r2, [sp, #16]
 80089de:	9507      	str	r5, [sp, #28]
 80089e0:	f7ff ffd2 	bl	8008988 <WM_SetDefault>
 80089e4:	4620      	mov	r0, r4
 80089e6:	a904      	add	r1, sp, #16
 80089e8:	f7fe fb84 	bl	80070f4 <WM__SendMessage>
 80089ec:	e011      	b.n	8008a12 <WM__Paint1+0x76>
 80089ee:	4628      	mov	r0, r5
 80089f0:	f7ff ff4a 	bl	8008888 <WM__InitIVRSearch>
 80089f4:	b168      	cbz	r0, 8008a12 <WM__Paint1+0x76>
 80089f6:	210f      	movs	r1, #15
 80089f8:	ab02      	add	r3, sp, #8
 80089fa:	9104      	str	r1, [sp, #16]
 80089fc:	9307      	str	r3, [sp, #28]
 80089fe:	9405      	str	r4, [sp, #20]
 8008a00:	f7ff ffc2 	bl	8008988 <WM_SetDefault>
 8008a04:	4620      	mov	r0, r4
 8008a06:	a904      	add	r1, sp, #16
 8008a08:	f7fe fb74 	bl	80070f4 <WM__SendMessage>
 8008a0c:	f7ff fe7c 	bl	8008708 <WM__GetNextIVR>
 8008a10:	e7f0      	b.n	80089f4 <WM__Paint1+0x58>
 8008a12:	4805      	ldr	r0, [pc, #20]	; (8008a28 <WM__Paint1+0x8c>)
 8008a14:	7801      	ldrb	r1, [r0, #0]
 8008a16:	1e4b      	subs	r3, r1, #1
 8008a18:	7003      	strb	r3, [r0, #0]
 8008a1a:	212f      	movs	r1, #47	; 0x2f
 8008a1c:	4620      	mov	r0, r4
 8008a1e:	f7fe fdba 	bl	8007596 <WM_SendMessageNoPara>
 8008a22:	b009      	add	sp, #36	; 0x24
 8008a24:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008a26:	bf00      	nop
 8008a28:	2000e631 	.word	0x2000e631

08008a2c <WM__Paint>:
 8008a2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008a30:	b088      	sub	sp, #32
 8008a32:	ae06      	add	r6, sp, #24
 8008a34:	9003      	str	r0, [sp, #12]
 8008a36:	f005 f881 	bl	800db3c <GUI_ALLOC_LockH>
 8008a3a:	4603      	mov	r3, r0
 8008a3c:	f100 0208 	add.w	r2, r0, #8
 8008a40:	9005      	str	r0, [sp, #20]
 8008a42:	e892 0003 	ldmia.w	r2, {r0, r1}
 8008a46:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 8008a48:	699f      	ldr	r7, [r3, #24]
 8008a4a:	f8d3 8010 	ldr.w	r8, [r3, #16]
 8008a4e:	f244 0420 	movw	r4, #16416	; 0x4020
 8008a52:	e886 0003 	stmia.w	r6, {r0, r1}
 8008a56:	402c      	ands	r4, r5
 8008a58:	a805      	add	r0, sp, #20
 8008a5a:	f005 f87d 	bl	800db58 <GUI_ALLOC_UnlockH>
 8008a5e:	2c00      	cmp	r4, #0
 8008a60:	d035      	beq.n	8008ace <WM__Paint+0xa2>
 8008a62:	f1b8 0f00 	cmp.w	r8, #0
 8008a66:	d017      	beq.n	8008a98 <WM__Paint+0x6c>
 8008a68:	4630      	mov	r0, r6
 8008a6a:	9903      	ldr	r1, [sp, #12]
 8008a6c:	f7ff fa4c 	bl	8007f08 <WM__ClipAtParentBorders>
 8008a70:	b190      	cbz	r0, 8008a98 <WM__Paint+0x6c>
 8008a72:	9803      	ldr	r0, [sp, #12]
 8008a74:	f7ff fcea 	bl	800844c <WM_SelectWindow>
 8008a78:	0768      	lsls	r0, r5, #29
 8008a7a:	d50f      	bpl.n	8008a9c <WM__Paint+0x70>
 8008a7c:	b127      	cbz	r7, 8008a88 <WM__Paint+0x5c>
 8008a7e:	f005 0501 	and.w	r5, r5, #1
 8008a82:	f085 0501 	eor.w	r5, r5, #1
 8008a86:	e000      	b.n	8008a8a <WM__Paint+0x5e>
 8008a88:	2501      	movs	r5, #1
 8008a8a:	9500      	str	r5, [sp, #0]
 8008a8c:	a806      	add	r0, sp, #24
 8008a8e:	4912      	ldr	r1, [pc, #72]	; (8008ad8 <WM__Paint+0xac>)
 8008a90:	aa03      	add	r2, sp, #12
 8008a92:	2300      	movs	r3, #0
 8008a94:	f000 fabc 	bl	8009010 <GUI_MEMDEV_Draw>
 8008a98:	2400      	movs	r4, #0
 8008a9a:	e003      	b.n	8008aa4 <WM__Paint+0x78>
 8008a9c:	9803      	ldr	r0, [sp, #12]
 8008a9e:	f7ff f9cd 	bl	8007e3c <WM__PaintWinAndOverlays>
 8008aa2:	2401      	movs	r4, #1
 8008aa4:	9803      	ldr	r0, [sp, #12]
 8008aa6:	f005 f849 	bl	800db3c <GUI_ALLOC_LockH>
 8008aaa:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8008aac:	9005      	str	r0, [sp, #20]
 8008aae:	f421 4380 	bic.w	r3, r1, #16384	; 0x4000
 8008ab2:	f023 0220 	bic.w	r2, r3, #32
 8008ab6:	0489      	lsls	r1, r1, #18
 8008ab8:	bf48      	it	mi
 8008aba:	f042 0204 	orrmi.w	r2, r2, #4
 8008abe:	6282      	str	r2, [r0, #40]	; 0x28
 8008ac0:	a805      	add	r0, sp, #20
 8008ac2:	f005 f849 	bl	800db58 <GUI_ALLOC_UnlockH>
 8008ac6:	4805      	ldr	r0, [pc, #20]	; (8008adc <WM__Paint+0xb0>)
 8008ac8:	8801      	ldrh	r1, [r0, #0]
 8008aca:	1e4b      	subs	r3, r1, #1
 8008acc:	8003      	strh	r3, [r0, #0]
 8008ace:	4620      	mov	r0, r4
 8008ad0:	b008      	add	sp, #32
 8008ad2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008ad6:	bf00      	nop
 8008ad8:	08007eb1 	.word	0x08007eb1
 8008adc:	2000e624 	.word	0x2000e624

08008ae0 <WM_Exec>:
 8008ae0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008ae4:	4b4b      	ldr	r3, [pc, #300]	; (8008c14 <WM_Exec+0x134>)
 8008ae6:	6818      	ldr	r0, [r3, #0]
 8008ae8:	b09f      	sub	sp, #124	; 0x7c
 8008aea:	b100      	cbz	r0, 8008aee <WM_Exec+0xe>
 8008aec:	4780      	blx	r0
 8008aee:	2600      	movs	r6, #0
 8008af0:	4949      	ldr	r1, [pc, #292]	; (8008c18 <WM_Exec+0x138>)
 8008af2:	680a      	ldr	r2, [r1, #0]
 8008af4:	b1e2      	cbz	r2, 8008b30 <WM_Exec+0x50>
 8008af6:	4c49      	ldr	r4, [pc, #292]	; (8008c1c <WM_Exec+0x13c>)
 8008af8:	6824      	ldr	r4, [r4, #0]
 8008afa:	b1bc      	cbz	r4, 8008b2c <WM_Exec+0x4c>
 8008afc:	4620      	mov	r0, r4
 8008afe:	f005 f81d 	bl	800db3c <GUI_ALLOC_LockH>
 8008b02:	6a85      	ldr	r5, [r0, #40]	; 0x28
 8008b04:	a91e      	add	r1, sp, #120	; 0x78
 8008b06:	f415 4f00 	tst.w	r5, #32768	; 0x8000
 8008b0a:	f841 0d74 	str.w	r0, [r1, #-116]!
 8008b0e:	6945      	ldr	r5, [r0, #20]
 8008b10:	d007      	beq.n	8008b22 <WM_Exec+0x42>
 8008b12:	4608      	mov	r0, r1
 8008b14:	f005 f820 	bl	800db58 <GUI_ALLOC_UnlockH>
 8008b18:	4620      	mov	r0, r4
 8008b1a:	f7ff fcb7 	bl	800848c <WM_DeleteWindow>
 8008b1e:	462c      	mov	r4, r5
 8008b20:	e7eb      	b.n	8008afa <WM_Exec+0x1a>
 8008b22:	4608      	mov	r0, r1
 8008b24:	462c      	mov	r4, r5
 8008b26:	f005 f817 	bl	800db58 <GUI_ALLOC_UnlockH>
 8008b2a:	e7e6      	b.n	8008afa <WM_Exec+0x1a>
 8008b2c:	4d3a      	ldr	r5, [pc, #232]	; (8008c18 <WM_Exec+0x138>)
 8008b2e:	602c      	str	r4, [r5, #0]
 8008b30:	4b3b      	ldr	r3, [pc, #236]	; (8008c20 <WM_Exec+0x140>)
 8008b32:	6818      	ldr	r0, [r3, #0]
 8008b34:	b100      	cbz	r0, 8008b38 <WM_Exec+0x58>
 8008b36:	4780      	blx	r0
 8008b38:	493a      	ldr	r1, [pc, #232]	; (8008c24 <WM_Exec+0x144>)
 8008b3a:	680a      	ldr	r2, [r1, #0]
 8008b3c:	b92a      	cbnz	r2, 8008b4a <WM_Exec+0x6a>
 8008b3e:	4c3a      	ldr	r4, [pc, #232]	; (8008c28 <WM_Exec+0x148>)
 8008b40:	6825      	ldr	r5, [r4, #0]
 8008b42:	f895 3054 	ldrb.w	r3, [r5, #84]	; 0x54
 8008b46:	b143      	cbz	r3, 8008b5a <WM_Exec+0x7a>
 8008b48:	e003      	b.n	8008b52 <WM_Exec+0x72>
 8008b4a:	4790      	blx	r2
 8008b4c:	2800      	cmp	r0, #0
 8008b4e:	d0f6      	beq.n	8008b3e <WM_Exec+0x5e>
 8008b50:	e055      	b.n	8008bfe <WM_Exec+0x11e>
 8008b52:	f003 fd65 	bl	800c620 <GUI_PollKeyMsg>
 8008b56:	2800      	cmp	r0, #0
 8008b58:	d151      	bne.n	8008bfe <WM_Exec+0x11e>
 8008b5a:	6820      	ldr	r0, [r4, #0]
 8008b5c:	f890 5054 	ldrb.w	r5, [r0, #84]	; 0x54
 8008b60:	b14d      	cbz	r5, 8008b76 <WM_Exec+0x96>
 8008b62:	4932      	ldr	r1, [pc, #200]	; (8008c2c <WM_Exec+0x14c>)
 8008b64:	880d      	ldrh	r5, [r1, #0]
 8008b66:	b135      	cbz	r5, 8008b76 <WM_Exec+0x96>
 8008b68:	4a31      	ldr	r2, [pc, #196]	; (8008c30 <WM_Exec+0x150>)
 8008b6a:	6815      	ldr	r5, [r2, #0]
 8008b6c:	2d00      	cmp	r5, #0
 8008b6e:	d048      	beq.n	8008c02 <WM_Exec+0x122>
 8008b70:	682b      	ldr	r3, [r5, #0]
 8008b72:	4798      	blx	r3
 8008b74:	2501      	movs	r5, #1
 8008b76:	482c      	ldr	r0, [pc, #176]	; (8008c28 <WM_Exec+0x148>)
 8008b78:	6801      	ldr	r1, [r0, #0]
 8008b7a:	f891 2054 	ldrb.w	r2, [r1, #84]	; 0x54
 8008b7e:	b912      	cbnz	r2, 8008b86 <WM_Exec+0xa6>
 8008b80:	2d00      	cmp	r5, #0
 8008b82:	d133      	bne.n	8008bec <WM_Exec+0x10c>
 8008b84:	e041      	b.n	8008c0a <WM_Exec+0x12a>
 8008b86:	4b29      	ldr	r3, [pc, #164]	; (8008c2c <WM_Exec+0x14c>)
 8008b88:	8818      	ldrh	r0, [r3, #0]
 8008b8a:	2800      	cmp	r0, #0
 8008b8c:	d0f8      	beq.n	8008b80 <WM_Exec+0xa0>
 8008b8e:	4f29      	ldr	r7, [pc, #164]	; (8008c34 <WM_Exec+0x154>)
 8008b90:	683c      	ldr	r4, [r7, #0]
 8008b92:	b90c      	cbnz	r4, 8008b98 <WM_Exec+0xb8>
 8008b94:	4c21      	ldr	r4, [pc, #132]	; (8008c1c <WM_Exec+0x13c>)
 8008b96:	6824      	ldr	r4, [r4, #0]
 8008b98:	a802      	add	r0, sp, #8
 8008b9a:	f003 fc4f 	bl	800c43c <GUI_SaveContext_W>
 8008b9e:	4922      	ldr	r1, [pc, #136]	; (8008c28 <WM_Exec+0x148>)
 8008ba0:	680a      	ldr	r2, [r1, #0]
 8008ba2:	f8d2 8030 	ldr.w	r8, [r2, #48]	; 0x30
 8008ba6:	6b57      	ldr	r7, [r2, #52]	; 0x34
 8008ba8:	b924      	cbnz	r4, 8008bb4 <WM_Exec+0xd4>
 8008baa:	2400      	movs	r4, #0
 8008bac:	e00d      	b.n	8008bca <WM_Exec+0xea>
 8008bae:	f1b9 0f00 	cmp.w	r9, #0
 8008bb2:	d10a      	bne.n	8008bca <WM_Exec+0xea>
 8008bb4:	4620      	mov	r0, r4
 8008bb6:	f7ff ff39 	bl	8008a2c <WM__Paint>
 8008bba:	4681      	mov	r9, r0
 8008bbc:	4620      	mov	r0, r4
 8008bbe:	f004 ffb3 	bl	800db28 <GUI_ALLOC_h2p>
 8008bc2:	6944      	ldr	r4, [r0, #20]
 8008bc4:	2c00      	cmp	r4, #0
 8008bc6:	d1f2      	bne.n	8008bae <WM_Exec+0xce>
 8008bc8:	e7ef      	b.n	8008baa <WM_Exec+0xca>
 8008bca:	4b1a      	ldr	r3, [pc, #104]	; (8008c34 <WM_Exec+0x154>)
 8008bcc:	4640      	mov	r0, r8
 8008bce:	601c      	str	r4, [r3, #0]
 8008bd0:	f003 fbee 	bl	800c3b0 <GUI_SetColor>
 8008bd4:	4638      	mov	r0, r7
 8008bd6:	f003 fbe9 	bl	800c3ac <GUI_SetBkColor>
 8008bda:	a802      	add	r0, sp, #8
 8008bdc:	f003 fc38 	bl	800c450 <GUI_RestoreContext>
 8008be0:	4812      	ldr	r0, [pc, #72]	; (8008c2c <WM_Exec+0x14c>)
 8008be2:	8801      	ldrh	r1, [r0, #0]
 8008be4:	2900      	cmp	r1, #0
 8008be6:	d0cb      	beq.n	8008b80 <WM_Exec+0xa0>
 8008be8:	2601      	movs	r6, #1
 8008bea:	e7c4      	b.n	8008b76 <WM_Exec+0x96>
 8008bec:	4a10      	ldr	r2, [pc, #64]	; (8008c30 <WM_Exec+0x150>)
 8008bee:	6810      	ldr	r0, [r2, #0]
 8008bf0:	b110      	cbz	r0, 8008bf8 <WM_Exec+0x118>
 8008bf2:	6843      	ldr	r3, [r0, #4]
 8008bf4:	4798      	blx	r3
 8008bf6:	e008      	b.n	8008c0a <WM_Exec+0x12a>
 8008bf8:	f002 ff2c 	bl	800ba54 <GUI__ManageCache>
 8008bfc:	e005      	b.n	8008c0a <WM_Exec+0x12a>
 8008bfe:	2601      	movs	r6, #1
 8008c00:	e776      	b.n	8008af0 <WM_Exec+0x10>
 8008c02:	2001      	movs	r0, #1
 8008c04:	f002 ff26 	bl	800ba54 <GUI__ManageCache>
 8008c08:	e7b4      	b.n	8008b74 <WM_Exec+0x94>
 8008c0a:	4630      	mov	r0, r6
 8008c0c:	b01f      	add	sp, #124	; 0x7c
 8008c0e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008c12:	bf00      	nop
 8008c14:	2000e618 	.word	0x2000e618
 8008c18:	2000e030 	.word	0x2000e030
 8008c1c:	2000e628 	.word	0x2000e628
 8008c20:	2000e614 	.word	0x2000e614
 8008c24:	2000e688 	.word	0x2000e688
 8008c28:	20000278 	.word	0x20000278
 8008c2c:	2000e624 	.word	0x2000e624
 8008c30:	2000e644 	.word	0x2000e644
 8008c34:	2000e054 	.word	0x2000e054

08008c38 <WM_Activate>:
 8008c38:	4b02      	ldr	r3, [pc, #8]	; (8008c44 <WM_Activate+0xc>)
 8008c3a:	6818      	ldr	r0, [r3, #0]
 8008c3c:	2201      	movs	r2, #1
 8008c3e:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
 8008c42:	4770      	bx	lr
 8008c44:	20000278 	.word	0x20000278

08008c48 <WM_Deactivate>:
 8008c48:	4b03      	ldr	r3, [pc, #12]	; (8008c58 <WM_Deactivate+0x10>)
 8008c4a:	6818      	ldr	r0, [r3, #0]
 8008c4c:	2200      	movs	r2, #0
 8008c4e:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
 8008c52:	f002 bd27 	b.w	800b6a4 <LCD_SetClipRectMax>
 8008c56:	bf00      	nop
 8008c58:	20000278 	.word	0x20000278

08008c5c <WM_DefaultProc>:
 8008c5c:	b510      	push	{r4, lr}
 8008c5e:	4604      	mov	r4, r0
 8008c60:	6840      	ldr	r0, [r0, #4]
 8008c62:	6823      	ldr	r3, [r4, #0]
 8008c64:	68e1      	ldr	r1, [r4, #12]
 8008c66:	2b17      	cmp	r3, #23
 8008c68:	d00f      	beq.n	8008c8a <WM_DefaultProc+0x2e>
 8008c6a:	dc06      	bgt.n	8008c7a <WM_DefaultProc+0x1e>
 8008c6c:	2b0e      	cmp	r3, #14
 8008c6e:	d00e      	beq.n	8008c8e <WM_DefaultProc+0x32>
 8008c70:	2b14      	cmp	r3, #20
 8008c72:	d114      	bne.n	8008c9e <WM_DefaultProc+0x42>
 8008c74:	f7fe fec5 	bl	8007a02 <WM__GetClientRectEx>
 8008c78:	e011      	b.n	8008c9e <WM_DefaultProc+0x42>
 8008c7a:	2b22      	cmp	r3, #34	; 0x22
 8008c7c:	d00c      	beq.n	8008c98 <WM_DefaultProc+0x3c>
 8008c7e:	2b28      	cmp	r3, #40	; 0x28
 8008c80:	d10d      	bne.n	8008c9e <WM_DefaultProc+0x42>
 8008c82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008c86:	f7ff bbbf 	b.w	8008408 <WM_InvalidateWindow>
 8008c8a:	60e0      	str	r0, [r4, #12]
 8008c8c:	bd10      	pop	{r4, pc}
 8008c8e:	4621      	mov	r1, r4
 8008c90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008c94:	f006 bd88 	b.w	800f7a8 <WM_SendToParent>
 8008c98:	f06f 4070 	mvn.w	r0, #4026531840	; 0xf0000000
 8008c9c:	e000      	b.n	8008ca0 <WM_DefaultProc+0x44>
 8008c9e:	2000      	movs	r0, #0
 8008ca0:	60e0      	str	r0, [r4, #12]
 8008ca2:	bd10      	pop	{r4, pc}

08008ca4 <cbBackWin>:
 8008ca4:	6803      	ldr	r3, [r0, #0]
 8008ca6:	2b0e      	cmp	r3, #14
 8008ca8:	b510      	push	{r4, lr}
 8008caa:	4604      	mov	r4, r0
 8008cac:	d002      	beq.n	8008cb4 <cbBackWin+0x10>
 8008cae:	2b0f      	cmp	r3, #15
 8008cb0:	d121      	bne.n	8008cf6 <cbBackWin+0x52>
 8008cb2:	e008      	b.n	8008cc6 <cbBackWin+0x22>
 8008cb4:	68c3      	ldr	r3, [r0, #12]
 8008cb6:	6858      	ldr	r0, [r3, #4]
 8008cb8:	2801      	cmp	r0, #1
 8008cba:	d121      	bne.n	8008d00 <cbBackWin+0x5c>
 8008cbc:	6818      	ldr	r0, [r3, #0]
 8008cbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008cc2:	f003 bca5 	b.w	800c610 <GUI_StoreKey>
 8008cc6:	4a0f      	ldr	r2, [pc, #60]	; (8008d04 <cbBackWin+0x60>)
 8008cc8:	6840      	ldr	r0, [r0, #4]
 8008cca:	6811      	ldr	r1, [r2, #0]
 8008ccc:	4288      	cmp	r0, r1
 8008cce:	d006      	beq.n	8008cde <cbBackWin+0x3a>
 8008cd0:	6853      	ldr	r3, [r2, #4]
 8008cd2:	4298      	cmp	r0, r3
 8008cd4:	bf14      	ite	ne
 8008cd6:	f04f 30ff 	movne.w	r0, #4294967295
 8008cda:	2001      	moveq	r0, #1
 8008cdc:	e000      	b.n	8008ce0 <cbBackWin+0x3c>
 8008cde:	2000      	movs	r0, #0
 8008ce0:	4a09      	ldr	r2, [pc, #36]	; (8008d08 <cbBackWin+0x64>)
 8008ce2:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 8008ce6:	f06f 4170 	mvn.w	r1, #4026531840	; 0xf0000000
 8008cea:	4288      	cmp	r0, r1
 8008cec:	d003      	beq.n	8008cf6 <cbBackWin+0x52>
 8008cee:	f003 fb5d 	bl	800c3ac <GUI_SetBkColor>
 8008cf2:	f004 fb11 	bl	800d318 <GUI_Clear>
 8008cf6:	4620      	mov	r0, r4
 8008cf8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008cfc:	f7ff bfae 	b.w	8008c5c <WM_DefaultProc>
 8008d00:	bd10      	pop	{r4, pc}
 8008d02:	bf00      	nop
 8008d04:	2000e60c 	.word	0x2000e60c
 8008d08:	2000e638 	.word	0x2000e638

08008d0c <WM_Init>:
 8008d0c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8008d0e:	4b2b      	ldr	r3, [pc, #172]	; (8008dbc <WM_Init+0xb0>)
 8008d10:	7818      	ldrb	r0, [r3, #0]
 8008d12:	2800      	cmp	r0, #0
 8008d14:	d14f      	bne.n	8008db6 <WM_Init+0xaa>
 8008d16:	492a      	ldr	r1, [pc, #168]	; (8008dc0 <WM_Init+0xb4>)
 8008d18:	4a2a      	ldr	r2, [pc, #168]	; (8008dc4 <WM_Init+0xb8>)
 8008d1a:	4c2b      	ldr	r4, [pc, #172]	; (8008dc8 <WM_Init+0xbc>)
 8008d1c:	6008      	str	r0, [r1, #0]
 8008d1e:	6010      	str	r0, [r2, #0]
 8008d20:	6823      	ldr	r3, [r4, #0]
 8008d22:	492a      	ldr	r1, [pc, #168]	; (8008dcc <WM_Init+0xc0>)
 8008d24:	4a2a      	ldr	r2, [pc, #168]	; (8008dd0 <WM_Init+0xc4>)
 8008d26:	6458      	str	r0, [r3, #68]	; 0x44
 8008d28:	8008      	strh	r0, [r1, #0]
 8008d2a:	8010      	strh	r0, [r2, #0]
 8008d2c:	4604      	mov	r4, r0
 8008d2e:	4620      	mov	r0, r4
 8008d30:	f004 f9e0 	bl	800d0f4 <GUI_DEVICE__GetpDriver>
 8008d34:	b1c8      	cbz	r0, 8008d6a <WM_Init+0x5e>
 8008d36:	4827      	ldr	r0, [pc, #156]	; (8008dd4 <WM_Init+0xc8>)
 8008d38:	f643 72ff 	movw	r2, #16383	; 0x3fff
 8008d3c:	f04f 33ff 	mov.w	r3, #4294967295
 8008d40:	f04f 0e02 	mov.w	lr, #2
 8008d44:	9002      	str	r0, [sp, #8]
 8008d46:	2000      	movs	r0, #0
 8008d48:	e88d 4008 	stmia.w	sp, {r3, lr}
 8008d4c:	4601      	mov	r1, r0
 8008d4e:	4613      	mov	r3, r2
 8008d50:	9003      	str	r0, [sp, #12]
 8008d52:	f7ff fc15 	bl	8008580 <WM_CreateWindowAsChild>
 8008d56:	4b20      	ldr	r3, [pc, #128]	; (8008dd8 <WM_Init+0xcc>)
 8008d58:	4a20      	ldr	r2, [pc, #128]	; (8008ddc <WM_Init+0xd0>)
 8008d5a:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8008d5e:	f06f 4170 	mvn.w	r1, #4026531840	; 0xf0000000
 8008d62:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8008d66:	f7ff fb4f 	bl	8008408 <WM_InvalidateWindow>
 8008d6a:	3401      	adds	r4, #1
 8008d6c:	2c02      	cmp	r4, #2
 8008d6e:	d1de      	bne.n	8008d2e <WM_Init+0x22>
 8008d70:	481b      	ldr	r0, [pc, #108]	; (8008de0 <WM_Init+0xd4>)
 8008d72:	f006 fdb7 	bl	800f8e4 <WM__AddCriticalHandle>
 8008d76:	481b      	ldr	r0, [pc, #108]	; (8008de4 <WM_Init+0xd8>)
 8008d78:	f006 fdb4 	bl	800f8e4 <WM__AddCriticalHandle>
 8008d7c:	481a      	ldr	r0, [pc, #104]	; (8008de8 <WM_Init+0xdc>)
 8008d7e:	f006 fdb1 	bl	800f8e4 <WM__AddCriticalHandle>
 8008d82:	481a      	ldr	r0, [pc, #104]	; (8008dec <WM_Init+0xe0>)
 8008d84:	f006 fdae 	bl	800f8e4 <WM__AddCriticalHandle>
 8008d88:	4819      	ldr	r0, [pc, #100]	; (8008df0 <WM_Init+0xe4>)
 8008d8a:	f006 fdab 	bl	800f8e4 <WM__AddCriticalHandle>
 8008d8e:	4819      	ldr	r0, [pc, #100]	; (8008df4 <WM_Init+0xe8>)
 8008d90:	f006 fda8 	bl	800f8e4 <WM__AddCriticalHandle>
 8008d94:	4810      	ldr	r0, [pc, #64]	; (8008dd8 <WM_Init+0xcc>)
 8008d96:	6800      	ldr	r0, [r0, #0]
 8008d98:	f7ff fb58 	bl	800844c <WM_SelectWindow>
 8008d9c:	f7ff ff4c 	bl	8008c38 <WM_Activate>
 8008da0:	4b06      	ldr	r3, [pc, #24]	; (8008dbc <WM_Init+0xb0>)
 8008da2:	4815      	ldr	r0, [pc, #84]	; (8008df8 <WM_Init+0xec>)
 8008da4:	4a15      	ldr	r2, [pc, #84]	; (8008dfc <WM_Init+0xf0>)
 8008da6:	2101      	movs	r1, #1
 8008da8:	7019      	strb	r1, [r3, #0]
 8008daa:	6002      	str	r2, [r0, #0]
 8008dac:	b004      	add	sp, #16
 8008dae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008db2:	f004 bac1 	b.w	800d338 <GUI__RegisterExit>
 8008db6:	b004      	add	sp, #16
 8008db8:	bd10      	pop	{r4, pc}
 8008dba:	bf00      	nop
 8008dbc:	2000e058 	.word	0x2000e058
 8008dc0:	2000e628 	.word	0x2000e628
 8008dc4:	2000e054 	.word	0x2000e054
 8008dc8:	20000278 	.word	0x20000278
 8008dcc:	2000e624 	.word	0x2000e624
 8008dd0:	2000e604 	.word	0x2000e604
 8008dd4:	08008ca5 	.word	0x08008ca5
 8008dd8:	2000e60c 	.word	0x2000e60c
 8008ddc:	2000e638 	.word	0x2000e638
 8008de0:	2000e768 	.word	0x2000e768
 8008de4:	2000e758 	.word	0x2000e758
 8008de8:	2000e748 	.word	0x2000e748
 8008dec:	2000e770 	.word	0x2000e770
 8008df0:	2000e760 	.word	0x2000e760
 8008df4:	2000e750 	.word	0x2000e750
 8008df8:	2000e034 	.word	0x2000e034
 8008dfc:	08007add 	.word	0x08007add

08008e00 <_CreateStaticDevice>:
 8008e00:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008e04:	b087      	sub	sp, #28
 8008e06:	4604      	mov	r4, r0
 8008e08:	f004 fe98 	bl	800db3c <GUI_ALLOC_LockH>
 8008e0c:	4603      	mov	r3, r0
 8008e0e:	a806      	add	r0, sp, #24
 8008e10:	f9b3 6004 	ldrsh.w	r6, [r3, #4]
 8008e14:	f9b3 7000 	ldrsh.w	r7, [r3]
 8008e18:	f9b3 5006 	ldrsh.w	r5, [r3, #6]
 8008e1c:	f9b3 8002 	ldrsh.w	r8, [r3, #2]
 8008e20:	f840 3d04 	str.w	r3, [r0, #-4]!
 8008e24:	f8d3 9024 	ldr.w	r9, [r3, #36]	; 0x24
 8008e28:	f004 fe96 	bl	800db58 <GUI_ALLOC_UnlockH>
 8008e2c:	1bf0      	subs	r0, r6, r7
 8008e2e:	1c46      	adds	r6, r0, #1
 8008e30:	ebc8 0105 	rsb	r1, r8, r5
 8008e34:	1c4d      	adds	r5, r1, #1
 8008e36:	2e00      	cmp	r6, #0
 8008e38:	dd4b      	ble.n	8008ed2 <_CreateStaticDevice+0xd2>
 8008e3a:	2d00      	cmp	r5, #0
 8008e3c:	dd49      	ble.n	8008ed2 <_CreateStaticDevice+0xd2>
 8008e3e:	f1b9 0f00 	cmp.w	r9, #0
 8008e42:	d048      	beq.n	8008ed6 <_CreateStaticDevice+0xd6>
 8008e44:	4648      	mov	r0, r9
 8008e46:	f004 fe79 	bl	800db3c <GUI_ALLOC_LockH>
 8008e4a:	a906      	add	r1, sp, #24
 8008e4c:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 8008e50:	f841 0d08 	str.w	r0, [r1, #-8]!
 8008e54:	88c5      	ldrh	r5, [r0, #6]
 8008e56:	4608      	mov	r0, r1
 8008e58:	f004 fe7e 	bl	800db58 <GUI_ALLOC_UnlockH>
 8008e5c:	42be      	cmp	r6, r7
 8008e5e:	d102      	bne.n	8008e66 <_CreateStaticDevice+0x66>
 8008e60:	b22d      	sxth	r5, r5
 8008e62:	4545      	cmp	r5, r8
 8008e64:	d030      	beq.n	8008ec8 <_CreateStaticDevice+0xc8>
 8008e66:	4648      	mov	r0, r9
 8008e68:	4639      	mov	r1, r7
 8008e6a:	4642      	mov	r2, r8
 8008e6c:	f000 f884 	bl	8008f78 <GUI_MEMDEV_SetOrg>
 8008e70:	e02a      	b.n	8008ec8 <_CreateStaticDevice+0xc8>
 8008e72:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8008e74:	f442 3380 	orr.w	r3, r2, #65536	; 0x10000
 8008e78:	6283      	str	r3, [r0, #40]	; 0x28
 8008e7a:	4608      	mov	r0, r1
 8008e7c:	f004 fe6c 	bl	800db58 <GUI_ALLOC_UnlockH>
 8008e80:	4638      	mov	r0, r7
 8008e82:	f000 ff5d 	bl	8009d40 <GUI_MEMDEV_Select>
 8008e86:	4680      	mov	r8, r0
 8008e88:	4648      	mov	r0, r9
 8008e8a:	f003 fa93 	bl	800c3b4 <GUI__AlphaSuppressMixing>
 8008e8e:	4638      	mov	r0, r7
 8008e90:	fb05 f706 	mul.w	r7, r5, r6
 8008e94:	4e2c      	ldr	r6, [pc, #176]	; (8008f48 <_CreateStaticDevice+0x148>)
 8008e96:	4d2d      	ldr	r5, [pc, #180]	; (8008f4c <_CreateStaticDevice+0x14c>)
 8008e98:	f000 f8ae 	bl	8008ff8 <GUI_MEMDEV_GetDataPtr>
 8008e9c:	7831      	ldrb	r1, [r6, #0]
 8008e9e:	4e2c      	ldr	r6, [pc, #176]	; (8008f50 <_CreateStaticDevice+0x150>)
 8008ea0:	00ba      	lsls	r2, r7, #2
 8008ea2:	f002 fcf9 	bl	800b898 <GUI__memset>
 8008ea6:	4620      	mov	r0, r4
 8008ea8:	682f      	ldr	r7, [r5, #0]
 8008eaa:	6034      	str	r4, [r6, #0]
 8008eac:	f006 fd06 	bl	800f8bc <WM_GetWindowOrgX>
 8008eb0:	6028      	str	r0, [r5, #0]
 8008eb2:	4620      	mov	r0, r4
 8008eb4:	f7ff fd72 	bl	800899c <WM__Paint1>
 8008eb8:	2000      	movs	r0, #0
 8008eba:	602f      	str	r7, [r5, #0]
 8008ebc:	6030      	str	r0, [r6, #0]
 8008ebe:	f003 fa79 	bl	800c3b4 <GUI__AlphaSuppressMixing>
 8008ec2:	4640      	mov	r0, r8
 8008ec4:	f000 ff3c 	bl	8009d40 <GUI_MEMDEV_Select>
 8008ec8:	4620      	mov	r0, r4
 8008eca:	f004 fe2d 	bl	800db28 <GUI_ALLOC_h2p>
 8008ece:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8008ed0:	e037      	b.n	8008f42 <_CreateStaticDevice+0x142>
 8008ed2:	2000      	movs	r0, #0
 8008ed4:	e035      	b.n	8008f42 <_CreateStaticDevice+0x142>
 8008ed6:	f7fe fd7b 	bl	80079d0 <WM_GetDesktopWindow>
 8008eda:	4284      	cmp	r4, r0
 8008edc:	d112      	bne.n	8008f04 <_CreateStaticDevice+0x104>
 8008ede:	f002 f897 	bl	800b010 <LCD_GetXSize>
 8008ee2:	4681      	mov	r9, r0
 8008ee4:	f002 f89c 	bl	800b020 <LCD_GetYSize>
 8008ee8:	454e      	cmp	r6, r9
 8008eea:	dc02      	bgt.n	8008ef2 <_CreateStaticDevice+0xf2>
 8008eec:	4285      	cmp	r5, r0
 8008eee:	dd09      	ble.n	8008f04 <_CreateStaticDevice+0x104>
 8008ef0:	e000      	b.n	8008ef4 <_CreateStaticDevice+0xf4>
 8008ef2:	464e      	mov	r6, r9
 8008ef4:	4285      	cmp	r5, r0
 8008ef6:	bfa8      	it	ge
 8008ef8:	4605      	movge	r5, r0
 8008efa:	4631      	mov	r1, r6
 8008efc:	4620      	mov	r0, r4
 8008efe:	462a      	mov	r2, r5
 8008f00:	f7fe f9af 	bl	8007262 <WM_SetSize>
 8008f04:	4a13      	ldr	r2, [pc, #76]	; (8008f54 <_CreateStaticDevice+0x154>)
 8008f06:	4b14      	ldr	r3, [pc, #80]	; (8008f58 <_CreateStaticDevice+0x158>)
 8008f08:	9201      	str	r2, [sp, #4]
 8008f0a:	f04f 0901 	mov.w	r9, #1
 8008f0e:	4641      	mov	r1, r8
 8008f10:	9302      	str	r3, [sp, #8]
 8008f12:	4638      	mov	r0, r7
 8008f14:	4632      	mov	r2, r6
 8008f16:	462b      	mov	r3, r5
 8008f18:	f8cd 9000 	str.w	r9, [sp]
 8008f1c:	f000 fe22 	bl	8009b64 <GUI_MEMDEV__CreateFixed>
 8008f20:	4607      	mov	r7, r0
 8008f22:	4620      	mov	r0, r4
 8008f24:	f004 fe0a 	bl	800db3c <GUI_ALLOC_LockH>
 8008f28:	a906      	add	r1, sp, #24
 8008f2a:	6247      	str	r7, [r0, #36]	; 0x24
 8008f2c:	f841 0d04 	str.w	r0, [r1, #-4]!
 8008f30:	2f00      	cmp	r7, #0
 8008f32:	d19e      	bne.n	8008e72 <_CreateStaticDevice+0x72>
 8008f34:	4608      	mov	r0, r1
 8008f36:	f004 fe0f 	bl	800db58 <GUI_ALLOC_UnlockH>
 8008f3a:	4620      	mov	r0, r4
 8008f3c:	f7ff fd2e 	bl	800899c <WM__Paint1>
 8008f40:	4638      	mov	r0, r7
 8008f42:	b007      	add	sp, #28
 8008f44:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008f48:	20000258 	.word	0x20000258
 8008f4c:	2000e660 	.word	0x2000e660
 8008f50:	2000e650 	.word	0x2000e650
 8008f54:	080217f8 	.word	0x080217f8
 8008f58:	0802c3b8 	.word	0x0802c3b8

08008f5c <GUI_MEMDEV_Paint1Static>:
 8008f5c:	b538      	push	{r3, r4, r5, lr}
 8008f5e:	4605      	mov	r5, r0
 8008f60:	2405      	movs	r4, #5
 8008f62:	4628      	mov	r0, r5
 8008f64:	f7ff ff4c 	bl	8008e00 <_CreateStaticDevice>
 8008f68:	b910      	cbnz	r0, 8008f70 <GUI_MEMDEV_Paint1Static+0x14>
 8008f6a:	3c01      	subs	r4, #1
 8008f6c:	d1f9      	bne.n	8008f62 <GUI_MEMDEV_Paint1Static+0x6>
 8008f6e:	bd38      	pop	{r3, r4, r5, pc}
 8008f70:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008f74:	f007 b9da 	b.w	801032c <GUI_MEMDEV_Write>

08008f78 <GUI_MEMDEV_SetOrg>:
 8008f78:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008f7a:	460d      	mov	r5, r1
 8008f7c:	4614      	mov	r4, r2
 8008f7e:	b918      	cbnz	r0, 8008f88 <GUI_MEMDEV_SetOrg+0x10>
 8008f80:	4b11      	ldr	r3, [pc, #68]	; (8008fc8 <GUI_MEMDEV_SetOrg+0x50>)
 8008f82:	6818      	ldr	r0, [r3, #0]
 8008f84:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8008f86:	b1e8      	cbz	r0, 8008fc4 <GUI_MEMDEV_SetOrg+0x4c>
 8008f88:	f004 fdd8 	bl	800db3c <GUI_ALLOC_LockH>
 8008f8c:	b2a4      	uxth	r4, r4
 8008f8e:	b2ad      	uxth	r5, r5
 8008f90:	80c4      	strh	r4, [r0, #6]
 8008f92:	8085      	strh	r5, [r0, #4]
 8008f94:	9000      	str	r0, [sp, #0]
 8008f96:	f002 fb85 	bl	800b6a4 <LCD_SetClipRectMax>
 8008f9a:	9900      	ldr	r1, [sp, #0]
 8008f9c:	6948      	ldr	r0, [r1, #20]
 8008f9e:	b170      	cbz	r0, 8008fbe <GUI_MEMDEV_SetOrg+0x46>
 8008fa0:	f004 fdcc 	bl	800db3c <GUI_ALLOC_LockH>
 8008fa4:	9b00      	ldr	r3, [sp, #0]
 8008fa6:	9001      	str	r0, [sp, #4]
 8008fa8:	891a      	ldrh	r2, [r3, #8]
 8008faa:	8959      	ldrh	r1, [r3, #10]
 8008fac:	8082      	strh	r2, [r0, #4]
 8008fae:	80c1      	strh	r1, [r0, #6]
 8008fb0:	b112      	cbz	r2, 8008fb8 <GUI_MEMDEV_SetOrg+0x40>
 8008fb2:	b109      	cbz	r1, 8008fb8 <GUI_MEMDEV_SetOrg+0x40>
 8008fb4:	8005      	strh	r5, [r0, #0]
 8008fb6:	8044      	strh	r4, [r0, #2]
 8008fb8:	a801      	add	r0, sp, #4
 8008fba:	f004 fdcd 	bl	800db58 <GUI_ALLOC_UnlockH>
 8008fbe:	4668      	mov	r0, sp
 8008fc0:	f004 fdca 	bl	800db58 <GUI_ALLOC_UnlockH>
 8008fc4:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 8008fc6:	bf00      	nop
 8008fc8:	20000278 	.word	0x20000278

08008fcc <GUI_MEMDEV_GetYSize>:
 8008fcc:	b513      	push	{r0, r1, r4, lr}
 8008fce:	b920      	cbnz	r0, 8008fda <GUI_MEMDEV_GetYSize+0xe>
 8008fd0:	4b08      	ldr	r3, [pc, #32]	; (8008ff4 <GUI_MEMDEV_GetYSize+0x28>)
 8008fd2:	6818      	ldr	r0, [r3, #0]
 8008fd4:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8008fd6:	4604      	mov	r4, r0
 8008fd8:	b148      	cbz	r0, 8008fee <GUI_MEMDEV_GetYSize+0x22>
 8008fda:	f004 fdaf 	bl	800db3c <GUI_ALLOC_LockH>
 8008fde:	a902      	add	r1, sp, #8
 8008fe0:	f9b0 400a 	ldrsh.w	r4, [r0, #10]
 8008fe4:	f841 0d04 	str.w	r0, [r1, #-4]!
 8008fe8:	4608      	mov	r0, r1
 8008fea:	f004 fdb5 	bl	800db58 <GUI_ALLOC_UnlockH>
 8008fee:	4620      	mov	r0, r4
 8008ff0:	bd1c      	pop	{r2, r3, r4, pc}
 8008ff2:	bf00      	nop
 8008ff4:	20000278 	.word	0x20000278

08008ff8 <GUI_MEMDEV_GetDataPtr>:
 8008ff8:	b513      	push	{r0, r1, r4, lr}
 8008ffa:	f004 fd9f 	bl	800db3c <GUI_ALLOC_LockH>
 8008ffe:	4604      	mov	r4, r0
 8009000:	a802      	add	r0, sp, #8
 8009002:	f840 4d04 	str.w	r4, [r0, #-4]!
 8009006:	f004 fda7 	bl	800db58 <GUI_ALLOC_UnlockH>
 800900a:	f104 0018 	add.w	r0, r4, #24
 800900e:	bd1c      	pop	{r2, r3, r4, pc}

08009010 <GUI_MEMDEV_Draw>:
 8009010:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009014:	461e      	mov	r6, r3
 8009016:	4b46      	ldr	r3, [pc, #280]	; (8009130 <GUI_MEMDEV_Draw+0x120>)
 8009018:	b087      	sub	sp, #28
 800901a:	4604      	mov	r4, r0
 800901c:	6818      	ldr	r0, [r3, #0]
 800901e:	9102      	str	r1, [sp, #8]
 8009020:	7c45      	ldrb	r5, [r0, #17]
 8009022:	4944      	ldr	r1, [pc, #272]	; (8009134 <GUI_MEMDEV_Draw+0x124>)
 8009024:	4693      	mov	fp, r2
 8009026:	574a      	ldrsb	r2, [r1, r5]
 8009028:	2a01      	cmp	r2, #1
 800902a:	4628      	mov	r0, r5
 800902c:	dd06      	ble.n	800903c <GUI_MEMDEV_Draw+0x2c>
 800902e:	f001 ffdc 	bl	800afea <LCD_GetXSizeEx>
 8009032:	4680      	mov	r8, r0
 8009034:	4628      	mov	r0, r5
 8009036:	f001 ffdb 	bl	800aff0 <LCD_GetYSizeEx>
 800903a:	e005      	b.n	8009048 <GUI_MEMDEV_Draw+0x38>
 800903c:	f001 ffdb 	bl	800aff6 <LCD_GetVXSizeEx>
 8009040:	4680      	mov	r8, r0
 8009042:	4628      	mov	r0, r5
 8009044:	f001 ffda 	bl	800affc <LCD_GetVYSizeEx>
 8009048:	4605      	mov	r5, r0
 800904a:	b32c      	cbz	r4, 8009098 <GUI_MEMDEV_Draw+0x88>
 800904c:	a804      	add	r0, sp, #16
 800904e:	a905      	add	r1, sp, #20
 8009050:	f003 fb56 	bl	800c700 <GUI_GetOrg>
 8009054:	9b04      	ldr	r3, [sp, #16]
 8009056:	f9b4 9000 	ldrsh.w	r9, [r4]
 800905a:	f9b4 7002 	ldrsh.w	r7, [r4, #2]
 800905e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8009062:	eb08 0103 	add.w	r1, r8, r3
 8009066:	9b05      	ldr	r3, [sp, #20]
 8009068:	1e4a      	subs	r2, r1, #1
 800906a:	18ed      	adds	r5, r5, r3
 800906c:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8009070:	1e6b      	subs	r3, r5, #1
 8009072:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8009076:	ea27 77e7 	bic.w	r7, r7, r7, asr #31
 800907a:	4282      	cmp	r2, r0
 800907c:	bfd4      	ite	le
 800907e:	ebc9 0002 	rsble	r0, r9, r2
 8009082:	ebc9 0000 	rsbgt	r0, r9, r0
 8009086:	428b      	cmp	r3, r1
 8009088:	bfd4      	ite	le
 800908a:	ebc7 0103 	rsble	r1, r7, r3
 800908e:	ebc7 0101 	rsbgt	r1, r7, r1
 8009092:	1c42      	adds	r2, r0, #1
 8009094:	1c4d      	adds	r5, r1, #1
 8009096:	e002      	b.n	800909e <GUI_MEMDEV_Draw+0x8e>
 8009098:	4642      	mov	r2, r8
 800909a:	4627      	mov	r7, r4
 800909c:	46a1      	mov	r9, r4
 800909e:	b906      	cbnz	r6, 80090a2 <GUI_MEMDEV_Draw+0x92>
 80090a0:	426e      	negs	r6, r5
 80090a2:	2a00      	cmp	r2, #0
 80090a4:	dd3f      	ble.n	8009126 <GUI_MEMDEV_Draw+0x116>
 80090a6:	2d00      	cmp	r5, #0
 80090a8:	dd3d      	ble.n	8009126 <GUI_MEMDEV_Draw+0x116>
 80090aa:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80090ac:	4648      	mov	r0, r9
 80090ae:	9400      	str	r4, [sp, #0]
 80090b0:	4639      	mov	r1, r7
 80090b2:	4633      	mov	r3, r6
 80090b4:	f000 fe0a 	bl	8009ccc <GUI_MEMDEV_CreateEx>
 80090b8:	4604      	mov	r4, r0
 80090ba:	b920      	cbnz	r0, 80090c6 <GUI_MEMDEV_Draw+0xb6>
 80090bc:	4658      	mov	r0, fp
 80090be:	9a02      	ldr	r2, [sp, #8]
 80090c0:	4790      	blx	r2
 80090c2:	2001      	movs	r0, #1
 80090c4:	e030      	b.n	8009128 <GUI_MEMDEV_Draw+0x118>
 80090c6:	f7ff ff81 	bl	8008fcc <GUI_MEMDEV_GetYSize>
 80090ca:	4682      	mov	sl, r0
 80090cc:	f1ca 0600 	rsb	r6, sl, #0
 80090d0:	4620      	mov	r0, r4
 80090d2:	f000 fe35 	bl	8009d40 <GUI_MEMDEV_Select>
 80090d6:	46a8      	mov	r8, r5
 80090d8:	9603      	str	r6, [sp, #12]
 80090da:	2600      	movs	r6, #0
 80090dc:	45d0      	cmp	r8, sl
 80090de:	da03      	bge.n	80090e8 <GUI_MEMDEV_Draw+0xd8>
 80090e0:	4620      	mov	r0, r4
 80090e2:	4641      	mov	r1, r8
 80090e4:	f007 fa1e 	bl	8010524 <GUI_MEMDEV_ReduceYSize>
 80090e8:	b13e      	cbz	r6, 80090fa <GUI_MEMDEV_Draw+0xea>
 80090ea:	4620      	mov	r0, r4
 80090ec:	4649      	mov	r1, r9
 80090ee:	19f2      	adds	r2, r6, r7
 80090f0:	f7ff ff42 	bl	8008f78 <GUI_MEMDEV_SetOrg>
 80090f4:	4620      	mov	r0, r4
 80090f6:	f007 fa2b 	bl	8010550 <GUI_MEMDEV_Clear>
 80090fa:	4658      	mov	r0, fp
 80090fc:	9a02      	ldr	r2, [sp, #8]
 80090fe:	4790      	blx	r2
 8009100:	4b0d      	ldr	r3, [pc, #52]	; (8009138 <GUI_MEMDEV_Draw+0x128>)
 8009102:	6819      	ldr	r1, [r3, #0]
 8009104:	b109      	cbz	r1, 800910a <GUI_MEMDEV_Draw+0xfa>
 8009106:	2000      	movs	r0, #0
 8009108:	4788      	blx	r1
 800910a:	4620      	mov	r0, r4
 800910c:	f000 fe90 	bl	8009e30 <GUI_MEMDEV_CopyToLCD>
 8009110:	4456      	add	r6, sl
 8009112:	9803      	ldr	r0, [sp, #12]
 8009114:	42ae      	cmp	r6, r5
 8009116:	4480      	add	r8, r0
 8009118:	dbe0      	blt.n	80090dc <GUI_MEMDEV_Draw+0xcc>
 800911a:	4620      	mov	r0, r4
 800911c:	f000 fdb4 	bl	8009c88 <GUI_MEMDEV_Delete>
 8009120:	2000      	movs	r0, #0
 8009122:	f000 fe0d 	bl	8009d40 <GUI_MEMDEV_Select>
 8009126:	2000      	movs	r0, #0
 8009128:	b007      	add	sp, #28
 800912a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800912e:	bf00      	nop
 8009130:	20000278 	.word	0x20000278
 8009134:	2000e658 	.word	0x2000e658
 8009138:	2000e05c 	.word	0x2000e05c

0800913c <_GetDevData>:
 800913c:	4802      	ldr	r0, [pc, #8]	; (8009148 <_GetDevData+0xc>)
 800913e:	2901      	cmp	r1, #1
 8009140:	bf18      	it	ne
 8009142:	2000      	movne	r0, #0
 8009144:	4770      	bx	lr
 8009146:	bf00      	nop
 8009148:	080217f8 	.word	0x080217f8

0800914c <_GetDevFunc>:
 800914c:	4802      	ldr	r0, [pc, #8]	; (8009158 <_GetDevFunc+0xc>)
 800914e:	2916      	cmp	r1, #22
 8009150:	bf18      	it	ne
 8009152:	2000      	movne	r0, #0
 8009154:	4770      	bx	lr
 8009156:	bf00      	nop
 8009158:	0801013d 	.word	0x0801013d

0800915c <_GetDevProp>:
 800915c:	2908      	cmp	r1, #8
 800915e:	bf0c      	ite	eq
 8009160:	2020      	moveq	r0, #32
 8009162:	2000      	movne	r0, #0
 8009164:	4770      	bx	lr

08009166 <_SetOrg>:
 8009166:	6800      	ldr	r0, [r0, #0]
 8009168:	b508      	push	{r3, lr}
 800916a:	68c3      	ldr	r3, [r0, #12]
 800916c:	6a1b      	ldr	r3, [r3, #32]
 800916e:	4798      	blx	r3
 8009170:	bd08      	pop	{r3, pc}

08009172 <_GetRect>:
 8009172:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009174:	6880      	ldr	r0, [r0, #8]
 8009176:	460c      	mov	r4, r1
 8009178:	f004 fce0 	bl	800db3c <GUI_ALLOC_LockH>
 800917c:	4603      	mov	r3, r0
 800917e:	a802      	add	r0, sp, #8
 8009180:	8899      	ldrh	r1, [r3, #4]
 8009182:	891d      	ldrh	r5, [r3, #8]
 8009184:	88da      	ldrh	r2, [r3, #6]
 8009186:	f840 3d04 	str.w	r3, [r0, #-4]!
 800918a:	895b      	ldrh	r3, [r3, #10]
 800918c:	8021      	strh	r1, [r4, #0]
 800918e:	1949      	adds	r1, r1, r5
 8009190:	3901      	subs	r1, #1
 8009192:	8062      	strh	r2, [r4, #2]
 8009194:	18d2      	adds	r2, r2, r3
 8009196:	80a1      	strh	r1, [r4, #4]
 8009198:	1e51      	subs	r1, r2, #1
 800919a:	80e1      	strh	r1, [r4, #6]
 800919c:	f004 fcdc 	bl	800db58 <GUI_ALLOC_UnlockH>
 80091a0:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
	...

080091a4 <_XY2PTR>:
 80091a4:	4b0e      	ldr	r3, [pc, #56]	; (80091e0 <_XY2PTR+0x3c>)
 80091a6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80091a8:	4605      	mov	r5, r0
 80091aa:	6818      	ldr	r0, [r3, #0]
 80091ac:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80091ae:	460e      	mov	r6, r1
 80091b0:	f004 fcc4 	bl	800db3c <GUI_ALLOC_LockH>
 80091b4:	4602      	mov	r2, r0
 80091b6:	a802      	add	r0, sp, #8
 80091b8:	f9b2 4006 	ldrsh.w	r4, [r2, #6]
 80091bc:	68d3      	ldr	r3, [r2, #12]
 80091be:	f840 2d04 	str.w	r2, [r0, #-4]!
 80091c2:	f102 0118 	add.w	r1, r2, #24
 80091c6:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 80091ca:	1b36      	subs	r6, r6, r4
 80091cc:	fb03 1106 	mla	r1, r3, r6, r1
 80091d0:	1aad      	subs	r5, r5, r2
 80091d2:	eb01 0485 	add.w	r4, r1, r5, lsl #2
 80091d6:	f004 fcbf 	bl	800db58 <GUI_ALLOC_UnlockH>
 80091da:	4620      	mov	r0, r4
 80091dc:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
 80091de:	bf00      	nop
 80091e0:	20000278 	.word	0x20000278

080091e4 <_GetPixelIndex>:
 80091e4:	b508      	push	{r3, lr}
 80091e6:	4608      	mov	r0, r1
 80091e8:	4611      	mov	r1, r2
 80091ea:	f7ff ffdb 	bl	80091a4 <_XY2PTR>
 80091ee:	6800      	ldr	r0, [r0, #0]
 80091f0:	bd08      	pop	{r3, pc}
	...

080091f4 <_XorPixel>:
 80091f4:	4b15      	ldr	r3, [pc, #84]	; (800924c <_XorPixel+0x58>)
 80091f6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80091f8:	6818      	ldr	r0, [r3, #0]
 80091fa:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80091fc:	4615      	mov	r5, r2
 80091fe:	460e      	mov	r6, r1
 8009200:	f004 fc9c 	bl	800db3c <GUI_ALLOC_LockH>
 8009204:	4629      	mov	r1, r5
 8009206:	9000      	str	r0, [sp, #0]
 8009208:	4630      	mov	r0, r6
 800920a:	f7ff ffcb 	bl	80091a4 <_XY2PTR>
 800920e:	9900      	ldr	r1, [sp, #0]
 8009210:	680a      	ldr	r2, [r1, #0]
 8009212:	6913      	ldr	r3, [r2, #16]
 8009214:	4604      	mov	r4, r0
 8009216:	6898      	ldr	r0, [r3, #8]
 8009218:	4780      	blx	r0
 800921a:	6821      	ldr	r1, [r4, #0]
 800921c:	9b00      	ldr	r3, [sp, #0]
 800921e:	ea81 0200 	eor.w	r2, r1, r0
 8009222:	6022      	str	r2, [r4, #0]
 8009224:	6958      	ldr	r0, [r3, #20]
 8009226:	b160      	cbz	r0, 8009242 <_XorPixel+0x4e>
 8009228:	f004 fc88 	bl	800db3c <GUI_ALLOC_LockH>
 800922c:	ac02      	add	r4, sp, #8
 800922e:	6882      	ldr	r2, [r0, #8]
 8009230:	f844 0d04 	str.w	r0, [r4, #-4]!
 8009234:	6813      	ldr	r3, [r2, #0]
 8009236:	4631      	mov	r1, r6
 8009238:	462a      	mov	r2, r5
 800923a:	4798      	blx	r3
 800923c:	4620      	mov	r0, r4
 800923e:	f004 fc8b 	bl	800db58 <GUI_ALLOC_UnlockH>
 8009242:	4668      	mov	r0, sp
 8009244:	f004 fc88 	bl	800db58 <GUI_ALLOC_UnlockH>
 8009248:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
 800924a:	bf00      	nop
 800924c:	20000278 	.word	0x20000278

08009250 <_SetPixelIndex>:
 8009250:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009252:	461c      	mov	r4, r3
 8009254:	4b10      	ldr	r3, [pc, #64]	; (8009298 <_SetPixelIndex+0x48>)
 8009256:	6818      	ldr	r0, [r3, #0]
 8009258:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800925a:	460e      	mov	r6, r1
 800925c:	4615      	mov	r5, r2
 800925e:	f004 fc6d 	bl	800db3c <GUI_ALLOC_LockH>
 8009262:	4629      	mov	r1, r5
 8009264:	9000      	str	r0, [sp, #0]
 8009266:	4630      	mov	r0, r6
 8009268:	f7ff ff9c 	bl	80091a4 <_XY2PTR>
 800926c:	9900      	ldr	r1, [sp, #0]
 800926e:	6004      	str	r4, [r0, #0]
 8009270:	6948      	ldr	r0, [r1, #20]
 8009272:	b160      	cbz	r0, 800928e <_SetPixelIndex+0x3e>
 8009274:	f004 fc62 	bl	800db3c <GUI_ALLOC_LockH>
 8009278:	ac02      	add	r4, sp, #8
 800927a:	6883      	ldr	r3, [r0, #8]
 800927c:	f844 0d04 	str.w	r0, [r4, #-4]!
 8009280:	681b      	ldr	r3, [r3, #0]
 8009282:	4631      	mov	r1, r6
 8009284:	462a      	mov	r2, r5
 8009286:	4798      	blx	r3
 8009288:	4620      	mov	r0, r4
 800928a:	f004 fc65 	bl	800db58 <GUI_ALLOC_UnlockH>
 800928e:	4668      	mov	r0, sp
 8009290:	f004 fc62 	bl	800db58 <GUI_ALLOC_UnlockH>
 8009294:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
 8009296:	bf00      	nop
 8009298:	20000278 	.word	0x20000278

0800929c <_DrawVLine>:
 800929c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80092a0:	461e      	mov	r6, r3
 80092a2:	4b2b      	ldr	r3, [pc, #172]	; (8009350 <_DrawVLine+0xb4>)
 80092a4:	6818      	ldr	r0, [r3, #0]
 80092a6:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80092a8:	460f      	mov	r7, r1
 80092aa:	4614      	mov	r4, r2
 80092ac:	f004 fc46 	bl	800db3c <GUI_ALLOC_LockH>
 80092b0:	9000      	str	r0, [sp, #0]
 80092b2:	6940      	ldr	r0, [r0, #20]
 80092b4:	b108      	cbz	r0, 80092ba <_DrawVLine+0x1e>
 80092b6:	f004 fc41 	bl	800db3c <GUI_ALLOC_LockH>
 80092ba:	9001      	str	r0, [sp, #4]
 80092bc:	4621      	mov	r1, r4
 80092be:	4638      	mov	r0, r7
 80092c0:	f7ff ff70 	bl	80091a4 <_XY2PTR>
 80092c4:	4a22      	ldr	r2, [pc, #136]	; (8009350 <_DrawVLine+0xb4>)
 80092c6:	9b00      	ldr	r3, [sp, #0]
 80092c8:	4605      	mov	r5, r0
 80092ca:	6810      	ldr	r0, [r2, #0]
 80092cc:	f8d3 800c 	ldr.w	r8, [r3, #12]
 80092d0:	7c02      	ldrb	r2, [r0, #16]
 80092d2:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
 80092d4:	07d2      	lsls	r2, r2, #31
 80092d6:	f8d1 9000 	ldr.w	r9, [r1]
 80092da:	d51f      	bpl.n	800931c <_DrawVLine+0x80>
 80092dc:	6818      	ldr	r0, [r3, #0]
 80092de:	6902      	ldr	r2, [r0, #16]
 80092e0:	6891      	ldr	r1, [r2, #8]
 80092e2:	4788      	blx	r1
 80092e4:	4680      	mov	r8, r0
 80092e6:	9801      	ldr	r0, [sp, #4]
 80092e8:	b128      	cbz	r0, 80092f6 <_DrawVLine+0x5a>
 80092ea:	6883      	ldr	r3, [r0, #8]
 80092ec:	4639      	mov	r1, r7
 80092ee:	f8d3 c000 	ldr.w	ip, [r3]
 80092f2:	4622      	mov	r2, r4
 80092f4:	47e0      	blx	ip
 80092f6:	9900      	ldr	r1, [sp, #0]
 80092f8:	6828      	ldr	r0, [r5, #0]
 80092fa:	68cb      	ldr	r3, [r1, #12]
 80092fc:	3401      	adds	r4, #1
 80092fe:	ea80 0208 	eor.w	r2, r0, r8
 8009302:	42b4      	cmp	r4, r6
 8009304:	602a      	str	r2, [r5, #0]
 8009306:	441d      	add	r5, r3
 8009308:	dded      	ble.n	80092e6 <_DrawVLine+0x4a>
 800930a:	4668      	mov	r0, sp
 800930c:	f004 fc24 	bl	800db58 <GUI_ALLOC_UnlockH>
 8009310:	9801      	ldr	r0, [sp, #4]
 8009312:	b1d0      	cbz	r0, 800934a <_DrawVLine+0xae>
 8009314:	a801      	add	r0, sp, #4
 8009316:	f004 fc1f 	bl	800db58 <GUI_ALLOC_UnlockH>
 800931a:	e016      	b.n	800934a <_DrawVLine+0xae>
 800931c:	9b01      	ldr	r3, [sp, #4]
 800931e:	b163      	cbz	r3, 800933a <_DrawVLine+0x9e>
 8009320:	9801      	ldr	r0, [sp, #4]
 8009322:	6881      	ldr	r1, [r0, #8]
 8009324:	4622      	mov	r2, r4
 8009326:	680b      	ldr	r3, [r1, #0]
 8009328:	3401      	adds	r4, #1
 800932a:	4639      	mov	r1, r7
 800932c:	4798      	blx	r3
 800932e:	42b4      	cmp	r4, r6
 8009330:	f8c5 9000 	str.w	r9, [r5]
 8009334:	4445      	add	r5, r8
 8009336:	ddf3      	ble.n	8009320 <_DrawVLine+0x84>
 8009338:	e7e7      	b.n	800930a <_DrawVLine+0x6e>
 800933a:	1b34      	subs	r4, r6, r4
 800933c:	3401      	adds	r4, #1
 800933e:	3c01      	subs	r4, #1
 8009340:	f8c5 9000 	str.w	r9, [r5]
 8009344:	4445      	add	r5, r8
 8009346:	d1fa      	bne.n	800933e <_DrawVLine+0xa2>
 8009348:	e7df      	b.n	800930a <_DrawVLine+0x6e>
 800934a:	e8bd 83fe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
 800934e:	bf00      	nop
 8009350:	20000278 	.word	0x20000278

08009354 <_FillRect>:
 8009354:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009358:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800940c <_FillRect+0xb8>
 800935c:	4614      	mov	r4, r2
 800935e:	f8d8 2000 	ldr.w	r2, [r8]
 8009362:	b085      	sub	sp, #20
 8009364:	6e10      	ldr	r0, [r2, #96]	; 0x60
 8009366:	f8dd 9038 	ldr.w	r9, [sp, #56]	; 0x38
 800936a:	461d      	mov	r5, r3
 800936c:	460f      	mov	r7, r1
 800936e:	f004 fbe5 	bl	800db3c <GUI_ALLOC_LockH>
 8009372:	4621      	mov	r1, r4
 8009374:	9002      	str	r0, [sp, #8]
 8009376:	4638      	mov	r0, r7
 8009378:	f7ff ff14 	bl	80091a4 <_XY2PTR>
 800937c:	f8d8 3000 	ldr.w	r3, [r8]
 8009380:	4606      	mov	r6, r0
 8009382:	9802      	ldr	r0, [sp, #8]
 8009384:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8009386:	f8d0 a00c 	ldr.w	sl, [r0, #12]
 800938a:	6940      	ldr	r0, [r0, #20]
 800938c:	f8d2 b000 	ldr.w	fp, [r2]
 8009390:	1be9      	subs	r1, r5, r7
 8009392:	1c4d      	adds	r5, r1, #1
 8009394:	b338      	cbz	r0, 80093e6 <_FillRect+0x92>
 8009396:	f004 fbd1 	bl	800db3c <GUI_ALLOC_LockH>
 800939a:	f10d 0810 	add.w	r8, sp, #16
 800939e:	ebc4 0109 	rsb	r1, r4, r9
 80093a2:	f848 0d04 	str.w	r0, [r8, #-4]!
 80093a6:	1c4b      	adds	r3, r1, #1
 80093a8:	9300      	str	r3, [sp, #0]
 80093aa:	4639      	mov	r1, r7
 80093ac:	4622      	mov	r2, r4
 80093ae:	462b      	mov	r3, r5
 80093b0:	f007 f8a3 	bl	80104fa <GUI_USAGE_AddRect>
 80093b4:	4640      	mov	r0, r8
 80093b6:	f004 fbcf 	bl	800db58 <GUI_ALLOC_UnlockH>
 80093ba:	e014      	b.n	80093e6 <_FillRect+0x92>
 80093bc:	4813      	ldr	r0, [pc, #76]	; (800940c <_FillRect+0xb8>)
 80093be:	6802      	ldr	r2, [r0, #0]
 80093c0:	7c11      	ldrb	r1, [r2, #16]
 80093c2:	07c9      	lsls	r1, r1, #31
 80093c4:	d512      	bpl.n	80093ec <_FillRect+0x98>
 80093c6:	9a02      	ldr	r2, [sp, #8]
 80093c8:	6811      	ldr	r1, [r2, #0]
 80093ca:	6908      	ldr	r0, [r1, #16]
 80093cc:	6883      	ldr	r3, [r0, #8]
 80093ce:	4798      	blx	r3
 80093d0:	4632      	mov	r2, r6
 80093d2:	462b      	mov	r3, r5
 80093d4:	6811      	ldr	r1, [r2, #0]
 80093d6:	3b01      	subs	r3, #1
 80093d8:	ea81 0100 	eor.w	r1, r1, r0
 80093dc:	f842 1b04 	str.w	r1, [r2], #4
 80093e0:	d1f8      	bne.n	80093d4 <_FillRect+0x80>
 80093e2:	4456      	add	r6, sl
 80093e4:	3401      	adds	r4, #1
 80093e6:	454c      	cmp	r4, r9
 80093e8:	dde8      	ble.n	80093bc <_FillRect+0x68>
 80093ea:	e008      	b.n	80093fe <_FillRect+0xaa>
 80093ec:	2d00      	cmp	r5, #0
 80093ee:	ddf8      	ble.n	80093e2 <_FillRect+0x8e>
 80093f0:	462b      	mov	r3, r5
 80093f2:	4630      	mov	r0, r6
 80093f4:	3b01      	subs	r3, #1
 80093f6:	f840 bb04 	str.w	fp, [r0], #4
 80093fa:	d1fb      	bne.n	80093f4 <_FillRect+0xa0>
 80093fc:	e7f1      	b.n	80093e2 <_FillRect+0x8e>
 80093fe:	a802      	add	r0, sp, #8
 8009400:	f004 fbaa 	bl	800db58 <GUI_ALLOC_UnlockH>
 8009404:	b005      	add	sp, #20
 8009406:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800940a:	bf00      	nop
 800940c:	20000278 	.word	0x20000278

08009410 <_DrawHLine>:
 8009410:	b507      	push	{r0, r1, r2, lr}
 8009412:	9200      	str	r2, [sp, #0]
 8009414:	f7ff ff9e 	bl	8009354 <_FillRect>
 8009418:	bd0e      	pop	{r1, r2, r3, pc}
	...

0800941c <_DrawBitmap>:
 800941c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009420:	469a      	mov	sl, r3
 8009422:	4b98      	ldr	r3, [pc, #608]	; (8009684 <_DrawBitmap+0x268>)
 8009424:	4681      	mov	r9, r0
 8009426:	6818      	ldr	r0, [r3, #0]
 8009428:	b093      	sub	sp, #76	; 0x4c
 800942a:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800942c:	9208      	str	r2, [sp, #32]
 800942e:	460c      	mov	r4, r1
 8009430:	f8dd b07c 	ldr.w	fp, [sp, #124]	; 0x7c
 8009434:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8009436:	2800      	cmp	r0, #0
 8009438:	f000 8372 	beq.w	8009b20 <_DrawBitmap+0x704>
 800943c:	f004 fb7e 	bl	800db3c <GUI_ALLOC_LockH>
 8009440:	9010      	str	r0, [sp, #64]	; 0x40
 8009442:	6940      	ldr	r0, [r0, #20]
 8009444:	b108      	cbz	r0, 800944a <_DrawBitmap+0x2e>
 8009446:	f004 fb79 	bl	800db3c <GUI_ALLOC_LockH>
 800944a:	9011      	str	r0, [sp, #68]	; 0x44
 800944c:	a812      	add	r0, sp, #72	; 0x48
 800944e:	f850 1d08 	ldr.w	r1, [r0, #-8]!
 8009452:	68ca      	ldr	r2, [r1, #12]
 8009454:	920c      	str	r2, [sp, #48]	; 0x30
 8009456:	f004 fb7f 	bl	800db58 <GUI_ALLOC_UnlockH>
 800945a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800945c:	9811      	ldr	r0, [sp, #68]	; 0x44
 800945e:	18e4      	adds	r4, r4, r3
 8009460:	9405      	str	r4, [sp, #20]
 8009462:	b168      	cbz	r0, 8009480 <_DrawBitmap+0x64>
 8009464:	4987      	ldr	r1, [pc, #540]	; (8009684 <_DrawBitmap+0x268>)
 8009466:	680a      	ldr	r2, [r1, #0]
 8009468:	7c13      	ldrb	r3, [r2, #16]
 800946a:	f003 0102 	and.w	r1, r3, #2
 800946e:	b2ca      	uxtb	r2, r1
 8009470:	b932      	cbnz	r2, 8009480 <_DrawBitmap+0x64>
 8009472:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8009474:	9a08      	ldr	r2, [sp, #32]
 8009476:	9300      	str	r3, [sp, #0]
 8009478:	4621      	mov	r1, r4
 800947a:	4653      	mov	r3, sl
 800947c:	f007 f83d 	bl	80104fa <GUI_USAGE_AddRect>
 8009480:	9805      	ldr	r0, [sp, #20]
 8009482:	9908      	ldr	r1, [sp, #32]
 8009484:	f7ff fe8e 	bl	80091a4 <_XY2PTR>
 8009488:	4680      	mov	r8, r0
 800948a:	981d      	ldr	r0, [sp, #116]	; 0x74
 800948c:	2817      	cmp	r0, #23
 800948e:	dd5b      	ble.n	8009548 <_DrawBitmap+0x12c>
 8009490:	ea4f 078a 	mov.w	r7, sl, lsl #2
 8009494:	9707      	str	r7, [sp, #28]
 8009496:	2700      	movs	r7, #0
 8009498:	991c      	ldr	r1, [sp, #112]	; 0x70
 800949a:	9811      	ldr	r0, [sp, #68]	; 0x44
 800949c:	428f      	cmp	r7, r1
 800949e:	da4f      	bge.n	8009540 <_DrawBitmap+0x124>
 80094a0:	b130      	cbz	r0, 80094b0 <_DrawBitmap+0x94>
 80094a2:	6883      	ldr	r3, [r0, #8]
 80094a4:	9a08      	ldr	r2, [sp, #32]
 80094a6:	685c      	ldr	r4, [r3, #4]
 80094a8:	9905      	ldr	r1, [sp, #20]
 80094aa:	18ba      	adds	r2, r7, r2
 80094ac:	4653      	mov	r3, sl
 80094ae:	47a0      	blx	r4
 80094b0:	f8d9 0010 	ldr.w	r0, [r9, #16]
 80094b4:	68c1      	ldr	r1, [r0, #12]
 80094b6:	b129      	cbz	r1, 80094c4 <_DrawBitmap+0xa8>
 80094b8:	4640      	mov	r0, r8
 80094ba:	4659      	mov	r1, fp
 80094bc:	9a07      	ldr	r2, [sp, #28]
 80094be:	f7f6 fe63 	bl	8000188 <memcpy>
 80094c2:	e037      	b.n	8009534 <_DrawBitmap+0x118>
 80094c4:	4644      	mov	r4, r8
 80094c6:	4655      	mov	r5, sl
 80094c8:	465e      	mov	r6, fp
 80094ca:	1d33      	adds	r3, r6, #4
 80094cc:	9306      	str	r3, [sp, #24]
 80094ce:	461a      	mov	r2, r3
 80094d0:	4629      	mov	r1, r5
 80094d2:	f04f 0e00 	mov.w	lr, #0
 80094d6:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 80094da:	b908      	cbnz	r0, 80094e0 <_DrawBitmap+0xc4>
 80094dc:	f10e 0e01 	add.w	lr, lr, #1
 80094e0:	3901      	subs	r1, #1
 80094e2:	b1a0      	cbz	r0, 800950e <_DrawBitmap+0xf2>
 80094e4:	f1be 0f00 	cmp.w	lr, #0
 80094e8:	d015      	beq.n	8009516 <_DrawBitmap+0xfa>
 80094ea:	ea4f 038e 	mov.w	r3, lr, lsl #2
 80094ee:	4620      	mov	r0, r4
 80094f0:	4631      	mov	r1, r6
 80094f2:	461a      	mov	r2, r3
 80094f4:	9304      	str	r3, [sp, #16]
 80094f6:	f8cd e00c 	str.w	lr, [sp, #12]
 80094fa:	f7f6 fe45 	bl	8000188 <memcpy>
 80094fe:	9804      	ldr	r0, [sp, #16]
 8009500:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8009504:	1824      	adds	r4, r4, r0
 8009506:	1836      	adds	r6, r6, r0
 8009508:	ebcc 0505 	rsb	r5, ip, r5
 800950c:	e010      	b.n	8009530 <_DrawBitmap+0x114>
 800950e:	3204      	adds	r2, #4
 8009510:	2900      	cmp	r1, #0
 8009512:	d1e0      	bne.n	80094d6 <_DrawBitmap+0xba>
 8009514:	e7e6      	b.n	80094e4 <_DrawBitmap+0xc8>
 8009516:	6830      	ldr	r0, [r6, #0]
 8009518:	0e06      	lsrs	r6, r0, #24
 800951a:	2eff      	cmp	r6, #255	; 0xff
 800951c:	d005      	beq.n	800952a <_DrawBitmap+0x10e>
 800951e:	43f3      	mvns	r3, r6
 8009520:	6821      	ldr	r1, [r4, #0]
 8009522:	b2da      	uxtb	r2, r3
 8009524:	f002 fcac 	bl	800be80 <GUI__MixColors>
 8009528:	6020      	str	r0, [r4, #0]
 800952a:	9e06      	ldr	r6, [sp, #24]
 800952c:	3404      	adds	r4, #4
 800952e:	3d01      	subs	r5, #1
 8009530:	2d00      	cmp	r5, #0
 8009532:	d1ca      	bne.n	80094ca <_DrawBitmap+0xae>
 8009534:	991e      	ldr	r1, [sp, #120]	; 0x78
 8009536:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8009538:	448b      	add	fp, r1
 800953a:	4490      	add	r8, r2
 800953c:	3701      	adds	r7, #1
 800953e:	e7ab      	b.n	8009498 <_DrawBitmap+0x7c>
 8009540:	2800      	cmp	r0, #0
 8009542:	f040 82ea 	bne.w	8009b1a <_DrawBitmap+0x6fe>
 8009546:	e2eb      	b.n	8009b20 <_DrawBitmap+0x704>
 8009548:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 800954a:	2c10      	cmp	r4, #16
 800954c:	d137      	bne.n	80095be <_DrawBitmap+0x1a2>
 800954e:	f10b 0702 	add.w	r7, fp, #2
 8009552:	f1a8 0804 	sub.w	r8, r8, #4
 8009556:	2500      	movs	r5, #0
 8009558:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800955a:	42a5      	cmp	r5, r4
 800955c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 800955e:	f280 8099 	bge.w	8009694 <_DrawBitmap+0x278>
 8009562:	9e08      	ldr	r6, [sp, #32]
 8009564:	19aa      	adds	r2, r5, r6
 8009566:	9207      	str	r2, [sp, #28]
 8009568:	b12c      	cbz	r4, 8009576 <_DrawBitmap+0x15a>
 800956a:	68a3      	ldr	r3, [r4, #8]
 800956c:	9905      	ldr	r1, [sp, #20]
 800956e:	685e      	ldr	r6, [r3, #4]
 8009570:	4620      	mov	r0, r4
 8009572:	4653      	mov	r3, sl
 8009574:	47b0      	blx	r6
 8009576:	f8cd 8018 	str.w	r8, [sp, #24]
 800957a:	46bb      	mov	fp, r7
 800957c:	4656      	mov	r6, sl
 800957e:	9a05      	ldr	r2, [sp, #20]
 8009580:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8009584:	eb02 000a 	add.w	r0, r2, sl
 8009588:	1b81      	subs	r1, r0, r6
 800958a:	685a      	ldr	r2, [r3, #4]
 800958c:	f83b 0c02 	ldrh.w	r0, [fp, #-2]
 8009590:	9104      	str	r1, [sp, #16]
 8009592:	4790      	blx	r2
 8009594:	9906      	ldr	r1, [sp, #24]
 8009596:	f841 0f04 	str.w	r0, [r1, #4]!
 800959a:	9106      	str	r1, [sp, #24]
 800959c:	9904      	ldr	r1, [sp, #16]
 800959e:	b124      	cbz	r4, 80095aa <_DrawBitmap+0x18e>
 80095a0:	68a0      	ldr	r0, [r4, #8]
 80095a2:	9a07      	ldr	r2, [sp, #28]
 80095a4:	6803      	ldr	r3, [r0, #0]
 80095a6:	4620      	mov	r0, r4
 80095a8:	4798      	blx	r3
 80095aa:	3e01      	subs	r6, #1
 80095ac:	f10b 0b02 	add.w	fp, fp, #2
 80095b0:	d1e5      	bne.n	800957e <_DrawBitmap+0x162>
 80095b2:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 80095b4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80095b6:	3501      	adds	r5, #1
 80095b8:	193f      	adds	r7, r7, r4
 80095ba:	4490      	add	r8, r2
 80095bc:	e7cc      	b.n	8009558 <_DrawBitmap+0x13c>
 80095be:	991d      	ldr	r1, [sp, #116]	; 0x74
 80095c0:	2908      	cmp	r1, #8
 80095c2:	d16b      	bne.n	800969c <_DrawBitmap+0x280>
 80095c4:	9e08      	ldr	r6, [sp, #32]
 80095c6:	f108 0804 	add.w	r8, r8, #4
 80095ca:	9b08      	ldr	r3, [sp, #32]
 80095cc:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80095ce:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80095d0:	1af1      	subs	r1, r6, r3
 80095d2:	4291      	cmp	r1, r2
 80095d4:	f1a8 0004 	sub.w	r0, r8, #4
 80095d8:	da5c      	bge.n	8009694 <_DrawBitmap+0x278>
 80095da:	4b2a      	ldr	r3, [pc, #168]	; (8009684 <_DrawBitmap+0x268>)
 80095dc:	6819      	ldr	r1, [r3, #0]
 80095de:	7c0a      	ldrb	r2, [r1, #16]
 80095e0:	b35d      	cbz	r5, 800963a <_DrawBitmap+0x21e>
 80095e2:	f012 0303 	ands.w	r3, r2, #3
 80095e6:	d004      	beq.n	80095f2 <_DrawBitmap+0x1d6>
 80095e8:	2b02      	cmp	r3, #2
 80095ea:	d14d      	bne.n	8009688 <_DrawBitmap+0x26c>
 80095ec:	46c1      	mov	r9, r8
 80095ee:	9f05      	ldr	r7, [sp, #20]
 80095f0:	e01c      	b.n	800962c <_DrawBitmap+0x210>
 80095f2:	f81b 4003 	ldrb.w	r4, [fp, r3]
 80095f6:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80095fa:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 80095fe:	3301      	adds	r3, #1
 8009600:	4553      	cmp	r3, sl
 8009602:	d1f6      	bne.n	80095f2 <_DrawBitmap+0x1d6>
 8009604:	e040      	b.n	8009688 <_DrawBitmap+0x26c>
 8009606:	f855 1020 	ldr.w	r1, [r5, r0, lsl #2]
 800960a:	f849 1c04 	str.w	r1, [r9, #-4]
 800960e:	b12c      	cbz	r4, 800961c <_DrawBitmap+0x200>
 8009610:	68a2      	ldr	r2, [r4, #8]
 8009612:	4620      	mov	r0, r4
 8009614:	6813      	ldr	r3, [r2, #0]
 8009616:	4639      	mov	r1, r7
 8009618:	4632      	mov	r2, r6
 800961a:	4798      	blx	r3
 800961c:	9805      	ldr	r0, [sp, #20]
 800961e:	3701      	adds	r7, #1
 8009620:	eb00 010a 	add.w	r1, r0, sl
 8009624:	42b9      	cmp	r1, r7
 8009626:	f109 0904 	add.w	r9, r9, #4
 800962a:	d02d      	beq.n	8009688 <_DrawBitmap+0x26c>
 800962c:	9a05      	ldr	r2, [sp, #20]
 800962e:	ebc2 030b 	rsb	r3, r2, fp
 8009632:	5dd8      	ldrb	r0, [r3, r7]
 8009634:	2800      	cmp	r0, #0
 8009636:	d0f1      	beq.n	800961c <_DrawBitmap+0x200>
 8009638:	e7e5      	b.n	8009606 <_DrawBitmap+0x1ea>
 800963a:	f012 0303 	ands.w	r3, r2, #3
 800963e:	d004      	beq.n	800964a <_DrawBitmap+0x22e>
 8009640:	2b02      	cmp	r3, #2
 8009642:	d121      	bne.n	8009688 <_DrawBitmap+0x26c>
 8009644:	46c1      	mov	r9, r8
 8009646:	9f05      	ldr	r7, [sp, #20]
 8009648:	e015      	b.n	8009676 <_DrawBitmap+0x25a>
 800964a:	4659      	mov	r1, fp
 800964c:	4652      	mov	r2, sl
 800964e:	f7f6 fd9b 	bl	8000188 <memcpy>
 8009652:	e019      	b.n	8009688 <_DrawBitmap+0x26c>
 8009654:	f849 2c04 	str.w	r2, [r9, #-4]
 8009658:	b12c      	cbz	r4, 8009666 <_DrawBitmap+0x24a>
 800965a:	68a3      	ldr	r3, [r4, #8]
 800965c:	4620      	mov	r0, r4
 800965e:	681b      	ldr	r3, [r3, #0]
 8009660:	4639      	mov	r1, r7
 8009662:	4632      	mov	r2, r6
 8009664:	4798      	blx	r3
 8009666:	9805      	ldr	r0, [sp, #20]
 8009668:	3701      	adds	r7, #1
 800966a:	eb00 010a 	add.w	r1, r0, sl
 800966e:	42b9      	cmp	r1, r7
 8009670:	f109 0904 	add.w	r9, r9, #4
 8009674:	d008      	beq.n	8009688 <_DrawBitmap+0x26c>
 8009676:	9805      	ldr	r0, [sp, #20]
 8009678:	ebc0 010b 	rsb	r1, r0, fp
 800967c:	5dca      	ldrb	r2, [r1, r7]
 800967e:	2a00      	cmp	r2, #0
 8009680:	d0f1      	beq.n	8009666 <_DrawBitmap+0x24a>
 8009682:	e7e7      	b.n	8009654 <_DrawBitmap+0x238>
 8009684:	20000278 	.word	0x20000278
 8009688:	981e      	ldr	r0, [sp, #120]	; 0x78
 800968a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800968c:	4483      	add	fp, r0
 800968e:	3601      	adds	r6, #1
 8009690:	4488      	add	r8, r1
 8009692:	e79a      	b.n	80095ca <_DrawBitmap+0x1ae>
 8009694:	2c00      	cmp	r4, #0
 8009696:	f040 8240 	bne.w	8009b1a <_DrawBitmap+0x6fe>
 800969a:	e241      	b.n	8009b20 <_DrawBitmap+0x704>
 800969c:	4ab0      	ldr	r2, [pc, #704]	; (8009960 <_DrawBitmap+0x544>)
 800969e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80096a0:	9c20      	ldr	r4, [sp, #128]	; 0x80
 80096a2:	2d00      	cmp	r5, #0
 80096a4:	bf14      	ite	ne
 80096a6:	46a9      	movne	r9, r5
 80096a8:	4691      	moveq	r9, r2
 80096aa:	9a08      	ldr	r2, [sp, #32]
 80096ac:	0058      	lsls	r0, r3, #1
 80096ae:	00a1      	lsls	r1, r4, #2
 80096b0:	f108 0804 	add.w	r8, r8, #4
 80096b4:	900d      	str	r0, [sp, #52]	; 0x34
 80096b6:	910e      	str	r1, [sp, #56]	; 0x38
 80096b8:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 80096bc:	9206      	str	r2, [sp, #24]
 80096be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80096c0:	9806      	ldr	r0, [sp, #24]
 80096c2:	9908      	ldr	r1, [sp, #32]
 80096c4:	1f1c      	subs	r4, r3, #4
 80096c6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80096c8:	1a42      	subs	r2, r0, r1
 80096ca:	429a      	cmp	r2, r3
 80096cc:	f280 8223 	bge.w	8009b16 <_DrawBitmap+0x6fa>
 80096d0:	991d      	ldr	r1, [sp, #116]	; 0x74
 80096d2:	2902      	cmp	r1, #2
 80096d4:	f000 80a1 	beq.w	800981a <_DrawBitmap+0x3fe>
 80096d8:	2904      	cmp	r1, #4
 80096da:	f000 8147 	beq.w	800996c <_DrawBitmap+0x550>
 80096de:	2901      	cmp	r1, #1
 80096e0:	f040 820f 	bne.w	8009b02 <_DrawBitmap+0x6e6>
 80096e4:	f8df 8280 	ldr.w	r8, [pc, #640]	; 8009968 <_DrawBitmap+0x54c>
 80096e8:	f8d8 5000 	ldr.w	r5, [r8]
 80096ec:	6e28      	ldr	r0, [r5, #96]	; 0x60
 80096ee:	f004 fa25 	bl	800db3c <GUI_ALLOC_LockH>
 80096f2:	f89b 3000 	ldrb.w	r3, [fp]
 80096f6:	4a9b      	ldr	r2, [pc, #620]	; (8009964 <_DrawBitmap+0x548>)
 80096f8:	9920      	ldr	r1, [sp, #128]	; 0x80
 80096fa:	5cd5      	ldrb	r5, [r2, r3]
 80096fc:	9010      	str	r0, [sp, #64]	; 0x40
 80096fe:	f1c1 0708 	rsb	r7, r1, #8
 8009702:	fa45 f501 	asr.w	r5, r5, r1
 8009706:	f8d8 1000 	ldr.w	r1, [r8]
 800970a:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 800970e:	7c0b      	ldrb	r3, [r1, #16]
 8009710:	f003 0203 	and.w	r2, r3, #3
 8009714:	2a02      	cmp	r2, #2
 8009716:	4656      	mov	r6, sl
 8009718:	d01d      	beq.n	8009756 <_DrawBitmap+0x33a>
 800971a:	2a03      	cmp	r2, #3
 800971c:	d059      	beq.n	80097d2 <_DrawBitmap+0x3b6>
 800971e:	2a01      	cmp	r2, #1
 8009720:	d057      	beq.n	80097d2 <_DrawBitmap+0x3b6>
 8009722:	465a      	mov	r2, fp
 8009724:	42be      	cmp	r6, r7
 8009726:	bf38      	it	cc
 8009728:	4637      	movcc	r7, r6
 800972a:	1bf6      	subs	r6, r6, r7
 800972c:	463b      	mov	r3, r7
 800972e:	4621      	mov	r1, r4
 8009730:	f005 0001 	and.w	r0, r5, #1
 8009734:	086d      	lsrs	r5, r5, #1
 8009736:	f859 0020 	ldr.w	r0, [r9, r0, lsl #2]
 800973a:	3b01      	subs	r3, #1
 800973c:	f841 0b04 	str.w	r0, [r1], #4
 8009740:	d1f6      	bne.n	8009730 <_DrawBitmap+0x314>
 8009742:	eb04 0487 	add.w	r4, r4, r7, lsl #2
 8009746:	2e00      	cmp	r6, #0
 8009748:	d063      	beq.n	8009812 <_DrawBitmap+0x3f6>
 800974a:	f812 7f01 	ldrb.w	r7, [r2, #1]!
 800974e:	4d85      	ldr	r5, [pc, #532]	; (8009964 <_DrawBitmap+0x548>)
 8009750:	5ded      	ldrb	r5, [r5, r7]
 8009752:	2708      	movs	r7, #8
 8009754:	e7e6      	b.n	8009724 <_DrawBitmap+0x308>
 8009756:	f8d9 0004 	ldr.w	r0, [r9, #4]
 800975a:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800975e:	900b      	str	r0, [sp, #44]	; 0x2c
 8009760:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8009764:	42be      	cmp	r6, r7
 8009766:	bf38      	it	cc
 8009768:	4637      	movcc	r7, r6
 800976a:	1bf6      	subs	r6, r6, r7
 800976c:	f1bc 0f00 	cmp.w	ip, #0
 8009770:	d022      	beq.n	80097b8 <_DrawBitmap+0x39c>
 8009772:	b91d      	cbnz	r5, 800977c <_DrawBitmap+0x360>
 8009774:	eb04 0487 	add.w	r4, r4, r7, lsl #2
 8009778:	44b8      	add	r8, r7
 800977a:	e021      	b.n	80097c0 <_DrawBitmap+0x3a4>
 800977c:	07e8      	lsls	r0, r5, #31
 800977e:	d50c      	bpl.n	800979a <_DrawBitmap+0x37e>
 8009780:	f8dc 0008 	ldr.w	r0, [ip, #8]
 8009784:	9a06      	ldr	r2, [sp, #24]
 8009786:	6803      	ldr	r3, [r0, #0]
 8009788:	f8cd c00c 	str.w	ip, [sp, #12]
 800978c:	4660      	mov	r0, ip
 800978e:	4641      	mov	r1, r8
 8009790:	4798      	blx	r3
 8009792:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8009794:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8009798:	6021      	str	r1, [r4, #0]
 800979a:	3404      	adds	r4, #4
 800979c:	3f01      	subs	r7, #1
 800979e:	f108 0801 	add.w	r8, r8, #1
 80097a2:	d00d      	beq.n	80097c0 <_DrawBitmap+0x3a4>
 80097a4:	086d      	lsrs	r5, r5, #1
 80097a6:	e7e4      	b.n	8009772 <_DrawBitmap+0x356>
 80097a8:	07e9      	lsls	r1, r5, #31
 80097aa:	bf44      	itt	mi
 80097ac:	980b      	ldrmi	r0, [sp, #44]	; 0x2c
 80097ae:	6020      	strmi	r0, [r4, #0]
 80097b0:	3404      	adds	r4, #4
 80097b2:	3f01      	subs	r7, #1
 80097b4:	d004      	beq.n	80097c0 <_DrawBitmap+0x3a4>
 80097b6:	086d      	lsrs	r5, r5, #1
 80097b8:	2d00      	cmp	r5, #0
 80097ba:	d1f5      	bne.n	80097a8 <_DrawBitmap+0x38c>
 80097bc:	eb04 0487 	add.w	r4, r4, r7, lsl #2
 80097c0:	b33e      	cbz	r6, 8009812 <_DrawBitmap+0x3f6>
 80097c2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80097c4:	4f67      	ldr	r7, [pc, #412]	; (8009964 <_DrawBitmap+0x548>)
 80097c6:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80097ca:	5c3d      	ldrb	r5, [r7, r0]
 80097cc:	9209      	str	r2, [sp, #36]	; 0x24
 80097ce:	2708      	movs	r7, #8
 80097d0:	e7c8      	b.n	8009764 <_DrawBitmap+0x348>
 80097d2:	6802      	ldr	r2, [r0, #0]
 80097d4:	6911      	ldr	r1, [r2, #16]
 80097d6:	6888      	ldr	r0, [r1, #8]
 80097d8:	4780      	blx	r0
 80097da:	4659      	mov	r1, fp
 80097dc:	42be      	cmp	r6, r7
 80097de:	bf38      	it	cc
 80097e0:	4637      	movcc	r7, r6
 80097e2:	1bf6      	subs	r6, r6, r7
 80097e4:	1d23      	adds	r3, r4, #4
 80097e6:	46be      	mov	lr, r7
 80097e8:	07ea      	lsls	r2, r5, #31
 80097ea:	d504      	bpl.n	80097f6 <_DrawBitmap+0x3da>
 80097ec:	f853 2c04 	ldr.w	r2, [r3, #-4]
 80097f0:	4042      	eors	r2, r0
 80097f2:	f843 2c04 	str.w	r2, [r3, #-4]
 80097f6:	086d      	lsrs	r5, r5, #1
 80097f8:	3304      	adds	r3, #4
 80097fa:	f1be 0e01 	subs.w	lr, lr, #1
 80097fe:	d1f3      	bne.n	80097e8 <_DrawBitmap+0x3cc>
 8009800:	eb04 0487 	add.w	r4, r4, r7, lsl #2
 8009804:	b12e      	cbz	r6, 8009812 <_DrawBitmap+0x3f6>
 8009806:	f811 7f01 	ldrb.w	r7, [r1, #1]!
 800980a:	4d56      	ldr	r5, [pc, #344]	; (8009964 <_DrawBitmap+0x548>)
 800980c:	5ded      	ldrb	r5, [r5, r7]
 800980e:	2708      	movs	r7, #8
 8009810:	e7e4      	b.n	80097dc <_DrawBitmap+0x3c0>
 8009812:	a810      	add	r0, sp, #64	; 0x40
 8009814:	f004 f9a0 	bl	800db58 <GUI_ALLOC_UnlockH>
 8009818:	e173      	b.n	8009b02 <_DrawBitmap+0x6e6>
 800981a:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800981c:	4b52      	ldr	r3, [pc, #328]	; (8009968 <_DrawBitmap+0x54c>)
 800981e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8009820:	f89b 1000 	ldrb.w	r1, [fp]
 8009824:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8009828:	f1c6 0204 	rsb	r2, r6, #4
 800982c:	b2d5      	uxtb	r5, r2
 800982e:	681a      	ldr	r2, [r3, #0]
 8009830:	fa01 f100 	lsl.w	r1, r1, r0
 8009834:	b2ce      	uxtb	r6, r1
 8009836:	7c11      	ldrb	r1, [r2, #16]
 8009838:	f001 0003 	and.w	r0, r1, #3
 800983c:	2801      	cmp	r0, #1
 800983e:	d06a      	beq.n	8009916 <_DrawBitmap+0x4fa>
 8009840:	d308      	bcc.n	8009854 <_DrawBitmap+0x438>
 8009842:	2802      	cmp	r0, #2
 8009844:	f040 815d 	bne.w	8009b02 <_DrawBitmap+0x6e6>
 8009848:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 800984c:	4657      	mov	r7, sl
 800984e:	f8dd 8014 	ldr.w	r8, [sp, #20]
 8009852:	e040      	b.n	80098d6 <_DrawBitmap+0x4ba>
 8009854:	465a      	mov	r2, fp
 8009856:	4653      	mov	r3, sl
 8009858:	429d      	cmp	r5, r3
 800985a:	bfc8      	it	gt
 800985c:	b2dd      	uxtbgt	r5, r3
 800985e:	1b5b      	subs	r3, r3, r5
 8009860:	4629      	mov	r1, r5
 8009862:	4620      	mov	r0, r4
 8009864:	09b7      	lsrs	r7, r6, #6
 8009866:	3901      	subs	r1, #1
 8009868:	f859 7027 	ldr.w	r7, [r9, r7, lsl #2]
 800986c:	00b6      	lsls	r6, r6, #2
 800986e:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 8009872:	f840 7b04 	str.w	r7, [r0], #4
 8009876:	b2f6      	uxtb	r6, r6
 8009878:	d1f4      	bne.n	8009864 <_DrawBitmap+0x448>
 800987a:	3d01      	subs	r5, #1
 800987c:	b2e8      	uxtb	r0, r5
 800987e:	1c45      	adds	r5, r0, #1
 8009880:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 8009884:	2b00      	cmp	r3, #0
 8009886:	f000 813c 	beq.w	8009b02 <_DrawBitmap+0x6e6>
 800988a:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 800988e:	2504      	movs	r5, #4
 8009890:	e7e2      	b.n	8009858 <_DrawBitmap+0x43c>
 8009892:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 8009896:	d127      	bne.n	80098e8 <_DrawBitmap+0x4cc>
 8009898:	9907      	ldr	r1, [sp, #28]
 800989a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800989c:	1c48      	adds	r0, r1, #1
 800989e:	9007      	str	r0, [sp, #28]
 80098a0:	1d13      	adds	r3, r2, #4
 80098a2:	9a07      	ldr	r2, [sp, #28]
 80098a4:	9309      	str	r3, [sp, #36]	; 0x24
 80098a6:	eb05 0108 	add.w	r1, r5, r8
 80098aa:	b2c8      	uxtb	r0, r1
 80098ac:	b2d3      	uxtb	r3, r2
 80098ae:	00b6      	lsls	r6, r6, #2
 80098b0:	4298      	cmp	r0, r3
 80098b2:	b2f6      	uxtb	r6, r6
 80098b4:	d1ed      	bne.n	8009892 <_DrawBitmap+0x476>
 80098b6:	3d01      	subs	r5, #1
 80098b8:	b2ed      	uxtb	r5, r5
 80098ba:	1c69      	adds	r1, r5, #1
 80098bc:	f108 0801 	add.w	r8, r8, #1
 80098c0:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80098c4:	44a8      	add	r8, r5
 80098c6:	2f00      	cmp	r7, #0
 80098c8:	f000 811b 	beq.w	8009b02 <_DrawBitmap+0x6e6>
 80098cc:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80098ce:	f810 6f01 	ldrb.w	r6, [r0, #1]!
 80098d2:	2504      	movs	r5, #4
 80098d4:	900b      	str	r0, [sp, #44]	; 0x2c
 80098d6:	42bd      	cmp	r5, r7
 80098d8:	bfc8      	it	gt
 80098da:	b2fd      	uxtbgt	r5, r7
 80098dc:	1d23      	adds	r3, r4, #4
 80098de:	1b7f      	subs	r7, r7, r5
 80098e0:	9309      	str	r3, [sp, #36]	; 0x24
 80098e2:	f8cd 801c 	str.w	r8, [sp, #28]
 80098e6:	e7d4      	b.n	8009892 <_DrawBitmap+0x476>
 80098e8:	09b2      	lsrs	r2, r6, #6
 80098ea:	9809      	ldr	r0, [sp, #36]	; 0x24
 80098ec:	f859 1022 	ldr.w	r1, [r9, r2, lsl #2]
 80098f0:	f840 1c04 	str.w	r1, [r0, #-4]
 80098f4:	f1bc 0f00 	cmp.w	ip, #0
 80098f8:	d0ce      	beq.n	8009898 <_DrawBitmap+0x47c>
 80098fa:	f8dc 3008 	ldr.w	r3, [ip, #8]
 80098fe:	9907      	ldr	r1, [sp, #28]
 8009900:	681a      	ldr	r2, [r3, #0]
 8009902:	f8cd c00c 	str.w	ip, [sp, #12]
 8009906:	920f      	str	r2, [sp, #60]	; 0x3c
 8009908:	4660      	mov	r0, ip
 800990a:	9a06      	ldr	r2, [sp, #24]
 800990c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800990e:	4798      	blx	r3
 8009910:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8009914:	e7c0      	b.n	8009898 <_DrawBitmap+0x47c>
 8009916:	4658      	mov	r0, fp
 8009918:	4653      	mov	r3, sl
 800991a:	429d      	cmp	r5, r3
 800991c:	bfc8      	it	gt
 800991e:	b2dd      	uxtbgt	r5, r3
 8009920:	1b5b      	subs	r3, r3, r5
 8009922:	1d22      	adds	r2, r4, #4
 8009924:	462f      	mov	r7, r5
 8009926:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 800992a:	d005      	beq.n	8009938 <_DrawBitmap+0x51c>
 800992c:	f852 1c04 	ldr.w	r1, [r2, #-4]
 8009930:	f081 01ff 	eor.w	r1, r1, #255	; 0xff
 8009934:	f842 1c04 	str.w	r1, [r2, #-4]
 8009938:	3f01      	subs	r7, #1
 800993a:	00b6      	lsls	r6, r6, #2
 800993c:	3204      	adds	r2, #4
 800993e:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 8009942:	b2f6      	uxtb	r6, r6
 8009944:	d1ef      	bne.n	8009926 <_DrawBitmap+0x50a>
 8009946:	3d01      	subs	r5, #1
 8009948:	b2e9      	uxtb	r1, r5
 800994a:	1c4d      	adds	r5, r1, #1
 800994c:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 8009950:	2b00      	cmp	r3, #0
 8009952:	f000 80d6 	beq.w	8009b02 <_DrawBitmap+0x6e6>
 8009956:	f810 6f01 	ldrb.w	r6, [r0, #1]!
 800995a:	2504      	movs	r5, #4
 800995c:	e7dd      	b.n	800991a <_DrawBitmap+0x4fe>
 800995e:	bf00      	nop
 8009960:	080217b8 	.word	0x080217b8
 8009964:	0802c294 	.word	0x0802c294
 8009968:	20000278 	.word	0x20000278
 800996c:	496e      	ldr	r1, [pc, #440]	; (8009b28 <_DrawBitmap+0x70c>)
 800996e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8009970:	680a      	ldr	r2, [r1, #0]
 8009972:	f89b 3000 	ldrb.w	r3, [fp]
 8009976:	7c10      	ldrb	r0, [r2, #16]
 8009978:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800997a:	f000 0103 	and.w	r1, r0, #3
 800997e:	fa03 f305 	lsl.w	r3, r3, r5
 8009982:	2901      	cmp	r1, #1
 8009984:	b2dd      	uxtb	r5, r3
 8009986:	f000 8096 	beq.w	8009ab6 <_DrawBitmap+0x69a>
 800998a:	d303      	bcc.n	8009994 <_DrawBitmap+0x578>
 800998c:	2902      	cmp	r1, #2
 800998e:	f040 80b8 	bne.w	8009b02 <_DrawBitmap+0x6e6>
 8009992:	e031      	b.n	80099f8 <_DrawBitmap+0x5dc>
 8009994:	9920      	ldr	r1, [sp, #128]	; 0x80
 8009996:	b159      	cbz	r1, 80099b0 <_DrawBitmap+0x594>
 8009998:	092d      	lsrs	r5, r5, #4
 800999a:	f10a 33ff 	add.w	r3, sl, #4294967295
 800999e:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 80099a2:	6020      	str	r0, [r4, #0]
 80099a4:	f10b 0201 	add.w	r2, fp, #1
 80099a8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80099aa:	f89b 5001 	ldrb.w	r5, [fp, #1]
 80099ae:	e001      	b.n	80099b4 <_DrawBitmap+0x598>
 80099b0:	4653      	mov	r3, sl
 80099b2:	465a      	mov	r2, fp
 80099b4:	2b01      	cmp	r3, #1
 80099b6:	dd17      	ble.n	80099e8 <_DrawBitmap+0x5cc>
 80099b8:	1058      	asrs	r0, r3, #1
 80099ba:	f104 0108 	add.w	r1, r4, #8
 80099be:	f003 0301 	and.w	r3, r3, #1
 80099c2:	1816      	adds	r6, r2, r0
 80099c4:	092f      	lsrs	r7, r5, #4
 80099c6:	f005 050f 	and.w	r5, r5, #15
 80099ca:	f859 7027 	ldr.w	r7, [r9, r7, lsl #2]
 80099ce:	f841 7c08 	str.w	r7, [r1, #-8]
 80099d2:	f859 5025 	ldr.w	r5, [r9, r5, lsl #2]
 80099d6:	f841 5c04 	str.w	r5, [r1, #-4]
 80099da:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 80099de:	3108      	adds	r1, #8
 80099e0:	42b2      	cmp	r2, r6
 80099e2:	d1ef      	bne.n	80099c4 <_DrawBitmap+0x5a8>
 80099e4:	eb04 04c0 	add.w	r4, r4, r0, lsl #3
 80099e8:	2b00      	cmp	r3, #0
 80099ea:	f000 808a 	beq.w	8009b02 <_DrawBitmap+0x6e6>
 80099ee:	092d      	lsrs	r5, r5, #4
 80099f0:	f859 2025 	ldr.w	r2, [r9, r5, lsl #2]
 80099f4:	6022      	str	r2, [r4, #0]
 80099f6:	e084      	b.n	8009b02 <_DrawBitmap+0x6e6>
 80099f8:	9f20      	ldr	r7, [sp, #128]	; 0x80
 80099fa:	b1bf      	cbz	r7, 8009a2c <_DrawBitmap+0x610>
 80099fc:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 8009a00:	d00a      	beq.n	8009a18 <_DrawBitmap+0x5fc>
 8009a02:	092b      	lsrs	r3, r5, #4
 8009a04:	f859 5023 	ldr.w	r5, [r9, r3, lsl #2]
 8009a08:	6025      	str	r5, [r4, #0]
 8009a0a:	b12e      	cbz	r6, 8009a18 <_DrawBitmap+0x5fc>
 8009a0c:	68b4      	ldr	r4, [r6, #8]
 8009a0e:	9905      	ldr	r1, [sp, #20]
 8009a10:	6827      	ldr	r7, [r4, #0]
 8009a12:	9a06      	ldr	r2, [sp, #24]
 8009a14:	4630      	mov	r0, r6
 8009a16:	47b8      	blx	r7
 8009a18:	9a05      	ldr	r2, [sp, #20]
 8009a1a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8009a1c:	f89b 5001 	ldrb.w	r5, [fp, #1]
 8009a20:	1c57      	adds	r7, r2, #1
 8009a22:	f10a 3cff 	add.w	ip, sl, #4294967295
 8009a26:	f10b 0801 	add.w	r8, fp, #1
 8009a2a:	e00f      	b.n	8009a4c <_DrawBitmap+0x630>
 8009a2c:	46d4      	mov	ip, sl
 8009a2e:	46d8      	mov	r8, fp
 8009a30:	9f05      	ldr	r7, [sp, #20]
 8009a32:	e00b      	b.n	8009a4c <_DrawBitmap+0x630>
 8009a34:	f015 0ff0 	tst.w	r5, #240	; 0xf0
 8009a38:	d10c      	bne.n	8009a54 <_DrawBitmap+0x638>
 8009a3a:	f015 050f 	ands.w	r5, r5, #15
 8009a3e:	d11a      	bne.n	8009a76 <_DrawBitmap+0x65a>
 8009a40:	f818 5f01 	ldrb.w	r5, [r8, #1]!
 8009a44:	3408      	adds	r4, #8
 8009a46:	3702      	adds	r7, #2
 8009a48:	f1ac 0c02 	sub.w	ip, ip, #2
 8009a4c:	f1bc 0f01 	cmp.w	ip, #1
 8009a50:	dcf0      	bgt.n	8009a34 <_DrawBitmap+0x618>
 8009a52:	e020      	b.n	8009a96 <_DrawBitmap+0x67a>
 8009a54:	092a      	lsrs	r2, r5, #4
 8009a56:	f859 0022 	ldr.w	r0, [r9, r2, lsl #2]
 8009a5a:	6020      	str	r0, [r4, #0]
 8009a5c:	2e00      	cmp	r6, #0
 8009a5e:	d0ec      	beq.n	8009a3a <_DrawBitmap+0x61e>
 8009a60:	68b1      	ldr	r1, [r6, #8]
 8009a62:	9a06      	ldr	r2, [sp, #24]
 8009a64:	680b      	ldr	r3, [r1, #0]
 8009a66:	f8cd c00c 	str.w	ip, [sp, #12]
 8009a6a:	4630      	mov	r0, r6
 8009a6c:	4639      	mov	r1, r7
 8009a6e:	4798      	blx	r3
 8009a70:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8009a74:	e7e1      	b.n	8009a3a <_DrawBitmap+0x61e>
 8009a76:	f859 2025 	ldr.w	r2, [r9, r5, lsl #2]
 8009a7a:	6062      	str	r2, [r4, #4]
 8009a7c:	2e00      	cmp	r6, #0
 8009a7e:	d0df      	beq.n	8009a40 <_DrawBitmap+0x624>
 8009a80:	68b0      	ldr	r0, [r6, #8]
 8009a82:	9a06      	ldr	r2, [sp, #24]
 8009a84:	6803      	ldr	r3, [r0, #0]
 8009a86:	f8cd c00c 	str.w	ip, [sp, #12]
 8009a8a:	4630      	mov	r0, r6
 8009a8c:	1c79      	adds	r1, r7, #1
 8009a8e:	4798      	blx	r3
 8009a90:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8009a94:	e7d4      	b.n	8009a40 <_DrawBitmap+0x624>
 8009a96:	f1bc 0f00 	cmp.w	ip, #0
 8009a9a:	d032      	beq.n	8009b02 <_DrawBitmap+0x6e6>
 8009a9c:	092d      	lsrs	r5, r5, #4
 8009a9e:	d030      	beq.n	8009b02 <_DrawBitmap+0x6e6>
 8009aa0:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8009aa4:	6020      	str	r0, [r4, #0]
 8009aa6:	b366      	cbz	r6, 8009b02 <_DrawBitmap+0x6e6>
 8009aa8:	68b1      	ldr	r1, [r6, #8]
 8009aaa:	9a06      	ldr	r2, [sp, #24]
 8009aac:	680b      	ldr	r3, [r1, #0]
 8009aae:	4630      	mov	r0, r6
 8009ab0:	4639      	mov	r1, r7
 8009ab2:	4798      	blx	r3
 8009ab4:	e025      	b.n	8009b02 <_DrawBitmap+0x6e6>
 8009ab6:	9e20      	ldr	r6, [sp, #128]	; 0x80
 8009ab8:	f1c6 0002 	rsb	r0, r6, #2
 8009abc:	b2c3      	uxtb	r3, r0
 8009abe:	465e      	mov	r6, fp
 8009ac0:	4652      	mov	r2, sl
 8009ac2:	4293      	cmp	r3, r2
 8009ac4:	bfc8      	it	gt
 8009ac6:	b2d3      	uxtbgt	r3, r2
 8009ac8:	1ad2      	subs	r2, r2, r3
 8009aca:	1d20      	adds	r0, r4, #4
 8009acc:	461f      	mov	r7, r3
 8009ace:	f015 0fc0 	tst.w	r5, #192	; 0xc0
 8009ad2:	d005      	beq.n	8009ae0 <_DrawBitmap+0x6c4>
 8009ad4:	f850 1c04 	ldr.w	r1, [r0, #-4]
 8009ad8:	f081 01ff 	eor.w	r1, r1, #255	; 0xff
 8009adc:	f840 1c04 	str.w	r1, [r0, #-4]
 8009ae0:	3f01      	subs	r7, #1
 8009ae2:	012d      	lsls	r5, r5, #4
 8009ae4:	3004      	adds	r0, #4
 8009ae6:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 8009aea:	b2ed      	uxtb	r5, r5
 8009aec:	d1ef      	bne.n	8009ace <_DrawBitmap+0x6b2>
 8009aee:	3b01      	subs	r3, #1
 8009af0:	b2d9      	uxtb	r1, r3
 8009af2:	1c48      	adds	r0, r1, #1
 8009af4:	eb04 0480 	add.w	r4, r4, r0, lsl #2
 8009af8:	b11a      	cbz	r2, 8009b02 <_DrawBitmap+0x6e6>
 8009afa:	f816 5f01 	ldrb.w	r5, [r6, #1]!
 8009afe:	2302      	movs	r3, #2
 8009b00:	e7df      	b.n	8009ac2 <_DrawBitmap+0x6a6>
 8009b02:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8009b04:	9806      	ldr	r0, [sp, #24]
 8009b06:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8009b08:	990c      	ldr	r1, [sp, #48]	; 0x30
 8009b0a:	44a3      	add	fp, r4
 8009b0c:	1c43      	adds	r3, r0, #1
 8009b0e:	1854      	adds	r4, r2, r1
 8009b10:	9306      	str	r3, [sp, #24]
 8009b12:	940a      	str	r4, [sp, #40]	; 0x28
 8009b14:	e5d3      	b.n	80096be <_DrawBitmap+0x2a2>
 8009b16:	9811      	ldr	r0, [sp, #68]	; 0x44
 8009b18:	b110      	cbz	r0, 8009b20 <_DrawBitmap+0x704>
 8009b1a:	a811      	add	r0, sp, #68	; 0x44
 8009b1c:	f004 f81c 	bl	800db58 <GUI_ALLOC_UnlockH>
 8009b20:	b013      	add	sp, #76	; 0x4c
 8009b22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009b26:	bf00      	nop
 8009b28:	20000278 	.word	0x20000278

08009b2c <GUI_MEMDEV__WriteToActiveAt>:
 8009b2c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009b30:	460e      	mov	r6, r1
 8009b32:	4690      	mov	r8, r2
 8009b34:	4607      	mov	r7, r0
 8009b36:	f004 f801 	bl	800db3c <GUI_ALLOC_LockH>
 8009b3a:	ac02      	add	r4, sp, #8
 8009b3c:	6803      	ldr	r3, [r0, #0]
 8009b3e:	f844 0d04 	str.w	r0, [r4, #-4]!
 8009b42:	68d8      	ldr	r0, [r3, #12]
 8009b44:	2116      	movs	r1, #22
 8009b46:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8009b48:	2000      	movs	r0, #0
 8009b4a:	4790      	blx	r2
 8009b4c:	4605      	mov	r5, r0
 8009b4e:	4620      	mov	r0, r4
 8009b50:	f004 f802 	bl	800db58 <GUI_ALLOC_UnlockH>
 8009b54:	b11d      	cbz	r5, 8009b5e <GUI_MEMDEV__WriteToActiveAt+0x32>
 8009b56:	4638      	mov	r0, r7
 8009b58:	4631      	mov	r1, r6
 8009b5a:	4642      	mov	r2, r8
 8009b5c:	47a8      	blx	r5
 8009b5e:	e8bd 81fc 	ldmia.w	sp!, {r2, r3, r4, r5, r6, r7, r8, pc}
	...

08009b64 <GUI_MEMDEV__CreateFixed>:
 8009b64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009b68:	461d      	mov	r5, r3
 8009b6a:	4b3c      	ldr	r3, [pc, #240]	; (8009c5c <GUI_MEMDEV__CreateFixed+0xf8>)
 8009b6c:	b087      	sub	sp, #28
 8009b6e:	681c      	ldr	r4, [r3, #0]
 8009b70:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8009b72:	7c63      	ldrb	r3, [r4, #17]
 8009b74:	4683      	mov	fp, r0
 8009b76:	468a      	mov	sl, r1
 8009b78:	4690      	mov	r8, r2
 8009b7a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8009b7c:	9912      	ldr	r1, [sp, #72]	; 0x48
 8009b7e:	2200      	movs	r2, #0
 8009b80:	f003 faca 	bl	800d118 <GUI_DEVICE_Create>
 8009b84:	4604      	mov	r4, r0
 8009b86:	b378      	cbz	r0, 8009be8 <GUI_MEMDEV__CreateFixed+0x84>
 8009b88:	6900      	ldr	r0, [r0, #16]
 8009b8a:	6881      	ldr	r1, [r0, #8]
 8009b8c:	4788      	blx	r1
 8009b8e:	f001 fac9 	bl	800b124 <LCD__GetBPPDevice>
 8009b92:	fb08 f600 	mul.w	r6, r8, r0
 8009b96:	1df2      	adds	r2, r6, #7
 8009b98:	08d6      	lsrs	r6, r2, #3
 8009b9a:	9003      	str	r0, [sp, #12]
 8009b9c:	f004 f93e 	bl	800de1c <GUI_ALLOC_RequestSize>
 8009ba0:	f017 0901 	ands.w	r9, r7, #1
 8009ba4:	d104      	bne.n	8009bb0 <GUI_MEMDEV__CreateFixed+0x4c>
 8009ba6:	2704      	movs	r7, #4
 8009ba8:	fb90 f0f7 	sdiv	r0, r0, r7
 8009bac:	2303      	movs	r3, #3
 8009bae:	4358      	muls	r0, r3
 8009bb0:	2d00      	cmp	r5, #0
 8009bb2:	dc06      	bgt.n	8009bc2 <GUI_MEMDEV__CreateFixed+0x5e>
 8009bb4:	3818      	subs	r0, #24
 8009bb6:	426d      	negs	r5, r5
 8009bb8:	fbb0 f0f6 	udiv	r0, r0, r6
 8009bbc:	42a8      	cmp	r0, r5
 8009bbe:	bfb8      	it	lt
 8009bc0:	4605      	movlt	r5, r0
 8009bc2:	f1b9 0f00 	cmp.w	r9, #0
 8009bc6:	d109      	bne.n	8009bdc <GUI_MEMDEV__CreateFixed+0x78>
 8009bc8:	f8cd 9000 	str.w	r9, [sp]
 8009bcc:	4658      	mov	r0, fp
 8009bce:	4651      	mov	r1, sl
 8009bd0:	4642      	mov	r2, r8
 8009bd2:	462b      	mov	r3, r5
 8009bd4:	f006 fc54 	bl	8010480 <GUI_USAGE_BM_Create>
 8009bd8:	4607      	mov	r7, r0
 8009bda:	e000      	b.n	8009bde <GUI_MEMDEV__CreateFixed+0x7a>
 8009bdc:	2700      	movs	r7, #0
 8009bde:	2d00      	cmp	r5, #0
 8009be0:	dc05      	bgt.n	8009bee <GUI_MEMDEV__CreateFixed+0x8a>
 8009be2:	4620      	mov	r0, r4
 8009be4:	f003 fa96 	bl	800d114 <GUI_DEVICE_Delete>
 8009be8:	f04f 0900 	mov.w	r9, #0
 8009bec:	e031      	b.n	8009c52 <GUI_MEMDEV__CreateFixed+0xee>
 8009bee:	fb06 f005 	mul.w	r0, r6, r5
 8009bf2:	3018      	adds	r0, #24
 8009bf4:	f1b9 0f00 	cmp.w	r9, #0
 8009bf8:	d002      	beq.n	8009c00 <GUI_MEMDEV__CreateFixed+0x9c>
 8009bfa:	f004 f9ed 	bl	800dfd8 <GUI_ALLOC_AllocNoInit>
 8009bfe:	e001      	b.n	8009c04 <GUI_MEMDEV__CreateFixed+0xa0>
 8009c00:	f004 fa10 	bl	800e024 <GUI_ALLOC_AllocZero>
 8009c04:	4681      	mov	r9, r0
 8009c06:	b940      	cbnz	r0, 8009c1a <GUI_MEMDEV__CreateFixed+0xb6>
 8009c08:	4620      	mov	r0, r4
 8009c0a:	f003 fa83 	bl	800d114 <GUI_DEVICE_Delete>
 8009c0e:	2f00      	cmp	r7, #0
 8009c10:	d0ea      	beq.n	8009be8 <GUI_MEMDEV__CreateFixed+0x84>
 8009c12:	4638      	mov	r0, r7
 8009c14:	f003 ffcc 	bl	800dbb0 <GUI_ALLOC_Free>
 8009c18:	e01b      	b.n	8009c52 <GUI_MEMDEV__CreateFixed+0xee>
 8009c1a:	f003 ff8f 	bl	800db3c <GUI_ALLOC_LockH>
 8009c1e:	9a03      	ldr	r2, [sp, #12]
 8009c20:	4601      	mov	r1, r0
 8009c22:	a806      	add	r0, sp, #24
 8009c24:	610a      	str	r2, [r1, #16]
 8009c26:	f840 1d04 	str.w	r1, [r0, #-4]!
 8009c2a:	f8a1 b004 	strh.w	fp, [r1, #4]
 8009c2e:	600c      	str	r4, [r1, #0]
 8009c30:	f8a1 a006 	strh.w	sl, [r1, #6]
 8009c34:	f8a1 8008 	strh.w	r8, [r1, #8]
 8009c38:	814d      	strh	r5, [r1, #10]
 8009c3a:	60ce      	str	r6, [r1, #12]
 8009c3c:	614f      	str	r7, [r1, #20]
 8009c3e:	f003 ff8b 	bl	800db58 <GUI_ALLOC_UnlockH>
 8009c42:	4806      	ldr	r0, [pc, #24]	; (8009c5c <GUI_MEMDEV__CreateFixed+0xf8>)
 8009c44:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8009c46:	6801      	ldr	r1, [r0, #0]
 8009c48:	6123      	str	r3, [r4, #16]
 8009c4a:	f8c4 9008 	str.w	r9, [r4, #8]
 8009c4e:	7c4a      	ldrb	r2, [r1, #17]
 8009c50:	61a2      	str	r2, [r4, #24]
 8009c52:	4648      	mov	r0, r9
 8009c54:	b007      	add	sp, #28
 8009c56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009c5a:	bf00      	nop
 8009c5c:	20000278 	.word	0x20000278

08009c60 <GUI_MEMDEV_GetBitsPerPixel>:
 8009c60:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009c62:	4605      	mov	r5, r0
 8009c64:	b170      	cbz	r0, 8009c84 <GUI_MEMDEV_GetBitsPerPixel+0x24>
 8009c66:	f003 ff69 	bl	800db3c <GUI_ALLOC_LockH>
 8009c6a:	ac02      	add	r4, sp, #8
 8009c6c:	6803      	ldr	r3, [r0, #0]
 8009c6e:	f844 0d04 	str.w	r0, [r4, #-4]!
 8009c72:	6918      	ldr	r0, [r3, #16]
 8009c74:	6881      	ldr	r1, [r0, #8]
 8009c76:	4788      	blx	r1
 8009c78:	f001 fa54 	bl	800b124 <LCD__GetBPPDevice>
 8009c7c:	4605      	mov	r5, r0
 8009c7e:	4620      	mov	r0, r4
 8009c80:	f003 ff6a 	bl	800db58 <GUI_ALLOC_UnlockH>
 8009c84:	4628      	mov	r0, r5
 8009c86:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08009c88 <GUI_MEMDEV_Delete>:
 8009c88:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009c8a:	4604      	mov	r4, r0
 8009c8c:	b1d0      	cbz	r0, 8009cc4 <GUI_MEMDEV_Delete+0x3c>
 8009c8e:	4b0e      	ldr	r3, [pc, #56]	; (8009cc8 <GUI_MEMDEV_Delete+0x40>)
 8009c90:	6818      	ldr	r0, [r3, #0]
 8009c92:	6e01      	ldr	r1, [r0, #96]	; 0x60
 8009c94:	42a1      	cmp	r1, r4
 8009c96:	d101      	bne.n	8009c9c <GUI_MEMDEV_Delete+0x14>
 8009c98:	f002 fbc6 	bl	800c428 <GUI_SelectLCD>
 8009c9c:	4620      	mov	r0, r4
 8009c9e:	f003 ff4d 	bl	800db3c <GUI_ALLOC_LockH>
 8009ca2:	9001      	str	r0, [sp, #4]
 8009ca4:	6940      	ldr	r0, [r0, #20]
 8009ca6:	b108      	cbz	r0, 8009cac <GUI_MEMDEV_Delete+0x24>
 8009ca8:	f006 fc14 	bl	80104d4 <GUI_USAGE_DecUseCnt>
 8009cac:	ad02      	add	r5, sp, #8
 8009cae:	f855 2d04 	ldr.w	r2, [r5, #-4]!
 8009cb2:	6810      	ldr	r0, [r2, #0]
 8009cb4:	f003 fa2e 	bl	800d114 <GUI_DEVICE_Delete>
 8009cb8:	4628      	mov	r0, r5
 8009cba:	f003 ff4d 	bl	800db58 <GUI_ALLOC_UnlockH>
 8009cbe:	4620      	mov	r0, r4
 8009cc0:	f003 ff76 	bl	800dbb0 <GUI_ALLOC_Free>
 8009cc4:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 8009cc6:	bf00      	nop
 8009cc8:	20000278 	.word	0x20000278

08009ccc <GUI_MEMDEV_CreateEx>:
 8009ccc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8009cd0:	469a      	mov	sl, r3
 8009cd2:	4b18      	ldr	r3, [pc, #96]	; (8009d34 <GUI_MEMDEV_CreateEx+0x68>)
 8009cd4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8009cd6:	4607      	mov	r7, r0
 8009cd8:	6818      	ldr	r0, [r3, #0]
 8009cda:	4688      	mov	r8, r1
 8009cdc:	7c40      	ldrb	r0, [r0, #17]
 8009cde:	4916      	ldr	r1, [pc, #88]	; (8009d38 <GUI_MEMDEV_CreateEx+0x6c>)
 8009ce0:	f851 4020 	ldr.w	r4, [r1, r0, lsl #2]
 8009ce4:	4691      	mov	r9, r2
 8009ce6:	68e2      	ldr	r2, [r4, #12]
 8009ce8:	6816      	ldr	r6, [r2, #0]
 8009cea:	2e04      	cmp	r6, #4
 8009cec:	d005      	beq.n	8009cfa <GUI_MEMDEV_CreateEx+0x2e>
 8009cee:	6824      	ldr	r4, [r4, #0]
 8009cf0:	2c00      	cmp	r4, #0
 8009cf2:	d1f8      	bne.n	8009ce6 <GUI_MEMDEV_CreateEx+0x1a>
 8009cf4:	f003 f9fe 	bl	800d0f4 <GUI_DEVICE__GetpDriver>
 8009cf8:	4604      	mov	r4, r0
 8009cfa:	68e3      	ldr	r3, [r4, #12]
 8009cfc:	4620      	mov	r0, r4
 8009cfe:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009d00:	2101      	movs	r1, #1
 8009d02:	4790      	blx	r2
 8009d04:	4606      	mov	r6, r0
 8009d06:	b188      	cbz	r0, 8009d2c <GUI_MEMDEV_CreateEx+0x60>
 8009d08:	6924      	ldr	r4, [r4, #16]
 8009d0a:	68a0      	ldr	r0, [r4, #8]
 8009d0c:	4780      	blx	r0
 8009d0e:	3001      	adds	r0, #1
 8009d10:	bf04      	itt	eq
 8009d12:	4c0a      	ldreq	r4, [pc, #40]	; (8009d3c <GUI_MEMDEV_CreateEx+0x70>)
 8009d14:	f045 0501 	orreq.w	r5, r5, #1
 8009d18:	e88d 0060 	stmia.w	sp, {r5, r6}
 8009d1c:	9402      	str	r4, [sp, #8]
 8009d1e:	4638      	mov	r0, r7
 8009d20:	4641      	mov	r1, r8
 8009d22:	464a      	mov	r2, r9
 8009d24:	4653      	mov	r3, sl
 8009d26:	f7ff ff1d 	bl	8009b64 <GUI_MEMDEV__CreateFixed>
 8009d2a:	e7ff      	b.n	8009d2c <GUI_MEMDEV_CreateEx+0x60>
 8009d2c:	b004      	add	sp, #16
 8009d2e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009d32:	bf00      	nop
 8009d34:	20000278 	.word	0x20000278
 8009d38:	2000e67c 	.word	0x2000e67c
 8009d3c:	0802c3b8 	.word	0x0802c3b8

08009d40 <GUI_MEMDEV_Select>:
 8009d40:	4b11      	ldr	r3, [pc, #68]	; (8009d88 <GUI_MEMDEV_Select+0x48>)
 8009d42:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009d44:	681a      	ldr	r2, [r3, #0]
 8009d46:	4604      	mov	r4, r0
 8009d48:	6e16      	ldr	r6, [r2, #96]	; 0x60
 8009d4a:	461f      	mov	r7, r3
 8009d4c:	b910      	cbnz	r0, 8009d54 <GUI_MEMDEV_Select+0x14>
 8009d4e:	f002 fb6b 	bl	800c428 <GUI_SelectLCD>
 8009d52:	e016      	b.n	8009d82 <GUI_MEMDEV_Select+0x42>
 8009d54:	b10e      	cbz	r6, 8009d5a <GUI_MEMDEV_Select+0x1a>
 8009d56:	f002 fb67 	bl	800c428 <GUI_SelectLCD>
 8009d5a:	f7fe ff75 	bl	8008c48 <WM_Deactivate>
 8009d5e:	4620      	mov	r0, r4
 8009d60:	f003 feec 	bl	800db3c <GUI_ALLOC_LockH>
 8009d64:	ad02      	add	r5, sp, #8
 8009d66:	6839      	ldr	r1, [r7, #0]
 8009d68:	f845 0d04 	str.w	r0, [r5, #-4]!
 8009d6c:	660c      	str	r4, [r1, #96]	; 0x60
 8009d6e:	6800      	ldr	r0, [r0, #0]
 8009d70:	f003 f9fa 	bl	800d168 <GUI_DEVICE_Link>
 8009d74:	4628      	mov	r0, r5
 8009d76:	f003 feef 	bl	800db58 <GUI_ALLOC_UnlockH>
 8009d7a:	f001 f879 	bl	800ae70 <LCD_UpdateColorIndices>
 8009d7e:	f001 fc91 	bl	800b6a4 <LCD_SetClipRectMax>
 8009d82:	4630      	mov	r0, r6
 8009d84:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8009d86:	bf00      	nop
 8009d88:	20000278 	.word	0x20000278

08009d8c <GUI_MEMDEV_CopyToLCDAt>:
 8009d8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009d90:	460c      	mov	r4, r1
 8009d92:	b085      	sub	sp, #20
 8009d94:	4615      	mov	r5, r2
 8009d96:	4606      	mov	r6, r0
 8009d98:	2800      	cmp	r0, #0
 8009d9a:	d042      	beq.n	8009e22 <GUI_MEMDEV_CopyToLCDAt+0x96>
 8009d9c:	2000      	movs	r0, #0
 8009d9e:	f002 fae3 	bl	800c368 <GUI_SetDrawMode>
 8009da2:	4b21      	ldr	r3, [pc, #132]	; (8009e28 <GUI_MEMDEV_CopyToLCDAt+0x9c>)
 8009da4:	4607      	mov	r7, r0
 8009da6:	6818      	ldr	r0, [r3, #0]
 8009da8:	f8d0 8060 	ldr.w	r8, [r0, #96]	; 0x60
 8009dac:	4630      	mov	r0, r6
 8009dae:	f003 fec5 	bl	800db3c <GUI_ALLOC_LockH>
 8009db2:	6801      	ldr	r1, [r0, #0]
 8009db4:	9001      	str	r0, [sp, #4]
 8009db6:	6988      	ldr	r0, [r1, #24]
 8009db8:	f002 fb22 	bl	800c400 <GUI_SelectLayer>
 8009dbc:	4a1b      	ldr	r2, [pc, #108]	; (8009e2c <GUI_MEMDEV_CopyToLCDAt+0xa0>)
 8009dbe:	4294      	cmp	r4, r2
 8009dc0:	4681      	mov	r9, r0
 8009dc2:	d104      	bne.n	8009dce <GUI_MEMDEV_CopyToLCDAt+0x42>
 8009dc4:	9d01      	ldr	r5, [sp, #4]
 8009dc6:	f9b5 4004 	ldrsh.w	r4, [r5, #4]
 8009dca:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8009dce:	9b01      	ldr	r3, [sp, #4]
 8009dd0:	f8ad 4008 	strh.w	r4, [sp, #8]
 8009dd4:	8918      	ldrh	r0, [r3, #8]
 8009dd6:	895b      	ldrh	r3, [r3, #10]
 8009dd8:	f8ad 500a 	strh.w	r5, [sp, #10]
 8009ddc:	1e41      	subs	r1, r0, #1
 8009dde:	1e58      	subs	r0, r3, #1
 8009de0:	190a      	adds	r2, r1, r4
 8009de2:	1941      	adds	r1, r0, r5
 8009de4:	f8ad 200c 	strh.w	r2, [sp, #12]
 8009de8:	f8ad 100e 	strh.w	r1, [sp, #14]
 8009dec:	f7fe ff24 	bl	8008c38 <WM_Activate>
 8009df0:	a801      	add	r0, sp, #4
 8009df2:	f003 feb1 	bl	800db58 <GUI_ALLOC_UnlockH>
 8009df6:	a802      	add	r0, sp, #8
 8009df8:	f7fe fd46 	bl	8008888 <WM__InitIVRSearch>
 8009dfc:	b948      	cbnz	r0, 8009e12 <GUI_MEMDEV_CopyToLCDAt+0x86>
 8009dfe:	4648      	mov	r0, r9
 8009e00:	f002 fafe 	bl	800c400 <GUI_SelectLayer>
 8009e04:	4640      	mov	r0, r8
 8009e06:	f7ff ff9b 	bl	8009d40 <GUI_MEMDEV_Select>
 8009e0a:	4638      	mov	r0, r7
 8009e0c:	f002 faac 	bl	800c368 <GUI_SetDrawMode>
 8009e10:	e007      	b.n	8009e22 <GUI_MEMDEV_CopyToLCDAt+0x96>
 8009e12:	4630      	mov	r0, r6
 8009e14:	4621      	mov	r1, r4
 8009e16:	462a      	mov	r2, r5
 8009e18:	f005 fe04 	bl	800fa24 <GUI_MEMDEV__WriteToActiveOpaque>
 8009e1c:	f7fe fc74 	bl	8008708 <WM__GetNextIVR>
 8009e20:	e7ec      	b.n	8009dfc <GUI_MEMDEV_CopyToLCDAt+0x70>
 8009e22:	b005      	add	sp, #20
 8009e24:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009e28:	20000278 	.word	0x20000278
 8009e2c:	fffff001 	.word	0xfffff001

08009e30 <GUI_MEMDEV_CopyToLCD>:
 8009e30:	4901      	ldr	r1, [pc, #4]	; (8009e38 <GUI_MEMDEV_CopyToLCD+0x8>)
 8009e32:	460a      	mov	r2, r1
 8009e34:	f7ff bfaa 	b.w	8009d8c <GUI_MEMDEV_CopyToLCDAt>
 8009e38:	fffff001 	.word	0xfffff001

08009e3c <_SetPhysRAMAddr>:
 8009e3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009e3e:	4604      	mov	r4, r0
 8009e40:	460e      	mov	r6, r1
 8009e42:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 8009e46:	212a      	movs	r1, #42	; 0x2a
 8009e48:	4615      	mov	r5, r2
 8009e4a:	4798      	blx	r3
 8009e4c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8009e4e:	f8d4 7090 	ldr.w	r7, [r4, #144]	; 0x90
 8009e52:	1872      	adds	r2, r6, r1
 8009e54:	f3c2 210f 	ubfx	r1, r2, #8, #16
 8009e58:	4620      	mov	r0, r4
 8009e5a:	47b8      	blx	r7
 8009e5c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8009e5e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8009e62:	b2b7      	uxth	r7, r6
 8009e64:	1839      	adds	r1, r7, r0
 8009e66:	b2c9      	uxtb	r1, r1
 8009e68:	4620      	mov	r0, r4
 8009e6a:	4798      	blx	r3
 8009e6c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009e6e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8009e72:	18b6      	adds	r6, r6, r2
 8009e74:	4620      	mov	r0, r4
 8009e76:	f3c6 210f 	ubfx	r1, r6, #8, #16
 8009e7a:	4798      	blx	r3
 8009e7c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8009e7e:	f8d4 2090 	ldr.w	r2, [r4, #144]	; 0x90
 8009e82:	1839      	adds	r1, r7, r0
 8009e84:	b2c9      	uxtb	r1, r1
 8009e86:	4620      	mov	r0, r4
 8009e88:	4790      	blx	r2
 8009e8a:	f8d4 608c 	ldr.w	r6, [r4, #140]	; 0x8c
 8009e8e:	4620      	mov	r0, r4
 8009e90:	212b      	movs	r1, #43	; 0x2b
 8009e92:	47b0      	blx	r6
 8009e94:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009e96:	f8d4 2090 	ldr.w	r2, [r4, #144]	; 0x90
 8009e9a:	18e9      	adds	r1, r5, r3
 8009e9c:	4620      	mov	r0, r4
 8009e9e:	f3c1 210f 	ubfx	r1, r1, #8, #16
 8009ea2:	4790      	blx	r2
 8009ea4:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009ea6:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8009eaa:	b2ae      	uxth	r6, r5
 8009eac:	1831      	adds	r1, r6, r0
 8009eae:	b2c9      	uxtb	r1, r1
 8009eb0:	4620      	mov	r0, r4
 8009eb2:	4798      	blx	r3
 8009eb4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8009eb6:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8009eba:	18a9      	adds	r1, r5, r2
 8009ebc:	4620      	mov	r0, r4
 8009ebe:	f3c1 210f 	ubfx	r1, r1, #8, #16
 8009ec2:	4798      	blx	r3
 8009ec4:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009ec6:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8009eca:	1832      	adds	r2, r6, r0
 8009ecc:	b2d1      	uxtb	r1, r2
 8009ece:	4620      	mov	r0, r4
 8009ed0:	4798      	blx	r3
 8009ed2:	f8d4 208c 	ldr.w	r2, [r4, #140]	; 0x8c
 8009ed6:	4620      	mov	r0, r4
 8009ed8:	212c      	movs	r1, #44	; 0x2c
 8009eda:	4790      	blx	r2
 8009edc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08009ede <_SetRect>:
 8009ede:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009ee2:	4604      	mov	r4, r0
 8009ee4:	4688      	mov	r8, r1
 8009ee6:	461f      	mov	r7, r3
 8009ee8:	212a      	movs	r1, #42	; 0x2a
 8009eea:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 8009eee:	9d06      	ldr	r5, [sp, #24]
 8009ef0:	4616      	mov	r6, r2
 8009ef2:	4798      	blx	r3
 8009ef4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8009ef6:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8009efa:	eb08 0201 	add.w	r2, r8, r1
 8009efe:	4620      	mov	r0, r4
 8009f00:	f3c2 210f 	ubfx	r1, r2, #8, #16
 8009f04:	4798      	blx	r3
 8009f06:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8009f08:	f8d4 2090 	ldr.w	r2, [r4, #144]	; 0x90
 8009f0c:	eb08 0100 	add.w	r1, r8, r0
 8009f10:	b2c9      	uxtb	r1, r1
 8009f12:	4620      	mov	r0, r4
 8009f14:	4790      	blx	r2
 8009f16:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009f18:	f8d4 2090 	ldr.w	r2, [r4, #144]	; 0x90
 8009f1c:	18f9      	adds	r1, r7, r3
 8009f1e:	4620      	mov	r0, r4
 8009f20:	f3c1 210f 	ubfx	r1, r1, #8, #16
 8009f24:	4790      	blx	r2
 8009f26:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8009f28:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8009f2c:	1839      	adds	r1, r7, r0
 8009f2e:	b2c9      	uxtb	r1, r1
 8009f30:	4620      	mov	r0, r4
 8009f32:	4798      	blx	r3
 8009f34:	f8d4 208c 	ldr.w	r2, [r4, #140]	; 0x8c
 8009f38:	4620      	mov	r0, r4
 8009f3a:	212b      	movs	r1, #43	; 0x2b
 8009f3c:	4790      	blx	r2
 8009f3e:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009f40:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8009f44:	1831      	adds	r1, r6, r0
 8009f46:	f3c1 210f 	ubfx	r1, r1, #8, #16
 8009f4a:	4620      	mov	r0, r4
 8009f4c:	4798      	blx	r3
 8009f4e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8009f50:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8009f54:	18b1      	adds	r1, r6, r2
 8009f56:	4620      	mov	r0, r4
 8009f58:	b2c9      	uxtb	r1, r1
 8009f5a:	4798      	blx	r3
 8009f5c:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009f5e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8009f62:	182a      	adds	r2, r5, r0
 8009f64:	f3c2 210f 	ubfx	r1, r2, #8, #16
 8009f68:	4620      	mov	r0, r4
 8009f6a:	4798      	blx	r3
 8009f6c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8009f6e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8009f72:	186a      	adds	r2, r5, r1
 8009f74:	4620      	mov	r0, r4
 8009f76:	b2d1      	uxtb	r1, r2
 8009f78:	4798      	blx	r3
 8009f7a:	f8d4 208c 	ldr.w	r2, [r4, #140]	; 0x8c
 8009f7e:	4620      	mov	r0, r4
 8009f80:	212c      	movs	r1, #44	; 0x2c
 8009f82:	4790      	blx	r2
 8009f84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009f88 <_SetOrientation>:
 8009f88:	b513      	push	{r0, r1, r4, lr}
 8009f8a:	4a0d      	ldr	r2, [pc, #52]	; (8009fc0 <_SetOrientation+0x38>)
 8009f8c:	4604      	mov	r4, r0
 8009f8e:	6851      	ldr	r1, [r2, #4]
 8009f90:	6810      	ldr	r0, [r2, #0]
 8009f92:	f8d4 208c 	ldr.w	r2, [r4, #140]	; 0x8c
 8009f96:	466b      	mov	r3, sp
 8009f98:	c303      	stmia	r3!, {r0, r1}
 8009f9a:	4620      	mov	r0, r4
 8009f9c:	2136      	movs	r1, #54	; 0x36
 8009f9e:	4790      	blx	r2
 8009fa0:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8009fa2:	a902      	add	r1, sp, #8
 8009fa4:	180b      	adds	r3, r1, r0
 8009fa6:	8ca0      	ldrh	r0, [r4, #36]	; 0x24
 8009fa8:	f813 2c08 	ldrb.w	r2, [r3, #-8]
 8009fac:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8009fb0:	f020 01e0 	bic.w	r1, r0, #224	; 0xe0
 8009fb4:	430a      	orrs	r2, r1
 8009fb6:	4620      	mov	r0, r4
 8009fb8:	b291      	uxth	r1, r2
 8009fba:	4798      	blx	r3
 8009fbc:	bd1c      	pop	{r2, r3, r4, pc}
 8009fbe:	bf00      	nop
 8009fc0:	080187b8 	.word	0x080187b8

08009fc4 <_ReadPixel_16bpp_B8>:
 8009fc4:	b513      	push	{r0, r1, r4, lr}
 8009fc6:	4604      	mov	r4, r0
 8009fc8:	f8d0 310c 	ldr.w	r3, [r0, #268]	; 0x10c
 8009fcc:	202e      	movs	r0, #46	; 0x2e
 8009fce:	4798      	blx	r3
 8009fd0:	6a21      	ldr	r1, [r4, #32]
 8009fd2:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
 8009fd6:	4668      	mov	r0, sp
 8009fd8:	3103      	adds	r1, #3
 8009fda:	4790      	blx	r2
 8009fdc:	6a20      	ldr	r0, [r4, #32]
 8009fde:	ab00      	add	r3, sp, #0
 8009fe0:	181b      	adds	r3, r3, r0
 8009fe2:	f81d 2000 	ldrb.w	r2, [sp, r0]
 8009fe6:	7859      	ldrb	r1, [r3, #1]
 8009fe8:	789b      	ldrb	r3, [r3, #2]
 8009fea:	08d0      	lsrs	r0, r2, #3
 8009fec:	02c2      	lsls	r2, r0, #11
 8009fee:	0889      	lsrs	r1, r1, #2
 8009ff0:	ea42 1141 	orr.w	r1, r2, r1, lsl #5
 8009ff4:	ea41 00d3 	orr.w	r0, r1, r3, lsr #3
 8009ff8:	bd1c      	pop	{r2, r3, r4, pc}

08009ffa <_ReadPixel_16bpp_B16_I>:
 8009ffa:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8009ffc:	4604      	mov	r4, r0
 8009ffe:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800a002:	202e      	movs	r0, #46	; 0x2e
 800a004:	4798      	blx	r3
 800a006:	6a21      	ldr	r1, [r4, #32]
 800a008:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
 800a00c:	4668      	mov	r0, sp
 800a00e:	3102      	adds	r1, #2
 800a010:	4790      	blx	r2
 800a012:	6a20      	ldr	r0, [r4, #32]
 800a014:	ab00      	add	r3, sp, #0
 800a016:	eb03 0140 	add.w	r1, r3, r0, lsl #1
 800a01a:	f83d 0010 	ldrh.w	r0, [sp, r0, lsl #1]
 800a01e:	884a      	ldrh	r2, [r1, #2]
 800a020:	f402 437c 	and.w	r3, r2, #64512	; 0xfc00
 800a024:	f3c2 01c4 	ubfx	r1, r2, #3, #5
 800a028:	ea41 1253 	orr.w	r2, r1, r3, lsr #5
 800a02c:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
 800a030:	ea42 2003 	orr.w	r0, r2, r3, lsl #8
 800a034:	b004      	add	sp, #16
 800a036:	bd10      	pop	{r4, pc}

0800a038 <_SetReg_B8>:
 800a038:	b538      	push	{r3, r4, r5, lr}
 800a03a:	4604      	mov	r4, r0
 800a03c:	460d      	mov	r5, r1
 800a03e:	f8d0 310c 	ldr.w	r3, [r0, #268]	; 0x10c
 800a042:	0a08      	lsrs	r0, r1, #8
 800a044:	4798      	blx	r3
 800a046:	f8d4 110c 	ldr.w	r1, [r4, #268]	; 0x10c
 800a04a:	b2e8      	uxtb	r0, r5
 800a04c:	4788      	blx	r1
 800a04e:	bd38      	pop	{r3, r4, r5, pc}

0800a050 <_SetReg_B16>:
 800a050:	b508      	push	{r3, lr}
 800a052:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800a056:	4608      	mov	r0, r1
 800a058:	4798      	blx	r3
 800a05a:	bd08      	pop	{r3, pc}

0800a05c <_WritePara_B8>:
 800a05c:	b508      	push	{r3, lr}
 800a05e:	f8d0 3110 	ldr.w	r3, [r0, #272]	; 0x110
 800a062:	b2c8      	uxtb	r0, r1
 800a064:	4798      	blx	r3
 800a066:	bd08      	pop	{r3, pc}

0800a068 <_WritePara_B16>:
 800a068:	b508      	push	{r3, lr}
 800a06a:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800a06e:	4608      	mov	r0, r1
 800a070:	4798      	blx	r3
 800a072:	bd08      	pop	{r3, pc}

0800a074 <_SetInterface>:
 800a074:	2908      	cmp	r1, #8
 800a076:	d006      	beq.n	800a086 <_SetInterface+0x12>
 800a078:	2910      	cmp	r1, #16
 800a07a:	d10a      	bne.n	800a092 <_SetInterface+0x1e>
 800a07c:	4b05      	ldr	r3, [pc, #20]	; (800a094 <_SetInterface+0x20>)
 800a07e:	4906      	ldr	r1, [pc, #24]	; (800a098 <_SetInterface+0x24>)
 800a080:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
 800a084:	e003      	b.n	800a08e <_SetInterface+0x1a>
 800a086:	4a05      	ldr	r2, [pc, #20]	; (800a09c <_SetInterface+0x28>)
 800a088:	4905      	ldr	r1, [pc, #20]	; (800a0a0 <_SetInterface+0x2c>)
 800a08a:	f8c0 208c 	str.w	r2, [r0, #140]	; 0x8c
 800a08e:	f8c0 1090 	str.w	r1, [r0, #144]	; 0x90
 800a092:	4770      	bx	lr
 800a094:	0800a051 	.word	0x0800a051
 800a098:	0800a069 	.word	0x0800a069
 800a09c:	0800a039 	.word	0x0800a039
 800a0a0:	0800a05d 	.word	0x0800a05d

0800a0a4 <_ReadRect_16bpp_B16_I>:
 800a0a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a0a6:	b087      	sub	sp, #28
 800a0a8:	6884      	ldr	r4, [r0, #8]
 800a0aa:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 800a0ac:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 800a0ae:	9700      	str	r7, [sp, #0]
 800a0b0:	1a58      	subs	r0, r3, r1
 800a0b2:	1abd      	subs	r5, r7, r2
 800a0b4:	3001      	adds	r0, #1
 800a0b6:	3501      	adds	r5, #1
 800a0b8:	4345      	muls	r5, r0
 800a0ba:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800a0be:	4620      	mov	r0, r4
 800a0c0:	47b8      	blx	r7
 800a0c2:	202e      	movs	r0, #46	; 0x2e
 800a0c4:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 800a0c8:	4798      	blx	r3
 800a0ca:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
 800a0ce:	6a21      	ldr	r1, [r4, #32]
 800a0d0:	a802      	add	r0, sp, #8
 800a0d2:	4790      	blx	r2
 800a0d4:	2102      	movs	r1, #2
 800a0d6:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800a0da:	a802      	add	r0, sp, #8
 800a0dc:	4798      	blx	r3
 800a0de:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800a0e2:	f401 407c 	and.w	r0, r1, #64512	; 0xfc00
 800a0e6:	f3c1 02c4 	ubfx	r2, r1, #3, #5
 800a0ea:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800a0ee:	ea42 1350 	orr.w	r3, r2, r0, lsr #5
 800a0f2:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800a0f6:	ea43 2200 	orr.w	r2, r3, r0, lsl #8
 800a0fa:	3d01      	subs	r5, #1
 800a0fc:	f826 2b02 	strh.w	r2, [r6], #2
 800a100:	d1e8      	bne.n	800a0d4 <_ReadRect_16bpp_B16_I+0x30>
 800a102:	b007      	add	sp, #28
 800a104:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a106 <_ReadRect_16bpp_B8>:
 800a106:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a108:	b085      	sub	sp, #20
 800a10a:	6884      	ldr	r4, [r0, #8]
 800a10c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800a10e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800a110:	9700      	str	r7, [sp, #0]
 800a112:	1a58      	subs	r0, r3, r1
 800a114:	1abd      	subs	r5, r7, r2
 800a116:	3001      	adds	r0, #1
 800a118:	3501      	adds	r5, #1
 800a11a:	4345      	muls	r5, r0
 800a11c:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800a120:	4620      	mov	r0, r4
 800a122:	47b8      	blx	r7
 800a124:	202e      	movs	r0, #46	; 0x2e
 800a126:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 800a12a:	4798      	blx	r3
 800a12c:	f8d4 2128 	ldr.w	r2, [r4, #296]	; 0x128
 800a130:	6a21      	ldr	r1, [r4, #32]
 800a132:	a802      	add	r0, sp, #8
 800a134:	4790      	blx	r2
 800a136:	2103      	movs	r1, #3
 800a138:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
 800a13c:	a802      	add	r0, sp, #8
 800a13e:	4798      	blx	r3
 800a140:	f89d 2008 	ldrb.w	r2, [sp, #8]
 800a144:	f89d 1009 	ldrb.w	r1, [sp, #9]
 800a148:	08d3      	lsrs	r3, r2, #3
 800a14a:	0888      	lsrs	r0, r1, #2
 800a14c:	f89d 200a 	ldrb.w	r2, [sp, #10]
 800a150:	02d9      	lsls	r1, r3, #11
 800a152:	ea41 1040 	orr.w	r0, r1, r0, lsl #5
 800a156:	ea40 03d2 	orr.w	r3, r0, r2, lsr #3
 800a15a:	3d01      	subs	r5, #1
 800a15c:	f826 3b02 	strh.w	r3, [r6], #2
 800a160:	d1e9      	bne.n	800a136 <_ReadRect_16bpp_B8+0x30>
 800a162:	b005      	add	sp, #20
 800a164:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800a168 <GUIDRV_FlexColor_SetFunc66709>:
 800a168:	b510      	push	{r4, lr}
 800a16a:	4604      	mov	r4, r0
 800a16c:	f000 fda8 	bl	800acc0 <GUIDRV_FlexColor__InitOnce>
 800a170:	68a3      	ldr	r3, [r4, #8]
 800a172:	4a12      	ldr	r2, [pc, #72]	; (800a1bc <GUIDRV_FlexColor_SetFunc66709+0x54>)
 800a174:	4912      	ldr	r1, [pc, #72]	; (800a1c0 <GUIDRV_FlexColor_SetFunc66709+0x58>)
 800a176:	4813      	ldr	r0, [pc, #76]	; (800a1c4 <GUIDRV_FlexColor_SetFunc66709+0x5c>)
 800a178:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
 800a17c:	f8c3 10b0 	str.w	r1, [r3, #176]	; 0xb0
 800a180:	4a11      	ldr	r2, [pc, #68]	; (800a1c8 <GUIDRV_FlexColor_SetFunc66709+0x60>)
 800a182:	4912      	ldr	r1, [pc, #72]	; (800a1cc <GUIDRV_FlexColor_SetFunc66709+0x64>)
 800a184:	f8c3 00a8 	str.w	r0, [r3, #168]	; 0xa8
 800a188:	2000      	movs	r0, #0
 800a18a:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
 800a18e:	f8c3 00bc 	str.w	r0, [r3, #188]	; 0xbc
 800a192:	680a      	ldr	r2, [r1, #0]
 800a194:	f8c3 00cc 	str.w	r0, [r3, #204]	; 0xcc
 800a198:	480d      	ldr	r0, [pc, #52]	; (800a1d0 <GUIDRV_FlexColor_SetFunc66709+0x68>)
 800a19a:	490e      	ldr	r1, [pc, #56]	; (800a1d4 <GUIDRV_FlexColor_SetFunc66709+0x6c>)
 800a19c:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
 800a1a0:	6802      	ldr	r2, [r0, #0]
 800a1a2:	f8c3 10c8 	str.w	r1, [r3, #200]	; 0xc8
 800a1a6:	8cd9      	ldrh	r1, [r3, #38]	; 0x26
 800a1a8:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
 800a1ac:	4a0a      	ldr	r2, [pc, #40]	; (800a1d8 <GUIDRV_FlexColor_SetFunc66709+0x70>)
 800a1ae:	f021 0003 	bic.w	r0, r1, #3
 800a1b2:	84d8      	strh	r0, [r3, #38]	; 0x26
 800a1b4:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 800a1b8:	bd10      	pop	{r4, pc}
 800a1ba:	bf00      	nop
 800a1bc:	08009e3d 	.word	0x08009e3d
 800a1c0:	08009f89 	.word	0x08009f89
 800a1c4:	08009edf 	.word	0x08009edf
 800a1c8:	08009fc5 	.word	0x08009fc5
 800a1cc:	2000025c 	.word	0x2000025c
 800a1d0:	20000260 	.word	0x20000260
 800a1d4:	0800a107 	.word	0x0800a107
 800a1d8:	0800a075 	.word	0x0800a075

0800a1dc <_ReadData>:
 800a1dc:	b508      	push	{r3, lr}
 800a1de:	f8d0 30b4 	ldr.w	r3, [r0, #180]	; 0xb4
 800a1e2:	4798      	blx	r3
 800a1e4:	bd08      	pop	{r3, pc}

0800a1e6 <_WriteData>:
 800a1e6:	b508      	push	{r3, lr}
 800a1e8:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800a1ec:	b288      	uxth	r0, r1
 800a1ee:	4798      	blx	r3
 800a1f0:	bd08      	pop	{r3, pc}
	...

0800a1f4 <_DrawBitmap>:
 800a1f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a1f8:	b08d      	sub	sp, #52	; 0x34
 800a1fa:	469a      	mov	sl, r3
 800a1fc:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 800a1fe:	6884      	ldr	r4, [r0, #8]
 800a200:	9009      	str	r0, [sp, #36]	; 0x24
 800a202:	1e6b      	subs	r3, r5, #1
 800a204:	2b01      	cmp	r3, #1
 800a206:	9108      	str	r1, [sp, #32]
 800a208:	920a      	str	r2, [sp, #40]	; 0x28
 800a20a:	940b      	str	r4, [sp, #44]	; 0x2c
 800a20c:	d903      	bls.n	800a216 <_DrawBitmap+0x22>
 800a20e:	2d04      	cmp	r5, #4
 800a210:	d001      	beq.n	800a216 <_DrawBitmap+0x22>
 800a212:	2d08      	cmp	r5, #8
 800a214:	d106      	bne.n	800a224 <_DrawBitmap+0x30>
 800a216:	4891      	ldr	r0, [pc, #580]	; (800a45c <_DrawBitmap+0x268>)
 800a218:	6801      	ldr	r1, [r0, #0]
 800a21a:	7c0a      	ldrb	r2, [r1, #16]
 800a21c:	f002 0703 	and.w	r7, r2, #3
 800a220:	2f02      	cmp	r7, #2
 800a222:	d010      	beq.n	800a246 <_DrawBitmap+0x52>
 800a224:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800a226:	9816      	ldr	r0, [sp, #88]	; 0x58
 800a228:	9d08      	ldr	r5, [sp, #32]
 800a22a:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 800a22c:	183a      	adds	r2, r7, r0
 800a22e:	1929      	adds	r1, r5, r4
 800a230:	1e55      	subs	r5, r2, #1
 800a232:	9500      	str	r5, [sp, #0]
 800a234:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800a236:	eb01 030a 	add.w	r3, r1, sl
 800a23a:	f8d5 40a8 	ldr.w	r4, [r5, #168]	; 0xa8
 800a23e:	4628      	mov	r0, r5
 800a240:	463a      	mov	r2, r7
 800a242:	3b01      	subs	r3, #1
 800a244:	47a0      	blx	r4
 800a246:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 800a24a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800a24c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 800a24e:	ebc7 010b 	rsb	r1, r7, fp
 800a252:	42a1      	cmp	r1, r4
 800a254:	f280 825b 	bge.w	800a70e <_DrawBitmap+0x51a>
 800a258:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800a25a:	1e5f      	subs	r7, r3, #1
 800a25c:	2f0f      	cmp	r7, #15
 800a25e:	f200 824f 	bhi.w	800a700 <_DrawBitmap+0x50c>
 800a262:	e8df f017 	tbh	[pc, r7, lsl #1]
 800a266:	0010      	.short	0x0010
 800a268:	024d00ba 	.word	0x024d00ba
 800a26c:	024d0145 	.word	0x024d0145
 800a270:	024d024d 	.word	0x024d024d
 800a274:	024d01df 	.word	0x024d01df
 800a278:	024d024d 	.word	0x024d024d
 800a27c:	024d024d 	.word	0x024d024d
 800a280:	024d024d 	.word	0x024d024d
 800a284:	0247      	.short	0x0247
 800a286:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 800a288:	4d74      	ldr	r5, [pc, #464]	; (800a45c <_DrawBitmap+0x268>)
 800a28a:	6872      	ldr	r2, [r6, #4]
 800a28c:	6837      	ldr	r7, [r6, #0]
 800a28e:	682e      	ldr	r6, [r5, #0]
 800a290:	991a      	ldr	r1, [sp, #104]	; 0x68
 800a292:	9207      	str	r2, [sp, #28]
 800a294:	9808      	ldr	r0, [sp, #32]
 800a296:	7c32      	ldrb	r2, [r6, #16]
 800a298:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800a29a:	1843      	adds	r3, r0, r1
 800a29c:	f002 0103 	and.w	r1, r2, #3
 800a2a0:	2902      	cmp	r1, #2
 800a2a2:	68a4      	ldr	r4, [r4, #8]
 800a2a4:	9305      	str	r3, [sp, #20]
 800a2a6:	d01d      	beq.n	800a2e4 <_DrawBitmap+0xf0>
 800a2a8:	2903      	cmp	r1, #3
 800a2aa:	d070      	beq.n	800a38e <_DrawBitmap+0x19a>
 800a2ac:	2901      	cmp	r1, #1
 800a2ae:	d06e      	beq.n	800a38e <_DrawBitmap+0x19a>
 800a2b0:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800a2b2:	f8dd 8064 	ldr.w	r8, [sp, #100]	; 0x64
 800a2b6:	4656      	mov	r6, sl
 800a2b8:	f898 1000 	ldrb.w	r1, [r8]
 800a2bc:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800a2c0:	2280      	movs	r2, #128	; 0x80
 800a2c2:	fa42 f205 	asr.w	r2, r2, r5
 800a2c6:	4211      	tst	r1, r2
 800a2c8:	bf16      	itet	ne
 800a2ca:	9907      	ldrne	r1, [sp, #28]
 800a2cc:	b2b8      	uxtheq	r0, r7
 800a2ce:	b288      	uxthne	r0, r1
 800a2d0:	3501      	adds	r5, #1
 800a2d2:	4798      	blx	r3
 800a2d4:	2d08      	cmp	r5, #8
 800a2d6:	bf04      	itt	eq
 800a2d8:	f108 0801 	addeq.w	r8, r8, #1
 800a2dc:	2500      	moveq	r5, #0
 800a2de:	3e01      	subs	r6, #1
 800a2e0:	d1ea      	bne.n	800a2b8 <_DrawBitmap+0xc4>
 800a2e2:	e20d      	b.n	800a700 <_DrawBitmap+0x50c>
 800a2e4:	6ee6      	ldr	r6, [r4, #108]	; 0x6c
 800a2e6:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800a2ea:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800a2ec:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 800a2f0:	9606      	str	r6, [sp, #24]
 800a2f2:	2500      	movs	r5, #0
 800a2f4:	9203      	str	r2, [sp, #12]
 800a2f6:	464e      	mov	r6, r9
 800a2f8:	462b      	mov	r3, r5
 800a2fa:	9803      	ldr	r0, [sp, #12]
 800a2fc:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800a300:	7801      	ldrb	r1, [r0, #0]
 800a302:	fa4c f708 	asr.w	r7, ip, r8
 800a306:	ea11 0c07 	ands.w	ip, r1, r7
 800a30a:	d00b      	beq.n	800a324 <_DrawBitmap+0x130>
 800a30c:	b913      	cbnz	r3, 800a314 <_DrawBitmap+0x120>
 800a30e:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800a310:	46b1      	mov	r9, r6
 800a312:	9006      	str	r0, [sp, #24]
 800a314:	9906      	ldr	r1, [sp, #24]
 800a316:	9b07      	ldr	r3, [sp, #28]
 800a318:	f821 3b02 	strh.w	r3, [r1], #2
 800a31c:	3501      	adds	r5, #1
 800a31e:	9106      	str	r1, [sp, #24]
 800a320:	2301      	movs	r3, #1
 800a322:	e017      	b.n	800a354 <_DrawBitmap+0x160>
 800a324:	2b01      	cmp	r3, #1
 800a326:	d114      	bne.n	800a352 <_DrawBitmap+0x15e>
 800a328:	f8cd b000 	str.w	fp, [sp]
 800a32c:	1e73      	subs	r3, r6, #1
 800a32e:	f8cd c010 	str.w	ip, [sp, #16]
 800a332:	4620      	mov	r0, r4
 800a334:	4649      	mov	r1, r9
 800a336:	465a      	mov	r2, fp
 800a338:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800a33c:	47b8      	blx	r7
 800a33e:	4629      	mov	r1, r5
 800a340:	f8d4 2138 	ldr.w	r2, [r4, #312]	; 0x138
 800a344:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800a346:	4790      	blx	r2
 800a348:	f8dd c010 	ldr.w	ip, [sp, #16]
 800a34c:	4665      	mov	r5, ip
 800a34e:	4663      	mov	r3, ip
 800a350:	e000      	b.n	800a354 <_DrawBitmap+0x160>
 800a352:	4663      	mov	r3, ip
 800a354:	f108 0801 	add.w	r8, r8, #1
 800a358:	3601      	adds	r6, #1
 800a35a:	f1b8 0f08 	cmp.w	r8, #8
 800a35e:	d104      	bne.n	800a36a <_DrawBitmap+0x176>
 800a360:	9f03      	ldr	r7, [sp, #12]
 800a362:	1c7a      	adds	r2, r7, #1
 800a364:	9203      	str	r2, [sp, #12]
 800a366:	f04f 0800 	mov.w	r8, #0
 800a36a:	9805      	ldr	r0, [sp, #20]
 800a36c:	eb00 010a 	add.w	r1, r0, sl
 800a370:	42b1      	cmp	r1, r6
 800a372:	d1c2      	bne.n	800a2fa <_DrawBitmap+0x106>
 800a374:	f10a 33ff 	add.w	r3, sl, #4294967295
 800a378:	18c3      	adds	r3, r0, r3
 800a37a:	2d00      	cmp	r5, #0
 800a37c:	f000 81c0 	beq.w	800a700 <_DrawBitmap+0x50c>
 800a380:	f8cd b000 	str.w	fp, [sp]
 800a384:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800a388:	4620      	mov	r0, r4
 800a38a:	4649      	mov	r1, r9
 800a38c:	e143      	b.n	800a616 <_DrawBitmap+0x422>
 800a38e:	9e1a      	ldr	r6, [sp, #104]	; 0x68
 800a390:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800a392:	46d0      	mov	r8, sl
 800a394:	2380      	movs	r3, #128	; 0x80
 800a396:	9805      	ldr	r0, [sp, #20]
 800a398:	782f      	ldrb	r7, [r5, #0]
 800a39a:	fa43 f306 	asr.w	r3, r3, r6
 800a39e:	eb00 090a 	add.w	r9, r0, sl
 800a3a2:	421f      	tst	r7, r3
 800a3a4:	ebc8 0909 	rsb	r9, r8, r9
 800a3a8:	d00e      	beq.n	800a3c8 <_DrawBitmap+0x1d4>
 800a3aa:	f8d4 70ec 	ldr.w	r7, [r4, #236]	; 0xec
 800a3ae:	9809      	ldr	r0, [sp, #36]	; 0x24
 800a3b0:	4649      	mov	r1, r9
 800a3b2:	465a      	mov	r2, fp
 800a3b4:	47b8      	blx	r7
 800a3b6:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800a3b8:	f8d4 70f0 	ldr.w	r7, [r4, #240]	; 0xf0
 800a3bc:	ea80 0301 	eor.w	r3, r0, r1
 800a3c0:	465a      	mov	r2, fp
 800a3c2:	9809      	ldr	r0, [sp, #36]	; 0x24
 800a3c4:	4649      	mov	r1, r9
 800a3c6:	47b8      	blx	r7
 800a3c8:	3601      	adds	r6, #1
 800a3ca:	2e08      	cmp	r6, #8
 800a3cc:	d101      	bne.n	800a3d2 <_DrawBitmap+0x1de>
 800a3ce:	3501      	adds	r5, #1
 800a3d0:	2600      	movs	r6, #0
 800a3d2:	f1b8 0801 	subs.w	r8, r8, #1
 800a3d6:	d1dd      	bne.n	800a394 <_DrawBitmap+0x1a0>
 800a3d8:	e192      	b.n	800a700 <_DrawBitmap+0x50c>
 800a3da:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800a3dc:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800a3de:	68a4      	ldr	r4, [r4, #8]
 800a3e0:	2a00      	cmp	r2, #0
 800a3e2:	f000 818d 	beq.w	800a700 <_DrawBitmap+0x50c>
 800a3e6:	491d      	ldr	r1, [pc, #116]	; (800a45c <_DrawBitmap+0x268>)
 800a3e8:	9819      	ldr	r0, [sp, #100]	; 0x64
 800a3ea:	680f      	ldr	r7, [r1, #0]
 800a3ec:	7803      	ldrb	r3, [r0, #0]
 800a3ee:	7c3d      	ldrb	r5, [r7, #16]
 800a3f0:	9305      	str	r3, [sp, #20]
 800a3f2:	f015 0203 	ands.w	r2, r5, #3
 800a3f6:	d012      	beq.n	800a41e <_DrawBitmap+0x22a>
 800a3f8:	2a02      	cmp	r2, #2
 800a3fa:	f040 8181 	bne.w	800a700 <_DrawBitmap+0x50c>
 800a3fe:	9e08      	ldr	r6, [sp, #32]
 800a400:	981a      	ldr	r0, [sp, #104]	; 0x68
 800a402:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 800a404:	9919      	ldr	r1, [sp, #100]	; 0x64
 800a406:	9307      	str	r3, [sp, #28]
 800a408:	eb06 0900 	add.w	r9, r6, r0
 800a40c:	2500      	movs	r5, #0
 800a40e:	f8cd 900c 	str.w	r9, [sp, #12]
 800a412:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 800a416:	9106      	str	r1, [sp, #24]
 800a418:	464e      	mov	r6, r9
 800a41a:	462b      	mov	r3, r5
 800a41c:	e040      	b.n	800a4a0 <_DrawBitmap+0x2ac>
 800a41e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800a420:	9f19      	ldr	r7, [sp, #100]	; 0x64
 800a422:	4656      	mov	r6, sl
 800a424:	f1c5 0103 	rsb	r1, r5, #3
 800a428:	004b      	lsls	r3, r1, #1
 800a42a:	f1c3 0006 	rsb	r0, r3, #6
 800a42e:	22c0      	movs	r2, #192	; 0xc0
 800a430:	9905      	ldr	r1, [sp, #20]
 800a432:	fa42 f200 	asr.w	r2, r2, r0
 800a436:	400a      	ands	r2, r1
 800a438:	fa22 f203 	lsr.w	r2, r2, r3
 800a43c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 800a43e:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800a442:	f830 0022 	ldrh.w	r0, [r0, r2, lsl #2]
 800a446:	3501      	adds	r5, #1
 800a448:	4798      	blx	r3
 800a44a:	2d04      	cmp	r5, #4
 800a44c:	d103      	bne.n	800a456 <_DrawBitmap+0x262>
 800a44e:	787d      	ldrb	r5, [r7, #1]
 800a450:	3701      	adds	r7, #1
 800a452:	9505      	str	r5, [sp, #20]
 800a454:	2500      	movs	r5, #0
 800a456:	3e01      	subs	r6, #1
 800a458:	d1e4      	bne.n	800a424 <_DrawBitmap+0x230>
 800a45a:	e151      	b.n	800a700 <_DrawBitmap+0x50c>
 800a45c:	20000278 	.word	0x20000278
 800a460:	b913      	cbnz	r3, 800a468 <_DrawBitmap+0x274>
 800a462:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 800a464:	9603      	str	r6, [sp, #12]
 800a466:	9107      	str	r1, [sp, #28]
 800a468:	981b      	ldr	r0, [sp, #108]	; 0x6c
 800a46a:	9f07      	ldr	r7, [sp, #28]
 800a46c:	f850 302c 	ldr.w	r3, [r0, ip, lsl #2]
 800a470:	f827 3b02 	strh.w	r3, [r7], #2
 800a474:	3501      	adds	r5, #1
 800a476:	9707      	str	r7, [sp, #28]
 800a478:	2301      	movs	r3, #1
 800a47a:	f108 0801 	add.w	r8, r8, #1
 800a47e:	3601      	adds	r6, #1
 800a480:	f1b8 0f04 	cmp.w	r8, #4
 800a484:	d107      	bne.n	800a496 <_DrawBitmap+0x2a2>
 800a486:	9a06      	ldr	r2, [sp, #24]
 800a488:	9806      	ldr	r0, [sp, #24]
 800a48a:	7851      	ldrb	r1, [r2, #1]
 800a48c:	1c47      	adds	r7, r0, #1
 800a48e:	9105      	str	r1, [sp, #20]
 800a490:	9706      	str	r7, [sp, #24]
 800a492:	f04f 0800 	mov.w	r8, #0
 800a496:	eb09 020a 	add.w	r2, r9, sl
 800a49a:	42b2      	cmp	r2, r6
 800a49c:	f000 80b0 	beq.w	800a600 <_DrawBitmap+0x40c>
 800a4a0:	f1c8 0703 	rsb	r7, r8, #3
 800a4a4:	007a      	lsls	r2, r7, #1
 800a4a6:	f1c2 0006 	rsb	r0, r2, #6
 800a4aa:	f04f 0cc0 	mov.w	ip, #192	; 0xc0
 800a4ae:	9f05      	ldr	r7, [sp, #20]
 800a4b0:	fa4c f100 	asr.w	r1, ip, r0
 800a4b4:	ea01 0007 	and.w	r0, r1, r7
 800a4b8:	fa30 fc02 	lsrs.w	ip, r0, r2
 800a4bc:	d1d0      	bne.n	800a460 <_DrawBitmap+0x26c>
 800a4be:	2b01      	cmp	r3, #1
 800a4c0:	d114      	bne.n	800a4ec <_DrawBitmap+0x2f8>
 800a4c2:	f8cd b000 	str.w	fp, [sp]
 800a4c6:	1e73      	subs	r3, r6, #1
 800a4c8:	f8cd c010 	str.w	ip, [sp, #16]
 800a4cc:	4620      	mov	r0, r4
 800a4ce:	9903      	ldr	r1, [sp, #12]
 800a4d0:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800a4d4:	465a      	mov	r2, fp
 800a4d6:	47b8      	blx	r7
 800a4d8:	4629      	mov	r1, r5
 800a4da:	f8d4 2138 	ldr.w	r2, [r4, #312]	; 0x138
 800a4de:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800a4e0:	4790      	blx	r2
 800a4e2:	f8dd c010 	ldr.w	ip, [sp, #16]
 800a4e6:	4665      	mov	r5, ip
 800a4e8:	4663      	mov	r3, ip
 800a4ea:	e7c6      	b.n	800a47a <_DrawBitmap+0x286>
 800a4ec:	4663      	mov	r3, ip
 800a4ee:	e7c4      	b.n	800a47a <_DrawBitmap+0x286>
 800a4f0:	9809      	ldr	r0, [sp, #36]	; 0x24
 800a4f2:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800a4f4:	6884      	ldr	r4, [r0, #8]
 800a4f6:	2a00      	cmp	r2, #0
 800a4f8:	f000 8102 	beq.w	800a700 <_DrawBitmap+0x50c>
 800a4fc:	4b85      	ldr	r3, [pc, #532]	; (800a714 <_DrawBitmap+0x520>)
 800a4fe:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800a500:	681f      	ldr	r7, [r3, #0]
 800a502:	7829      	ldrb	r1, [r5, #0]
 800a504:	7c38      	ldrb	r0, [r7, #16]
 800a506:	9105      	str	r1, [sp, #20]
 800a508:	f010 0203 	ands.w	r2, r0, #3
 800a50c:	d012      	beq.n	800a534 <_DrawBitmap+0x340>
 800a50e:	2a02      	cmp	r2, #2
 800a510:	f040 80f6 	bne.w	800a700 <_DrawBitmap+0x50c>
 800a514:	9e08      	ldr	r6, [sp, #32]
 800a516:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800a518:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800a51a:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 800a51c:	9306      	str	r3, [sp, #24]
 800a51e:	eb06 0905 	add.w	r9, r6, r5
 800a522:	2500      	movs	r5, #0
 800a524:	9107      	str	r1, [sp, #28]
 800a526:	f8cd 900c 	str.w	r9, [sp, #12]
 800a52a:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 800a52e:	464e      	mov	r6, r9
 800a530:	462b      	mov	r3, r5
 800a532:	e03d      	b.n	800a5b0 <_DrawBitmap+0x3bc>
 800a534:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800a536:	9f19      	ldr	r7, [sp, #100]	; 0x64
 800a538:	4656      	mov	r6, sl
 800a53a:	f1c5 0301 	rsb	r3, r5, #1
 800a53e:	009b      	lsls	r3, r3, #2
 800a540:	f1c3 0004 	rsb	r0, r3, #4
 800a544:	21f0      	movs	r1, #240	; 0xf0
 800a546:	fa41 f200 	asr.w	r2, r1, r0
 800a54a:	9805      	ldr	r0, [sp, #20]
 800a54c:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800a54e:	4002      	ands	r2, r0
 800a550:	fa22 f203 	lsr.w	r2, r2, r3
 800a554:	3501      	adds	r5, #1
 800a556:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800a55a:	f831 0022 	ldrh.w	r0, [r1, r2, lsl #2]
 800a55e:	4798      	blx	r3
 800a560:	2d02      	cmp	r5, #2
 800a562:	d103      	bne.n	800a56c <_DrawBitmap+0x378>
 800a564:	787d      	ldrb	r5, [r7, #1]
 800a566:	3701      	adds	r7, #1
 800a568:	9505      	str	r5, [sp, #20]
 800a56a:	2500      	movs	r5, #0
 800a56c:	3e01      	subs	r6, #1
 800a56e:	d1e4      	bne.n	800a53a <_DrawBitmap+0x346>
 800a570:	e0c6      	b.n	800a700 <_DrawBitmap+0x50c>
 800a572:	b913      	cbnz	r3, 800a57a <_DrawBitmap+0x386>
 800a574:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800a576:	9603      	str	r6, [sp, #12]
 800a578:	9007      	str	r0, [sp, #28]
 800a57a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800a57c:	9f07      	ldr	r7, [sp, #28]
 800a57e:	f851 302c 	ldr.w	r3, [r1, ip, lsl #2]
 800a582:	f827 3b02 	strh.w	r3, [r7], #2
 800a586:	3501      	adds	r5, #1
 800a588:	9707      	str	r7, [sp, #28]
 800a58a:	2301      	movs	r3, #1
 800a58c:	f108 0801 	add.w	r8, r8, #1
 800a590:	3601      	adds	r6, #1
 800a592:	f1b8 0f02 	cmp.w	r8, #2
 800a596:	d107      	bne.n	800a5a8 <_DrawBitmap+0x3b4>
 800a598:	9a06      	ldr	r2, [sp, #24]
 800a59a:	9906      	ldr	r1, [sp, #24]
 800a59c:	7850      	ldrb	r0, [r2, #1]
 800a59e:	1c4f      	adds	r7, r1, #1
 800a5a0:	9005      	str	r0, [sp, #20]
 800a5a2:	9706      	str	r7, [sp, #24]
 800a5a4:	f04f 0800 	mov.w	r8, #0
 800a5a8:	eb09 020a 	add.w	r2, r9, sl
 800a5ac:	42b2      	cmp	r2, r6
 800a5ae:	d027      	beq.n	800a600 <_DrawBitmap+0x40c>
 800a5b0:	f1c8 0701 	rsb	r7, r8, #1
 800a5b4:	00b8      	lsls	r0, r7, #2
 800a5b6:	f1c0 0204 	rsb	r2, r0, #4
 800a5ba:	f04f 0cf0 	mov.w	ip, #240	; 0xf0
 800a5be:	9f05      	ldr	r7, [sp, #20]
 800a5c0:	fa4c f102 	asr.w	r1, ip, r2
 800a5c4:	ea01 0207 	and.w	r2, r1, r7
 800a5c8:	fa32 fc00 	lsrs.w	ip, r2, r0
 800a5cc:	d1d1      	bne.n	800a572 <_DrawBitmap+0x37e>
 800a5ce:	2b01      	cmp	r3, #1
 800a5d0:	d114      	bne.n	800a5fc <_DrawBitmap+0x408>
 800a5d2:	f8cd b000 	str.w	fp, [sp]
 800a5d6:	1e73      	subs	r3, r6, #1
 800a5d8:	f8cd c010 	str.w	ip, [sp, #16]
 800a5dc:	4620      	mov	r0, r4
 800a5de:	9903      	ldr	r1, [sp, #12]
 800a5e0:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800a5e4:	465a      	mov	r2, fp
 800a5e6:	47b8      	blx	r7
 800a5e8:	4629      	mov	r1, r5
 800a5ea:	f8d4 2138 	ldr.w	r2, [r4, #312]	; 0x138
 800a5ee:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800a5f0:	4790      	blx	r2
 800a5f2:	f8dd c010 	ldr.w	ip, [sp, #16]
 800a5f6:	4665      	mov	r5, ip
 800a5f8:	4663      	mov	r3, ip
 800a5fa:	e7c7      	b.n	800a58c <_DrawBitmap+0x398>
 800a5fc:	4663      	mov	r3, ip
 800a5fe:	e7c5      	b.n	800a58c <_DrawBitmap+0x398>
 800a600:	f10a 33ff 	add.w	r3, sl, #4294967295
 800a604:	444b      	add	r3, r9
 800a606:	2d00      	cmp	r5, #0
 800a608:	d07a      	beq.n	800a700 <_DrawBitmap+0x50c>
 800a60a:	f8cd b000 	str.w	fp, [sp]
 800a60e:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800a612:	9903      	ldr	r1, [sp, #12]
 800a614:	4620      	mov	r0, r4
 800a616:	465a      	mov	r2, fp
 800a618:	47b0      	blx	r6
 800a61a:	f8d4 2138 	ldr.w	r2, [r4, #312]	; 0x138
 800a61e:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800a620:	4629      	mov	r1, r5
 800a622:	e06c      	b.n	800a6fe <_DrawBitmap+0x50a>
 800a624:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800a626:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800a628:	68ac      	ldr	r4, [r5, #8]
 800a62a:	2900      	cmp	r1, #0
 800a62c:	d068      	beq.n	800a700 <_DrawBitmap+0x50c>
 800a62e:	4b39      	ldr	r3, [pc, #228]	; (800a714 <_DrawBitmap+0x520>)
 800a630:	681f      	ldr	r7, [r3, #0]
 800a632:	7c38      	ldrb	r0, [r7, #16]
 800a634:	f010 0203 	ands.w	r2, r0, #3
 800a638:	d009      	beq.n	800a64e <_DrawBitmap+0x45a>
 800a63a:	2a02      	cmp	r2, #2
 800a63c:	d160      	bne.n	800a700 <_DrawBitmap+0x50c>
 800a63e:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800a642:	f8d4 c06c 	ldr.w	ip, [r4, #108]	; 0x6c
 800a646:	2600      	movs	r6, #0
 800a648:	464f      	mov	r7, r9
 800a64a:	4633      	mov	r3, r6
 800a64c:	e020      	b.n	800a690 <_DrawBitmap+0x49c>
 800a64e:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800a650:	9919      	ldr	r1, [sp, #100]	; 0x64
 800a652:	eb01 000a 	add.w	r0, r1, sl
 800a656:	1b42      	subs	r2, r0, r5
 800a658:	2a00      	cmp	r2, #0
 800a65a:	dd51      	ble.n	800a700 <_DrawBitmap+0x50c>
 800a65c:	f815 1b01 	ldrb.w	r1, [r5], #1
 800a660:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800a662:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800a666:	f837 0021 	ldrh.w	r0, [r7, r1, lsl #2]
 800a66a:	4798      	blx	r3
 800a66c:	e7f0      	b.n	800a650 <_DrawBitmap+0x45c>
 800a66e:	b913      	cbnz	r3, 800a676 <_DrawBitmap+0x482>
 800a670:	f8d4 c06c 	ldr.w	ip, [r4, #108]	; 0x6c
 800a674:	46b9      	mov	r9, r7
 800a676:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800a678:	f851 0028 	ldr.w	r0, [r1, r8, lsl #2]
 800a67c:	f82c 0b02 	strh.w	r0, [ip], #2
 800a680:	3601      	adds	r6, #1
 800a682:	2301      	movs	r3, #1
 800a684:	9d08      	ldr	r5, [sp, #32]
 800a686:	3701      	adds	r7, #1
 800a688:	eb0a 0205 	add.w	r2, sl, r5
 800a68c:	42ba      	cmp	r2, r7
 800a68e:	d020      	beq.n	800a6d2 <_DrawBitmap+0x4de>
 800a690:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800a692:	9908      	ldr	r1, [sp, #32]
 800a694:	1a68      	subs	r0, r5, r1
 800a696:	f810 8007 	ldrb.w	r8, [r0, r7]
 800a69a:	f1b8 0f00 	cmp.w	r8, #0
 800a69e:	d1e6      	bne.n	800a66e <_DrawBitmap+0x47a>
 800a6a0:	2b01      	cmp	r3, #1
 800a6a2:	d114      	bne.n	800a6ce <_DrawBitmap+0x4da>
 800a6a4:	f8cd b000 	str.w	fp, [sp]
 800a6a8:	1e7b      	subs	r3, r7, #1
 800a6aa:	f8cd c010 	str.w	ip, [sp, #16]
 800a6ae:	4620      	mov	r0, r4
 800a6b0:	4649      	mov	r1, r9
 800a6b2:	465a      	mov	r2, fp
 800a6b4:	f8d4 50a8 	ldr.w	r5, [r4, #168]	; 0xa8
 800a6b8:	47a8      	blx	r5
 800a6ba:	4631      	mov	r1, r6
 800a6bc:	f8d4 2138 	ldr.w	r2, [r4, #312]	; 0x138
 800a6c0:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800a6c2:	4790      	blx	r2
 800a6c4:	4646      	mov	r6, r8
 800a6c6:	4643      	mov	r3, r8
 800a6c8:	f8dd c010 	ldr.w	ip, [sp, #16]
 800a6cc:	e7da      	b.n	800a684 <_DrawBitmap+0x490>
 800a6ce:	4643      	mov	r3, r8
 800a6d0:	e7d8      	b.n	800a684 <_DrawBitmap+0x490>
 800a6d2:	f10a 33ff 	add.w	r3, sl, #4294967295
 800a6d6:	18eb      	adds	r3, r5, r3
 800a6d8:	b196      	cbz	r6, 800a700 <_DrawBitmap+0x50c>
 800a6da:	f8cd b000 	str.w	fp, [sp]
 800a6de:	4620      	mov	r0, r4
 800a6e0:	4649      	mov	r1, r9
 800a6e2:	465a      	mov	r2, fp
 800a6e4:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800a6e8:	47b8      	blx	r7
 800a6ea:	f8d4 2138 	ldr.w	r2, [r4, #312]	; 0x138
 800a6ee:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800a6f0:	4631      	mov	r1, r6
 800a6f2:	e004      	b.n	800a6fe <_DrawBitmap+0x50a>
 800a6f4:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800a6f6:	f8d0 2138 	ldr.w	r2, [r0, #312]	; 0x138
 800a6fa:	9819      	ldr	r0, [sp, #100]	; 0x64
 800a6fc:	4651      	mov	r1, sl
 800a6fe:	4790      	blx	r2
 800a700:	9c19      	ldr	r4, [sp, #100]	; 0x64
 800a702:	9d18      	ldr	r5, [sp, #96]	; 0x60
 800a704:	1967      	adds	r7, r4, r5
 800a706:	9719      	str	r7, [sp, #100]	; 0x64
 800a708:	f10b 0b01 	add.w	fp, fp, #1
 800a70c:	e59d      	b.n	800a24a <_DrawBitmap+0x56>
 800a70e:	b00d      	add	sp, #52	; 0x34
 800a710:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a714:	20000278 	.word	0x20000278

0800a718 <_FillRect>:
 800a718:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a71c:	4f38      	ldr	r7, [pc, #224]	; (800a800 <_FillRect+0xe8>)
 800a71e:	6884      	ldr	r4, [r0, #8]
 800a720:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800a724:	4682      	mov	sl, r0
 800a726:	6838      	ldr	r0, [r7, #0]
 800a728:	7c00      	ldrb	r0, [r0, #16]
 800a72a:	07c0      	lsls	r0, r0, #31
 800a72c:	460e      	mov	r6, r1
 800a72e:	4615      	mov	r5, r2
 800a730:	4698      	mov	r8, r3
 800a732:	d53d      	bpl.n	800a7b0 <_FillRect+0x98>
 800a734:	454d      	cmp	r5, r9
 800a736:	dc61      	bgt.n	800a7fc <_FillRect+0xe4>
 800a738:	f8d4 c0c4 	ldr.w	ip, [r4, #196]	; 0xc4
 800a73c:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800a73e:	f1bc 0f00 	cmp.w	ip, #0
 800a742:	d101      	bne.n	800a748 <_FillRect+0x30>
 800a744:	46b3      	mov	fp, r6
 800a746:	e007      	b.n	800a758 <_FillRect+0x40>
 800a748:	e88d 00a0 	stmia.w	sp, {r5, r7}
 800a74c:	4650      	mov	r0, sl
 800a74e:	4631      	mov	r1, r6
 800a750:	462a      	mov	r2, r5
 800a752:	4643      	mov	r3, r8
 800a754:	47e0      	blx	ip
 800a756:	e00d      	b.n	800a774 <_FillRect+0x5c>
 800a758:	45c3      	cmp	fp, r8
 800a75a:	dc0a      	bgt.n	800a772 <_FillRect+0x5a>
 800a75c:	4659      	mov	r1, fp
 800a75e:	f8d4 30ec 	ldr.w	r3, [r4, #236]	; 0xec
 800a762:	4650      	mov	r0, sl
 800a764:	462a      	mov	r2, r5
 800a766:	4798      	blx	r3
 800a768:	f10b 0b01 	add.w	fp, fp, #1
 800a76c:	f827 0b02 	strh.w	r0, [r7], #2
 800a770:	e7f2      	b.n	800a758 <_FillRect+0x40>
 800a772:	6ee7      	ldr	r7, [r4, #108]	; 0x6c
 800a774:	ebc6 0108 	rsb	r1, r6, r8
 800a778:	f101 0b01 	add.w	fp, r1, #1
 800a77c:	3f02      	subs	r7, #2
 800a77e:	465b      	mov	r3, fp
 800a780:	b13b      	cbz	r3, 800a792 <_FillRect+0x7a>
 800a782:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800a784:	8879      	ldrh	r1, [r7, #2]
 800a786:	ea81 0200 	eor.w	r2, r1, r0
 800a78a:	f827 2f02 	strh.w	r2, [r7, #2]!
 800a78e:	3b01      	subs	r3, #1
 800a790:	e7f6      	b.n	800a780 <_FillRect+0x68>
 800a792:	9500      	str	r5, [sp, #0]
 800a794:	462a      	mov	r2, r5
 800a796:	4620      	mov	r0, r4
 800a798:	4631      	mov	r1, r6
 800a79a:	4643      	mov	r3, r8
 800a79c:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800a7a0:	47b8      	blx	r7
 800a7a2:	f8d4 2138 	ldr.w	r2, [r4, #312]	; 0x138
 800a7a6:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800a7a8:	4659      	mov	r1, fp
 800a7aa:	4790      	blx	r2
 800a7ac:	3501      	adds	r5, #1
 800a7ae:	e7c1      	b.n	800a734 <_FillRect+0x1c>
 800a7b0:	1a5e      	subs	r6, r3, r1
 800a7b2:	ebc2 0509 	rsb	r5, r2, r9
 800a7b6:	1c70      	adds	r0, r6, #1
 800a7b8:	f8cd 9000 	str.w	r9, [sp]
 800a7bc:	3501      	adds	r5, #1
 800a7be:	4345      	muls	r5, r0
 800a7c0:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800a7c4:	4620      	mov	r0, r4
 800a7c6:	47b0      	blx	r6
 800a7c8:	683b      	ldr	r3, [r7, #0]
 800a7ca:	6ea7      	ldr	r7, [r4, #104]	; 0x68
 800a7cc:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 800a7ce:	f8d1 8000 	ldr.w	r8, [r1]
 800a7d2:	2001      	movs	r0, #1
 800a7d4:	b195      	cbz	r5, 800a7fc <_FillRect+0xe4>
 800a7d6:	2dfa      	cmp	r5, #250	; 0xfa
 800a7d8:	bf34      	ite	cc
 800a7da:	462e      	movcc	r6, r5
 800a7dc:	26fa      	movcs	r6, #250	; 0xfa
 800a7de:	b128      	cbz	r0, 800a7ec <_FillRect+0xd4>
 800a7e0:	4638      	mov	r0, r7
 800a7e2:	fa1f f188 	uxth.w	r1, r8
 800a7e6:	4632      	mov	r2, r6
 800a7e8:	f001 f829 	bl	800b83e <GUI__memset16>
 800a7ec:	4638      	mov	r0, r7
 800a7ee:	f8d4 2138 	ldr.w	r2, [r4, #312]	; 0x138
 800a7f2:	4631      	mov	r1, r6
 800a7f4:	4790      	blx	r2
 800a7f6:	1bad      	subs	r5, r5, r6
 800a7f8:	2000      	movs	r0, #0
 800a7fa:	e7eb      	b.n	800a7d4 <_FillRect+0xbc>
 800a7fc:	e8bd 8ffe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a800:	20000278 	.word	0x20000278

0800a804 <GUIDRV_FlexColor_SetMode16bppC0B16>:
 800a804:	b510      	push	{r4, lr}
 800a806:	4604      	mov	r4, r0
 800a808:	f000 fa5a 	bl	800acc0 <GUIDRV_FlexColor__InitOnce>
 800a80c:	68a4      	ldr	r4, [r4, #8]
 800a80e:	4b10      	ldr	r3, [pc, #64]	; (800a850 <GUIDRV_FlexColor_SetMode16bppC0B16+0x4c>)
 800a810:	4810      	ldr	r0, [pc, #64]	; (800a854 <GUIDRV_FlexColor_SetMode16bppC0B16+0x50>)
 800a812:	4911      	ldr	r1, [pc, #68]	; (800a858 <GUIDRV_FlexColor_SetMode16bppC0B16+0x54>)
 800a814:	f8c4 30e4 	str.w	r3, [r4, #228]	; 0xe4
 800a818:	f8c4 00e8 	str.w	r0, [r4, #232]	; 0xe8
 800a81c:	4b0f      	ldr	r3, [pc, #60]	; (800a85c <GUIDRV_FlexColor_SetMode16bppC0B16+0x58>)
 800a81e:	f8c4 10ec 	str.w	r1, [r4, #236]	; 0xec
 800a822:	4a0f      	ldr	r2, [pc, #60]	; (800a860 <GUIDRV_FlexColor_SetMode16bppC0B16+0x5c>)
 800a824:	f8d4 10c4 	ldr.w	r1, [r4, #196]	; 0xc4
 800a828:	480e      	ldr	r0, [pc, #56]	; (800a864 <GUIDRV_FlexColor_SetMode16bppC0B16+0x60>)
 800a82a:	f8c4 20f0 	str.w	r2, [r4, #240]	; 0xf0
 800a82e:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
 800a832:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
 800a836:	f8c4 10fc 	str.w	r1, [r4, #252]	; 0xfc
 800a83a:	4620      	mov	r0, r4
 800a83c:	f8d4 2094 	ldr.w	r2, [r4, #148]	; 0x94
 800a840:	2110      	movs	r1, #16
 800a842:	4790      	blx	r2
 800a844:	4808      	ldr	r0, [pc, #32]	; (800a868 <GUIDRV_FlexColor_SetMode16bppC0B16+0x64>)
 800a846:	2310      	movs	r3, #16
 800a848:	63a3      	str	r3, [r4, #56]	; 0x38
 800a84a:	6460      	str	r0, [r4, #68]	; 0x44
 800a84c:	bd10      	pop	{r4, pc}
 800a84e:	bf00      	nop
 800a850:	0800a1f5 	.word	0x0800a1f5
 800a854:	0800a719 	.word	0x0800a719
 800a858:	0800ac0b 	.word	0x0800ac0b
 800a85c:	0800a1dd 	.word	0x0800a1dd
 800a860:	0800ab77 	.word	0x0800ab77
 800a864:	0800a1e7 	.word	0x0800a1e7
 800a868:	0802c5bc 	.word	0x0802c5bc

0800a86c <_Log2PhysX_X0Y0S0>:
 800a86c:	4608      	mov	r0, r1
 800a86e:	4770      	bx	lr

0800a870 <_Log2PhysX_X1Y0S0>:
 800a870:	6800      	ldr	r0, [r0, #0]
 800a872:	1a41      	subs	r1, r0, r1
 800a874:	1e48      	subs	r0, r1, #1
 800a876:	4770      	bx	lr

0800a878 <_Log2PhysX_X0Y1S0>:
 800a878:	4608      	mov	r0, r1
 800a87a:	4770      	bx	lr

0800a87c <_Log2PhysX_X1Y1S0>:
 800a87c:	6800      	ldr	r0, [r0, #0]
 800a87e:	1a41      	subs	r1, r0, r1
 800a880:	1e48      	subs	r0, r1, #1
 800a882:	4770      	bx	lr

0800a884 <_Log2PhysX_X0Y0S1>:
 800a884:	4610      	mov	r0, r2
 800a886:	4770      	bx	lr

0800a888 <_Log2PhysX_X1Y0S1>:
 800a888:	6840      	ldr	r0, [r0, #4]
 800a88a:	1a81      	subs	r1, r0, r2
 800a88c:	1e48      	subs	r0, r1, #1
 800a88e:	4770      	bx	lr

0800a890 <_Log2PhysX_X0Y1S1>:
 800a890:	4610      	mov	r0, r2
 800a892:	4770      	bx	lr

0800a894 <_Log2PhysX_X1Y1S1>:
 800a894:	6840      	ldr	r0, [r0, #4]
 800a896:	1a81      	subs	r1, r0, r2
 800a898:	1e48      	subs	r0, r1, #1
 800a89a:	4770      	bx	lr

0800a89c <_Log2PhysY_X0Y0S0>:
 800a89c:	4610      	mov	r0, r2
 800a89e:	4770      	bx	lr

0800a8a0 <_Log2PhysY_X1Y0S0>:
 800a8a0:	4610      	mov	r0, r2
 800a8a2:	4770      	bx	lr

0800a8a4 <_Log2PhysY_X0Y1S0>:
 800a8a4:	6840      	ldr	r0, [r0, #4]
 800a8a6:	1a81      	subs	r1, r0, r2
 800a8a8:	1e48      	subs	r0, r1, #1
 800a8aa:	4770      	bx	lr

0800a8ac <_Log2PhysY_X1Y1S0>:
 800a8ac:	6840      	ldr	r0, [r0, #4]
 800a8ae:	1a81      	subs	r1, r0, r2
 800a8b0:	1e48      	subs	r0, r1, #1
 800a8b2:	4770      	bx	lr

0800a8b4 <_Log2PhysY_X0Y0S1>:
 800a8b4:	4608      	mov	r0, r1
 800a8b6:	4770      	bx	lr

0800a8b8 <_Log2PhysY_X1Y0S1>:
 800a8b8:	4608      	mov	r0, r1
 800a8ba:	4770      	bx	lr

0800a8bc <_Log2PhysY_X0Y1S1>:
 800a8bc:	6800      	ldr	r0, [r0, #0]
 800a8be:	1a41      	subs	r1, r0, r1
 800a8c0:	1e48      	subs	r0, r1, #1
 800a8c2:	4770      	bx	lr

0800a8c4 <_Log2PhysY_X1Y1S1>:
 800a8c4:	6800      	ldr	r0, [r0, #0]
 800a8c6:	1a41      	subs	r1, r0, r1
 800a8c8:	1e48      	subs	r0, r1, #1
 800a8ca:	4770      	bx	lr

0800a8cc <_SetPixelIndex>:
 800a8cc:	b510      	push	{r4, lr}
 800a8ce:	6884      	ldr	r4, [r0, #8]
 800a8d0:	f8d4 40f0 	ldr.w	r4, [r4, #240]	; 0xf0
 800a8d4:	47a0      	blx	r4
 800a8d6:	bd10      	pop	{r4, pc}

0800a8d8 <_GetPixelIndex>:
 800a8d8:	b508      	push	{r3, lr}
 800a8da:	6883      	ldr	r3, [r0, #8]
 800a8dc:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 800a8e0:	4798      	blx	r3
 800a8e2:	bd08      	pop	{r3, pc}

0800a8e4 <_XorPixel>:
 800a8e4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a8e6:	4604      	mov	r4, r0
 800a8e8:	460f      	mov	r7, r1
 800a8ea:	4616      	mov	r6, r2
 800a8ec:	6885      	ldr	r5, [r0, #8]
 800a8ee:	f7ff fff3 	bl	800a8d8 <_GetPixelIndex>
 800a8f2:	9001      	str	r0, [sp, #4]
 800a8f4:	f8dd e004 	ldr.w	lr, [sp, #4]
 800a8f8:	6aab      	ldr	r3, [r5, #40]	; 0x28
 800a8fa:	4620      	mov	r0, r4
 800a8fc:	4639      	mov	r1, r7
 800a8fe:	4632      	mov	r2, r6
 800a900:	ea8e 0303 	eor.w	r3, lr, r3
 800a904:	f7ff ffe2 	bl	800a8cc <_SetPixelIndex>
 800a908:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

0800a90a <_DrawHLine>:
 800a90a:	b513      	push	{r0, r1, r4, lr}
 800a90c:	6884      	ldr	r4, [r0, #8]
 800a90e:	9200      	str	r2, [sp, #0]
 800a910:	f8d4 40e8 	ldr.w	r4, [r4, #232]	; 0xe8
 800a914:	47a0      	blx	r4
 800a916:	bd1c      	pop	{r2, r3, r4, pc}

0800a918 <_DrawVLine>:
 800a918:	b513      	push	{r0, r1, r4, lr}
 800a91a:	6884      	ldr	r4, [r0, #8]
 800a91c:	9300      	str	r3, [sp, #0]
 800a91e:	f8d4 40e8 	ldr.w	r4, [r4, #232]	; 0xe8
 800a922:	460b      	mov	r3, r1
 800a924:	47a0      	blx	r4
 800a926:	bd1c      	pop	{r2, r3, r4, pc}

0800a928 <_FillRect>:
 800a928:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a92a:	9c06      	ldr	r4, [sp, #24]
 800a92c:	6885      	ldr	r5, [r0, #8]
 800a92e:	9400      	str	r4, [sp, #0]
 800a930:	f8d5 40e8 	ldr.w	r4, [r5, #232]	; 0xe8
 800a934:	47a0      	blx	r4
 800a936:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800a938 <_DrawBitmap>:
 800a938:	b530      	push	{r4, r5, lr}
 800a93a:	b087      	sub	sp, #28
 800a93c:	6885      	ldr	r5, [r0, #8]
 800a93e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800a940:	9400      	str	r4, [sp, #0]
 800a942:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800a944:	9401      	str	r4, [sp, #4]
 800a946:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800a948:	9402      	str	r4, [sp, #8]
 800a94a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800a94c:	9403      	str	r4, [sp, #12]
 800a94e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800a950:	9404      	str	r4, [sp, #16]
 800a952:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 800a954:	9405      	str	r4, [sp, #20]
 800a956:	f8d5 40e4 	ldr.w	r4, [r5, #228]	; 0xe4
 800a95a:	47a0      	blx	r4
 800a95c:	b007      	add	sp, #28
 800a95e:	bd30      	pop	{r4, r5, pc}

0800a960 <_GetDevFunc_SetRect>:
 800a960:	4770      	bx	lr
	...

0800a964 <_GetDevFunc_SetRectOutside>:
 800a964:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a966:	9e07      	ldr	r6, [sp, #28]
 800a968:	6884      	ldr	r4, [r0, #8]
 800a96a:	4d0b      	ldr	r5, [pc, #44]	; (800a998 <_GetDevFunc_SetRectOutside+0x34>)
 800a96c:	b176      	cbz	r6, 800a98c <_GetDevFunc_SetRectOutside+0x28>
 800a96e:	6828      	ldr	r0, [r5, #0]
 800a970:	b988      	cbnz	r0, 800a996 <_GetDevFunc_SetRectOutside+0x32>
 800a972:	9e06      	ldr	r6, [sp, #24]
 800a974:	9600      	str	r6, [sp, #0]
 800a976:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800a97a:	4620      	mov	r0, r4
 800a97c:	47b0      	blx	r6
 800a97e:	f8d4 10a8 	ldr.w	r1, [r4, #168]	; 0xa8
 800a982:	4a06      	ldr	r2, [pc, #24]	; (800a99c <_GetDevFunc_SetRectOutside+0x38>)
 800a984:	6029      	str	r1, [r5, #0]
 800a986:	f8c4 20a8 	str.w	r2, [r4, #168]	; 0xa8
 800a98a:	e004      	b.n	800a996 <_GetDevFunc_SetRectOutside+0x32>
 800a98c:	682b      	ldr	r3, [r5, #0]
 800a98e:	b113      	cbz	r3, 800a996 <_GetDevFunc_SetRectOutside+0x32>
 800a990:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800a994:	602e      	str	r6, [r5, #0]
 800a996:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
 800a998:	2000e060 	.word	0x2000e060
 800a99c:	0800a961 	.word	0x0800a961

0800a9a0 <_ReadPixelCust_16bpp>:
 800a9a0:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800a9a2:	b508      	push	{r3, lr}
 800a9a4:	f8d0 30d4 	ldr.w	r3, [r0, #212]	; 0xd4
 800a9a8:	6990      	ldr	r0, [r2, #24]
 800a9aa:	4798      	blx	r3
 800a9ac:	bd08      	pop	{r3, pc}

0800a9ae <_ReadPixelCust_18bpp>:
 800a9ae:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800a9b0:	b508      	push	{r3, lr}
 800a9b2:	f8d0 30d8 	ldr.w	r3, [r0, #216]	; 0xd8
 800a9b6:	6990      	ldr	r0, [r2, #24]
 800a9b8:	4798      	blx	r3
 800a9ba:	bd08      	pop	{r3, pc}

0800a9bc <_ReadRectCust_16bpp>:
 800a9bc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a9c0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800a9c2:	6884      	ldr	r4, [r0, #8]
 800a9c4:	9500      	str	r5, [sp, #0]
 800a9c6:	4688      	mov	r8, r1
 800a9c8:	4617      	mov	r7, r2
 800a9ca:	4699      	mov	r9, r3
 800a9cc:	4620      	mov	r0, r4
 800a9ce:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800a9d2:	47b0      	blx	r6
 800a9d4:	1bed      	subs	r5, r5, r7
 800a9d6:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800a9d8:	f8d4 30dc 	ldr.w	r3, [r4, #220]	; 0xdc
 800a9dc:	ebc8 0009 	rsb	r0, r8, r9
 800a9e0:	f100 0801 	add.w	r8, r0, #1
 800a9e4:	1c6a      	adds	r2, r5, #1
 800a9e6:	6988      	ldr	r0, [r1, #24]
 800a9e8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800a9ea:	fb02 f208 	mul.w	r2, r2, r8
 800a9ee:	4798      	blx	r3
 800a9f0:	e8bd 83fe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}

0800a9f4 <_ReadRectCust_18bpp>:
 800a9f4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a9f8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800a9fa:	6884      	ldr	r4, [r0, #8]
 800a9fc:	9500      	str	r5, [sp, #0]
 800a9fe:	4688      	mov	r8, r1
 800aa00:	4617      	mov	r7, r2
 800aa02:	4699      	mov	r9, r3
 800aa04:	4620      	mov	r0, r4
 800aa06:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
 800aa0a:	47b0      	blx	r6
 800aa0c:	1bed      	subs	r5, r5, r7
 800aa0e:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800aa10:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
 800aa14:	ebc8 0009 	rsb	r0, r8, r9
 800aa18:	f100 0801 	add.w	r8, r0, #1
 800aa1c:	1c6a      	adds	r2, r5, #1
 800aa1e:	6988      	ldr	r0, [r1, #24]
 800aa20:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800aa22:	fb02 f208 	mul.w	r2, r2, r8
 800aa26:	4798      	blx	r3
 800aa28:	e8bd 83fe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}

0800aa2c <_GetDevFunc>:
 800aa2c:	3901      	subs	r1, #1
 800aa2e:	2917      	cmp	r1, #23
 800aa30:	d824      	bhi.n	800aa7c <_GetDevFunc+0x50>
 800aa32:	e8df f001 	tbb	[pc, r1]
 800aa36:	2310      	.short	0x2310
 800aa38:	23232323 	.word	0x23232323
 800aa3c:	0c232323 	.word	0x0c232323
 800aa40:	23150e25 	.word	0x23150e25
 800aa44:	23232323 	.word	0x23232323
 800aa48:	1f232323 	.word	0x1f232323
 800aa4c:	211a      	.short	0x211a
 800aa4e:	480d      	ldr	r0, [pc, #52]	; (800aa84 <_GetDevFunc+0x58>)
 800aa50:	4770      	bx	lr
 800aa52:	480d      	ldr	r0, [pc, #52]	; (800aa88 <_GetDevFunc+0x5c>)
 800aa54:	4770      	bx	lr
 800aa56:	6803      	ldr	r3, [r0, #0]
 800aa58:	6898      	ldr	r0, [r3, #8]
 800aa5a:	f8d0 00fc 	ldr.w	r0, [r0, #252]	; 0xfc
 800aa5e:	4770      	bx	lr
 800aa60:	6802      	ldr	r2, [r0, #0]
 800aa62:	6891      	ldr	r1, [r2, #8]
 800aa64:	f8d1 00f4 	ldr.w	r0, [r1, #244]	; 0xf4
 800aa68:	4770      	bx	lr
 800aa6a:	6803      	ldr	r3, [r0, #0]
 800aa6c:	6898      	ldr	r0, [r3, #8]
 800aa6e:	f8d0 00f8 	ldr.w	r0, [r0, #248]	; 0xf8
 800aa72:	4770      	bx	lr
 800aa74:	4805      	ldr	r0, [pc, #20]	; (800aa8c <_GetDevFunc+0x60>)
 800aa76:	4770      	bx	lr
 800aa78:	4805      	ldr	r0, [pc, #20]	; (800aa90 <_GetDevFunc+0x64>)
 800aa7a:	4770      	bx	lr
 800aa7c:	2000      	movs	r0, #0
 800aa7e:	4770      	bx	lr
 800aa80:	4804      	ldr	r0, [pc, #16]	; (800aa94 <_GetDevFunc+0x68>)
 800aa82:	4770      	bx	lr
 800aa84:	0800adef 	.word	0x0800adef
 800aa88:	0800ad91 	.word	0x0800ad91
 800aa8c:	0800acf5 	.word	0x0800acf5
 800aa90:	0800a965 	.word	0x0800a965
 800aa94:	0800addb 	.word	0x0800addb

0800aa98 <_GetDevProp>:
 800aa98:	3901      	subs	r1, #1
 800aa9a:	6880      	ldr	r0, [r0, #8]
 800aa9c:	290d      	cmp	r1, #13
 800aa9e:	d826      	bhi.n	800aaee <_GetDevProp+0x56>
 800aaa0:	e8df f001 	tbb	[pc, r1]
 800aaa4:	0f0d0b09 	.word	0x0f0d0b09
 800aaa8:	11252525 	.word	0x11252525
 800aaac:	13282807 	.word	0x13282807
 800aab0:	1f19      	.short	0x1f19
 800aab2:	2000      	movs	r0, #0
 800aab4:	4770      	bx	lr
 800aab6:	6800      	ldr	r0, [r0, #0]
 800aab8:	4770      	bx	lr
 800aaba:	6840      	ldr	r0, [r0, #4]
 800aabc:	4770      	bx	lr
 800aabe:	6880      	ldr	r0, [r0, #8]
 800aac0:	4770      	bx	lr
 800aac2:	68c0      	ldr	r0, [r0, #12]
 800aac4:	4770      	bx	lr
 800aac6:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800aac8:	4770      	bx	lr
 800aaca:	b1a0      	cbz	r0, 800aaf6 <_GetDevProp+0x5e>
 800aacc:	6b42      	ldr	r2, [r0, #52]	; 0x34
 800aace:	f012 0001 	ands.w	r0, r2, #1
 800aad2:	d010      	beq.n	800aaf6 <_GetDevProp+0x5e>
 800aad4:	e00e      	b.n	800aaf4 <_GetDevProp+0x5c>
 800aad6:	b170      	cbz	r0, 800aaf6 <_GetDevProp+0x5e>
 800aad8:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800aada:	f010 0002 	ands.w	r0, r0, #2
 800aade:	d109      	bne.n	800aaf4 <_GetDevProp+0x5c>
 800aae0:	4770      	bx	lr
 800aae2:	b140      	cbz	r0, 800aaf6 <_GetDevProp+0x5e>
 800aae4:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800aae6:	f013 0004 	ands.w	r0, r3, #4
 800aaea:	d103      	bne.n	800aaf4 <_GetDevProp+0x5c>
 800aaec:	4770      	bx	lr
 800aaee:	f04f 30ff 	mov.w	r0, #4294967295
 800aaf2:	4770      	bx	lr
 800aaf4:	2001      	movs	r0, #1
 800aaf6:	4770      	bx	lr

0800aaf8 <_GetDevData>:
 800aaf8:	6883      	ldr	r3, [r0, #8]
 800aafa:	2901      	cmp	r1, #1
 800aafc:	bf0c      	ite	eq
 800aafe:	6c58      	ldreq	r0, [r3, #68]	; 0x44
 800ab00:	2000      	movne	r0, #0
 800ab02:	4770      	bx	lr

0800ab04 <_GetRect>:
 800ab04:	6883      	ldr	r3, [r0, #8]
 800ab06:	6818      	ldr	r0, [r3, #0]
 800ab08:	685b      	ldr	r3, [r3, #4]
 800ab0a:	2200      	movs	r2, #0
 800ab0c:	800a      	strh	r2, [r1, #0]
 800ab0e:	804a      	strh	r2, [r1, #2]
 800ab10:	1e42      	subs	r2, r0, #1
 800ab12:	1e58      	subs	r0, r3, #1
 800ab14:	808a      	strh	r2, [r1, #4]
 800ab16:	80c8      	strh	r0, [r1, #6]
 800ab18:	4770      	bx	lr
	...

0800ab1c <GUIDRV_FlexColor__SetLog2Phys>:
 800ab1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ab1e:	4d10      	ldr	r5, [pc, #64]	; (800ab60 <GUIDRV_FlexColor__SetLog2Phys+0x44>)
 800ab20:	462e      	mov	r6, r5
 800ab22:	4607      	mov	r7, r0
 800ab24:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800ab26:	b091      	sub	sp, #68	; 0x44
 800ab28:	466c      	mov	r4, sp
 800ab2a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ab2c:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 800ab30:	3520      	adds	r5, #32
 800ab32:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800ab36:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800ab38:	ac08      	add	r4, sp, #32
 800ab3a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ab3c:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800ab40:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800ab44:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800ab46:	aa10      	add	r2, sp, #64	; 0x40
 800ab48:	eb02 0083 	add.w	r0, r2, r3, lsl #2
 800ab4c:	f850 1c40 	ldr.w	r1, [r0, #-64]
 800ab50:	f8c7 1100 	str.w	r1, [r7, #256]	; 0x100
 800ab54:	f850 3c20 	ldr.w	r3, [r0, #-32]
 800ab58:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
 800ab5c:	b011      	add	sp, #68	; 0x44
 800ab5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ab60:	080187c0 	.word	0x080187c0

0800ab64 <_SetOrg>:
 800ab64:	b507      	push	{r0, r1, r2, lr}
 800ab66:	6980      	ldr	r0, [r0, #24]
 800ab68:	e88d 0006 	stmia.w	sp, {r1, r2}
 800ab6c:	2103      	movs	r1, #3
 800ab6e:	466a      	mov	r2, sp
 800ab70:	f7f7 fc14 	bl	800239c <LCD_X_DisplayDriver>
 800ab74:	bd0e      	pop	{r1, r2, r3, pc}

0800ab76 <GUIDRV_FlexColor__SetPixelIndexNoCache>:
 800ab76:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800ab7a:	6884      	ldr	r4, [r0, #8]
 800ab7c:	4698      	mov	r8, r3
 800ab7e:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800ab80:	f003 0002 	and.w	r0, r3, #2
 800ab84:	b285      	uxth	r5, r0
 800ab86:	4689      	mov	r9, r1
 800ab88:	4617      	mov	r7, r2
 800ab8a:	2d00      	cmp	r5, #0
 800ab8c:	d032      	beq.n	800abf4 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x7e>
 800ab8e:	f8d4 6100 	ldr.w	r6, [r4, #256]	; 0x100
 800ab92:	4620      	mov	r0, r4
 800ab94:	47b0      	blx	r6
 800ab96:	463a      	mov	r2, r7
 800ab98:	4606      	mov	r6, r0
 800ab9a:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 800ab9e:	4649      	mov	r1, r9
 800aba0:	4620      	mov	r0, r4
 800aba2:	4798      	blx	r3
 800aba4:	6921      	ldr	r1, [r4, #16]
 800aba6:	69a2      	ldr	r2, [r4, #24]
 800aba8:	428e      	cmp	r6, r1
 800abaa:	4605      	mov	r5, r0
 800abac:	bfac      	ite	ge
 800abae:	2100      	movge	r1, #0
 800abb0:	2101      	movlt	r1, #1
 800abb2:	6960      	ldr	r0, [r4, #20]
 800abb4:	4296      	cmp	r6, r2
 800abb6:	bfd4      	ite	le
 800abb8:	460f      	movle	r7, r1
 800abba:	f041 0701 	orrgt.w	r7, r1, #1
 800abbe:	4285      	cmp	r5, r0
 800abc0:	bfac      	ite	ge
 800abc2:	463b      	movge	r3, r7
 800abc4:	f047 0301 	orrlt.w	r3, r7, #1
 800abc8:	b913      	cbnz	r3, 800abd0 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x5a>
 800abca:	69e2      	ldr	r2, [r4, #28]
 800abcc:	4295      	cmp	r5, r2
 800abce:	dd0a      	ble.n	800abe6 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x70>
 800abd0:	6861      	ldr	r1, [r4, #4]
 800abd2:	6823      	ldr	r3, [r4, #0]
 800abd4:	1e4f      	subs	r7, r1, #1
 800abd6:	9700      	str	r7, [sp, #0]
 800abd8:	2100      	movs	r1, #0
 800abda:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800abde:	4620      	mov	r0, r4
 800abe0:	460a      	mov	r2, r1
 800abe2:	3b01      	subs	r3, #1
 800abe4:	47b8      	blx	r7
 800abe6:	f8d4 70ac 	ldr.w	r7, [r4, #172]	; 0xac
 800abea:	4620      	mov	r0, r4
 800abec:	4631      	mov	r1, r6
 800abee:	462a      	mov	r2, r5
 800abf0:	47b8      	blx	r7
 800abf2:	e003      	b.n	800abfc <GUIDRV_FlexColor__SetPixelIndexNoCache+0x86>
 800abf4:	f8d4 50ac 	ldr.w	r5, [r4, #172]	; 0xac
 800abf8:	4620      	mov	r0, r4
 800abfa:	47a8      	blx	r5
 800abfc:	f8d4 20a4 	ldr.w	r2, [r4, #164]	; 0xa4
 800ac00:	4620      	mov	r0, r4
 800ac02:	4641      	mov	r1, r8
 800ac04:	4790      	blx	r2
 800ac06:	e8bd 83fe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}

0800ac0a <GUIDRV_FlexColor__GetPixelIndexNoCache>:
 800ac0a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ac0c:	6884      	ldr	r4, [r0, #8]
 800ac0e:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800ac10:	f003 0002 	and.w	r0, r3, #2
 800ac14:	b285      	uxth	r5, r0
 800ac16:	460f      	mov	r7, r1
 800ac18:	4616      	mov	r6, r2
 800ac1a:	2d00      	cmp	r5, #0
 800ac1c:	d045      	beq.n	800acaa <GUIDRV_FlexColor__GetPixelIndexNoCache+0xa0>
 800ac1e:	f8d4 5100 	ldr.w	r5, [r4, #256]	; 0x100
 800ac22:	4620      	mov	r0, r4
 800ac24:	47a8      	blx	r5
 800ac26:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
 800ac2a:	4632      	mov	r2, r6
 800ac2c:	4605      	mov	r5, r0
 800ac2e:	4639      	mov	r1, r7
 800ac30:	4620      	mov	r0, r4
 800ac32:	4798      	blx	r3
 800ac34:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 800ac38:	4606      	mov	r6, r0
 800ac3a:	b11b      	cbz	r3, 800ac44 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x3a>
 800ac3c:	4620      	mov	r0, r4
 800ac3e:	2101      	movs	r1, #1
 800ac40:	2200      	movs	r2, #0
 800ac42:	4798      	blx	r3
 800ac44:	6920      	ldr	r0, [r4, #16]
 800ac46:	69a2      	ldr	r2, [r4, #24]
 800ac48:	6963      	ldr	r3, [r4, #20]
 800ac4a:	4285      	cmp	r5, r0
 800ac4c:	bfac      	ite	ge
 800ac4e:	2000      	movge	r0, #0
 800ac50:	2001      	movlt	r0, #1
 800ac52:	4295      	cmp	r5, r2
 800ac54:	bfd4      	ite	le
 800ac56:	4601      	movle	r1, r0
 800ac58:	f040 0101 	orrgt.w	r1, r0, #1
 800ac5c:	429e      	cmp	r6, r3
 800ac5e:	bfac      	ite	ge
 800ac60:	460a      	movge	r2, r1
 800ac62:	f041 0201 	orrlt.w	r2, r1, #1
 800ac66:	b912      	cbnz	r2, 800ac6e <GUIDRV_FlexColor__GetPixelIndexNoCache+0x64>
 800ac68:	69e0      	ldr	r0, [r4, #28]
 800ac6a:	4286      	cmp	r6, r0
 800ac6c:	dd0a      	ble.n	800ac84 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x7a>
 800ac6e:	6867      	ldr	r7, [r4, #4]
 800ac70:	6823      	ldr	r3, [r4, #0]
 800ac72:	1e79      	subs	r1, r7, #1
 800ac74:	9100      	str	r1, [sp, #0]
 800ac76:	2100      	movs	r1, #0
 800ac78:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
 800ac7c:	4620      	mov	r0, r4
 800ac7e:	460a      	mov	r2, r1
 800ac80:	3b01      	subs	r3, #1
 800ac82:	47b8      	blx	r7
 800ac84:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 800ac88:	4629      	mov	r1, r5
 800ac8a:	4620      	mov	r0, r4
 800ac8c:	4632      	mov	r2, r6
 800ac8e:	4798      	blx	r3
 800ac90:	f8d4 50a0 	ldr.w	r5, [r4, #160]	; 0xa0
 800ac94:	4620      	mov	r0, r4
 800ac96:	47a8      	blx	r5
 800ac98:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 800ac9c:	4605      	mov	r5, r0
 800ac9e:	b16b      	cbz	r3, 800acbc <GUIDRV_FlexColor__GetPixelIndexNoCache+0xb2>
 800aca0:	4620      	mov	r0, r4
 800aca2:	2100      	movs	r1, #0
 800aca4:	2201      	movs	r2, #1
 800aca6:	4798      	blx	r3
 800aca8:	e008      	b.n	800acbc <GUIDRV_FlexColor__GetPixelIndexNoCache+0xb2>
 800acaa:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 800acae:	4620      	mov	r0, r4
 800acb0:	4798      	blx	r3
 800acb2:	f8d4 10a0 	ldr.w	r1, [r4, #160]	; 0xa0
 800acb6:	4620      	mov	r0, r4
 800acb8:	4788      	blx	r1
 800acba:	4605      	mov	r5, r0
 800acbc:	4628      	mov	r0, r5
 800acbe:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

0800acc0 <GUIDRV_FlexColor__InitOnce>:
 800acc0:	b538      	push	{r3, r4, r5, lr}
 800acc2:	6885      	ldr	r5, [r0, #8]
 800acc4:	4604      	mov	r4, r0
 800acc6:	b995      	cbnz	r5, 800acee <GUIDRV_FlexColor__InitOnce+0x2e>
 800acc8:	f44f 70ba 	mov.w	r0, #372	; 0x174
 800accc:	f003 f8bc 	bl	800de48 <GUI_ALLOC_GetFixedBlock>
 800acd0:	4629      	mov	r1, r5
 800acd2:	60a0      	str	r0, [r4, #8]
 800acd4:	f44f 72ba 	mov.w	r2, #372	; 0x174
 800acd8:	f000 fdde 	bl	800b898 <GUI__memset>
 800acdc:	68a3      	ldr	r3, [r4, #8]
 800acde:	4904      	ldr	r1, [pc, #16]	; (800acf0 <GUIDRV_FlexColor__InitOnce+0x30>)
 800ace0:	641c      	str	r4, [r3, #64]	; 0x40
 800ace2:	2202      	movs	r2, #2
 800ace4:	2001      	movs	r0, #1
 800ace6:	84da      	strh	r2, [r3, #38]	; 0x26
 800ace8:	6218      	str	r0, [r3, #32]
 800acea:	f8c3 1108 	str.w	r1, [r3, #264]	; 0x108
 800acee:	bd38      	pop	{r3, r4, r5, pc}
 800acf0:	0800ab1d 	.word	0x0800ab1d

0800acf4 <_SetDevFunc>:
 800acf4:	b570      	push	{r4, r5, r6, lr}
 800acf6:	4606      	mov	r6, r0
 800acf8:	460d      	mov	r5, r1
 800acfa:	4614      	mov	r4, r2
 800acfc:	f7ff ffe0 	bl	800acc0 <GUIDRV_FlexColor__InitOnce>
 800ad00:	68b3      	ldr	r3, [r6, #8]
 800ad02:	2b00      	cmp	r3, #0
 800ad04:	d03a      	beq.n	800ad7c <_SetDevFunc+0x88>
 800ad06:	2d26      	cmp	r5, #38	; 0x26
 800ad08:	d002      	beq.n	800ad10 <_SetDevFunc+0x1c>
 800ad0a:	2d27      	cmp	r5, #39	; 0x27
 800ad0c:	d136      	bne.n	800ad7c <_SetDevFunc+0x88>
 800ad0e:	e014      	b.n	800ad3a <_SetDevFunc+0x46>
 800ad10:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800ad12:	2a10      	cmp	r2, #16
 800ad14:	d009      	beq.n	800ad2a <_SetDevFunc+0x36>
 800ad16:	2a12      	cmp	r2, #18
 800ad18:	d130      	bne.n	800ad7c <_SetDevFunc+0x88>
 800ad1a:	4819      	ldr	r0, [pc, #100]	; (800ad80 <_SetDevFunc+0x8c>)
 800ad1c:	f8c3 40d8 	str.w	r4, [r3, #216]	; 0xd8
 800ad20:	f8c3 00bc 	str.w	r0, [r3, #188]	; 0xbc
 800ad24:	f8c3 00c0 	str.w	r0, [r3, #192]	; 0xc0
 800ad28:	bd70      	pop	{r4, r5, r6, pc}
 800ad2a:	4916      	ldr	r1, [pc, #88]	; (800ad84 <_SetDevFunc+0x90>)
 800ad2c:	f8c3 40d4 	str.w	r4, [r3, #212]	; 0xd4
 800ad30:	f8c3 10b8 	str.w	r1, [r3, #184]	; 0xb8
 800ad34:	f8c3 10b4 	str.w	r1, [r3, #180]	; 0xb4
 800ad38:	bd70      	pop	{r4, r5, r6, pc}
 800ad3a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800ad3c:	2a10      	cmp	r2, #16
 800ad3e:	d002      	beq.n	800ad46 <_SetDevFunc+0x52>
 800ad40:	2a12      	cmp	r2, #18
 800ad42:	d11b      	bne.n	800ad7c <_SetDevFunc+0x88>
 800ad44:	e00d      	b.n	800ad62 <_SetDevFunc+0x6e>
 800ad46:	b13c      	cbz	r4, 800ad58 <_SetDevFunc+0x64>
 800ad48:	490f      	ldr	r1, [pc, #60]	; (800ad88 <_SetDevFunc+0x94>)
 800ad4a:	f8c3 40dc 	str.w	r4, [r3, #220]	; 0xdc
 800ad4e:	f8c3 10c8 	str.w	r1, [r3, #200]	; 0xc8
 800ad52:	f8c3 10c4 	str.w	r1, [r3, #196]	; 0xc4
 800ad56:	bd70      	pop	{r4, r5, r6, pc}
 800ad58:	f8c3 40c8 	str.w	r4, [r3, #200]	; 0xc8
 800ad5c:	f8c3 40c4 	str.w	r4, [r3, #196]	; 0xc4
 800ad60:	bd70      	pop	{r4, r5, r6, pc}
 800ad62:	b13c      	cbz	r4, 800ad74 <_SetDevFunc+0x80>
 800ad64:	4809      	ldr	r0, [pc, #36]	; (800ad8c <_SetDevFunc+0x98>)
 800ad66:	f8c3 40e0 	str.w	r4, [r3, #224]	; 0xe0
 800ad6a:	f8c3 00cc 	str.w	r0, [r3, #204]	; 0xcc
 800ad6e:	f8c3 00d0 	str.w	r0, [r3, #208]	; 0xd0
 800ad72:	bd70      	pop	{r4, r5, r6, pc}
 800ad74:	f8c3 40cc 	str.w	r4, [r3, #204]	; 0xcc
 800ad78:	f8c3 40d0 	str.w	r4, [r3, #208]	; 0xd0
 800ad7c:	bd70      	pop	{r4, r5, r6, pc}
 800ad7e:	bf00      	nop
 800ad80:	0800a9af 	.word	0x0800a9af
 800ad84:	0800a9a1 	.word	0x0800a9a1
 800ad88:	0800a9bd 	.word	0x0800a9bd
 800ad8c:	0800a9f5 	.word	0x0800a9f5

0800ad90 <_GetDevFunc_Init>:
 800ad90:	b538      	push	{r3, r4, r5, lr}
 800ad92:	4605      	mov	r5, r0
 800ad94:	f7ff ff94 	bl	800acc0 <GUIDRV_FlexColor__InitOnce>
 800ad98:	68ac      	ldr	r4, [r5, #8]
 800ad9a:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800ad9e:	f003 f853 	bl	800de48 <GUI_ALLOC_GetFixedBlock>
 800ada2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ada4:	6821      	ldr	r1, [r4, #0]
 800ada6:	66a0      	str	r0, [r4, #104]	; 0x68
 800ada8:	1dd8      	adds	r0, r3, #7
 800adaa:	10c0      	asrs	r0, r0, #3
 800adac:	4348      	muls	r0, r1
 800adae:	f003 f84b 	bl	800de48 <GUI_ALLOC_GetFixedBlock>
 800adb2:	2101      	movs	r1, #1
 800adb4:	66e0      	str	r0, [r4, #108]	; 0x6c
 800adb6:	2200      	movs	r2, #0
 800adb8:	69a8      	ldr	r0, [r5, #24]
 800adba:	f7f7 faef 	bl	800239c <LCD_X_DisplayDriver>
 800adbe:	f8d4 2108 	ldr.w	r2, [r4, #264]	; 0x108
 800adc2:	4605      	mov	r5, r0
 800adc4:	4620      	mov	r0, r4
 800adc6:	4790      	blx	r2
 800adc8:	4620      	mov	r0, r4
 800adca:	f8d4 30b0 	ldr.w	r3, [r4, #176]	; 0xb0
 800adce:	4798      	blx	r3
 800add0:	2d00      	cmp	r5, #0
 800add2:	bfd4      	ite	le
 800add4:	2000      	movle	r0, #0
 800add6:	2001      	movgt	r0, #1
 800add8:	bd38      	pop	{r3, r4, r5, pc}

0800adda <_GetDevFunc_SetSize>:
 800adda:	b570      	push	{r4, r5, r6, lr}
 800addc:	4604      	mov	r4, r0
 800adde:	460d      	mov	r5, r1
 800ade0:	4616      	mov	r6, r2
 800ade2:	f7ff ff6d 	bl	800acc0 <GUIDRV_FlexColor__InitOnce>
 800ade6:	68a3      	ldr	r3, [r4, #8]
 800ade8:	e883 0060 	stmia.w	r3, {r5, r6}
 800adec:	bd70      	pop	{r4, r5, r6, pc}

0800adee <_GetDevFunc_SetVSize>:
 800adee:	b570      	push	{r4, r5, r6, lr}
 800adf0:	4604      	mov	r4, r0
 800adf2:	460d      	mov	r5, r1
 800adf4:	4616      	mov	r6, r2
 800adf6:	f7ff ff63 	bl	800acc0 <GUIDRV_FlexColor__InitOnce>
 800adfa:	68a3      	ldr	r3, [r4, #8]
 800adfc:	609d      	str	r5, [r3, #8]
 800adfe:	60de      	str	r6, [r3, #12]
 800ae00:	bd70      	pop	{r4, r5, r6, pc}

0800ae02 <GUIDRV_FlexColor_Config>:
 800ae02:	b538      	push	{r3, r4, r5, lr}
 800ae04:	460c      	mov	r4, r1
 800ae06:	4605      	mov	r5, r0
 800ae08:	f7ff ff5a 	bl	800acc0 <GUIDRV_FlexColor__InitOnce>
 800ae0c:	6822      	ldr	r2, [r4, #0]
 800ae0e:	68ab      	ldr	r3, [r5, #8]
 800ae10:	68a1      	ldr	r1, [r4, #8]
 800ae12:	6860      	ldr	r0, [r4, #4]
 800ae14:	62da      	str	r2, [r3, #44]	; 0x2c
 800ae16:	074a      	lsls	r2, r1, #29
 800ae18:	6318      	str	r0, [r3, #48]	; 0x30
 800ae1a:	6359      	str	r1, [r3, #52]	; 0x34
 800ae1c:	d507      	bpl.n	800ae2e <GUIDRV_FlexColor_Config+0x2c>
 800ae1e:	e893 0006 	ldmia.w	r3, {r1, r2}
 800ae22:	6898      	ldr	r0, [r3, #8]
 800ae24:	601a      	str	r2, [r3, #0]
 800ae26:	68da      	ldr	r2, [r3, #12]
 800ae28:	6059      	str	r1, [r3, #4]
 800ae2a:	609a      	str	r2, [r3, #8]
 800ae2c:	60d8      	str	r0, [r3, #12]
 800ae2e:	89a1      	ldrh	r1, [r4, #12]
 800ae30:	6920      	ldr	r0, [r4, #16]
 800ae32:	8499      	strh	r1, [r3, #36]	; 0x24
 800ae34:	b110      	cbz	r0, 800ae3c <GUIDRV_FlexColor_Config+0x3a>
 800ae36:	ea20 72e0 	bic.w	r2, r0, r0, asr #31
 800ae3a:	621a      	str	r2, [r3, #32]
 800ae3c:	bd38      	pop	{r3, r4, r5, pc}

0800ae3e <GUIDRV_FlexColor_SetFunc>:
 800ae3e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ae42:	4604      	mov	r4, r0
 800ae44:	461f      	mov	r7, r3
 800ae46:	4616      	mov	r6, r2
 800ae48:	4688      	mov	r8, r1
 800ae4a:	f7ff ff39 	bl	800acc0 <GUIDRV_FlexColor__InitOnce>
 800ae4e:	68a5      	ldr	r5, [r4, #8]
 800ae50:	4641      	mov	r1, r8
 800ae52:	2268      	movs	r2, #104	; 0x68
 800ae54:	f505 7086 	add.w	r0, r5, #268	; 0x10c
 800ae58:	f7f5 f996 	bl	8000188 <memcpy>
 800ae5c:	4620      	mov	r0, r4
 800ae5e:	47b0      	blx	r6
 800ae60:	4620      	mov	r0, r4
 800ae62:	47b8      	blx	r7
 800ae64:	6923      	ldr	r3, [r4, #16]
 800ae66:	6898      	ldr	r0, [r3, #8]
 800ae68:	4780      	blx	r0
 800ae6a:	62a8      	str	r0, [r5, #40]	; 0x28
 800ae6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ae70 <LCD_UpdateColorIndices>:
 800ae70:	b510      	push	{r4, lr}
 800ae72:	4c07      	ldr	r4, [pc, #28]	; (800ae90 <LCD_UpdateColorIndices+0x20>)
 800ae74:	6823      	ldr	r3, [r4, #0]
 800ae76:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800ae78:	f000 fc6c 	bl	800b754 <LCD_Color2Index>
 800ae7c:	f000 fc8a 	bl	800b794 <LCD_SetColorIndex>
 800ae80:	6820      	ldr	r0, [r4, #0]
 800ae82:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800ae84:	f000 fc66 	bl	800b754 <LCD_Color2Index>
 800ae88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ae8c:	f000 bca0 	b.w	800b7d0 <LCD_SetBkColorIndex>
 800ae90:	20000278 	.word	0x20000278

0800ae94 <LCD_SetClipRectEx>:
 800ae94:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ae96:	4c09      	ldr	r4, [pc, #36]	; (800aebc <LCD_SetClipRectEx+0x28>)
 800ae98:	6823      	ldr	r3, [r4, #0]
 800ae9a:	4605      	mov	r5, r0
 800ae9c:	7c5a      	ldrb	r2, [r3, #17]
 800ae9e:	4808      	ldr	r0, [pc, #32]	; (800aec0 <LCD_SetClipRectEx+0x2c>)
 800aea0:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 800aea4:	68c1      	ldr	r1, [r0, #12]
 800aea6:	6b0b      	ldr	r3, [r1, #48]	; 0x30
 800aea8:	4669      	mov	r1, sp
 800aeaa:	4798      	blx	r3
 800aeac:	6820      	ldr	r0, [r4, #0]
 800aeae:	4629      	mov	r1, r5
 800aeb0:	3008      	adds	r0, #8
 800aeb2:	466a      	mov	r2, sp
 800aeb4:	f000 fdd6 	bl	800ba64 <GUI__IntersectRects>
 800aeb8:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 800aeba:	bf00      	nop
 800aebc:	20000278 	.word	0x20000278
 800aec0:	2000e67c 	.word	0x2000e67c

0800aec4 <LCD_SetVSizeEx>:
 800aec4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800aec6:	460d      	mov	r5, r1
 800aec8:	4614      	mov	r4, r2
 800aeca:	f002 f913 	bl	800d0f4 <GUI_DEVICE__GetpDriver>
 800aece:	9001      	str	r0, [sp, #4]
 800aed0:	b908      	cbnz	r0, 800aed6 <LCD_SetVSizeEx+0x12>
 800aed2:	2001      	movs	r0, #1
 800aed4:	e00c      	b.n	800aef0 <LCD_SetVSizeEx+0x2c>
 800aed6:	68c3      	ldr	r3, [r0, #12]
 800aed8:	210a      	movs	r1, #10
 800aeda:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800aedc:	a801      	add	r0, sp, #4
 800aede:	4790      	blx	r2
 800aee0:	4603      	mov	r3, r0
 800aee2:	2800      	cmp	r0, #0
 800aee4:	d0f5      	beq.n	800aed2 <LCD_SetVSizeEx+0xe>
 800aee6:	9801      	ldr	r0, [sp, #4]
 800aee8:	4629      	mov	r1, r5
 800aeea:	4622      	mov	r2, r4
 800aeec:	4798      	blx	r3
 800aeee:	2000      	movs	r0, #0
 800aef0:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800aef2 <LCD_SetSizeEx>:
 800aef2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800aef4:	460d      	mov	r5, r1
 800aef6:	4614      	mov	r4, r2
 800aef8:	f002 f8fc 	bl	800d0f4 <GUI_DEVICE__GetpDriver>
 800aefc:	9001      	str	r0, [sp, #4]
 800aefe:	b908      	cbnz	r0, 800af04 <LCD_SetSizeEx+0x12>
 800af00:	2001      	movs	r0, #1
 800af02:	e00c      	b.n	800af1e <LCD_SetSizeEx+0x2c>
 800af04:	68c3      	ldr	r3, [r0, #12]
 800af06:	210b      	movs	r1, #11
 800af08:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800af0a:	a801      	add	r0, sp, #4
 800af0c:	4790      	blx	r2
 800af0e:	4603      	mov	r3, r0
 800af10:	2800      	cmp	r0, #0
 800af12:	d0f5      	beq.n	800af00 <LCD_SetSizeEx+0xe>
 800af14:	9801      	ldr	r0, [sp, #4]
 800af16:	4629      	mov	r1, r5
 800af18:	4622      	mov	r2, r4
 800af1a:	4798      	blx	r3
 800af1c:	2000      	movs	r0, #0
 800af1e:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800af20 <LCD_SetPosEx>:
 800af20:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800af22:	460d      	mov	r5, r1
 800af24:	4614      	mov	r4, r2
 800af26:	f002 f8e5 	bl	800d0f4 <GUI_DEVICE__GetpDriver>
 800af2a:	9001      	str	r0, [sp, #4]
 800af2c:	b908      	cbnz	r0, 800af32 <LCD_SetPosEx+0x12>
 800af2e:	2001      	movs	r0, #1
 800af30:	e00c      	b.n	800af4c <LCD_SetPosEx+0x2c>
 800af32:	68c3      	ldr	r3, [r0, #12]
 800af34:	2103      	movs	r1, #3
 800af36:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800af38:	a801      	add	r0, sp, #4
 800af3a:	4790      	blx	r2
 800af3c:	4603      	mov	r3, r0
 800af3e:	2800      	cmp	r0, #0
 800af40:	d0f5      	beq.n	800af2e <LCD_SetPosEx+0xe>
 800af42:	9801      	ldr	r0, [sp, #4]
 800af44:	4629      	mov	r1, r5
 800af46:	4622      	mov	r2, r4
 800af48:	4798      	blx	r3
 800af4a:	2000      	movs	r0, #0
 800af4c:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800af4e <LCD_SetLUTEntryEx>:
 800af4e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800af50:	460d      	mov	r5, r1
 800af52:	4614      	mov	r4, r2
 800af54:	f002 f8ce 	bl	800d0f4 <GUI_DEVICE__GetpDriver>
 800af58:	9001      	str	r0, [sp, #4]
 800af5a:	b908      	cbnz	r0, 800af60 <LCD_SetLUTEntryEx+0x12>
 800af5c:	2001      	movs	r0, #1
 800af5e:	e00c      	b.n	800af7a <LCD_SetLUTEntryEx+0x2c>
 800af60:	68c3      	ldr	r3, [r0, #12]
 800af62:	2110      	movs	r1, #16
 800af64:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800af66:	a801      	add	r0, sp, #4
 800af68:	4790      	blx	r2
 800af6a:	4603      	mov	r3, r0
 800af6c:	2800      	cmp	r0, #0
 800af6e:	d0f5      	beq.n	800af5c <LCD_SetLUTEntryEx+0xe>
 800af70:	9801      	ldr	r0, [sp, #4]
 800af72:	4629      	mov	r1, r5
 800af74:	4622      	mov	r2, r4
 800af76:	4798      	blx	r3
 800af78:	2000      	movs	r0, #0
 800af7a:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800af7c <LCD_GetPosEx>:
 800af7c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800af7e:	460d      	mov	r5, r1
 800af80:	4614      	mov	r4, r2
 800af82:	f002 f8b7 	bl	800d0f4 <GUI_DEVICE__GetpDriver>
 800af86:	9001      	str	r0, [sp, #4]
 800af88:	b908      	cbnz	r0, 800af8e <LCD_GetPosEx+0x12>
 800af8a:	2001      	movs	r0, #1
 800af8c:	e00c      	b.n	800afa8 <LCD_GetPosEx+0x2c>
 800af8e:	68c3      	ldr	r3, [r0, #12]
 800af90:	2104      	movs	r1, #4
 800af92:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800af94:	a801      	add	r0, sp, #4
 800af96:	4790      	blx	r2
 800af98:	4603      	mov	r3, r0
 800af9a:	2800      	cmp	r0, #0
 800af9c:	d0f5      	beq.n	800af8a <LCD_GetPosEx+0xe>
 800af9e:	9801      	ldr	r0, [sp, #4]
 800afa0:	4629      	mov	r1, r5
 800afa2:	4622      	mov	r2, r4
 800afa4:	4798      	blx	r3
 800afa6:	2000      	movs	r0, #0
 800afa8:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800afaa <_GetDevProp>:
 800afaa:	2801      	cmp	r0, #1
 800afac:	b510      	push	{r4, lr}
 800afae:	460c      	mov	r4, r1
 800afb0:	dc08      	bgt.n	800afc4 <_GetDevProp+0x1a>
 800afb2:	f002 f89f 	bl	800d0f4 <GUI_DEVICE__GetpDriver>
 800afb6:	b120      	cbz	r0, 800afc2 <_GetDevProp+0x18>
 800afb8:	68c1      	ldr	r1, [r0, #12]
 800afba:	6a8a      	ldr	r2, [r1, #40]	; 0x28
 800afbc:	4621      	mov	r1, r4
 800afbe:	4790      	blx	r2
 800afc0:	bd10      	pop	{r4, pc}
 800afc2:	bd10      	pop	{r4, pc}
 800afc4:	2000      	movs	r0, #0
 800afc6:	bd10      	pop	{r4, pc}

0800afc8 <_GetMaxValue>:
 800afc8:	b538      	push	{r3, r4, r5, lr}
 800afca:	4604      	mov	r4, r0
 800afcc:	4621      	mov	r1, r4
 800afce:	2001      	movs	r0, #1
 800afd0:	f7ff ffeb 	bl	800afaa <_GetDevProp>
 800afd4:	4621      	mov	r1, r4
 800afd6:	4605      	mov	r5, r0
 800afd8:	2000      	movs	r0, #0
 800afda:	f7ff ffe6 	bl	800afaa <_GetDevProp>
 800afde:	42a8      	cmp	r0, r5
 800afe0:	bfb8      	it	lt
 800afe2:	4628      	movlt	r0, r5
 800afe4:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 800afe8:	bd38      	pop	{r3, r4, r5, pc}

0800afea <LCD_GetXSizeEx>:
 800afea:	2101      	movs	r1, #1
 800afec:	f7ff bfdd 	b.w	800afaa <_GetDevProp>

0800aff0 <LCD_GetYSizeEx>:
 800aff0:	2102      	movs	r1, #2
 800aff2:	f7ff bfda 	b.w	800afaa <_GetDevProp>

0800aff6 <LCD_GetVXSizeEx>:
 800aff6:	2103      	movs	r1, #3
 800aff8:	f7ff bfd7 	b.w	800afaa <_GetDevProp>

0800affc <LCD_GetVYSizeEx>:
 800affc:	2104      	movs	r1, #4
 800affe:	f7ff bfd4 	b.w	800afaa <_GetDevProp>

0800b002 <LCD_GetBitsPerPixelEx>:
 800b002:	2108      	movs	r1, #8
 800b004:	f7ff bfd1 	b.w	800afaa <_GetDevProp>

0800b008 <LCD_GetNumColorsEx>:
 800b008:	2109      	movs	r1, #9
 800b00a:	f7ff bfce 	b.w	800afaa <_GetDevProp>
	...

0800b010 <LCD_GetXSize>:
 800b010:	4b02      	ldr	r3, [pc, #8]	; (800b01c <LCD_GetXSize+0xc>)
 800b012:	6818      	ldr	r0, [r3, #0]
 800b014:	7c40      	ldrb	r0, [r0, #17]
 800b016:	f7ff bfe8 	b.w	800afea <LCD_GetXSizeEx>
 800b01a:	bf00      	nop
 800b01c:	20000278 	.word	0x20000278

0800b020 <LCD_GetYSize>:
 800b020:	4b02      	ldr	r3, [pc, #8]	; (800b02c <LCD_GetYSize+0xc>)
 800b022:	6818      	ldr	r0, [r3, #0]
 800b024:	7c40      	ldrb	r0, [r0, #17]
 800b026:	f7ff bfe3 	b.w	800aff0 <LCD_GetYSizeEx>
 800b02a:	bf00      	nop
 800b02c:	20000278 	.word	0x20000278

0800b030 <LCD_GetNumColors>:
 800b030:	4b02      	ldr	r3, [pc, #8]	; (800b03c <LCD_GetNumColors+0xc>)
 800b032:	6818      	ldr	r0, [r3, #0]
 800b034:	7c40      	ldrb	r0, [r0, #17]
 800b036:	f7ff bfe7 	b.w	800b008 <LCD_GetNumColorsEx>
 800b03a:	bf00      	nop
 800b03c:	20000278 	.word	0x20000278

0800b040 <GUI_GetBitsPerPixelEx>:
 800b040:	b508      	push	{r3, lr}
 800b042:	4b04      	ldr	r3, [pc, #16]	; (800b054 <GUI_GetBitsPerPixelEx+0x14>)
 800b044:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800b048:	68c1      	ldr	r1, [r0, #12]
 800b04a:	6a8a      	ldr	r2, [r1, #40]	; 0x28
 800b04c:	2108      	movs	r1, #8
 800b04e:	4790      	blx	r2
 800b050:	bd08      	pop	{r3, pc}
 800b052:	bf00      	nop
 800b054:	2000e67c 	.word	0x2000e67c

0800b058 <LCD_GetPaletteEx>:
 800b058:	b508      	push	{r3, lr}
 800b05a:	f002 f84b 	bl	800d0f4 <GUI_DEVICE__GetpDriver>
 800b05e:	b120      	cbz	r0, 800b06a <LCD_GetPaletteEx+0x12>
 800b060:	68c1      	ldr	r1, [r0, #12]
 800b062:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800b064:	2102      	movs	r1, #2
 800b066:	4790      	blx	r2
 800b068:	bd08      	pop	{r3, pc}
 800b06a:	bd08      	pop	{r3, pc}

0800b06c <LCD_GetPalette>:
 800b06c:	4b02      	ldr	r3, [pc, #8]	; (800b078 <LCD_GetPalette+0xc>)
 800b06e:	6818      	ldr	r0, [r3, #0]
 800b070:	7c40      	ldrb	r0, [r0, #17]
 800b072:	f7ff bff1 	b.w	800b058 <LCD_GetPaletteEx>
 800b076:	bf00      	nop
 800b078:	20000278 	.word	0x20000278

0800b07c <GUI_GetpfIndex2ColorEx>:
 800b07c:	4b02      	ldr	r3, [pc, #8]	; (800b088 <GUI_GetpfIndex2ColorEx+0xc>)
 800b07e:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800b082:	6901      	ldr	r1, [r0, #16]
 800b084:	6848      	ldr	r0, [r1, #4]
 800b086:	4770      	bx	lr
 800b088:	2000e67c 	.word	0x2000e67c

0800b08c <GUI_GetpfColor2IndexEx>:
 800b08c:	4b02      	ldr	r3, [pc, #8]	; (800b098 <GUI_GetpfColor2IndexEx+0xc>)
 800b08e:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800b092:	6901      	ldr	r1, [r0, #16]
 800b094:	6808      	ldr	r0, [r1, #0]
 800b096:	4770      	bx	lr
 800b098:	2000e67c 	.word	0x2000e67c

0800b09c <LCD_GetVXSizeMax>:
 800b09c:	2003      	movs	r0, #3
 800b09e:	f7ff bf93 	b.w	800afc8 <_GetMaxValue>

0800b0a2 <LCD__GetBPP>:
 800b0a2:	2800      	cmp	r0, #0
 800b0a4:	d03d      	beq.n	800b122 <LCD__GetBPP+0x80>
 800b0a6:	f030 0301 	bics.w	r3, r0, #1
 800b0aa:	d02b      	beq.n	800b104 <LCD__GetBPP+0x62>
 800b0ac:	f030 0303 	bics.w	r3, r0, #3
 800b0b0:	d02a      	beq.n	800b108 <LCD__GetBPP+0x66>
 800b0b2:	f030 0307 	bics.w	r3, r0, #7
 800b0b6:	d029      	beq.n	800b10c <LCD__GetBPP+0x6a>
 800b0b8:	f030 030f 	bics.w	r3, r0, #15
 800b0bc:	d028      	beq.n	800b110 <LCD__GetBPP+0x6e>
 800b0be:	f030 031f 	bics.w	r3, r0, #31
 800b0c2:	d027      	beq.n	800b114 <LCD__GetBPP+0x72>
 800b0c4:	f030 03ff 	bics.w	r3, r0, #255	; 0xff
 800b0c8:	d026      	beq.n	800b118 <LCD__GetBPP+0x76>
 800b0ca:	f420 73ff 	bic.w	r3, r0, #510	; 0x1fe
 800b0ce:	f023 0101 	bic.w	r1, r3, #1
 800b0d2:	2900      	cmp	r1, #0
 800b0d4:	d022      	beq.n	800b11c <LCD__GetBPP+0x7a>
 800b0d6:	f420 627f 	bic.w	r2, r0, #4080	; 0xff0
 800b0da:	f022 030f 	bic.w	r3, r2, #15
 800b0de:	2b00      	cmp	r3, #0
 800b0e0:	d01c      	beq.n	800b11c <LCD__GetBPP+0x7a>
 800b0e2:	f420 41ff 	bic.w	r1, r0, #32640	; 0x7f80
 800b0e6:	f021 027f 	bic.w	r2, r1, #127	; 0x7f
 800b0ea:	b1ba      	cbz	r2, 800b11c <LCD__GetBPP+0x7a>
 800b0ec:	0c03      	lsrs	r3, r0, #16
 800b0ee:	0419      	lsls	r1, r3, #16
 800b0f0:	b1a1      	cbz	r1, 800b11c <LCD__GetBPP+0x7a>
 800b0f2:	0c82      	lsrs	r2, r0, #18
 800b0f4:	0493      	lsls	r3, r2, #18
 800b0f6:	b19b      	cbz	r3, 800b120 <LCD__GetBPP+0x7e>
 800b0f8:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800b0fc:	bf0c      	ite	eq
 800b0fe:	2018      	moveq	r0, #24
 800b100:	2020      	movne	r0, #32
 800b102:	4770      	bx	lr
 800b104:	2001      	movs	r0, #1
 800b106:	4770      	bx	lr
 800b108:	2002      	movs	r0, #2
 800b10a:	4770      	bx	lr
 800b10c:	2003      	movs	r0, #3
 800b10e:	4770      	bx	lr
 800b110:	2004      	movs	r0, #4
 800b112:	4770      	bx	lr
 800b114:	2005      	movs	r0, #5
 800b116:	4770      	bx	lr
 800b118:	2008      	movs	r0, #8
 800b11a:	4770      	bx	lr
 800b11c:	2010      	movs	r0, #16
 800b11e:	4770      	bx	lr
 800b120:	2012      	movs	r0, #18
 800b122:	4770      	bx	lr

0800b124 <LCD__GetBPPDevice>:
 800b124:	b508      	push	{r3, lr}
 800b126:	f7ff ffbc 	bl	800b0a2 <LCD__GetBPP>
 800b12a:	2801      	cmp	r0, #1
 800b12c:	d00f      	beq.n	800b14e <LCD__GetBPPDevice+0x2a>
 800b12e:	1e83      	subs	r3, r0, #2
 800b130:	2b06      	cmp	r3, #6
 800b132:	d909      	bls.n	800b148 <LCD__GetBPPDevice+0x24>
 800b134:	f1a0 0109 	sub.w	r1, r0, #9
 800b138:	2907      	cmp	r1, #7
 800b13a:	d907      	bls.n	800b14c <LCD__GetBPPDevice+0x28>
 800b13c:	3811      	subs	r0, #17
 800b13e:	280f      	cmp	r0, #15
 800b140:	bf94      	ite	ls
 800b142:	2020      	movls	r0, #32
 800b144:	2000      	movhi	r0, #0
 800b146:	bd08      	pop	{r3, pc}
 800b148:	2008      	movs	r0, #8
 800b14a:	bd08      	pop	{r3, pc}
 800b14c:	2010      	movs	r0, #16
 800b14e:	bd08      	pop	{r3, pc}

0800b150 <_SetDrawMode>:
 800b150:	b570      	push	{r4, r5, r6, lr}
 800b152:	4b08      	ldr	r3, [pc, #32]	; (800b174 <_SetDrawMode+0x24>)
 800b154:	681b      	ldr	r3, [r3, #0]
 800b156:	7c1a      	ldrb	r2, [r3, #16]
 800b158:	ea80 0102 	eor.w	r1, r0, r2
 800b15c:	0749      	lsls	r1, r1, #29
 800b15e:	d505      	bpl.n	800b16c <_SetDrawMode+0x1c>
 800b160:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 800b162:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 800b164:	6826      	ldr	r6, [r4, #0]
 800b166:	680d      	ldr	r5, [r1, #0]
 800b168:	6025      	str	r5, [r4, #0]
 800b16a:	600e      	str	r6, [r1, #0]
 800b16c:	7418      	strb	r0, [r3, #16]
 800b16e:	4610      	mov	r0, r2
 800b170:	bd70      	pop	{r4, r5, r6, pc}
 800b172:	bf00      	nop
 800b174:	20000278 	.word	0x20000278

0800b178 <LCD_SetDrawMode>:
 800b178:	b508      	push	{r3, lr}
 800b17a:	4b02      	ldr	r3, [pc, #8]	; (800b184 <LCD_SetDrawMode+0xc>)
 800b17c:	6819      	ldr	r1, [r3, #0]
 800b17e:	688a      	ldr	r2, [r1, #8]
 800b180:	4790      	blx	r2
 800b182:	bd08      	pop	{r3, pc}
 800b184:	20000264 	.word	0x20000264

0800b188 <LCD_DrawPixel>:
 800b188:	b538      	push	{r3, r4, r5, lr}
 800b18a:	4b14      	ldr	r3, [pc, #80]	; (800b1dc <LCD_DrawPixel+0x54>)
 800b18c:	681b      	ldr	r3, [r3, #0]
 800b18e:	460a      	mov	r2, r1
 800b190:	f9b3 100a 	ldrsh.w	r1, [r3, #10]
 800b194:	428a      	cmp	r2, r1
 800b196:	4604      	mov	r4, r0
 800b198:	db1e      	blt.n	800b1d8 <LCD_DrawPixel+0x50>
 800b19a:	f9b3 000e 	ldrsh.w	r0, [r3, #14]
 800b19e:	4282      	cmp	r2, r0
 800b1a0:	dc1a      	bgt.n	800b1d8 <LCD_DrawPixel+0x50>
 800b1a2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 800b1a6:	428c      	cmp	r4, r1
 800b1a8:	db16      	blt.n	800b1d8 <LCD_DrawPixel+0x50>
 800b1aa:	f9b3 000c 	ldrsh.w	r0, [r3, #12]
 800b1ae:	4284      	cmp	r4, r0
 800b1b0:	dc12      	bgt.n	800b1d8 <LCD_DrawPixel+0x50>
 800b1b2:	7c19      	ldrb	r1, [r3, #16]
 800b1b4:	7c58      	ldrb	r0, [r3, #17]
 800b1b6:	f011 0f01 	tst.w	r1, #1
 800b1ba:	4909      	ldr	r1, [pc, #36]	; (800b1e0 <LCD_DrawPixel+0x58>)
 800b1bc:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 800b1c0:	d004      	beq.n	800b1cc <LCD_DrawPixel+0x44>
 800b1c2:	68c1      	ldr	r1, [r0, #12]
 800b1c4:	69cb      	ldr	r3, [r1, #28]
 800b1c6:	4621      	mov	r1, r4
 800b1c8:	4798      	blx	r3
 800b1ca:	bd38      	pop	{r3, r4, r5, pc}
 800b1cc:	68c5      	ldr	r5, [r0, #12]
 800b1ce:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b1d0:	69ad      	ldr	r5, [r5, #24]
 800b1d2:	681b      	ldr	r3, [r3, #0]
 800b1d4:	4621      	mov	r1, r4
 800b1d6:	47a8      	blx	r5
 800b1d8:	bd38      	pop	{r3, r4, r5, pc}
 800b1da:	bf00      	nop
 800b1dc:	20000278 	.word	0x20000278
 800b1e0:	2000e67c 	.word	0x2000e67c

0800b1e4 <LCD_DrawHLine>:
 800b1e4:	b538      	push	{r3, r4, r5, lr}
 800b1e6:	4b10      	ldr	r3, [pc, #64]	; (800b228 <LCD_DrawHLine+0x44>)
 800b1e8:	681c      	ldr	r4, [r3, #0]
 800b1ea:	460d      	mov	r5, r1
 800b1ec:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800b1f0:	428d      	cmp	r5, r1
 800b1f2:	db17      	blt.n	800b224 <LCD_DrawHLine+0x40>
 800b1f4:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 800b1f8:	429d      	cmp	r5, r3
 800b1fa:	dc13      	bgt.n	800b224 <LCD_DrawHLine+0x40>
 800b1fc:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800b200:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800b204:	4288      	cmp	r0, r1
 800b206:	bfa8      	it	ge
 800b208:	4601      	movge	r1, r0
 800b20a:	429a      	cmp	r2, r3
 800b20c:	bfb8      	it	lt
 800b20e:	4613      	movlt	r3, r2
 800b210:	428b      	cmp	r3, r1
 800b212:	db07      	blt.n	800b224 <LCD_DrawHLine+0x40>
 800b214:	7c60      	ldrb	r0, [r4, #17]
 800b216:	4a05      	ldr	r2, [pc, #20]	; (800b22c <LCD_DrawHLine+0x48>)
 800b218:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 800b21c:	68c4      	ldr	r4, [r0, #12]
 800b21e:	462a      	mov	r2, r5
 800b220:	68a4      	ldr	r4, [r4, #8]
 800b222:	47a0      	blx	r4
 800b224:	bd38      	pop	{r3, r4, r5, pc}
 800b226:	bf00      	nop
 800b228:	20000278 	.word	0x20000278
 800b22c:	2000e67c 	.word	0x2000e67c

0800b230 <LCD_DrawVLine>:
 800b230:	b538      	push	{r3, r4, r5, lr}
 800b232:	4b10      	ldr	r3, [pc, #64]	; (800b274 <LCD_DrawVLine+0x44>)
 800b234:	681c      	ldr	r4, [r3, #0]
 800b236:	4605      	mov	r5, r0
 800b238:	4610      	mov	r0, r2
 800b23a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800b23e:	4295      	cmp	r5, r2
 800b240:	db17      	blt.n	800b272 <LCD_DrawVLine+0x42>
 800b242:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800b246:	429d      	cmp	r5, r3
 800b248:	dc13      	bgt.n	800b272 <LCD_DrawVLine+0x42>
 800b24a:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800b24e:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 800b252:	4291      	cmp	r1, r2
 800b254:	bfa8      	it	ge
 800b256:	460a      	movge	r2, r1
 800b258:	4298      	cmp	r0, r3
 800b25a:	bfb8      	it	lt
 800b25c:	4603      	movlt	r3, r0
 800b25e:	4293      	cmp	r3, r2
 800b260:	db07      	blt.n	800b272 <LCD_DrawVLine+0x42>
 800b262:	7c64      	ldrb	r4, [r4, #17]
 800b264:	4904      	ldr	r1, [pc, #16]	; (800b278 <LCD_DrawVLine+0x48>)
 800b266:	f851 0024 	ldr.w	r0, [r1, r4, lsl #2]
 800b26a:	68c4      	ldr	r4, [r0, #12]
 800b26c:	4629      	mov	r1, r5
 800b26e:	68e4      	ldr	r4, [r4, #12]
 800b270:	47a0      	blx	r4
 800b272:	bd38      	pop	{r3, r4, r5, pc}
 800b274:	20000278 	.word	0x20000278
 800b278:	2000e67c 	.word	0x2000e67c

0800b27c <LCD_FillRect>:
 800b27c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b27e:	460e      	mov	r6, r1
 800b280:	4911      	ldr	r1, [pc, #68]	; (800b2c8 <LCD_FillRect+0x4c>)
 800b282:	680c      	ldr	r4, [r1, #0]
 800b284:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800b288:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800b28c:	4288      	cmp	r0, r1
 800b28e:	bfa8      	it	ge
 800b290:	4601      	movge	r1, r0
 800b292:	42aa      	cmp	r2, r5
 800b294:	bfb8      	it	lt
 800b296:	4615      	movlt	r5, r2
 800b298:	428d      	cmp	r5, r1
 800b29a:	db14      	blt.n	800b2c6 <LCD_FillRect+0x4a>
 800b29c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800b2a0:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 800b2a4:	4296      	cmp	r6, r2
 800b2a6:	bfa8      	it	ge
 800b2a8:	4632      	movge	r2, r6
 800b2aa:	4283      	cmp	r3, r0
 800b2ac:	bfa8      	it	ge
 800b2ae:	4603      	movge	r3, r0
 800b2b0:	4293      	cmp	r3, r2
 800b2b2:	db08      	blt.n	800b2c6 <LCD_FillRect+0x4a>
 800b2b4:	7c64      	ldrb	r4, [r4, #17]
 800b2b6:	4805      	ldr	r0, [pc, #20]	; (800b2cc <LCD_FillRect+0x50>)
 800b2b8:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 800b2bc:	68c4      	ldr	r4, [r0, #12]
 800b2be:	9300      	str	r3, [sp, #0]
 800b2c0:	6924      	ldr	r4, [r4, #16]
 800b2c2:	462b      	mov	r3, r5
 800b2c4:	47a0      	blx	r4
 800b2c6:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
 800b2c8:	20000278 	.word	0x20000278
 800b2cc:	2000e67c 	.word	0x2000e67c

0800b2d0 <LCD__DrawBitmap_1bpp>:
 800b2d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b2d4:	4e69      	ldr	r6, [pc, #420]	; (800b47c <LCD__DrawBitmap_1bpp+0x1ac>)
 800b2d6:	b08f      	sub	sp, #60	; 0x3c
 800b2d8:	6836      	ldr	r6, [r6, #0]
 800b2da:	9008      	str	r0, [sp, #32]
 800b2dc:	4688      	mov	r8, r1
 800b2de:	4615      	mov	r5, r2
 800b2e0:	469b      	mov	fp, r3
 800b2e2:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800b2e4:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 800b2e6:	b166      	cbz	r6, 800b302 <LCD__DrawBitmap_1bpp+0x32>
 800b2e8:	9d18      	ldr	r5, [sp, #96]	; 0x60
 800b2ea:	9404      	str	r4, [sp, #16]
 800b2ec:	9500      	str	r5, [sp, #0]
 800b2ee:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800b2f0:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 800b2f2:	9501      	str	r5, [sp, #4]
 800b2f4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800b2f6:	9405      	str	r4, [sp, #20]
 800b2f8:	9502      	str	r5, [sp, #8]
 800b2fa:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 800b2fc:	9503      	str	r5, [sp, #12]
 800b2fe:	6834      	ldr	r4, [r6, #0]
 800b300:	e054      	b.n	800b3ac <LCD__DrawBitmap_1bpp+0xdc>
 800b302:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800b304:	9918      	ldr	r1, [sp, #96]	; 0x60
 800b306:	430b      	orrs	r3, r1
 800b308:	2b01      	cmp	r3, #1
 800b30a:	d151      	bne.n	800b3b0 <LCD__DrawBitmap_1bpp+0xe0>
 800b30c:	485c      	ldr	r0, [pc, #368]	; (800b480 <LCD__DrawBitmap_1bpp+0x1b0>)
 800b30e:	6800      	ldr	r0, [r0, #0]
 800b310:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800b314:	ebc8 0102 	rsb	r1, r8, r2
 800b318:	2900      	cmp	r1, #0
 800b31a:	dd08      	ble.n	800b32e <LCD__DrawBitmap_1bpp+0x5e>
 800b31c:	ebc1 030b 	rsb	r3, r1, fp
 800b320:	2b00      	cmp	r3, #0
 800b322:	f340 80a8 	ble.w	800b476 <LCD__DrawBitmap_1bpp+0x1a6>
 800b326:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 800b328:	fb01 4406 	mla	r4, r1, r6, r4
 800b32c:	e001      	b.n	800b332 <LCD__DrawBitmap_1bpp+0x62>
 800b32e:	465b      	mov	r3, fp
 800b330:	4642      	mov	r2, r8
 800b332:	44d8      	add	r8, fp
 800b334:	f9b0 100e 	ldrsh.w	r1, [r0, #14]
 800b338:	f108 3cff 	add.w	ip, r8, #4294967295
 800b33c:	ebc1 080c 	rsb	r8, r1, ip
 800b340:	f1b8 0f00 	cmp.w	r8, #0
 800b344:	dd04      	ble.n	800b350 <LCD__DrawBitmap_1bpp+0x80>
 800b346:	ebc8 0303 	rsb	r3, r8, r3
 800b34a:	2b00      	cmp	r3, #0
 800b34c:	f340 8093 	ble.w	800b476 <LCD__DrawBitmap_1bpp+0x1a6>
 800b350:	9e08      	ldr	r6, [sp, #32]
 800b352:	1971      	adds	r1, r6, r5
 800b354:	f9b0 600c 	ldrsh.w	r6, [r0, #12]
 800b358:	3901      	subs	r1, #1
 800b35a:	1b89      	subs	r1, r1, r6
 800b35c:	9e08      	ldr	r6, [sp, #32]
 800b35e:	2900      	cmp	r1, #0
 800b360:	bfc8      	it	gt
 800b362:	ebc1 0505 	rsbgt	r5, r1, r5
 800b366:	1bf1      	subs	r1, r6, r7
 800b368:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800b36c:	42b1      	cmp	r1, r6
 800b36e:	da0b      	bge.n	800b388 <LCD__DrawBitmap_1bpp+0xb8>
 800b370:	ebc1 0c06 	rsb	ip, r1, r6
 800b374:	4467      	add	r7, ip
 800b376:	1b8e      	subs	r6, r1, r6
 800b378:	f02c 0c07 	bic.w	ip, ip, #7
 800b37c:	eb04 04e7 	add.w	r4, r4, r7, asr #3
 800b380:	19ad      	adds	r5, r5, r6
 800b382:	4461      	add	r1, ip
 800b384:	f007 0707 	and.w	r7, r7, #7
 800b388:	2d00      	cmp	r5, #0
 800b38a:	dd74      	ble.n	800b476 <LCD__DrawBitmap_1bpp+0x1a6>
 800b38c:	7c46      	ldrb	r6, [r0, #17]
 800b38e:	483d      	ldr	r0, [pc, #244]	; (800b484 <LCD__DrawBitmap_1bpp+0x1b4>)
 800b390:	f850 0026 	ldr.w	r0, [r0, r6, lsl #2]
 800b394:	68c6      	ldr	r6, [r0, #12]
 800b396:	9300      	str	r3, [sp, #0]
 800b398:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800b39a:	9403      	str	r4, [sp, #12]
 800b39c:	9301      	str	r3, [sp, #4]
 800b39e:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 800b3a0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800b3a2:	9704      	str	r7, [sp, #16]
 800b3a4:	9302      	str	r3, [sp, #8]
 800b3a6:	9405      	str	r4, [sp, #20]
 800b3a8:	6874      	ldr	r4, [r6, #4]
 800b3aa:	462b      	mov	r3, r5
 800b3ac:	47a0      	blx	r4
 800b3ae:	e062      	b.n	800b476 <LCD__DrawBitmap_1bpp+0x1a6>
 800b3b0:	981a      	ldr	r0, [sp, #104]	; 0x68
 800b3b2:	f1c0 0208 	rsb	r2, r0, #8
 800b3b6:	920c      	str	r2, [sp, #48]	; 0x30
 800b3b8:	4637      	mov	r7, r6
 800b3ba:	455e      	cmp	r6, fp
 800b3bc:	da5b      	bge.n	800b476 <LCD__DrawBitmap_1bpp+0x1a6>
 800b3be:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800b3c0:	4a2f      	ldr	r2, [pc, #188]	; (800b480 <LCD__DrawBitmap_1bpp+0x1b0>)
 800b3c2:	eb08 0103 	add.w	r1, r8, r3
 800b3c6:	1e48      	subs	r0, r1, #1
 800b3c8:	6813      	ldr	r3, [r2, #0]
 800b3ca:	900b      	str	r0, [sp, #44]	; 0x2c
 800b3cc:	910a      	str	r1, [sp, #40]	; 0x28
 800b3ce:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 800b3d2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b3d4:	4281      	cmp	r1, r0
 800b3d6:	db48      	blt.n	800b46a <LCD__DrawBitmap_1bpp+0x19a>
 800b3d8:	f9b3 200e 	ldrsh.w	r2, [r3, #14]
 800b3dc:	4590      	cmp	r8, r2
 800b3de:	dc44      	bgt.n	800b46a <LCD__DrawBitmap_1bpp+0x19a>
 800b3e0:	f04f 0900 	mov.w	r9, #0
 800b3e4:	f8dd a020 	ldr.w	sl, [sp, #32]
 800b3e8:	9409      	str	r4, [sp, #36]	; 0x24
 800b3ea:	46cc      	mov	ip, r9
 800b3ec:	45a9      	cmp	r9, r5
 800b3ee:	da3c      	bge.n	800b46a <LCD__DrawBitmap_1bpp+0x19a>
 800b3f0:	f1bc 0f00 	cmp.w	ip, #0
 800b3f4:	d105      	bne.n	800b402 <LCD__DrawBitmap_1bpp+0x132>
 800b3f6:	9809      	ldr	r0, [sp, #36]	; 0x24
 800b3f8:	f810 7b01 	ldrb.w	r7, [r0], #1
 800b3fc:	f04f 0c08 	mov.w	ip, #8
 800b400:	9009      	str	r0, [sp, #36]	; 0x24
 800b402:	990c      	ldr	r1, [sp, #48]	; 0x30
 800b404:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800b406:	fa47 f201 	asr.w	r2, r7, r1
 800b40a:	f012 0fff 	tst.w	r2, #255	; 0xff
 800b40e:	fa07 f703 	lsl.w	r7, r7, r3
 800b412:	b2ff      	uxtb	r7, r7
 800b414:	ebc3 0c0c 	rsb	ip, r3, ip
 800b418:	d106      	bne.n	800b428 <LCD__DrawBitmap_1bpp+0x158>
 800b41a:	4819      	ldr	r0, [pc, #100]	; (800b480 <LCD__DrawBitmap_1bpp+0x1b0>)
 800b41c:	6801      	ldr	r1, [r0, #0]
 800b41e:	7c0b      	ldrb	r3, [r1, #16]
 800b420:	f003 0002 	and.w	r0, r3, #2
 800b424:	b2c1      	uxtb	r1, r0
 800b426:	b9d9      	cbnz	r1, 800b460 <LCD__DrawBitmap_1bpp+0x190>
 800b428:	4b15      	ldr	r3, [pc, #84]	; (800b480 <LCD__DrawBitmap_1bpp+0x1b0>)
 800b42a:	6818      	ldr	r0, [r3, #0]
 800b42c:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 800b42e:	981d      	ldr	r0, [sp, #116]	; 0x74
 800b430:	6819      	ldr	r1, [r3, #0]
 800b432:	b2d2      	uxtb	r2, r2
 800b434:	910d      	str	r1, [sp, #52]	; 0x34
 800b436:	b108      	cbz	r0, 800b43c <LCD__DrawBitmap_1bpp+0x16c>
 800b438:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 800b43c:	601a      	str	r2, [r3, #0]
 800b43e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800b440:	f8cd c01c 	str.w	ip, [sp, #28]
 800b444:	1e5a      	subs	r2, r3, #1
 800b446:	4650      	mov	r0, sl
 800b448:	4641      	mov	r1, r8
 800b44a:	4452      	add	r2, sl
 800b44c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b44e:	f7ff ff15 	bl	800b27c <LCD_FillRect>
 800b452:	490b      	ldr	r1, [pc, #44]	; (800b480 <LCD__DrawBitmap_1bpp+0x1b0>)
 800b454:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800b456:	6808      	ldr	r0, [r1, #0]
 800b458:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800b45c:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 800b45e:	601a      	str	r2, [r3, #0]
 800b460:	9918      	ldr	r1, [sp, #96]	; 0x60
 800b462:	f109 0901 	add.w	r9, r9, #1
 800b466:	448a      	add	sl, r1
 800b468:	e7c0      	b.n	800b3ec <LCD__DrawBitmap_1bpp+0x11c>
 800b46a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800b46c:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 800b470:	3601      	adds	r6, #1
 800b472:	18e4      	adds	r4, r4, r3
 800b474:	e7a1      	b.n	800b3ba <LCD__DrawBitmap_1bpp+0xea>
 800b476:	b00f      	add	sp, #60	; 0x3c
 800b478:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b47c:	2000e65c 	.word	0x2000e65c
 800b480:	20000278 	.word	0x20000278
 800b484:	2000e67c 	.word	0x2000e67c

0800b488 <LCD_DrawBitmap>:
 800b488:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b48c:	f8df c210 	ldr.w	ip, [pc, #528]	; 800b6a0 <LCD_DrawBitmap+0x218>
 800b490:	b091      	sub	sp, #68	; 0x44
 800b492:	f8dc c000 	ldr.w	ip, [ip]
 800b496:	9207      	str	r2, [sp, #28]
 800b498:	4605      	mov	r5, r0
 800b49a:	4688      	mov	r8, r1
 800b49c:	469b      	mov	fp, r3
 800b49e:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 800b4a0:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 800b4a2:	f1bc 0f00 	cmp.w	ip, #0
 800b4a6:	d00c      	beq.n	800b4c2 <LCD_DrawBitmap+0x3a>
 800b4a8:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800b4aa:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800b4ac:	9500      	str	r5, [sp, #0]
 800b4ae:	9701      	str	r7, [sp, #4]
 800b4b0:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 800b4b2:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 800b4b4:	9602      	str	r6, [sp, #8]
 800b4b6:	9503      	str	r5, [sp, #12]
 800b4b8:	9404      	str	r4, [sp, #16]
 800b4ba:	9705      	str	r7, [sp, #20]
 800b4bc:	f8dc 4000 	ldr.w	r4, [ip]
 800b4c0:	e081      	b.n	800b5c6 <LCD_DrawBitmap+0x13e>
 800b4c2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800b4c4:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800b4c6:	433b      	orrs	r3, r7
 800b4c8:	2b01      	cmp	r3, #1
 800b4ca:	d17e      	bne.n	800b5ca <LCD_DrawBitmap+0x142>
 800b4cc:	4872      	ldr	r0, [pc, #456]	; (800b698 <LCD_DrawBitmap+0x210>)
 800b4ce:	6800      	ldr	r0, [r0, #0]
 800b4d0:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800b4d4:	1a53      	subs	r3, r2, r1
 800b4d6:	2b00      	cmp	r3, #0
 800b4d8:	dd08      	ble.n	800b4ec <LCD_DrawBitmap+0x64>
 800b4da:	ebc3 010b 	rsb	r1, r3, fp
 800b4de:	2900      	cmp	r1, #0
 800b4e0:	f340 80d6 	ble.w	800b690 <LCD_DrawBitmap+0x208>
 800b4e4:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800b4e6:	fb03 4407 	mla	r4, r3, r7, r4
 800b4ea:	e001      	b.n	800b4f0 <LCD_DrawBitmap+0x68>
 800b4ec:	4659      	mov	r1, fp
 800b4ee:	4642      	mov	r2, r8
 800b4f0:	eb08 0c0b 	add.w	ip, r8, fp
 800b4f4:	f9b0 300e 	ldrsh.w	r3, [r0, #14]
 800b4f8:	f10c 38ff 	add.w	r8, ip, #4294967295
 800b4fc:	ebc3 0808 	rsb	r8, r3, r8
 800b500:	f1b8 0f00 	cmp.w	r8, #0
 800b504:	dd04      	ble.n	800b510 <LCD_DrawBitmap+0x88>
 800b506:	ebc8 0101 	rsb	r1, r8, r1
 800b50a:	2900      	cmp	r1, #0
 800b50c:	f340 80c0 	ble.w	800b690 <LCD_DrawBitmap+0x208>
 800b510:	9f07      	ldr	r7, [sp, #28]
 800b512:	f9b0 c00c 	ldrsh.w	ip, [r0, #12]
 800b516:	19eb      	adds	r3, r5, r7
 800b518:	3b01      	subs	r3, #1
 800b51a:	ebcc 0303 	rsb	r3, ip, r3
 800b51e:	2b00      	cmp	r3, #0
 800b520:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 800b524:	bfc4      	itt	gt
 800b526:	ebc3 0707 	rsbgt	r7, r3, r7
 800b52a:	9707      	strgt	r7, [sp, #28]
 800b52c:	4565      	cmp	r5, ip
 800b52e:	da33      	bge.n	800b598 <LCD_DrawBitmap+0x110>
 800b530:	9f07      	ldr	r7, [sp, #28]
 800b532:	ebc5 030c 	rsb	r3, r5, ip
 800b536:	1aff      	subs	r7, r7, r3
 800b538:	2e08      	cmp	r6, #8
 800b53a:	9707      	str	r7, [sp, #28]
 800b53c:	d027      	beq.n	800b58e <LCD_DrawBitmap+0x106>
 800b53e:	dc0d      	bgt.n	800b55c <LCD_DrawBitmap+0xd4>
 800b540:	2e02      	cmp	r6, #2
 800b542:	d014      	beq.n	800b56e <LCD_DrawBitmap+0xe6>
 800b544:	2e04      	cmp	r6, #4
 800b546:	d01a      	beq.n	800b57e <LCD_DrawBitmap+0xf6>
 800b548:	2e01      	cmp	r6, #1
 800b54a:	d126      	bne.n	800b59a <LCD_DrawBitmap+0x112>
 800b54c:	f023 0c07 	bic.w	ip, r3, #7
 800b550:	eb04 04e3 	add.w	r4, r4, r3, asr #3
 800b554:	4465      	add	r5, ip
 800b556:	f003 0307 	and.w	r3, r3, #7
 800b55a:	e01e      	b.n	800b59a <LCD_DrawBitmap+0x112>
 800b55c:	2e18      	cmp	r6, #24
 800b55e:	d018      	beq.n	800b592 <LCD_DrawBitmap+0x10a>
 800b560:	2e20      	cmp	r6, #32
 800b562:	d016      	beq.n	800b592 <LCD_DrawBitmap+0x10a>
 800b564:	2e10      	cmp	r6, #16
 800b566:	d118      	bne.n	800b59a <LCD_DrawBitmap+0x112>
 800b568:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800b56c:	e013      	b.n	800b596 <LCD_DrawBitmap+0x10e>
 800b56e:	f023 0c03 	bic.w	ip, r3, #3
 800b572:	eb04 04a3 	add.w	r4, r4, r3, asr #2
 800b576:	4465      	add	r5, ip
 800b578:	f003 0303 	and.w	r3, r3, #3
 800b57c:	e00d      	b.n	800b59a <LCD_DrawBitmap+0x112>
 800b57e:	f023 0701 	bic.w	r7, r3, #1
 800b582:	eb04 0463 	add.w	r4, r4, r3, asr #1
 800b586:	19ed      	adds	r5, r5, r7
 800b588:	f003 0301 	and.w	r3, r3, #1
 800b58c:	e005      	b.n	800b59a <LCD_DrawBitmap+0x112>
 800b58e:	18e4      	adds	r4, r4, r3
 800b590:	e001      	b.n	800b596 <LCD_DrawBitmap+0x10e>
 800b592:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800b596:	4665      	mov	r5, ip
 800b598:	2300      	movs	r3, #0
 800b59a:	9f07      	ldr	r7, [sp, #28]
 800b59c:	2f00      	cmp	r7, #0
 800b59e:	dd77      	ble.n	800b690 <LCD_DrawBitmap+0x208>
 800b5a0:	f890 e011 	ldrb.w	lr, [r0, #17]
 800b5a4:	483d      	ldr	r0, [pc, #244]	; (800b69c <LCD_DrawBitmap+0x214>)
 800b5a6:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800b5a8:	f850 002e 	ldr.w	r0, [r0, lr, lsl #2]
 800b5ac:	f8d0 e00c 	ldr.w	lr, [r0, #12]
 800b5b0:	9403      	str	r4, [sp, #12]
 800b5b2:	e88d 0042 	stmia.w	sp, {r1, r6}
 800b5b6:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
 800b5b8:	9304      	str	r3, [sp, #16]
 800b5ba:	9702      	str	r7, [sp, #8]
 800b5bc:	9405      	str	r4, [sp, #20]
 800b5be:	f8de 4004 	ldr.w	r4, [lr, #4]
 800b5c2:	9b07      	ldr	r3, [sp, #28]
 800b5c4:	4629      	mov	r1, r5
 800b5c6:	47a0      	blx	r4
 800b5c8:	e062      	b.n	800b690 <LCD_DrawBitmap+0x208>
 800b5ca:	f1c6 0708 	rsb	r7, r6, #8
 800b5ce:	970e      	str	r7, [sp, #56]	; 0x38
 800b5d0:	46e0      	mov	r8, ip
 800b5d2:	460f      	mov	r7, r1
 800b5d4:	45dc      	cmp	ip, fp
 800b5d6:	da5b      	bge.n	800b690 <LCD_DrawBitmap+0x208>
 800b5d8:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800b5da:	4b2f      	ldr	r3, [pc, #188]	; (800b698 <LCD_DrawBitmap+0x210>)
 800b5dc:	1878      	adds	r0, r7, r1
 800b5de:	1e42      	subs	r2, r0, #1
 800b5e0:	900c      	str	r0, [sp, #48]	; 0x30
 800b5e2:	6818      	ldr	r0, [r3, #0]
 800b5e4:	920d      	str	r2, [sp, #52]	; 0x34
 800b5e6:	990d      	ldr	r1, [sp, #52]	; 0x34
 800b5e8:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800b5ec:	4291      	cmp	r1, r2
 800b5ee:	db49      	blt.n	800b684 <LCD_DrawBitmap+0x1fc>
 800b5f0:	f9b0 300e 	ldrsh.w	r3, [r0, #14]
 800b5f4:	429f      	cmp	r7, r3
 800b5f6:	dc45      	bgt.n	800b684 <LCD_DrawBitmap+0x1fc>
 800b5f8:	f04f 0900 	mov.w	r9, #0
 800b5fc:	940b      	str	r4, [sp, #44]	; 0x2c
 800b5fe:	46aa      	mov	sl, r5
 800b600:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800b604:	9807      	ldr	r0, [sp, #28]
 800b606:	4581      	cmp	r9, r0
 800b608:	da3c      	bge.n	800b684 <LCD_DrawBitmap+0x1fc>
 800b60a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b60c:	b92a      	cbnz	r2, 800b61a <LCD_DrawBitmap+0x192>
 800b60e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b610:	f811 8b01 	ldrb.w	r8, [r1], #1
 800b614:	2308      	movs	r3, #8
 800b616:	910b      	str	r1, [sp, #44]	; 0x2c
 800b618:	930a      	str	r3, [sp, #40]	; 0x28
 800b61a:	980e      	ldr	r0, [sp, #56]	; 0x38
 800b61c:	990a      	ldr	r1, [sp, #40]	; 0x28
 800b61e:	fa48 f200 	asr.w	r2, r8, r0
 800b622:	1b8b      	subs	r3, r1, r6
 800b624:	fa08 f806 	lsl.w	r8, r8, r6
 800b628:	f012 0fff 	tst.w	r2, #255	; 0xff
 800b62c:	fa5f f888 	uxtb.w	r8, r8
 800b630:	930a      	str	r3, [sp, #40]	; 0x28
 800b632:	d106      	bne.n	800b642 <LCD_DrawBitmap+0x1ba>
 800b634:	4818      	ldr	r0, [pc, #96]	; (800b698 <LCD_DrawBitmap+0x210>)
 800b636:	6801      	ldr	r1, [r0, #0]
 800b638:	7c0b      	ldrb	r3, [r1, #16]
 800b63a:	f003 0002 	and.w	r0, r3, #2
 800b63e:	b2c1      	uxtb	r1, r0
 800b640:	b9d9      	cbnz	r1, 800b67a <LCD_DrawBitmap+0x1f2>
 800b642:	4b15      	ldr	r3, [pc, #84]	; (800b698 <LCD_DrawBitmap+0x210>)
 800b644:	6818      	ldr	r0, [r3, #0]
 800b646:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 800b648:	981f      	ldr	r0, [sp, #124]	; 0x7c
 800b64a:	6819      	ldr	r1, [r3, #0]
 800b64c:	b2d2      	uxtb	r2, r2
 800b64e:	910f      	str	r1, [sp, #60]	; 0x3c
 800b650:	b108      	cbz	r0, 800b656 <LCD_DrawBitmap+0x1ce>
 800b652:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 800b656:	601a      	str	r2, [r3, #0]
 800b658:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800b65a:	f8cd c020 	str.w	ip, [sp, #32]
 800b65e:	1e5a      	subs	r2, r3, #1
 800b660:	4650      	mov	r0, sl
 800b662:	4639      	mov	r1, r7
 800b664:	4452      	add	r2, sl
 800b666:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b668:	f7ff fe08 	bl	800b27c <LCD_FillRect>
 800b66c:	490a      	ldr	r1, [pc, #40]	; (800b698 <LCD_DrawBitmap+0x210>)
 800b66e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800b670:	6808      	ldr	r0, [r1, #0]
 800b672:	f8dd c020 	ldr.w	ip, [sp, #32]
 800b676:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 800b678:	601a      	str	r2, [r3, #0]
 800b67a:	991a      	ldr	r1, [sp, #104]	; 0x68
 800b67c:	f109 0901 	add.w	r9, r9, #1
 800b680:	448a      	add	sl, r1
 800b682:	e7bf      	b.n	800b604 <LCD_DrawBitmap+0x17c>
 800b684:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800b686:	f10c 0c01 	add.w	ip, ip, #1
 800b68a:	19e4      	adds	r4, r4, r7
 800b68c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 800b68e:	e7a1      	b.n	800b5d4 <LCD_DrawBitmap+0x14c>
 800b690:	b011      	add	sp, #68	; 0x44
 800b692:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b696:	bf00      	nop
 800b698:	20000278 	.word	0x20000278
 800b69c:	2000e67c 	.word	0x2000e67c
 800b6a0:	2000e65c 	.word	0x2000e65c

0800b6a4 <LCD_SetClipRectMax>:
 800b6a4:	b508      	push	{r3, lr}
 800b6a6:	4b05      	ldr	r3, [pc, #20]	; (800b6bc <LCD_SetClipRectMax+0x18>)
 800b6a8:	4805      	ldr	r0, [pc, #20]	; (800b6c0 <LCD_SetClipRectMax+0x1c>)
 800b6aa:	6819      	ldr	r1, [r3, #0]
 800b6ac:	7c4a      	ldrb	r2, [r1, #17]
 800b6ae:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 800b6b2:	68c3      	ldr	r3, [r0, #12]
 800b6b4:	3108      	adds	r1, #8
 800b6b6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800b6b8:	4790      	blx	r2
 800b6ba:	bd08      	pop	{r3, pc}
 800b6bc:	20000278 	.word	0x20000278
 800b6c0:	2000e67c 	.word	0x2000e67c

0800b6c4 <emWin_LCD_Init>:
 800b6c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b6c6:	f7ff ffed 	bl	800b6a4 <LCD_SetClipRectMax>
 800b6ca:	f005 fdb5 	bl	8011238 <LCD_InitColors>
 800b6ce:	4604      	mov	r4, r0
 800b6d0:	2800      	cmp	r0, #0
 800b6d2:	d13c      	bne.n	800b74e <emWin_LCD_Init+0x8a>
 800b6d4:	4605      	mov	r5, r0
 800b6d6:	4628      	mov	r0, r5
 800b6d8:	f001 fd0c 	bl	800d0f4 <GUI_DEVICE__GetpDriver>
 800b6dc:	9001      	str	r0, [sp, #4]
 800b6de:	b148      	cbz	r0, 800b6f4 <emWin_LCD_Init+0x30>
 800b6e0:	68c3      	ldr	r3, [r0, #12]
 800b6e2:	210c      	movs	r1, #12
 800b6e4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800b6e6:	a801      	add	r0, sp, #4
 800b6e8:	4790      	blx	r2
 800b6ea:	4601      	mov	r1, r0
 800b6ec:	b370      	cbz	r0, 800b74c <emWin_LCD_Init+0x88>
 800b6ee:	9801      	ldr	r0, [sp, #4]
 800b6f0:	4788      	blx	r1
 800b6f2:	4304      	orrs	r4, r0
 800b6f4:	3501      	adds	r5, #1
 800b6f6:	2d02      	cmp	r5, #2
 800b6f8:	d1ed      	bne.n	800b6d6 <emWin_LCD_Init+0x12>
 800b6fa:	bb44      	cbnz	r4, 800b74e <emWin_LCD_Init+0x8a>
 800b6fc:	f005 fde0 	bl	80112c0 <LCD_InitLUT>
 800b700:	2401      	movs	r4, #1
 800b702:	4620      	mov	r0, r4
 800b704:	f001 fcf6 	bl	800d0f4 <GUI_DEVICE__GetpDriver>
 800b708:	9001      	str	r0, [sp, #4]
 800b70a:	b1d0      	cbz	r0, 800b742 <emWin_LCD_Init+0x7e>
 800b70c:	4620      	mov	r0, r4
 800b70e:	f000 fe77 	bl	800c400 <GUI_SelectLayer>
 800b712:	2004      	movs	r0, #4
 800b714:	f7ff fd30 	bl	800b178 <LCD_SetDrawMode>
 800b718:	f643 72ff 	movw	r2, #16383	; 0x3fff
 800b71c:	2000      	movs	r0, #0
 800b71e:	4601      	mov	r1, r0
 800b720:	4613      	mov	r3, r2
 800b722:	f7ff fdab 	bl	800b27c <LCD_FillRect>
 800b726:	2000      	movs	r0, #0
 800b728:	f7ff fd26 	bl	800b178 <LCD_SetDrawMode>
 800b72c:	a802      	add	r0, sp, #8
 800b72e:	210e      	movs	r1, #14
 800b730:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 800b734:	68da      	ldr	r2, [r3, #12]
 800b736:	6a53      	ldr	r3, [r2, #36]	; 0x24
 800b738:	4798      	blx	r3
 800b73a:	4601      	mov	r1, r0
 800b73c:	b108      	cbz	r0, 800b742 <emWin_LCD_Init+0x7e>
 800b73e:	9801      	ldr	r0, [sp, #4]
 800b740:	4788      	blx	r1
 800b742:	f114 34ff 	adds.w	r4, r4, #4294967295
 800b746:	d2dc      	bcs.n	800b702 <emWin_LCD_Init+0x3e>
 800b748:	2400      	movs	r4, #0
 800b74a:	e000      	b.n	800b74e <emWin_LCD_Init+0x8a>
 800b74c:	2401      	movs	r4, #1
 800b74e:	4620      	mov	r0, r4
 800b750:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
	...

0800b754 <LCD_Color2Index>:
 800b754:	b508      	push	{r3, lr}
 800b756:	4b05      	ldr	r3, [pc, #20]	; (800b76c <LCD_Color2Index+0x18>)
 800b758:	6819      	ldr	r1, [r3, #0]
 800b75a:	4b05      	ldr	r3, [pc, #20]	; (800b770 <LCD_Color2Index+0x1c>)
 800b75c:	7c4a      	ldrb	r2, [r1, #17]
 800b75e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800b762:	690a      	ldr	r2, [r1, #16]
 800b764:	6813      	ldr	r3, [r2, #0]
 800b766:	4798      	blx	r3
 800b768:	bd08      	pop	{r3, pc}
 800b76a:	bf00      	nop
 800b76c:	20000278 	.word	0x20000278
 800b770:	2000e67c 	.word	0x2000e67c

0800b774 <LCD_Index2Color>:
 800b774:	b508      	push	{r3, lr}
 800b776:	4b05      	ldr	r3, [pc, #20]	; (800b78c <LCD_Index2Color+0x18>)
 800b778:	6819      	ldr	r1, [r3, #0]
 800b77a:	4b05      	ldr	r3, [pc, #20]	; (800b790 <LCD_Index2Color+0x1c>)
 800b77c:	7c4a      	ldrb	r2, [r1, #17]
 800b77e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800b782:	690a      	ldr	r2, [r1, #16]
 800b784:	6853      	ldr	r3, [r2, #4]
 800b786:	4798      	blx	r3
 800b788:	bd08      	pop	{r3, pc}
 800b78a:	bf00      	nop
 800b78c:	20000278 	.word	0x20000278
 800b790:	2000e67c 	.word	0x2000e67c

0800b794 <LCD_SetColorIndex>:
 800b794:	4b05      	ldr	r3, [pc, #20]	; (800b7ac <LCD_SetColorIndex+0x18>)
 800b796:	6819      	ldr	r1, [r3, #0]
 800b798:	7c0a      	ldrb	r2, [r1, #16]
 800b79a:	f002 0304 	and.w	r3, r2, #4
 800b79e:	b2da      	uxtb	r2, r3
 800b7a0:	b10a      	cbz	r2, 800b7a6 <LCD_SetColorIndex+0x12>
 800b7a2:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800b7a4:	e000      	b.n	800b7a8 <LCD_SetColorIndex+0x14>
 800b7a6:	6bc9      	ldr	r1, [r1, #60]	; 0x3c
 800b7a8:	6008      	str	r0, [r1, #0]
 800b7aa:	4770      	bx	lr
 800b7ac:	20000278 	.word	0x20000278

0800b7b0 <_SetColor>:
 800b7b0:	b508      	push	{r3, lr}
 800b7b2:	4b06      	ldr	r3, [pc, #24]	; (800b7cc <_SetColor+0x1c>)
 800b7b4:	681b      	ldr	r3, [r3, #0]
 800b7b6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800b7b8:	4281      	cmp	r1, r0
 800b7ba:	d006      	beq.n	800b7ca <_SetColor+0x1a>
 800b7bc:	6318      	str	r0, [r3, #48]	; 0x30
 800b7be:	f7ff ffc9 	bl	800b754 <LCD_Color2Index>
 800b7c2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b7c6:	f7ff bfe5 	b.w	800b794 <LCD_SetColorIndex>
 800b7ca:	bd08      	pop	{r3, pc}
 800b7cc:	20000278 	.word	0x20000278

0800b7d0 <LCD_SetBkColorIndex>:
 800b7d0:	4b05      	ldr	r3, [pc, #20]	; (800b7e8 <LCD_SetBkColorIndex+0x18>)
 800b7d2:	6819      	ldr	r1, [r3, #0]
 800b7d4:	7c0a      	ldrb	r2, [r1, #16]
 800b7d6:	f002 0304 	and.w	r3, r2, #4
 800b7da:	b2da      	uxtb	r2, r3
 800b7dc:	b10a      	cbz	r2, 800b7e2 <LCD_SetBkColorIndex+0x12>
 800b7de:	6bc9      	ldr	r1, [r1, #60]	; 0x3c
 800b7e0:	e000      	b.n	800b7e4 <LCD_SetBkColorIndex+0x14>
 800b7e2:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800b7e4:	6008      	str	r0, [r1, #0]
 800b7e6:	4770      	bx	lr
 800b7e8:	20000278 	.word	0x20000278

0800b7ec <_SetBkColor>:
 800b7ec:	b508      	push	{r3, lr}
 800b7ee:	4b06      	ldr	r3, [pc, #24]	; (800b808 <_SetBkColor+0x1c>)
 800b7f0:	681b      	ldr	r3, [r3, #0]
 800b7f2:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800b7f4:	4281      	cmp	r1, r0
 800b7f6:	d006      	beq.n	800b806 <_SetBkColor+0x1a>
 800b7f8:	6358      	str	r0, [r3, #52]	; 0x34
 800b7fa:	f7ff ffab 	bl	800b754 <LCD_Color2Index>
 800b7fe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b802:	f7ff bfe5 	b.w	800b7d0 <LCD_SetBkColorIndex>
 800b806:	bd08      	pop	{r3, pc}
 800b808:	20000278 	.word	0x20000278

0800b80c <LCD_SetBkColor>:
 800b80c:	b508      	push	{r3, lr}
 800b80e:	4b02      	ldr	r3, [pc, #8]	; (800b818 <LCD_SetBkColor+0xc>)
 800b810:	6819      	ldr	r1, [r3, #0]
 800b812:	684a      	ldr	r2, [r1, #4]
 800b814:	4790      	blx	r2
 800b816:	bd08      	pop	{r3, pc}
 800b818:	20000264 	.word	0x20000264

0800b81c <LCD_SetColor>:
 800b81c:	b508      	push	{r3, lr}
 800b81e:	4b02      	ldr	r3, [pc, #8]	; (800b828 <LCD_SetColor+0xc>)
 800b820:	6819      	ldr	r1, [r3, #0]
 800b822:	680a      	ldr	r2, [r1, #0]
 800b824:	4790      	blx	r2
 800b826:	bd08      	pop	{r3, pc}
 800b828:	20000264 	.word	0x20000264

0800b82c <GUI__strlen>:
 800b82c:	f04f 33ff 	mov.w	r3, #4294967295
 800b830:	b118      	cbz	r0, 800b83a <GUI__strlen+0xe>
 800b832:	3301      	adds	r3, #1
 800b834:	5cc2      	ldrb	r2, [r0, r3]
 800b836:	2a00      	cmp	r2, #0
 800b838:	d1fb      	bne.n	800b832 <GUI__strlen+0x6>
 800b83a:	4618      	mov	r0, r3
 800b83c:	4770      	bx	lr

0800b83e <GUI__memset16>:
 800b83e:	0783      	lsls	r3, r0, #30
 800b840:	b570      	push	{r4, r5, r6, lr}
 800b842:	bf44      	itt	mi
 800b844:	f820 1b02 	strhmi.w	r1, [r0], #2
 800b848:	3a01      	submi	r2, #1
 800b84a:	0853      	lsrs	r3, r2, #1
 800b84c:	d020      	beq.n	800b890 <GUI__memset16+0x52>
 800b84e:	f04f 1501 	mov.w	r5, #65537	; 0x10001
 800b852:	434d      	muls	r5, r1
 800b854:	2b03      	cmp	r3, #3
 800b856:	dc02      	bgt.n	800b85e <GUI__memset16+0x20>
 800b858:	4606      	mov	r6, r0
 800b85a:	461c      	mov	r4, r3
 800b85c:	e011      	b.n	800b882 <GUI__memset16+0x44>
 800b85e:	4604      	mov	r4, r0
 800b860:	461e      	mov	r6, r3
 800b862:	3e04      	subs	r6, #4
 800b864:	6025      	str	r5, [r4, #0]
 800b866:	6065      	str	r5, [r4, #4]
 800b868:	60a5      	str	r5, [r4, #8]
 800b86a:	60e5      	str	r5, [r4, #12]
 800b86c:	3410      	adds	r4, #16
 800b86e:	2e03      	cmp	r6, #3
 800b870:	dcf7      	bgt.n	800b862 <GUI__memset16+0x24>
 800b872:	3b04      	subs	r3, #4
 800b874:	089c      	lsrs	r4, r3, #2
 800b876:	1c66      	adds	r6, r4, #1
 800b878:	eb00 1006 	add.w	r0, r0, r6, lsl #4
 800b87c:	eba3 0384 	sub.w	r3, r3, r4, lsl #2
 800b880:	e7ea      	b.n	800b858 <GUI__memset16+0x1a>
 800b882:	b11c      	cbz	r4, 800b88c <GUI__memset16+0x4e>
 800b884:	f846 5b04 	str.w	r5, [r6], #4
 800b888:	3c01      	subs	r4, #1
 800b88a:	e7fa      	b.n	800b882 <GUI__memset16+0x44>
 800b88c:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800b890:	07d3      	lsls	r3, r2, #31
 800b892:	bf48      	it	mi
 800b894:	8001      	strhmi	r1, [r0, #0]
 800b896:	bd70      	pop	{r4, r5, r6, pc}

0800b898 <GUI__memset>:
 800b898:	b570      	push	{r4, r5, r6, lr}
 800b89a:	b12a      	cbz	r2, 800b8a8 <GUI__memset+0x10>
 800b89c:	0783      	lsls	r3, r0, #30
 800b89e:	d003      	beq.n	800b8a8 <GUI__memset+0x10>
 800b8a0:	f800 1b01 	strb.w	r1, [r0], #1
 800b8a4:	3a01      	subs	r2, #1
 800b8a6:	e7f8      	b.n	800b89a <GUI__memset+0x2>
 800b8a8:	0893      	lsrs	r3, r2, #2
 800b8aa:	d101      	bne.n	800b8b0 <GUI__memset+0x18>
 800b8ac:	1882      	adds	r2, r0, r2
 800b8ae:	e017      	b.n	800b8e0 <GUI__memset+0x48>
 800b8b0:	f04f 3401 	mov.w	r4, #16843009	; 0x1010101
 800b8b4:	f002 0203 	and.w	r2, r2, #3
 800b8b8:	434c      	muls	r4, r1
 800b8ba:	2b03      	cmp	r3, #3
 800b8bc:	dd06      	ble.n	800b8cc <GUI__memset+0x34>
 800b8be:	6004      	str	r4, [r0, #0]
 800b8c0:	6044      	str	r4, [r0, #4]
 800b8c2:	6084      	str	r4, [r0, #8]
 800b8c4:	60c4      	str	r4, [r0, #12]
 800b8c6:	3b04      	subs	r3, #4
 800b8c8:	3010      	adds	r0, #16
 800b8ca:	e7f6      	b.n	800b8ba <GUI__memset+0x22>
 800b8cc:	4605      	mov	r5, r0
 800b8ce:	461e      	mov	r6, r3
 800b8d0:	b11b      	cbz	r3, 800b8da <GUI__memset+0x42>
 800b8d2:	f840 4b04 	str.w	r4, [r0], #4
 800b8d6:	3b01      	subs	r3, #1
 800b8d8:	e7fa      	b.n	800b8d0 <GUI__memset+0x38>
 800b8da:	eb05 0086 	add.w	r0, r5, r6, lsl #2
 800b8de:	e7e5      	b.n	800b8ac <GUI__memset+0x14>
 800b8e0:	4290      	cmp	r0, r2
 800b8e2:	d002      	beq.n	800b8ea <GUI__memset+0x52>
 800b8e4:	f800 1b01 	strb.w	r1, [r0], #1
 800b8e8:	e7fa      	b.n	800b8e0 <GUI__memset+0x48>
 800b8ea:	bd70      	pop	{r4, r5, r6, pc}

0800b8ec <GUI__SetText>:
 800b8ec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b8ee:	6807      	ldr	r7, [r0, #0]
 800b8f0:	4605      	mov	r5, r0
 800b8f2:	4638      	mov	r0, r7
 800b8f4:	460e      	mov	r6, r1
 800b8f6:	f005 fd3b 	bl	8011370 <GUI__strcmp_hp>
 800b8fa:	b908      	cbnz	r0, 800b900 <GUI__SetText+0x14>
 800b8fc:	2000      	movs	r0, #0
 800b8fe:	e02e      	b.n	800b95e <GUI__SetText+0x72>
 800b900:	4630      	mov	r0, r6
 800b902:	f7ff ff93 	bl	800b82c <GUI__strlen>
 800b906:	1c44      	adds	r4, r0, #1
 800b908:	4638      	mov	r0, r7
 800b90a:	f002 f945 	bl	800db98 <GUI_ALLOC_GetSize>
 800b90e:	4284      	cmp	r4, r0
 800b910:	d10f      	bne.n	800b932 <GUI__SetText+0x46>
 800b912:	2c00      	cmp	r4, #0
 800b914:	d0f2      	beq.n	800b8fc <GUI__SetText+0x10>
 800b916:	4638      	mov	r0, r7
 800b918:	f002 f910 	bl	800db3c <GUI_ALLOC_LockH>
 800b91c:	ad02      	add	r5, sp, #8
 800b91e:	4631      	mov	r1, r6
 800b920:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b924:	4622      	mov	r2, r4
 800b926:	f7f4 fc2f 	bl	8000188 <memcpy>
 800b92a:	4628      	mov	r0, r5
 800b92c:	f002 f914 	bl	800db58 <GUI_ALLOC_UnlockH>
 800b930:	e014      	b.n	800b95c <GUI__SetText+0x70>
 800b932:	4620      	mov	r0, r4
 800b934:	f002 fb50 	bl	800dfd8 <GUI_ALLOC_AllocNoInit>
 800b938:	4607      	mov	r7, r0
 800b93a:	2800      	cmp	r0, #0
 800b93c:	d0de      	beq.n	800b8fc <GUI__SetText+0x10>
 800b93e:	f002 f8fd 	bl	800db3c <GUI_ALLOC_LockH>
 800b942:	ac02      	add	r4, sp, #8
 800b944:	4631      	mov	r1, r6
 800b946:	f844 0d04 	str.w	r0, [r4, #-4]!
 800b94a:	f007 fa61 	bl	8012e10 <strcpy>
 800b94e:	4620      	mov	r0, r4
 800b950:	f002 f902 	bl	800db58 <GUI_ALLOC_UnlockH>
 800b954:	4628      	mov	r0, r5
 800b956:	f002 fb43 	bl	800dfe0 <GUI_ALLOC_FreePtr>
 800b95a:	602f      	str	r7, [r5, #0]
 800b95c:	2001      	movs	r0, #1
 800b95e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

0800b960 <GUI__ReduceRect>:
 800b960:	880b      	ldrh	r3, [r1, #0]
 800b962:	b292      	uxth	r2, r2
 800b964:	18d3      	adds	r3, r2, r3
 800b966:	8003      	strh	r3, [r0, #0]
 800b968:	888b      	ldrh	r3, [r1, #4]
 800b96a:	1a9b      	subs	r3, r3, r2
 800b96c:	8083      	strh	r3, [r0, #4]
 800b96e:	884b      	ldrh	r3, [r1, #2]
 800b970:	88c9      	ldrh	r1, [r1, #6]
 800b972:	18d3      	adds	r3, r2, r3
 800b974:	1a8a      	subs	r2, r1, r2
 800b976:	8043      	strh	r3, [r0, #2]
 800b978:	80c2      	strh	r2, [r0, #6]
 800b97a:	4770      	bx	lr

0800b97c <GUI__ManageCacheEx>:
 800b97c:	2801      	cmp	r0, #1
 800b97e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b980:	4604      	mov	r4, r0
 800b982:	460d      	mov	r5, r1
 800b984:	dc5f      	bgt.n	800ba46 <GUI__ManageCacheEx+0xca>
 800b986:	2901      	cmp	r1, #1
 800b988:	d004      	beq.n	800b994 <GUI__ManageCacheEx+0x18>
 800b98a:	2902      	cmp	r1, #2
 800b98c:	d020      	beq.n	800b9d0 <GUI__ManageCacheEx+0x54>
 800b98e:	2900      	cmp	r1, #0
 800b990:	d034      	beq.n	800b9fc <GUI__ManageCacheEx+0x80>
 800b992:	e058      	b.n	800ba46 <GUI__ManageCacheEx+0xca>
 800b994:	4e2d      	ldr	r6, [pc, #180]	; (800ba4c <GUI__ManageCacheEx+0xd0>)
 800b996:	f856 7020 	ldr.w	r7, [r6, r0, lsl #2]
 800b99a:	b9af      	cbnz	r7, 800b9c8 <GUI__ManageCacheEx+0x4c>
 800b99c:	f001 fbaa 	bl	800d0f4 <GUI_DEVICE__GetpDriver>
 800b9a0:	9001      	str	r0, [sp, #4]
 800b9a2:	2800      	cmp	r0, #0
 800b9a4:	d04f      	beq.n	800ba46 <GUI__ManageCacheEx+0xca>
 800b9a6:	68c2      	ldr	r2, [r0, #12]
 800b9a8:	210d      	movs	r1, #13
 800b9aa:	6a53      	ldr	r3, [r2, #36]	; 0x24
 800b9ac:	a801      	add	r0, sp, #4
 800b9ae:	4798      	blx	r3
 800b9b0:	4602      	mov	r2, r0
 800b9b2:	2800      	cmp	r0, #0
 800b9b4:	d047      	beq.n	800ba46 <GUI__ManageCacheEx+0xca>
 800b9b6:	4629      	mov	r1, r5
 800b9b8:	9801      	ldr	r0, [sp, #4]
 800b9ba:	4790      	blx	r2
 800b9bc:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 800b9c0:	1c41      	adds	r1, r0, #1
 800b9c2:	f846 1024 	str.w	r1, [r6, r4, lsl #2]
 800b9c6:	e017      	b.n	800b9f8 <GUI__ManageCacheEx+0x7c>
 800b9c8:	3701      	adds	r7, #1
 800b9ca:	f846 7020 	str.w	r7, [r6, r0, lsl #2]
 800b9ce:	e03a      	b.n	800ba46 <GUI__ManageCacheEx+0xca>
 800b9d0:	f001 fb90 	bl	800d0f4 <GUI_DEVICE__GetpDriver>
 800b9d4:	9001      	str	r0, [sp, #4]
 800b9d6:	2800      	cmp	r0, #0
 800b9d8:	d035      	beq.n	800ba46 <GUI__ManageCacheEx+0xca>
 800b9da:	68c4      	ldr	r4, [r0, #12]
 800b9dc:	210d      	movs	r1, #13
 800b9de:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b9e0:	a801      	add	r0, sp, #4
 800b9e2:	4798      	blx	r3
 800b9e4:	4604      	mov	r4, r0
 800b9e6:	2800      	cmp	r0, #0
 800b9e8:	d02d      	beq.n	800ba46 <GUI__ManageCacheEx+0xca>
 800b9ea:	4819      	ldr	r0, [pc, #100]	; (800ba50 <GUI__ManageCacheEx+0xd4>)
 800b9ec:	6801      	ldr	r1, [r0, #0]
 800b9ee:	b101      	cbz	r1, 800b9f2 <GUI__ManageCacheEx+0x76>
 800b9f0:	4788      	blx	r1
 800b9f2:	9801      	ldr	r0, [sp, #4]
 800b9f4:	2102      	movs	r1, #2
 800b9f6:	47a0      	blx	r4
 800b9f8:	2000      	movs	r0, #0
 800b9fa:	e025      	b.n	800ba48 <GUI__ManageCacheEx+0xcc>
 800b9fc:	4b13      	ldr	r3, [pc, #76]	; (800ba4c <GUI__ManageCacheEx+0xd0>)
 800b9fe:	f853 1020 	ldr.w	r1, [r3, r0, lsl #2]
 800ba02:	2901      	cmp	r1, #1
 800ba04:	d001      	beq.n	800ba0a <GUI__ManageCacheEx+0x8e>
 800ba06:	2001      	movs	r0, #1
 800ba08:	e014      	b.n	800ba34 <GUI__ManageCacheEx+0xb8>
 800ba0a:	f001 fb73 	bl	800d0f4 <GUI_DEVICE__GetpDriver>
 800ba0e:	9001      	str	r0, [sp, #4]
 800ba10:	2800      	cmp	r0, #0
 800ba12:	d0f8      	beq.n	800ba06 <GUI__ManageCacheEx+0x8a>
 800ba14:	68c0      	ldr	r0, [r0, #12]
 800ba16:	210d      	movs	r1, #13
 800ba18:	6a42      	ldr	r2, [r0, #36]	; 0x24
 800ba1a:	a801      	add	r0, sp, #4
 800ba1c:	4790      	blx	r2
 800ba1e:	4605      	mov	r5, r0
 800ba20:	2800      	cmp	r0, #0
 800ba22:	d0f0      	beq.n	800ba06 <GUI__ManageCacheEx+0x8a>
 800ba24:	4b0a      	ldr	r3, [pc, #40]	; (800ba50 <GUI__ManageCacheEx+0xd4>)
 800ba26:	6819      	ldr	r1, [r3, #0]
 800ba28:	b101      	cbz	r1, 800ba2c <GUI__ManageCacheEx+0xb0>
 800ba2a:	4788      	blx	r1
 800ba2c:	9801      	ldr	r0, [sp, #4]
 800ba2e:	2100      	movs	r1, #0
 800ba30:	47a8      	blx	r5
 800ba32:	2000      	movs	r0, #0
 800ba34:	4b05      	ldr	r3, [pc, #20]	; (800ba4c <GUI__ManageCacheEx+0xd0>)
 800ba36:	f853 2024 	ldr.w	r2, [r3, r4, lsl #2]
 800ba3a:	2a00      	cmp	r2, #0
 800ba3c:	bf18      	it	ne
 800ba3e:	3a01      	subne	r2, #1
 800ba40:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 800ba44:	e000      	b.n	800ba48 <GUI__ManageCacheEx+0xcc>
 800ba46:	2001      	movs	r0, #1
 800ba48:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800ba4a:	bf00      	nop
 800ba4c:	2000e068 	.word	0x2000e068
 800ba50:	2000e064 	.word	0x2000e064

0800ba54 <GUI__ManageCache>:
 800ba54:	4b02      	ldr	r3, [pc, #8]	; (800ba60 <GUI__ManageCache+0xc>)
 800ba56:	4601      	mov	r1, r0
 800ba58:	6818      	ldr	r0, [r3, #0]
 800ba5a:	7c40      	ldrb	r0, [r0, #17]
 800ba5c:	f7ff bf8e 	b.w	800b97c <GUI__ManageCacheEx>
 800ba60:	20000278 	.word	0x20000278

0800ba64 <GUI__IntersectRects>:
 800ba64:	b570      	push	{r4, r5, r6, lr}
 800ba66:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800ba6a:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800ba6e:	f9b2 3000 	ldrsh.w	r3, [r2]
 800ba72:	f9b1 4000 	ldrsh.w	r4, [r1]
 800ba76:	42b5      	cmp	r5, r6
 800ba78:	bfa8      	it	ge
 800ba7a:	462e      	movge	r6, r5
 800ba7c:	429c      	cmp	r4, r3
 800ba7e:	bfb8      	it	lt
 800ba80:	461c      	movlt	r4, r3
 800ba82:	f9b2 5004 	ldrsh.w	r5, [r2, #4]
 800ba86:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 800ba8a:	b2b3      	uxth	r3, r6
 800ba8c:	f9b1 6004 	ldrsh.w	r6, [r1, #4]
 800ba90:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 800ba94:	8043      	strh	r3, [r0, #2]
 800ba96:	42ae      	cmp	r6, r5
 800ba98:	bfb8      	it	lt
 800ba9a:	4635      	movlt	r5, r6
 800ba9c:	b2a4      	uxth	r4, r4
 800ba9e:	b2ad      	uxth	r5, r5
 800baa0:	4291      	cmp	r1, r2
 800baa2:	bfb8      	it	lt
 800baa4:	460a      	movlt	r2, r1
 800baa6:	8004      	strh	r4, [r0, #0]
 800baa8:	8085      	strh	r5, [r0, #4]
 800baaa:	b224      	sxth	r4, r4
 800baac:	b22d      	sxth	r5, r5
 800baae:	b291      	uxth	r1, r2
 800bab0:	42a5      	cmp	r5, r4
 800bab2:	80c1      	strh	r1, [r0, #6]
 800bab4:	db06      	blt.n	800bac4 <GUI__IntersectRects+0x60>
 800bab6:	b208      	sxth	r0, r1
 800bab8:	b21b      	sxth	r3, r3
 800baba:	4298      	cmp	r0, r3
 800babc:	bfb4      	ite	lt
 800babe:	2000      	movlt	r0, #0
 800bac0:	2001      	movge	r0, #1
 800bac2:	bd70      	pop	{r4, r5, r6, pc}
 800bac4:	2000      	movs	r0, #0
 800bac6:	bd70      	pop	{r4, r5, r6, pc}

0800bac8 <GUI__IntersectRect>:
 800bac8:	880b      	ldrh	r3, [r1, #0]
 800baca:	b510      	push	{r4, lr}
 800bacc:	f9b0 4000 	ldrsh.w	r4, [r0]
 800bad0:	b21a      	sxth	r2, r3
 800bad2:	4294      	cmp	r4, r2
 800bad4:	bfb8      	it	lt
 800bad6:	8003      	strhlt	r3, [r0, #0]
 800bad8:	884b      	ldrh	r3, [r1, #2]
 800bada:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800bade:	b21a      	sxth	r2, r3
 800bae0:	4294      	cmp	r4, r2
 800bae2:	bfb8      	it	lt
 800bae4:	8043      	strhlt	r3, [r0, #2]
 800bae6:	888b      	ldrh	r3, [r1, #4]
 800bae8:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800baec:	b21a      	sxth	r2, r3
 800baee:	4294      	cmp	r4, r2
 800baf0:	bfc8      	it	gt
 800baf2:	8083      	strhgt	r3, [r0, #4]
 800baf4:	88cb      	ldrh	r3, [r1, #6]
 800baf6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800bafa:	b21a      	sxth	r2, r3
 800bafc:	4291      	cmp	r1, r2
 800bafe:	bfc8      	it	gt
 800bb00:	80c3      	strhgt	r3, [r0, #6]
 800bb02:	bd10      	pop	{r4, pc}

0800bb04 <_GetTwinArcPara>:
 800bb04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bb08:	fb01 f901 	mul.w	r9, r1, r1
 800bb0c:	1e47      	subs	r7, r0, #1
 800bb0e:	4604      	mov	r4, r0
 800bb10:	fb00 f000 	mul.w	r0, r0, r0
 800bb14:	ebc9 0000 	rsb	r0, r9, r0
 800bb18:	460d      	mov	r5, r1
 800bb1a:	4692      	mov	sl, r2
 800bb1c:	4698      	mov	r8, r3
 800bb1e:	9e08      	ldr	r6, [sp, #32]
 800bb20:	f005 fc39 	bl	8011396 <GUI__sqrt32>
 800bb24:	42bd      	cmp	r5, r7
 800bb26:	f8ca 0000 	str.w	r0, [sl]
 800bb2a:	da10      	bge.n	800bb4e <_GetTwinArcPara+0x4a>
 800bb2c:	fb07 f107 	mul.w	r1, r7, r7
 800bb30:	ebc9 0001 	rsb	r0, r9, r1
 800bb34:	f005 fc2f 	bl	8011396 <GUI__sqrt32>
 800bb38:	3c02      	subs	r4, #2
 800bb3a:	42a5      	cmp	r5, r4
 800bb3c:	f8c8 0000 	str.w	r0, [r8]
 800bb40:	da03      	bge.n	800bb4a <_GetTwinArcPara+0x46>
 800bb42:	1e42      	subs	r2, r0, #1
 800bb44:	6032      	str	r2, [r6, #0]
 800bb46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bb4a:	2300      	movs	r3, #0
 800bb4c:	e002      	b.n	800bb54 <_GetTwinArcPara+0x50>
 800bb4e:	2300      	movs	r3, #0
 800bb50:	f8c8 3000 	str.w	r3, [r8]
 800bb54:	6033      	str	r3, [r6, #0]
 800bb56:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800bb5c <GUI__DrawTwinArc2>:
 800bb5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bb60:	461c      	mov	r4, r3
 800bb62:	4b50      	ldr	r3, [pc, #320]	; (800bca4 <GUI__DrawTwinArc2+0x148>)
 800bb64:	681b      	ldr	r3, [r3, #0]
 800bb66:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 800bb68:	eb00 0805 	add.w	r8, r0, r5
 800bb6c:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800bb6e:	eb01 0905 	add.w	r9, r1, r5
 800bb72:	1815      	adds	r5, r2, r0
 800bb74:	b08b      	sub	sp, #44	; 0x2c
 800bb76:	1929      	adds	r1, r5, r4
 800bb78:	1e4a      	subs	r2, r1, #1
 800bb7a:	a808      	add	r0, sp, #32
 800bb7c:	f8ad 8020 	strh.w	r8, [sp, #32]
 800bb80:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800bb84:	f8ad 5022 	strh.w	r5, [sp, #34]	; 0x22
 800bb88:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800bb8c:	f7fc fe7c 	bl	8008888 <WM__InitIVRSearch>
 800bb90:	2800      	cmp	r0, #0
 800bb92:	f000 8083 	beq.w	800bc9c <GUI__DrawTwinArc2+0x140>
 800bb96:	2c00      	cmp	r4, #0
 800bb98:	dc02      	bgt.n	800bba0 <GUI__DrawTwinArc2+0x44>
 800bb9a:	f7fc fdb5 	bl	8008708 <WM__GetNextIVR>
 800bb9e:	e7f7      	b.n	800bb90 <GUI__DrawTwinArc2+0x34>
 800bba0:	9814      	ldr	r0, [sp, #80]	; 0x50
 800bba2:	f000 fc05 	bl	800c3b0 <GUI_SetColor>
 800bba6:	1e67      	subs	r7, r4, #1
 800bba8:	462e      	mov	r6, r5
 800bbaa:	3601      	adds	r6, #1
 800bbac:	b317      	cbz	r7, 800bbf4 <GUI__DrawTwinArc2+0x98>
 800bbae:	ab07      	add	r3, sp, #28
 800bbb0:	4639      	mov	r1, r7
 800bbb2:	9300      	str	r3, [sp, #0]
 800bbb4:	4620      	mov	r0, r4
 800bbb6:	aa05      	add	r2, sp, #20
 800bbb8:	ab06      	add	r3, sp, #24
 800bbba:	f7ff ffa3 	bl	800bb04 <_GetTwinArcPara>
 800bbbe:	f8dd b018 	ldr.w	fp, [sp, #24]
 800bbc2:	9905      	ldr	r1, [sp, #20]
 800bbc4:	eb08 0004 	add.w	r0, r8, r4
 800bbc8:	ebc4 0309 	rsb	r3, r4, r9
 800bbcc:	ebcb 0200 	rsb	r2, fp, r0
 800bbd0:	eb03 0a01 	add.w	sl, r3, r1
 800bbd4:	1a40      	subs	r0, r0, r1
 800bbd6:	3a01      	subs	r2, #1
 800bbd8:	4631      	mov	r1, r6
 800bbda:	9303      	str	r3, [sp, #12]
 800bbdc:	f7ff fb02 	bl	800b1e4 <LCD_DrawHLine>
 800bbe0:	9803      	ldr	r0, [sp, #12]
 800bbe2:	eb00 010b 	add.w	r1, r0, fp
 800bbe6:	1c48      	adds	r0, r1, #1
 800bbe8:	4652      	mov	r2, sl
 800bbea:	4631      	mov	r1, r6
 800bbec:	f7ff fafa 	bl	800b1e4 <LCD_DrawHLine>
 800bbf0:	3f01      	subs	r7, #1
 800bbf2:	e7da      	b.n	800bbaa <GUI__DrawTwinArc2+0x4e>
 800bbf4:	2c01      	cmp	r4, #1
 800bbf6:	d0d0      	beq.n	800bb9a <GUI__DrawTwinArc2+0x3e>
 800bbf8:	9815      	ldr	r0, [sp, #84]	; 0x54
 800bbfa:	f000 fbd9 	bl	800c3b0 <GUI_SetColor>
 800bbfe:	1ea6      	subs	r6, r4, #2
 800bc00:	b326      	cbz	r6, 800bc4c <GUI__DrawTwinArc2+0xf0>
 800bc02:	1961      	adds	r1, r4, r5
 800bc04:	aa07      	add	r2, sp, #28
 800bc06:	ebc6 0a01 	rsb	sl, r6, r1
 800bc0a:	9200      	str	r2, [sp, #0]
 800bc0c:	4631      	mov	r1, r6
 800bc0e:	4620      	mov	r0, r4
 800bc10:	aa05      	add	r2, sp, #20
 800bc12:	ab06      	add	r3, sp, #24
 800bc14:	f7ff ff76 	bl	800bb04 <_GetTwinArcPara>
 800bc18:	f8dd b01c 	ldr.w	fp, [sp, #28]
 800bc1c:	9906      	ldr	r1, [sp, #24]
 800bc1e:	eb08 0004 	add.w	r0, r8, r4
 800bc22:	ebc4 0309 	rsb	r3, r4, r9
 800bc26:	ebcb 0200 	rsb	r2, fp, r0
 800bc2a:	185f      	adds	r7, r3, r1
 800bc2c:	1a40      	subs	r0, r0, r1
 800bc2e:	3a01      	subs	r2, #1
 800bc30:	4651      	mov	r1, sl
 800bc32:	9303      	str	r3, [sp, #12]
 800bc34:	f7ff fad6 	bl	800b1e4 <LCD_DrawHLine>
 800bc38:	9803      	ldr	r0, [sp, #12]
 800bc3a:	eb00 010b 	add.w	r1, r0, fp
 800bc3e:	1c48      	adds	r0, r1, #1
 800bc40:	463a      	mov	r2, r7
 800bc42:	4651      	mov	r1, sl
 800bc44:	f7ff face 	bl	800b1e4 <LCD_DrawHLine>
 800bc48:	3e01      	subs	r6, #1
 800bc4a:	e7d9      	b.n	800bc00 <GUI__DrawTwinArc2+0xa4>
 800bc4c:	2c02      	cmp	r4, #2
 800bc4e:	d0a4      	beq.n	800bb9a <GUI__DrawTwinArc2+0x3e>
 800bc50:	9816      	ldr	r0, [sp, #88]	; 0x58
 800bc52:	f000 fbad 	bl	800c3b0 <GUI_SetColor>
 800bc56:	1ee6      	subs	r6, r4, #3
 800bc58:	2e00      	cmp	r6, #0
 800bc5a:	d09e      	beq.n	800bb9a <GUI__DrawTwinArc2+0x3e>
 800bc5c:	af07      	add	r7, sp, #28
 800bc5e:	4631      	mov	r1, r6
 800bc60:	9700      	str	r7, [sp, #0]
 800bc62:	4620      	mov	r0, r4
 800bc64:	aa05      	add	r2, sp, #20
 800bc66:	ab06      	add	r3, sp, #24
 800bc68:	f7ff ff4c 	bl	800bb04 <_GetTwinArcPara>
 800bc6c:	eb04 0a05 	add.w	sl, r4, r5
 800bc70:	9807      	ldr	r0, [sp, #28]
 800bc72:	eb08 0304 	add.w	r3, r8, r4
 800bc76:	ebc6 0a0a 	rsb	sl, r6, sl
 800bc7a:	ebc4 0b09 	rsb	fp, r4, r9
 800bc7e:	1e5a      	subs	r2, r3, #1
 800bc80:	eb0b 0700 	add.w	r7, fp, r0
 800bc84:	4651      	mov	r1, sl
 800bc86:	1a18      	subs	r0, r3, r0
 800bc88:	f7ff faac 	bl	800b1e4 <LCD_DrawHLine>
 800bc8c:	f10b 0001 	add.w	r0, fp, #1
 800bc90:	4651      	mov	r1, sl
 800bc92:	463a      	mov	r2, r7
 800bc94:	f7ff faa6 	bl	800b1e4 <LCD_DrawHLine>
 800bc98:	3e01      	subs	r6, #1
 800bc9a:	e7dd      	b.n	800bc58 <GUI__DrawTwinArc2+0xfc>
 800bc9c:	b00b      	add	sp, #44	; 0x2c
 800bc9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bca2:	bf00      	nop
 800bca4:	20000278 	.word	0x20000278

0800bca8 <GUI__DrawTwinArc4>:
 800bca8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bcac:	4d73      	ldr	r5, [pc, #460]	; (800be7c <GUI__DrawTwinArc4+0x1d4>)
 800bcae:	682f      	ldr	r7, [r5, #0]
 800bcb0:	6cfe      	ldr	r6, [r7, #76]	; 0x4c
 800bcb2:	6d3d      	ldr	r5, [r7, #80]	; 0x50
 800bcb4:	b08d      	sub	sp, #52	; 0x34
 800bcb6:	1980      	adds	r0, r0, r6
 800bcb8:	1949      	adds	r1, r1, r5
 800bcba:	195f      	adds	r7, r3, r5
 800bcbc:	9004      	str	r0, [sp, #16]
 800bcbe:	1996      	adds	r6, r2, r6
 800bcc0:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 800bcc4:	a80a      	add	r0, sp, #40	; 0x28
 800bcc6:	9c16      	ldr	r4, [sp, #88]	; 0x58
 800bcc8:	9105      	str	r1, [sp, #20]
 800bcca:	460d      	mov	r5, r1
 800bccc:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 800bcd0:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 800bcd4:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 800bcd8:	f7fc fdd6 	bl	8008888 <WM__InitIVRSearch>
 800bcdc:	2800      	cmp	r0, #0
 800bcde:	f000 80ca 	beq.w	800be76 <GUI__DrawTwinArc4+0x1ce>
 800bce2:	2c00      	cmp	r4, #0
 800bce4:	dc02      	bgt.n	800bcec <GUI__DrawTwinArc4+0x44>
 800bce6:	f7fc fd0f 	bl	8008708 <WM__GetNextIVR>
 800bcea:	e7f7      	b.n	800bcdc <GUI__DrawTwinArc4+0x34>
 800bcec:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800bcee:	f000 fb5f 	bl	800c3b0 <GUI_SetColor>
 800bcf2:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800bcf6:	1e65      	subs	r5, r4, #1
 800bcf8:	f108 0801 	add.w	r8, r8, #1
 800bcfc:	2d00      	cmp	r5, #0
 800bcfe:	d035      	beq.n	800bd6c <GUI__DrawTwinArc4+0xc4>
 800bd00:	1b39      	subs	r1, r7, r4
 800bd02:	ab09      	add	r3, sp, #36	; 0x24
 800bd04:	eb01 0a05 	add.w	sl, r1, r5
 800bd08:	9300      	str	r3, [sp, #0]
 800bd0a:	4629      	mov	r1, r5
 800bd0c:	4620      	mov	r0, r4
 800bd0e:	aa07      	add	r2, sp, #28
 800bd10:	ab08      	add	r3, sp, #32
 800bd12:	f7ff fef7 	bl	800bb04 <_GetTwinArcPara>
 800bd16:	9804      	ldr	r0, [sp, #16]
 800bd18:	9a08      	ldr	r2, [sp, #32]
 800bd1a:	9907      	ldr	r1, [sp, #28]
 800bd1c:	1903      	adds	r3, r0, r4
 800bd1e:	1a98      	subs	r0, r3, r2
 800bd20:	ebc4 0b06 	rsb	fp, r4, r6
 800bd24:	ebc1 0c03 	rsb	ip, r1, r3
 800bd28:	eb0b 0901 	add.w	r9, fp, r1
 800bd2c:	1e43      	subs	r3, r0, #1
 800bd2e:	eb0b 0102 	add.w	r1, fp, r2
 800bd32:	4660      	mov	r0, ip
 800bd34:	461a      	mov	r2, r3
 800bd36:	f101 0b01 	add.w	fp, r1, #1
 800bd3a:	4641      	mov	r1, r8
 800bd3c:	9302      	str	r3, [sp, #8]
 800bd3e:	f8cd c00c 	str.w	ip, [sp, #12]
 800bd42:	f7ff fa4f 	bl	800b1e4 <LCD_DrawHLine>
 800bd46:	4658      	mov	r0, fp
 800bd48:	4641      	mov	r1, r8
 800bd4a:	464a      	mov	r2, r9
 800bd4c:	f7ff fa4a 	bl	800b1e4 <LCD_DrawHLine>
 800bd50:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800bd54:	9a02      	ldr	r2, [sp, #8]
 800bd56:	4660      	mov	r0, ip
 800bd58:	4651      	mov	r1, sl
 800bd5a:	f7ff fa43 	bl	800b1e4 <LCD_DrawHLine>
 800bd5e:	4658      	mov	r0, fp
 800bd60:	4651      	mov	r1, sl
 800bd62:	464a      	mov	r2, r9
 800bd64:	f7ff fa3e 	bl	800b1e4 <LCD_DrawHLine>
 800bd68:	3d01      	subs	r5, #1
 800bd6a:	e7c5      	b.n	800bcf8 <GUI__DrawTwinArc4+0x50>
 800bd6c:	2c01      	cmp	r4, #1
 800bd6e:	d0ba      	beq.n	800bce6 <GUI__DrawTwinArc4+0x3e>
 800bd70:	9818      	ldr	r0, [sp, #96]	; 0x60
 800bd72:	f000 fb1d 	bl	800c3b0 <GUI_SetColor>
 800bd76:	1ea5      	subs	r5, r4, #2
 800bd78:	2d00      	cmp	r5, #0
 800bd7a:	d03b      	beq.n	800bdf4 <GUI__DrawTwinArc4+0x14c>
 800bd7c:	9805      	ldr	r0, [sp, #20]
 800bd7e:	a909      	add	r1, sp, #36	; 0x24
 800bd80:	ebc4 0e07 	rsb	lr, r4, r7
 800bd84:	eb04 0800 	add.w	r8, r4, r0
 800bd88:	9100      	str	r1, [sp, #0]
 800bd8a:	4620      	mov	r0, r4
 800bd8c:	4629      	mov	r1, r5
 800bd8e:	aa07      	add	r2, sp, #28
 800bd90:	ab08      	add	r3, sp, #32
 800bd92:	eb0e 0905 	add.w	r9, lr, r5
 800bd96:	f7ff feb5 	bl	800bb04 <_GetTwinArcPara>
 800bd9a:	9b04      	ldr	r3, [sp, #16]
 800bd9c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800bd9e:	9908      	ldr	r1, [sp, #32]
 800bda0:	1918      	adds	r0, r3, r4
 800bda2:	1a83      	subs	r3, r0, r2
 800bda4:	ebc4 0a06 	rsb	sl, r4, r6
 800bda8:	ebc1 0c00 	rsb	ip, r1, r0
 800bdac:	3b01      	subs	r3, #1
 800bdae:	ebc5 0b08 	rsb	fp, r5, r8
 800bdb2:	eb0a 0002 	add.w	r0, sl, r2
 800bdb6:	eb0a 0801 	add.w	r8, sl, r1
 800bdba:	461a      	mov	r2, r3
 800bdbc:	f100 0a01 	add.w	sl, r0, #1
 800bdc0:	4659      	mov	r1, fp
 800bdc2:	4660      	mov	r0, ip
 800bdc4:	9302      	str	r3, [sp, #8]
 800bdc6:	f8cd c00c 	str.w	ip, [sp, #12]
 800bdca:	f7ff fa0b 	bl	800b1e4 <LCD_DrawHLine>
 800bdce:	4650      	mov	r0, sl
 800bdd0:	4659      	mov	r1, fp
 800bdd2:	4642      	mov	r2, r8
 800bdd4:	f7ff fa06 	bl	800b1e4 <LCD_DrawHLine>
 800bdd8:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800bddc:	9a02      	ldr	r2, [sp, #8]
 800bdde:	4660      	mov	r0, ip
 800bde0:	4649      	mov	r1, r9
 800bde2:	f7ff f9ff 	bl	800b1e4 <LCD_DrawHLine>
 800bde6:	4650      	mov	r0, sl
 800bde8:	4649      	mov	r1, r9
 800bdea:	4642      	mov	r2, r8
 800bdec:	f7ff f9fa 	bl	800b1e4 <LCD_DrawHLine>
 800bdf0:	3d01      	subs	r5, #1
 800bdf2:	e7c1      	b.n	800bd78 <GUI__DrawTwinArc4+0xd0>
 800bdf4:	2c02      	cmp	r4, #2
 800bdf6:	f43f af76 	beq.w	800bce6 <GUI__DrawTwinArc4+0x3e>
 800bdfa:	9819      	ldr	r0, [sp, #100]	; 0x64
 800bdfc:	f000 fad8 	bl	800c3b0 <GUI_SetColor>
 800be00:	1ee5      	subs	r5, r4, #3
 800be02:	2d00      	cmp	r5, #0
 800be04:	f43f af6f 	beq.w	800bce6 <GUI__DrawTwinArc4+0x3e>
 800be08:	9b05      	ldr	r3, [sp, #20]
 800be0a:	aa09      	add	r2, sp, #36	; 0x24
 800be0c:	4629      	mov	r1, r5
 800be0e:	eb04 0b03 	add.w	fp, r4, r3
 800be12:	9200      	str	r2, [sp, #0]
 800be14:	4620      	mov	r0, r4
 800be16:	aa07      	add	r2, sp, #28
 800be18:	ab08      	add	r3, sp, #32
 800be1a:	f7ff fe73 	bl	800bb04 <_GetTwinArcPara>
 800be1e:	9804      	ldr	r0, [sp, #16]
 800be20:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800be22:	1901      	adds	r1, r0, r4
 800be24:	ebc2 0c01 	rsb	ip, r2, r1
 800be28:	1e4b      	subs	r3, r1, #1
 800be2a:	ebc5 0b0b 	rsb	fp, r5, fp
 800be2e:	ebc4 0a06 	rsb	sl, r4, r6
 800be32:	eb0a 0802 	add.w	r8, sl, r2
 800be36:	4660      	mov	r0, ip
 800be38:	461a      	mov	r2, r3
 800be3a:	f10a 0a01 	add.w	sl, sl, #1
 800be3e:	4659      	mov	r1, fp
 800be40:	9302      	str	r3, [sp, #8]
 800be42:	f8cd c00c 	str.w	ip, [sp, #12]
 800be46:	f7ff f9cd 	bl	800b1e4 <LCD_DrawHLine>
 800be4a:	4650      	mov	r0, sl
 800be4c:	4659      	mov	r1, fp
 800be4e:	4642      	mov	r2, r8
 800be50:	f7ff f9c8 	bl	800b1e4 <LCD_DrawHLine>
 800be54:	ebc4 0907 	rsb	r9, r4, r7
 800be58:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800be5c:	9a02      	ldr	r2, [sp, #8]
 800be5e:	44a9      	add	r9, r5
 800be60:	4660      	mov	r0, ip
 800be62:	4649      	mov	r1, r9
 800be64:	f7ff f9be 	bl	800b1e4 <LCD_DrawHLine>
 800be68:	4650      	mov	r0, sl
 800be6a:	4649      	mov	r1, r9
 800be6c:	4642      	mov	r2, r8
 800be6e:	f7ff f9b9 	bl	800b1e4 <LCD_DrawHLine>
 800be72:	3d01      	subs	r5, #1
 800be74:	e7c5      	b.n	800be02 <GUI__DrawTwinArc4+0x15a>
 800be76:	b00d      	add	sp, #52	; 0x34
 800be78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800be7c:	20000278 	.word	0x20000278

0800be80 <GUI__MixColors>:
 800be80:	f001 437f 	and.w	r3, r1, #4278190080	; 0xff000000
 800be84:	f1b3 4f7f 	cmp.w	r3, #4278190080	; 0xff000000
 800be88:	b5f0      	push	{r4, r5, r6, r7, lr}
 800be8a:	d027      	beq.n	800bedc <GUI__MixColors+0x5c>
 800be8c:	43d5      	mvns	r5, r2
 800be8e:	b2eb      	uxtb	r3, r5
 800be90:	b2cd      	uxtb	r5, r1
 800be92:	b2c6      	uxtb	r6, r0
 800be94:	435d      	muls	r5, r3
 800be96:	fb06 5502 	mla	r5, r6, r2, r5
 800be9a:	f401 467f 	and.w	r6, r1, #65280	; 0xff00
 800be9e:	435e      	muls	r6, r3
 800bea0:	f400 447f 	and.w	r4, r0, #65280	; 0xff00
 800bea4:	fb04 6402 	mla	r4, r4, r2, r6
 800bea8:	0a26      	lsrs	r6, r4, #8
 800beaa:	f401 047f 	and.w	r4, r1, #16711680	; 0xff0000
 800beae:	f400 077f 	and.w	r7, r0, #16711680	; 0xff0000
 800beb2:	435c      	muls	r4, r3
 800beb4:	0e09      	lsrs	r1, r1, #24
 800beb6:	434b      	muls	r3, r1
 800beb8:	0e00      	lsrs	r0, r0, #24
 800beba:	fb07 4402 	mla	r4, r7, r2, r4
 800bebe:	0a24      	lsrs	r4, r4, #8
 800bec0:	fb00 3202 	mla	r2, r0, r2, r3
 800bec4:	f406 407f 	and.w	r0, r6, #65280	; 0xff00
 800bec8:	f3c5 2307 	ubfx	r3, r5, #8, #8
 800becc:	0411      	lsls	r1, r2, #16
 800bece:	4318      	orrs	r0, r3
 800bed0:	f404 027f 	and.w	r2, r4, #16711680	; 0xff0000
 800bed4:	4310      	orrs	r0, r2
 800bed6:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 800beda:	4308      	orrs	r0, r1
 800bedc:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800bee0 <_OnExit>:
 800bee0:	b570      	push	{r4, r5, r6, lr}
 800bee2:	4c0a      	ldr	r4, [pc, #40]	; (800bf0c <_OnExit+0x2c>)
 800bee4:	4d0a      	ldr	r5, [pc, #40]	; (800bf10 <_OnExit+0x30>)
 800bee6:	6820      	ldr	r0, [r4, #0]
 800bee8:	4e0a      	ldr	r6, [pc, #40]	; (800bf14 <_OnExit+0x34>)
 800beea:	f001 fe13 	bl	800db14 <GUI_ALLOC_FreeFixedBlock>
 800beee:	6828      	ldr	r0, [r5, #0]
 800bef0:	f001 fe10 	bl	800db14 <GUI_ALLOC_FreeFixedBlock>
 800bef4:	6830      	ldr	r0, [r6, #0]
 800bef6:	f001 fe0d 	bl	800db14 <GUI_ALLOC_FreeFixedBlock>
 800befa:	4a07      	ldr	r2, [pc, #28]	; (800bf18 <_OnExit+0x38>)
 800befc:	4807      	ldr	r0, [pc, #28]	; (800bf1c <_OnExit+0x3c>)
 800befe:	2300      	movs	r3, #0
 800bf00:	6033      	str	r3, [r6, #0]
 800bf02:	602b      	str	r3, [r5, #0]
 800bf04:	6023      	str	r3, [r4, #0]
 800bf06:	6013      	str	r3, [r2, #0]
 800bf08:	6003      	str	r3, [r0, #0]
 800bf0a:	bd70      	pop	{r4, r5, r6, pc}
 800bf0c:	2000e074 	.word	0x2000e074
 800bf10:	2000e070 	.word	0x2000e070
 800bf14:	2000e078 	.word	0x2000e078
 800bf18:	2000e07c 	.word	0x2000e07c
 800bf1c:	2000e08c 	.word	0x2000e08c

0800bf20 <GUI__GetAlphaBuffer>:
 800bf20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bf24:	4698      	mov	r8, r3
 800bf26:	4b2a      	ldr	r3, [pc, #168]	; (800bfd0 <GUI__GetAlphaBuffer+0xb0>)
 800bf28:	4616      	mov	r6, r2
 800bf2a:	681a      	ldr	r2, [r3, #0]
 800bf2c:	4605      	mov	r5, r0
 800bf2e:	460f      	mov	r7, r1
 800bf30:	b932      	cbnz	r2, 800bf40 <GUI__GetAlphaBuffer+0x20>
 800bf32:	2001      	movs	r0, #1
 800bf34:	6018      	str	r0, [r3, #0]
 800bf36:	4927      	ldr	r1, [pc, #156]	; (800bfd4 <GUI__GetAlphaBuffer+0xb4>)
 800bf38:	4827      	ldr	r0, [pc, #156]	; (800bfd8 <GUI__GetAlphaBuffer+0xb8>)
 800bf3a:	6001      	str	r1, [r0, #0]
 800bf3c:	f001 f9fc 	bl	800d338 <GUI__RegisterExit>
 800bf40:	4c26      	ldr	r4, [pc, #152]	; (800bfdc <GUI__GetAlphaBuffer+0xbc>)
 800bf42:	6823      	ldr	r3, [r4, #0]
 800bf44:	b933      	cbnz	r3, 800bf54 <GUI__GetAlphaBuffer+0x34>
 800bf46:	4a26      	ldr	r2, [pc, #152]	; (800bfe0 <GUI__GetAlphaBuffer+0xc0>)
 800bf48:	6810      	ldr	r0, [r2, #0]
 800bf4a:	6020      	str	r0, [r4, #0]
 800bf4c:	b910      	cbnz	r0, 800bf54 <GUI__GetAlphaBuffer+0x34>
 800bf4e:	f7ff f8a5 	bl	800b09c <LCD_GetVXSizeMax>
 800bf52:	6020      	str	r0, [r4, #0]
 800bf54:	f1b8 0f00 	cmp.w	r8, #0
 800bf58:	d002      	beq.n	800bf60 <GUI__GetAlphaBuffer+0x40>
 800bf5a:	6821      	ldr	r1, [r4, #0]
 800bf5c:	f8c8 1000 	str.w	r1, [r8]
 800bf60:	b195      	cbz	r5, 800bf88 <GUI__GetAlphaBuffer+0x68>
 800bf62:	4c20      	ldr	r4, [pc, #128]	; (800bfe4 <GUI__GetAlphaBuffer+0xc4>)
 800bf64:	6823      	ldr	r3, [r4, #0]
 800bf66:	b953      	cbnz	r3, 800bf7e <GUI__GetAlphaBuffer+0x5e>
 800bf68:	4a1c      	ldr	r2, [pc, #112]	; (800bfdc <GUI__GetAlphaBuffer+0xbc>)
 800bf6a:	6810      	ldr	r0, [r2, #0]
 800bf6c:	0080      	lsls	r0, r0, #2
 800bf6e:	f001 ff6b 	bl	800de48 <GUI_ALLOC_GetFixedBlock>
 800bf72:	6020      	str	r0, [r4, #0]
 800bf74:	f1d0 0401 	rsbs	r4, r0, #1
 800bf78:	bf38      	it	cc
 800bf7a:	2400      	movcc	r4, #0
 800bf7c:	e000      	b.n	800bf80 <GUI__GetAlphaBuffer+0x60>
 800bf7e:	2400      	movs	r4, #0
 800bf80:	4918      	ldr	r1, [pc, #96]	; (800bfe4 <GUI__GetAlphaBuffer+0xc4>)
 800bf82:	680b      	ldr	r3, [r1, #0]
 800bf84:	602b      	str	r3, [r5, #0]
 800bf86:	e000      	b.n	800bf8a <GUI__GetAlphaBuffer+0x6a>
 800bf88:	462c      	mov	r4, r5
 800bf8a:	b177      	cbz	r7, 800bfaa <GUI__GetAlphaBuffer+0x8a>
 800bf8c:	4d16      	ldr	r5, [pc, #88]	; (800bfe8 <GUI__GetAlphaBuffer+0xc8>)
 800bf8e:	682a      	ldr	r2, [r5, #0]
 800bf90:	b942      	cbnz	r2, 800bfa4 <GUI__GetAlphaBuffer+0x84>
 800bf92:	4812      	ldr	r0, [pc, #72]	; (800bfdc <GUI__GetAlphaBuffer+0xbc>)
 800bf94:	6801      	ldr	r1, [r0, #0]
 800bf96:	0088      	lsls	r0, r1, #2
 800bf98:	f001 ff56 	bl	800de48 <GUI_ALLOC_GetFixedBlock>
 800bf9c:	6028      	str	r0, [r5, #0]
 800bf9e:	2800      	cmp	r0, #0
 800bfa0:	bf08      	it	eq
 800bfa2:	2401      	moveq	r4, #1
 800bfa4:	4b10      	ldr	r3, [pc, #64]	; (800bfe8 <GUI__GetAlphaBuffer+0xc8>)
 800bfa6:	681a      	ldr	r2, [r3, #0]
 800bfa8:	603a      	str	r2, [r7, #0]
 800bfaa:	b176      	cbz	r6, 800bfca <GUI__GetAlphaBuffer+0xaa>
 800bfac:	4d0f      	ldr	r5, [pc, #60]	; (800bfec <GUI__GetAlphaBuffer+0xcc>)
 800bfae:	6828      	ldr	r0, [r5, #0]
 800bfb0:	b940      	cbnz	r0, 800bfc4 <GUI__GetAlphaBuffer+0xa4>
 800bfb2:	490a      	ldr	r1, [pc, #40]	; (800bfdc <GUI__GetAlphaBuffer+0xbc>)
 800bfb4:	680b      	ldr	r3, [r1, #0]
 800bfb6:	0098      	lsls	r0, r3, #2
 800bfb8:	f001 ff46 	bl	800de48 <GUI_ALLOC_GetFixedBlock>
 800bfbc:	6028      	str	r0, [r5, #0]
 800bfbe:	2800      	cmp	r0, #0
 800bfc0:	bf08      	it	eq
 800bfc2:	2401      	moveq	r4, #1
 800bfc4:	4a09      	ldr	r2, [pc, #36]	; (800bfec <GUI__GetAlphaBuffer+0xcc>)
 800bfc6:	6810      	ldr	r0, [r2, #0]
 800bfc8:	6030      	str	r0, [r6, #0]
 800bfca:	4620      	mov	r0, r4
 800bfcc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bfd0:	2000e08c 	.word	0x2000e08c
 800bfd4:	0800bee1 	.word	0x0800bee1
 800bfd8:	2000e084 	.word	0x2000e084
 800bfdc:	2000e07c 	.word	0x2000e07c
 800bfe0:	2000e684 	.word	0x2000e684
 800bfe4:	2000e074 	.word	0x2000e074
 800bfe8:	2000e070 	.word	0x2000e070
 800bfec:	2000e078 	.word	0x2000e078

0800bff0 <GUI__DoAlphaBlending>:
 800bff0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bff4:	b093      	sub	sp, #76	; 0x4c
 800bff6:	2400      	movs	r4, #0
 800bff8:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800bffa:	900a      	str	r0, [sp, #40]	; 0x28
 800bffc:	910b      	str	r1, [sp, #44]	; 0x2c
 800bffe:	4617      	mov	r7, r2
 800c000:	4698      	mov	r8, r3
 800c002:	6034      	str	r4, [r6, #0]
 800c004:	a80f      	add	r0, sp, #60	; 0x3c
 800c006:	a910      	add	r1, sp, #64	; 0x40
 800c008:	4622      	mov	r2, r4
 800c00a:	ab11      	add	r3, sp, #68	; 0x44
 800c00c:	f7ff ff88 	bl	800bf20 <GUI__GetAlphaBuffer>
 800c010:	4605      	mov	r5, r0
 800c012:	2800      	cmp	r0, #0
 800c014:	f040 80c4 	bne.w	800c1a0 <GUI__DoAlphaBlending+0x1b0>
 800c018:	4c63      	ldr	r4, [pc, #396]	; (800c1a8 <GUI__DoAlphaBlending+0x1b8>)
 800c01a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800c01c:	6823      	ldr	r3, [r4, #0]
 800c01e:	4963      	ldr	r1, [pc, #396]	; (800c1ac <GUI__DoAlphaBlending+0x1bc>)
 800c020:	7c58      	ldrb	r0, [r3, #17]
 800c022:	4590      	cmp	r8, r2
 800c024:	bfa8      	it	ge
 800c026:	4690      	movge	r8, r2
 800c028:	f851 2020 	ldr.w	r2, [r1, r0, lsl #2]
 800c02c:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800c030:	6913      	ldr	r3, [r2, #16]
 800c032:	9206      	str	r2, [sp, #24]
 800c034:	930c      	str	r3, [sp, #48]	; 0x30
 800c036:	f7ff f803 	bl	800b040 <GUI_GetBitsPerPixelEx>
 800c03a:	9007      	str	r0, [sp, #28]
 800c03c:	6820      	ldr	r0, [r4, #0]
 800c03e:	4c5c      	ldr	r4, [pc, #368]	; (800c1b0 <GUI__DoAlphaBlending+0x1c0>)
 800c040:	7c40      	ldrb	r0, [r0, #17]
 800c042:	f7ff f81b 	bl	800b07c <GUI_GetpfIndex2ColorEx>
 800c046:	42a0      	cmp	r0, r4
 800c048:	9004      	str	r0, [sp, #16]
 800c04a:	d005      	beq.n	800c058 <GUI__DoAlphaBlending+0x68>
 800c04c:	4d59      	ldr	r5, [pc, #356]	; (800c1b4 <GUI__DoAlphaBlending+0x1c4>)
 800c04e:	1b41      	subs	r1, r0, r5
 800c050:	bf18      	it	ne
 800c052:	2101      	movne	r1, #1
 800c054:	9105      	str	r1, [sp, #20]
 800c056:	e000      	b.n	800c05a <GUI__DoAlphaBlending+0x6a>
 800c058:	9505      	str	r5, [sp, #20]
 800c05a:	2500      	movs	r5, #0
 800c05c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800c05e:	46ab      	mov	fp, r5
 800c060:	1d3a      	adds	r2, r7, #4
 800c062:	6838      	ldr	r0, [r7, #0]
 800c064:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800c066:	920d      	str	r2, [sp, #52]	; 0x34
 800c068:	4798      	blx	r3
 800c06a:	4681      	mov	r9, r0
 800c06c:	0e00      	lsrs	r0, r0, #24
 800c06e:	9008      	str	r0, [sp, #32]
 800c070:	f000 8088 	beq.w	800c184 <GUI__DoAlphaBlending+0x194>
 800c074:	f1bb 0f00 	cmp.w	fp, #0
 800c078:	d142      	bne.n	800c100 <GUI__DoAlphaBlending+0x110>
 800c07a:	4a4b      	ldr	r2, [pc, #300]	; (800c1a8 <GUI__DoAlphaBlending+0x1b8>)
 800c07c:	990a      	ldr	r1, [sp, #40]	; 0x28
 800c07e:	6813      	ldr	r3, [r2, #0]
 800c080:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800c082:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 800c086:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800c088:	eb05 0801 	add.w	r8, r5, r1
 800c08c:	990a      	ldr	r1, [sp, #40]	; 0x28
 800c08e:	4540      	cmp	r0, r8
 800c090:	bfc8      	it	gt
 800c092:	ebc8 0b00 	rsbgt	fp, r8, r0
 800c096:	eb01 0c02 	add.w	ip, r1, r2
 800c09a:	9906      	ldr	r1, [sp, #24]
 800c09c:	f8cd c00c 	str.w	ip, [sp, #12]
 800c0a0:	eb0b 0a05 	add.w	sl, fp, r5
 800c0a4:	9101      	str	r1, [sp, #4]
 800c0a6:	ea4f 0a8a 	mov.w	sl, sl, lsl #2
 800c0aa:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800c0ac:	bfc8      	it	gt
 800c0ae:	4680      	movgt	r8, r0
 800c0b0:	eb03 000a 	add.w	r0, r3, sl
 800c0b4:	f10c 32ff 	add.w	r2, ip, #4294967295
 800c0b8:	9000      	str	r0, [sp, #0]
 800c0ba:	460b      	mov	r3, r1
 800c0bc:	4640      	mov	r0, r8
 800c0be:	f005 f881 	bl	80111c4 <GUI_ReadRectEx>
 800c0c2:	9a07      	ldr	r2, [sp, #28]
 800c0c4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800c0c6:	f8dd c00c 	ldr.w	ip, [sp, #12]
 800c0ca:	2a17      	cmp	r2, #23
 800c0cc:	dc06      	bgt.n	800c0dc <GUI__DoAlphaBlending+0xec>
 800c0ce:	4450      	add	r0, sl
 800c0d0:	ebcb 0104 	rsb	r1, fp, r4
 800c0d4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c0d6:	f005 fa2f 	bl	8011538 <GUI__ExpandPixelIndicesEx>
 800c0da:	e001      	b.n	800c0e0 <GUI__DoAlphaBlending+0xf0>
 800c0dc:	9a05      	ldr	r2, [sp, #20]
 800c0de:	b912      	cbnz	r2, 800c0e6 <GUI__DoAlphaBlending+0xf6>
 800c0e0:	f04f 0b01 	mov.w	fp, #1
 800c0e4:	e00c      	b.n	800c100 <GUI__DoAlphaBlending+0x110>
 800c0e6:	ebc8 0b0c 	rsb	fp, r8, ip
 800c0ea:	4482      	add	sl, r0
 800c0ec:	f8da 0000 	ldr.w	r0, [sl]
 800c0f0:	9b04      	ldr	r3, [sp, #16]
 800c0f2:	4798      	blx	r3
 800c0f4:	f1bb 0b01 	subs.w	fp, fp, #1
 800c0f8:	f84a 0b04 	str.w	r0, [sl], #4
 800c0fc:	d1f6      	bne.n	800c0ec <GUI__DoAlphaBlending+0xfc>
 800c0fe:	e7ef      	b.n	800c0e0 <GUI__DoAlphaBlending+0xf0>
 800c100:	492d      	ldr	r1, [pc, #180]	; (800c1b8 <GUI__DoAlphaBlending+0x1c8>)
 800c102:	f8dd 8040 	ldr.w	r8, [sp, #64]	; 0x40
 800c106:	f8d1 c000 	ldr.w	ip, [r1]
 800c10a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800c10c:	ea4f 0a85 	mov.w	sl, r5, lsl #2
 800c110:	f1bc 0f00 	cmp.w	ip, #0
 800c114:	d023      	beq.n	800c15e <GUI__DoAlphaBlending+0x16e>
 800c116:	4451      	add	r1, sl
 800c118:	eb08 020a 	add.w	r2, r8, sl
 800c11c:	910f      	str	r1, [sp, #60]	; 0x3c
 800c11e:	9210      	str	r2, [sp, #64]	; 0x40
 800c120:	4623      	mov	r3, r4
 800c122:	4638      	mov	r0, r7
 800c124:	47e0      	blx	ip
 800c126:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800c128:	9910      	ldr	r1, [sp, #64]	; 0x40
 800c12a:	2300      	movs	r3, #0
 800c12c:	58fd      	ldr	r5, [r7, r3]
 800c12e:	f005 407f 	and.w	r0, r5, #4278190080	; 0xff000000
 800c132:	f1b0 4f7f 	cmp.w	r0, #4278190080	; 0xff000000
 800c136:	58d0      	ldr	r0, [r2, r3]
 800c138:	d101      	bne.n	800c13e <GUI__DoAlphaBlending+0x14e>
 800c13a:	50c8      	str	r0, [r1, r3]
 800c13c:	e005      	b.n	800c14a <GUI__DoAlphaBlending+0x15a>
 800c13e:	f000 407f 	and.w	r0, r0, #4278190080	; 0xff000000
 800c142:	f1b0 4f7f 	cmp.w	r0, #4278190080	; 0xff000000
 800c146:	bf08      	it	eq
 800c148:	50cd      	streq	r5, [r1, r3]
 800c14a:	3304      	adds	r3, #4
 800c14c:	3c01      	subs	r4, #1
 800c14e:	d1ed      	bne.n	800c12c <GUI__DoAlphaBlending+0x13c>
 800c150:	6832      	ldr	r2, [r6, #0]
 800c152:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 800c156:	f042 0101 	orr.w	r1, r2, #1
 800c15a:	6031      	str	r1, [r6, #0]
 800c15c:	e01e      	b.n	800c19c <GUI__DoAlphaBlending+0x1ac>
 800c15e:	9f08      	ldr	r7, [sp, #32]
 800c160:	2fff      	cmp	r7, #255	; 0xff
 800c162:	d104      	bne.n	800c16e <GUI__DoAlphaBlending+0x17e>
 800c164:	f851 700a 	ldr.w	r7, [r1, sl]
 800c168:	f848 700a 	str.w	r7, [r8, sl]
 800c16c:	e011      	b.n	800c192 <GUI__DoAlphaBlending+0x1a2>
 800c16e:	9808      	ldr	r0, [sp, #32]
 800c170:	f851 100a 	ldr.w	r1, [r1, sl]
 800c174:	43c2      	mvns	r2, r0
 800c176:	b2d2      	uxtb	r2, r2
 800c178:	4648      	mov	r0, r9
 800c17a:	f7ff fe81 	bl	800be80 <GUI__MixColors>
 800c17e:	f848 000a 	str.w	r0, [r8, sl]
 800c182:	e002      	b.n	800c18a <GUI__DoAlphaBlending+0x19a>
 800c184:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800c186:	f847 9025 	str.w	r9, [r7, r5, lsl #2]
 800c18a:	6833      	ldr	r3, [r6, #0]
 800c18c:	f043 0101 	orr.w	r1, r3, #1
 800c190:	6031      	str	r1, [r6, #0]
 800c192:	3501      	adds	r5, #1
 800c194:	3c01      	subs	r4, #1
 800c196:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800c198:	f47f af62 	bne.w	800c060 <GUI__DoAlphaBlending+0x70>
 800c19c:	9810      	ldr	r0, [sp, #64]	; 0x40
 800c19e:	e000      	b.n	800c1a2 <GUI__DoAlphaBlending+0x1b2>
 800c1a0:	4620      	mov	r0, r4
 800c1a2:	b013      	add	sp, #76	; 0x4c
 800c1a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c1a8:	20000278 	.word	0x20000278
 800c1ac:	2000e67c 	.word	0x2000e67c
 800c1b0:	0800e107 	.word	0x0800e107
 800c1b4:	0800e105 	.word	0x0800e105
 800c1b8:	2000e080 	.word	0x2000e080

0800c1bc <GUI__AllocAlphaBuffer>:
 800c1bc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c1be:	b108      	cbz	r0, 800c1c4 <GUI__AllocAlphaBuffer+0x8>
 800c1c0:	aa03      	add	r2, sp, #12
 800c1c2:	e000      	b.n	800c1c6 <GUI__AllocAlphaBuffer+0xa>
 800c1c4:	4602      	mov	r2, r0
 800c1c6:	a801      	add	r0, sp, #4
 800c1c8:	a902      	add	r1, sp, #8
 800c1ca:	2300      	movs	r3, #0
 800c1cc:	f7ff fea8 	bl	800bf20 <GUI__GetAlphaBuffer>
 800c1d0:	b005      	add	sp, #20
 800c1d2:	bd00      	pop	{pc}

0800c1d4 <GUI_SignalEvent>:
 800c1d4:	b508      	push	{r3, lr}
 800c1d6:	4b02      	ldr	r3, [pc, #8]	; (800c1e0 <GUI_SignalEvent+0xc>)
 800c1d8:	6818      	ldr	r0, [r3, #0]
 800c1da:	b100      	cbz	r0, 800c1de <GUI_SignalEvent+0xa>
 800c1dc:	4780      	blx	r0
 800c1de:	bd08      	pop	{r3, pc}
 800c1e0:	2000e090 	.word	0x2000e090

0800c1e4 <_Unlink>:
 800c1e4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c1e6:	4605      	mov	r5, r0
 800c1e8:	b1f0      	cbz	r0, 800c228 <_Unlink+0x44>
 800c1ea:	f001 fca7 	bl	800db3c <GUI_ALLOC_LockH>
 800c1ee:	4b0f      	ldr	r3, [pc, #60]	; (800c22c <_Unlink+0x48>)
 800c1f0:	9000      	str	r0, [sp, #0]
 800c1f2:	681c      	ldr	r4, [r3, #0]
 800c1f4:	42ac      	cmp	r4, r5
 800c1f6:	d104      	bne.n	800c202 <_Unlink+0x1e>
 800c1f8:	6840      	ldr	r0, [r0, #4]
 800c1fa:	6018      	str	r0, [r3, #0]
 800c1fc:	e011      	b.n	800c222 <_Unlink+0x3e>
 800c1fe:	f001 fcab 	bl	800db58 <GUI_ALLOC_UnlockH>
 800c202:	b174      	cbz	r4, 800c222 <_Unlink+0x3e>
 800c204:	4620      	mov	r0, r4
 800c206:	f001 fc99 	bl	800db3c <GUI_ALLOC_LockH>
 800c20a:	4601      	mov	r1, r0
 800c20c:	a802      	add	r0, sp, #8
 800c20e:	684c      	ldr	r4, [r1, #4]
 800c210:	f840 1d04 	str.w	r1, [r0, #-4]!
 800c214:	42ac      	cmp	r4, r5
 800c216:	d1f2      	bne.n	800c1fe <_Unlink+0x1a>
 800c218:	9a00      	ldr	r2, [sp, #0]
 800c21a:	6853      	ldr	r3, [r2, #4]
 800c21c:	604b      	str	r3, [r1, #4]
 800c21e:	f001 fc9b 	bl	800db58 <GUI_ALLOC_UnlockH>
 800c222:	4668      	mov	r0, sp
 800c224:	f001 fc98 	bl	800db58 <GUI_ALLOC_UnlockH>
 800c228:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 800c22a:	bf00      	nop
 800c22c:	2000e098 	.word	0x2000e098

0800c230 <GUI_TIMER__GetFirstTimer>:
 800c230:	2300      	movs	r3, #0
 800c232:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c234:	6003      	str	r3, [r0, #0]
 800c236:	4605      	mov	r5, r0
 800c238:	4807      	ldr	r0, [pc, #28]	; (800c258 <GUI_TIMER__GetFirstTimer+0x28>)
 800c23a:	6804      	ldr	r4, [r0, #0]
 800c23c:	b154      	cbz	r4, 800c254 <GUI_TIMER__GetFirstTimer+0x24>
 800c23e:	4620      	mov	r0, r4
 800c240:	f001 fc7c 	bl	800db3c <GUI_ALLOC_LockH>
 800c244:	a902      	add	r1, sp, #8
 800c246:	6902      	ldr	r2, [r0, #16]
 800c248:	f841 0d04 	str.w	r0, [r1, #-4]!
 800c24c:	602a      	str	r2, [r5, #0]
 800c24e:	4608      	mov	r0, r1
 800c250:	f001 fc82 	bl	800db58 <GUI_ALLOC_UnlockH>
 800c254:	4620      	mov	r0, r4
 800c256:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 800c258:	2000e094 	.word	0x2000e094

0800c25c <GUI_TIMER__GetNextTimerLin>:
 800c25c:	2300      	movs	r3, #0
 800c25e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c260:	600b      	str	r3, [r1, #0]
 800c262:	460d      	mov	r5, r1
 800c264:	4604      	mov	r4, r0
 800c266:	b180      	cbz	r0, 800c28a <GUI_TIMER__GetNextTimerLin+0x2e>
 800c268:	f001 fc68 	bl	800db3c <GUI_ALLOC_LockH>
 800c26c:	6884      	ldr	r4, [r0, #8]
 800c26e:	9001      	str	r0, [sp, #4]
 800c270:	b144      	cbz	r4, 800c284 <GUI_TIMER__GetNextTimerLin+0x28>
 800c272:	a801      	add	r0, sp, #4
 800c274:	f001 fc70 	bl	800db58 <GUI_ALLOC_UnlockH>
 800c278:	4620      	mov	r0, r4
 800c27a:	f001 fc5f 	bl	800db3c <GUI_ALLOC_LockH>
 800c27e:	9001      	str	r0, [sp, #4]
 800c280:	6900      	ldr	r0, [r0, #16]
 800c282:	6028      	str	r0, [r5, #0]
 800c284:	a801      	add	r0, sp, #4
 800c286:	f001 fc67 	bl	800db58 <GUI_ALLOC_UnlockH>
 800c28a:	4620      	mov	r0, r4
 800c28c:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
	...

0800c290 <GUI_TIMER_Delete>:
 800c290:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c292:	4604      	mov	r4, r0
 800c294:	b348      	cbz	r0, 800c2ea <GUI_TIMER_Delete+0x5a>
 800c296:	4e15      	ldr	r6, [pc, #84]	; (800c2ec <GUI_TIMER_Delete+0x5c>)
 800c298:	6835      	ldr	r5, [r6, #0]
 800c29a:	4285      	cmp	r5, r0
 800c29c:	d10b      	bne.n	800c2b6 <GUI_TIMER_Delete+0x26>
 800c29e:	f001 fc4d 	bl	800db3c <GUI_ALLOC_LockH>
 800c2a2:	a902      	add	r1, sp, #8
 800c2a4:	f841 0d04 	str.w	r0, [r1, #-4]!
 800c2a8:	6880      	ldr	r0, [r0, #8]
 800c2aa:	6030      	str	r0, [r6, #0]
 800c2ac:	4608      	mov	r0, r1
 800c2ae:	e014      	b.n	800c2da <GUI_TIMER_Delete+0x4a>
 800c2b0:	4668      	mov	r0, sp
 800c2b2:	f001 fc51 	bl	800db58 <GUI_ALLOC_UnlockH>
 800c2b6:	4628      	mov	r0, r5
 800c2b8:	f001 fc40 	bl	800db3c <GUI_ALLOC_LockH>
 800c2bc:	6885      	ldr	r5, [r0, #8]
 800c2be:	9000      	str	r0, [sp, #0]
 800c2c0:	42a5      	cmp	r5, r4
 800c2c2:	d1f5      	bne.n	800c2b0 <GUI_TIMER_Delete+0x20>
 800c2c4:	4620      	mov	r0, r4
 800c2c6:	f001 fc39 	bl	800db3c <GUI_ALLOC_LockH>
 800c2ca:	9b00      	ldr	r3, [sp, #0]
 800c2cc:	6882      	ldr	r2, [r0, #8]
 800c2ce:	9001      	str	r0, [sp, #4]
 800c2d0:	609a      	str	r2, [r3, #8]
 800c2d2:	a801      	add	r0, sp, #4
 800c2d4:	f001 fc40 	bl	800db58 <GUI_ALLOC_UnlockH>
 800c2d8:	4668      	mov	r0, sp
 800c2da:	f001 fc3d 	bl	800db58 <GUI_ALLOC_UnlockH>
 800c2de:	4620      	mov	r0, r4
 800c2e0:	f7ff ff80 	bl	800c1e4 <_Unlink>
 800c2e4:	4620      	mov	r0, r4
 800c2e6:	f001 fc63 	bl	800dbb0 <GUI_ALLOC_Free>
 800c2ea:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
 800c2ec:	2000e094 	.word	0x2000e094

0800c2f0 <GUI_TIMER_GetFlag>:
 800c2f0:	b513      	push	{r0, r1, r4, lr}
 800c2f2:	460c      	mov	r4, r1
 800c2f4:	b168      	cbz	r0, 800c312 <GUI_TIMER_GetFlag+0x22>
 800c2f6:	f001 fc21 	bl	800db3c <GUI_ALLOC_LockH>
 800c2fa:	ab02      	add	r3, sp, #8
 800c2fc:	8982      	ldrh	r2, [r0, #12]
 800c2fe:	f843 0d04 	str.w	r0, [r3, #-4]!
 800c302:	4214      	tst	r4, r2
 800c304:	4618      	mov	r0, r3
 800c306:	bf0c      	ite	eq
 800c308:	2400      	moveq	r4, #0
 800c30a:	2401      	movne	r4, #1
 800c30c:	f001 fc24 	bl	800db58 <GUI_ALLOC_UnlockH>
 800c310:	e000      	b.n	800c314 <GUI_TIMER_GetFlag+0x24>
 800c312:	2401      	movs	r4, #1
 800c314:	4620      	mov	r0, r4
 800c316:	bd1c      	pop	{r2, r3, r4, pc}

0800c318 <GUI_TOUCH_StoreStateEx>:
 800c318:	b538      	push	{r3, r4, r5, lr}
 800c31a:	4d08      	ldr	r5, [pc, #32]	; (800c33c <GUI_TOUCH_StoreStateEx+0x24>)
 800c31c:	220c      	movs	r2, #12
 800c31e:	4629      	mov	r1, r5
 800c320:	4604      	mov	r4, r0
 800c322:	f006 fc21 	bl	8012b68 <memcmp>
 800c326:	b140      	cbz	r0, 800c33a <GUI_TOUCH_StoreStateEx+0x22>
 800c328:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 800c32c:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 800c330:	4620      	mov	r0, r4
 800c332:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c336:	f000 b911 	b.w	800c55c <GUI_PID_StoreState>
 800c33a:	bd38      	pop	{r3, r4, r5, pc}
 800c33c:	2000e09c 	.word	0x2000e09c

0800c340 <GUI_SetTextMode>:
 800c340:	4b03      	ldr	r3, [pc, #12]	; (800c350 <GUI_SetTextMode+0x10>)
 800c342:	6819      	ldr	r1, [r3, #0]
 800c344:	f9b1 202a 	ldrsh.w	r2, [r1, #42]	; 0x2a
 800c348:	8548      	strh	r0, [r1, #42]	; 0x2a
 800c34a:	4610      	mov	r0, r2
 800c34c:	4770      	bx	lr
 800c34e:	bf00      	nop
 800c350:	20000278 	.word	0x20000278

0800c354 <GUI_SetFont>:
 800c354:	4b03      	ldr	r3, [pc, #12]	; (800c364 <GUI_SetFont+0x10>)
 800c356:	681a      	ldr	r2, [r3, #0]
 800c358:	69d1      	ldr	r1, [r2, #28]
 800c35a:	b100      	cbz	r0, 800c35e <GUI_SetFont+0xa>
 800c35c:	61d0      	str	r0, [r2, #28]
 800c35e:	4608      	mov	r0, r1
 800c360:	4770      	bx	lr
 800c362:	bf00      	nop
 800c364:	20000278 	.word	0x20000278

0800c368 <GUI_SetDrawMode>:
 800c368:	f7fe bf06 	b.w	800b178 <LCD_SetDrawMode>

0800c36c <GL_SetDefault>:
 800c36c:	b508      	push	{r3, lr}
 800c36e:	2000      	movs	r0, #0
 800c370:	f000 f81c 	bl	800c3ac <GUI_SetBkColor>
 800c374:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 800c378:	f000 f81a 	bl	800c3b0 <GUI_SetColor>
 800c37c:	2001      	movs	r0, #1
 800c37e:	f000 f8b9 	bl	800c4f4 <GUI_SetPenSize>
 800c382:	2000      	movs	r0, #0
 800c384:	f005 fc96 	bl	8011cb4 <GUI_SetTextAlign>
 800c388:	2000      	movs	r0, #0
 800c38a:	f7ff ffd9 	bl	800c340 <GUI_SetTextMode>
 800c38e:	2000      	movs	r0, #0
 800c390:	f7ff ffea 	bl	800c368 <GUI_SetDrawMode>
 800c394:	4b04      	ldr	r3, [pc, #16]	; (800c3a8 <GL_SetDefault+0x3c>)
 800c396:	6818      	ldr	r0, [r3, #0]
 800c398:	f7ff ffdc 	bl	800c354 <GUI_SetFont>
 800c39c:	2000      	movs	r0, #0
 800c39e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800c3a2:	f005 bcab 	b.w	8011cfc <GUI_SetLineStyle>
 800c3a6:	bf00      	nop
 800c3a8:	2000027c 	.word	0x2000027c

0800c3ac <GUI_SetBkColor>:
 800c3ac:	f7ff ba2e 	b.w	800b80c <LCD_SetBkColor>

0800c3b0 <GUI_SetColor>:
 800c3b0:	f7ff ba34 	b.w	800b81c <LCD_SetColor>

0800c3b4 <GUI__AlphaSuppressMixing>:
 800c3b4:	4b07      	ldr	r3, [pc, #28]	; (800c3d4 <GUI__AlphaSuppressMixing+0x20>)
 800c3b6:	b510      	push	{r4, lr}
 800c3b8:	681c      	ldr	r4, [r3, #0]
 800c3ba:	b120      	cbz	r0, 800c3c6 <GUI__AlphaSuppressMixing+0x12>
 800c3bc:	2201      	movs	r2, #1
 800c3be:	601a      	str	r2, [r3, #0]
 800c3c0:	f04f 30ff 	mov.w	r0, #4294967295
 800c3c4:	e002      	b.n	800c3cc <GUI__AlphaSuppressMixing+0x18>
 800c3c6:	6018      	str	r0, [r3, #0]
 800c3c8:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 800c3cc:	f004 ffb2 	bl	8011334 <LCD_AA_SetAndMask>
 800c3d0:	4620      	mov	r0, r4
 800c3d2:	bd10      	pop	{r4, pc}
 800c3d4:	2000e0a8 	.word	0x2000e0a8

0800c3d8 <GUI_GetCursorLayer>:
 800c3d8:	2801      	cmp	r0, #1
 800c3da:	d803      	bhi.n	800c3e4 <GUI_GetCursorLayer+0xc>
 800c3dc:	4b02      	ldr	r3, [pc, #8]	; (800c3e8 <GUI_GetCursorLayer+0x10>)
 800c3de:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800c3e2:	4770      	bx	lr
 800c3e4:	2000      	movs	r0, #0
 800c3e6:	4770      	bx	lr
 800c3e8:	2000e0ac 	.word	0x2000e0ac

0800c3ec <GUI_GetLayerPosEx>:
 800c3ec:	b538      	push	{r3, r4, r5, lr}
 800c3ee:	460d      	mov	r5, r1
 800c3f0:	4614      	mov	r4, r2
 800c3f2:	f7fe fdc3 	bl	800af7c <LCD_GetPosEx>
 800c3f6:	b110      	cbz	r0, 800c3fe <GUI_GetLayerPosEx+0x12>
 800c3f8:	2300      	movs	r3, #0
 800c3fa:	602b      	str	r3, [r5, #0]
 800c3fc:	6023      	str	r3, [r4, #0]
 800c3fe:	bd38      	pop	{r3, r4, r5, pc}

0800c400 <GUI_SelectLayer>:
 800c400:	b538      	push	{r3, r4, r5, lr}
 800c402:	4b06      	ldr	r3, [pc, #24]	; (800c41c <GUI_SelectLayer+0x1c>)
 800c404:	4604      	mov	r4, r0
 800c406:	6818      	ldr	r0, [r3, #0]
 800c408:	2c01      	cmp	r4, #1
 800c40a:	7c45      	ldrb	r5, [r0, #17]
 800c40c:	d802      	bhi.n	800c414 <GUI_SelectLayer+0x14>
 800c40e:	7444      	strb	r4, [r0, #17]
 800c410:	f000 f80a 	bl	800c428 <GUI_SelectLCD>
 800c414:	4902      	ldr	r1, [pc, #8]	; (800c420 <GUI_SelectLayer+0x20>)
 800c416:	4628      	mov	r0, r5
 800c418:	600c      	str	r4, [r1, #0]
 800c41a:	bd38      	pop	{r3, r4, r5, pc}
 800c41c:	20000278 	.word	0x20000278
 800c420:	2000e62c 	.word	0x2000e62c

0800c424 <GUI_SetLayerPosEx>:
 800c424:	f7fe bd7c 	b.w	800af20 <LCD_SetPosEx>

0800c428 <GUI_SelectLCD>:
 800c428:	b508      	push	{r3, lr}
 800c42a:	f004 fdbb 	bl	8010fa4 <LCD_SelectLCD>
 800c42e:	f7fe fd1f 	bl	800ae70 <LCD_UpdateColorIndices>
 800c432:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800c436:	f7fc bbff 	b.w	8008c38 <WM_Activate>
	...

0800c43c <GUI_SaveContext_W>:
 800c43c:	b508      	push	{r3, lr}
 800c43e:	4b03      	ldr	r3, [pc, #12]	; (800c44c <GUI_SaveContext_W+0x10>)
 800c440:	2270      	movs	r2, #112	; 0x70
 800c442:	6819      	ldr	r1, [r3, #0]
 800c444:	f7f3 fea0 	bl	8000188 <memcpy>
 800c448:	bd08      	pop	{r3, pc}
 800c44a:	bf00      	nop
 800c44c:	20000278 	.word	0x20000278

0800c450 <GUI_RestoreContext>:
 800c450:	b508      	push	{r3, lr}
 800c452:	4b03      	ldr	r3, [pc, #12]	; (800c460 <GUI_RestoreContext+0x10>)
 800c454:	4601      	mov	r1, r0
 800c456:	2270      	movs	r2, #112	; 0x70
 800c458:	6818      	ldr	r0, [r3, #0]
 800c45a:	f7f3 fe95 	bl	8000188 <memcpy>
 800c45e:	bd08      	pop	{r3, pc}
 800c460:	20000278 	.word	0x20000278

0800c464 <GUI_RectsIntersect>:
 800c464:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800c468:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800c46c:	429a      	cmp	r2, r3
 800c46e:	dc14      	bgt.n	800c49a <GUI_RectsIntersect+0x36>
 800c470:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800c474:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800c478:	429a      	cmp	r2, r3
 800c47a:	dc0e      	bgt.n	800c49a <GUI_RectsIntersect+0x36>
 800c47c:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c480:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800c484:	429a      	cmp	r2, r3
 800c486:	dc08      	bgt.n	800c49a <GUI_RectsIntersect+0x36>
 800c488:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800c48c:	f9b1 1000 	ldrsh.w	r1, [r1]
 800c490:	4291      	cmp	r1, r2
 800c492:	bfcc      	ite	gt
 800c494:	2000      	movgt	r0, #0
 800c496:	2001      	movle	r0, #1
 800c498:	4770      	bx	lr
 800c49a:	2000      	movs	r0, #0
 800c49c:	4770      	bx	lr

0800c49e <GUI_ALLOC_Realloc>:
 800c49e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c4a0:	4604      	mov	r4, r0
 800c4a2:	4608      	mov	r0, r1
 800c4a4:	460e      	mov	r6, r1
 800c4a6:	f001 fd97 	bl	800dfd8 <GUI_ALLOC_AllocNoInit>
 800c4aa:	4605      	mov	r5, r0
 800c4ac:	b1f8      	cbz	r0, 800c4ee <GUI_ALLOC_Realloc+0x50>
 800c4ae:	b1f4      	cbz	r4, 800c4ee <GUI_ALLOC_Realloc+0x50>
 800c4b0:	4620      	mov	r0, r4
 800c4b2:	f001 fb71 	bl	800db98 <GUI_ALLOC_GetSize>
 800c4b6:	42b0      	cmp	r0, r6
 800c4b8:	bfb4      	ite	lt
 800c4ba:	4607      	movlt	r7, r0
 800c4bc:	4637      	movge	r7, r6
 800c4be:	4628      	mov	r0, r5
 800c4c0:	f001 fb3c 	bl	800db3c <GUI_ALLOC_LockH>
 800c4c4:	9000      	str	r0, [sp, #0]
 800c4c6:	4620      	mov	r0, r4
 800c4c8:	f001 fb38 	bl	800db3c <GUI_ALLOC_LockH>
 800c4cc:	ae02      	add	r6, sp, #8
 800c4ce:	4601      	mov	r1, r0
 800c4d0:	463a      	mov	r2, r7
 800c4d2:	9001      	str	r0, [sp, #4]
 800c4d4:	f856 0d08 	ldr.w	r0, [r6, #-8]!
 800c4d8:	f7f3 fe56 	bl	8000188 <memcpy>
 800c4dc:	4668      	mov	r0, sp
 800c4de:	f001 fb3b 	bl	800db58 <GUI_ALLOC_UnlockH>
 800c4e2:	a801      	add	r0, sp, #4
 800c4e4:	f001 fb38 	bl	800db58 <GUI_ALLOC_UnlockH>
 800c4e8:	4620      	mov	r0, r4
 800c4ea:	f001 fb61 	bl	800dbb0 <GUI_ALLOC_Free>
 800c4ee:	4628      	mov	r0, r5
 800c4f0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
	...

0800c4f4 <GUI_SetPenSize>:
 800c4f4:	4b02      	ldr	r3, [pc, #8]	; (800c500 <GUI_SetPenSize+0xc>)
 800c4f6:	6819      	ldr	r1, [r3, #0]
 800c4f8:	7e0a      	ldrb	r2, [r1, #24]
 800c4fa:	7608      	strb	r0, [r1, #24]
 800c4fc:	4610      	mov	r0, r2
 800c4fe:	4770      	bx	lr
 800c500:	20000278 	.word	0x20000278

0800c504 <GUI_PID_GetState>:
 800c504:	4a12      	ldr	r2, [pc, #72]	; (800c550 <GUI_PID_GetState+0x4c>)
 800c506:	4913      	ldr	r1, [pc, #76]	; (800c554 <GUI_PID_GetState+0x50>)
 800c508:	6813      	ldr	r3, [r2, #0]
 800c50a:	b570      	push	{r4, r5, r6, lr}
 800c50c:	4604      	mov	r4, r0
 800c50e:	6808      	ldr	r0, [r1, #0]
 800c510:	4d11      	ldr	r5, [pc, #68]	; (800c558 <GUI_PID_GetState+0x54>)
 800c512:	4283      	cmp	r3, r0
 800c514:	4616      	mov	r6, r2
 800c516:	d10a      	bne.n	800c52e <GUI_PID_GetState+0x2a>
 800c518:	42ab      	cmp	r3, r5
 800c51a:	d103      	bne.n	800c524 <GUI_PID_GetState+0x20>
 800c51c:	333c      	adds	r3, #60	; 0x3c
 800c51e:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800c522:	e001      	b.n	800c528 <GUI_PID_GetState+0x24>
 800c524:	e913 0007 	ldmdb	r3, {r0, r1, r2}
 800c528:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800c52c:	e00a      	b.n	800c544 <GUI_PID_GetState+0x40>
 800c52e:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800c532:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800c536:	f105 023c 	add.w	r2, r5, #60	; 0x3c
 800c53a:	4293      	cmp	r3, r2
 800c53c:	bf18      	it	ne
 800c53e:	f103 050c 	addne.w	r5, r3, #12
 800c542:	6035      	str	r5, [r6, #0]
 800c544:	7a23      	ldrb	r3, [r4, #8]
 800c546:	1c18      	adds	r0, r3, #0
 800c548:	bf18      	it	ne
 800c54a:	2001      	movne	r0, #1
 800c54c:	bd70      	pop	{r4, r5, r6, pc}
 800c54e:	bf00      	nop
 800c550:	2000026c 	.word	0x2000026c
 800c554:	20000268 	.word	0x20000268
 800c558:	2000e0b4 	.word	0x2000e0b4

0800c55c <GUI_PID_StoreState>:
 800c55c:	b570      	push	{r4, r5, r6, lr}
 800c55e:	4b20      	ldr	r3, [pc, #128]	; (800c5e0 <GUI_PID_StoreState+0x84>)
 800c560:	4a20      	ldr	r2, [pc, #128]	; (800c5e4 <GUI_PID_StoreState+0x88>)
 800c562:	4921      	ldr	r1, [pc, #132]	; (800c5e8 <GUI_PID_StoreState+0x8c>)
 800c564:	4d21      	ldr	r5, [pc, #132]	; (800c5ec <GUI_PID_StoreState+0x90>)
 800c566:	601a      	str	r2, [r3, #0]
 800c568:	680c      	ldr	r4, [r1, #0]
 800c56a:	682b      	ldr	r3, [r5, #0]
 800c56c:	429c      	cmp	r4, r3
 800c56e:	d01d      	beq.n	800c5ac <GUI_PID_StoreState+0x50>
 800c570:	4a1f      	ldr	r2, [pc, #124]	; (800c5f0 <GUI_PID_StoreState+0x94>)
 800c572:	7a01      	ldrb	r1, [r0, #8]
 800c574:	4293      	cmp	r3, r2
 800c576:	4615      	mov	r5, r2
 800c578:	bf14      	ite	ne
 800c57a:	f1a3 020c 	subne.w	r2, r3, #12
 800c57e:	f103 023c 	addeq.w	r2, r3, #60	; 0x3c
 800c582:	7a16      	ldrb	r6, [r2, #8]
 800c584:	428e      	cmp	r6, r1
 800c586:	d111      	bne.n	800c5ac <GUI_PID_StoreState+0x50>
 800c588:	4294      	cmp	r4, r2
 800c58a:	d00f      	beq.n	800c5ac <GUI_PID_StoreState+0x50>
 800c58c:	42aa      	cmp	r2, r5
 800c58e:	d001      	beq.n	800c594 <GUI_PID_StoreState+0x38>
 800c590:	3a0c      	subs	r2, #12
 800c592:	e000      	b.n	800c596 <GUI_PID_StoreState+0x3a>
 800c594:	4a17      	ldr	r2, [pc, #92]	; (800c5f4 <GUI_PID_StoreState+0x98>)
 800c596:	7a15      	ldrb	r5, [r2, #8]
 800c598:	428d      	cmp	r5, r1
 800c59a:	d107      	bne.n	800c5ac <GUI_PID_StoreState+0x50>
 800c59c:	4914      	ldr	r1, [pc, #80]	; (800c5f0 <GUI_PID_StoreState+0x94>)
 800c59e:	428b      	cmp	r3, r1
 800c5a0:	d001      	beq.n	800c5a6 <GUI_PID_StoreState+0x4a>
 800c5a2:	3b0c      	subs	r3, #12
 800c5a4:	e000      	b.n	800c5a8 <GUI_PID_StoreState+0x4c>
 800c5a6:	333c      	adds	r3, #60	; 0x3c
 800c5a8:	4a10      	ldr	r2, [pc, #64]	; (800c5ec <GUI_PID_StoreState+0x90>)
 800c5aa:	6013      	str	r3, [r2, #0]
 800c5ac:	c807      	ldmia	r0, {r0, r1, r2}
 800c5ae:	4d0f      	ldr	r5, [pc, #60]	; (800c5ec <GUI_PID_StoreState+0x90>)
 800c5b0:	682b      	ldr	r3, [r5, #0]
 800c5b2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800c5b6:	480f      	ldr	r0, [pc, #60]	; (800c5f4 <GUI_PID_StoreState+0x98>)
 800c5b8:	4283      	cmp	r3, r0
 800c5ba:	d001      	beq.n	800c5c0 <GUI_PID_StoreState+0x64>
 800c5bc:	330c      	adds	r3, #12
 800c5be:	e000      	b.n	800c5c2 <GUI_PID_StoreState+0x66>
 800c5c0:	4b0b      	ldr	r3, [pc, #44]	; (800c5f0 <GUI_PID_StoreState+0x94>)
 800c5c2:	429c      	cmp	r4, r3
 800c5c4:	602b      	str	r3, [r5, #0]
 800c5c6:	d106      	bne.n	800c5d6 <GUI_PID_StoreState+0x7a>
 800c5c8:	4284      	cmp	r4, r0
 800c5ca:	d001      	beq.n	800c5d0 <GUI_PID_StoreState+0x74>
 800c5cc:	340c      	adds	r4, #12
 800c5ce:	e000      	b.n	800c5d2 <GUI_PID_StoreState+0x76>
 800c5d0:	4c07      	ldr	r4, [pc, #28]	; (800c5f0 <GUI_PID_StoreState+0x94>)
 800c5d2:	4905      	ldr	r1, [pc, #20]	; (800c5e8 <GUI_PID_StoreState+0x8c>)
 800c5d4:	600c      	str	r4, [r1, #0]
 800c5d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c5da:	f7ff bdfb 	b.w	800c1d4 <GUI_SignalEvent>
 800c5de:	bf00      	nop
 800c5e0:	2000e688 	.word	0x2000e688
 800c5e4:	0800f3d5 	.word	0x0800f3d5
 800c5e8:	2000026c 	.word	0x2000026c
 800c5ec:	20000268 	.word	0x20000268
 800c5f0:	2000e0b4 	.word	0x2000e0b4
 800c5f4:	2000e0f0 	.word	0x2000e0f0

0800c5f8 <GUI_PID_IsEmpty>:
 800c5f8:	4b03      	ldr	r3, [pc, #12]	; (800c608 <GUI_PID_IsEmpty+0x10>)
 800c5fa:	4904      	ldr	r1, [pc, #16]	; (800c60c <GUI_PID_IsEmpty+0x14>)
 800c5fc:	6818      	ldr	r0, [r3, #0]
 800c5fe:	680a      	ldr	r2, [r1, #0]
 800c600:	1a83      	subs	r3, r0, r2
 800c602:	4258      	negs	r0, r3
 800c604:	4158      	adcs	r0, r3
 800c606:	4770      	bx	lr
 800c608:	2000026c 	.word	0x2000026c
 800c60c:	20000268 	.word	0x20000268

0800c610 <GUI_StoreKey>:
 800c610:	4b02      	ldr	r3, [pc, #8]	; (800c61c <GUI_StoreKey+0xc>)
 800c612:	681a      	ldr	r2, [r3, #0]
 800c614:	b902      	cbnz	r2, 800c618 <GUI_StoreKey+0x8>
 800c616:	6018      	str	r0, [r3, #0]
 800c618:	f7ff bddc 	b.w	800c1d4 <GUI_SignalEvent>
 800c61c:	2000e0fc 	.word	0x2000e0fc

0800c620 <GUI_PollKeyMsg>:
 800c620:	4a0a      	ldr	r2, [pc, #40]	; (800c64c <GUI_PollKeyMsg+0x2c>)
 800c622:	490b      	ldr	r1, [pc, #44]	; (800c650 <GUI_PollKeyMsg+0x30>)
 800c624:	6813      	ldr	r3, [r2, #0]
 800c626:	6808      	ldr	r0, [r1, #0]
 800c628:	4283      	cmp	r3, r0
 800c62a:	b510      	push	{r4, lr}
 800c62c:	d00c      	beq.n	800c648 <GUI_PollKeyMsg+0x28>
 800c62e:	4c09      	ldr	r4, [pc, #36]	; (800c654 <GUI_PollKeyMsg+0x34>)
 800c630:	42a3      	cmp	r3, r4
 800c632:	e893 0003 	ldmia.w	r3, {r0, r1}
 800c636:	d001      	beq.n	800c63c <GUI_PollKeyMsg+0x1c>
 800c638:	3308      	adds	r3, #8
 800c63a:	e000      	b.n	800c63e <GUI_PollKeyMsg+0x1e>
 800c63c:	4b06      	ldr	r3, [pc, #24]	; (800c658 <GUI_PollKeyMsg+0x38>)
 800c63e:	6013      	str	r3, [r2, #0]
 800c640:	f003 f924 	bl	800f88c <WM_OnKey>
 800c644:	2001      	movs	r0, #1
 800c646:	bd10      	pop	{r4, pc}
 800c648:	2000      	movs	r0, #0
 800c64a:	bd10      	pop	{r4, pc}
 800c64c:	20000274 	.word	0x20000274
 800c650:	20000270 	.word	0x20000270
 800c654:	2000e150 	.word	0x2000e150
 800c658:	2000e100 	.word	0x2000e100

0800c65c <GUI_MoveRect>:
 800c65c:	b168      	cbz	r0, 800c67a <GUI_MoveRect+0x1e>
 800c65e:	8803      	ldrh	r3, [r0, #0]
 800c660:	b289      	uxth	r1, r1
 800c662:	18cb      	adds	r3, r1, r3
 800c664:	8003      	strh	r3, [r0, #0]
 800c666:	8883      	ldrh	r3, [r0, #4]
 800c668:	18c9      	adds	r1, r1, r3
 800c66a:	8843      	ldrh	r3, [r0, #2]
 800c66c:	8081      	strh	r1, [r0, #4]
 800c66e:	b292      	uxth	r2, r2
 800c670:	18d1      	adds	r1, r2, r3
 800c672:	88c3      	ldrh	r3, [r0, #6]
 800c674:	8041      	strh	r1, [r0, #2]
 800c676:	18d2      	adds	r2, r2, r3
 800c678:	80c2      	strh	r2, [r0, #6]
 800c67a:	4770      	bx	lr

0800c67c <GUI_MergeRect>:
 800c67c:	b510      	push	{r4, lr}
 800c67e:	b338      	cbz	r0, 800c6d0 <GUI_MergeRect+0x54>
 800c680:	b309      	cbz	r1, 800c6c6 <GUI_MergeRect+0x4a>
 800c682:	b30a      	cbz	r2, 800c6c8 <GUI_MergeRect+0x4c>
 800c684:	f9b1 4000 	ldrsh.w	r4, [r1]
 800c688:	f9b2 3000 	ldrsh.w	r3, [r2]
 800c68c:	429c      	cmp	r4, r3
 800c68e:	bfb8      	it	lt
 800c690:	4623      	movlt	r3, r4
 800c692:	8003      	strh	r3, [r0, #0]
 800c694:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800c698:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800c69c:	429c      	cmp	r4, r3
 800c69e:	bfb8      	it	lt
 800c6a0:	4623      	movlt	r3, r4
 800c6a2:	8043      	strh	r3, [r0, #2]
 800c6a4:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
 800c6a8:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 800c6ac:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
 800c6b0:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 800c6b4:	429c      	cmp	r4, r3
 800c6b6:	bfa8      	it	ge
 800c6b8:	4623      	movge	r3, r4
 800c6ba:	4291      	cmp	r1, r2
 800c6bc:	bfa8      	it	ge
 800c6be:	460a      	movge	r2, r1
 800c6c0:	8083      	strh	r3, [r0, #4]
 800c6c2:	80c2      	strh	r2, [r0, #6]
 800c6c4:	bd10      	pop	{r4, pc}
 800c6c6:	4611      	mov	r1, r2
 800c6c8:	680b      	ldr	r3, [r1, #0]
 800c6ca:	6003      	str	r3, [r0, #0]
 800c6cc:	6849      	ldr	r1, [r1, #4]
 800c6ce:	6041      	str	r1, [r0, #4]
 800c6d0:	bd10      	pop	{r4, pc}
	...

0800c6d4 <GUI_GotoXY>:
 800c6d4:	4b02      	ldr	r3, [pc, #8]	; (800c6e0 <GUI_GotoXY+0xc>)
 800c6d6:	681a      	ldr	r2, [r3, #0]
 800c6d8:	8450      	strh	r0, [r2, #34]	; 0x22
 800c6da:	8491      	strh	r1, [r2, #36]	; 0x24
 800c6dc:	2000      	movs	r0, #0
 800c6de:	4770      	bx	lr
 800c6e0:	20000278 	.word	0x20000278

0800c6e4 <GUI_GetYSizeOfFont>:
 800c6e4:	7e02      	ldrb	r2, [r0, #24]
 800c6e6:	7ec0      	ldrb	r0, [r0, #27]
 800c6e8:	4350      	muls	r0, r2
 800c6ea:	4770      	bx	lr

0800c6ec <GUI_GetStringDistX>:
 800c6ec:	b510      	push	{r4, lr}
 800c6ee:	4604      	mov	r4, r0
 800c6f0:	f004 ff0a 	bl	8011508 <GUI__GetNumChars>
 800c6f4:	4601      	mov	r1, r0
 800c6f6:	4620      	mov	r0, r4
 800c6f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c6fc:	f001 b87a 	b.w	800d7f4 <GUI__GetLineDistX>

0800c700 <GUI_GetOrg>:
 800c700:	4b04      	ldr	r3, [pc, #16]	; (800c714 <GUI_GetOrg+0x14>)
 800c702:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c706:	6002      	str	r2, [r0, #0]
 800c708:	4803      	ldr	r0, [pc, #12]	; (800c718 <GUI_GetOrg+0x18>)
 800c70a:	f9b0 3000 	ldrsh.w	r3, [r0]
 800c70e:	600b      	str	r3, [r1, #0]
 800c710:	4770      	bx	lr
 800c712:	bf00      	nop
 800c714:	2000e66c 	.word	0x2000e66c
 800c718:	2000e664 	.word	0x2000e664

0800c71c <GUI_GetFontSizeY>:
 800c71c:	f004 bf02 	b.w	8011524 <GUI__GetFontSizeY>

0800c720 <GUI_GetClientRect>:
 800c720:	b108      	cbz	r0, 800c726 <GUI_GetClientRect+0x6>
 800c722:	f7fb b981 	b.w	8007a28 <WM_GetClientRect>
 800c726:	4770      	bx	lr

0800c728 <GUI_FillRectEx>:
 800c728:	4603      	mov	r3, r0
 800c72a:	f9b0 0000 	ldrsh.w	r0, [r0]
 800c72e:	f9b3 1002 	ldrsh.w	r1, [r3, #2]
 800c732:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 800c736:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800c73a:	f000 b801 	b.w	800c740 <GUI_FillRect>
	...

0800c740 <GUI_FillRect>:
 800c740:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c742:	4c0f      	ldr	r4, [pc, #60]	; (800c780 <GUI_FillRect+0x40>)
 800c744:	6826      	ldr	r6, [r4, #0]
 800c746:	6cf5      	ldr	r5, [r6, #76]	; 0x4c
 800c748:	1947      	adds	r7, r0, r5
 800c74a:	6d30      	ldr	r0, [r6, #80]	; 0x50
 800c74c:	f8ad 7000 	strh.w	r7, [sp]
 800c750:	180e      	adds	r6, r1, r0
 800c752:	181c      	adds	r4, r3, r0
 800c754:	1955      	adds	r5, r2, r5
 800c756:	4668      	mov	r0, sp
 800c758:	f8ad 5004 	strh.w	r5, [sp, #4]
 800c75c:	f8ad 6002 	strh.w	r6, [sp, #2]
 800c760:	f8ad 4006 	strh.w	r4, [sp, #6]
 800c764:	f7fc f890 	bl	8008888 <WM__InitIVRSearch>
 800c768:	b140      	cbz	r0, 800c77c <GUI_FillRect+0x3c>
 800c76a:	4638      	mov	r0, r7
 800c76c:	4631      	mov	r1, r6
 800c76e:	462a      	mov	r2, r5
 800c770:	4623      	mov	r3, r4
 800c772:	f7fe fd83 	bl	800b27c <LCD_FillRect>
 800c776:	f7fb ffc7 	bl	8008708 <WM__GetNextIVR>
 800c77a:	e7f5      	b.n	800c768 <GUI_FillRect+0x28>
 800c77c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800c77e:	bf00      	nop
 800c780:	20000278 	.word	0x20000278

0800c784 <GUI_Exec1>:
 800c784:	4b08      	ldr	r3, [pc, #32]	; (800c7a8 <GUI_Exec1+0x24>)
 800c786:	6818      	ldr	r0, [r3, #0]
 800c788:	b510      	push	{r4, lr}
 800c78a:	b120      	cbz	r0, 800c796 <GUI_Exec1+0x12>
 800c78c:	4780      	blx	r0
 800c78e:	1c04      	adds	r4, r0, #0
 800c790:	bf18      	it	ne
 800c792:	2401      	movne	r4, #1
 800c794:	e000      	b.n	800c798 <GUI_Exec1+0x14>
 800c796:	4604      	mov	r4, r0
 800c798:	f7fc f9a2 	bl	8008ae0 <WM_Exec>
 800c79c:	2800      	cmp	r0, #0
 800c79e:	bf0c      	ite	eq
 800c7a0:	4620      	moveq	r0, r4
 800c7a2:	2001      	movne	r0, #1
 800c7a4:	bd10      	pop	{r4, pc}
 800c7a6:	bf00      	nop
 800c7a8:	2000e668 	.word	0x2000e668

0800c7ac <GUI_Exec>:
 800c7ac:	b510      	push	{r4, lr}
 800c7ae:	2400      	movs	r4, #0
 800c7b0:	f7ff ffe8 	bl	800c784 <GUI_Exec1>
 800c7b4:	b108      	cbz	r0, 800c7ba <GUI_Exec+0xe>
 800c7b6:	2401      	movs	r4, #1
 800c7b8:	e7fa      	b.n	800c7b0 <GUI_Exec+0x4>
 800c7ba:	4620      	mov	r0, r4
 800c7bc:	bd10      	pop	{r4, pc}
	...

0800c7c0 <GUI_DrawVLine>:
 800c7c0:	4b0e      	ldr	r3, [pc, #56]	; (800c7fc <GUI_DrawVLine+0x3c>)
 800c7c2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c7c4:	681c      	ldr	r4, [r3, #0]
 800c7c6:	6ce6      	ldr	r6, [r4, #76]	; 0x4c
 800c7c8:	1986      	adds	r6, r0, r6
 800c7ca:	6d20      	ldr	r0, [r4, #80]	; 0x50
 800c7cc:	180d      	adds	r5, r1, r0
 800c7ce:	1814      	adds	r4, r2, r0
 800c7d0:	b2b1      	uxth	r1, r6
 800c7d2:	4668      	mov	r0, sp
 800c7d4:	f8ad 1000 	strh.w	r1, [sp]
 800c7d8:	f8ad 1004 	strh.w	r1, [sp, #4]
 800c7dc:	f8ad 5002 	strh.w	r5, [sp, #2]
 800c7e0:	f8ad 4006 	strh.w	r4, [sp, #6]
 800c7e4:	f7fc f850 	bl	8008888 <WM__InitIVRSearch>
 800c7e8:	b138      	cbz	r0, 800c7fa <GUI_DrawVLine+0x3a>
 800c7ea:	4630      	mov	r0, r6
 800c7ec:	4629      	mov	r1, r5
 800c7ee:	4622      	mov	r2, r4
 800c7f0:	f7fe fd1e 	bl	800b230 <LCD_DrawVLine>
 800c7f4:	f7fb ff88 	bl	8008708 <WM__GetNextIVR>
 800c7f8:	e7f6      	b.n	800c7e8 <GUI_DrawVLine+0x28>
 800c7fa:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
 800c7fc:	20000278 	.word	0x20000278

0800c800 <GUI_DrawPixel>:
 800c800:	4b0f      	ldr	r3, [pc, #60]	; (800c840 <GUI_DrawPixel+0x40>)
 800c802:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c804:	681a      	ldr	r2, [r3, #0]
 800c806:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 800c808:	6d14      	ldr	r4, [r2, #80]	; 0x50
 800c80a:	1945      	adds	r5, r0, r5
 800c80c:	b2a8      	uxth	r0, r5
 800c80e:	190c      	adds	r4, r1, r4
 800c810:	b2a1      	uxth	r1, r4
 800c812:	f8ad 0004 	strh.w	r0, [sp, #4]
 800c816:	f8ad 0000 	strh.w	r0, [sp]
 800c81a:	4668      	mov	r0, sp
 800c81c:	f8ad 1006 	strh.w	r1, [sp, #6]
 800c820:	f8ad 1002 	strh.w	r1, [sp, #2]
 800c824:	f7fc f830 	bl	8008888 <WM__InitIVRSearch>
 800c828:	b148      	cbz	r0, 800c83e <GUI_DrawPixel+0x3e>
 800c82a:	4b05      	ldr	r3, [pc, #20]	; (800c840 <GUI_DrawPixel+0x40>)
 800c82c:	681a      	ldr	r2, [r3, #0]
 800c82e:	6e50      	ldr	r0, [r2, #100]	; 0x64
 800c830:	4621      	mov	r1, r4
 800c832:	6843      	ldr	r3, [r0, #4]
 800c834:	4628      	mov	r0, r5
 800c836:	4798      	blx	r3
 800c838:	f7fb ff66 	bl	8008708 <WM__GetNextIVR>
 800c83c:	e7f4      	b.n	800c828 <GUI_DrawPixel+0x28>
 800c83e:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 800c840:	20000278 	.word	0x20000278

0800c844 <GUI_DrawHLine>:
 800c844:	4b10      	ldr	r3, [pc, #64]	; (800c888 <GUI_DrawHLine+0x44>)
 800c846:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c848:	681d      	ldr	r5, [r3, #0]
 800c84a:	6cec      	ldr	r4, [r5, #76]	; 0x4c
 800c84c:	190e      	adds	r6, r1, r4
 800c84e:	6d29      	ldr	r1, [r5, #80]	; 0x50
 800c850:	f8ad 6000 	strh.w	r6, [sp]
 800c854:	1845      	adds	r5, r0, r1
 800c856:	b2a8      	uxth	r0, r5
 800c858:	1914      	adds	r4, r2, r4
 800c85a:	f8ad 0002 	strh.w	r0, [sp, #2]
 800c85e:	f8ad 0006 	strh.w	r0, [sp, #6]
 800c862:	4668      	mov	r0, sp
 800c864:	f8ad 4004 	strh.w	r4, [sp, #4]
 800c868:	f7fc f80e 	bl	8008888 <WM__InitIVRSearch>
 800c86c:	b150      	cbz	r0, 800c884 <GUI_DrawHLine+0x40>
 800c86e:	4a06      	ldr	r2, [pc, #24]	; (800c888 <GUI_DrawHLine+0x44>)
 800c870:	6813      	ldr	r3, [r2, #0]
 800c872:	6e59      	ldr	r1, [r3, #100]	; 0x64
 800c874:	4630      	mov	r0, r6
 800c876:	680b      	ldr	r3, [r1, #0]
 800c878:	4622      	mov	r2, r4
 800c87a:	4629      	mov	r1, r5
 800c87c:	4798      	blx	r3
 800c87e:	f7fb ff43 	bl	8008708 <WM__GetNextIVR>
 800c882:	e7f3      	b.n	800c86c <GUI_DrawHLine+0x28>
 800c884:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
 800c886:	bf00      	nop
 800c888:	20000278 	.word	0x20000278

0800c88c <_DrawGradient>:
 800c88c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c890:	b091      	sub	sp, #68	; 0x44
 800c892:	4688      	mov	r8, r1
 800c894:	4614      	mov	r4, r2
 800c896:	991c      	ldr	r1, [sp, #112]	; 0x70
 800c898:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800c89a:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800c89c:	f8dd a06c 	ldr.w	sl, [sp, #108]	; 0x6c
 800c8a0:	9102      	str	r1, [sp, #8]
 800c8a2:	4605      	mov	r5, r0
 800c8a4:	461e      	mov	r6, r3
 800c8a6:	9201      	str	r2, [sp, #4]
 800c8a8:	f005 fa4b 	bl	8011d42 <GUI_GetColor>
 800c8ac:	4557      	cmp	r7, sl
 800c8ae:	900b      	str	r0, [sp, #44]	; 0x2c
 800c8b0:	d109      	bne.n	800c8c6 <_DrawGradient+0x3a>
 800c8b2:	4638      	mov	r0, r7
 800c8b4:	f7fe ffb2 	bl	800b81c <LCD_SetColor>
 800c8b8:	9901      	ldr	r1, [sp, #4]
 800c8ba:	b111      	cbz	r1, 800c8c2 <_DrawGradient+0x36>
 800c8bc:	4628      	mov	r0, r5
 800c8be:	4641      	mov	r1, r8
 800c8c0:	e0b6      	b.n	800ca30 <_DrawGradient+0x1a4>
 800c8c2:	4640      	mov	r0, r8
 800c8c4:	e0ba      	b.n	800ca3c <_DrawGradient+0x1b0>
 800c8c6:	fa5f fc87 	uxtb.w	ip, r7
 800c8ca:	f3c7 2907 	ubfx	r9, r7, #8, #8
 800c8ce:	f8cd c01c 	str.w	ip, [sp, #28]
 800c8d2:	f3c7 4e07 	ubfx	lr, r7, #16, #8
 800c8d6:	ea4f 6c17 	mov.w	ip, r7, lsr #24
 800c8da:	f8cd 9020 	str.w	r9, [sp, #32]
 800c8de:	f8dd 901c 	ldr.w	r9, [sp, #28]
 800c8e2:	f8cd e024 	str.w	lr, [sp, #36]	; 0x24
 800c8e6:	fa5f f08a 	uxtb.w	r0, sl
 800c8ea:	f8cd c028 	str.w	ip, [sp, #40]	; 0x28
 800c8ee:	ebc9 0100 	rsb	r1, r9, r0
 800c8f2:	ebb6 0308 	subs.w	r3, r6, r8
 800c8f6:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 800c8fa:	f8dd e020 	ldr.w	lr, [sp, #32]
 800c8fe:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
 800c902:	910d      	str	r1, [sp, #52]	; 0x34
 800c904:	bf08      	it	eq
 800c906:	2301      	moveq	r3, #1
 800c908:	f3ca 4007 	ubfx	r0, sl, #16, #8
 800c90c:	f3ca 2207 	ubfx	r2, sl, #8, #8
 800c910:	ebcc 0100 	rsb	r1, ip, r0
 800c914:	ebc9 6a1a 	rsb	sl, r9, sl, lsr #24
 800c918:	9303      	str	r3, [sp, #12]
 800c91a:	4638      	mov	r0, r7
 800c91c:	ebce 0302 	rsb	r3, lr, r2
 800c920:	2700      	movs	r7, #0
 800c922:	930c      	str	r3, [sp, #48]	; 0x30
 800c924:	910e      	str	r1, [sp, #56]	; 0x38
 800c926:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 800c92a:	f108 33ff 	add.w	r3, r8, #4294967295
 800c92e:	9706      	str	r7, [sp, #24]
 800c930:	9705      	str	r7, [sp, #20]
 800c932:	9704      	str	r7, [sp, #16]
 800c934:	f04f 0901 	mov.w	r9, #1
 800c938:	f103 0a01 	add.w	sl, r3, #1
 800c93c:	45b2      	cmp	sl, r6
 800c93e:	dc6c      	bgt.n	800ca1a <_DrawGradient+0x18e>
 800c940:	f8dd b00c 	ldr.w	fp, [sp, #12]
 800c944:	f8dd e028 	ldr.w	lr, [sp, #40]	; 0x28
 800c948:	f8dd c018 	ldr.w	ip, [sp, #24]
 800c94c:	fb97 f2fb 	sdiv	r2, r7, fp
 800c950:	eb0e 0102 	add.w	r1, lr, r2
 800c954:	f8dd e00c 	ldr.w	lr, [sp, #12]
 800c958:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 800c95c:	fb9c f2fe 	sdiv	r2, ip, lr
 800c960:	445a      	add	r2, fp
 800c962:	f8dd c014 	ldr.w	ip, [sp, #20]
 800c966:	b2d2      	uxtb	r2, r2
 800c968:	0412      	lsls	r2, r2, #16
 800c96a:	ea42 6b01 	orr.w	fp, r2, r1, lsl #24
 800c96e:	fb9c f1fe 	sdiv	r1, ip, lr
 800c972:	f8dd c020 	ldr.w	ip, [sp, #32]
 800c976:	eb0c 0201 	add.w	r2, ip, r1
 800c97a:	f8dd c010 	ldr.w	ip, [sp, #16]
 800c97e:	b2d1      	uxtb	r1, r2
 800c980:	fb9c f2fe 	sdiv	r2, ip, lr
 800c984:	f8dd e01c 	ldr.w	lr, [sp, #28]
 800c988:	4472      	add	r2, lr
 800c98a:	b2d2      	uxtb	r2, r2
 800c98c:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
 800c990:	45c2      	cmp	sl, r8
 800c992:	ea4b 0b01 	orr.w	fp, fp, r1
 800c996:	dd25      	ble.n	800c9e4 <_DrawGradient+0x158>
 800c998:	4583      	cmp	fp, r0
 800c99a:	d102      	bne.n	800c9a2 <_DrawGradient+0x116>
 800c99c:	f109 0901 	add.w	r9, r9, #1
 800c9a0:	e020      	b.n	800c9e4 <_DrawGradient+0x158>
 800c9a2:	9300      	str	r3, [sp, #0]
 800c9a4:	f7fe ff3a 	bl	800b81c <LCD_SetColor>
 800c9a8:	f1b9 0f01 	cmp.w	r9, #1
 800c9ac:	9b00      	ldr	r3, [sp, #0]
 800c9ae:	d00f      	beq.n	800c9d0 <_DrawGradient+0x144>
 800c9b0:	9a01      	ldr	r2, [sp, #4]
 800c9b2:	ebc9 010a 	rsb	r1, r9, sl
 800c9b6:	b112      	cbz	r2, 800c9be <_DrawGradient+0x132>
 800c9b8:	4628      	mov	r0, r5
 800c9ba:	4622      	mov	r2, r4
 800c9bc:	e003      	b.n	800c9c6 <_DrawGradient+0x13a>
 800c9be:	4608      	mov	r0, r1
 800c9c0:	461a      	mov	r2, r3
 800c9c2:	4629      	mov	r1, r5
 800c9c4:	4623      	mov	r3, r4
 800c9c6:	f7fe fc59 	bl	800b27c <LCD_FillRect>
 800c9ca:	f04f 0901 	mov.w	r9, #1
 800c9ce:	e009      	b.n	800c9e4 <_DrawGradient+0x158>
 800c9d0:	9801      	ldr	r0, [sp, #4]
 800c9d2:	b110      	cbz	r0, 800c9da <_DrawGradient+0x14e>
 800c9d4:	4628      	mov	r0, r5
 800c9d6:	4619      	mov	r1, r3
 800c9d8:	e001      	b.n	800c9de <_DrawGradient+0x152>
 800c9da:	4618      	mov	r0, r3
 800c9dc:	4629      	mov	r1, r5
 800c9de:	4622      	mov	r2, r4
 800c9e0:	9b02      	ldr	r3, [sp, #8]
 800c9e2:	4798      	blx	r3
 800c9e4:	f8dd c010 	ldr.w	ip, [sp, #16]
 800c9e8:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 800c9ec:	44f4      	add	ip, lr
 800c9ee:	f8cd c010 	str.w	ip, [sp, #16]
 800c9f2:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
 800c9f6:	f8dd c014 	ldr.w	ip, [sp, #20]
 800c9fa:	44f4      	add	ip, lr
 800c9fc:	f8cd c014 	str.w	ip, [sp, #20]
 800ca00:	f8dd e038 	ldr.w	lr, [sp, #56]	; 0x38
 800ca04:	f8dd c018 	ldr.w	ip, [sp, #24]
 800ca08:	44f4      	add	ip, lr
 800ca0a:	f8dd e03c 	ldr.w	lr, [sp, #60]	; 0x3c
 800ca0e:	f8cd c018 	str.w	ip, [sp, #24]
 800ca12:	4477      	add	r7, lr
 800ca14:	4658      	mov	r0, fp
 800ca16:	4653      	mov	r3, sl
 800ca18:	e78e      	b.n	800c938 <_DrawGradient+0xac>
 800ca1a:	f7fe feff 	bl	800b81c <LCD_SetColor>
 800ca1e:	f1b9 0f01 	cmp.w	r9, #1
 800ca22:	d00f      	beq.n	800ca44 <_DrawGradient+0x1b8>
 800ca24:	9801      	ldr	r0, [sp, #4]
 800ca26:	ebc9 0106 	rsb	r1, r9, r6
 800ca2a:	b130      	cbz	r0, 800ca3a <_DrawGradient+0x1ae>
 800ca2c:	4628      	mov	r0, r5
 800ca2e:	3101      	adds	r1, #1
 800ca30:	4622      	mov	r2, r4
 800ca32:	4633      	mov	r3, r6
 800ca34:	f7fe fc22 	bl	800b27c <LCD_FillRect>
 800ca38:	e00e      	b.n	800ca58 <_DrawGradient+0x1cc>
 800ca3a:	1c48      	adds	r0, r1, #1
 800ca3c:	4629      	mov	r1, r5
 800ca3e:	4632      	mov	r2, r6
 800ca40:	4623      	mov	r3, r4
 800ca42:	e7f7      	b.n	800ca34 <_DrawGradient+0x1a8>
 800ca44:	9a01      	ldr	r2, [sp, #4]
 800ca46:	b112      	cbz	r2, 800ca4e <_DrawGradient+0x1c2>
 800ca48:	4628      	mov	r0, r5
 800ca4a:	4631      	mov	r1, r6
 800ca4c:	e001      	b.n	800ca52 <_DrawGradient+0x1c6>
 800ca4e:	4630      	mov	r0, r6
 800ca50:	4629      	mov	r1, r5
 800ca52:	4622      	mov	r2, r4
 800ca54:	9b02      	ldr	r3, [sp, #8]
 800ca56:	4798      	blx	r3
 800ca58:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800ca5a:	b011      	add	sp, #68	; 0x44
 800ca5c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ca60:	f7fe bedc 	b.w	800b81c <LCD_SetColor>

0800ca64 <GUI_DrawGradientV>:
 800ca64:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ca68:	4c15      	ldr	r4, [pc, #84]	; (800cac0 <GUI_DrawGradientV+0x5c>)
 800ca6a:	6824      	ldr	r4, [r4, #0]
 800ca6c:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 800ca6e:	eb00 0905 	add.w	r9, r0, r5
 800ca72:	6d20      	ldr	r0, [r4, #80]	; 0x50
 800ca74:	b087      	sub	sp, #28
 800ca76:	eb01 0800 	add.w	r8, r1, r0
 800ca7a:	181c      	adds	r4, r3, r0
 800ca7c:	1955      	adds	r5, r2, r5
 800ca7e:	a804      	add	r0, sp, #16
 800ca80:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800ca82:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800ca84:	f8ad 9010 	strh.w	r9, [sp, #16]
 800ca88:	f8ad 5014 	strh.w	r5, [sp, #20]
 800ca8c:	f8ad 8012 	strh.w	r8, [sp, #18]
 800ca90:	f8ad 4016 	strh.w	r4, [sp, #22]
 800ca94:	f7fb fef8 	bl	8008888 <WM__InitIVRSearch>
 800ca98:	b170      	cbz	r0, 800cab8 <GUI_DrawGradientV+0x54>
 800ca9a:	4b0a      	ldr	r3, [pc, #40]	; (800cac4 <GUI_DrawGradientV+0x60>)
 800ca9c:	9700      	str	r7, [sp, #0]
 800ca9e:	2101      	movs	r1, #1
 800caa0:	9302      	str	r3, [sp, #8]
 800caa2:	9103      	str	r1, [sp, #12]
 800caa4:	4648      	mov	r0, r9
 800caa6:	4641      	mov	r1, r8
 800caa8:	462a      	mov	r2, r5
 800caaa:	4623      	mov	r3, r4
 800caac:	9601      	str	r6, [sp, #4]
 800caae:	f7ff feed 	bl	800c88c <_DrawGradient>
 800cab2:	f7fb fe29 	bl	8008708 <WM__GetNextIVR>
 800cab6:	e7ef      	b.n	800ca98 <GUI_DrawGradientV+0x34>
 800cab8:	b007      	add	sp, #28
 800caba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cabe:	bf00      	nop
 800cac0:	20000278 	.word	0x20000278
 800cac4:	0800b1e5 	.word	0x0800b1e5

0800cac8 <GUI_DrawGradientH>:
 800cac8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cacc:	4c15      	ldr	r4, [pc, #84]	; (800cb24 <GUI_DrawGradientH+0x5c>)
 800cace:	6825      	ldr	r5, [r4, #0]
 800cad0:	6cec      	ldr	r4, [r5, #76]	; 0x4c
 800cad2:	eb00 0804 	add.w	r8, r0, r4
 800cad6:	6d28      	ldr	r0, [r5, #80]	; 0x50
 800cad8:	b087      	sub	sp, #28
 800cada:	eb01 0900 	add.w	r9, r1, r0
 800cade:	181d      	adds	r5, r3, r0
 800cae0:	1914      	adds	r4, r2, r4
 800cae2:	a804      	add	r0, sp, #16
 800cae4:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 800cae6:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800cae8:	f8ad 8010 	strh.w	r8, [sp, #16]
 800caec:	f8ad 4014 	strh.w	r4, [sp, #20]
 800caf0:	f8ad 9012 	strh.w	r9, [sp, #18]
 800caf4:	f8ad 5016 	strh.w	r5, [sp, #22]
 800caf8:	f7fb fec6 	bl	8008888 <WM__InitIVRSearch>
 800cafc:	b170      	cbz	r0, 800cb1c <GUI_DrawGradientH+0x54>
 800cafe:	4b0a      	ldr	r3, [pc, #40]	; (800cb28 <GUI_DrawGradientH+0x60>)
 800cb00:	9700      	str	r7, [sp, #0]
 800cb02:	2100      	movs	r1, #0
 800cb04:	9302      	str	r3, [sp, #8]
 800cb06:	9103      	str	r1, [sp, #12]
 800cb08:	4648      	mov	r0, r9
 800cb0a:	4641      	mov	r1, r8
 800cb0c:	462a      	mov	r2, r5
 800cb0e:	4623      	mov	r3, r4
 800cb10:	9601      	str	r6, [sp, #4]
 800cb12:	f7ff febb 	bl	800c88c <_DrawGradient>
 800cb16:	f7fb fdf7 	bl	8008708 <WM__GetNextIVR>
 800cb1a:	e7ef      	b.n	800cafc <GUI_DrawGradientH+0x34>
 800cb1c:	b007      	add	sp, #28
 800cb1e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cb22:	bf00      	nop
 800cb24:	20000278 	.word	0x20000278
 800cb28:	0800b231 	.word	0x0800b231

0800cb2c <_DrawBitmap>:
 800cb2c:	b510      	push	{r4, lr}
 800cb2e:	b086      	sub	sp, #24
 800cb30:	9c08      	ldr	r4, [sp, #32]
 800cb32:	9400      	str	r4, [sp, #0]
 800cb34:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800cb36:	9401      	str	r4, [sp, #4]
 800cb38:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800cb3a:	9402      	str	r4, [sp, #8]
 800cb3c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800cb3e:	9403      	str	r4, [sp, #12]
 800cb40:	4c03      	ldr	r4, [pc, #12]	; (800cb50 <_DrawBitmap+0x24>)
 800cb42:	9404      	str	r4, [sp, #16]
 800cb44:	4c03      	ldr	r4, [pc, #12]	; (800cb54 <_DrawBitmap+0x28>)
 800cb46:	9405      	str	r4, [sp, #20]
 800cb48:	f004 fdae 	bl	80116a8 <GUI__DrawBitmap16bpp>
 800cb4c:	b006      	add	sp, #24
 800cb4e:	bd10      	pop	{r4, pc}
 800cb50:	0800e131 	.word	0x0800e131
 800cb54:	0802c3d0 	.word	0x0802c3d0

0800cb58 <GL_DrawBitmap>:
 800cb58:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cb5c:	68c6      	ldr	r6, [r0, #12]
 800cb5e:	b087      	sub	sp, #28
 800cb60:	4604      	mov	r4, r0
 800cb62:	2000      	movs	r0, #0
 800cb64:	4688      	mov	r8, r1
 800cb66:	4617      	mov	r7, r2
 800cb68:	f7ff fbfe 	bl	800c368 <GUI_SetDrawMode>
 800cb6c:	4605      	mov	r5, r0
 800cb6e:	b126      	cbz	r6, 800cb7a <GL_DrawBitmap+0x22>
 800cb70:	7933      	ldrb	r3, [r6, #4]
 800cb72:	b113      	cbz	r3, 800cb7a <GL_DrawBitmap+0x22>
 800cb74:	f040 0002 	orr.w	r0, r0, #2
 800cb78:	e001      	b.n	800cb7e <GL_DrawBitmap+0x26>
 800cb7a:	f025 0002 	bic.w	r0, r5, #2
 800cb7e:	f7ff fbf3 	bl	800c368 <GUI_SetDrawMode>
 800cb82:	6921      	ldr	r1, [r4, #16]
 800cb84:	b169      	cbz	r1, 800cba2 <GL_DrawBitmap+0x4a>
 800cb86:	68a0      	ldr	r0, [r4, #8]
 800cb88:	8822      	ldrh	r2, [r4, #0]
 800cb8a:	8863      	ldrh	r3, [r4, #2]
 800cb8c:	9000      	str	r0, [sp, #0]
 800cb8e:	68e4      	ldr	r4, [r4, #12]
 800cb90:	2001      	movs	r0, #1
 800cb92:	9002      	str	r0, [sp, #8]
 800cb94:	9003      	str	r0, [sp, #12]
 800cb96:	9401      	str	r4, [sp, #4]
 800cb98:	680c      	ldr	r4, [r1, #0]
 800cb9a:	4640      	mov	r0, r8
 800cb9c:	4639      	mov	r1, r7
 800cb9e:	47a0      	blx	r4
 800cba0:	e020      	b.n	800cbe4 <GL_DrawBitmap+0x8c>
 800cba2:	f8df 9050 	ldr.w	r9, [pc, #80]	; 800cbf4 <GL_DrawBitmap+0x9c>
 800cba6:	4a12      	ldr	r2, [pc, #72]	; (800cbf0 <GL_DrawBitmap+0x98>)
 800cba8:	f8d9 3000 	ldr.w	r3, [r9]
 800cbac:	6816      	ldr	r6, [r2, #0]
 800cbae:	68e0      	ldr	r0, [r4, #12]
 800cbb0:	7c5a      	ldrb	r2, [r3, #17]
 800cbb2:	4621      	mov	r1, r4
 800cbb4:	47b0      	blx	r6
 800cbb6:	b928      	cbnz	r0, 800cbc4 <GL_DrawBitmap+0x6c>
 800cbb8:	88e1      	ldrh	r1, [r4, #6]
 800cbba:	2901      	cmp	r1, #1
 800cbbc:	bf04      	itt	eq
 800cbbe:	f8d9 1000 	ldreq.w	r1, [r9]
 800cbc2:	6b88      	ldreq	r0, [r1, #56]	; 0x38
 800cbc4:	2101      	movs	r1, #1
 800cbc6:	8822      	ldrh	r2, [r4, #0]
 800cbc8:	8863      	ldrh	r3, [r4, #2]
 800cbca:	9100      	str	r1, [sp, #0]
 800cbcc:	9101      	str	r1, [sp, #4]
 800cbce:	88e1      	ldrh	r1, [r4, #6]
 800cbd0:	9102      	str	r1, [sp, #8]
 800cbd2:	88a1      	ldrh	r1, [r4, #4]
 800cbd4:	9103      	str	r1, [sp, #12]
 800cbd6:	68a1      	ldr	r1, [r4, #8]
 800cbd8:	9005      	str	r0, [sp, #20]
 800cbda:	9104      	str	r1, [sp, #16]
 800cbdc:	4640      	mov	r0, r8
 800cbde:	4639      	mov	r1, r7
 800cbe0:	f7fe fc52 	bl	800b488 <LCD_DrawBitmap>
 800cbe4:	4628      	mov	r0, r5
 800cbe6:	b007      	add	sp, #28
 800cbe8:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cbec:	f7ff bbbc 	b.w	800c368 <GUI_SetDrawMode>
 800cbf0:	20000280 	.word	0x20000280
 800cbf4:	20000278 	.word	0x20000278

0800cbf8 <GUI_DrawBitmap>:
 800cbf8:	4b11      	ldr	r3, [pc, #68]	; (800cc40 <GUI_DrawBitmap+0x48>)
 800cbfa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cbfc:	4606      	mov	r6, r0
 800cbfe:	6818      	ldr	r0, [r3, #0]
 800cc00:	6cc5      	ldr	r5, [r0, #76]	; 0x4c
 800cc02:	6d04      	ldr	r4, [r0, #80]	; 0x50
 800cc04:	8870      	ldrh	r0, [r6, #2]
 800cc06:	194d      	adds	r5, r1, r5
 800cc08:	8831      	ldrh	r1, [r6, #0]
 800cc0a:	f8ad 5000 	strh.w	r5, [sp]
 800cc0e:	1914      	adds	r4, r2, r4
 800cc10:	1e4a      	subs	r2, r1, #1
 800cc12:	1e41      	subs	r1, r0, #1
 800cc14:	1953      	adds	r3, r2, r5
 800cc16:	4668      	mov	r0, sp
 800cc18:	190a      	adds	r2, r1, r4
 800cc1a:	f8ad 3004 	strh.w	r3, [sp, #4]
 800cc1e:	f8ad 4002 	strh.w	r4, [sp, #2]
 800cc22:	f8ad 2006 	strh.w	r2, [sp, #6]
 800cc26:	f7fb fe2f 	bl	8008888 <WM__InitIVRSearch>
 800cc2a:	b138      	cbz	r0, 800cc3c <GUI_DrawBitmap+0x44>
 800cc2c:	4630      	mov	r0, r6
 800cc2e:	4629      	mov	r1, r5
 800cc30:	4622      	mov	r2, r4
 800cc32:	f7ff ff91 	bl	800cb58 <GL_DrawBitmap>
 800cc36:	f7fb fd67 	bl	8008708 <WM__GetNextIVR>
 800cc3a:	e7f6      	b.n	800cc2a <GUI_DrawBitmap+0x32>
 800cc3c:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
 800cc3e:	bf00      	nop
 800cc40:	20000278 	.word	0x20000278

0800cc44 <GUI_WrapGetNumLines>:
 800cc44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cc46:	4605      	mov	r5, r0
 800cc48:	460e      	mov	r6, r1
 800cc4a:	4617      	mov	r7, r2
 800cc4c:	2400      	movs	r4, #0
 800cc4e:	4628      	mov	r0, r5
 800cc50:	4631      	mov	r1, r6
 800cc52:	463a      	mov	r2, r7
 800cc54:	f004 fc42 	bl	80114dc <GUI__WrapGetNumBytesToNextLine>
 800cc58:	b110      	cbz	r0, 800cc60 <GUI_WrapGetNumLines+0x1c>
 800cc5a:	182d      	adds	r5, r5, r0
 800cc5c:	3401      	adds	r4, #1
 800cc5e:	e7f6      	b.n	800cc4e <GUI_WrapGetNumLines+0xa>
 800cc60:	4620      	mov	r0, r4
 800cc62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800cc64 <GUI_DispStringInRectWrap>:
 800cc64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cc68:	b089      	sub	sp, #36	; 0x24
 800cc6a:	460c      	mov	r4, r1
 800cc6c:	9202      	str	r2, [sp, #8]
 800cc6e:	9303      	str	r3, [sp, #12]
 800cc70:	4605      	mov	r5, r0
 800cc72:	2800      	cmp	r0, #0
 800cc74:	f000 808e 	beq.w	800cd94 <GUI_DispStringInRectWrap+0x130>
 800cc78:	f8b1 9000 	ldrh.w	r9, [r1]
 800cc7c:	f8b1 a004 	ldrh.w	sl, [r1, #4]
 800cc80:	884e      	ldrh	r6, [r1, #2]
 800cc82:	f8b1 b006 	ldrh.w	fp, [r1, #6]
 800cc86:	fa0f f28a 	sxth.w	r2, sl
 800cc8a:	fa0f f389 	sxth.w	r3, r9
 800cc8e:	1ad0      	subs	r0, r2, r3
 800cc90:	1c41      	adds	r1, r0, #1
 800cc92:	9101      	str	r1, [sp, #4]
 800cc94:	f000 fe48 	bl	800d928 <GUI_GetFontDistY>
 800cc98:	9a02      	ldr	r2, [sp, #8]
 800cc9a:	f012 080c 	ands.w	r8, r2, #12
 800cc9e:	4607      	mov	r7, r0
 800cca0:	d01e      	beq.n	800cce0 <GUI_DispStringInRectWrap+0x7c>
 800cca2:	4628      	mov	r0, r5
 800cca4:	9901      	ldr	r1, [sp, #4]
 800cca6:	9a03      	ldr	r2, [sp, #12]
 800cca8:	f7ff ffcc 	bl	800cc44 <GUI_WrapGetNumLines>
 800ccac:	f1b8 0f08 	cmp.w	r8, #8
 800ccb0:	d005      	beq.n	800ccbe <GUI_DispStringInRectWrap+0x5a>
 800ccb2:	f1b8 0f0c 	cmp.w	r8, #12
 800ccb6:	d007      	beq.n	800ccc8 <GUI_DispStringInRectWrap+0x64>
 800ccb8:	f1b8 0f04 	cmp.w	r8, #4
 800ccbc:	d110      	bne.n	800cce0 <GUI_DispStringInRectWrap+0x7c>
 800ccbe:	f10b 0101 	add.w	r1, fp, #1
 800ccc2:	fb07 1610 	mls	r6, r7, r0, r1
 800ccc6:	e00a      	b.n	800ccde <GUI_DispStringInRectWrap+0x7a>
 800ccc8:	b233      	sxth	r3, r6
 800ccca:	fa0f f18b 	sxth.w	r1, fp
 800ccce:	1aca      	subs	r2, r1, r3
 800ccd0:	1c51      	adds	r1, r2, #1
 800ccd2:	fb07 1010 	mls	r0, r7, r0, r1
 800ccd6:	2302      	movs	r3, #2
 800ccd8:	fb90 f2f3 	sdiv	r2, r0, r3
 800ccdc:	1996      	adds	r6, r2, r6
 800ccde:	b2b6      	uxth	r6, r6
 800cce0:	4620      	mov	r0, r4
 800cce2:	f7fa fa8b 	bl	80071fc <WM_SetUserClipRect>
 800cce6:	4680      	mov	r8, r0
 800cce8:	b178      	cbz	r0, 800cd0a <GUI_DispStringInRectWrap+0xa6>
 800ccea:	a804      	add	r0, sp, #16
 800ccec:	4621      	mov	r1, r4
 800ccee:	4642      	mov	r2, r8
 800ccf0:	f8ad 9010 	strh.w	r9, [sp, #16]
 800ccf4:	f8ad 6012 	strh.w	r6, [sp, #18]
 800ccf8:	f8ad a014 	strh.w	sl, [sp, #20]
 800ccfc:	f8ad b016 	strh.w	fp, [sp, #22]
 800cd00:	f7fe feb0 	bl	800ba64 <GUI__IntersectRects>
 800cd04:	a804      	add	r0, sp, #16
 800cd06:	f7fa fa79 	bl	80071fc <WM_SetUserClipRect>
 800cd0a:	9a03      	ldr	r2, [sp, #12]
 800cd0c:	9901      	ldr	r1, [sp, #4]
 800cd0e:	4628      	mov	r0, r5
 800cd10:	f004 fbb4 	bl	801147c <GUI__WrapGetNumCharsDisp>
 800cd14:	4683      	mov	fp, r0
 800cd16:	1e78      	subs	r0, r7, #1
 800cd18:	1983      	adds	r3, r0, r6
 800cd1a:	4659      	mov	r1, fp
 800cd1c:	4628      	mov	r0, r5
 800cd1e:	f8ad 301e 	strh.w	r3, [sp, #30]
 800cd22:	f8ad 9018 	strh.w	r9, [sp, #24]
 800cd26:	f8ad 601a 	strh.w	r6, [sp, #26]
 800cd2a:	f8ad a01c 	strh.w	sl, [sp, #28]
 800cd2e:	f000 fd61 	bl	800d7f4 <GUI__GetLineDistX>
 800cd32:	9a02      	ldr	r2, [sp, #8]
 800cd34:	f002 0303 	and.w	r3, r2, #3
 800cd38:	2b01      	cmp	r3, #1
 800cd3a:	d013      	beq.n	800cd64 <GUI_DispStringInRectWrap+0x100>
 800cd3c:	2b02      	cmp	r3, #2
 800cd3e:	d004      	beq.n	800cd4a <GUI_DispStringInRectWrap+0xe6>
 800cd40:	b9ab      	cbnz	r3, 800cd6e <GUI_DispStringInRectWrap+0x10a>
 800cd42:	8821      	ldrh	r1, [r4, #0]
 800cd44:	f8ad 1018 	strh.w	r1, [sp, #24]
 800cd48:	e011      	b.n	800cd6e <GUI_DispStringInRectWrap+0x10a>
 800cd4a:	8822      	ldrh	r2, [r4, #0]
 800cd4c:	f9b4 e004 	ldrsh.w	lr, [r4, #4]
 800cd50:	b211      	sxth	r1, r2
 800cd52:	ebc1 010e 	rsb	r1, r1, lr
 800cd56:	1a08      	subs	r0, r1, r0
 800cd58:	fb90 f3f3 	sdiv	r3, r0, r3
 800cd5c:	189a      	adds	r2, r3, r2
 800cd5e:	f8ad 2018 	strh.w	r2, [sp, #24]
 800cd62:	e004      	b.n	800cd6e <GUI_DispStringInRectWrap+0x10a>
 800cd64:	88a1      	ldrh	r1, [r4, #4]
 800cd66:	1c4b      	adds	r3, r1, #1
 800cd68:	1a18      	subs	r0, r3, r0
 800cd6a:	f8ad 0018 	strh.w	r0, [sp, #24]
 800cd6e:	4628      	mov	r0, r5
 800cd70:	4659      	mov	r1, fp
 800cd72:	aa06      	add	r2, sp, #24
 800cd74:	f000 fd6c 	bl	800d850 <GUI__DispLine>
 800cd78:	4628      	mov	r0, r5
 800cd7a:	9a03      	ldr	r2, [sp, #12]
 800cd7c:	9901      	ldr	r1, [sp, #4]
 800cd7e:	f004 fbad 	bl	80114dc <GUI__WrapGetNumBytesToNextLine>
 800cd82:	182d      	adds	r5, r5, r0
 800cd84:	19f6      	adds	r6, r6, r7
 800cd86:	782a      	ldrb	r2, [r5, #0]
 800cd88:	b2b6      	uxth	r6, r6
 800cd8a:	2a00      	cmp	r2, #0
 800cd8c:	d1bd      	bne.n	800cd0a <GUI_DispStringInRectWrap+0xa6>
 800cd8e:	4640      	mov	r0, r8
 800cd90:	f7fa fa34 	bl	80071fc <WM_SetUserClipRect>
 800cd94:	b009      	add	sp, #36	; 0x24
 800cd96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800cd9c <GUI__DispStringInRect>:
 800cd9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cda0:	b087      	sub	sp, #28
 800cda2:	460c      	mov	r4, r1
 800cda4:	9001      	str	r0, [sp, #4]
 800cda6:	4691      	mov	r9, r2
 800cda8:	461e      	mov	r6, r3
 800cdaa:	f000 fdbd 	bl	800d928 <GUI_GetFontDistY>
 800cdae:	9f01      	ldr	r7, [sp, #4]
 800cdb0:	4680      	mov	r8, r0
 800cdb2:	b124      	cbz	r4, 800cdbe <GUI__DispStringInRect+0x22>
 800cdb4:	6820      	ldr	r0, [r4, #0]
 800cdb6:	6861      	ldr	r1, [r4, #4]
 800cdb8:	aa04      	add	r2, sp, #16
 800cdba:	c203      	stmia	r2!, {r0, r1}
 800cdbc:	e002      	b.n	800cdc4 <GUI__DispStringInRect+0x28>
 800cdbe:	a804      	add	r0, sp, #16
 800cdc0:	f7ff fcae 	bl	800c720 <GUI_GetClientRect>
 800cdc4:	f019 0a0c 	ands.w	sl, r9, #12
 800cdc8:	d102      	bne.n	800cdd0 <GUI__DispStringInRect+0x34>
 800cdca:	f9bd 4012 	ldrsh.w	r4, [sp, #18]
 800cdce:	e034      	b.n	800ce3a <GUI__DispStringInRect+0x9e>
 800cdd0:	4634      	mov	r4, r6
 800cdd2:	2500      	movs	r5, #0
 800cdd4:	b1a4      	cbz	r4, 800ce00 <GUI__DispStringInRect+0x64>
 800cdd6:	4621      	mov	r1, r4
 800cdd8:	9801      	ldr	r0, [sp, #4]
 800cdda:	f000 fce1 	bl	800d7a0 <GUI__GetLineNumChars>
 800cdde:	f8dd b004 	ldr.w	fp, [sp, #4]
 800cde2:	4601      	mov	r1, r0
 800cde4:	1a24      	subs	r4, r4, r0
 800cde6:	4658      	mov	r0, fp
 800cde8:	f004 ff52 	bl	8011c90 <GUI_UC__NumChars2NumBytes>
 800cdec:	eb0b 0300 	add.w	r3, fp, r0
 800cdf0:	a806      	add	r0, sp, #24
 800cdf2:	3501      	adds	r5, #1
 800cdf4:	f840 3d14 	str.w	r3, [r0, #-20]!
 800cdf8:	f004 fb7a 	bl	80114f0 <GUI__HandleEOLine>
 800cdfc:	2800      	cmp	r0, #0
 800cdfe:	d0e9      	beq.n	800cdd4 <GUI__DispStringInRect+0x38>
 800ce00:	f1ba 0f08 	cmp.w	sl, #8
 800ce04:	d005      	beq.n	800ce12 <GUI__DispStringInRect+0x76>
 800ce06:	f1ba 0f0c 	cmp.w	sl, #12
 800ce0a:	d008      	beq.n	800ce1e <GUI__DispStringInRect+0x82>
 800ce0c:	f1ba 0f04 	cmp.w	sl, #4
 800ce10:	d112      	bne.n	800ce38 <GUI__DispStringInRect+0x9c>
 800ce12:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 800ce16:	fb08 0215 	mls	r2, r8, r5, r0
 800ce1a:	1c54      	adds	r4, r2, #1
 800ce1c:	e00d      	b.n	800ce3a <GUI__DispStringInRect+0x9e>
 800ce1e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 800ce22:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 800ce26:	1a0a      	subs	r2, r1, r0
 800ce28:	1c54      	adds	r4, r2, #1
 800ce2a:	fb08 4515 	mls	r5, r8, r5, r4
 800ce2e:	2302      	movs	r3, #2
 800ce30:	fb95 f1f3 	sdiv	r1, r5, r3
 800ce34:	1844      	adds	r4, r0, r1
 800ce36:	e000      	b.n	800ce3a <GUI__DispStringInRect+0x9e>
 800ce38:	2400      	movs	r4, #0
 800ce3a:	9701      	str	r7, [sp, #4]
 800ce3c:	2500      	movs	r5, #0
 800ce3e:	2e00      	cmp	r6, #0
 800ce40:	d04b      	beq.n	800ceda <GUI__DispStringInRect+0x13e>
 800ce42:	4631      	mov	r1, r6
 800ce44:	9801      	ldr	r0, [sp, #4]
 800ce46:	f000 fcab 	bl	800d7a0 <GUI__GetLineNumChars>
 800ce4a:	4607      	mov	r7, r0
 800ce4c:	1a36      	subs	r6, r6, r0
 800ce4e:	4639      	mov	r1, r7
 800ce50:	9801      	ldr	r0, [sp, #4]
 800ce52:	f000 fccf 	bl	800d7f4 <GUI__GetLineDistX>
 800ce56:	f009 0303 	and.w	r3, r9, #3
 800ce5a:	2b01      	cmp	r3, #1
 800ce5c:	d00f      	beq.n	800ce7e <GUI__DispStringInRect+0xe2>
 800ce5e:	2b02      	cmp	r3, #2
 800ce60:	d003      	beq.n	800ce6a <GUI__DispStringInRect+0xce>
 800ce62:	b983      	cbnz	r3, 800ce86 <GUI__DispStringInRect+0xea>
 800ce64:	f9bd 5010 	ldrsh.w	r5, [sp, #16]
 800ce68:	e00d      	b.n	800ce86 <GUI__DispStringInRect+0xea>
 800ce6a:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 800ce6e:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800ce72:	1a6a      	subs	r2, r5, r1
 800ce74:	1a15      	subs	r5, r2, r0
 800ce76:	fb95 f3f3 	sdiv	r3, r5, r3
 800ce7a:	18cd      	adds	r5, r1, r3
 800ce7c:	e003      	b.n	800ce86 <GUI__DispStringInRect+0xea>
 800ce7e:	f9bd 1014 	ldrsh.w	r1, [sp, #20]
 800ce82:	1a0a      	subs	r2, r1, r0
 800ce84:	1c55      	adds	r5, r2, #1
 800ce86:	4b16      	ldr	r3, [pc, #88]	; (800cee0 <GUI__DispStringInRect+0x144>)
 800ce88:	6819      	ldr	r1, [r3, #0]
 800ce8a:	b2aa      	uxth	r2, r5
 800ce8c:	b2a3      	uxth	r3, r4
 800ce8e:	3801      	subs	r0, #1
 800ce90:	844a      	strh	r2, [r1, #34]	; 0x22
 800ce92:	848b      	strh	r3, [r1, #36]	; 0x24
 800ce94:	f8ad 2008 	strh.w	r2, [sp, #8]
 800ce98:	1941      	adds	r1, r0, r5
 800ce9a:	f108 32ff 	add.w	r2, r8, #4294967295
 800ce9e:	f8ad 100c 	strh.w	r1, [sp, #12]
 800cea2:	f8ad 300a 	strh.w	r3, [sp, #10]
 800cea6:	4639      	mov	r1, r7
 800cea8:	1913      	adds	r3, r2, r4
 800ceaa:	9801      	ldr	r0, [sp, #4]
 800ceac:	f8ad 300e 	strh.w	r3, [sp, #14]
 800ceb0:	aa02      	add	r2, sp, #8
 800ceb2:	f000 fccd 	bl	800d850 <GUI__DispLine>
 800ceb6:	f8dd a004 	ldr.w	sl, [sp, #4]
 800ceba:	4639      	mov	r1, r7
 800cebc:	4650      	mov	r0, sl
 800cebe:	f004 fee7 	bl	8011c90 <GUI_UC__NumChars2NumBytes>
 800cec2:	af06      	add	r7, sp, #24
 800cec4:	4450      	add	r0, sl
 800cec6:	f847 0d14 	str.w	r0, [r7, #-20]!
 800ceca:	f000 fd2d 	bl	800d928 <GUI_GetFontDistY>
 800cece:	1824      	adds	r4, r4, r0
 800ced0:	4638      	mov	r0, r7
 800ced2:	f004 fb0d 	bl	80114f0 <GUI__HandleEOLine>
 800ced6:	2800      	cmp	r0, #0
 800ced8:	d0b1      	beq.n	800ce3e <GUI__DispStringInRect+0xa2>
 800ceda:	b007      	add	sp, #28
 800cedc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cee0:	20000278 	.word	0x20000278

0800cee4 <GUI_DispStringInRectMax>:
 800cee4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800cee8:	460d      	mov	r5, r1
 800ceea:	4690      	mov	r8, r2
 800ceec:	461f      	mov	r7, r3
 800ceee:	4606      	mov	r6, r0
 800cef0:	b1c8      	cbz	r0, 800cf26 <GUI_DispStringInRectMax+0x42>
 800cef2:	b909      	cbnz	r1, 800cef8 <GUI_DispStringInRectMax+0x14>
 800cef4:	2400      	movs	r4, #0
 800cef6:	e00d      	b.n	800cf14 <GUI_DispStringInRectMax+0x30>
 800cef8:	4608      	mov	r0, r1
 800cefa:	f7fa f97f 	bl	80071fc <WM_SetUserClipRect>
 800cefe:	4604      	mov	r4, r0
 800cf00:	2800      	cmp	r0, #0
 800cf02:	d0f7      	beq.n	800cef4 <GUI_DispStringInRectMax+0x10>
 800cf04:	4668      	mov	r0, sp
 800cf06:	4629      	mov	r1, r5
 800cf08:	4622      	mov	r2, r4
 800cf0a:	f7fe fdab 	bl	800ba64 <GUI__IntersectRects>
 800cf0e:	4668      	mov	r0, sp
 800cf10:	f7fa f974 	bl	80071fc <WM_SetUserClipRect>
 800cf14:	4630      	mov	r0, r6
 800cf16:	4629      	mov	r1, r5
 800cf18:	4642      	mov	r2, r8
 800cf1a:	463b      	mov	r3, r7
 800cf1c:	f7ff ff3e 	bl	800cd9c <GUI__DispStringInRect>
 800cf20:	4620      	mov	r0, r4
 800cf22:	f7fa f96b 	bl	80071fc <WM_SetUserClipRect>
 800cf26:	e8bd 81fc 	ldmia.w	sp!, {r2, r3, r4, r5, r6, r7, r8, pc}

0800cf2a <GUI_DispStringInRect>:
 800cf2a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800cf2e:	f7ff bfd9 	b.w	800cee4 <GUI_DispStringInRectMax>
	...

0800cf34 <GUI_DispStringHCenterAt>:
 800cf34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cf36:	4b0b      	ldr	r3, [pc, #44]	; (800cf64 <GUI_DispStringHCenterAt+0x30>)
 800cf38:	4605      	mov	r5, r0
 800cf3a:	6818      	ldr	r0, [r3, #0]
 800cf3c:	460f      	mov	r7, r1
 800cf3e:	f9b0 102c 	ldrsh.w	r1, [r0, #44]	; 0x2c
 800cf42:	f041 0002 	orr.w	r0, r1, #2
 800cf46:	4616      	mov	r6, r2
 800cf48:	f004 feb4 	bl	8011cb4 <GUI_SetTextAlign>
 800cf4c:	4639      	mov	r1, r7
 800cf4e:	4604      	mov	r4, r0
 800cf50:	4632      	mov	r2, r6
 800cf52:	4628      	mov	r0, r5
 800cf54:	f000 f810 	bl	800cf78 <GUI_DispStringAt>
 800cf58:	4620      	mov	r0, r4
 800cf5a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800cf5e:	f004 bea9 	b.w	8011cb4 <GUI_SetTextAlign>
 800cf62:	bf00      	nop
 800cf64:	20000278 	.word	0x20000278

0800cf68 <GUI_DispStringAtCEOL>:
 800cf68:	b508      	push	{r3, lr}
 800cf6a:	f000 f805 	bl	800cf78 <GUI_DispStringAt>
 800cf6e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800cf72:	f000 b891 	b.w	800d098 <GUI_DispCEOL>
	...

0800cf78 <GUI_DispStringAt>:
 800cf78:	4b02      	ldr	r3, [pc, #8]	; (800cf84 <GUI_DispStringAt+0xc>)
 800cf7a:	681b      	ldr	r3, [r3, #0]
 800cf7c:	8459      	strh	r1, [r3, #34]	; 0x22
 800cf7e:	849a      	strh	r2, [r3, #36]	; 0x24
 800cf80:	f000 b802 	b.w	800cf88 <GUI_DispString>
 800cf84:	20000278 	.word	0x20000278

0800cf88 <GUI_DispString>:
 800cf88:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cf8c:	4604      	mov	r4, r0
 800cf8e:	2800      	cmp	r0, #0
 800cf90:	d07d      	beq.n	800d08e <GUI_DispString+0x106>
 800cf92:	4d40      	ldr	r5, [pc, #256]	; (800d094 <GUI_DispString+0x10c>)
 800cf94:	f000 fcc8 	bl	800d928 <GUI_GetFontDistY>
 800cf98:	682b      	ldr	r3, [r5, #0]
 800cf9a:	4680      	mov	r8, r0
 800cf9c:	f8b3 9022 	ldrh.w	r9, [r3, #34]	; 0x22
 800cfa0:	f000 fcaa 	bl	800d8f8 <GUI_GetYAdjust>
 800cfa4:	6829      	ldr	r1, [r5, #0]
 800cfa6:	8c8a      	ldrh	r2, [r1, #36]	; 0x24
 800cfa8:	b287      	uxth	r7, r0
 800cfaa:	1bd0      	subs	r0, r2, r7
 800cfac:	8488      	strh	r0, [r1, #36]	; 0x24
 800cfae:	7823      	ldrb	r3, [r4, #0]
 800cfb0:	2b00      	cmp	r3, #0
 800cfb2:	d060      	beq.n	800d076 <GUI_DispString+0xee>
 800cfb4:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800cfb8:	4620      	mov	r0, r4
 800cfba:	f000 fbf1 	bl	800d7a0 <GUI__GetLineNumChars>
 800cfbe:	4e35      	ldr	r6, [pc, #212]	; (800d094 <GUI_DispString+0x10c>)
 800cfc0:	4605      	mov	r5, r0
 800cfc2:	4629      	mov	r1, r5
 800cfc4:	4620      	mov	r0, r4
 800cfc6:	f000 fc15 	bl	800d7f4 <GUI__GetLineDistX>
 800cfca:	6833      	ldr	r3, [r6, #0]
 800cfcc:	8d99      	ldrh	r1, [r3, #44]	; 0x2c
 800cfce:	f001 0203 	and.w	r2, r1, #3
 800cfd2:	2a01      	cmp	r2, #1
 800cfd4:	d006      	beq.n	800cfe4 <GUI_DispString+0x5c>
 800cfd6:	2a02      	cmp	r2, #2
 800cfd8:	d001      	beq.n	800cfde <GUI_DispString+0x56>
 800cfda:	2600      	movs	r6, #0
 800cfdc:	e003      	b.n	800cfe6 <GUI_DispString+0x5e>
 800cfde:	fb90 f6f2 	sdiv	r6, r0, r2
 800cfe2:	e000      	b.n	800cfe6 <GUI_DispString+0x5e>
 800cfe4:	4606      	mov	r6, r0
 800cfe6:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800cfe8:	1b8a      	subs	r2, r1, r6
 800cfea:	b296      	uxth	r6, r2
 800cfec:	b2b1      	uxth	r1, r6
 800cfee:	8459      	strh	r1, [r3, #34]	; 0x22
 800cff0:	fa1f fa80 	uxth.w	sl, r0
 800cff4:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 800cff6:	f8ad 1000 	strh.w	r1, [sp]
 800cffa:	f10a 30ff 	add.w	r0, sl, #4294967295
 800cffe:	1832      	adds	r2, r6, r0
 800d000:	fa1f fb88 	uxth.w	fp, r8
 800d004:	1e5e      	subs	r6, r3, #1
 800d006:	eb0b 0106 	add.w	r1, fp, r6
 800d00a:	4e22      	ldr	r6, [pc, #136]	; (800d094 <GUI_DispString+0x10c>)
 800d00c:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d010:	f8ad 1006 	strh.w	r1, [sp, #6]
 800d014:	4620      	mov	r0, r4
 800d016:	4629      	mov	r1, r5
 800d018:	466a      	mov	r2, sp
 800d01a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800d01e:	f000 fc17 	bl	800d850 <GUI__DispLine>
 800d022:	6830      	ldr	r0, [r6, #0]
 800d024:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800d028:	4629      	mov	r1, r5
 800d02a:	8482      	strh	r2, [r0, #36]	; 0x24
 800d02c:	4620      	mov	r0, r4
 800d02e:	f004 fe2f 	bl	8011c90 <GUI_UC__NumChars2NumBytes>
 800d032:	5c23      	ldrb	r3, [r4, r0]
 800d034:	2b0a      	cmp	r3, #10
 800d036:	eb04 0200 	add.w	r2, r4, r0
 800d03a:	d001      	beq.n	800d040 <GUI_DispString+0xb8>
 800d03c:	2b0d      	cmp	r3, #13
 800d03e:	d112      	bne.n	800d066 <GUI_DispString+0xde>
 800d040:	6833      	ldr	r3, [r6, #0]
 800d042:	8d99      	ldrh	r1, [r3, #44]	; 0x2c
 800d044:	f001 0003 	and.w	r0, r1, #3
 800d048:	1e41      	subs	r1, r0, #1
 800d04a:	2901      	cmp	r1, #1
 800d04c:	bf8a      	itet	hi
 800d04e:	8c19      	ldrhhi	r1, [r3, #32]
 800d050:	f8a3 9022 	strhls.w	r9, [r3, #34]	; 0x22
 800d054:	8459      	strhhi	r1, [r3, #34]	; 0x22
 800d056:	7810      	ldrb	r0, [r2, #0]
 800d058:	280a      	cmp	r0, #10
 800d05a:	d10a      	bne.n	800d072 <GUI_DispString+0xea>
 800d05c:	8c99      	ldrh	r1, [r3, #36]	; 0x24
 800d05e:	448b      	add	fp, r1
 800d060:	f8a3 b024 	strh.w	fp, [r3, #36]	; 0x24
 800d064:	e005      	b.n	800d072 <GUI_DispString+0xea>
 800d066:	f8bd 0000 	ldrh.w	r0, [sp]
 800d06a:	6831      	ldr	r1, [r6, #0]
 800d06c:	4482      	add	sl, r0
 800d06e:	f8a1 a022 	strh.w	sl, [r1, #34]	; 0x22
 800d072:	7813      	ldrb	r3, [r2, #0]
 800d074:	b94b      	cbnz	r3, 800d08a <GUI_DispString+0x102>
 800d076:	4a07      	ldr	r2, [pc, #28]	; (800d094 <GUI_DispString+0x10c>)
 800d078:	6810      	ldr	r0, [r2, #0]
 800d07a:	8c81      	ldrh	r1, [r0, #36]	; 0x24
 800d07c:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800d07e:	187f      	adds	r7, r7, r1
 800d080:	f023 0203 	bic.w	r2, r3, #3
 800d084:	8487      	strh	r7, [r0, #36]	; 0x24
 800d086:	8582      	strh	r2, [r0, #44]	; 0x2c
 800d088:	e001      	b.n	800d08e <GUI_DispString+0x106>
 800d08a:	1c54      	adds	r4, r2, #1
 800d08c:	e78f      	b.n	800cfae <GUI_DispString+0x26>
 800d08e:	e8bd 8ffe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d092:	bf00      	nop
 800d094:	20000278 	.word	0x20000278

0800d098 <GUI_DispCEOL>:
 800d098:	b570      	push	{r4, r5, r6, lr}
 800d09a:	4c0a      	ldr	r4, [pc, #40]	; (800d0c4 <GUI_DispCEOL+0x2c>)
 800d09c:	6823      	ldr	r3, [r4, #0]
 800d09e:	f9b3 5024 	ldrsh.w	r5, [r3, #36]	; 0x24
 800d0a2:	f000 fc29 	bl	800d8f8 <GUI_GetYAdjust>
 800d0a6:	6822      	ldr	r2, [r4, #0]
 800d0a8:	1a29      	subs	r1, r5, r0
 800d0aa:	69d0      	ldr	r0, [r2, #28]
 800d0ac:	7e43      	ldrb	r3, [r0, #25]
 800d0ae:	f9b2 0022 	ldrsh.w	r0, [r2, #34]	; 0x22
 800d0b2:	18cb      	adds	r3, r1, r3
 800d0b4:	f44f 627a 	mov.w	r2, #4000	; 0xfa0
 800d0b8:	3b01      	subs	r3, #1
 800d0ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d0be:	f000 b8f9 	b.w	800d2b4 <GUI_ClearRect>
 800d0c2:	bf00      	nop
 800d0c4:	20000278 	.word	0x20000278

0800d0c8 <_UnlinkDevice>:
 800d0c8:	4b09      	ldr	r3, [pc, #36]	; (800d0f0 <_UnlinkDevice+0x28>)
 800d0ca:	6982      	ldr	r2, [r0, #24]
 800d0cc:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800d0d0:	4281      	cmp	r1, r0
 800d0d2:	bf04      	itt	eq
 800d0d4:	6801      	ldreq	r1, [r0, #0]
 800d0d6:	f843 1022 	streq.w	r1, [r3, r2, lsl #2]
 800d0da:	6843      	ldr	r3, [r0, #4]
 800d0dc:	b10b      	cbz	r3, 800d0e2 <_UnlinkDevice+0x1a>
 800d0de:	6802      	ldr	r2, [r0, #0]
 800d0e0:	601a      	str	r2, [r3, #0]
 800d0e2:	6801      	ldr	r1, [r0, #0]
 800d0e4:	b101      	cbz	r1, 800d0e8 <_UnlinkDevice+0x20>
 800d0e6:	604b      	str	r3, [r1, #4]
 800d0e8:	2300      	movs	r3, #0
 800d0ea:	6003      	str	r3, [r0, #0]
 800d0ec:	6043      	str	r3, [r0, #4]
 800d0ee:	4770      	bx	lr
 800d0f0:	2000e67c 	.word	0x2000e67c

0800d0f4 <GUI_DEVICE__GetpDriver>:
 800d0f4:	2801      	cmp	r0, #1
 800d0f6:	dc09      	bgt.n	800d10c <GUI_DEVICE__GetpDriver+0x18>
 800d0f8:	4b05      	ldr	r3, [pc, #20]	; (800d110 <GUI_DEVICE__GetpDriver+0x1c>)
 800d0fa:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800d0fe:	b120      	cbz	r0, 800d10a <GUI_DEVICE__GetpDriver+0x16>
 800d100:	68c1      	ldr	r1, [r0, #12]
 800d102:	680a      	ldr	r2, [r1, #0]
 800d104:	b11a      	cbz	r2, 800d10e <GUI_DEVICE__GetpDriver+0x1a>
 800d106:	6800      	ldr	r0, [r0, #0]
 800d108:	e7f9      	b.n	800d0fe <GUI_DEVICE__GetpDriver+0xa>
 800d10a:	4770      	bx	lr
 800d10c:	2000      	movs	r0, #0
 800d10e:	4770      	bx	lr
 800d110:	2000e67c 	.word	0x2000e67c

0800d114 <GUI_DEVICE_Delete>:
 800d114:	f000 bcfe 	b.w	800db14 <GUI_ALLOC_FreeFixedBlock>

0800d118 <GUI_DEVICE_Create>:
 800d118:	2b01      	cmp	r3, #1
 800d11a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d11c:	4606      	mov	r6, r0
 800d11e:	460d      	mov	r5, r1
 800d120:	4617      	mov	r7, r2
 800d122:	461c      	mov	r4, r3
 800d124:	dd01      	ble.n	800d12a <GUI_DEVICE_Create+0x12>
 800d126:	2000      	movs	r0, #0
 800d128:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d12a:	201c      	movs	r0, #28
 800d12c:	f000 fe8c 	bl	800de48 <GUI_ALLOC_GetFixedBlock>
 800d130:	2800      	cmp	r0, #0
 800d132:	d0f8      	beq.n	800d126 <GUI_DEVICE_Create+0xe>
 800d134:	b10d      	cbz	r5, 800d13a <GUI_DEVICE_Create+0x22>
 800d136:	6105      	str	r5, [r0, #16]
 800d138:	e009      	b.n	800d14e <GUI_DEVICE_Create+0x36>
 800d13a:	4b09      	ldr	r3, [pc, #36]	; (800d160 <GUI_DEVICE_Create+0x48>)
 800d13c:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 800d140:	b12b      	cbz	r3, 800d14e <GUI_DEVICE_Create+0x36>
 800d142:	681a      	ldr	r2, [r3, #0]
 800d144:	b10a      	cbz	r2, 800d14a <GUI_DEVICE_Create+0x32>
 800d146:	4613      	mov	r3, r2
 800d148:	e7fb      	b.n	800d142 <GUI_DEVICE_Create+0x2a>
 800d14a:	6919      	ldr	r1, [r3, #16]
 800d14c:	6101      	str	r1, [r0, #16]
 800d14e:	2200      	movs	r2, #0
 800d150:	6184      	str	r4, [r0, #24]
 800d152:	8287      	strh	r7, [r0, #20]
 800d154:	60c6      	str	r6, [r0, #12]
 800d156:	6002      	str	r2, [r0, #0]
 800d158:	6042      	str	r2, [r0, #4]
 800d15a:	6082      	str	r2, [r0, #8]
 800d15c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d15e:	bf00      	nop
 800d160:	2000e67c 	.word	0x2000e67c

0800d164 <GUI_DEVICE_Unlink>:
 800d164:	f7ff bfb0 	b.w	800d0c8 <_UnlinkDevice>

0800d168 <GUI_DEVICE_Link>:
 800d168:	b510      	push	{r4, lr}
 800d16a:	b330      	cbz	r0, 800d1ba <GUI_DEVICE_Link+0x52>
 800d16c:	6982      	ldr	r2, [r0, #24]
 800d16e:	2a01      	cmp	r2, #1
 800d170:	dc23      	bgt.n	800d1ba <GUI_DEVICE_Link+0x52>
 800d172:	4919      	ldr	r1, [pc, #100]	; (800d1d8 <GUI_DEVICE_Link+0x70>)
 800d174:	f851 3022 	ldr.w	r3, [r1, r2, lsl #2]
 800d178:	b913      	cbnz	r3, 800d180 <GUI_DEVICE_Link+0x18>
 800d17a:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
 800d17e:	e01a      	b.n	800d1b6 <GUI_DEVICE_Link+0x4e>
 800d180:	685c      	ldr	r4, [r3, #4]
 800d182:	b10c      	cbz	r4, 800d188 <GUI_DEVICE_Link+0x20>
 800d184:	4623      	mov	r3, r4
 800d186:	e7fb      	b.n	800d180 <GUI_DEVICE_Link+0x18>
 800d188:	68c1      	ldr	r1, [r0, #12]
 800d18a:	680c      	ldr	r4, [r1, #0]
 800d18c:	68d9      	ldr	r1, [r3, #12]
 800d18e:	6809      	ldr	r1, [r1, #0]
 800d190:	42a1      	cmp	r1, r4
 800d192:	dd03      	ble.n	800d19c <GUI_DEVICE_Link+0x34>
 800d194:	681b      	ldr	r3, [r3, #0]
 800d196:	2b00      	cmp	r3, #0
 800d198:	d1f8      	bne.n	800d18c <GUI_DEVICE_Link+0x24>
 800d19a:	e00e      	b.n	800d1ba <GUI_DEVICE_Link+0x52>
 800d19c:	d102      	bne.n	800d1a4 <GUI_DEVICE_Link+0x3c>
 800d19e:	8a84      	ldrh	r4, [r0, #20]
 800d1a0:	2c01      	cmp	r4, #1
 800d1a2:	d011      	beq.n	800d1c8 <GUI_DEVICE_Link+0x60>
 800d1a4:	6859      	ldr	r1, [r3, #4]
 800d1a6:	b199      	cbz	r1, 800d1d0 <GUI_DEVICE_Link+0x68>
 800d1a8:	6008      	str	r0, [r1, #0]
 800d1aa:	6041      	str	r1, [r0, #4]
 800d1ac:	6058      	str	r0, [r3, #4]
 800d1ae:	4298      	cmp	r0, r3
 800d1b0:	bf08      	it	eq
 800d1b2:	2300      	moveq	r3, #0
 800d1b4:	6003      	str	r3, [r0, #0]
 800d1b6:	2000      	movs	r0, #0
 800d1b8:	bd10      	pop	{r4, pc}
 800d1ba:	2001      	movs	r0, #1
 800d1bc:	bd10      	pop	{r4, pc}
 800d1be:	4623      	mov	r3, r4
 800d1c0:	68e4      	ldr	r4, [r4, #12]
 800d1c2:	6824      	ldr	r4, [r4, #0]
 800d1c4:	428c      	cmp	r4, r1
 800d1c6:	dbed      	blt.n	800d1a4 <GUI_DEVICE_Link+0x3c>
 800d1c8:	681c      	ldr	r4, [r3, #0]
 800d1ca:	2c00      	cmp	r4, #0
 800d1cc:	d1f7      	bne.n	800d1be <GUI_DEVICE_Link+0x56>
 800d1ce:	e7e9      	b.n	800d1a4 <GUI_DEVICE_Link+0x3c>
 800d1d0:	4901      	ldr	r1, [pc, #4]	; (800d1d8 <GUI_DEVICE_Link+0x70>)
 800d1d2:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
 800d1d6:	e7e9      	b.n	800d1ac <GUI_DEVICE_Link+0x44>
 800d1d8:	2000e67c 	.word	0x2000e67c

0800d1dc <GUI_DEVICE_CreateAndLink>:
 800d1dc:	b538      	push	{r3, r4, r5, lr}
 800d1de:	461d      	mov	r5, r3
 800d1e0:	f7ff ff9a 	bl	800d118 <GUI_DEVICE_Create>
 800d1e4:	4604      	mov	r4, r0
 800d1e6:	b148      	cbz	r0, 800d1fc <GUI_DEVICE_CreateAndLink+0x20>
 800d1e8:	f7ff ffbe 	bl	800d168 <GUI_DEVICE_Link>
 800d1ec:	68e3      	ldr	r3, [r4, #12]
 800d1ee:	6818      	ldr	r0, [r3, #0]
 800d1f0:	b920      	cbnz	r0, 800d1fc <GUI_DEVICE_CreateAndLink+0x20>
 800d1f2:	4903      	ldr	r1, [pc, #12]	; (800d200 <GUI_DEVICE_CreateAndLink+0x24>)
 800d1f4:	3516      	adds	r5, #22
 800d1f6:	680a      	ldr	r2, [r1, #0]
 800d1f8:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800d1fc:	4620      	mov	r0, r4
 800d1fe:	bd38      	pop	{r3, r4, r5, pc}
 800d200:	20000278 	.word	0x20000278

0800d204 <_OnExit>:
 800d204:	b510      	push	{r4, lr}
 800d206:	4b07      	ldr	r3, [pc, #28]	; (800d224 <_OnExit+0x20>)
 800d208:	4807      	ldr	r0, [pc, #28]	; (800d228 <_OnExit+0x24>)
 800d20a:	2400      	movs	r4, #0
 800d20c:	4621      	mov	r1, r4
 800d20e:	2270      	movs	r2, #112	; 0x70
 800d210:	601c      	str	r4, [r3, #0]
 800d212:	f7fe fb41 	bl	800b898 <GUI__memset>
 800d216:	4805      	ldr	r0, [pc, #20]	; (800d22c <_OnExit+0x28>)
 800d218:	4621      	mov	r1, r4
 800d21a:	2208      	movs	r2, #8
 800d21c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d220:	f7fe bb3a 	b.w	800b898 <GUI__memset>
 800d224:	2000e1d4 	.word	0x2000e1d4
 800d228:	2000e15c 	.word	0x2000e15c
 800d22c:	2000e67c 	.word	0x2000e67c

0800d230 <_InitContext.constprop.0>:
 800d230:	b538      	push	{r3, r4, r5, lr}
 800d232:	4d19      	ldr	r5, [pc, #100]	; (800d298 <_InitContext.constprop.0+0x68>)
 800d234:	4c19      	ldr	r4, [pc, #100]	; (800d29c <_InitContext.constprop.0+0x6c>)
 800d236:	682b      	ldr	r3, [r5, #0]
 800d238:	1d1a      	adds	r2, r3, #4
 800d23a:	7c59      	ldrb	r1, [r3, #17]
 800d23c:	63da      	str	r2, [r3, #60]	; 0x3c
 800d23e:	f103 0008 	add.w	r0, r3, #8
 800d242:	639b      	str	r3, [r3, #56]	; 0x38
 800d244:	641b      	str	r3, [r3, #64]	; 0x40
 800d246:	4b16      	ldr	r3, [pc, #88]	; (800d2a0 <_InitContext.constprop.0+0x70>)
 800d248:	6160      	str	r0, [r4, #20]
 800d24a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800d24e:	68c2      	ldr	r2, [r0, #12]
 800d250:	f104 0108 	add.w	r1, r4, #8
 800d254:	6b13      	ldr	r3, [r2, #48]	; 0x30
 800d256:	4798      	blx	r3
 800d258:	4912      	ldr	r1, [pc, #72]	; (800d2a4 <_InitContext.constprop.0+0x74>)
 800d25a:	4813      	ldr	r0, [pc, #76]	; (800d2a8 <_InitContext.constprop.0+0x78>)
 800d25c:	682b      	ldr	r3, [r5, #0]
 800d25e:	680a      	ldr	r2, [r1, #0]
 800d260:	6660      	str	r0, [r4, #100]	; 0x64
 800d262:	3308      	adds	r3, #8
 800d264:	2001      	movs	r0, #1
 800d266:	6163      	str	r3, [r4, #20]
 800d268:	61e2      	str	r2, [r4, #28]
 800d26a:	7620      	strb	r0, [r4, #24]
 800d26c:	f7fa fbb0 	bl	80079d0 <WM_GetDesktopWindow>
 800d270:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 800d274:	2103      	movs	r1, #3
 800d276:	64a0      	str	r0, [r4, #72]	; 0x48
 800d278:	2000      	movs	r0, #0
 800d27a:	f884 1068 	strb.w	r1, [r4, #104]	; 0x68
 800d27e:	6322      	str	r2, [r4, #48]	; 0x30
 800d280:	6362      	str	r2, [r4, #52]	; 0x34
 800d282:	f7fe fac3 	bl	800b80c <LCD_SetBkColor>
 800d286:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 800d28a:	f7fe fac7 	bl	800b81c <LCD_SetColor>
 800d28e:	4807      	ldr	r0, [pc, #28]	; (800d2ac <_InitContext.constprop.0+0x7c>)
 800d290:	4b07      	ldr	r3, [pc, #28]	; (800d2b0 <_InitContext.constprop.0+0x80>)
 800d292:	6018      	str	r0, [r3, #0]
 800d294:	bd38      	pop	{r3, r4, r5, pc}
 800d296:	bf00      	nop
 800d298:	20000278 	.word	0x20000278
 800d29c:	2000e15c 	.word	0x2000e15c
 800d2a0:	2000e67c 	.word	0x2000e67c
 800d2a4:	2000027c 	.word	0x2000027c
 800d2a8:	0802c3b0 	.word	0x0802c3b0
 800d2ac:	0802d650 	.word	0x0802d650
 800d2b0:	2000e678 	.word	0x2000e678

0800d2b4 <GUI_ClearRect>:
 800d2b4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800d2b8:	4607      	mov	r7, r0
 800d2ba:	2004      	movs	r0, #4
 800d2bc:	469a      	mov	sl, r3
 800d2be:	460e      	mov	r6, r1
 800d2c0:	4691      	mov	r9, r2
 800d2c2:	f7fd ff59 	bl	800b178 <LCD_SetDrawMode>
 800d2c6:	4b13      	ldr	r3, [pc, #76]	; (800d314 <GUI_ClearRect+0x60>)
 800d2c8:	681c      	ldr	r4, [r3, #0]
 800d2ca:	4680      	mov	r8, r0
 800d2cc:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 800d2ce:	6d20      	ldr	r0, [r4, #80]	; 0x50
 800d2d0:	197f      	adds	r7, r7, r5
 800d2d2:	1836      	adds	r6, r6, r0
 800d2d4:	eb0a 0400 	add.w	r4, sl, r0
 800d2d8:	444d      	add	r5, r9
 800d2da:	4668      	mov	r0, sp
 800d2dc:	f8ad 7000 	strh.w	r7, [sp]
 800d2e0:	f8ad 5004 	strh.w	r5, [sp, #4]
 800d2e4:	f8ad 6002 	strh.w	r6, [sp, #2]
 800d2e8:	f8ad 4006 	strh.w	r4, [sp, #6]
 800d2ec:	f7fb facc 	bl	8008888 <WM__InitIVRSearch>
 800d2f0:	b920      	cbnz	r0, 800d2fc <GUI_ClearRect+0x48>
 800d2f2:	4640      	mov	r0, r8
 800d2f4:	f7fd ff40 	bl	800b178 <LCD_SetDrawMode>
 800d2f8:	e8bd 87fc 	ldmia.w	sp!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
 800d2fc:	4638      	mov	r0, r7
 800d2fe:	4631      	mov	r1, r6
 800d300:	462a      	mov	r2, r5
 800d302:	4623      	mov	r3, r4
 800d304:	f7fd ffba 	bl	800b27c <LCD_FillRect>
 800d308:	f7fb f9fe 	bl	8008708 <WM__GetNextIVR>
 800d30c:	2800      	cmp	r0, #0
 800d30e:	d1f5      	bne.n	800d2fc <GUI_ClearRect+0x48>
 800d310:	e7ef      	b.n	800d2f2 <GUI_ClearRect+0x3e>
 800d312:	bf00      	nop
 800d314:	20000278 	.word	0x20000278

0800d318 <GUI_Clear>:
 800d318:	2000      	movs	r0, #0
 800d31a:	b510      	push	{r4, lr}
 800d31c:	4601      	mov	r1, r0
 800d31e:	f7ff f9d9 	bl	800c6d4 <GUI_GotoXY>
 800d322:	4804      	ldr	r0, [pc, #16]	; (800d334 <GUI_Clear+0x1c>)
 800d324:	f643 72ff 	movw	r2, #16383	; 0x3fff
 800d328:	4601      	mov	r1, r0
 800d32a:	4613      	mov	r3, r2
 800d32c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d330:	f7ff bfc0 	b.w	800d2b4 <GUI_ClearRect>
 800d334:	ffffc001 	.word	0xffffc001

0800d338 <GUI__RegisterExit>:
 800d338:	b480      	push	{r7}
 800d33a:	b083      	sub	sp, #12
 800d33c:	af00      	add	r7, sp, #0
 800d33e:	6078      	str	r0, [r7, #4]
 800d340:	f24e 1358 	movw	r3, #57688	; 0xe158
 800d344:	f2c2 0300 	movt	r3, #8192	; 0x2000
 800d348:	681a      	ldr	r2, [r3, #0]
 800d34a:	687b      	ldr	r3, [r7, #4]
 800d34c:	605a      	str	r2, [r3, #4]
 800d34e:	f24e 1358 	movw	r3, #57688	; 0xe158
 800d352:	f2c2 0300 	movt	r3, #8192	; 0x2000
 800d356:	687a      	ldr	r2, [r7, #4]
 800d358:	601a      	str	r2, [r3, #0]
 800d35a:	f107 070c 	add.w	r7, r7, #12
 800d35e:	46bd      	mov	sp, r7
 800d360:	bc80      	pop	{r7}
 800d362:	4770      	bx	lr

0800d364 <GUI__Config>:
 800d364:	b508      	push	{r3, lr}
 800d366:	4b08      	ldr	r3, [pc, #32]	; (800d388 <GUI__Config+0x24>)
 800d368:	681a      	ldr	r2, [r3, #0]
 800d36a:	b962      	cbnz	r2, 800d386 <GUI__Config+0x22>
 800d36c:	2001      	movs	r0, #1
 800d36e:	6018      	str	r0, [r3, #0]
 800d370:	f7f5 f83e 	bl	80023f0 <GUI_X_Config>
 800d374:	f7f4 ffcc 	bl	8002310 <LCD_X_Config>
 800d378:	4804      	ldr	r0, [pc, #16]	; (800d38c <GUI__Config+0x28>)
 800d37a:	4905      	ldr	r1, [pc, #20]	; (800d390 <GUI__Config+0x2c>)
 800d37c:	6001      	str	r1, [r0, #0]
 800d37e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800d382:	f7ff bfd9 	b.w	800d338 <GUI__RegisterExit>
 800d386:	bd08      	pop	{r3, pc}
 800d388:	2000e1d4 	.word	0x2000e1d4
 800d38c:	2000e1cc 	.word	0x2000e1cc
 800d390:	0800d205 	.word	0x0800d205

0800d394 <GUI_Init>:
 800d394:	b580      	push	{r7, lr}
 800d396:	b082      	sub	sp, #8
 800d398:	af00      	add	r7, sp, #0
 800d39a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800d39e:	f2ce 0300 	movt	r3, #57344	; 0xe000
 800d3a2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800d3a6:	f2ce 0200 	movt	r2, #57344	; 0xe000
 800d3aa:	6812      	ldr	r2, [r2, #0]
 800d3ac:	f022 0201 	bic.w	r2, r2, #1
 800d3b0:	601a      	str	r2, [r3, #0]
 800d3b2:	f243 0308 	movw	r3, #12296	; 0x3008
 800d3b6:	f2c4 0302 	movt	r3, #16386	; 0x4002
 800d3ba:	f04f 0201 	mov.w	r2, #1
 800d3be:	601a      	str	r2, [r3, #0]
 800d3c0:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 800d3c4:	f2c4 0302 	movt	r3, #16386	; 0x4002
 800d3c8:	f24a 52c2 	movw	r2, #42434	; 0xa5c2
 800d3cc:	f2cf 4207 	movt	r2, #62471	; 0xf407
 800d3d0:	601a      	str	r2, [r3, #0]
 800d3d2:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 800d3d6:	f2c4 0302 	movt	r3, #16386	; 0x4002
 800d3da:	681a      	ldr	r2, [r3, #0]
 800d3dc:	f24b 53cd 	movw	r3, #46541	; 0xb5cd
 800d3e0:	f2cb 53e8 	movt	r3, #46568	; 0xb5e8
 800d3e4:	429a      	cmp	r2, r3
 800d3e6:	d000      	beq.n	800d3ea <GUI_Init+0x56>
 800d3e8:	e7fe      	b.n	800d3e8 <GUI_Init+0x54>
 800d3ea:	f7ff ffbb 	bl	800d364 <GUI__Config>
 800d3ee:	f24e 635a 	movw	r3, #58970	; 0xe65a
 800d3f2:	f2c2 0300 	movt	r3, #8192	; 0x2000
 800d3f6:	f04f 022e 	mov.w	r2, #46	; 0x2e
 800d3fa:	701a      	strb	r2, [r3, #0]
 800d3fc:	f7f5 f800 	bl	8002400 <GUI_X_Init>
 800d400:	f7ff ff16 	bl	800d230 <_InitContext.constprop.0>
 800d404:	f7fe f95e 	bl	800b6c4 <emWin_LCD_Init>
 800d408:	6078      	str	r0, [r7, #4]
 800d40a:	f04f 0000 	mov.w	r0, #0
 800d40e:	f04f 0100 	mov.w	r1, #0
 800d412:	f004 fc59 	bl	8011cc8 <GUI_SetOrg>
 800d416:	f7fb fc79 	bl	8008d0c <WM_Init>
 800d41a:	687b      	ldr	r3, [r7, #4]
 800d41c:	4618      	mov	r0, r3
 800d41e:	f107 0708 	add.w	r7, r7, #8
 800d422:	46bd      	mov	sp, r7
 800d424:	bd80      	pop	{r7, pc}
 800d426:	bf00      	nop

0800d428 <GUIPROP__FindChar>:
 800d428:	b138      	cbz	r0, 800d43a <GUIPROP__FindChar+0x12>
 800d42a:	8803      	ldrh	r3, [r0, #0]
 800d42c:	428b      	cmp	r3, r1
 800d42e:	d802      	bhi.n	800d436 <GUIPROP__FindChar+0xe>
 800d430:	8842      	ldrh	r2, [r0, #2]
 800d432:	428a      	cmp	r2, r1
 800d434:	d201      	bcs.n	800d43a <GUIPROP__FindChar+0x12>
 800d436:	6880      	ldr	r0, [r0, #8]
 800d438:	e7f6      	b.n	800d428 <GUIPROP__FindChar>
 800d43a:	4770      	bx	lr

0800d43c <GUIPROP_DispChar>:
 800d43c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d440:	4c38      	ldr	r4, [pc, #224]	; (800d524 <GUIPROP_DispChar+0xe8>)
 800d442:	6823      	ldr	r3, [r4, #0]
 800d444:	4605      	mov	r5, r0
 800d446:	69d8      	ldr	r0, [r3, #28]
 800d448:	f9b3 902a 	ldrsh.w	r9, [r3, #42]	; 0x2a
 800d44c:	69c0      	ldr	r0, [r0, #28]
 800d44e:	b089      	sub	sp, #36	; 0x24
 800d450:	4629      	mov	r1, r5
 800d452:	f7ff ffe9 	bl	800d428 <GUIPROP__FindChar>
 800d456:	2800      	cmp	r0, #0
 800d458:	d061      	beq.n	800d51e <GUIPROP_DispChar+0xe2>
 800d45a:	f8b0 8000 	ldrh.w	r8, [r0]
 800d45e:	6847      	ldr	r7, [r0, #4]
 800d460:	ebc8 0805 	rsb	r8, r8, r5
 800d464:	eb07 06c8 	add.w	r6, r7, r8, lsl #3
 800d468:	4648      	mov	r0, r9
 800d46a:	f896 b002 	ldrb.w	fp, [r6, #2]
 800d46e:	f7fd fe83 	bl	800b178 <LCD_SetDrawMode>
 800d472:	6825      	ldr	r5, [r4, #0]
 800d474:	f817 2038 	ldrb.w	r2, [r7, r8, lsl #3]
 800d478:	f8d5 e01c 	ldr.w	lr, [r5, #28]
 800d47c:	f9b5 1024 	ldrsh.w	r1, [r5, #36]	; 0x24
 800d480:	f89e c01a 	ldrb.w	ip, [lr, #26]
 800d484:	f89e 3018 	ldrb.w	r3, [lr, #24]
 800d488:	4682      	mov	sl, r0
 800d48a:	f9b5 0022 	ldrsh.w	r0, [r5, #34]	; 0x22
 800d48e:	f8cd c000 	str.w	ip, [sp]
 800d492:	f89e e01b 	ldrb.w	lr, [lr, #27]
 800d496:	f8cd b00c 	str.w	fp, [sp, #12]
 800d49a:	f04f 0c01 	mov.w	ip, #1
 800d49e:	f8cd e004 	str.w	lr, [sp, #4]
 800d4a2:	f8cd c008 	str.w	ip, [sp, #8]
 800d4a6:	9306      	str	r3, [sp, #24]
 800d4a8:	6873      	ldr	r3, [r6, #4]
 800d4aa:	9304      	str	r3, [sp, #16]
 800d4ac:	6bad      	ldr	r5, [r5, #56]	; 0x38
 800d4ae:	9b06      	ldr	r3, [sp, #24]
 800d4b0:	9505      	str	r5, [sp, #20]
 800d4b2:	f7fd ffe9 	bl	800b488 <LCD_DrawBitmap>
 800d4b6:	6821      	ldr	r1, [r4, #0]
 800d4b8:	69ca      	ldr	r2, [r1, #28]
 800d4ba:	f892 b019 	ldrb.w	fp, [r2, #25]
 800d4be:	7e10      	ldrb	r0, [r2, #24]
 800d4c0:	4583      	cmp	fp, r0
 800d4c2:	d920      	bls.n	800d506 <GUIPROP_DispChar+0xca>
 800d4c4:	f1b9 0f02 	cmp.w	r9, #2
 800d4c8:	7ed5      	ldrb	r5, [r2, #27]
 800d4ca:	d01c      	beq.n	800d506 <GUIPROP_DispChar+0xca>
 800d4cc:	9007      	str	r0, [sp, #28]
 800d4ce:	f004 fc38 	bl	8011d42 <GUI_GetColor>
 800d4d2:	4681      	mov	r9, r0
 800d4d4:	f004 fc2e 	bl	8011d34 <GUI_GetBkColor>
 800d4d8:	f7fe ff6a 	bl	800c3b0 <GUI_SetColor>
 800d4dc:	6824      	ldr	r4, [r4, #0]
 800d4de:	f817 7038 	ldrb.w	r7, [r7, r8, lsl #3]
 800d4e2:	69e1      	ldr	r1, [r4, #28]
 800d4e4:	f9b4 3024 	ldrsh.w	r3, [r4, #36]	; 0x24
 800d4e8:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800d4ec:	7eca      	ldrb	r2, [r1, #27]
 800d4ee:	9907      	ldr	r1, [sp, #28]
 800d4f0:	fb07 0202 	mla	r2, r7, r2, r0
 800d4f4:	fb01 3105 	mla	r1, r1, r5, r3
 800d4f8:	fb0b 3305 	mla	r3, fp, r5, r3
 800d4fc:	f7fd febe 	bl	800b27c <LCD_FillRect>
 800d500:	4648      	mov	r0, r9
 800d502:	f7fe ff55 	bl	800c3b0 <GUI_SetColor>
 800d506:	4650      	mov	r0, sl
 800d508:	f7fd fe36 	bl	800b178 <LCD_SetDrawMode>
 800d50c:	4805      	ldr	r0, [pc, #20]	; (800d524 <GUIPROP_DispChar+0xe8>)
 800d50e:	6803      	ldr	r3, [r0, #0]
 800d510:	7870      	ldrb	r0, [r6, #1]
 800d512:	69da      	ldr	r2, [r3, #28]
 800d514:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800d516:	7e92      	ldrb	r2, [r2, #26]
 800d518:	fb00 1202 	mla	r2, r0, r2, r1
 800d51c:	845a      	strh	r2, [r3, #34]	; 0x22
 800d51e:	b009      	add	sp, #36	; 0x24
 800d520:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d524:	20000278 	.word	0x20000278

0800d528 <GUIPROP_GetCharDistX>:
 800d528:	4b0d      	ldr	r3, [pc, #52]	; (800d560 <GUIPROP_GetCharDistX+0x38>)
 800d52a:	b570      	push	{r4, r5, r6, lr}
 800d52c:	4606      	mov	r6, r0
 800d52e:	6818      	ldr	r0, [r3, #0]
 800d530:	69c5      	ldr	r5, [r0, #28]
 800d532:	460c      	mov	r4, r1
 800d534:	69e8      	ldr	r0, [r5, #28]
 800d536:	4631      	mov	r1, r6
 800d538:	f7ff ff76 	bl	800d428 <GUIPROP__FindChar>
 800d53c:	b170      	cbz	r0, 800d55c <GUIPROP_GetCharDistX+0x34>
 800d53e:	8801      	ldrh	r1, [r0, #0]
 800d540:	6842      	ldr	r2, [r0, #4]
 800d542:	1a76      	subs	r6, r6, r1
 800d544:	eb02 03c6 	add.w	r3, r2, r6, lsl #3
 800d548:	7ea9      	ldrb	r1, [r5, #26]
 800d54a:	7858      	ldrb	r0, [r3, #1]
 800d54c:	fb10 f001 	smulbb	r0, r0, r1
 800d550:	b124      	cbz	r4, 800d55c <GUIPROP_GetCharDistX+0x34>
 800d552:	f812 2036 	ldrb.w	r2, [r2, r6, lsl #3]
 800d556:	fb12 f301 	smulbb	r3, r2, r1
 800d55a:	6023      	str	r3, [r4, #0]
 800d55c:	bd70      	pop	{r4, r5, r6, pc}
 800d55e:	bf00      	nop
 800d560:	20000278 	.word	0x20000278

0800d564 <GUIPROP_GetFontInfo>:
 800d564:	2301      	movs	r3, #1
 800d566:	800b      	strh	r3, [r1, #0]
 800d568:	4770      	bx	lr

0800d56a <GUIPROP_IsInFont>:
 800d56a:	b508      	push	{r3, lr}
 800d56c:	69c0      	ldr	r0, [r0, #28]
 800d56e:	f7ff ff5b 	bl	800d428 <GUIPROP__FindChar>
 800d572:	3000      	adds	r0, #0
 800d574:	bf18      	it	ne
 800d576:	2001      	movne	r0, #1
 800d578:	bd08      	pop	{r3, pc}
	...

0800d57c <GUIMONO_DispChar>:
 800d57c:	4b52      	ldr	r3, [pc, #328]	; (800d6c8 <GUIMONO_DispChar+0x14c>)
 800d57e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d582:	681b      	ldr	r3, [r3, #0]
 800d584:	69d9      	ldr	r1, [r3, #28]
 800d586:	8c5f      	ldrh	r7, [r3, #34]	; 0x22
 800d588:	69cc      	ldr	r4, [r1, #28]
 800d58a:	8c9d      	ldrh	r5, [r3, #36]	; 0x24
 800d58c:	89a2      	ldrh	r2, [r4, #12]
 800d58e:	4290      	cmp	r0, r2
 800d590:	b08b      	sub	sp, #44	; 0x2c
 800d592:	d308      	bcc.n	800d5a6 <GUIMONO_DispChar+0x2a>
 800d594:	89e6      	ldrh	r6, [r4, #14]
 800d596:	4286      	cmp	r6, r0
 800d598:	d305      	bcc.n	800d5a6 <GUIMONO_DispChar+0x2a>
 800d59a:	f8d4 9000 	ldr.w	r9, [r4]
 800d59e:	1a82      	subs	r2, r0, r2
 800d5a0:	f04f 3bff 	mov.w	fp, #4294967295
 800d5a4:	e015      	b.n	800d5d2 <GUIMONO_DispChar+0x56>
 800d5a6:	68a2      	ldr	r2, [r4, #8]
 800d5a8:	f8d4 9004 	ldr.w	r9, [r4, #4]
 800d5ac:	2a00      	cmp	r2, #0
 800d5ae:	f000 8081 	beq.w	800d6b4 <GUIMONO_DispChar+0x138>
 800d5b2:	8816      	ldrh	r6, [r2, #0]
 800d5b4:	42b0      	cmp	r0, r6
 800d5b6:	d37d      	bcc.n	800d6b4 <GUIMONO_DispChar+0x138>
 800d5b8:	f8b2 c002 	ldrh.w	ip, [r2, #2]
 800d5bc:	4584      	cmp	ip, r0
 800d5be:	d379      	bcc.n	800d6b4 <GUIMONO_DispChar+0x138>
 800d5c0:	6852      	ldr	r2, [r2, #4]
 800d5c2:	1b80      	subs	r0, r0, r6
 800d5c4:	b280      	uxth	r0, r0
 800d5c6:	eb02 0680 	add.w	r6, r2, r0, lsl #2
 800d5ca:	f932 2020 	ldrsh.w	r2, [r2, r0, lsl #2]
 800d5ce:	f9b6 b002 	ldrsh.w	fp, [r6, #2]
 800d5d2:	1c50      	adds	r0, r2, #1
 800d5d4:	d06e      	beq.n	800d6b4 <GUIMONO_DispChar+0x138>
 800d5d6:	f8b3 a02a 	ldrh.w	sl, [r3, #42]	; 0x2a
 800d5da:	f891 8018 	ldrb.w	r8, [r1, #24]
 800d5de:	7ca6      	ldrb	r6, [r4, #18]
 800d5e0:	fa0f f38a 	sxth.w	r3, sl
 800d5e4:	fb18 f106 	smulbb	r1, r8, r6
 800d5e8:	4618      	mov	r0, r3
 800d5ea:	7c26      	ldrb	r6, [r4, #16]
 800d5ec:	9107      	str	r1, [sp, #28]
 800d5ee:	9308      	str	r3, [sp, #32]
 800d5f0:	9206      	str	r2, [sp, #24]
 800d5f2:	f7fd fdc1 	bl	800b178 <LCD_SetDrawMode>
 800d5f6:	9009      	str	r0, [sp, #36]	; 0x24
 800d5f8:	4833      	ldr	r0, [pc, #204]	; (800d6c8 <GUIMONO_DispChar+0x14c>)
 800d5fa:	6803      	ldr	r3, [r0, #0]
 800d5fc:	69da      	ldr	r2, [r3, #28]
 800d5fe:	7e91      	ldrb	r1, [r2, #26]
 800d600:	9100      	str	r1, [sp, #0]
 800d602:	7ed0      	ldrb	r0, [r2, #27]
 800d604:	2201      	movs	r2, #1
 800d606:	9001      	str	r0, [sp, #4]
 800d608:	9202      	str	r2, [sp, #8]
 800d60a:	7ca1      	ldrb	r1, [r4, #18]
 800d60c:	9806      	ldr	r0, [sp, #24]
 800d60e:	9a07      	ldr	r2, [sp, #28]
 800d610:	9103      	str	r1, [sp, #12]
 800d612:	fb02 9100 	mla	r1, r2, r0, r9
 800d616:	9104      	str	r1, [sp, #16]
 800d618:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d61a:	b23f      	sxth	r7, r7
 800d61c:	b22d      	sxth	r5, r5
 800d61e:	9305      	str	r3, [sp, #20]
 800d620:	4638      	mov	r0, r7
 800d622:	4629      	mov	r1, r5
 800d624:	4632      	mov	r2, r6
 800d626:	4643      	mov	r3, r8
 800d628:	f7fd ff2e 	bl	800b488 <LCD_DrawBitmap>
 800d62c:	f1bb 3fff 	cmp.w	fp, #4294967295
 800d630:	d01b      	beq.n	800d66a <GUIMONO_DispChar+0xee>
 800d632:	f04a 0002 	orr.w	r0, sl, #2
 800d636:	b200      	sxth	r0, r0
 800d638:	f7fd fd9e 	bl	800b178 <LCD_SetDrawMode>
 800d63c:	4a22      	ldr	r2, [pc, #136]	; (800d6c8 <GUIMONO_DispChar+0x14c>)
 800d63e:	6813      	ldr	r3, [r2, #0]
 800d640:	69d8      	ldr	r0, [r3, #28]
 800d642:	7e81      	ldrb	r1, [r0, #26]
 800d644:	9100      	str	r1, [sp, #0]
 800d646:	7ec2      	ldrb	r2, [r0, #27]
 800d648:	2001      	movs	r0, #1
 800d64a:	9201      	str	r2, [sp, #4]
 800d64c:	9002      	str	r0, [sp, #8]
 800d64e:	9a07      	ldr	r2, [sp, #28]
 800d650:	7ca1      	ldrb	r1, [r4, #18]
 800d652:	fb02 900b 	mla	r0, r2, fp, r9
 800d656:	9103      	str	r1, [sp, #12]
 800d658:	9004      	str	r0, [sp, #16]
 800d65a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d65c:	4638      	mov	r0, r7
 800d65e:	9305      	str	r3, [sp, #20]
 800d660:	4629      	mov	r1, r5
 800d662:	4632      	mov	r2, r6
 800d664:	4643      	mov	r3, r8
 800d666:	f7fd ff0f 	bl	800b488 <LCD_DrawBitmap>
 800d66a:	f8df 805c 	ldr.w	r8, [pc, #92]	; 800d6c8 <GUIMONO_DispChar+0x14c>
 800d66e:	f8d8 1000 	ldr.w	r1, [r8]
 800d672:	69c8      	ldr	r0, [r1, #28]
 800d674:	7e42      	ldrb	r2, [r0, #25]
 800d676:	7e03      	ldrb	r3, [r0, #24]
 800d678:	429a      	cmp	r2, r3
 800d67a:	d917      	bls.n	800d6ac <GUIMONO_DispChar+0x130>
 800d67c:	9908      	ldr	r1, [sp, #32]
 800d67e:	2902      	cmp	r1, #2
 800d680:	d014      	beq.n	800d6ac <GUIMONO_DispChar+0x130>
 800d682:	f08a 0004 	eor.w	r0, sl, #4
 800d686:	b200      	sxth	r0, r0
 800d688:	f7fd fd76 	bl	800b178 <LCD_SetDrawMode>
 800d68c:	f8d8 2000 	ldr.w	r2, [r8]
 800d690:	69d3      	ldr	r3, [r2, #28]
 800d692:	f893 e018 	ldrb.w	lr, [r3, #24]
 800d696:	7ed9      	ldrb	r1, [r3, #27]
 800d698:	7e9a      	ldrb	r2, [r3, #26]
 800d69a:	7e5b      	ldrb	r3, [r3, #25]
 800d69c:	4638      	mov	r0, r7
 800d69e:	fb0e 5101 	mla	r1, lr, r1, r5
 800d6a2:	fb06 7202 	mla	r2, r6, r2, r7
 800d6a6:	18eb      	adds	r3, r5, r3
 800d6a8:	f7fd fde8 	bl	800b27c <LCD_FillRect>
 800d6ac:	9809      	ldr	r0, [sp, #36]	; 0x24
 800d6ae:	b2c0      	uxtb	r0, r0
 800d6b0:	f7fd fd62 	bl	800b178 <LCD_SetDrawMode>
 800d6b4:	4904      	ldr	r1, [pc, #16]	; (800d6c8 <GUIMONO_DispChar+0x14c>)
 800d6b6:	7c60      	ldrb	r0, [r4, #17]
 800d6b8:	680b      	ldr	r3, [r1, #0]
 800d6ba:	8c5a      	ldrh	r2, [r3, #34]	; 0x22
 800d6bc:	1881      	adds	r1, r0, r2
 800d6be:	8459      	strh	r1, [r3, #34]	; 0x22
 800d6c0:	b00b      	add	sp, #44	; 0x2c
 800d6c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d6c6:	bf00      	nop
 800d6c8:	20000278 	.word	0x20000278

0800d6cc <GUIMONO_GetCharDistX>:
 800d6cc:	4b04      	ldr	r3, [pc, #16]	; (800d6e0 <GUIMONO_GetCharDistX+0x14>)
 800d6ce:	6818      	ldr	r0, [r3, #0]
 800d6d0:	69c2      	ldr	r2, [r0, #28]
 800d6d2:	69d3      	ldr	r3, [r2, #28]
 800d6d4:	b109      	cbz	r1, 800d6da <GUIMONO_GetCharDistX+0xe>
 800d6d6:	7c18      	ldrb	r0, [r3, #16]
 800d6d8:	6008      	str	r0, [r1, #0]
 800d6da:	7c58      	ldrb	r0, [r3, #17]
 800d6dc:	4770      	bx	lr
 800d6de:	bf00      	nop
 800d6e0:	20000278 	.word	0x20000278

0800d6e4 <GUIMONO_GetFontInfo>:
 800d6e4:	2302      	movs	r3, #2
 800d6e6:	800b      	strh	r3, [r1, #0]
 800d6e8:	4770      	bx	lr

0800d6ea <GUIMONO_IsInFont>:
 800d6ea:	69c3      	ldr	r3, [r0, #28]
 800d6ec:	899a      	ldrh	r2, [r3, #12]
 800d6ee:	428a      	cmp	r2, r1
 800d6f0:	d802      	bhi.n	800d6f8 <GUIMONO_IsInFont+0xe>
 800d6f2:	89d8      	ldrh	r0, [r3, #14]
 800d6f4:	4288      	cmp	r0, r1
 800d6f6:	d20f      	bcs.n	800d718 <GUIMONO_IsInFont+0x2e>
 800d6f8:	689b      	ldr	r3, [r3, #8]
 800d6fa:	b90b      	cbnz	r3, 800d700 <GUIMONO_IsInFont+0x16>
 800d6fc:	2000      	movs	r0, #0
 800d6fe:	4770      	bx	lr
 800d700:	881a      	ldrh	r2, [r3, #0]
 800d702:	4291      	cmp	r1, r2
 800d704:	d3fa      	bcc.n	800d6fc <GUIMONO_IsInFont+0x12>
 800d706:	8858      	ldrh	r0, [r3, #2]
 800d708:	4288      	cmp	r0, r1
 800d70a:	d3f7      	bcc.n	800d6fc <GUIMONO_IsInFont+0x12>
 800d70c:	1a89      	subs	r1, r1, r2
 800d70e:	685b      	ldr	r3, [r3, #4]
 800d710:	f933 2021 	ldrsh.w	r2, [r3, r1, lsl #2]
 800d714:	2a00      	cmp	r2, #0
 800d716:	dbf1      	blt.n	800d6fc <GUIMONO_IsInFont+0x12>
 800d718:	2001      	movs	r0, #1
 800d71a:	4770      	bx	lr

0800d71c <_Log2VisBuffered>:
 800d71c:	4770      	bx	lr
	...

0800d720 <_DispLine>:
 800d720:	b513      	push	{r0, r1, r4, lr}
 800d722:	4614      	mov	r4, r2
 800d724:	ab02      	add	r3, sp, #8
 800d726:	4a1b      	ldr	r2, [pc, #108]	; (800d794 <_DispLine+0x74>)
 800d728:	f843 1d08 	str.w	r1, [r3, #-8]!
 800d72c:	9001      	str	r0, [sp, #4]
 800d72e:	4669      	mov	r1, sp
 800d730:	6813      	ldr	r3, [r2, #0]
 800d732:	4798      	blx	r3
 800d734:	9001      	str	r0, [sp, #4]
 800d736:	4818      	ldr	r0, [pc, #96]	; (800d798 <_DispLine+0x78>)
 800d738:	6801      	ldr	r1, [r0, #0]
 800d73a:	6948      	ldr	r0, [r1, #20]
 800d73c:	b960      	cbnz	r0, 800d758 <_DispLine+0x38>
 800d73e:	2001      	movs	r0, #1
 800d740:	f7fe f988 	bl	800ba54 <GUI__ManageCache>
 800d744:	4a14      	ldr	r2, [pc, #80]	; (800d798 <_DispLine+0x78>)
 800d746:	6813      	ldr	r3, [r2, #0]
 800d748:	69d8      	ldr	r0, [r3, #28]
 800d74a:	6941      	ldr	r1, [r0, #20]
 800d74c:	b1c1      	cbz	r1, 800d780 <_DispLine+0x60>
 800d74e:	688b      	ldr	r3, [r1, #8]
 800d750:	9801      	ldr	r0, [sp, #4]
 800d752:	9900      	ldr	r1, [sp, #0]
 800d754:	4798      	blx	r3
 800d756:	e018      	b.n	800d78a <_DispLine+0x6a>
 800d758:	4621      	mov	r1, r4
 800d75a:	f7fe fe83 	bl	800c464 <GUI_RectsIntersect>
 800d75e:	2800      	cmp	r0, #0
 800d760:	d1ed      	bne.n	800d73e <_DispLine+0x1e>
 800d762:	e015      	b.n	800d790 <_DispLine+0x70>
 800d764:	a801      	add	r0, sp, #4
 800d766:	f004 fa7f 	bl	8011c68 <GUI_UC__GetCharCodeInc>
 800d76a:	490b      	ldr	r1, [pc, #44]	; (800d798 <_DispLine+0x78>)
 800d76c:	680a      	ldr	r2, [r1, #0]
 800d76e:	69d3      	ldr	r3, [r2, #28]
 800d770:	6819      	ldr	r1, [r3, #0]
 800d772:	4604      	mov	r4, r0
 800d774:	4788      	blx	r1
 800d776:	4809      	ldr	r0, [pc, #36]	; (800d79c <_DispLine+0x7c>)
 800d778:	6802      	ldr	r2, [r0, #0]
 800d77a:	b10a      	cbz	r2, 800d780 <_DispLine+0x60>
 800d77c:	4620      	mov	r0, r4
 800d77e:	4790      	blx	r2
 800d780:	9a00      	ldr	r2, [sp, #0]
 800d782:	1e53      	subs	r3, r2, #1
 800d784:	2b00      	cmp	r3, #0
 800d786:	9300      	str	r3, [sp, #0]
 800d788:	daec      	bge.n	800d764 <_DispLine+0x44>
 800d78a:	2000      	movs	r0, #0
 800d78c:	f7fe f962 	bl	800ba54 <GUI__ManageCache>
 800d790:	bd1c      	pop	{r2, r3, r4, pc}
 800d792:	bf00      	nop
 800d794:	20000284 	.word	0x20000284
 800d798:	20000278 	.word	0x20000278
 800d79c:	2000e670 	.word	0x2000e670

0800d7a0 <GUI__GetLineNumChars>:
 800d7a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d7a2:	460d      	mov	r5, r1
 800d7a4:	9001      	str	r0, [sp, #4]
 800d7a6:	4604      	mov	r4, r0
 800d7a8:	b190      	cbz	r0, 800d7d0 <GUI__GetLineNumChars+0x30>
 800d7aa:	4b0a      	ldr	r3, [pc, #40]	; (800d7d4 <GUI__GetLineNumChars+0x34>)
 800d7ac:	681a      	ldr	r2, [r3, #0]
 800d7ae:	69d4      	ldr	r4, [r2, #28]
 800d7b0:	6964      	ldr	r4, [r4, #20]
 800d7b2:	b15c      	cbz	r4, 800d7cc <GUI__GetLineNumChars+0x2c>
 800d7b4:	6864      	ldr	r4, [r4, #4]
 800d7b6:	b14c      	cbz	r4, 800d7cc <GUI__GetLineNumChars+0x2c>
 800d7b8:	47a0      	blx	r4
 800d7ba:	4604      	mov	r4, r0
 800d7bc:	e008      	b.n	800d7d0 <GUI__GetLineNumChars+0x30>
 800d7be:	a801      	add	r0, sp, #4
 800d7c0:	f004 fa52 	bl	8011c68 <GUI_UC__GetCharCodeInc>
 800d7c4:	b120      	cbz	r0, 800d7d0 <GUI__GetLineNumChars+0x30>
 800d7c6:	280a      	cmp	r0, #10
 800d7c8:	d002      	beq.n	800d7d0 <GUI__GetLineNumChars+0x30>
 800d7ca:	3401      	adds	r4, #1
 800d7cc:	42ac      	cmp	r4, r5
 800d7ce:	dbf6      	blt.n	800d7be <GUI__GetLineNumChars+0x1e>
 800d7d0:	4620      	mov	r0, r4
 800d7d2:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 800d7d4:	20000278 	.word	0x20000278

0800d7d8 <GUI__GetOverlap>:
 800d7d8:	b513      	push	{r0, r1, r4, lr}
 800d7da:	a902      	add	r1, sp, #8
 800d7dc:	2400      	movs	r4, #0
 800d7de:	f841 4d04 	str.w	r4, [r1, #-4]!
 800d7e2:	f000 f8b3 	bl	800d94c <GUI_GetCharDistXEx>
 800d7e6:	9b01      	ldr	r3, [sp, #4]
 800d7e8:	4283      	cmp	r3, r0
 800d7ea:	bfcc      	ite	gt
 800d7ec:	ebc0 0003 	rsbgt	r0, r0, r3
 800d7f0:	4620      	movle	r0, r4
 800d7f2:	bd1c      	pop	{r2, r3, r4, pc}

0800d7f4 <GUI__GetLineDistX>:
 800d7f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d7f6:	4a14      	ldr	r2, [pc, #80]	; (800d848 <GUI__GetLineDistX+0x54>)
 800d7f8:	9001      	str	r0, [sp, #4]
 800d7fa:	ab02      	add	r3, sp, #8
 800d7fc:	6815      	ldr	r5, [r2, #0]
 800d7fe:	f843 1d08 	str.w	r1, [r3, #-8]!
 800d802:	4669      	mov	r1, sp
 800d804:	47a8      	blx	r5
 800d806:	4605      	mov	r5, r0
 800d808:	9001      	str	r0, [sp, #4]
 800d80a:	b1e0      	cbz	r0, 800d846 <GUI__GetLineDistX+0x52>
 800d80c:	490f      	ldr	r1, [pc, #60]	; (800d84c <GUI__GetLineDistX+0x58>)
 800d80e:	680c      	ldr	r4, [r1, #0]
 800d810:	69e3      	ldr	r3, [r4, #28]
 800d812:	695c      	ldr	r4, [r3, #20]
 800d814:	b124      	cbz	r4, 800d820 <GUI__GetLineDistX+0x2c>
 800d816:	6824      	ldr	r4, [r4, #0]
 800d818:	b114      	cbz	r4, 800d820 <GUI__GetLineDistX+0x2c>
 800d81a:	9900      	ldr	r1, [sp, #0]
 800d81c:	47a0      	blx	r4
 800d81e:	e012      	b.n	800d846 <GUI__GetLineDistX+0x52>
 800d820:	4625      	mov	r5, r4
 800d822:	9800      	ldr	r0, [sp, #0]
 800d824:	1e42      	subs	r2, r0, #1
 800d826:	2a00      	cmp	r2, #0
 800d828:	9200      	str	r2, [sp, #0]
 800d82a:	db07      	blt.n	800d83c <GUI__GetLineDistX+0x48>
 800d82c:	a801      	add	r0, sp, #4
 800d82e:	f004 fa1b 	bl	8011c68 <GUI_UC__GetCharCodeInc>
 800d832:	4604      	mov	r4, r0
 800d834:	f000 f880 	bl	800d938 <GUI_GetCharDistX>
 800d838:	182d      	adds	r5, r5, r0
 800d83a:	e7f2      	b.n	800d822 <GUI__GetLineDistX+0x2e>
 800d83c:	4620      	mov	r0, r4
 800d83e:	f7ff ffcb 	bl	800d7d8 <GUI__GetOverlap>
 800d842:	1828      	adds	r0, r5, r0
 800d844:	e7ff      	b.n	800d846 <GUI__GetLineDistX+0x52>
 800d846:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 800d848:	20000284 	.word	0x20000284
 800d84c:	20000278 	.word	0x20000278

0800d850 <GUI__DispLine>:
 800d850:	4b27      	ldr	r3, [pc, #156]	; (800d8f0 <GUI__DispLine+0xa0>)
 800d852:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d854:	4605      	mov	r5, r0
 800d856:	6818      	ldr	r0, [r3, #0]
 800d858:	460c      	mov	r4, r1
 800d85a:	b160      	cbz	r0, 800d876 <GUI__DispLine+0x26>
 800d85c:	2000      	movs	r0, #0
 800d85e:	f7fb f813 	bl	8008888 <WM__InitIVRSearch>
 800d862:	2800      	cmp	r0, #0
 800d864:	d042      	beq.n	800d8ec <GUI__DispLine+0x9c>
 800d866:	4628      	mov	r0, r5
 800d868:	4621      	mov	r1, r4
 800d86a:	466a      	mov	r2, sp
 800d86c:	f7ff ff58 	bl	800d720 <_DispLine>
 800d870:	f7fa ff4a 	bl	8008708 <WM__GetNextIVR>
 800d874:	e7f5      	b.n	800d862 <GUI__DispLine+0x12>
 800d876:	6810      	ldr	r0, [r2, #0]
 800d878:	6851      	ldr	r1, [r2, #4]
 800d87a:	466b      	mov	r3, sp
 800d87c:	c303      	stmia	r3!, {r0, r1}
 800d87e:	491d      	ldr	r1, [pc, #116]	; (800d8f4 <GUI__DispLine+0xa4>)
 800d880:	f8bd 3000 	ldrh.w	r3, [sp]
 800d884:	6808      	ldr	r0, [r1, #0]
 800d886:	f8b0 204c 	ldrh.w	r2, [r0, #76]	; 0x4c
 800d88a:	f8b0 0050 	ldrh.w	r0, [r0, #80]	; 0x50
 800d88e:	18d1      	adds	r1, r2, r3
 800d890:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d894:	f8ad 1000 	strh.w	r1, [sp]
 800d898:	18c1      	adds	r1, r0, r3
 800d89a:	f8ad 1002 	strh.w	r1, [sp, #2]
 800d89e:	f8bd 1006 	ldrh.w	r1, [sp, #6]
 800d8a2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800d8a6:	1840      	adds	r0, r0, r1
 800d8a8:	18d2      	adds	r2, r2, r3
 800d8aa:	f8ad 0006 	strh.w	r0, [sp, #6]
 800d8ae:	4668      	mov	r0, sp
 800d8b0:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d8b4:	f7fa ffe8 	bl	8008888 <WM__InitIVRSearch>
 800d8b8:	4b0e      	ldr	r3, [pc, #56]	; (800d8f4 <GUI__DispLine+0xa4>)
 800d8ba:	681b      	ldr	r3, [r3, #0]
 800d8bc:	b940      	cbnz	r0, 800d8d0 <GUI__DispLine+0x80>
 800d8be:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800d8c0:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800d8c2:	1a88      	subs	r0, r1, r2
 800d8c4:	8c99      	ldrh	r1, [r3, #36]	; 0x24
 800d8c6:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800d8c8:	8458      	strh	r0, [r3, #34]	; 0x22
 800d8ca:	1a88      	subs	r0, r1, r2
 800d8cc:	8498      	strh	r0, [r3, #36]	; 0x24
 800d8ce:	e00d      	b.n	800d8ec <GUI__DispLine+0x9c>
 800d8d0:	f8bd 2000 	ldrh.w	r2, [sp]
 800d8d4:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800d8d8:	845a      	strh	r2, [r3, #34]	; 0x22
 800d8da:	8499      	strh	r1, [r3, #36]	; 0x24
 800d8dc:	4628      	mov	r0, r5
 800d8de:	4621      	mov	r1, r4
 800d8e0:	466a      	mov	r2, sp
 800d8e2:	f7ff ff1d 	bl	800d720 <_DispLine>
 800d8e6:	f7fa ff0f 	bl	8008708 <WM__GetNextIVR>
 800d8ea:	e7e5      	b.n	800d8b8 <GUI__DispLine+0x68>
 800d8ec:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
 800d8ee:	bf00      	nop
 800d8f0:	2000e65c 	.word	0x2000e65c
 800d8f4:	20000278 	.word	0x20000278

0800d8f8 <GUI_GetYAdjust>:
 800d8f8:	4b0a      	ldr	r3, [pc, #40]	; (800d924 <GUI_GetYAdjust+0x2c>)
 800d8fa:	6818      	ldr	r0, [r3, #0]
 800d8fc:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800d8fe:	f002 010c 	and.w	r1, r2, #12
 800d902:	2908      	cmp	r1, #8
 800d904:	d007      	beq.n	800d916 <GUI_GetYAdjust+0x1e>
 800d906:	290c      	cmp	r1, #12
 800d908:	d005      	beq.n	800d916 <GUI_GetYAdjust+0x1e>
 800d90a:	2904      	cmp	r1, #4
 800d90c:	d107      	bne.n	800d91e <GUI_GetYAdjust+0x26>
 800d90e:	69c3      	ldr	r3, [r0, #28]
 800d910:	7e18      	ldrb	r0, [r3, #24]
 800d912:	3801      	subs	r0, #1
 800d914:	4770      	bx	lr
 800d916:	69c2      	ldr	r2, [r0, #28]
 800d918:	7e11      	ldrb	r1, [r2, #24]
 800d91a:	0848      	lsrs	r0, r1, #1
 800d91c:	4770      	bx	lr
 800d91e:	2000      	movs	r0, #0
 800d920:	4770      	bx	lr
 800d922:	bf00      	nop
 800d924:	20000278 	.word	0x20000278

0800d928 <GUI_GetFontDistY>:
 800d928:	4b02      	ldr	r3, [pc, #8]	; (800d934 <GUI_GetFontDistY+0xc>)
 800d92a:	6818      	ldr	r0, [r3, #0]
 800d92c:	69c1      	ldr	r1, [r0, #28]
 800d92e:	7e48      	ldrb	r0, [r1, #25]
 800d930:	4770      	bx	lr
 800d932:	bf00      	nop
 800d934:	20000278 	.word	0x20000278

0800d938 <GUI_GetCharDistX>:
 800d938:	b508      	push	{r3, lr}
 800d93a:	4b03      	ldr	r3, [pc, #12]	; (800d948 <GUI_GetCharDistX+0x10>)
 800d93c:	6819      	ldr	r1, [r3, #0]
 800d93e:	69ca      	ldr	r2, [r1, #28]
 800d940:	2100      	movs	r1, #0
 800d942:	6853      	ldr	r3, [r2, #4]
 800d944:	4798      	blx	r3
 800d946:	bd08      	pop	{r3, pc}
 800d948:	20000278 	.word	0x20000278

0800d94c <GUI_GetCharDistXEx>:
 800d94c:	b508      	push	{r3, lr}
 800d94e:	4b03      	ldr	r3, [pc, #12]	; (800d95c <GUI_GetCharDistXEx+0x10>)
 800d950:	681a      	ldr	r2, [r3, #0]
 800d952:	69d3      	ldr	r3, [r2, #28]
 800d954:	685a      	ldr	r2, [r3, #4]
 800d956:	4790      	blx	r2
 800d958:	bd08      	pop	{r3, pc}
 800d95a:	bf00      	nop
 800d95c:	20000278 	.word	0x20000278

0800d960 <_PushFreeBlock>:
 800d960:	4b07      	ldr	r3, [pc, #28]	; (800d980 <_PushFreeBlock+0x20>)
 800d962:	685a      	ldr	r2, [r3, #4]
 800d964:	1c51      	adds	r1, r2, #1
 800d966:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800d968:	b510      	push	{r4, lr}
 800d96a:	6059      	str	r1, [r3, #4]
 800d96c:	eb02 04c0 	add.w	r4, r2, r0, lsl #3
 800d970:	6a19      	ldr	r1, [r3, #32]
 800d972:	6061      	str	r1, [r4, #4]
 800d974:	2100      	movs	r1, #0
 800d976:	f802 1030 	strb.w	r1, [r2, r0, lsl #3]
 800d97a:	6218      	str	r0, [r3, #32]
 800d97c:	bd10      	pop	{r4, pc}
 800d97e:	bf00      	nop
 800d980:	2000e68c 	.word	0x2000e68c

0800d984 <_OnExit>:
 800d984:	b538      	push	{r3, r4, r5, lr}
 800d986:	4d0b      	ldr	r5, [pc, #44]	; (800d9b4 <_OnExit+0x30>)
 800d988:	2400      	movs	r4, #0
 800d98a:	f105 003c 	add.w	r0, r5, #60	; 0x3c
 800d98e:	4621      	mov	r1, r4
 800d990:	2280      	movs	r2, #128	; 0x80
 800d992:	f885 4024 	strb.w	r4, [r5, #36]	; 0x24
 800d996:	f7fd ff7f 	bl	800b898 <GUI__memset>
 800d99a:	4628      	mov	r0, r5
 800d99c:	4621      	mov	r1, r4
 800d99e:	22bc      	movs	r2, #188	; 0xbc
 800d9a0:	f7fd ff7a 	bl	800b898 <GUI__memset>
 800d9a4:	4804      	ldr	r0, [pc, #16]	; (800d9b8 <_OnExit+0x34>)
 800d9a6:	4621      	mov	r1, r4
 800d9a8:	220c      	movs	r2, #12
 800d9aa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d9ae:	f7fd bf73 	b.w	800b898 <GUI__memset>
 800d9b2:	bf00      	nop
 800d9b4:	2000e68c 	.word	0x2000e68c
 800d9b8:	2000e1d8 	.word	0x2000e1d8

0800d9bc <_RemoveFreeBlock>:
 800d9bc:	b510      	push	{r4, lr}
 800d9be:	6841      	ldr	r1, [r0, #4]
 800d9c0:	230f      	movs	r3, #15
 800d9c2:	4a0c      	ldr	r2, [pc, #48]	; (800d9f4 <_RemoveFreeBlock+0x38>)
 800d9c4:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 800d9c8:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800d9ca:	42a1      	cmp	r1, r4
 800d9cc:	d202      	bcs.n	800d9d4 <_RemoveFreeBlock+0x18>
 800d9ce:	f113 33ff 	adds.w	r3, r3, #4294967295
 800d9d2:	d2f6      	bcs.n	800d9c2 <_RemoveFreeBlock+0x6>
 800d9d4:	6814      	ldr	r4, [r2, #0]
 800d9d6:	1a61      	subs	r1, r4, r1
 800d9d8:	6011      	str	r1, [r2, #0]
 800d9da:	6882      	ldr	r2, [r0, #8]
 800d9dc:	68c0      	ldr	r0, [r0, #12]
 800d9de:	b102      	cbz	r2, 800d9e2 <_RemoveFreeBlock+0x26>
 800d9e0:	6050      	str	r0, [r2, #4]
 800d9e2:	b108      	cbz	r0, 800d9e8 <_RemoveFreeBlock+0x2c>
 800d9e4:	6002      	str	r2, [r0, #0]
 800d9e6:	bd10      	pop	{r4, pc}
 800d9e8:	4902      	ldr	r1, [pc, #8]	; (800d9f4 <_RemoveFreeBlock+0x38>)
 800d9ea:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 800d9ee:	641a      	str	r2, [r3, #64]	; 0x40
 800d9f0:	bd10      	pop	{r4, pc}
 800d9f2:	bf00      	nop
 800d9f4:	2000e68c 	.word	0x2000e68c

0800d9f8 <_AddFreeMemory>:
 800d9f8:	4b21      	ldr	r3, [pc, #132]	; (800da80 <_AddFreeMemory+0x88>)
 800d9fa:	689a      	ldr	r2, [r3, #8]
 800d9fc:	b570      	push	{r4, r5, r6, lr}
 800d9fe:	6b5e      	ldr	r6, [r3, #52]	; 0x34
 800da00:	4605      	mov	r5, r0
 800da02:	460c      	mov	r4, r1
 800da04:	1808      	adds	r0, r1, r0
 800da06:	1e51      	subs	r1, r2, #1
 800da08:	1872      	adds	r2, r6, r1
 800da0a:	4290      	cmp	r0, r2
 800da0c:	461e      	mov	r6, r3
 800da0e:	d805      	bhi.n	800da1c <_AddFreeMemory+0x24>
 800da10:	5963      	ldr	r3, [r4, r5]
 800da12:	b91b      	cbnz	r3, 800da1c <_AddFreeMemory+0x24>
 800da14:	6841      	ldr	r1, [r0, #4]
 800da16:	186d      	adds	r5, r5, r1
 800da18:	f7ff ffd0 	bl	800d9bc <_RemoveFreeBlock>
 800da1c:	6b70      	ldr	r0, [r6, #52]	; 0x34
 800da1e:	4284      	cmp	r4, r0
 800da20:	d90a      	bls.n	800da38 <_AddFreeMemory+0x40>
 800da22:	f854 6c04 	ldr.w	r6, [r4, #-4]
 800da26:	1ba6      	subs	r6, r4, r6
 800da28:	6832      	ldr	r2, [r6, #0]
 800da2a:	b92a      	cbnz	r2, 800da38 <_AddFreeMemory+0x40>
 800da2c:	4630      	mov	r0, r6
 800da2e:	6874      	ldr	r4, [r6, #4]
 800da30:	f7ff ffc4 	bl	800d9bc <_RemoveFreeBlock>
 800da34:	192d      	adds	r5, r5, r4
 800da36:	4634      	mov	r4, r6
 800da38:	230f      	movs	r3, #15
 800da3a:	4811      	ldr	r0, [pc, #68]	; (800da80 <_AddFreeMemory+0x88>)
 800da3c:	eb00 01c3 	add.w	r1, r0, r3, lsl #3
 800da40:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800da42:	4295      	cmp	r5, r2
 800da44:	d202      	bcs.n	800da4c <_AddFreeMemory+0x54>
 800da46:	f113 33ff 	adds.w	r3, r3, #4294967295
 800da4a:	d2f6      	bcs.n	800da3a <_AddFreeMemory+0x42>
 800da4c:	eb00 00c3 	add.w	r0, r0, r3, lsl #3
 800da50:	1961      	adds	r1, r4, r5
 800da52:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800da54:	6124      	str	r4, [r4, #16]
 800da56:	2000      	movs	r0, #0
 800da58:	e884 0021 	stmia.w	r4, {r0, r5}
 800da5c:	60a2      	str	r2, [r4, #8]
 800da5e:	f841 5c04 	str.w	r5, [r1, #-4]
 800da62:	f104 0108 	add.w	r1, r4, #8
 800da66:	b102      	cbz	r2, 800da6a <_AddFreeMemory+0x72>
 800da68:	6051      	str	r1, [r2, #4]
 800da6a:	60e0      	str	r0, [r4, #12]
 800da6c:	4804      	ldr	r0, [pc, #16]	; (800da80 <_AddFreeMemory+0x88>)
 800da6e:	6802      	ldr	r2, [r0, #0]
 800da70:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800da74:	6419      	str	r1, [r3, #64]	; 0x40
 800da76:	18a9      	adds	r1, r5, r2
 800da78:	6001      	str	r1, [r0, #0]
 800da7a:	4628      	mov	r0, r5
 800da7c:	bd70      	pop	{r4, r5, r6, pc}
 800da7e:	bf00      	nop
 800da80:	2000e68c 	.word	0x2000e68c

0800da84 <_RemoveHoles>:
 800da84:	4b22      	ldr	r3, [pc, #136]	; (800db10 <_RemoveHoles+0x8c>)
 800da86:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800da8a:	4683      	mov	fp, r0
 800da8c:	6898      	ldr	r0, [r3, #8]
 800da8e:	6b5c      	ldr	r4, [r3, #52]	; 0x34
 800da90:	f100 3aff 	add.w	sl, r0, #4294967295
 800da94:	44a2      	add	sl, r4
 800da96:	e894 0028 	ldmia.w	r4, {r3, r5}
 800da9a:	2b00      	cmp	r3, #0
 800da9c:	d130      	bne.n	800db00 <_RemoveHoles+0x7c>
 800da9e:	eb04 0805 	add.w	r8, r4, r5
 800daa2:	45d0      	cmp	r8, sl
 800daa4:	d22c      	bcs.n	800db00 <_RemoveHoles+0x7c>
 800daa6:	f854 9005 	ldr.w	r9, [r4, r5]
 800daaa:	f8d8 7004 	ldr.w	r7, [r8, #4]
 800daae:	f1b9 0f00 	cmp.w	r9, #0
 800dab2:	d025      	beq.n	800db00 <_RemoveHoles+0x7c>
 800dab4:	4e16      	ldr	r6, [pc, #88]	; (800db10 <_RemoveHoles+0x8c>)
 800dab6:	6b31      	ldr	r1, [r6, #48]	; 0x30
 800dab8:	f811 2039 	ldrb.w	r2, [r1, r9, lsl #3]
 800dabc:	2a01      	cmp	r2, #1
 800dabe:	d11f      	bne.n	800db00 <_RemoveHoles+0x7c>
 800dac0:	6ab3      	ldr	r3, [r6, #40]	; 0x28
 800dac2:	4620      	mov	r0, r4
 800dac4:	9301      	str	r3, [sp, #4]
 800dac6:	f7ff ff79 	bl	800d9bc <_RemoveFreeBlock>
 800daca:	f8d8 0000 	ldr.w	r0, [r8]
 800dace:	6b31      	ldr	r1, [r6, #48]	; 0x30
 800dad0:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
 800dad4:	4620      	mov	r0, r4
 800dad6:	6054      	str	r4, [r2, #4]
 800dad8:	4641      	mov	r1, r8
 800dada:	463a      	mov	r2, r7
 800dadc:	f005 f876 	bl	8012bcc <memmove>
 800dae0:	9b01      	ldr	r3, [sp, #4]
 800dae2:	4599      	cmp	r9, r3
 800dae4:	d102      	bne.n	800daec <_RemoveHoles+0x68>
 800dae6:	6b30      	ldr	r0, [r6, #48]	; 0x30
 800dae8:	1b41      	subs	r1, r0, r5
 800daea:	6331      	str	r1, [r6, #48]	; 0x30
 800daec:	4628      	mov	r0, r5
 800daee:	19e1      	adds	r1, r4, r7
 800daf0:	f7ff ff82 	bl	800d9f8 <_AddFreeMemory>
 800daf4:	f1bb 0f00 	cmp.w	fp, #0
 800daf8:	d001      	beq.n	800dafe <_RemoveHoles+0x7a>
 800dafa:	4583      	cmp	fp, r0
 800dafc:	d905      	bls.n	800db0a <_RemoveHoles+0x86>
 800dafe:	463d      	mov	r5, r7
 800db00:	1964      	adds	r4, r4, r5
 800db02:	4554      	cmp	r4, sl
 800db04:	d3c7      	bcc.n	800da96 <_RemoveHoles+0x12>
 800db06:	2001      	movs	r0, #1
 800db08:	e000      	b.n	800db0c <_RemoveHoles+0x88>
 800db0a:	2000      	movs	r0, #0
 800db0c:	e8bd 8ffe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800db10:	2000e68c 	.word	0x2000e68c

0800db14 <GUI_ALLOC_FreeFixedBlock>:
 800db14:	b128      	cbz	r0, 800db22 <GUI_ALLOC_FreeFixedBlock+0xe>
 800db16:	4a03      	ldr	r2, [pc, #12]	; (800db24 <GUI_ALLOC_FreeFixedBlock+0x10>)
 800db18:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800db1a:	6003      	str	r3, [r0, #0]
 800db1c:	b103      	cbz	r3, 800db20 <GUI_ALLOC_FreeFixedBlock+0xc>
 800db1e:	6058      	str	r0, [r3, #4]
 800db20:	6390      	str	r0, [r2, #56]	; 0x38
 800db22:	4770      	bx	lr
 800db24:	2000e68c 	.word	0x2000e68c

0800db28 <GUI_ALLOC_h2p>:
 800db28:	b128      	cbz	r0, 800db36 <GUI_ALLOC_h2p+0xe>
 800db2a:	4b03      	ldr	r3, [pc, #12]	; (800db38 <GUI_ALLOC_h2p+0x10>)
 800db2c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800db2e:	eb01 00c0 	add.w	r0, r1, r0, lsl #3
 800db32:	6840      	ldr	r0, [r0, #4]
 800db34:	3008      	adds	r0, #8
 800db36:	4770      	bx	lr
 800db38:	2000e68c 	.word	0x2000e68c

0800db3c <GUI_ALLOC_LockH>:
 800db3c:	4b05      	ldr	r3, [pc, #20]	; (800db54 <GUI_ALLOC_LockH+0x18>)
 800db3e:	6999      	ldr	r1, [r3, #24]
 800db40:	3101      	adds	r1, #1
 800db42:	6199      	str	r1, [r3, #24]
 800db44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800db46:	f813 1030 	ldrb.w	r1, [r3, r0, lsl #3]
 800db4a:	3101      	adds	r1, #1
 800db4c:	f803 1030 	strb.w	r1, [r3, r0, lsl #3]
 800db50:	f7ff bfea 	b.w	800db28 <GUI_ALLOC_h2p>
 800db54:	2000e68c 	.word	0x2000e68c

0800db58 <GUI_ALLOC_UnlockH>:
 800db58:	b530      	push	{r4, r5, lr}
 800db5a:	6802      	ldr	r2, [r0, #0]
 800db5c:	4b09      	ldr	r3, [pc, #36]	; (800db84 <GUI_ALLOC_UnlockH+0x2c>)
 800db5e:	f852 1c08 	ldr.w	r1, [r2, #-8]
 800db62:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800db64:	f812 4031 	ldrb.w	r4, [r2, r1, lsl #3]
 800db68:	2c01      	cmp	r4, #1
 800db6a:	d903      	bls.n	800db74 <GUI_ALLOC_UnlockH+0x1c>
 800db6c:	699d      	ldr	r5, [r3, #24]
 800db6e:	b10d      	cbz	r5, 800db74 <GUI_ALLOC_UnlockH+0x1c>
 800db70:	3d01      	subs	r5, #1
 800db72:	619d      	str	r5, [r3, #24]
 800db74:	2300      	movs	r3, #0
 800db76:	3c01      	subs	r4, #1
 800db78:	f802 4031 	strb.w	r4, [r2, r1, lsl #3]
 800db7c:	6003      	str	r3, [r0, #0]
 800db7e:	4618      	mov	r0, r3
 800db80:	bd30      	pop	{r4, r5, pc}
 800db82:	bf00      	nop
 800db84:	2000e68c 	.word	0x2000e68c

0800db88 <GUI_ALLOC_AssignMemory>:
 800db88:	4b02      	ldr	r3, [pc, #8]	; (800db94 <GUI_ALLOC_AssignMemory+0xc>)
 800db8a:	f021 0103 	bic.w	r1, r1, #3
 800db8e:	6018      	str	r0, [r3, #0]
 800db90:	6059      	str	r1, [r3, #4]
 800db92:	4770      	bx	lr
 800db94:	2000e1d8 	.word	0x2000e1d8

0800db98 <GUI_ALLOC_GetSize>:
 800db98:	b130      	cbz	r0, 800dba8 <GUI_ALLOC_GetSize+0x10>
 800db9a:	4b04      	ldr	r3, [pc, #16]	; (800dbac <GUI_ALLOC_GetSize+0x14>)
 800db9c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800db9e:	eb01 00c0 	add.w	r0, r1, r0, lsl #3
 800dba2:	6842      	ldr	r2, [r0, #4]
 800dba4:	6850      	ldr	r0, [r2, #4]
 800dba6:	380c      	subs	r0, #12
 800dba8:	4770      	bx	lr
 800dbaa:	bf00      	nop
 800dbac:	2000e68c 	.word	0x2000e68c

0800dbb0 <GUI_ALLOC_Free>:
 800dbb0:	b510      	push	{r4, lr}
 800dbb2:	4604      	mov	r4, r0
 800dbb4:	b188      	cbz	r0, 800dbda <GUI_ALLOC_Free+0x2a>
 800dbb6:	4b09      	ldr	r3, [pc, #36]	; (800dbdc <GUI_ALLOC_Free+0x2c>)
 800dbb8:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800dbba:	f810 1034 	ldrb.w	r1, [r0, r4, lsl #3]
 800dbbe:	eb00 02c4 	add.w	r2, r0, r4, lsl #3
 800dbc2:	b151      	cbz	r1, 800dbda <GUI_ALLOC_Free+0x2a>
 800dbc4:	2901      	cmp	r1, #1
 800dbc6:	d808      	bhi.n	800dbda <GUI_ALLOC_Free+0x2a>
 800dbc8:	6851      	ldr	r1, [r2, #4]
 800dbca:	6848      	ldr	r0, [r1, #4]
 800dbcc:	f7ff ff14 	bl	800d9f8 <_AddFreeMemory>
 800dbd0:	4620      	mov	r0, r4
 800dbd2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800dbd6:	f7ff bec3 	b.w	800d960 <_PushFreeBlock>
 800dbda:	bd10      	pop	{r4, pc}
 800dbdc:	2000e68c 	.word	0x2000e68c

0800dbe0 <_EnlargeBlocks>:
 800dbe0:	4b24      	ldr	r3, [pc, #144]	; (800dc74 <_EnlargeBlocks+0x94>)
 800dbe2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800dbe4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dbe8:	b93a      	cbnz	r2, 800dbfa <_EnlargeBlocks+0x1a>
 800dbea:	4923      	ldr	r1, [pc, #140]	; (800dc78 <_EnlargeBlocks+0x98>)
 800dbec:	688a      	ldr	r2, [r1, #8]
 800dbee:	684b      	ldr	r3, [r1, #4]
 800dbf0:	3208      	adds	r2, #8
 800dbf2:	fbb3 f0f2 	udiv	r0, r3, r2
 800dbf6:	1c85      	adds	r5, r0, #2
 800dbf8:	e003      	b.n	800dc02 <_EnlargeBlocks+0x22>
 800dbfa:	68d8      	ldr	r0, [r3, #12]
 800dbfc:	1d05      	adds	r5, r0, #4
 800dbfe:	eb05 05d0 	add.w	r5, r5, r0, lsr #3
 800dc02:	00e8      	lsls	r0, r5, #3
 800dc04:	f000 f970 	bl	800dee8 <_Alloc>
 800dc08:	4680      	mov	r8, r0
 800dc0a:	2800      	cmp	r0, #0
 800dc0c:	d02d      	beq.n	800dc6a <_EnlargeBlocks+0x8a>
 800dc0e:	4c19      	ldr	r4, [pc, #100]	; (800dc74 <_EnlargeBlocks+0x94>)
 800dc10:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800dc12:	68e2      	ldr	r2, [r4, #12]
 800dc14:	6aa7      	ldr	r7, [r4, #40]	; 0x28
 800dc16:	eb01 06c0 	add.w	r6, r1, r0, lsl #3
 800dc1a:	00d2      	lsls	r2, r2, #3
 800dc1c:	6876      	ldr	r6, [r6, #4]
 800dc1e:	3608      	adds	r6, #8
 800dc20:	4630      	mov	r0, r6
 800dc22:	f7f2 fab1 	bl	8000188 <memcpy>
 800dc26:	68e2      	ldr	r2, [r4, #12]
 800dc28:	6326      	str	r6, [r4, #48]	; 0x30
 800dc2a:	f8c4 8028 	str.w	r8, [r4, #40]	; 0x28
 800dc2e:	4613      	mov	r3, r2
 800dc30:	eb06 04c2 	add.w	r4, r6, r2, lsl #3
 800dc34:	2100      	movs	r1, #0
 800dc36:	1e68      	subs	r0, r5, #1
 800dc38:	4283      	cmp	r3, r0
 800dc3a:	d204      	bcs.n	800dc46 <_EnlargeBlocks+0x66>
 800dc3c:	1860      	adds	r0, r4, r1
 800dc3e:	3301      	adds	r3, #1
 800dc40:	6043      	str	r3, [r0, #4]
 800dc42:	3108      	adds	r1, #8
 800dc44:	e7f7      	b.n	800dc36 <_EnlargeBlocks+0x56>
 800dc46:	eb06 01c3 	add.w	r1, r6, r3, lsl #3
 800dc4a:	2400      	movs	r4, #0
 800dc4c:	4b09      	ldr	r3, [pc, #36]	; (800dc74 <_EnlargeBlocks+0x94>)
 800dc4e:	604c      	str	r4, [r1, #4]
 800dc50:	6858      	ldr	r0, [r3, #4]
 800dc52:	621a      	str	r2, [r3, #32]
 800dc54:	1a82      	subs	r2, r0, r2
 800dc56:	1951      	adds	r1, r2, r5
 800dc58:	6059      	str	r1, [r3, #4]
 800dc5a:	60dd      	str	r5, [r3, #12]
 800dc5c:	4638      	mov	r0, r7
 800dc5e:	b13f      	cbz	r7, 800dc70 <_EnlargeBlocks+0x90>
 800dc60:	f7ff ffa6 	bl	800dbb0 <GUI_ALLOC_Free>
 800dc64:	4620      	mov	r0, r4
 800dc66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dc6a:	2001      	movs	r0, #1
 800dc6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dc70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dc74:	2000e68c 	.word	0x2000e68c
 800dc78:	2000e1d8 	.word	0x2000e1d8

0800dc7c <_InitOnce>:
 800dc7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dc7e:	4b54      	ldr	r3, [pc, #336]	; (800ddd0 <_InitOnce+0x154>)
 800dc80:	f893 1024 	ldrb.w	r1, [r3, #36]	; 0x24
 800dc84:	2900      	cmp	r1, #0
 800dc86:	f040 80a2 	bne.w	800ddce <_InitOnce+0x152>
 800dc8a:	4852      	ldr	r0, [pc, #328]	; (800ddd4 <_InitOnce+0x158>)
 800dc8c:	2201      	movs	r2, #1
 800dc8e:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 800dc92:	6842      	ldr	r2, [r0, #4]
 800dc94:	6803      	ldr	r3, [r0, #0]
 800dc96:	f5b2 5f20 	cmp.w	r2, #10240	; 0x2800
 800dc9a:	bf28      	it	cs
 800dc9c:	f44f 5220 	movcs.w	r2, #10240	; 0x2800
 800dca0:	0894      	lsrs	r4, r2, #2
 800dca2:	2000      	movs	r0, #0
 800dca4:	42a0      	cmp	r0, r4
 800dca6:	d009      	beq.n	800dcbc <_InitOnce+0x40>
 800dca8:	1846      	adds	r6, r0, r1
 800dcaa:	25ff      	movs	r5, #255	; 0xff
 800dcac:	fbb6 f7f5 	udiv	r7, r6, r5
 800dcb0:	fb05 6517 	mls	r5, r5, r7, r6
 800dcb4:	f843 5020 	str.w	r5, [r3, r0, lsl #2]
 800dcb8:	3001      	adds	r0, #1
 800dcba:	e7f3      	b.n	800dca4 <_InitOnce+0x28>
 800dcbc:	2000      	movs	r0, #0
 800dcbe:	42a0      	cmp	r0, r4
 800dcc0:	d013      	beq.n	800dcea <_InitOnce+0x6e>
 800dcc2:	25ff      	movs	r5, #255	; 0xff
 800dcc4:	1846      	adds	r6, r0, r1
 800dcc6:	fbb6 f7f5 	udiv	r7, r6, r5
 800dcca:	fb05 6517 	mls	r5, r5, r7, r6
 800dcce:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 800dcd2:	42af      	cmp	r7, r5
 800dcd4:	d007      	beq.n	800dce6 <_InitOnce+0x6a>
 800dcd6:	493f      	ldr	r1, [pc, #252]	; (800ddd4 <_InitOnce+0x158>)
 800dcd8:	688a      	ldr	r2, [r1, #8]
 800dcda:	2a00      	cmp	r2, #0
 800dcdc:	d150      	bne.n	800dd80 <_InitOnce+0x104>
 800dcde:	684b      	ldr	r3, [r1, #4]
 800dce0:	089c      	lsrs	r4, r3, #2
 800dce2:	608c      	str	r4, [r1, #8]
 800dce4:	e04c      	b.n	800dd80 <_InitOnce+0x104>
 800dce6:	3001      	adds	r0, #1
 800dce8:	e7e9      	b.n	800dcbe <_InitOnce+0x42>
 800dcea:	3101      	adds	r1, #1
 800dcec:	2902      	cmp	r1, #2
 800dcee:	d1d8      	bne.n	800dca2 <_InitOnce+0x26>
 800dcf0:	0854      	lsrs	r4, r2, #1
 800dcf2:	2100      	movs	r1, #0
 800dcf4:	2000      	movs	r0, #0
 800dcf6:	42a0      	cmp	r0, r4
 800dcf8:	d009      	beq.n	800dd0e <_InitOnce+0x92>
 800dcfa:	1846      	adds	r6, r0, r1
 800dcfc:	25ff      	movs	r5, #255	; 0xff
 800dcfe:	fbb6 f7f5 	udiv	r7, r6, r5
 800dd02:	fb05 6517 	mls	r5, r5, r7, r6
 800dd06:	f823 5010 	strh.w	r5, [r3, r0, lsl #1]
 800dd0a:	3001      	adds	r0, #1
 800dd0c:	e7f3      	b.n	800dcf6 <_InitOnce+0x7a>
 800dd0e:	2000      	movs	r0, #0
 800dd10:	42a0      	cmp	r0, r4
 800dd12:	d00c      	beq.n	800dd2e <_InitOnce+0xb2>
 800dd14:	25ff      	movs	r5, #255	; 0xff
 800dd16:	1846      	adds	r6, r0, r1
 800dd18:	fbb6 f7f5 	udiv	r7, r6, r5
 800dd1c:	fb05 6517 	mls	r5, r5, r7, r6
 800dd20:	f833 7010 	ldrh.w	r7, [r3, r0, lsl #1]
 800dd24:	b2ad      	uxth	r5, r5
 800dd26:	42af      	cmp	r7, r5
 800dd28:	d1d5      	bne.n	800dcd6 <_InitOnce+0x5a>
 800dd2a:	3001      	adds	r0, #1
 800dd2c:	e7f0      	b.n	800dd10 <_InitOnce+0x94>
 800dd2e:	3101      	adds	r1, #1
 800dd30:	2902      	cmp	r1, #2
 800dd32:	d1df      	bne.n	800dcf4 <_InitOnce+0x78>
 800dd34:	2100      	movs	r1, #0
 800dd36:	2000      	movs	r0, #0
 800dd38:	4290      	cmp	r0, r2
 800dd3a:	d008      	beq.n	800dd4e <_InitOnce+0xd2>
 800dd3c:	1845      	adds	r5, r0, r1
 800dd3e:	24ff      	movs	r4, #255	; 0xff
 800dd40:	fbb5 f6f4 	udiv	r6, r5, r4
 800dd44:	fb04 5516 	mls	r5, r4, r6, r5
 800dd48:	541d      	strb	r5, [r3, r0]
 800dd4a:	3001      	adds	r0, #1
 800dd4c:	e7f4      	b.n	800dd38 <_InitOnce+0xbc>
 800dd4e:	2000      	movs	r0, #0
 800dd50:	4290      	cmp	r0, r2
 800dd52:	d00b      	beq.n	800dd6c <_InitOnce+0xf0>
 800dd54:	24ff      	movs	r4, #255	; 0xff
 800dd56:	1845      	adds	r5, r0, r1
 800dd58:	fbb5 f6f4 	udiv	r6, r5, r4
 800dd5c:	fb04 5516 	mls	r5, r4, r6, r5
 800dd60:	5c1e      	ldrb	r6, [r3, r0]
 800dd62:	b2ec      	uxtb	r4, r5
 800dd64:	42a6      	cmp	r6, r4
 800dd66:	d1b6      	bne.n	800dcd6 <_InitOnce+0x5a>
 800dd68:	3001      	adds	r0, #1
 800dd6a:	e7f1      	b.n	800dd50 <_InitOnce+0xd4>
 800dd6c:	3101      	adds	r1, #1
 800dd6e:	2902      	cmp	r1, #2
 800dd70:	d1e1      	bne.n	800dd36 <_InitOnce+0xba>
 800dd72:	2500      	movs	r5, #0
 800dd74:	4295      	cmp	r5, r2
 800dd76:	d0ae      	beq.n	800dcd6 <_InitOnce+0x5a>
 800dd78:	2400      	movs	r4, #0
 800dd7a:	555c      	strb	r4, [r3, r5]
 800dd7c:	3501      	adds	r5, #1
 800dd7e:	e7f9      	b.n	800dd74 <_InitOnce+0xf8>
 800dd80:	4815      	ldr	r0, [pc, #84]	; (800ddd8 <_InitOnce+0x15c>)
 800dd82:	4d16      	ldr	r5, [pc, #88]	; (800dddc <_InitOnce+0x160>)
 800dd84:	6005      	str	r5, [r0, #0]
 800dd86:	f7ff fad7 	bl	800d338 <GUI__RegisterExit>
 800dd8a:	4911      	ldr	r1, [pc, #68]	; (800ddd0 <_InitOnce+0x154>)
 800dd8c:	205a      	movs	r0, #90	; 0x5a
 800dd8e:	61c8      	str	r0, [r1, #28]
 800dd90:	2300      	movs	r3, #0
 800dd92:	4c0f      	ldr	r4, [pc, #60]	; (800ddd0 <_InitOnce+0x154>)
 800dd94:	2510      	movs	r5, #16
 800dd96:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
 800dd9a:	fa05 f503 	lsl.w	r5, r5, r3
 800dd9e:	3301      	adds	r3, #1
 800dda0:	2b10      	cmp	r3, #16
 800dda2:	63d5      	str	r5, [r2, #60]	; 0x3c
 800dda4:	d1f5      	bne.n	800dd92 <_InitOnce+0x116>
 800dda6:	480b      	ldr	r0, [pc, #44]	; (800ddd4 <_InitOnce+0x158>)
 800dda8:	6801      	ldr	r1, [r0, #0]
 800ddaa:	6840      	ldr	r0, [r0, #4]
 800ddac:	6361      	str	r1, [r4, #52]	; 0x34
 800ddae:	f1a0 0514 	sub.w	r5, r0, #20
 800ddb2:	194b      	adds	r3, r1, r5
 800ddb4:	2202      	movs	r2, #2
 800ddb6:	2501      	movs	r5, #1
 800ddb8:	60e2      	str	r2, [r4, #12]
 800ddba:	6323      	str	r3, [r4, #48]	; 0x30
 800ddbc:	60a0      	str	r0, [r4, #8]
 800ddbe:	605d      	str	r5, [r3, #4]
 800ddc0:	6225      	str	r5, [r4, #32]
 800ddc2:	6065      	str	r5, [r4, #4]
 800ddc4:	f7ff fe18 	bl	800d9f8 <_AddFreeMemory>
 800ddc8:	f7ff ff0a 	bl	800dbe0 <_EnlargeBlocks>
 800ddcc:	62e5      	str	r5, [r4, #44]	; 0x2c
 800ddce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ddd0:	2000e68c 	.word	0x2000e68c
 800ddd4:	2000e1d8 	.word	0x2000e1d8
 800ddd8:	2000e1e4 	.word	0x2000e1e4
 800dddc:	0800d985 	.word	0x0800d985

0800dde0 <GUI_ALLOC_GetMaxSize>:
 800dde0:	b508      	push	{r3, lr}
 800dde2:	f7ff ff4b 	bl	800dc7c <_InitOnce>
 800dde6:	2200      	movs	r2, #0
 800dde8:	4b0b      	ldr	r3, [pc, #44]	; (800de18 <GUI_ALLOC_GetMaxSize+0x38>)
 800ddea:	18d0      	adds	r0, r2, r3
 800ddec:	f8d0 30b8 	ldr.w	r3, [r0, #184]	; 0xb8
 800ddf0:	b113      	cbz	r3, 800ddf8 <GUI_ALLOC_GetMaxSize+0x18>
 800ddf2:	689b      	ldr	r3, [r3, #8]
 800ddf4:	2000      	movs	r0, #0
 800ddf6:	e00b      	b.n	800de10 <GUI_ALLOC_GetMaxSize+0x30>
 800ddf8:	3a08      	subs	r2, #8
 800ddfa:	f112 0f80 	cmn.w	r2, #128	; 0x80
 800ddfe:	d1f3      	bne.n	800dde8 <GUI_ALLOC_GetMaxSize+0x8>
 800de00:	e7f8      	b.n	800ddf4 <GUI_ALLOC_GetMaxSize+0x14>
 800de02:	6859      	ldr	r1, [r3, #4]
 800de04:	689a      	ldr	r2, [r3, #8]
 800de06:	4288      	cmp	r0, r1
 800de08:	bf38      	it	cc
 800de0a:	4608      	movcc	r0, r1
 800de0c:	b112      	cbz	r2, 800de14 <GUI_ALLOC_GetMaxSize+0x34>
 800de0e:	6893      	ldr	r3, [r2, #8]
 800de10:	2b00      	cmp	r3, #0
 800de12:	d1f6      	bne.n	800de02 <GUI_ALLOC_GetMaxSize+0x22>
 800de14:	380c      	subs	r0, #12
 800de16:	bd08      	pop	{r3, pc}
 800de18:	2000e68c 	.word	0x2000e68c

0800de1c <GUI_ALLOC_RequestSize>:
 800de1c:	b508      	push	{r3, lr}
 800de1e:	f7ff ffdf 	bl	800dde0 <GUI_ALLOC_GetMaxSize>
 800de22:	f5b0 0f80 	cmp.w	r0, #4194304	; 0x400000
 800de26:	f04f 0364 	mov.w	r3, #100	; 0x64
 800de2a:	4a06      	ldr	r2, [pc, #24]	; (800de44 <GUI_ALLOC_RequestSize+0x28>)
 800de2c:	d904      	bls.n	800de38 <GUI_ALLOC_RequestSize+0x1c>
 800de2e:	fb90 f0f3 	sdiv	r0, r0, r3
 800de32:	69d3      	ldr	r3, [r2, #28]
 800de34:	4358      	muls	r0, r3
 800de36:	bd08      	pop	{r3, pc}
 800de38:	69d1      	ldr	r1, [r2, #28]
 800de3a:	4348      	muls	r0, r1
 800de3c:	fbb0 f0f3 	udiv	r0, r0, r3
 800de40:	bd08      	pop	{r3, pc}
 800de42:	bf00      	nop
 800de44:	2000e68c 	.word	0x2000e68c

0800de48 <GUI_ALLOC_GetFixedBlock>:
 800de48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800de4a:	4605      	mov	r5, r0
 800de4c:	f7ff ff16 	bl	800dc7c <_InitOnce>
 800de50:	4b24      	ldr	r3, [pc, #144]	; (800dee4 <GUI_ALLOC_GetFixedBlock+0x9c>)
 800de52:	1ce8      	adds	r0, r5, #3
 800de54:	f020 0103 	bic.w	r1, r0, #3
 800de58:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800de5a:	6b98      	ldr	r0, [r3, #56]	; 0x38
 800de5c:	1d0d      	adds	r5, r1, #4
 800de5e:	4295      	cmp	r5, r2
 800de60:	bf38      	it	cc
 800de62:	4615      	movcc	r5, r2
 800de64:	4604      	mov	r4, r0
 800de66:	b12c      	cbz	r4, 800de74 <GUI_ALLOC_GetFixedBlock+0x2c>
 800de68:	f854 2c04 	ldr.w	r2, [r4, #-4]
 800de6c:	42aa      	cmp	r2, r5
 800de6e:	d02a      	beq.n	800dec6 <GUI_ALLOC_GetFixedBlock+0x7e>
 800de70:	6824      	ldr	r4, [r4, #0]
 800de72:	e7f8      	b.n	800de66 <GUI_ALLOC_GetFixedBlock+0x1e>
 800de74:	6b5f      	ldr	r7, [r3, #52]	; 0x34
 800de76:	689b      	ldr	r3, [r3, #8]
 800de78:	18ff      	adds	r7, r7, r3
 800de7a:	f857 6c04 	ldr.w	r6, [r7, #-4]
 800de7e:	1bbe      	subs	r6, r7, r6
 800de80:	6830      	ldr	r0, [r6, #0]
 800de82:	b128      	cbz	r0, 800de90 <GUI_ALLOC_GetFixedBlock+0x48>
 800de84:	4620      	mov	r0, r4
 800de86:	f7ff fdfd 	bl	800da84 <_RemoveHoles>
 800de8a:	f857 1c04 	ldr.w	r1, [r7, #-4]
 800de8e:	1a7e      	subs	r6, r7, r1
 800de90:	6832      	ldr	r2, [r6, #0]
 800de92:	bb22      	cbnz	r2, 800dede <GUI_ALLOC_GetFixedBlock+0x96>
 800de94:	6873      	ldr	r3, [r6, #4]
 800de96:	42ab      	cmp	r3, r5
 800de98:	db21      	blt.n	800dede <GUI_ALLOC_GetFixedBlock+0x96>
 800de9a:	1d1c      	adds	r4, r3, #4
 800de9c:	1b60      	subs	r0, r4, r5
 800de9e:	1834      	adds	r4, r6, r0
 800dea0:	4630      	mov	r0, r6
 800dea2:	f7ff fd8b 	bl	800d9bc <_RemoveFreeBlock>
 800dea6:	490f      	ldr	r1, [pc, #60]	; (800dee4 <GUI_ALLOC_GetFixedBlock+0x9c>)
 800dea8:	688a      	ldr	r2, [r1, #8]
 800deaa:	6908      	ldr	r0, [r1, #16]
 800deac:	1b53      	subs	r3, r2, r5
 800deae:	182a      	adds	r2, r5, r0
 800deb0:	608b      	str	r3, [r1, #8]
 800deb2:	610a      	str	r2, [r1, #16]
 800deb4:	6871      	ldr	r1, [r6, #4]
 800deb6:	1b48      	subs	r0, r1, r5
 800deb8:	d002      	beq.n	800dec0 <GUI_ALLOC_GetFixedBlock+0x78>
 800deba:	4631      	mov	r1, r6
 800debc:	f7ff fd9c 	bl	800d9f8 <_AddFreeMemory>
 800dec0:	f844 5c04 	str.w	r5, [r4, #-4]
 800dec4:	e00b      	b.n	800dede <GUI_ALLOC_GetFixedBlock+0x96>
 800dec6:	6823      	ldr	r3, [r4, #0]
 800dec8:	b10b      	cbz	r3, 800dece <GUI_ALLOC_GetFixedBlock+0x86>
 800deca:	6861      	ldr	r1, [r4, #4]
 800decc:	6059      	str	r1, [r3, #4]
 800dece:	6862      	ldr	r2, [r4, #4]
 800ded0:	b102      	cbz	r2, 800ded4 <GUI_ALLOC_GetFixedBlock+0x8c>
 800ded2:	6013      	str	r3, [r2, #0]
 800ded4:	42a0      	cmp	r0, r4
 800ded6:	d102      	bne.n	800dede <GUI_ALLOC_GetFixedBlock+0x96>
 800ded8:	6820      	ldr	r0, [r4, #0]
 800deda:	4b02      	ldr	r3, [pc, #8]	; (800dee4 <GUI_ALLOC_GetFixedBlock+0x9c>)
 800dedc:	6398      	str	r0, [r3, #56]	; 0x38
 800dede:	4620      	mov	r0, r4
 800dee0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800dee2:	bf00      	nop
 800dee4:	2000e68c 	.word	0x2000e68c

0800dee8 <_Alloc>:
 800dee8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800deec:	4604      	mov	r4, r0
 800deee:	f7ff fec5 	bl	800dc7c <_InitOnce>
 800def2:	4b38      	ldr	r3, [pc, #224]	; (800dfd4 <_Alloc+0xec>)
 800def4:	6bde      	ldr	r6, [r3, #60]	; 0x3c
 800def6:	42b4      	cmp	r4, r6
 800def8:	d302      	bcc.n	800df00 <_Alloc+0x18>
 800defa:	1ce6      	adds	r6, r4, #3
 800defc:	f026 0603 	bic.w	r6, r6, #3
 800df00:	6818      	ldr	r0, [r3, #0]
 800df02:	4c34      	ldr	r4, [pc, #208]	; (800dfd4 <_Alloc+0xec>)
 800df04:	360c      	adds	r6, #12
 800df06:	4286      	cmp	r6, r0
 800df08:	d860      	bhi.n	800dfcc <_Alloc+0xe4>
 800df0a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800df0c:	6862      	ldr	r2, [r4, #4]
 800df0e:	428a      	cmp	r2, r1
 800df10:	d910      	bls.n	800df34 <_Alloc+0x4c>
 800df12:	4830      	ldr	r0, [pc, #192]	; (800dfd4 <_Alloc+0xec>)
 800df14:	6842      	ldr	r2, [r0, #4]
 800df16:	1e55      	subs	r5, r2, #1
 800df18:	6045      	str	r5, [r0, #4]
 800df1a:	6a05      	ldr	r5, [r0, #32]
 800df1c:	6b02      	ldr	r2, [r0, #48]	; 0x30
 800df1e:	ea4f 08c5 	mov.w	r8, r5, lsl #3
 800df22:	eb02 0308 	add.w	r3, r2, r8
 800df26:	6859      	ldr	r1, [r3, #4]
 800df28:	6201      	str	r1, [r0, #32]
 800df2a:	2001      	movs	r0, #1
 800df2c:	f802 0035 	strb.w	r0, [r2, r5, lsl #3]
 800df30:	b955      	cbnz	r5, 800df48 <_Alloc+0x60>
 800df32:	e04b      	b.n	800dfcc <_Alloc+0xe4>
 800df34:	1e4d      	subs	r5, r1, #1
 800df36:	62e5      	str	r5, [r4, #44]	; 0x2c
 800df38:	f7ff fe52 	bl	800dbe0 <_EnlargeBlocks>
 800df3c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800df3e:	1c59      	adds	r1, r3, #1
 800df40:	62e1      	str	r1, [r4, #44]	; 0x2c
 800df42:	2800      	cmp	r0, #0
 800df44:	d0e5      	beq.n	800df12 <_Alloc+0x2a>
 800df46:	e041      	b.n	800dfcc <_Alloc+0xe4>
 800df48:	230f      	movs	r3, #15
 800df4a:	4a22      	ldr	r2, [pc, #136]	; (800dfd4 <_Alloc+0xec>)
 800df4c:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 800df50:	6bc8      	ldr	r0, [r1, #60]	; 0x3c
 800df52:	4286      	cmp	r6, r0
 800df54:	d20b      	bcs.n	800df6e <_Alloc+0x86>
 800df56:	f113 33ff 	adds.w	r3, r3, #4294967295
 800df5a:	d2f6      	bcs.n	800df4a <_Alloc+0x62>
 800df5c:	e007      	b.n	800df6e <_Alloc+0x86>
 800df5e:	688c      	ldr	r4, [r1, #8]
 800df60:	6860      	ldr	r0, [r4, #4]
 800df62:	4286      	cmp	r6, r0
 800df64:	d90a      	bls.n	800df7c <_Alloc+0x94>
 800df66:	68a1      	ldr	r1, [r4, #8]
 800df68:	2900      	cmp	r1, #0
 800df6a:	d1f8      	bne.n	800df5e <_Alloc+0x76>
 800df6c:	3301      	adds	r3, #1
 800df6e:	2b0f      	cmp	r3, #15
 800df70:	d824      	bhi.n	800dfbc <_Alloc+0xd4>
 800df72:	4a18      	ldr	r2, [pc, #96]	; (800dfd4 <_Alloc+0xec>)
 800df74:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 800df78:	6c09      	ldr	r1, [r1, #64]	; 0x40
 800df7a:	e7f5      	b.n	800df68 <_Alloc+0x80>
 800df7c:	f8df 9054 	ldr.w	r9, [pc, #84]	; 800dfd4 <_Alloc+0xec>
 800df80:	6867      	ldr	r7, [r4, #4]
 800df82:	f8d9 103c 	ldr.w	r1, [r9, #60]	; 0x3c
 800df86:	1bba      	subs	r2, r7, r6
 800df88:	310c      	adds	r1, #12
 800df8a:	4620      	mov	r0, r4
 800df8c:	428a      	cmp	r2, r1
 800df8e:	bf38      	it	cc
 800df90:	463e      	movcc	r6, r7
 800df92:	f7ff fd13 	bl	800d9bc <_RemoveFreeBlock>
 800df96:	f8d9 3030 	ldr.w	r3, [r9, #48]	; 0x30
 800df9a:	19a1      	adds	r1, r4, r6
 800df9c:	eb03 0008 	add.w	r0, r3, r8
 800dfa0:	2200      	movs	r2, #0
 800dfa2:	42b7      	cmp	r7, r6
 800dfa4:	6044      	str	r4, [r0, #4]
 800dfa6:	e884 0060 	stmia.w	r4, {r5, r6}
 800dfaa:	60a2      	str	r2, [r4, #8]
 800dfac:	6124      	str	r4, [r4, #16]
 800dfae:	f841 6c04 	str.w	r6, [r1, #-4]
 800dfb2:	dd0c      	ble.n	800dfce <_Alloc+0xe6>
 800dfb4:	1bb8      	subs	r0, r7, r6
 800dfb6:	f7ff fd1f 	bl	800d9f8 <_AddFreeMemory>
 800dfba:	e008      	b.n	800dfce <_Alloc+0xe6>
 800dfbc:	4630      	mov	r0, r6
 800dfbe:	f7ff fd61 	bl	800da84 <_RemoveHoles>
 800dfc2:	2800      	cmp	r0, #0
 800dfc4:	d0c0      	beq.n	800df48 <_Alloc+0x60>
 800dfc6:	4628      	mov	r0, r5
 800dfc8:	f7ff fcca 	bl	800d960 <_PushFreeBlock>
 800dfcc:	2500      	movs	r5, #0
 800dfce:	4628      	mov	r0, r5
 800dfd0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800dfd4:	2000e68c 	.word	0x2000e68c

0800dfd8 <GUI_ALLOC_AllocNoInit>:
 800dfd8:	b108      	cbz	r0, 800dfde <GUI_ALLOC_AllocNoInit+0x6>
 800dfda:	f7ff bf85 	b.w	800dee8 <_Alloc>
 800dfde:	4770      	bx	lr

0800dfe0 <GUI_ALLOC_FreePtr>:
 800dfe0:	b510      	push	{r4, lr}
 800dfe2:	4604      	mov	r4, r0
 800dfe4:	6800      	ldr	r0, [r0, #0]
 800dfe6:	f7ff fde3 	bl	800dbb0 <GUI_ALLOC_Free>
 800dfea:	2300      	movs	r3, #0
 800dfec:	6023      	str	r3, [r4, #0]
 800dfee:	bd10      	pop	{r4, pc}

0800dff0 <GUI_ALLOC_FreePtrArray>:
 800dff0:	b570      	push	{r4, r5, r6, lr}
 800dff2:	4605      	mov	r5, r0
 800dff4:	460e      	mov	r6, r1
 800dff6:	2400      	movs	r4, #0
 800dff8:	42b4      	cmp	r4, r6
 800dffa:	da05      	bge.n	800e008 <GUI_ALLOC_FreePtrArray+0x18>
 800dffc:	eb05 0084 	add.w	r0, r5, r4, lsl #2
 800e000:	f7ff ffee 	bl	800dfe0 <GUI_ALLOC_FreePtr>
 800e004:	3401      	adds	r4, #1
 800e006:	e7f7      	b.n	800dff8 <GUI_ALLOC_FreePtrArray+0x8>
 800e008:	bd70      	pop	{r4, r5, r6, pc}

0800e00a <GUI_AddDecMin>:
 800e00a:	b570      	push	{r4, r5, r6, lr}
 800e00c:	460c      	mov	r4, r1
 800e00e:	4605      	mov	r5, r0
 800e010:	f003 ff26 	bl	8011e60 <GUI_Long2Len>
 800e014:	2200      	movs	r2, #0
 800e016:	b2c1      	uxtb	r1, r0
 800e018:	4623      	mov	r3, r4
 800e01a:	4628      	mov	r0, r5
 800e01c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e020:	f003 bf36 	b.w	8011e90 <GUI_AddDecShift>

0800e024 <GUI_ALLOC_AllocZero>:
 800e024:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e026:	4605      	mov	r5, r0
 800e028:	f7ff ffd6 	bl	800dfd8 <GUI_ALLOC_AllocNoInit>
 800e02c:	4606      	mov	r6, r0
 800e02e:	b158      	cbz	r0, 800e048 <GUI_ALLOC_AllocZero+0x24>
 800e030:	f7ff fd84 	bl	800db3c <GUI_ALLOC_LockH>
 800e034:	ac02      	add	r4, sp, #8
 800e036:	2100      	movs	r1, #0
 800e038:	f844 0d04 	str.w	r0, [r4, #-4]!
 800e03c:	462a      	mov	r2, r5
 800e03e:	f7fd fc2b 	bl	800b898 <GUI__memset>
 800e042:	4620      	mov	r0, r4
 800e044:	f7ff fd88 	bl	800db58 <GUI_ALLOC_UnlockH>
 800e048:	4630      	mov	r0, r6
 800e04a:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

0800e04c <GUI_ALLOC_AllocInit>:
 800e04c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e04e:	4605      	mov	r5, r0
 800e050:	460c      	mov	r4, r1
 800e052:	b909      	cbnz	r1, 800e058 <GUI_ALLOC_AllocInit+0xc>
 800e054:	2600      	movs	r6, #0
 800e056:	e013      	b.n	800e080 <GUI_ALLOC_AllocInit+0x34>
 800e058:	4608      	mov	r0, r1
 800e05a:	f7ff ffbd 	bl	800dfd8 <GUI_ALLOC_AllocNoInit>
 800e05e:	4606      	mov	r6, r0
 800e060:	2800      	cmp	r0, #0
 800e062:	d0f7      	beq.n	800e054 <GUI_ALLOC_AllocInit+0x8>
 800e064:	f7ff fd6a 	bl	800db3c <GUI_ALLOC_LockH>
 800e068:	4629      	mov	r1, r5
 800e06a:	9001      	str	r0, [sp, #4]
 800e06c:	4622      	mov	r2, r4
 800e06e:	b115      	cbz	r5, 800e076 <GUI_ALLOC_AllocInit+0x2a>
 800e070:	f7f2 f88a 	bl	8000188 <memcpy>
 800e074:	e001      	b.n	800e07a <GUI_ALLOC_AllocInit+0x2e>
 800e076:	f7fd fc0f 	bl	800b898 <GUI__memset>
 800e07a:	a801      	add	r0, sp, #4
 800e07c:	f7ff fd6c 	bl	800db58 <GUI_ALLOC_UnlockH>
 800e080:	4630      	mov	r0, r6
 800e082:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

0800e084 <GUI_DrawRect>:
 800e084:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800e088:	4c1d      	ldr	r4, [pc, #116]	; (800e100 <GUI_DrawRect+0x7c>)
 800e08a:	f8d4 e000 	ldr.w	lr, [r4]
 800e08e:	f8de 404c 	ldr.w	r4, [lr, #76]	; 0x4c
 800e092:	f8de 6050 	ldr.w	r6, [lr, #80]	; 0x50
 800e096:	1905      	adds	r5, r0, r4
 800e098:	1914      	adds	r4, r2, r4
 800e09a:	f89e 2018 	ldrb.w	r2, [lr, #24]
 800e09e:	1e50      	subs	r0, r2, #1
 800e0a0:	198f      	adds	r7, r1, r6
 800e0a2:	b281      	uxth	r1, r0
 800e0a4:	1a78      	subs	r0, r7, r1
 800e0a6:	199e      	adds	r6, r3, r6
 800e0a8:	190a      	adds	r2, r1, r4
 800e0aa:	1a6b      	subs	r3, r5, r1
 800e0ac:	f8ad 0002 	strh.w	r0, [sp, #2]
 800e0b0:	1989      	adds	r1, r1, r6
 800e0b2:	4668      	mov	r0, sp
 800e0b4:	f8ad 3000 	strh.w	r3, [sp]
 800e0b8:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e0bc:	f8ad 1006 	strh.w	r1, [sp, #6]
 800e0c0:	f7fa fbe2 	bl	8008888 <WM__InitIVRSearch>
 800e0c4:	b1d0      	cbz	r0, 800e0fc <GUI_DrawRect+0x78>
 800e0c6:	4628      	mov	r0, r5
 800e0c8:	4639      	mov	r1, r7
 800e0ca:	4622      	mov	r2, r4
 800e0cc:	f7fd f88a 	bl	800b1e4 <LCD_DrawHLine>
 800e0d0:	f107 0901 	add.w	r9, r7, #1
 800e0d4:	4628      	mov	r0, r5
 800e0d6:	4631      	mov	r1, r6
 800e0d8:	4622      	mov	r2, r4
 800e0da:	f106 38ff 	add.w	r8, r6, #4294967295
 800e0de:	f7fd f881 	bl	800b1e4 <LCD_DrawHLine>
 800e0e2:	4628      	mov	r0, r5
 800e0e4:	4649      	mov	r1, r9
 800e0e6:	4642      	mov	r2, r8
 800e0e8:	f7fd f8a2 	bl	800b230 <LCD_DrawVLine>
 800e0ec:	4620      	mov	r0, r4
 800e0ee:	4649      	mov	r1, r9
 800e0f0:	4642      	mov	r2, r8
 800e0f2:	f7fd f89d 	bl	800b230 <LCD_DrawVLine>
 800e0f6:	f7fa fb07 	bl	8008708 <WM__GetNextIVR>
 800e0fa:	e7e3      	b.n	800e0c4 <GUI_DrawRect+0x40>
 800e0fc:	e8bd 83fe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
 800e100:	20000278 	.word	0x20000278

0800e104 <LCD_Index2Color_888>:
 800e104:	4770      	bx	lr

0800e106 <LCD_Index2Color_8888>:
 800e106:	4770      	bx	lr

0800e108 <_Color2Index_8888>:
 800e108:	4770      	bx	lr

0800e10a <_GetIndexMask_8888>:
 800e10a:	f04f 30ff 	mov.w	r0, #4294967295
 800e10e:	4770      	bx	lr

0800e110 <_Color2IndexBulk>:
 800e110:	b510      	push	{r4, lr}
 800e112:	f850 4b04 	ldr.w	r4, [r0], #4
 800e116:	3a01      	subs	r2, #1
 800e118:	600c      	str	r4, [r1, #0]
 800e11a:	4419      	add	r1, r3
 800e11c:	d1f9      	bne.n	800e112 <_Color2IndexBulk+0x2>
 800e11e:	bd10      	pop	{r4, pc}

0800e120 <_Index2ColorBulk>:
 800e120:	b510      	push	{r4, lr}
 800e122:	6804      	ldr	r4, [r0, #0]
 800e124:	3a01      	subs	r2, #1
 800e126:	f841 4b04 	str.w	r4, [r1], #4
 800e12a:	4418      	add	r0, r3
 800e12c:	d1f9      	bne.n	800e122 <_Index2ColorBulk+0x2>
 800e12e:	bd10      	pop	{r4, pc}

0800e130 <LCD_Index2Color_565>:
 800e130:	f3c0 1345 	ubfx	r3, r0, #5, #6
 800e134:	4a06      	ldr	r2, [pc, #24]	; (800e150 <LCD_Index2Color_565+0x20>)
 800e136:	5cd1      	ldrb	r1, [r2, r3]
 800e138:	4b06      	ldr	r3, [pc, #24]	; (800e154 <LCD_Index2Color_565+0x24>)
 800e13a:	f3c0 22c4 	ubfx	r2, r0, #11, #5
 800e13e:	f000 001f 	and.w	r0, r0, #31
 800e142:	5c9a      	ldrb	r2, [r3, r2]
 800e144:	5c1b      	ldrb	r3, [r3, r0]
 800e146:	0412      	lsls	r2, r2, #16
 800e148:	eb02 2101 	add.w	r1, r2, r1, lsl #8
 800e14c:	18c8      	adds	r0, r1, r3
 800e14e:	4770      	bx	lr
 800e150:	0802d3f0 	.word	0x0802d3f0
 800e154:	0802d430 	.word	0x0802d430

0800e158 <_Color2Index_565>:
 800e158:	f3c0 2307 	ubfx	r3, r0, #8, #8
 800e15c:	4a06      	ldr	r2, [pc, #24]	; (800e178 <_Color2Index_565+0x20>)
 800e15e:	5cd1      	ldrb	r1, [r2, r3]
 800e160:	4b06      	ldr	r3, [pc, #24]	; (800e17c <_Color2Index_565+0x24>)
 800e162:	f3c0 4207 	ubfx	r2, r0, #16, #8
 800e166:	b2c0      	uxtb	r0, r0
 800e168:	5c9a      	ldrb	r2, [r3, r2]
 800e16a:	5c1b      	ldrb	r3, [r3, r0]
 800e16c:	02d2      	lsls	r2, r2, #11
 800e16e:	eb02 1141 	add.w	r1, r2, r1, lsl #5
 800e172:	18c8      	adds	r0, r1, r3
 800e174:	4770      	bx	lr
 800e176:	bf00      	nop
 800e178:	0802d450 	.word	0x0802d450
 800e17c:	0802d550 	.word	0x0802d550

0800e180 <_GetIndexMask_565>:
 800e180:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800e184:	4770      	bx	lr
	...

0800e188 <_Color2IndexBulk>:
 800e188:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e18a:	f850 4b04 	ldr.w	r4, [r0], #4
 800e18e:	4e09      	ldr	r6, [pc, #36]	; (800e1b4 <_Color2IndexBulk+0x2c>)
 800e190:	f3c4 2507 	ubfx	r5, r4, #8, #8
 800e194:	5d77      	ldrb	r7, [r6, r5]
 800e196:	4d08      	ldr	r5, [pc, #32]	; (800e1b8 <_Color2IndexBulk+0x30>)
 800e198:	f3c4 4607 	ubfx	r6, r4, #16, #8
 800e19c:	b2e4      	uxtb	r4, r4
 800e19e:	5dae      	ldrb	r6, [r5, r6]
 800e1a0:	5d2d      	ldrb	r5, [r5, r4]
 800e1a2:	02f6      	lsls	r6, r6, #11
 800e1a4:	eb06 1647 	add.w	r6, r6, r7, lsl #5
 800e1a8:	1974      	adds	r4, r6, r5
 800e1aa:	3a01      	subs	r2, #1
 800e1ac:	800c      	strh	r4, [r1, #0]
 800e1ae:	4419      	add	r1, r3
 800e1b0:	d1eb      	bne.n	800e18a <_Color2IndexBulk+0x2>
 800e1b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e1b4:	0802d450 	.word	0x0802d450
 800e1b8:	0802d550 	.word	0x0802d550

0800e1bc <_Index2ColorBulk>:
 800e1bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e1be:	1e54      	subs	r4, r2, #1
 800e1c0:	fb04 0003 	mla	r0, r4, r3, r0
 800e1c4:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800e1c8:	8804      	ldrh	r4, [r0, #0]
 800e1ca:	4e0a      	ldr	r6, [pc, #40]	; (800e1f4 <_Index2ColorBulk+0x38>)
 800e1cc:	f3c4 1545 	ubfx	r5, r4, #5, #6
 800e1d0:	1ac0      	subs	r0, r0, r3
 800e1d2:	5d77      	ldrb	r7, [r6, r5]
 800e1d4:	4d08      	ldr	r5, [pc, #32]	; (800e1f8 <_Index2ColorBulk+0x3c>)
 800e1d6:	0ae6      	lsrs	r6, r4, #11
 800e1d8:	f004 041f 	and.w	r4, r4, #31
 800e1dc:	5dae      	ldrb	r6, [r5, r6]
 800e1de:	5d2d      	ldrb	r5, [r5, r4]
 800e1e0:	0436      	lsls	r6, r6, #16
 800e1e2:	eb06 2607 	add.w	r6, r6, r7, lsl #8
 800e1e6:	1974      	adds	r4, r6, r5
 800e1e8:	3a01      	subs	r2, #1
 800e1ea:	f841 4904 	str.w	r4, [r1], #-4
 800e1ee:	d1eb      	bne.n	800e1c8 <_Index2ColorBulk+0xc>
 800e1f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e1f2:	bf00      	nop
 800e1f4:	0802d3f0 	.word	0x0802d3f0
 800e1f8:	0802d430 	.word	0x0802d430

0800e1fc <WIDGET_SetEffect>:
 800e1fc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e1fe:	2300      	movs	r3, #0
 800e200:	f44f 7240 	mov.w	r2, #768	; 0x300
 800e204:	9103      	str	r1, [sp, #12]
 800e206:	4669      	mov	r1, sp
 800e208:	9302      	str	r3, [sp, #8]
 800e20a:	9200      	str	r2, [sp, #0]
 800e20c:	f7fa f8a6 	bl	800835c <WM_SendMessage>
 800e210:	b005      	add	sp, #20
 800e212:	bd00      	pop	{pc}

0800e214 <_DrawDown>:
 800e214:	4770      	bx	lr

0800e216 <_DrawUp>:
 800e216:	4770      	bx	lr

0800e218 <_DrawDownRect>:
 800e218:	4770      	bx	lr

0800e21a <_DrawUpRect>:
 800e21a:	4770      	bx	lr

0800e21c <_DrawFlat>:
 800e21c:	4770      	bx	lr

0800e21e <_EffectRequiresRedraw>:
 800e21e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e220:	460d      	mov	r5, r1
 800e222:	f100 0108 	add.w	r1, r0, #8
 800e226:	4602      	mov	r2, r0
 800e228:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800e22a:	c903      	ldmia	r1, {r0, r1}
 800e22c:	681c      	ldr	r4, [r3, #0]
 800e22e:	e88d 0003 	stmia.w	sp, {r0, r1}
 800e232:	4610      	mov	r0, r2
 800e234:	4669      	mov	r1, sp
 800e236:	f001 f809 	bl	800f24c <WM__Screen2Client>
 800e23a:	f9b5 0000 	ldrsh.w	r0, [r5]
 800e23e:	f9bd 3000 	ldrsh.w	r3, [sp]
 800e242:	1902      	adds	r2, r0, r4
 800e244:	429a      	cmp	r2, r3
 800e246:	dc17      	bgt.n	800e278 <_EffectRequiresRedraw+0x5a>
 800e248:	f9b5 1004 	ldrsh.w	r1, [r5, #4]
 800e24c:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 800e250:	1b08      	subs	r0, r1, r4
 800e252:	4290      	cmp	r0, r2
 800e254:	db10      	blt.n	800e278 <_EffectRequiresRedraw+0x5a>
 800e256:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800e25a:	f9bd 0002 	ldrsh.w	r0, [sp, #2]
 800e25e:	1919      	adds	r1, r3, r4
 800e260:	4281      	cmp	r1, r0
 800e262:	dc09      	bgt.n	800e278 <_EffectRequiresRedraw+0x5a>
 800e264:	f9b5 0006 	ldrsh.w	r0, [r5, #6]
 800e268:	f9bd 2006 	ldrsh.w	r2, [sp, #6]
 800e26c:	1b04      	subs	r4, r0, r4
 800e26e:	4294      	cmp	r4, r2
 800e270:	bfac      	ite	ge
 800e272:	2000      	movge	r0, #0
 800e274:	2001      	movlt	r0, #1
 800e276:	e000      	b.n	800e27a <_EffectRequiresRedraw+0x5c>
 800e278:	2001      	movs	r0, #1
 800e27a:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800e27c <WIDGET__RotateRect90>:
 800e27c:	b570      	push	{r4, r5, r6, lr}
 800e27e:	f9b0 3000 	ldrsh.w	r3, [r0]
 800e282:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 800e286:	8815      	ldrh	r5, [r2, #0]
 800e288:	8894      	ldrh	r4, [r2, #4]
 800e28a:	1af0      	subs	r0, r6, r3
 800e28c:	b283      	uxth	r3, r0
 800e28e:	88d0      	ldrh	r0, [r2, #6]
 800e290:	8852      	ldrh	r2, [r2, #2]
 800e292:	80cc      	strh	r4, [r1, #6]
 800e294:	1a18      	subs	r0, r3, r0
 800e296:	1a9b      	subs	r3, r3, r2
 800e298:	8008      	strh	r0, [r1, #0]
 800e29a:	808b      	strh	r3, [r1, #4]
 800e29c:	804d      	strh	r5, [r1, #2]
 800e29e:	bd70      	pop	{r4, r5, r6, pc}

0800e2a0 <WIDGET__GetClientRect>:
 800e2a0:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800e2a2:	b513      	push	{r0, r1, r4, lr}
 800e2a4:	f003 0008 	and.w	r0, r3, #8
 800e2a8:	460c      	mov	r4, r1
 800e2aa:	b281      	uxth	r1, r0
 800e2ac:	b179      	cbz	r1, 800e2ce <WIDGET__GetClientRect+0x2e>
 800e2ae:	4668      	mov	r0, sp
 800e2b0:	f7f9 fbba 	bl	8007a28 <WM_GetClientRect>
 800e2b4:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800e2b8:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800e2bc:	f8bd 0000 	ldrh.w	r0, [sp]
 800e2c0:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 800e2c4:	8022      	strh	r2, [r4, #0]
 800e2c6:	80a3      	strh	r3, [r4, #4]
 800e2c8:	8060      	strh	r0, [r4, #2]
 800e2ca:	80e1      	strh	r1, [r4, #6]
 800e2cc:	e002      	b.n	800e2d4 <WIDGET__GetClientRect+0x34>
 800e2ce:	4620      	mov	r0, r4
 800e2d0:	f7f9 fbaa 	bl	8007a28 <WM_GetClientRect>
 800e2d4:	bd1c      	pop	{r2, r3, r4, pc}

0800e2d6 <WIDGET__GetBkColor>:
 800e2d6:	b508      	push	{r3, lr}
 800e2d8:	f7f9 fb25 	bl	8007926 <WM_GetParent>
 800e2dc:	f7f9 fbb2 	bl	8007a44 <WM_GetBkColor>
 800e2e0:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 800e2e4:	4298      	cmp	r0, r3
 800e2e6:	d103      	bne.n	800e2f0 <WIDGET__GetBkColor+0x1a>
 800e2e8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800e2ec:	f7f8 ba20 	b.w	8006730 <DIALOG_GetBkColor>
 800e2f0:	bd08      	pop	{r3, pc}

0800e2f2 <WIDGET__GetInsideRect>:
 800e2f2:	b538      	push	{r3, r4, r5, lr}
 800e2f4:	4604      	mov	r4, r0
 800e2f6:	460d      	mov	r5, r1
 800e2f8:	f7fa f83e 	bl	8008378 <WM__GetClientRectWin>
 800e2fc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e2fe:	681a      	ldr	r2, [r3, #0]
 800e300:	4628      	mov	r0, r5
 800e302:	4629      	mov	r1, r5
 800e304:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e308:	f7fd bb2a 	b.w	800b960 <GUI__ReduceRect>

0800e30c <WIDGET__GetWindowSizeX>:
 800e30c:	b513      	push	{r0, r1, r4, lr}
 800e30e:	4604      	mov	r4, r0
 800e310:	f7ff fc14 	bl	800db3c <GUI_ALLOC_LockH>
 800e314:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800e316:	9001      	str	r0, [sp, #4]
 800e318:	f003 0008 	and.w	r0, r3, #8
 800e31c:	b281      	uxth	r1, r0
 800e31e:	4620      	mov	r0, r4
 800e320:	b111      	cbz	r1, 800e328 <WIDGET__GetWindowSizeX+0x1c>
 800e322:	f7f9 fae1 	bl	80078e8 <WM_GetWindowSizeY>
 800e326:	e001      	b.n	800e32c <WIDGET__GetWindowSizeX+0x20>
 800e328:	f7f9 faca 	bl	80078c0 <WM_GetWindowSizeX>
 800e32c:	4604      	mov	r4, r0
 800e32e:	a801      	add	r0, sp, #4
 800e330:	f7ff fc12 	bl	800db58 <GUI_ALLOC_UnlockH>
 800e334:	4620      	mov	r0, r4
 800e336:	bd1c      	pop	{r2, r3, r4, pc}

0800e338 <WIDGET_SetState>:
 800e338:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e33a:	460c      	mov	r4, r1
 800e33c:	4605      	mov	r5, r0
 800e33e:	f7ff fbfd 	bl	800db3c <GUI_ALLOC_LockH>
 800e342:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800e344:	9001      	str	r0, [sp, #4]
 800e346:	4294      	cmp	r4, r2
 800e348:	d003      	beq.n	800e352 <WIDGET_SetState+0x1a>
 800e34a:	8644      	strh	r4, [r0, #50]	; 0x32
 800e34c:	4628      	mov	r0, r5
 800e34e:	f7fa f85b 	bl	8008408 <WM_InvalidateWindow>
 800e352:	a801      	add	r0, sp, #4
 800e354:	f7ff fc00 	bl	800db58 <GUI_ALLOC_UnlockH>
 800e358:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800e35a <WIDGET_OrState>:
 800e35a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e35c:	460c      	mov	r4, r1
 800e35e:	4605      	mov	r5, r0
 800e360:	b178      	cbz	r0, 800e382 <WIDGET_OrState+0x28>
 800e362:	f7ff fbeb 	bl	800db3c <GUI_ALLOC_LockH>
 800e366:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800e368:	9001      	str	r0, [sp, #4]
 800e36a:	ea04 0102 	and.w	r1, r4, r2
 800e36e:	428c      	cmp	r4, r1
 800e370:	d004      	beq.n	800e37c <WIDGET_OrState+0x22>
 800e372:	4314      	orrs	r4, r2
 800e374:	8644      	strh	r4, [r0, #50]	; 0x32
 800e376:	4628      	mov	r0, r5
 800e378:	f7fa f846 	bl	8008408 <WM_InvalidateWindow>
 800e37c:	a801      	add	r0, sp, #4
 800e37e:	f7ff fbeb 	bl	800db58 <GUI_ALLOC_UnlockH>
 800e382:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800e384 <WIDGET_AndState>:
 800e384:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e386:	460d      	mov	r5, r1
 800e388:	4604      	mov	r4, r0
 800e38a:	b170      	cbz	r0, 800e3aa <WIDGET_AndState+0x26>
 800e38c:	f7ff fbd6 	bl	800db3c <GUI_ALLOC_LockH>
 800e390:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800e392:	9001      	str	r0, [sp, #4]
 800e394:	ea22 0105 	bic.w	r1, r2, r5
 800e398:	428a      	cmp	r2, r1
 800e39a:	d003      	beq.n	800e3a4 <WIDGET_AndState+0x20>
 800e39c:	8641      	strh	r1, [r0, #50]	; 0x32
 800e39e:	4620      	mov	r0, r4
 800e3a0:	f7fa f832 	bl	8008408 <WM_InvalidateWindow>
 800e3a4:	a801      	add	r0, sp, #4
 800e3a6:	f7ff fbd7 	bl	800db58 <GUI_ALLOC_UnlockH>
 800e3aa:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800e3ac <WIDGET__Init>:
 800e3ac:	4b02      	ldr	r3, [pc, #8]	; (800e3b8 <WIDGET__Init+0xc>)
 800e3ae:	8642      	strh	r2, [r0, #50]	; 0x32
 800e3b0:	681b      	ldr	r3, [r3, #0]
 800e3b2:	8601      	strh	r1, [r0, #48]	; 0x30
 800e3b4:	62c3      	str	r3, [r0, #44]	; 0x2c
 800e3b6:	4770      	bx	lr
 800e3b8:	20000288 	.word	0x20000288

0800e3bc <WIDGET_HandleActive>:
 800e3bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e3be:	460d      	mov	r5, r1
 800e3c0:	b085      	sub	sp, #20
 800e3c2:	4606      	mov	r6, r0
 800e3c4:	2800      	cmp	r0, #0
 800e3c6:	f000 8093 	beq.w	800e4f0 <WIDGET_HandleActive+0x134>
 800e3ca:	f7ff fbb7 	bl	800db3c <GUI_ALLOC_LockH>
 800e3ce:	682b      	ldr	r3, [r5, #0]
 800e3d0:	9002      	str	r0, [sp, #8]
 800e3d2:	2b15      	cmp	r3, #21
 800e3d4:	4602      	mov	r2, r0
 800e3d6:	d030      	beq.n	800e43a <WIDGET_HandleActive+0x7e>
 800e3d8:	dc06      	bgt.n	800e3e8 <WIDGET_HandleActive+0x2c>
 800e3da:	2b11      	cmp	r3, #17
 800e3dc:	d030      	beq.n	800e440 <WIDGET_HandleActive+0x84>
 800e3de:	2b14      	cmp	r3, #20
 800e3e0:	d07a      	beq.n	800e4d8 <WIDGET_HandleActive+0x11c>
 800e3e2:	2b0d      	cmp	r3, #13
 800e3e4:	d17d      	bne.n	800e4e2 <WIDGET_HandleActive+0x126>
 800e3e6:	e03c      	b.n	800e462 <WIDGET_HandleActive+0xa6>
 800e3e8:	2b1e      	cmp	r3, #30
 800e3ea:	d048      	beq.n	800e47e <WIDGET_HandleActive+0xc2>
 800e3ec:	dc04      	bgt.n	800e3f8 <WIDGET_HandleActive+0x3c>
 800e3ee:	2b16      	cmp	r3, #22
 800e3f0:	d177      	bne.n	800e4e2 <WIDGET_HandleActive+0x126>
 800e3f2:	68eb      	ldr	r3, [r5, #12]
 800e3f4:	8603      	strh	r3, [r0, #48]	; 0x30
 800e3f6:	e072      	b.n	800e4de <WIDGET_HandleActive+0x122>
 800e3f8:	2b1f      	cmp	r3, #31
 800e3fa:	d068      	beq.n	800e4ce <WIDGET_HandleActive+0x112>
 800e3fc:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800e400:	d16f      	bne.n	800e4e2 <WIDGET_HandleActive+0x126>
 800e402:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800e404:	68ed      	ldr	r5, [r5, #12]
 800e406:	6801      	ldr	r1, [r0, #0]
 800e408:	62d5      	str	r5, [r2, #44]	; 0x2c
 800e40a:	682a      	ldr	r2, [r5, #0]
 800e40c:	a802      	add	r0, sp, #8
 800e40e:	1a8d      	subs	r5, r1, r2
 800e410:	f7ff fba2 	bl	800db58 <GUI_ALLOC_UnlockH>
 800e414:	4630      	mov	r0, r6
 800e416:	f7ff fb91 	bl	800db3c <GUI_ALLOC_LockH>
 800e41a:	ac04      	add	r4, sp, #16
 800e41c:	4269      	negs	r1, r5
 800e41e:	f844 0d04 	str.w	r0, [r4, #-4]!
 800e422:	460a      	mov	r2, r1
 800e424:	462b      	mov	r3, r5
 800e426:	9500      	str	r5, [sp, #0]
 800e428:	f000 fe7a 	bl	800f120 <WM__UpdateChildPositions>
 800e42c:	4620      	mov	r0, r4
 800e42e:	f7ff fb93 	bl	800db58 <GUI_ALLOC_UnlockH>
 800e432:	4630      	mov	r0, r6
 800e434:	f7f9 ffe8 	bl	8008408 <WM_InvalidateWindow>
 800e438:	e051      	b.n	800e4de <WIDGET_HandleActive+0x122>
 800e43a:	f9b0 0030 	ldrsh.w	r0, [r0, #48]	; 0x30
 800e43e:	e049      	b.n	800e4d4 <WIDGET_HandleActive+0x118>
 800e440:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800e442:	f002 0310 	and.w	r3, r2, #16
 800e446:	b298      	uxth	r0, r3
 800e448:	2800      	cmp	r0, #0
 800e44a:	d04a      	beq.n	800e4e2 <WIDGET_HandleActive+0x126>
 800e44c:	68e9      	ldr	r1, [r5, #12]
 800e44e:	7a0c      	ldrb	r4, [r1, #8]
 800e450:	2c00      	cmp	r4, #0
 800e452:	d046      	beq.n	800e4e2 <WIDGET_HandleActive+0x126>
 800e454:	a802      	add	r0, sp, #8
 800e456:	f7ff fb7f 	bl	800db58 <GUI_ALLOC_UnlockH>
 800e45a:	4630      	mov	r0, r6
 800e45c:	f7f8 ff96 	bl	800738c <WM_SetFocus>
 800e460:	e03f      	b.n	800e4e2 <WIDGET_HandleActive+0x126>
 800e462:	68e8      	ldr	r0, [r5, #12]
 800e464:	68c1      	ldr	r1, [r0, #12]
 800e466:	2900      	cmp	r1, #0
 800e468:	d03b      	beq.n	800e4e2 <WIDGET_HandleActive+0x126>
 800e46a:	7a0c      	ldrb	r4, [r1, #8]
 800e46c:	2c00      	cmp	r4, #0
 800e46e:	d038      	beq.n	800e4e2 <WIDGET_HandleActive+0x126>
 800e470:	a802      	add	r0, sp, #8
 800e472:	f7ff fb71 	bl	800db58 <GUI_ALLOC_UnlockH>
 800e476:	4630      	mov	r0, r6
 800e478:	f7f9 faf6 	bl	8007a68 <WM_BringToTop>
 800e47c:	e02f      	b.n	800e4de <WIDGET_HandleActive+0x122>
 800e47e:	68ef      	ldr	r7, [r5, #12]
 800e480:	8e41      	ldrh	r1, [r0, #50]	; 0x32
 800e482:	2f01      	cmp	r7, #1
 800e484:	d10a      	bne.n	800e49c <WIDGET_HandleActive+0xe0>
 800e486:	f001 0210 	and.w	r2, r1, #16
 800e48a:	b294      	uxth	r4, r2
 800e48c:	b16c      	cbz	r4, 800e4aa <WIDGET_HandleActive+0xee>
 800e48e:	4630      	mov	r0, r6
 800e490:	f041 0101 	orr.w	r1, r1, #1
 800e494:	f7ff ff50 	bl	800e338 <WIDGET_SetState>
 800e498:	2708      	movs	r7, #8
 800e49a:	e008      	b.n	800e4ae <WIDGET_HandleActive+0xf2>
 800e49c:	f021 0101 	bic.w	r1, r1, #1
 800e4a0:	4630      	mov	r0, r6
 800e4a2:	f7ff ff49 	bl	800e338 <WIDGET_SetState>
 800e4a6:	2709      	movs	r7, #9
 800e4a8:	e001      	b.n	800e4ae <WIDGET_HandleActive+0xf2>
 800e4aa:	f04f 37ff 	mov.w	r7, #4294967295
 800e4ae:	a802      	add	r0, sp, #8
 800e4b0:	f7ff fb52 	bl	800db58 <GUI_ALLOC_UnlockH>
 800e4b4:	1c7b      	adds	r3, r7, #1
 800e4b6:	f04f 0400 	mov.w	r4, #0
 800e4ba:	d005      	beq.n	800e4c8 <WIDGET_HandleActive+0x10c>
 800e4bc:	4630      	mov	r0, r6
 800e4be:	4639      	mov	r1, r7
 800e4c0:	f7f9 f8e5 	bl	800768e <WM_NotifyParent>
 800e4c4:	60ec      	str	r4, [r5, #12]
 800e4c6:	e00d      	b.n	800e4e4 <WIDGET_HandleActive+0x128>
 800e4c8:	2301      	movs	r3, #1
 800e4ca:	60eb      	str	r3, [r5, #12]
 800e4cc:	e00a      	b.n	800e4e4 <WIDGET_HandleActive+0x128>
 800e4ce:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800e4d0:	f3c3 1000 	ubfx	r0, r3, #4, #1
 800e4d4:	60e8      	str	r0, [r5, #12]
 800e4d6:	e002      	b.n	800e4de <WIDGET_HandleActive+0x122>
 800e4d8:	68e9      	ldr	r1, [r5, #12]
 800e4da:	f7ff ff0a 	bl	800e2f2 <WIDGET__GetInsideRect>
 800e4de:	2400      	movs	r4, #0
 800e4e0:	e000      	b.n	800e4e4 <WIDGET_HandleActive+0x128>
 800e4e2:	2401      	movs	r4, #1
 800e4e4:	9802      	ldr	r0, [sp, #8]
 800e4e6:	b120      	cbz	r0, 800e4f2 <WIDGET_HandleActive+0x136>
 800e4e8:	a802      	add	r0, sp, #8
 800e4ea:	f7ff fb35 	bl	800db58 <GUI_ALLOC_UnlockH>
 800e4ee:	e000      	b.n	800e4f2 <WIDGET_HandleActive+0x136>
 800e4f0:	2401      	movs	r4, #1
 800e4f2:	4620      	mov	r0, r4
 800e4f4:	b005      	add	sp, #20
 800e4f6:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e4f8 <WIDGET__DrawFocusRect>:
 800e4f8:	b513      	push	{r0, r1, r4, lr}
 800e4fa:	4614      	mov	r4, r2
 800e4fc:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 800e4fe:	460b      	mov	r3, r1
 800e500:	f002 0108 	and.w	r1, r2, #8
 800e504:	b28a      	uxth	r2, r1
 800e506:	b122      	cbz	r2, 800e512 <WIDGET__DrawFocusRect+0x1a>
 800e508:	461a      	mov	r2, r3
 800e50a:	4669      	mov	r1, sp
 800e50c:	f7ff feb6 	bl	800e27c <WIDGET__RotateRect90>
 800e510:	466b      	mov	r3, sp
 800e512:	4618      	mov	r0, r3
 800e514:	4621      	mov	r1, r4
 800e516:	f003 fc1b 	bl	8011d50 <GUI_DrawFocusRect>
 800e51a:	bd1c      	pop	{r2, r3, r4, pc}

0800e51c <WIDGET__DrawVLine>:
 800e51c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e51e:	8e44      	ldrh	r4, [r0, #50]	; 0x32
 800e520:	f004 0408 	and.w	r4, r4, #8
 800e524:	b2a4      	uxth	r4, r4
 800e526:	b1ac      	cbz	r4, 800e554 <WIDGET__DrawVLine+0x38>
 800e528:	b289      	uxth	r1, r1
 800e52a:	f8ad 1000 	strh.w	r1, [sp]
 800e52e:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e532:	f8ad 2002 	strh.w	r2, [sp, #2]
 800e536:	a902      	add	r1, sp, #8
 800e538:	466a      	mov	r2, sp
 800e53a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e53e:	f7ff fe9d 	bl	800e27c <WIDGET__RotateRect90>
 800e542:	f9bd 000a 	ldrsh.w	r0, [sp, #10]
 800e546:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 800e54a:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800e54e:	f7fe f979 	bl	800c844 <GUI_DrawHLine>
 800e552:	e004      	b.n	800e55e <WIDGET__DrawVLine+0x42>
 800e554:	4608      	mov	r0, r1
 800e556:	4611      	mov	r1, r2
 800e558:	461a      	mov	r2, r3
 800e55a:	f7fe f931 	bl	800c7c0 <GUI_DrawVLine>
 800e55e:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0800e560 <WIDGET__FillRectEx>:
 800e560:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800e562:	b507      	push	{r0, r1, r2, lr}
 800e564:	460a      	mov	r2, r1
 800e566:	f003 0108 	and.w	r1, r3, #8
 800e56a:	b28b      	uxth	r3, r1
 800e56c:	b11b      	cbz	r3, 800e576 <WIDGET__FillRectEx+0x16>
 800e56e:	4669      	mov	r1, sp
 800e570:	f7ff fe84 	bl	800e27c <WIDGET__RotateRect90>
 800e574:	466a      	mov	r2, sp
 800e576:	4610      	mov	r0, r2
 800e578:	f7fe f8d6 	bl	800c728 <GUI_FillRectEx>
 800e57c:	bd0e      	pop	{r1, r2, r3, pc}

0800e57e <WIDGET__EFFECT_DrawDownRect>:
 800e57e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e580:	4605      	mov	r5, r0
 800e582:	460c      	mov	r4, r1
 800e584:	b919      	cbnz	r1, 800e58e <WIDGET__EFFECT_DrawDownRect+0x10>
 800e586:	4668      	mov	r0, sp
 800e588:	f7f9 fa4e 	bl	8007a28 <WM_GetClientRect>
 800e58c:	466c      	mov	r4, sp
 800e58e:	8e6b      	ldrh	r3, [r5, #50]	; 0x32
 800e590:	f003 0008 	and.w	r0, r3, #8
 800e594:	b281      	uxth	r1, r0
 800e596:	b129      	cbz	r1, 800e5a4 <WIDGET__EFFECT_DrawDownRect+0x26>
 800e598:	4622      	mov	r2, r4
 800e59a:	4628      	mov	r0, r5
 800e59c:	4669      	mov	r1, sp
 800e59e:	f7ff fe6d 	bl	800e27c <WIDGET__RotateRect90>
 800e5a2:	466c      	mov	r4, sp
 800e5a4:	4628      	mov	r0, r5
 800e5a6:	4621      	mov	r1, r4
 800e5a8:	f7ff fe39 	bl	800e21e <_EffectRequiresRedraw>
 800e5ac:	b118      	cbz	r0, 800e5b6 <WIDGET__EFFECT_DrawDownRect+0x38>
 800e5ae:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 800e5b0:	4620      	mov	r0, r4
 800e5b2:	6913      	ldr	r3, [r2, #16]
 800e5b4:	4798      	blx	r3
 800e5b6:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800e5b8 <WIDGET__EFFECT_DrawUpRect>:
 800e5b8:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800e5ba:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e5bc:	460c      	mov	r4, r1
 800e5be:	f003 0108 	and.w	r1, r3, #8
 800e5c2:	b28a      	uxth	r2, r1
 800e5c4:	4605      	mov	r5, r0
 800e5c6:	b122      	cbz	r2, 800e5d2 <WIDGET__EFFECT_DrawUpRect+0x1a>
 800e5c8:	4622      	mov	r2, r4
 800e5ca:	4669      	mov	r1, sp
 800e5cc:	f7ff fe56 	bl	800e27c <WIDGET__RotateRect90>
 800e5d0:	466c      	mov	r4, sp
 800e5d2:	4628      	mov	r0, r5
 800e5d4:	4621      	mov	r1, r4
 800e5d6:	f7ff fe22 	bl	800e21e <_EffectRequiresRedraw>
 800e5da:	b118      	cbz	r0, 800e5e4 <WIDGET__EFFECT_DrawUpRect+0x2c>
 800e5dc:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e5de:	6883      	ldr	r3, [r0, #8]
 800e5e0:	4620      	mov	r0, r4
 800e5e2:	4798      	blx	r3
 800e5e4:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
	...

0800e5e8 <WIDGET_GetDefaultEffect>:
 800e5e8:	4b01      	ldr	r3, [pc, #4]	; (800e5f0 <WIDGET_GetDefaultEffect+0x8>)
 800e5ea:	6818      	ldr	r0, [r3, #0]
 800e5ec:	4770      	bx	lr
 800e5ee:	bf00      	nop
 800e5f0:	20000288 	.word	0x20000288

0800e5f4 <_Create>:
 800e5f4:	4770      	bx	lr

0800e5f6 <_Paint>:
 800e5f6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e5fa:	b08b      	sub	sp, #44	; 0x2c
 800e5fc:	4681      	mov	r9, r0
 800e5fe:	f7ff fa9d 	bl	800db3c <GUI_ALLOC_LockH>
 800e602:	ae02      	add	r6, sp, #8
 800e604:	a904      	add	r1, sp, #16
 800e606:	9001      	str	r0, [sp, #4]
 800e608:	f7ff fe4a 	bl	800e2a0 <WIDGET__GetClientRect>
 800e60c:	4630      	mov	r0, r6
 800e60e:	a904      	add	r1, sp, #16
 800e610:	2201      	movs	r2, #1
 800e612:	f7fd f9a5 	bl	800b960 <GUI__ReduceRect>
 800e616:	9b01      	ldr	r3, [sp, #4]
 800e618:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 800e61c:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800e620:	f9b3 1060 	ldrsh.w	r1, [r3, #96]	; 0x60
 800e624:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 800e626:	1aa8      	subs	r0, r5, r2
 800e628:	1c47      	adds	r7, r0, #1
 800e62a:	2002      	movs	r0, #2
 800e62c:	1a7d      	subs	r5, r7, r1
 800e62e:	fb91 f7f0 	sdiv	r7, r1, r0
 800e632:	19d7      	adds	r7, r2, r7
 800e634:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800e636:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800e638:	4648      	mov	r0, r9
 800e63a:	ebc3 0802 	rsb	r8, r3, r2
 800e63e:	f1b8 0f01 	cmp.w	r8, #1
 800e642:	bfb8      	it	lt
 800e644:	f04f 0801 	movlt.w	r8, #1
 800e648:	f7f8 fe02 	bl	8007250 <WM_GetHasTrans>
 800e64c:	b928      	cbnz	r0, 800e65a <_Paint+0x64>
 800e64e:	9901      	ldr	r1, [sp, #4]
 800e650:	6b88      	ldr	r0, [r1, #56]	; 0x38
 800e652:	f7fd f8db 	bl	800b80c <LCD_SetBkColor>
 800e656:	f7fe fe5f 	bl	800d318 <GUI_Clear>
 800e65a:	e896 0003 	ldmia.w	r6, {r0, r1}
 800e65e:	aa06      	add	r2, sp, #24
 800e660:	e882 0003 	stmia.w	r2, {r0, r1}
 800e664:	9801      	ldr	r0, [sp, #4]
 800e666:	f8ad 7020 	strh.w	r7, [sp, #32]
 800e66a:	f8b0 c060 	ldrh.w	ip, [r0, #96]	; 0x60
 800e66e:	6d82      	ldr	r2, [r0, #88]	; 0x58
 800e670:	f04f 0e02 	mov.w	lr, #2
 800e674:	fa0f f98c 	sxth.w	r9, ip
 800e678:	fb99 f1fe 	sdiv	r1, r9, lr
 800e67c:	b2bb      	uxth	r3, r7
 800e67e:	ebc1 0903 	rsb	r9, r1, r3
 800e682:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 800e684:	1a89      	subs	r1, r1, r2
 800e686:	4369      	muls	r1, r5
 800e688:	fbb1 f2f8 	udiv	r2, r1, r8
 800e68c:	eb09 0102 	add.w	r1, r9, r2
 800e690:	b28a      	uxth	r2, r1
 800e692:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800e696:	f8ad 2018 	strh.w	r2, [sp, #24]
 800e69a:	2605      	movs	r6, #5
 800e69c:	4494      	add	ip, r2
 800e69e:	195b      	adds	r3, r3, r5
 800e6a0:	198a      	adds	r2, r1, r6
 800e6a2:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800e6a6:	fb92 f3fe 	sdiv	r3, r2, lr
 800e6aa:	b299      	uxth	r1, r3
 800e6ac:	1e4a      	subs	r2, r1, #1
 800e6ae:	eb01 030e 	add.w	r3, r1, lr
 800e6b2:	a908      	add	r1, sp, #32
 800e6b4:	f8ad 601a 	strh.w	r6, [sp, #26]
 800e6b8:	f8ad c01c 	strh.w	ip, [sp, #28]
 800e6bc:	f8ad 2022 	strh.w	r2, [sp, #34]	; 0x22
 800e6c0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800e6c4:	f7ff ff5b 	bl	800e57e <WIDGET__EFFECT_DrawDownRect>
 800e6c8:	2c00      	cmp	r4, #0
 800e6ca:	da05      	bge.n	800e6d8 <_Paint+0xe2>
 800e6cc:	f108 0401 	add.w	r4, r8, #1
 800e6d0:	fb95 f6f6 	sdiv	r6, r5, r6
 800e6d4:	42b4      	cmp	r4, r6
 800e6d6:	dc13      	bgt.n	800e700 <_Paint+0x10a>
 800e6d8:	2c01      	cmp	r4, #1
 800e6da:	dc12      	bgt.n	800e702 <_Paint+0x10c>
 800e6dc:	9a01      	ldr	r2, [sp, #4]
 800e6de:	6bd0      	ldr	r0, [r2, #60]	; 0x3c
 800e6e0:	f7fd f89c 	bl	800b81c <LCD_SetColor>
 800e6e4:	9801      	ldr	r0, [sp, #4]
 800e6e6:	a906      	add	r1, sp, #24
 800e6e8:	f7ff ff3a 	bl	800e560 <WIDGET__FillRectEx>
 800e6ec:	9801      	ldr	r0, [sp, #4]
 800e6ee:	a906      	add	r1, sp, #24
 800e6f0:	f7ff ff62 	bl	800e5b8 <WIDGET__EFFECT_DrawUpRect>
 800e6f4:	9b01      	ldr	r3, [sp, #4]
 800e6f6:	f893 0034 	ldrb.w	r0, [r3, #52]	; 0x34
 800e6fa:	07c1      	lsls	r1, r0, #31
 800e6fc:	d416      	bmi.n	800e72c <_Paint+0x136>
 800e6fe:	e020      	b.n	800e742 <_Paint+0x14c>
 800e700:	240b      	movs	r4, #11
 800e702:	9e01      	ldr	r6, [sp, #4]
 800e704:	6c70      	ldr	r0, [r6, #68]	; 0x44
 800e706:	f7fd f889 	bl	800b81c <LCD_SetColor>
 800e70a:	2600      	movs	r6, #0
 800e70c:	46b0      	mov	r8, r6
 800e70e:	1e60      	subs	r0, r4, #1
 800e710:	fb96 f1f0 	sdiv	r1, r6, r0
 800e714:	2201      	movs	r2, #1
 800e716:	2303      	movs	r3, #3
 800e718:	9801      	ldr	r0, [sp, #4]
 800e71a:	1879      	adds	r1, r7, r1
 800e71c:	f108 0801 	add.w	r8, r8, #1
 800e720:	f7ff fefc 	bl	800e51c <WIDGET__DrawVLine>
 800e724:	45a0      	cmp	r8, r4
 800e726:	442e      	add	r6, r5
 800e728:	dbf1      	blt.n	800e70e <_Paint+0x118>
 800e72a:	e7d7      	b.n	800e6dc <_Paint+0xe6>
 800e72c:	8e59      	ldrh	r1, [r3, #50]	; 0x32
 800e72e:	07ca      	lsls	r2, r1, #31
 800e730:	d507      	bpl.n	800e742 <_Paint+0x14c>
 800e732:	6c18      	ldr	r0, [r3, #64]	; 0x40
 800e734:	f7fd f872 	bl	800b81c <LCD_SetColor>
 800e738:	9801      	ldr	r0, [sp, #4]
 800e73a:	a904      	add	r1, sp, #16
 800e73c:	2200      	movs	r2, #0
 800e73e:	f7ff fedb 	bl	800e4f8 <WIDGET__DrawFocusRect>
 800e742:	a801      	add	r0, sp, #4
 800e744:	f7ff fa08 	bl	800db58 <GUI_ALLOC_UnlockH>
 800e748:	b00b      	add	sp, #44	; 0x2c
 800e74a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800e74e <_Create>:
 800e74e:	4770      	bx	lr

0800e750 <_GetButtonSize>:
 800e750:	b513      	push	{r0, r1, r4, lr}
 800e752:	f7ff f9f3 	bl	800db3c <GUI_ALLOC_LockH>
 800e756:	ab02      	add	r3, sp, #8
 800e758:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800e75a:	f843 0d04 	str.w	r0, [r3, #-4]!
 800e75e:	8854      	ldrh	r4, [r2, #2]
 800e760:	4618      	mov	r0, r3
 800e762:	f7ff f9f9 	bl	800db58 <GUI_ALLOC_UnlockH>
 800e766:	4620      	mov	r0, r4
 800e768:	bd1c      	pop	{r2, r3, r4, pc}
	...

0800e76c <_Paint>:
 800e76c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e770:	b08f      	sub	sp, #60	; 0x3c
 800e772:	2500      	movs	r5, #0
 800e774:	4681      	mov	r9, r0
 800e776:	950a      	str	r5, [sp, #40]	; 0x28
 800e778:	950b      	str	r5, [sp, #44]	; 0x2c
 800e77a:	f7ff f9df 	bl	800db3c <GUI_ALLOC_LockH>
 800e77e:	f9b0 1060 	ldrsh.w	r1, [r0, #96]	; 0x60
 800e782:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800e784:	9102      	str	r1, [sp, #8]
 800e786:	a90a      	add	r1, sp, #40	; 0x28
 800e788:	8857      	ldrh	r7, [r2, #2]
 800e78a:	9007      	str	r0, [sp, #28]
 800e78c:	f7ff fd88 	bl	800e2a0 <WIDGET__GetClientRect>
 800e790:	9e07      	ldr	r6, [sp, #28]
 800e792:	8e70      	ldrh	r0, [r6, #50]	; 0x32
 800e794:	f000 0301 	and.w	r3, r0, #1
 800e798:	4648      	mov	r0, r9
 800e79a:	9301      	str	r3, [sp, #4]
 800e79c:	f7f8 fcc8 	bl	8007130 <WM__IsEnabled>
 800e7a0:	eb06 0180 	add.w	r1, r6, r0, lsl #2
 800e7a4:	9807      	ldr	r0, [sp, #28]
 800e7a6:	6c4e      	ldr	r6, [r1, #68]	; 0x44
 800e7a8:	f8b0 1062 	ldrh.w	r1, [r0, #98]	; 0x62
 800e7ac:	8832      	ldrh	r2, [r6, #0]
 800e7ae:	f8d0 804c 	ldr.w	r8, [r0, #76]	; 0x4c
 800e7b2:	1cd3      	adds	r3, r2, #3
 800e7b4:	1d3c      	adds	r4, r7, #4
 800e7b6:	1cfa      	adds	r2, r7, #3
 800e7b8:	f8b0 7064 	ldrh.w	r7, [r0, #100]	; 0x64
 800e7bc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800e7c0:	1e7b      	subs	r3, r7, #1
 800e7c2:	fb03 2201 	mla	r2, r3, r1, r2
 800e7c6:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800e7c8:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800e7cc:	f7fd f826 	bl	800b81c <LCD_SetColor>
 800e7d0:	9807      	ldr	r0, [sp, #28]
 800e7d2:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800e7d4:	f7fd fdbe 	bl	800c354 <GUI_SetFont>
 800e7d8:	2002      	movs	r0, #2
 800e7da:	f7fd fdb1 	bl	800c340 <GUI_SetTextMode>
 800e7de:	9f07      	ldr	r7, [sp, #28]
 800e7e0:	a908      	add	r1, sp, #32
 800e7e2:	6c38      	ldr	r0, [r7, #64]	; 0x40
 800e7e4:	f003 fa92 	bl	8011d0c <GUI_GetFontInfo>
 800e7e8:	f7ff f89e 	bl	800d928 <GUI_GetFontDistY>
 800e7ec:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 800e7f0:	f89d 1022 	ldrb.w	r1, [sp, #34]	; 0x22
 800e7f4:	f8b6 b000 	ldrh.w	fp, [r6]
 800e7f8:	1aca      	subs	r2, r1, r3
 800e7fa:	f10b 0106 	add.w	r1, fp, #6
 800e7fe:	b2d7      	uxtb	r7, r2
 800e800:	42a3      	cmp	r3, r4
 800e802:	b28a      	uxth	r2, r1
 800e804:	9703      	str	r7, [sp, #12]
 800e806:	9204      	str	r2, [sp, #16]
 800e808:	dc04      	bgt.n	800e814 <_Paint+0xa8>
 800e80a:	1ae5      	subs	r5, r4, r3
 800e80c:	2402      	movs	r4, #2
 800e80e:	fb95 f7f4 	sdiv	r7, r5, r4
 800e812:	b2bd      	uxth	r5, r7
 800e814:	3b01      	subs	r3, #1
 800e816:	280c      	cmp	r0, #12
 800e818:	bfcc      	ite	gt
 800e81a:	2703      	movgt	r7, #3
 800e81c:	2702      	movle	r7, #2
 800e81e:	1959      	adds	r1, r3, r5
 800e820:	b228      	sxth	r0, r5
 800e822:	42b8      	cmp	r0, r7
 800e824:	b28a      	uxth	r2, r1
 800e826:	4648      	mov	r0, r9
 800e828:	bfb8      	it	lt
 800e82a:	b2ef      	uxtblt	r7, r5
 800e82c:	9205      	str	r2, [sp, #20]
 800e82e:	f7f8 fd0f 	bl	8007250 <WM_GetHasTrans>
 800e832:	b950      	cbnz	r0, 800e84a <_Paint+0xde>
 800e834:	9c07      	ldr	r4, [sp, #28]
 800e836:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800e838:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 800e83c:	4298      	cmp	r0, r3
 800e83e:	bf08      	it	eq
 800e840:	4841      	ldreq	r0, [pc, #260]	; (800e948 <_Paint+0x1dc>)
 800e842:	f7fc ffe3 	bl	800b80c <LCD_SetBkColor>
 800e846:	f7fe fd67 	bl	800d318 <GUI_Clear>
 800e84a:	2400      	movs	r4, #0
 800e84c:	ab0e      	add	r3, sp, #56	; 0x38
 800e84e:	f853 2d1c 	ldr.w	r2, [r3, #-28]!
 800e852:	f8b2 1064 	ldrh.w	r1, [r2, #100]	; 0x64
 800e856:	428c      	cmp	r4, r1
 800e858:	da64      	bge.n	800e924 <_Paint+0x1b8>
 800e85a:	f8b2 a062 	ldrh.w	sl, [r2, #98]	; 0x62
 800e85e:	4618      	mov	r0, r3
 800e860:	f7ff f97a 	bl	800db58 <GUI_ALLOC_UnlockH>
 800e864:	fb0a fa04 	mul.w	sl, sl, r4
 800e868:	2102      	movs	r1, #2
 800e86a:	eb0a 0201 	add.w	r2, sl, r1
 800e86e:	4630      	mov	r0, r6
 800e870:	f7fe f9c2 	bl	800cbf8 <GUI_DrawBitmap>
 800e874:	9a02      	ldr	r2, [sp, #8]
 800e876:	42a2      	cmp	r2, r4
 800e878:	d112      	bne.n	800e8a0 <_Paint+0x134>
 800e87a:	8831      	ldrh	r1, [r6, #0]
 800e87c:	f8b8 0000 	ldrh.w	r0, [r8]
 800e880:	2302      	movs	r3, #2
 800e882:	1a0a      	subs	r2, r1, r0
 800e884:	fb92 f1f3 	sdiv	r1, r2, r3
 800e888:	8870      	ldrh	r0, [r6, #2]
 800e88a:	f8b8 2002 	ldrh.w	r2, [r8, #2]
 800e88e:	1a80      	subs	r0, r0, r2
 800e890:	fb90 f3f3 	sdiv	r3, r0, r3
 800e894:	1c9a      	adds	r2, r3, #2
 800e896:	4640      	mov	r0, r8
 800e898:	3102      	adds	r1, #2
 800e89a:	4452      	add	r2, sl
 800e89c:	f7fe f9ac 	bl	800cbf8 <GUI_DrawBitmap>
 800e8a0:	4648      	mov	r0, r9
 800e8a2:	f7ff f94b 	bl	800db3c <GUI_ALLOC_LockH>
 800e8a6:	4621      	mov	r1, r4
 800e8a8:	9007      	str	r0, [sp, #28]
 800e8aa:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800e8ac:	f7f7 f899 	bl	80059e2 <GUI_ARRAY_GetpItemLocked>
 800e8b0:	9006      	str	r0, [sp, #24]
 800e8b2:	2800      	cmp	r0, #0
 800e8b4:	d034      	beq.n	800e920 <_Paint+0x1b4>
 800e8b6:	7803      	ldrb	r3, [r0, #0]
 800e8b8:	b37b      	cbz	r3, 800e91a <_Paint+0x1ae>
 800e8ba:	9b05      	ldr	r3, [sp, #20]
 800e8bc:	9a04      	ldr	r2, [sp, #16]
 800e8be:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800e8c2:	2100      	movs	r1, #0
 800e8c4:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 800e8c8:	f8ad 1034 	strh.w	r1, [sp, #52]	; 0x34
 800e8cc:	f8ad 5032 	strh.w	r5, [sp, #50]	; 0x32
 800e8d0:	f7fd ff0c 	bl	800c6ec <GUI_GetStringDistX>
 800e8d4:	f10b 0204 	add.w	r2, fp, #4
 800e8d8:	1810      	adds	r0, r2, r0
 800e8da:	f8ad 0034 	strh.w	r0, [sp, #52]	; 0x34
 800e8de:	2100      	movs	r1, #0
 800e8e0:	a80c      	add	r0, sp, #48	; 0x30
 800e8e2:	4652      	mov	r2, sl
 800e8e4:	f7fd feba 	bl	800c65c <GUI_MoveRect>
 800e8e8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 800e8ec:	9b03      	ldr	r3, [sp, #12]
 800e8ee:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 800e8f2:	9806      	ldr	r0, [sp, #24]
 800e8f4:	1ad2      	subs	r2, r2, r3
 800e8f6:	f7fe fb3f 	bl	800cf78 <GUI_DispStringAt>
 800e8fa:	9901      	ldr	r1, [sp, #4]
 800e8fc:	b169      	cbz	r1, 800e91a <_Paint+0x1ae>
 800e8fe:	9807      	ldr	r0, [sp, #28]
 800e900:	f9b0 2060 	ldrsh.w	r2, [r0, #96]	; 0x60
 800e904:	42a2      	cmp	r2, r4
 800e906:	d002      	beq.n	800e90e <_Paint+0x1a2>
 800e908:	f890 3066 	ldrb.w	r3, [r0, #102]	; 0x66
 800e90c:	b12b      	cbz	r3, 800e91a <_Paint+0x1ae>
 800e90e:	b27a      	sxtb	r2, r7
 800e910:	a80a      	add	r0, sp, #40	; 0x28
 800e912:	a90c      	add	r1, sp, #48	; 0x30
 800e914:	4252      	negs	r2, r2
 800e916:	f7fd f823 	bl	800b960 <GUI__ReduceRect>
 800e91a:	a806      	add	r0, sp, #24
 800e91c:	f7ff f91c 	bl	800db58 <GUI_ALLOC_UnlockH>
 800e920:	3401      	adds	r4, #1
 800e922:	e793      	b.n	800e84c <_Paint+0xe0>
 800e924:	9801      	ldr	r0, [sp, #4]
 800e926:	b140      	cbz	r0, 800e93a <_Paint+0x1ce>
 800e928:	6bd0      	ldr	r0, [r2, #60]	; 0x3c
 800e92a:	9300      	str	r3, [sp, #0]
 800e92c:	f7fc ff76 	bl	800b81c <LCD_SetColor>
 800e930:	a80a      	add	r0, sp, #40	; 0x28
 800e932:	2100      	movs	r1, #0
 800e934:	f003 fa0c 	bl	8011d50 <GUI_DrawFocusRect>
 800e938:	9b00      	ldr	r3, [sp, #0]
 800e93a:	4618      	mov	r0, r3
 800e93c:	f7ff f90c 	bl	800db58 <GUI_ALLOC_UnlockH>
 800e940:	b00f      	add	sp, #60	; 0x3c
 800e942:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e946:	bf00      	nop
 800e948:	00c0c0c0 	.word	0x00c0c0c0

0800e94c <_Create>:
 800e94c:	4770      	bx	lr

0800e94e <_Paint>:
 800e94e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e952:	b08b      	sub	sp, #44	; 0x2c
 800e954:	f7ff f8f2 	bl	800db3c <GUI_ALLOC_LockH>
 800e958:	9000      	str	r0, [sp, #0]
 800e95a:	a806      	add	r0, sp, #24
 800e95c:	f7f9 f864 	bl	8007a28 <WM_GetClientRect>
 800e960:	9b00      	ldr	r3, [sp, #0]
 800e962:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e964:	ad04      	add	r5, sp, #16
 800e966:	4628      	mov	r0, r5
 800e968:	a906      	add	r1, sp, #24
 800e96a:	6812      	ldr	r2, [r2, #0]
 800e96c:	f7fc fff8 	bl	800b960 <GUI__ReduceRect>
 800e970:	9800      	ldr	r0, [sp, #0]
 800e972:	6b41      	ldr	r1, [r0, #52]	; 0x34
 800e974:	f7f6 fe05 	bl	8005582 <PROGBAR__Value2Pos>
 800e978:	4606      	mov	r6, r0
 800e97a:	9800      	ldr	r0, [sp, #0]
 800e97c:	f890 1068 	ldrb.w	r1, [r0, #104]	; 0x68
 800e980:	07cb      	lsls	r3, r1, #31
 800e982:	d526      	bpl.n	800e9d2 <_Paint+0x84>
 800e984:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e988:	ac02      	add	r4, sp, #8
 800e98a:	e884 0003 	stmia.w	r4, {r0, r1}
 800e98e:	4620      	mov	r0, r4
 800e990:	f8ad 600a 	strh.w	r6, [sp, #10]
 800e994:	f7f8 fc32 	bl	80071fc <WM_SetUserClipRect>
 800e998:	9f00      	ldr	r7, [sp, #0]
 800e99a:	6d38      	ldr	r0, [r7, #80]	; 0x50
 800e99c:	f7fc ff36 	bl	800b80c <LCD_SetBkColor>
 800e9a0:	6db8      	ldr	r0, [r7, #88]	; 0x58
 800e9a2:	f7fc ff3b 	bl	800b81c <LCD_SetColor>
 800e9a6:	f7fe fcb7 	bl	800d318 <GUI_Clear>
 800e9aa:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e9ae:	3e01      	subs	r6, #1
 800e9b0:	e884 0003 	stmia.w	r4, {r0, r1}
 800e9b4:	4620      	mov	r0, r4
 800e9b6:	f8ad 600e 	strh.w	r6, [sp, #14]
 800e9ba:	f7f8 fc1f 	bl	80071fc <WM_SetUserClipRect>
 800e9be:	9c00      	ldr	r4, [sp, #0]
 800e9c0:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800e9c2:	f7fc ff23 	bl	800b80c <LCD_SetBkColor>
 800e9c6:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800e9c8:	f7fc ff28 	bl	800b81c <LCD_SetColor>
 800e9cc:	f7fe fca4 	bl	800d318 <GUI_Clear>
 800e9d0:	e05a      	b.n	800ea88 <_Paint+0x13a>
 800e9d2:	f7f6 fd90 	bl	80054f6 <PROGBAR__GetTextLocked>
 800e9d6:	9001      	str	r0, [sp, #4]
 800e9d8:	b140      	cbz	r0, 800e9ec <_Paint+0x9e>
 800e9da:	9800      	ldr	r0, [sp, #0]
 800e9dc:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800e9de:	f7fd fcb9 	bl	800c354 <GUI_SetFont>
 800e9e2:	9800      	ldr	r0, [sp, #0]
 800e9e4:	9a01      	ldr	r2, [sp, #4]
 800e9e6:	a908      	add	r1, sp, #32
 800e9e8:	f7f6 fd88 	bl	80054fc <PROGBAR__GetTextRect>
 800e9ec:	2002      	movs	r0, #2
 800e9ee:	f7fd fca7 	bl	800c340 <GUI_SetTextMode>
 800e9f2:	ad04      	add	r5, sp, #16
 800e9f4:	4681      	mov	r9, r0
 800e9f6:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e9fa:	ac02      	add	r4, sp, #8
 800e9fc:	e884 0003 	stmia.w	r4, {r0, r1}
 800ea00:	1e77      	subs	r7, r6, #1
 800ea02:	4620      	mov	r0, r4
 800ea04:	f8ad 700c 	strh.w	r7, [sp, #12]
 800ea08:	f7f8 fbf8 	bl	80071fc <WM_SetUserClipRect>
 800ea0c:	f8dd 8000 	ldr.w	r8, [sp]
 800ea10:	9f01      	ldr	r7, [sp, #4]
 800ea12:	f8d8 0050 	ldr.w	r0, [r8, #80]	; 0x50
 800ea16:	f9bd b020 	ldrsh.w	fp, [sp, #32]
 800ea1a:	f9bd a022 	ldrsh.w	sl, [sp, #34]	; 0x22
 800ea1e:	f7fc fef5 	bl	800b80c <LCD_SetBkColor>
 800ea22:	f8d8 0058 	ldr.w	r0, [r8, #88]	; 0x58
 800ea26:	f7fc fef9 	bl	800b81c <LCD_SetColor>
 800ea2a:	f7fe fc75 	bl	800d318 <GUI_Clear>
 800ea2e:	b137      	cbz	r7, 800ea3e <_Paint+0xf0>
 800ea30:	4658      	mov	r0, fp
 800ea32:	4651      	mov	r1, sl
 800ea34:	f7fd fe4e 	bl	800c6d4 <GUI_GotoXY>
 800ea38:	4638      	mov	r0, r7
 800ea3a:	f7fe faa5 	bl	800cf88 <GUI_DispString>
 800ea3e:	e895 0003 	ldmia.w	r5, {r0, r1}
 800ea42:	e884 0003 	stmia.w	r4, {r0, r1}
 800ea46:	4620      	mov	r0, r4
 800ea48:	f8ad 6008 	strh.w	r6, [sp, #8]
 800ea4c:	f7f8 fbd6 	bl	80071fc <WM_SetUserClipRect>
 800ea50:	9d00      	ldr	r5, [sp, #0]
 800ea52:	9c01      	ldr	r4, [sp, #4]
 800ea54:	6d68      	ldr	r0, [r5, #84]	; 0x54
 800ea56:	f9bd 7020 	ldrsh.w	r7, [sp, #32]
 800ea5a:	f9bd 6022 	ldrsh.w	r6, [sp, #34]	; 0x22
 800ea5e:	f7fc fed5 	bl	800b80c <LCD_SetBkColor>
 800ea62:	6de8      	ldr	r0, [r5, #92]	; 0x5c
 800ea64:	f7fc feda 	bl	800b81c <LCD_SetColor>
 800ea68:	f7fe fc56 	bl	800d318 <GUI_Clear>
 800ea6c:	b134      	cbz	r4, 800ea7c <_Paint+0x12e>
 800ea6e:	4638      	mov	r0, r7
 800ea70:	4631      	mov	r1, r6
 800ea72:	f7fd fe2f 	bl	800c6d4 <GUI_GotoXY>
 800ea76:	4620      	mov	r0, r4
 800ea78:	f7fe fa86 	bl	800cf88 <GUI_DispString>
 800ea7c:	4648      	mov	r0, r9
 800ea7e:	f7fd fc5f 	bl	800c340 <GUI_SetTextMode>
 800ea82:	a801      	add	r0, sp, #4
 800ea84:	f7ff f868 	bl	800db58 <GUI_ALLOC_UnlockH>
 800ea88:	ac0a      	add	r4, sp, #40	; 0x28
 800ea8a:	2000      	movs	r0, #0
 800ea8c:	f7f8 fbb6 	bl	80071fc <WM_SetUserClipRect>
 800ea90:	f854 0d28 	ldr.w	r0, [r4, #-40]!
 800ea94:	a906      	add	r1, sp, #24
 800ea96:	f7ff fd72 	bl	800e57e <WIDGET__EFFECT_DrawDownRect>
 800ea9a:	4668      	mov	r0, sp
 800ea9c:	f7ff f85c 	bl	800db58 <GUI_ALLOC_UnlockH>
 800eaa0:	b00b      	add	sp, #44	; 0x2c
 800eaa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800eaa6 <GUI_DRAW__Draw>:
 800eaa6:	e92d 43e3 	stmdb	sp!, {r0, r1, r5, r6, r7, r8, r9, lr}
 800eaaa:	4688      	mov	r8, r1
 800eaac:	4617      	mov	r7, r2
 800eaae:	461e      	mov	r6, r3
 800eab0:	4681      	mov	r9, r0
 800eab2:	b170      	cbz	r0, 800ead2 <GUI_DRAW__Draw+0x2c>
 800eab4:	f7ff f842 	bl	800db3c <GUI_ALLOC_LockH>
 800eab8:	4605      	mov	r5, r0
 800eaba:	a802      	add	r0, sp, #8
 800eabc:	682b      	ldr	r3, [r5, #0]
 800eabe:	f840 5d04 	str.w	r5, [r0, #-4]!
 800eac2:	681d      	ldr	r5, [r3, #0]
 800eac4:	f7ff f848 	bl	800db58 <GUI_ALLOC_UnlockH>
 800eac8:	4648      	mov	r0, r9
 800eaca:	4641      	mov	r1, r8
 800eacc:	463a      	mov	r2, r7
 800eace:	4633      	mov	r3, r6
 800ead0:	47a8      	blx	r5
 800ead2:	e8bd 83ec 	ldmia.w	sp!, {r2, r3, r5, r6, r7, r8, r9, pc}

0800ead6 <FRAMEWIN__UpdateButtons>:
 800ead6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eada:	b085      	sub	sp, #20
 800eadc:	4604      	mov	r4, r0
 800eade:	9301      	str	r3, [sp, #4]
 800eae0:	4693      	mov	fp, r2
 800eae2:	460d      	mov	r5, r1
 800eae4:	f7ff f82a 	bl	800db3c <GUI_ALLOC_LockH>
 800eae8:	f10d 0810 	add.w	r8, sp, #16
 800eaec:	6dc1      	ldr	r1, [r0, #92]	; 0x5c
 800eaee:	f848 0d08 	str.w	r0, [r8, #-8]!
 800eaf2:	688e      	ldr	r6, [r1, #8]
 800eaf4:	f7f7 fb32 	bl	800615c <FRAMEWIN__CalcTitleHeight>
 800eaf8:	4607      	mov	r7, r0
 800eafa:	4640      	mov	r0, r8
 800eafc:	f7ff f82c 	bl	800db58 <GUI_ALLOC_UnlockH>
 800eb00:	6832      	ldr	r2, [r6, #0]
 800eb02:	2101      	movs	r1, #1
 800eb04:	4620      	mov	r0, r4
 800eb06:	4790      	blx	r2
 800eb08:	2103      	movs	r1, #3
 800eb0a:	6833      	ldr	r3, [r6, #0]
 800eb0c:	4681      	mov	r9, r0
 800eb0e:	4620      	mov	r0, r4
 800eb10:	4798      	blx	r3
 800eb12:	2100      	movs	r1, #0
 800eb14:	4682      	mov	sl, r0
 800eb16:	6832      	ldr	r2, [r6, #0]
 800eb18:	4620      	mov	r0, r4
 800eb1a:	4790      	blx	r2
 800eb1c:	42af      	cmp	r7, r5
 800eb1e:	4680      	mov	r8, r0
 800eb20:	d107      	bne.n	800eb32 <FRAMEWIN__UpdateButtons+0x5c>
 800eb22:	45d9      	cmp	r9, fp
 800eb24:	d105      	bne.n	800eb32 <FRAMEWIN__UpdateButtons+0x5c>
 800eb26:	9801      	ldr	r0, [sp, #4]
 800eb28:	4582      	cmp	sl, r0
 800eb2a:	d102      	bne.n	800eb32 <FRAMEWIN__UpdateButtons+0x5c>
 800eb2c:	990e      	ldr	r1, [sp, #56]	; 0x38
 800eb2e:	4588      	cmp	r8, r1
 800eb30:	d041      	beq.n	800ebb6 <FRAMEWIN__UpdateButtons+0xe0>
 800eb32:	4620      	mov	r0, r4
 800eb34:	f7f8 ff22 	bl	800797c <WM_GetFirstChild>
 800eb38:	2600      	movs	r6, #0
 800eb3a:	1b7d      	subs	r5, r7, r5
 800eb3c:	4604      	mov	r4, r0
 800eb3e:	4637      	mov	r7, r6
 800eb40:	2c00      	cmp	r4, #0
 800eb42:	d038      	beq.n	800ebb6 <FRAMEWIN__UpdateButtons+0xe0>
 800eb44:	4620      	mov	r0, r4
 800eb46:	f7fe fff9 	bl	800db3c <GUI_ALLOC_LockH>
 800eb4a:	9003      	str	r0, [sp, #12]
 800eb4c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800eb4e:	f403 7220 	and.w	r2, r3, #640	; 0x280
 800eb52:	2a80      	cmp	r2, #128	; 0x80
 800eb54:	d002      	beq.n	800eb5c <FRAMEWIN__UpdateButtons+0x86>
 800eb56:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 800eb5a:	d124      	bne.n	800eba6 <FRAMEWIN__UpdateButtons+0xd0>
 800eb5c:	b125      	cbz	r5, 800eb68 <FRAMEWIN__UpdateButtons+0x92>
 800eb5e:	4620      	mov	r0, r4
 800eb60:	4629      	mov	r1, r5
 800eb62:	462a      	mov	r2, r5
 800eb64:	f7f8 fd19 	bl	800759a <WM_ResizeWindow>
 800eb68:	9803      	ldr	r0, [sp, #12]
 800eb6a:	6a81      	ldr	r1, [r0, #40]	; 0x28
 800eb6c:	060a      	lsls	r2, r1, #24
 800eb6e:	d50b      	bpl.n	800eb88 <FRAMEWIN__UpdateButtons+0xb2>
 800eb70:	9b01      	ldr	r3, [sp, #4]
 800eb72:	ebca 0203 	rsb	r2, sl, r3
 800eb76:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800eb78:	fb07 2115 	mls	r1, r7, r5, r2
 800eb7c:	4620      	mov	r0, r4
 800eb7e:	ebc3 0208 	rsb	r2, r3, r8
 800eb82:	3701      	adds	r7, #1
 800eb84:	f7f8 fe3f 	bl	8007806 <WM_MoveWindow>
 800eb88:	9803      	ldr	r0, [sp, #12]
 800eb8a:	6a81      	ldr	r1, [r0, #40]	; 0x28
 800eb8c:	058b      	lsls	r3, r1, #22
 800eb8e:	d50a      	bpl.n	800eba6 <FRAMEWIN__UpdateButtons+0xd0>
 800eb90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800eb92:	ebcb 0209 	rsb	r2, fp, r9
 800eb96:	fb06 2105 	mla	r1, r6, r5, r2
 800eb9a:	4620      	mov	r0, r4
 800eb9c:	ebc3 0208 	rsb	r2, r3, r8
 800eba0:	3601      	adds	r6, #1
 800eba2:	f7f8 fe30 	bl	8007806 <WM_MoveWindow>
 800eba6:	a803      	add	r0, sp, #12
 800eba8:	f7fe ffd6 	bl	800db58 <GUI_ALLOC_UnlockH>
 800ebac:	4620      	mov	r0, r4
 800ebae:	f7f8 fec2 	bl	8007936 <WM_GetNextSibling>
 800ebb2:	4604      	mov	r4, r0
 800ebb4:	e7c4      	b.n	800eb40 <FRAMEWIN__UpdateButtons+0x6a>
 800ebb6:	b005      	add	sp, #20
 800ebb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ebbc <_GetBorderSize>:
 800ebbc:	b513      	push	{r0, r1, r4, lr}
 800ebbe:	f7fe ffbd 	bl	800db3c <GUI_ALLOC_LockH>
 800ebc2:	ab02      	add	r3, sp, #8
 800ebc4:	f9b0 4056 	ldrsh.w	r4, [r0, #86]	; 0x56
 800ebc8:	f843 0d04 	str.w	r0, [r3, #-4]!
 800ebcc:	4618      	mov	r0, r3
 800ebce:	f7fe ffc3 	bl	800db58 <GUI_ALLOC_UnlockH>
 800ebd2:	4620      	mov	r0, r4
 800ebd4:	bd1c      	pop	{r2, r3, r4, pc}
	...

0800ebd8 <_Create>:
 800ebd8:	4901      	ldr	r1, [pc, #4]	; (800ebe0 <_Create+0x8>)
 800ebda:	f000 b8f1 	b.w	800edc0 <FRAMEWIN_SetOwnerDraw>
 800ebde:	bf00      	nop
 800ebe0:	0800ed05 	.word	0x0800ed05

0800ebe4 <_Paint>:
 800ebe4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ebe8:	b093      	sub	sp, #76	; 0x4c
 800ebea:	4604      	mov	r4, r0
 800ebec:	f7fe ffa6 	bl	800db3c <GUI_ALLOC_LockH>
 800ebf0:	9001      	str	r0, [sp, #4]
 800ebf2:	4620      	mov	r0, r4
 800ebf4:	f7f8 fe64 	bl	80078c0 <WM_GetWindowSizeX>
 800ebf8:	4680      	mov	r8, r0
 800ebfa:	4620      	mov	r0, r4
 800ebfc:	f7f8 fe74 	bl	80078e8 <WM_GetWindowSizeY>
 800ec00:	ae04      	add	r6, sp, #16
 800ec02:	9b01      	ldr	r3, [sp, #4]
 800ec04:	4631      	mov	r1, r6
 800ec06:	4681      	mov	r9, r0
 800ec08:	4620      	mov	r0, r4
 800ec0a:	f8b3 5056 	ldrh.w	r5, [r3, #86]	; 0x56
 800ec0e:	f7f7 fafc 	bl	800620a <FRAMEWIN__CalcPositions>
 800ec12:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 800ec16:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800ec1a:	f8ad 1008 	strh.w	r1, [sp, #8]
 800ec1e:	b20a      	sxth	r2, r1
 800ec20:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 800ec24:	920d      	str	r2, [sp, #52]	; 0x34
 800ec26:	2001      	movs	r0, #1
 800ec28:	1e4a      	subs	r2, r1, #1
 800ec2a:	900a      	str	r0, [sp, #40]	; 0x28
 800ec2c:	b218      	sxth	r0, r3
 800ec2e:	f8ad 300c 	strh.w	r3, [sp, #12]
 800ec32:	900f      	str	r0, [sp, #60]	; 0x3c
 800ec34:	b293      	uxth	r3, r2
 800ec36:	f8bd 0022 	ldrh.w	r0, [sp, #34]	; 0x22
 800ec3a:	f8ad 300a 	strh.w	r3, [sp, #10]
 800ec3e:	b21a      	sxth	r2, r3
 800ec40:	b201      	sxth	r1, r0
 800ec42:	f8ad 000e 	strh.w	r0, [sp, #14]
 800ec46:	1c53      	adds	r3, r2, #1
 800ec48:	2000      	movs	r0, #0
 800ec4a:	f8bd 7010 	ldrh.w	r7, [sp, #16]
 800ec4e:	9409      	str	r4, [sp, #36]	; 0x24
 800ec50:	9611      	str	r6, [sp, #68]	; 0x44
 800ec52:	9110      	str	r1, [sp, #64]	; 0x40
 800ec54:	930e      	str	r3, [sp, #56]	; 0x38
 800ec56:	f7f9 fe17 	bl	8008888 <WM__InitIVRSearch>
 800ec5a:	b928      	cbnz	r0, 800ec68 <_Paint+0x84>
 800ec5c:	a801      	add	r0, sp, #4
 800ec5e:	f7fe ff7b 	bl	800db58 <GUI_ALLOC_UnlockH>
 800ec62:	b013      	add	sp, #76	; 0x4c
 800ec64:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ec68:	b22d      	sxth	r5, r5
 800ec6a:	fa05 f787 	sxtah	r7, r5, r7
 800ec6e:	a802      	add	r0, sp, #8
 800ec70:	f7f8 fac4 	bl	80071fc <WM_SetUserClipRect>
 800ec74:	9c01      	ldr	r4, [sp, #4]
 800ec76:	6e26      	ldr	r6, [r4, #96]	; 0x60
 800ec78:	b10e      	cbz	r6, 800ec7e <_Paint+0x9a>
 800ec7a:	a809      	add	r0, sp, #36	; 0x24
 800ec7c:	47b0      	blx	r6
 800ec7e:	2000      	movs	r0, #0
 800ec80:	f7f8 fabc 	bl	80071fc <WM_SetUserClipRect>
 800ec84:	481e      	ldr	r0, [pc, #120]	; (800ed00 <_Paint+0x11c>)
 800ec86:	f7fc fdc9 	bl	800b81c <LCD_SetColor>
 800ec8a:	f108 34ff 	add.w	r4, r8, #4294967295
 800ec8e:	2000      	movs	r0, #0
 800ec90:	4601      	mov	r1, r0
 800ec92:	4622      	mov	r2, r4
 800ec94:	1e6b      	subs	r3, r5, #1
 800ec96:	f7fd fd53 	bl	800c740 <GUI_FillRect>
 800ec9a:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800ec9e:	f109 36ff 	add.w	r6, r9, #4294967295
 800eca2:	2000      	movs	r0, #0
 800eca4:	4601      	mov	r1, r0
 800eca6:	3a01      	subs	r2, #1
 800eca8:	4633      	mov	r3, r6
 800ecaa:	f7fd fd49 	bl	800c740 <GUI_FillRect>
 800ecae:	f9bd 0018 	ldrsh.w	r0, [sp, #24]
 800ecb2:	2100      	movs	r1, #0
 800ecb4:	3001      	adds	r0, #1
 800ecb6:	4622      	mov	r2, r4
 800ecb8:	4633      	mov	r3, r6
 800ecba:	f7fd fd41 	bl	800c740 <GUI_FillRect>
 800ecbe:	f9bd 101a 	ldrsh.w	r1, [sp, #26]
 800ecc2:	2000      	movs	r0, #0
 800ecc4:	3101      	adds	r1, #1
 800ecc6:	4622      	mov	r2, r4
 800ecc8:	4633      	mov	r3, r6
 800ecca:	f7fd fd39 	bl	800c740 <GUI_FillRect>
 800ecce:	9b01      	ldr	r3, [sp, #4]
 800ecd0:	8e5a      	ldrh	r2, [r3, #50]	; 0x32
 800ecd2:	f002 0020 	and.w	r0, r2, #32
 800ecd6:	b281      	uxth	r1, r0
 800ecd8:	b141      	cbz	r1, 800ecec <_Paint+0x108>
 800ecda:	f9b3 3058 	ldrsh.w	r3, [r3, #88]	; 0x58
 800ecde:	18fb      	adds	r3, r7, r3
 800ece0:	2000      	movs	r0, #0
 800ece2:	4639      	mov	r1, r7
 800ece4:	4622      	mov	r2, r4
 800ece6:	3b01      	subs	r3, #1
 800ece8:	f7fd fd2a 	bl	800c740 <GUI_FillRect>
 800ecec:	2d01      	cmp	r5, #1
 800ecee:	dd01      	ble.n	800ecf4 <_Paint+0x110>
 800ecf0:	f003 fa96 	bl	8012220 <WIDGET_EFFECT_3D_DrawUp>
 800ecf4:	f7f9 fd08 	bl	8008708 <WM__GetNextIVR>
 800ecf8:	2800      	cmp	r0, #0
 800ecfa:	d1b8      	bne.n	800ec6e <_Paint+0x8a>
 800ecfc:	e7ae      	b.n	800ec5c <_Paint+0x78>
 800ecfe:	bf00      	nop
 800ed00:	00aaaaaa 	.word	0x00aaaaaa

0800ed04 <FRAMEWIN_OwnerDraw>:
 800ed04:	b530      	push	{r4, r5, lr}
 800ed06:	4604      	mov	r4, r0
 800ed08:	b089      	sub	sp, #36	; 0x24
 800ed0a:	6800      	ldr	r0, [r0, #0]
 800ed0c:	f7fe ff16 	bl	800db3c <GUI_ALLOC_LockH>
 800ed10:	f8b0 507c 	ldrh.w	r5, [r0, #124]	; 0x7c
 800ed14:	9000      	str	r0, [sp, #0]
 800ed16:	6f00      	ldr	r0, [r0, #112]	; 0x70
 800ed18:	6a24      	ldr	r4, [r4, #32]
 800ed1a:	f3c5 05c0 	ubfx	r5, r5, #3, #1
 800ed1e:	b108      	cbz	r0, 800ed24 <FRAMEWIN_OwnerDraw+0x20>
 800ed20:	f7fe ff0c 	bl	800db3c <GUI_ALLOC_LockH>
 800ed24:	4622      	mov	r2, r4
 800ed26:	9001      	str	r0, [sp, #4]
 800ed28:	f852 0f0c 	ldr.w	r0, [r2, #12]!
 800ed2c:	6851      	ldr	r1, [r2, #4]
 800ed2e:	8922      	ldrh	r2, [r4, #8]
 800ed30:	ab06      	add	r3, sp, #24
 800ed32:	c303      	stmia	r3!, {r0, r1}
 800ed34:	88a0      	ldrh	r0, [r4, #4]
 800ed36:	89e3      	ldrh	r3, [r4, #14]
 800ed38:	1e41      	subs	r1, r0, #1
 800ed3a:	1c50      	adds	r0, r2, #1
 800ed3c:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 800ed40:	f8ad 1008 	strh.w	r1, [sp, #8]
 800ed44:	8a61      	ldrh	r1, [r4, #18]
 800ed46:	f8ad 000c 	strh.w	r0, [sp, #12]
 800ed4a:	1c50      	adds	r0, r2, #1
 800ed4c:	f8ad 100e 	strh.w	r1, [sp, #14]
 800ed50:	f8ad 0018 	strh.w	r0, [sp, #24]
 800ed54:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800ed58:	9800      	ldr	r0, [sp, #0]
 800ed5a:	f8ad 300a 	strh.w	r3, [sp, #10]
 800ed5e:	1e4a      	subs	r2, r1, #1
 800ed60:	3301      	adds	r3, #1
 800ed62:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800ed64:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ed68:	f8ad 201c 	strh.w	r2, [sp, #28]
 800ed6c:	f7fd faf2 	bl	800c354 <GUI_SetFont>
 800ed70:	9b00      	ldr	r3, [sp, #0]
 800ed72:	9801      	ldr	r0, [sp, #4]
 800ed74:	f9b3 305a 	ldrsh.w	r3, [r3, #90]	; 0x5a
 800ed78:	a906      	add	r1, sp, #24
 800ed7a:	aa04      	add	r2, sp, #16
 800ed7c:	f002 ff21 	bl	8011bc2 <GUI__CalcTextRect>
 800ed80:	9a00      	ldr	r2, [sp, #0]
 800ed82:	f105 010c 	add.w	r1, r5, #12
 800ed86:	eb02 0081 	add.w	r0, r2, r1, lsl #2
 800ed8a:	350e      	adds	r5, #14
 800ed8c:	6880      	ldr	r0, [r0, #8]
 800ed8e:	f7fc fd3d 	bl	800b80c <LCD_SetBkColor>
 800ed92:	9b00      	ldr	r3, [sp, #0]
 800ed94:	eb03 0185 	add.w	r1, r3, r5, lsl #2
 800ed98:	6888      	ldr	r0, [r1, #8]
 800ed9a:	f7fc fd3f 	bl	800b81c <LCD_SetColor>
 800ed9e:	aa06      	add	r2, sp, #24
 800eda0:	9801      	ldr	r0, [sp, #4]
 800eda2:	a902      	add	r1, sp, #8
 800eda4:	ab04      	add	r3, sp, #16
 800eda6:	f003 f921 	bl	8011fec <WIDGET__FillStringInRect>
 800edaa:	4668      	mov	r0, sp
 800edac:	f7fe fed4 	bl	800db58 <GUI_ALLOC_UnlockH>
 800edb0:	9a01      	ldr	r2, [sp, #4]
 800edb2:	b112      	cbz	r2, 800edba <FRAMEWIN_OwnerDraw+0xb6>
 800edb4:	a801      	add	r0, sp, #4
 800edb6:	f7fe fecf 	bl	800db58 <GUI_ALLOC_UnlockH>
 800edba:	2000      	movs	r0, #0
 800edbc:	b009      	add	sp, #36	; 0x24
 800edbe:	bd30      	pop	{r4, r5, pc}

0800edc0 <FRAMEWIN_SetOwnerDraw>:
 800edc0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800edc2:	460c      	mov	r4, r1
 800edc4:	4605      	mov	r5, r0
 800edc6:	b158      	cbz	r0, 800ede0 <FRAMEWIN_SetOwnerDraw+0x20>
 800edc8:	f7fe feb8 	bl	800db3c <GUI_ALLOC_LockH>
 800edcc:	4602      	mov	r2, r0
 800edce:	a802      	add	r0, sp, #8
 800edd0:	6614      	str	r4, [r2, #96]	; 0x60
 800edd2:	f840 2d04 	str.w	r2, [r0, #-4]!
 800edd6:	f7fe febf 	bl	800db58 <GUI_ALLOC_UnlockH>
 800edda:	4628      	mov	r0, r5
 800eddc:	f7f9 fb14 	bl	8008408 <WM_InvalidateWindow>
 800ede0:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800ede2 <_Create>:
 800ede2:	4770      	bx	lr

0800ede4 <_GetButtonSize>:
 800ede4:	b508      	push	{r3, lr}
 800ede6:	f7ff fbff 	bl	800e5e8 <WIDGET_GetDefaultEffect>
 800edea:	4b03      	ldr	r3, [pc, #12]	; (800edf8 <_GetButtonSize+0x14>)
 800edec:	6800      	ldr	r0, [r0, #0]
 800edee:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800edf0:	880a      	ldrh	r2, [r1, #0]
 800edf2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 800edf6:	bd08      	pop	{r3, pc}
 800edf8:	20000154 	.word	0x20000154

0800edfc <_Paint>:
 800edfc:	b570      	push	{r4, r5, r6, lr}
 800edfe:	b088      	sub	sp, #32
 800ee00:	2300      	movs	r3, #0
 800ee02:	4604      	mov	r4, r0
 800ee04:	9302      	str	r3, [sp, #8]
 800ee06:	9303      	str	r3, [sp, #12]
 800ee08:	f7fe fe98 	bl	800db3c <GUI_ALLOC_LockH>
 800ee0c:	9000      	str	r0, [sp, #0]
 800ee0e:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800ee10:	6805      	ldr	r5, [r0, #0]
 800ee12:	4620      	mov	r0, r4
 800ee14:	f7f8 f98c 	bl	8007130 <WM__IsEnabled>
 800ee18:	4606      	mov	r6, r0
 800ee1a:	4620      	mov	r0, r4
 800ee1c:	f7f8 fa18 	bl	8007250 <WM_GetHasTrans>
 800ee20:	b960      	cbnz	r0, 800ee3c <_Paint+0x40>
 800ee22:	9900      	ldr	r1, [sp, #0]
 800ee24:	6c08      	ldr	r0, [r1, #64]	; 0x40
 800ee26:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 800ee2a:	4290      	cmp	r0, r2
 800ee2c:	d102      	bne.n	800ee34 <_Paint+0x38>
 800ee2e:	4620      	mov	r0, r4
 800ee30:	f7ff fa51 	bl	800e2d6 <WIDGET__GetBkColor>
 800ee34:	f7fc fcea 	bl	800b80c <LCD_SetBkColor>
 800ee38:	f7fe fa6e 	bl	800d318 <GUI_Clear>
 800ee3c:	9b00      	ldr	r3, [sp, #0]
 800ee3e:	6e58      	ldr	r0, [r3, #100]	; 0x64
 800ee40:	8802      	ldrh	r2, [r0, #0]
 800ee42:	8840      	ldrh	r0, [r0, #2]
 800ee44:	0069      	lsls	r1, r5, #1
 800ee46:	b28b      	uxth	r3, r1
 800ee48:	1e51      	subs	r1, r2, #1
 800ee4a:	185a      	adds	r2, r3, r1
 800ee4c:	1e41      	subs	r1, r0, #1
 800ee4e:	185b      	adds	r3, r3, r1
 800ee50:	a802      	add	r0, sp, #8
 800ee52:	f8ad 300e 	strh.w	r3, [sp, #14]
 800ee56:	f8ad 200c 	strh.w	r2, [sp, #12]
 800ee5a:	f7f8 f9cf 	bl	80071fc <WM_SetUserClipRect>
 800ee5e:	9a00      	ldr	r2, [sp, #0]
 800ee60:	eb02 0086 	add.w	r0, r2, r6, lsl #2
 800ee64:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800ee66:	f7fc fcd1 	bl	800b80c <LCD_SetBkColor>
 800ee6a:	f7fe fa55 	bl	800d318 <GUI_Clear>
 800ee6e:	9900      	ldr	r1, [sp, #0]
 800ee70:	f891 3075 	ldrb.w	r3, [r1, #117]	; 0x75
 800ee74:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 800ee78:	eb01 0286 	add.w	r2, r1, r6, lsl #2
 800ee7c:	6d96      	ldr	r6, [r2, #88]	; 0x58
 800ee7e:	b15e      	cbz	r6, 800ee98 <_Paint+0x9c>
 800ee80:	4668      	mov	r0, sp
 800ee82:	f7fe fe69 	bl	800db58 <GUI_ALLOC_UnlockH>
 800ee86:	4630      	mov	r0, r6
 800ee88:	4629      	mov	r1, r5
 800ee8a:	462a      	mov	r2, r5
 800ee8c:	f7fd feb4 	bl	800cbf8 <GUI_DrawBitmap>
 800ee90:	4620      	mov	r0, r4
 800ee92:	f7fe fe53 	bl	800db3c <GUI_ALLOC_LockH>
 800ee96:	9000      	str	r0, [sp, #0]
 800ee98:	a902      	add	r1, sp, #8
 800ee9a:	9800      	ldr	r0, [sp, #0]
 800ee9c:	f7ff fb6f 	bl	800e57e <WIDGET__EFFECT_DrawDownRect>
 800eea0:	2000      	movs	r0, #0
 800eea2:	f7f8 f9ab 	bl	80071fc <WM_SetUserClipRect>
 800eea6:	9800      	ldr	r0, [sp, #0]
 800eea8:	6f81      	ldr	r1, [r0, #120]	; 0x78
 800eeaa:	2900      	cmp	r1, #0
 800eeac:	f000 8082 	beq.w	800efb4 <_Paint+0x1b8>
 800eeb0:	ac04      	add	r4, sp, #16
 800eeb2:	4620      	mov	r0, r4
 800eeb4:	f7f8 fdb8 	bl	8007a28 <WM_GetClientRect>
 800eeb8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800eebc:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800eec0:	18d0      	adds	r0, r2, r3
 800eec2:	9b00      	ldr	r3, [sp, #0]
 800eec4:	f893 2056 	ldrb.w	r2, [r3, #86]	; 0x56
 800eec8:	1c41      	adds	r1, r0, #1
 800eeca:	1888      	adds	r0, r1, r2
 800eecc:	f8ad 0010 	strh.w	r0, [sp, #16]
 800eed0:	2002      	movs	r0, #2
 800eed2:	f7fd fa35 	bl	800c340 <GUI_SetTextMode>
 800eed6:	9900      	ldr	r1, [sp, #0]
 800eed8:	6c48      	ldr	r0, [r1, #68]	; 0x44
 800eeda:	f7fc fc9f 	bl	800b81c <LCD_SetColor>
 800eede:	9b00      	ldr	r3, [sp, #0]
 800eee0:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800eee2:	f7fd fa37 	bl	800c354 <GUI_SetFont>
 800eee6:	9a00      	ldr	r2, [sp, #0]
 800eee8:	6f90      	ldr	r0, [r2, #120]	; 0x78
 800eeea:	f7fe fe27 	bl	800db3c <GUI_ALLOC_LockH>
 800eeee:	9b00      	ldr	r3, [sp, #0]
 800eef0:	9001      	str	r0, [sp, #4]
 800eef2:	4621      	mov	r1, r4
 800eef4:	f9b3 2054 	ldrsh.w	r2, [r3, #84]	; 0x54
 800eef8:	f7fe f817 	bl	800cf2a <GUI_DispStringInRect>
 800eefc:	9800      	ldr	r0, [sp, #0]
 800eefe:	8e41      	ldrh	r1, [r0, #50]	; 0x32
 800ef00:	07cb      	lsls	r3, r1, #31
 800ef02:	d554      	bpl.n	800efae <_Paint+0x1b2>
 800ef04:	9801      	ldr	r0, [sp, #4]
 800ef06:	f7fd fbf1 	bl	800c6ec <GUI_GetStringDistX>
 800ef0a:	4605      	mov	r5, r0
 800ef0c:	f7fd fc06 	bl	800c71c <GUI_GetFontSizeY>
 800ef10:	4603      	mov	r3, r0
 800ef12:	e894 0003 	ldmia.w	r4, {r0, r1}
 800ef16:	aa08      	add	r2, sp, #32
 800ef18:	e902 0003 	stmdb	r2, {r0, r1}
 800ef1c:	9900      	ldr	r1, [sp, #0]
 800ef1e:	f8b1 2054 	ldrh.w	r2, [r1, #84]	; 0x54
 800ef22:	f022 0003 	bic.w	r0, r2, #3
 800ef26:	b200      	sxth	r0, r0
 800ef28:	2804      	cmp	r0, #4
 800ef2a:	d009      	beq.n	800ef40 <_Paint+0x144>
 800ef2c:	280c      	cmp	r0, #12
 800ef2e:	d10c      	bne.n	800ef4a <_Paint+0x14e>
 800ef30:	f9bd 4016 	ldrsh.w	r4, [sp, #22]
 800ef34:	1ae0      	subs	r0, r4, r3
 800ef36:	3001      	adds	r0, #1
 800ef38:	2402      	movs	r4, #2
 800ef3a:	fb90 f0f4 	sdiv	r0, r0, r4
 800ef3e:	e002      	b.n	800ef46 <_Paint+0x14a>
 800ef40:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 800ef44:	1ac0      	subs	r0, r0, r3
 800ef46:	f8ad 001a 	strh.w	r0, [sp, #26]
 800ef4a:	f022 020c 	bic.w	r2, r2, #12
 800ef4e:	b212      	sxth	r2, r2
 800ef50:	2a01      	cmp	r2, #1
 800ef52:	d00d      	beq.n	800ef70 <_Paint+0x174>
 800ef54:	2a02      	cmp	r2, #2
 800ef56:	d116      	bne.n	800ef86 <_Paint+0x18a>
 800ef58:	f9bd 4014 	ldrsh.w	r4, [sp, #20]
 800ef5c:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 800ef60:	1a20      	subs	r0, r4, r0
 800ef62:	1b40      	subs	r0, r0, r5
 800ef64:	fb90 f2f2 	sdiv	r2, r0, r2
 800ef68:	f8bd 0018 	ldrh.w	r0, [sp, #24]
 800ef6c:	1810      	adds	r0, r2, r0
 800ef6e:	e008      	b.n	800ef82 <_Paint+0x186>
 800ef70:	f8bd 0014 	ldrh.w	r0, [sp, #20]
 800ef74:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 800ef78:	1882      	adds	r2, r0, r2
 800ef7a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 800ef7e:	1a12      	subs	r2, r2, r0
 800ef80:	1b50      	subs	r0, r2, r5
 800ef82:	f8ad 0018 	strh.w	r0, [sp, #24]
 800ef86:	f8bd 2018 	ldrh.w	r2, [sp, #24]
 800ef8a:	1e50      	subs	r0, r2, #1
 800ef8c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800ef90:	1945      	adds	r5, r0, r5
 800ef92:	1e50      	subs	r0, r2, #1
 800ef94:	18c3      	adds	r3, r0, r3
 800ef96:	6c88      	ldr	r0, [r1, #72]	; 0x48
 800ef98:	f8ad 501c 	strh.w	r5, [sp, #28]
 800ef9c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800efa0:	f7fc fc3c 	bl	800b81c <LCD_SetColor>
 800efa4:	a806      	add	r0, sp, #24
 800efa6:	f04f 31ff 	mov.w	r1, #4294967295
 800efaa:	f002 fed1 	bl	8011d50 <GUI_DrawFocusRect>
 800efae:	a801      	add	r0, sp, #4
 800efb0:	f7fe fdd2 	bl	800db58 <GUI_ALLOC_UnlockH>
 800efb4:	4668      	mov	r0, sp
 800efb6:	f7fe fdcf 	bl	800db58 <GUI_ALLOC_UnlockH>
 800efba:	b008      	add	sp, #32
 800efbc:	bd70      	pop	{r4, r5, r6, pc}

0800efbe <_Create>:
 800efbe:	4770      	bx	lr

0800efc0 <_Paint>:
 800efc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800efc4:	b088      	sub	sp, #32
 800efc6:	4604      	mov	r4, r0
 800efc8:	f7fe fdb8 	bl	800db3c <GUI_ALLOC_LockH>
 800efcc:	f8b0 8032 	ldrh.w	r8, [r0, #50]	; 0x32
 800efd0:	9000      	str	r0, [sp, #0]
 800efd2:	4620      	mov	r0, r4
 800efd4:	f7f8 f8ac 	bl	8007130 <WM__IsEnabled>
 800efd8:	9b00      	ldr	r3, [sp, #0]
 800efda:	f3c8 2500 	ubfx	r5, r8, #8, #1
 800efde:	af02      	add	r7, sp, #8
 800efe0:	2800      	cmp	r0, #0
 800efe2:	bf14      	ite	ne
 800efe4:	462e      	movne	r6, r5
 800efe6:	2602      	moveq	r6, #2
 800efe8:	6d58      	ldr	r0, [r3, #84]	; 0x54
 800efea:	f7fd f9b3 	bl	800c354 <GUI_SetFont>
 800efee:	4638      	mov	r0, r7
 800eff0:	f7fd fb96 	bl	800c720 <GUI_GetClientRect>
 800eff4:	e897 0003 	ldmia.w	r7, {r0, r1}
 800eff8:	aa04      	add	r2, sp, #16
 800effa:	e882 0003 	stmia.w	r2, {r0, r1}
 800effe:	9800      	ldr	r0, [sp, #0]
 800f000:	b91d      	cbnz	r5, 800f00a <_Paint+0x4a>
 800f002:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800f004:	6850      	ldr	r0, [r2, #4]
 800f006:	4780      	blx	r0
 800f008:	e003      	b.n	800f012 <_Paint+0x52>
 800f00a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800f00c:	694b      	ldr	r3, [r1, #20]
 800f00e:	b123      	cbz	r3, 800f01a <_Paint+0x5a>
 800f010:	4798      	blx	r3
 800f012:	9900      	ldr	r1, [sp, #0]
 800f014:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 800f016:	681a      	ldr	r2, [r3, #0]
 800f018:	e00d      	b.n	800f036 <_Paint+0x76>
 800f01a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800f01c:	f7fc fbfe 	bl	800b81c <LCD_SetColor>
 800f020:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800f024:	f9bd 000a 	ldrsh.w	r0, [sp, #10]
 800f028:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 800f02c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800f030:	f7ff f828 	bl	800e084 <GUI_DrawRect>
 800f034:	2201      	movs	r2, #1
 800f036:	a804      	add	r0, sp, #16
 800f038:	4601      	mov	r1, r0
 800f03a:	f7fc fc91 	bl	800b960 <GUI__ReduceRect>
 800f03e:	9a00      	ldr	r2, [sp, #0]
 800f040:	eb02 0086 	add.w	r0, r2, r6, lsl #2
 800f044:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800f046:	f7fc fbe1 	bl	800b80c <LCD_SetBkColor>
 800f04a:	9900      	ldr	r1, [sp, #0]
 800f04c:	eb01 0386 	add.w	r3, r1, r6, lsl #2
 800f050:	6c18      	ldr	r0, [r3, #64]	; 0x40
 800f052:	f7fc fbe3 	bl	800b81c <LCD_SetColor>
 800f056:	a804      	add	r0, sp, #16
 800f058:	f7f8 f8d0 	bl	80071fc <WM_SetUserClipRect>
 800f05c:	f7fe f95c 	bl	800d318 <GUI_Clear>
 800f060:	2e02      	cmp	r6, #2
 800f062:	9e00      	ldr	r6, [sp, #0]
 800f064:	d005      	beq.n	800f072 <_Paint+0xb2>
 800f066:	6f30      	ldr	r0, [r6, #112]	; 0x70
 800f068:	2800      	cmp	r0, #0
 800f06a:	bf14      	ite	ne
 800f06c:	462b      	movne	r3, r5
 800f06e:	2300      	moveq	r3, #0
 800f070:	e004      	b.n	800f07c <_Paint+0xbc>
 800f072:	6f72      	ldr	r2, [r6, #116]	; 0x74
 800f074:	2a00      	cmp	r2, #0
 800f076:	bf14      	ite	ne
 800f078:	2302      	movne	r3, #2
 800f07a:	2300      	moveq	r3, #0
 800f07c:	ae08      	add	r6, sp, #32
 800f07e:	4668      	mov	r0, sp
 800f080:	f856 1d20 	ldr.w	r1, [r6, #-32]!
 800f084:	eb01 0283 	add.w	r2, r1, r3, lsl #2
 800f088:	6ed6      	ldr	r6, [r2, #108]	; 0x6c
 800f08a:	f7fe fd65 	bl	800db58 <GUI_ALLOC_UnlockH>
 800f08e:	2200      	movs	r2, #0
 800f090:	4613      	mov	r3, r2
 800f092:	4630      	mov	r0, r6
 800f094:	4621      	mov	r1, r4
 800f096:	f7ff fd06 	bl	800eaa6 <GUI_DRAW__Draw>
 800f09a:	4620      	mov	r0, r4
 800f09c:	f7fe fd4e 	bl	800db3c <GUI_ALLOC_LockH>
 800f0a0:	6e83      	ldr	r3, [r0, #104]	; 0x68
 800f0a2:	9000      	str	r0, [sp, #0]
 800f0a4:	b31b      	cbz	r3, 800f0ee <_Paint+0x12e>
 800f0a6:	a804      	add	r0, sp, #16
 800f0a8:	c803      	ldmia	r0, {r0, r1}
 800f0aa:	ac06      	add	r4, sp, #24
 800f0ac:	e884 0003 	stmia.w	r4, {r0, r1}
 800f0b0:	b125      	cbz	r5, 800f0bc <_Paint+0xfc>
 800f0b2:	2101      	movs	r1, #1
 800f0b4:	4620      	mov	r0, r4
 800f0b6:	460a      	mov	r2, r1
 800f0b8:	f7fd fad0 	bl	800c65c <GUI_MoveRect>
 800f0bc:	9a00      	ldr	r2, [sp, #0]
 800f0be:	4620      	mov	r0, r4
 800f0c0:	f9b2 105e 	ldrsh.w	r1, [r2, #94]	; 0x5e
 800f0c4:	f9b2 2060 	ldrsh.w	r2, [r2, #96]	; 0x60
 800f0c8:	f7fd fac8 	bl	800c65c <GUI_MoveRect>
 800f0cc:	2002      	movs	r0, #2
 800f0ce:	f7fd f937 	bl	800c340 <GUI_SetTextMode>
 800f0d2:	9900      	ldr	r1, [sp, #0]
 800f0d4:	6e88      	ldr	r0, [r1, #104]	; 0x68
 800f0d6:	f7fe fd31 	bl	800db3c <GUI_ALLOC_LockH>
 800f0da:	9b00      	ldr	r3, [sp, #0]
 800f0dc:	9001      	str	r0, [sp, #4]
 800f0de:	4621      	mov	r1, r4
 800f0e0:	f9b3 205c 	ldrsh.w	r2, [r3, #92]	; 0x5c
 800f0e4:	f7fd ff21 	bl	800cf2a <GUI_DispStringInRect>
 800f0e8:	a801      	add	r0, sp, #4
 800f0ea:	f7fe fd35 	bl	800db58 <GUI_ALLOC_UnlockH>
 800f0ee:	f018 0f01 	tst.w	r8, #1
 800f0f2:	d00c      	beq.n	800f10e <_Paint+0x14e>
 800f0f4:	9800      	ldr	r0, [sp, #0]
 800f0f6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800f0f8:	f7fc fb90 	bl	800b81c <LCD_SetColor>
 800f0fc:	9a00      	ldr	r2, [sp, #0]
 800f0fe:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 800f100:	6809      	ldr	r1, [r1, #0]
 800f102:	a802      	add	r0, sp, #8
 800f104:	2902      	cmp	r1, #2
 800f106:	bfb8      	it	lt
 800f108:	2102      	movlt	r1, #2
 800f10a:	f002 fe21 	bl	8011d50 <GUI_DrawFocusRect>
 800f10e:	2000      	movs	r0, #0
 800f110:	f7f8 f874 	bl	80071fc <WM_SetUserClipRect>
 800f114:	4668      	mov	r0, sp
 800f116:	f7fe fd1f 	bl	800db58 <GUI_ALLOC_UnlockH>
 800f11a:	b008      	add	sp, #32
 800f11c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f120 <WM__UpdateChildPositions>:
 800f120:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f124:	b089      	sub	sp, #36	; 0x24
 800f126:	69c4      	ldr	r4, [r0, #28]
 800f128:	9303      	str	r3, [sp, #12]
 800f12a:	468a      	mov	sl, r1
 800f12c:	4693      	mov	fp, r2
 800f12e:	2c00      	cmp	r4, #0
 800f130:	d075      	beq.n	800f21e <WM__UpdateChildPositions+0xfe>
 800f132:	4620      	mov	r0, r4
 800f134:	f7fe fd02 	bl	800db3c <GUI_ALLOC_LockH>
 800f138:	4603      	mov	r3, r0
 800f13a:	9005      	str	r0, [sp, #20]
 800f13c:	c803      	ldmia	r0, {r0, r1}
 800f13e:	aa08      	add	r2, sp, #32
 800f140:	e902 0003 	stmdb	r2, {r0, r1}
 800f144:	6a99      	ldr	r1, [r3, #40]	; 0x28
 800f146:	f8bd 8018 	ldrh.w	r8, [sp, #24]
 800f14a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800f14e:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 800f152:	f8bd 501e 	ldrh.w	r5, [sp, #30]
 800f156:	f401 7020 	and.w	r0, r1, #640	; 0x280
 800f15a:	2880      	cmp	r0, #128	; 0x80
 800f15c:	d009      	beq.n	800f172 <WM__UpdateChildPositions+0x52>
 800f15e:	f5b0 7f20 	cmp.w	r0, #640	; 0x280
 800f162:	d109      	bne.n	800f178 <WM__UpdateChildPositions+0x58>
 800f164:	9b03      	ldr	r3, [sp, #12]
 800f166:	eb0a 0908 	add.w	r9, sl, r8
 800f16a:	fa1f fe89 	uxth.w	lr, r9
 800f16e:	199f      	adds	r7, r3, r6
 800f170:	e009      	b.n	800f186 <WM__UpdateChildPositions+0x66>
 800f172:	9803      	ldr	r0, [sp, #12]
 800f174:	b287      	uxth	r7, r0
 800f176:	e001      	b.n	800f17c <WM__UpdateChildPositions+0x5c>
 800f178:	fa1f f78a 	uxth.w	r7, sl
 800f17c:	eb07 0c08 	add.w	ip, r7, r8
 800f180:	fa1f fe8c 	uxth.w	lr, ip
 800f184:	19bf      	adds	r7, r7, r6
 800f186:	f401 61a0 	and.w	r1, r1, #1280	; 0x500
 800f18a:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 800f18e:	b2bb      	uxth	r3, r7
 800f190:	d009      	beq.n	800f1a6 <WM__UpdateChildPositions+0x86>
 800f192:	f5b1 6fa0 	cmp.w	r1, #1280	; 0x500
 800f196:	d109      	bne.n	800f1ac <WM__UpdateChildPositions+0x8c>
 800f198:	9f12      	ldr	r7, [sp, #72]	; 0x48
 800f19a:	eb0b 0902 	add.w	r9, fp, r2
 800f19e:	fa1f f189 	uxth.w	r1, r9
 800f1a2:	1978      	adds	r0, r7, r5
 800f1a4:	e009      	b.n	800f1ba <WM__UpdateChildPositions+0x9a>
 800f1a6:	9912      	ldr	r1, [sp, #72]	; 0x48
 800f1a8:	b288      	uxth	r0, r1
 800f1aa:	e001      	b.n	800f1b0 <WM__UpdateChildPositions+0x90>
 800f1ac:	fa1f f08b 	uxth.w	r0, fp
 800f1b0:	eb00 0c02 	add.w	ip, r0, r2
 800f1b4:	fa1f f18c 	uxth.w	r1, ip
 800f1b8:	1940      	adds	r0, r0, r5
 800f1ba:	fa0f f98e 	sxth.w	r9, lr
 800f1be:	fa0f f888 	sxth.w	r8, r8
 800f1c2:	fa0f fc81 	sxth.w	ip, r1
 800f1c6:	b212      	sxth	r2, r2
 800f1c8:	ebb9 0108 	subs.w	r1, r9, r8
 800f1cc:	9202      	str	r2, [sp, #8]
 800f1ce:	b287      	uxth	r7, r0
 800f1d0:	ebc2 020c 	rsb	r2, r2, ip
 800f1d4:	d100      	bne.n	800f1d8 <WM__UpdateChildPositions+0xb8>
 800f1d6:	b132      	cbz	r2, 800f1e6 <WM__UpdateChildPositions+0xc6>
 800f1d8:	4620      	mov	r0, r4
 800f1da:	e88d 1008 	stmia.w	sp, {r3, ip}
 800f1de:	f7f8 fb12 	bl	8007806 <WM_MoveWindow>
 800f1e2:	e89d 1008 	ldmia.w	sp, {r3, ip}
 800f1e6:	9902      	ldr	r1, [sp, #8]
 800f1e8:	b21b      	sxth	r3, r3
 800f1ea:	b236      	sxth	r6, r6
 800f1ec:	ebc9 0903 	rsb	r9, r9, r3
 800f1f0:	ebc6 0808 	rsb	r8, r6, r8
 800f1f4:	b23f      	sxth	r7, r7
 800f1f6:	b22d      	sxth	r5, r5
 800f1f8:	1b4d      	subs	r5, r1, r5
 800f1fa:	ebcc 0e07 	rsb	lr, ip, r7
 800f1fe:	eb19 0108 	adds.w	r1, r9, r8
 800f202:	eb0e 0205 	add.w	r2, lr, r5
 800f206:	d100      	bne.n	800f20a <WM__UpdateChildPositions+0xea>
 800f208:	b112      	cbz	r2, 800f210 <WM__UpdateChildPositions+0xf0>
 800f20a:	4620      	mov	r0, r4
 800f20c:	f7f8 f9c5 	bl	800759a <WM_ResizeWindow>
 800f210:	a808      	add	r0, sp, #32
 800f212:	f850 4d0c 	ldr.w	r4, [r0, #-12]!
 800f216:	6a24      	ldr	r4, [r4, #32]
 800f218:	f7fe fc9e 	bl	800db58 <GUI_ALLOC_UnlockH>
 800f21c:	e787      	b.n	800f12e <WM__UpdateChildPositions+0xe>
 800f21e:	b009      	add	sp, #36	; 0x24
 800f220:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f224 <WM__SendMessageNoPara>:
 800f224:	b530      	push	{r4, r5, lr}
 800f226:	b085      	sub	sp, #20
 800f228:	4604      	mov	r4, r0
 800f22a:	2210      	movs	r2, #16
 800f22c:	460d      	mov	r5, r1
 800f22e:	4668      	mov	r0, sp
 800f230:	2100      	movs	r1, #0
 800f232:	f003 fd2f 	bl	8012c94 <memset>
 800f236:	4620      	mov	r0, r4
 800f238:	f7fe fc76 	bl	800db28 <GUI_ALLOC_h2p>
 800f23c:	6903      	ldr	r3, [r0, #16]
 800f23e:	b11b      	cbz	r3, 800f248 <WM__SendMessageNoPara+0x24>
 800f240:	9401      	str	r4, [sp, #4]
 800f242:	9500      	str	r5, [sp, #0]
 800f244:	4668      	mov	r0, sp
 800f246:	4798      	blx	r3
 800f248:	b005      	add	sp, #20
 800f24a:	bd30      	pop	{r4, r5, pc}

0800f24c <WM__Screen2Client>:
 800f24c:	f9b0 3000 	ldrsh.w	r3, [r0]
 800f250:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800f254:	4608      	mov	r0, r1
 800f256:	4252      	negs	r2, r2
 800f258:	4259      	negs	r1, r3
 800f25a:	f7fd b9ff 	b.w	800c65c <GUI_MoveRect>

0800f25e <WM__GetPrevSibling>:
 800f25e:	b538      	push	{r3, r4, r5, lr}
 800f260:	4605      	mov	r5, r0
 800f262:	f000 f82d 	bl	800f2c0 <WM__GetFirstSibling>
 800f266:	4604      	mov	r4, r0
 800f268:	b154      	cbz	r4, 800f280 <WM__GetPrevSibling+0x22>
 800f26a:	42ac      	cmp	r4, r5
 800f26c:	d007      	beq.n	800f27e <WM__GetPrevSibling+0x20>
 800f26e:	4620      	mov	r0, r4
 800f270:	f7fe fc5a 	bl	800db28 <GUI_ALLOC_h2p>
 800f274:	6a03      	ldr	r3, [r0, #32]
 800f276:	42ab      	cmp	r3, r5
 800f278:	d002      	beq.n	800f280 <WM__GetPrevSibling+0x22>
 800f27a:	461c      	mov	r4, r3
 800f27c:	e7f4      	b.n	800f268 <WM__GetPrevSibling+0xa>
 800f27e:	2400      	movs	r4, #0
 800f280:	4620      	mov	r0, r4
 800f282:	bd38      	pop	{r3, r4, r5, pc}

0800f284 <WM__GetLastSibling>:
 800f284:	b510      	push	{r4, lr}
 800f286:	4604      	mov	r4, r0
 800f288:	b130      	cbz	r0, 800f298 <WM__GetLastSibling+0x14>
 800f28a:	4620      	mov	r0, r4
 800f28c:	f7fe fc4c 	bl	800db28 <GUI_ALLOC_h2p>
 800f290:	6a03      	ldr	r3, [r0, #32]
 800f292:	b10b      	cbz	r3, 800f298 <WM__GetLastSibling+0x14>
 800f294:	461c      	mov	r4, r3
 800f296:	e7f8      	b.n	800f28a <WM__GetLastSibling+0x6>
 800f298:	4620      	mov	r0, r4
 800f29a:	bd10      	pop	{r4, pc}

0800f29c <WM__GetFocussedChild>:
 800f29c:	b538      	push	{r3, r4, r5, lr}
 800f29e:	4d06      	ldr	r5, [pc, #24]	; (800f2b8 <WM__GetFocussedChild+0x1c>)
 800f2a0:	4c06      	ldr	r4, [pc, #24]	; (800f2bc <WM__GetFocussedChild+0x20>)
 800f2a2:	682b      	ldr	r3, [r5, #0]
 800f2a4:	4601      	mov	r1, r0
 800f2a6:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800f2aa:	f002 ffce 	bl	801224a <WM__IsChild>
 800f2ae:	b110      	cbz	r0, 800f2b6 <WM__GetFocussedChild+0x1a>
 800f2b0:	6828      	ldr	r0, [r5, #0]
 800f2b2:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 800f2b6:	bd38      	pop	{r3, r4, r5, pc}
 800f2b8:	2000e62c 	.word	0x2000e62c
 800f2bc:	2000e61c 	.word	0x2000e61c

0800f2c0 <WM__GetFirstSibling>:
 800f2c0:	b508      	push	{r3, lr}
 800f2c2:	f7f8 fb30 	bl	8007926 <WM_GetParent>
 800f2c6:	b118      	cbz	r0, 800f2d0 <WM__GetFirstSibling+0x10>
 800f2c8:	f7fe fc2e 	bl	800db28 <GUI_ALLOC_h2p>
 800f2cc:	69c0      	ldr	r0, [r0, #28]
 800f2ce:	bd08      	pop	{r3, pc}
 800f2d0:	bd08      	pop	{r3, pc}
	...

0800f2d4 <WM_ValidateWindow>:
 800f2d4:	b507      	push	{r0, r1, r2, lr}
 800f2d6:	b178      	cbz	r0, 800f2f8 <WM_ValidateWindow+0x24>
 800f2d8:	f7fe fc30 	bl	800db3c <GUI_ALLOC_LockH>
 800f2dc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f2de:	9001      	str	r0, [sp, #4]
 800f2e0:	069a      	lsls	r2, r3, #26
 800f2e2:	d506      	bpl.n	800f2f2 <WM_ValidateWindow+0x1e>
 800f2e4:	f023 0120 	bic.w	r1, r3, #32
 800f2e8:	6281      	str	r1, [r0, #40]	; 0x28
 800f2ea:	4804      	ldr	r0, [pc, #16]	; (800f2fc <WM_ValidateWindow+0x28>)
 800f2ec:	8802      	ldrh	r2, [r0, #0]
 800f2ee:	1e53      	subs	r3, r2, #1
 800f2f0:	8003      	strh	r3, [r0, #0]
 800f2f2:	a801      	add	r0, sp, #4
 800f2f4:	f7fe fc30 	bl	800db58 <GUI_ALLOC_UnlockH>
 800f2f8:	bd0e      	pop	{r1, r2, r3, pc}
 800f2fa:	bf00      	nop
 800f2fc:	2000e624 	.word	0x2000e624

0800f300 <WM__IsInModalArea>:
 800f300:	4b12      	ldr	r3, [pc, #72]	; (800f34c <WM__IsInModalArea+0x4c>)
 800f302:	6819      	ldr	r1, [r3, #0]
 800f304:	2900      	cmp	r1, #0
 800f306:	b570      	push	{r4, r5, r6, lr}
 800f308:	4604      	mov	r4, r0
 800f30a:	da0f      	bge.n	800f32c <WM__IsInModalArea+0x2c>
 800f30c:	4e10      	ldr	r6, [pc, #64]	; (800f350 <WM__IsInModalArea+0x50>)
 800f30e:	4d11      	ldr	r5, [pc, #68]	; (800f354 <WM__IsInModalArea+0x54>)
 800f310:	6830      	ldr	r0, [r6, #0]
 800f312:	eb05 03c0 	add.w	r3, r5, r0, lsl #3
 800f316:	4620      	mov	r0, r4
 800f318:	6859      	ldr	r1, [r3, #4]
 800f31a:	f7f7 ff12 	bl	8007142 <WM__IsAncestor>
 800f31e:	6831      	ldr	r1, [r6, #0]
 800f320:	eb05 05c1 	add.w	r5, r5, r1, lsl #3
 800f324:	686a      	ldr	r2, [r5, #4]
 800f326:	686b      	ldr	r3, [r5, #4]
 800f328:	b942      	cbnz	r2, 800f33c <WM__IsInModalArea+0x3c>
 800f32a:	e00c      	b.n	800f346 <WM__IsInModalArea+0x46>
 800f32c:	4a0a      	ldr	r2, [pc, #40]	; (800f358 <WM__IsInModalArea+0x58>)
 800f32e:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800f332:	f7f7 ff06 	bl	8007142 <WM__IsAncestor>
 800f336:	2800      	cmp	r0, #0
 800f338:	d1e8      	bne.n	800f30c <WM__IsInModalArea+0xc>
 800f33a:	bd70      	pop	{r4, r5, r6, pc}
 800f33c:	b918      	cbnz	r0, 800f346 <WM__IsInModalArea+0x46>
 800f33e:	1ae1      	subs	r1, r4, r3
 800f340:	4248      	negs	r0, r1
 800f342:	4148      	adcs	r0, r1
 800f344:	bd70      	pop	{r4, r5, r6, pc}
 800f346:	2001      	movs	r0, #1
 800f348:	bd70      	pop	{r4, r5, r6, pc}
 800f34a:	bf00      	nop
 800f34c:	200002a4 	.word	0x200002a4
 800f350:	2000e62c 	.word	0x2000e62c
 800f354:	2000e768 	.word	0x2000e768
 800f358:	2000e60c 	.word	0x2000e60c

0800f35c <WM__SendPIDMessage>:
 800f35c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800f35e:	4605      	mov	r5, r0
 800f360:	460c      	mov	r4, r1
 800f362:	c90f      	ldmia	r1, {r0, r1, r2, r3}
 800f364:	ae04      	add	r6, sp, #16
 800f366:	e906 000f 	stmdb	r6, {r0, r1, r2, r3}
 800f36a:	230d      	movs	r3, #13
 800f36c:	9502      	str	r5, [sp, #8]
 800f36e:	9300      	str	r3, [sp, #0]
 800f370:	462e      	mov	r6, r5
 800f372:	4630      	mov	r0, r6
 800f374:	f7f8 fa54 	bl	8007820 <WM_IsWindow>
 800f378:	b150      	cbz	r0, 800f390 <WM__SendPIDMessage+0x34>
 800f37a:	4630      	mov	r0, r6
 800f37c:	f7f8 fad3 	bl	8007926 <WM_GetParent>
 800f380:	4606      	mov	r6, r0
 800f382:	2800      	cmp	r0, #0
 800f384:	d0f5      	beq.n	800f372 <WM__SendPIDMessage+0x16>
 800f386:	4669      	mov	r1, sp
 800f388:	9403      	str	r4, [sp, #12]
 800f38a:	f002 ff51 	bl	8012230 <WM__SendMessageIfEnabled>
 800f38e:	e7f0      	b.n	800f372 <WM__SendPIDMessage+0x16>
 800f390:	4628      	mov	r0, r5
 800f392:	4621      	mov	r1, r4
 800f394:	f002 ff4c 	bl	8012230 <WM__SendMessageIfEnabled>
 800f398:	bd7f      	pop	{r0, r1, r2, r3, r4, r5, r6, pc}

0800f39a <WM__SendTouchMessage>:
 800f39a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f39c:	68cc      	ldr	r4, [r1, #12]
 800f39e:	4606      	mov	r6, r0
 800f3a0:	460d      	mov	r5, r1
 800f3a2:	b194      	cbz	r4, 800f3ca <WM__SendTouchMessage+0x30>
 800f3a4:	f7fe fbca 	bl	800db3c <GUI_ALLOC_LockH>
 800f3a8:	ab02      	add	r3, sp, #8
 800f3aa:	4602      	mov	r2, r0
 800f3ac:	f843 0d04 	str.w	r0, [r3, #-4]!
 800f3b0:	6821      	ldr	r1, [r4, #0]
 800f3b2:	f9b0 0000 	ldrsh.w	r0, [r0]
 800f3b6:	1a08      	subs	r0, r1, r0
 800f3b8:	f9b2 1002 	ldrsh.w	r1, [r2, #2]
 800f3bc:	6862      	ldr	r2, [r4, #4]
 800f3be:	6020      	str	r0, [r4, #0]
 800f3c0:	1a50      	subs	r0, r2, r1
 800f3c2:	6060      	str	r0, [r4, #4]
 800f3c4:	4618      	mov	r0, r3
 800f3c6:	f7fe fbc7 	bl	800db58 <GUI_ALLOC_UnlockH>
 800f3ca:	4630      	mov	r0, r6
 800f3cc:	4629      	mov	r1, r5
 800f3ce:	f7ff ffc5 	bl	800f35c <WM__SendPIDMessage>
 800f3d2:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

0800f3d4 <WM_HandlePID>:
 800f3d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f3d6:	240c      	movs	r4, #12
 800f3d8:	b097      	sub	sp, #92	; 0x5c
 800f3da:	2100      	movs	r1, #0
 800f3dc:	4622      	mov	r2, r4
 800f3de:	a806      	add	r0, sp, #24
 800f3e0:	f003 fc58 	bl	8012c94 <memset>
 800f3e4:	f7fd f908 	bl	800c5f8 <GUI_PID_IsEmpty>
 800f3e8:	b108      	cbz	r0, 800f3ee <WM_HandlePID+0x1a>
 800f3ea:	2400      	movs	r4, #0
 800f3ec:	e19b      	b.n	800f726 <WM_HandlePID+0x352>
 800f3ee:	a809      	add	r0, sp, #36	; 0x24
 800f3f0:	f7fd f888 	bl	800c504 <GUI_PID_GetState>
 800f3f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f3f6:	1c5a      	adds	r2, r3, #1
 800f3f8:	d111      	bne.n	800f41e <WM_HandlePID+0x4a>
 800f3fa:	980a      	ldr	r0, [sp, #40]	; 0x28
 800f3fc:	1c43      	adds	r3, r0, #1
 800f3fe:	d11d      	bne.n	800f43c <WM_HandlePID+0x68>
 800f400:	4b8a      	ldr	r3, [pc, #552]	; (800f62c <WM_HandlePID+0x258>)
 800f402:	4a8b      	ldr	r2, [pc, #556]	; (800f630 <WM_HandlePID+0x25c>)
 800f404:	6819      	ldr	r1, [r3, #0]
 800f406:	434c      	muls	r4, r1
 800f408:	1913      	adds	r3, r2, r4
 800f40a:	f89d 102c 	ldrb.w	r1, [sp, #44]	; 0x2c
 800f40e:	7a18      	ldrb	r0, [r3, #8]
 800f410:	4288      	cmp	r0, r1
 800f412:	d0ea      	beq.n	800f3ea <WM_HandlePID+0x16>
 800f414:	5914      	ldr	r4, [r2, r4]
 800f416:	685a      	ldr	r2, [r3, #4]
 800f418:	9409      	str	r4, [sp, #36]	; 0x24
 800f41a:	920a      	str	r2, [sp, #40]	; 0x28
 800f41c:	e00e      	b.n	800f43c <WM_HandlePID+0x68>
 800f41e:	2b00      	cmp	r3, #0
 800f420:	db0c      	blt.n	800f43c <WM_HandlePID+0x68>
 800f422:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800f424:	2a00      	cmp	r2, #0
 800f426:	db09      	blt.n	800f43c <WM_HandlePID+0x68>
 800f428:	4982      	ldr	r1, [pc, #520]	; (800f634 <WM_HandlePID+0x260>)
 800f42a:	f9b1 0000 	ldrsh.w	r0, [r1]
 800f42e:	181c      	adds	r4, r3, r0
 800f430:	4b81      	ldr	r3, [pc, #516]	; (800f638 <WM_HandlePID+0x264>)
 800f432:	9409      	str	r4, [sp, #36]	; 0x24
 800f434:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f438:	1852      	adds	r2, r2, r1
 800f43a:	920a      	str	r2, [sp, #40]	; 0x28
 800f43c:	a804      	add	r0, sp, #16
 800f43e:	f000 fa51 	bl	800f8e4 <WM__AddCriticalHandle>
 800f442:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 800f446:	4c79      	ldr	r4, [pc, #484]	; (800f62c <WM_HandlePID+0x258>)
 800f448:	2b01      	cmp	r3, #1
 800f44a:	bf98      	it	ls
 800f44c:	6023      	strls	r3, [r4, #0]
 800f44e:	6820      	ldr	r0, [r4, #0]
 800f450:	a901      	add	r1, sp, #4
 800f452:	aa02      	add	r2, sp, #8
 800f454:	f7fc ffca 	bl	800c3ec <GUI_GetLayerPosEx>
 800f458:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f45a:	9901      	ldr	r1, [sp, #4]
 800f45c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f45e:	9a02      	ldr	r2, [sp, #8]
 800f460:	1a40      	subs	r0, r0, r1
 800f462:	1a99      	subs	r1, r3, r2
 800f464:	6823      	ldr	r3, [r4, #0]
 800f466:	4c72      	ldr	r4, [pc, #456]	; (800f630 <WM_HandlePID+0x25c>)
 800f468:	9009      	str	r0, [sp, #36]	; 0x24
 800f46a:	220c      	movs	r2, #12
 800f46c:	435a      	muls	r2, r3
 800f46e:	18a3      	adds	r3, r4, r2
 800f470:	58a4      	ldr	r4, [r4, r2]
 800f472:	910a      	str	r1, [sp, #40]	; 0x28
 800f474:	4284      	cmp	r4, r0
 800f476:	d108      	bne.n	800f48a <WM_HandlePID+0xb6>
 800f478:	685a      	ldr	r2, [r3, #4]
 800f47a:	428a      	cmp	r2, r1
 800f47c:	d105      	bne.n	800f48a <WM_HandlePID+0xb6>
 800f47e:	7a1c      	ldrb	r4, [r3, #8]
 800f480:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 800f484:	429c      	cmp	r4, r3
 800f486:	f000 814a 	beq.w	800f71e <WM_HandlePID+0x34a>
 800f48a:	4d6c      	ldr	r5, [pc, #432]	; (800f63c <WM_HandlePID+0x268>)
 800f48c:	f89d 202d 	ldrb.w	r2, [sp, #45]	; 0x2d
 800f490:	f002 fcb4 	bl	8011dfc <GUI_CURSOR_SetPositionEx>
 800f494:	682e      	ldr	r6, [r5, #0]
 800f496:	b116      	cbz	r6, 800f49e <WM_HandlePID+0xca>
 800f498:	a809      	add	r0, sp, #36	; 0x24
 800f49a:	2100      	movs	r1, #0
 800f49c:	47b0      	blx	r6
 800f49e:	4963      	ldr	r1, [pc, #396]	; (800f62c <WM_HandlePID+0x258>)
 800f4a0:	4a67      	ldr	r2, [pc, #412]	; (800f640 <WM_HandlePID+0x26c>)
 800f4a2:	6808      	ldr	r0, [r1, #0]
 800f4a4:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 800f4a8:	b918      	cbnz	r0, 800f4b2 <WM_HandlePID+0xde>
 800f4aa:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f4ac:	990a      	ldr	r1, [sp, #40]	; 0x28
 800f4ae:	f000 f9d3 	bl	800f858 <WM_Screen2hWin>
 800f4b2:	4c64      	ldr	r4, [pc, #400]	; (800f644 <WM_HandlePID+0x270>)
 800f4b4:	9005      	str	r0, [sp, #20]
 800f4b6:	6823      	ldr	r3, [r4, #0]
 800f4b8:	b113      	cbz	r3, 800f4c0 <WM_HandlePID+0xec>
 800f4ba:	9905      	ldr	r1, [sp, #20]
 800f4bc:	a809      	add	r0, sp, #36	; 0x24
 800f4be:	4798      	blx	r3
 800f4c0:	4d5a      	ldr	r5, [pc, #360]	; (800f62c <WM_HandlePID+0x258>)
 800f4c2:	4c61      	ldr	r4, [pc, #388]	; (800f648 <WM_HandlePID+0x274>)
 800f4c4:	682e      	ldr	r6, [r5, #0]
 800f4c6:	eb04 00c6 	add.w	r0, r4, r6, lsl #3
 800f4ca:	6842      	ldr	r2, [r0, #4]
 800f4cc:	9905      	ldr	r1, [sp, #20]
 800f4ce:	b302      	cbz	r2, 800f512 <WM_HandlePID+0x13e>
 800f4d0:	428a      	cmp	r2, r1
 800f4d2:	d01e      	beq.n	800f512 <WM_HandlePID+0x13e>
 800f4d4:	6840      	ldr	r0, [r0, #4]
 800f4d6:	f7ff ff13 	bl	800f300 <WM__IsInModalArea>
 800f4da:	b1d0      	cbz	r0, 800f512 <WM_HandlePID+0x13e>
 800f4dc:	682b      	ldr	r3, [r5, #0]
 800f4de:	eb04 06c3 	add.w	r6, r4, r3, lsl #3
 800f4e2:	6870      	ldr	r0, [r6, #4]
 800f4e4:	f7f7 fe24 	bl	8007130 <WM__IsEnabled>
 800f4e8:	b198      	cbz	r0, 800f512 <WM_HandlePID+0x13e>
 800f4ea:	a809      	add	r0, sp, #36	; 0x24
 800f4ec:	c807      	ldmia	r0, {r0, r1, r2}
 800f4ee:	ab06      	add	r3, sp, #24
 800f4f0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800f4f4:	6829      	ldr	r1, [r5, #0]
 800f4f6:	9315      	str	r3, [sp, #84]	; 0x54
 800f4f8:	eb04 06c1 	add.w	r6, r4, r1, lsl #3
 800f4fc:	2212      	movs	r2, #18
 800f4fe:	6870      	ldr	r0, [r6, #4]
 800f500:	9212      	str	r2, [sp, #72]	; 0x48
 800f502:	a912      	add	r1, sp, #72	; 0x48
 800f504:	f7ff ff49 	bl	800f39a <WM__SendTouchMessage>
 800f508:	682d      	ldr	r5, [r5, #0]
 800f50a:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 800f50e:	2300      	movs	r3, #0
 800f510:	6063      	str	r3, [r4, #4]
 800f512:	9805      	ldr	r0, [sp, #20]
 800f514:	f7ff fef4 	bl	800f300 <WM__IsInModalArea>
 800f518:	b908      	cbnz	r0, 800f51e <WM_HandlePID+0x14a>
 800f51a:	2400      	movs	r4, #0
 800f51c:	e0ef      	b.n	800f6fe <WM_HandlePID+0x32a>
 800f51e:	4e43      	ldr	r6, [pc, #268]	; (800f62c <WM_HandlePID+0x258>)
 800f520:	4a49      	ldr	r2, [pc, #292]	; (800f648 <WM_HandlePID+0x274>)
 800f522:	6830      	ldr	r0, [r6, #0]
 800f524:	9905      	ldr	r1, [sp, #20]
 800f526:	4c42      	ldr	r4, [pc, #264]	; (800f630 <WM_HandlePID+0x25c>)
 800f528:	eb02 05c0 	add.w	r5, r2, r0, lsl #3
 800f52c:	6069      	str	r1, [r5, #4]
 800f52e:	250c      	movs	r5, #12
 800f530:	fb05 4300 	mla	r3, r5, r0, r4
 800f534:	f89d 102c 	ldrb.w	r1, [sp, #44]	; 0x2c
 800f538:	7a18      	ldrb	r0, [r3, #8]
 800f53a:	4288      	cmp	r0, r1
 800f53c:	d05a      	beq.n	800f5f4 <WM_HandlePID+0x220>
 800f53e:	9a05      	ldr	r2, [sp, #20]
 800f540:	2a00      	cmp	r2, #0
 800f542:	d057      	beq.n	800f5f4 <WM_HandlePID+0x220>
 800f544:	9805      	ldr	r0, [sp, #20]
 800f546:	f7fe faf9 	bl	800db3c <GUI_ALLOC_LockH>
 800f54a:	6831      	ldr	r1, [r6, #0]
 800f54c:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 800f550:	9003      	str	r0, [sp, #12]
 800f552:	fb05 4201 	mla	r2, r5, r1, r4
 800f556:	f88d 3044 	strb.w	r3, [sp, #68]	; 0x44
 800f55a:	7a13      	ldrb	r3, [r2, #8]
 800f55c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f55e:	f88d 3045 	strb.w	r3, [sp, #69]	; 0x45
 800f562:	f9b0 1000 	ldrsh.w	r1, [r0]
 800f566:	f9b0 0002 	ldrsh.w	r0, [r0, #2]
 800f56a:	1a53      	subs	r3, r2, r1
 800f56c:	990a      	ldr	r1, [sp, #40]	; 0x28
 800f56e:	930f      	str	r3, [sp, #60]	; 0x3c
 800f570:	1a0a      	subs	r2, r1, r0
 800f572:	eb0d 0005 	add.w	r0, sp, r5
 800f576:	9210      	str	r2, [sp, #64]	; 0x40
 800f578:	f7fe faee 	bl	800db58 <GUI_ALLOC_UnlockH>
 800f57c:	6836      	ldr	r6, [r6, #0]
 800f57e:	2011      	movs	r0, #17
 800f580:	fb05 4506 	mla	r5, r5, r6, r4
 800f584:	9012      	str	r0, [sp, #72]	; 0x48
 800f586:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800f58a:	ac0c      	add	r4, sp, #48	; 0x30
 800f58c:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800f590:	f89d 102c 	ldrb.w	r1, [sp, #44]	; 0x2c
 800f594:	f89d 4020 	ldrb.w	r4, [sp, #32]
 800f598:	7229      	strb	r1, [r5, #8]
 800f59a:	ab0f      	add	r3, sp, #60	; 0x3c
 800f59c:	9315      	str	r3, [sp, #84]	; 0x54
 800f59e:	4d2b      	ldr	r5, [pc, #172]	; (800f64c <WM_HandlePID+0x278>)
 800f5a0:	b124      	cbz	r4, 800f5ac <WM_HandlePID+0x1d8>
 800f5a2:	eb05 03c6 	add.w	r3, r5, r6, lsl #3
 800f5a6:	685c      	ldr	r4, [r3, #4]
 800f5a8:	9a05      	ldr	r2, [sp, #20]
 800f5aa:	605a      	str	r2, [r3, #4]
 800f5ac:	eb05 00c6 	add.w	r0, r5, r6, lsl #3
 800f5b0:	a912      	add	r1, sp, #72	; 0x48
 800f5b2:	6846      	ldr	r6, [r0, #4]
 800f5b4:	9805      	ldr	r0, [sp, #20]
 800f5b6:	f002 fe3b 	bl	8012230 <WM__SendMessageIfEnabled>
 800f5ba:	491c      	ldr	r1, [pc, #112]	; (800f62c <WM_HandlePID+0x258>)
 800f5bc:	680a      	ldr	r2, [r1, #0]
 800f5be:	eb05 05c2 	add.w	r5, r5, r2, lsl #3
 800f5c2:	a90c      	add	r1, sp, #48	; 0x30
 800f5c4:	686b      	ldr	r3, [r5, #4]
 800f5c6:	429e      	cmp	r6, r3
 800f5c8:	bf18      	it	ne
 800f5ca:	686b      	ldrne	r3, [r5, #4]
 800f5cc:	4e18      	ldr	r6, [pc, #96]	; (800f630 <WM_HandlePID+0x25c>)
 800f5ce:	bf18      	it	ne
 800f5d0:	9305      	strne	r3, [sp, #20]
 800f5d2:	200c      	movs	r0, #12
 800f5d4:	fb00 6502 	mla	r5, r0, r2, r6
 800f5d8:	c907      	ldmia	r1, {r0, r1, r2}
 800f5da:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 800f5de:	b14c      	cbz	r4, 800f5f4 <WM_HandlePID+0x220>
 800f5e0:	4620      	mov	r0, r4
 800f5e2:	f7f8 f91d 	bl	8007820 <WM_IsWindow>
 800f5e6:	b128      	cbz	r0, 800f5f4 <WM_HandlePID+0x220>
 800f5e8:	4a10      	ldr	r2, [pc, #64]	; (800f62c <WM_HandlePID+0x258>)
 800f5ea:	4b18      	ldr	r3, [pc, #96]	; (800f64c <WM_HandlePID+0x278>)
 800f5ec:	6810      	ldr	r0, [r2, #0]
 800f5ee:	eb03 06c0 	add.w	r6, r3, r0, lsl #3
 800f5f2:	6074      	str	r4, [r6, #4]
 800f5f4:	4c0d      	ldr	r4, [pc, #52]	; (800f62c <WM_HandlePID+0x258>)
 800f5f6:	4d0e      	ldr	r5, [pc, #56]	; (800f630 <WM_HandlePID+0x25c>)
 800f5f8:	6822      	ldr	r2, [r4, #0]
 800f5fa:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 800f5fe:	200c      	movs	r0, #12
 800f600:	4350      	muls	r0, r2
 800f602:	1829      	adds	r1, r5, r0
 800f604:	7a0e      	ldrb	r6, [r1, #8]
 800f606:	ea53 0406 	orrs.w	r4, r3, r6
 800f60a:	d05f      	beq.n	800f6cc <WM_HandlePID+0x2f8>
 800f60c:	4c0f      	ldr	r4, [pc, #60]	; (800f64c <WM_HandlePID+0x278>)
 800f60e:	eb04 06c2 	add.w	r6, r4, r2, lsl #3
 800f612:	f44f 7710 	mov.w	r7, #576	; 0x240
 800f616:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800f61a:	9712      	str	r7, [sp, #72]	; 0x48
 800f61c:	9f05      	ldr	r7, [sp, #20]
 800f61e:	45be      	cmp	lr, r7
 800f620:	d02a      	beq.n	800f678 <WM_HandlePID+0x2a4>
 800f622:	6876      	ldr	r6, [r6, #4]
 800f624:	b346      	cbz	r6, 800f678 <WM_HandlePID+0x2a4>
 800f626:	b19b      	cbz	r3, 800f650 <WM_HandlePID+0x27c>
 800f628:	2300      	movs	r3, #0
 800f62a:	e018      	b.n	800f65e <WM_HandlePID+0x28a>
 800f62c:	2000e62c 	.word	0x2000e62c
 800f630:	2000e1f4 	.word	0x2000e1f4
 800f634:	2000e66c 	.word	0x2000e66c
 800f638:	2000e664 	.word	0x2000e664
 800f63c:	2000e1ec 	.word	0x2000e1ec
 800f640:	2000e648 	.word	0x2000e648
 800f644:	2000e1f0 	.word	0x2000e1f0
 800f648:	2000e748 	.word	0x2000e748
 800f64c:	2000e758 	.word	0x2000e758
 800f650:	582d      	ldr	r5, [r5, r0]
 800f652:	6849      	ldr	r1, [r1, #4]
 800f654:	f88d 3020 	strb.w	r3, [sp, #32]
 800f658:	9506      	str	r5, [sp, #24]
 800f65a:	9107      	str	r1, [sp, #28]
 800f65c:	ab06      	add	r3, sp, #24
 800f65e:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
 800f662:	a912      	add	r1, sp, #72	; 0x48
 800f664:	6850      	ldr	r0, [r2, #4]
 800f666:	9315      	str	r3, [sp, #84]	; 0x54
 800f668:	f7ff fe97 	bl	800f39a <WM__SendTouchMessage>
 800f66c:	482f      	ldr	r0, [pc, #188]	; (800f72c <WM_HandlePID+0x358>)
 800f66e:	6806      	ldr	r6, [r0, #0]
 800f670:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
 800f674:	2500      	movs	r5, #0
 800f676:	6065      	str	r5, [r4, #4]
 800f678:	492c      	ldr	r1, [pc, #176]	; (800f72c <WM_HandlePID+0x358>)
 800f67a:	4b2d      	ldr	r3, [pc, #180]	; (800f730 <WM_HandlePID+0x35c>)
 800f67c:	680c      	ldr	r4, [r1, #0]
 800f67e:	f89d 502c 	ldrb.w	r5, [sp, #44]	; 0x2c
 800f682:	9e05      	ldr	r6, [sp, #20]
 800f684:	220c      	movs	r2, #12
 800f686:	fb02 3004 	mla	r0, r2, r4, r3
 800f68a:	7205      	strb	r5, [r0, #8]
 800f68c:	2e00      	cmp	r6, #0
 800f68e:	d035      	beq.n	800f6fc <WM_HandlePID+0x328>
 800f690:	a909      	add	r1, sp, #36	; 0x24
 800f692:	c907      	ldmia	r1, {r0, r1, r2}
 800f694:	ab06      	add	r3, sp, #24
 800f696:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800f69a:	4e26      	ldr	r6, [pc, #152]	; (800f734 <WM_HandlePID+0x360>)
 800f69c:	b125      	cbz	r5, 800f6a8 <WM_HandlePID+0x2d4>
 800f69e:	9d05      	ldr	r5, [sp, #20]
 800f6a0:	eb06 06c4 	add.w	r6, r6, r4, lsl #3
 800f6a4:	6075      	str	r5, [r6, #4]
 800f6a6:	e00a      	b.n	800f6be <WM_HandlePID+0x2ea>
 800f6a8:	4c23      	ldr	r4, [pc, #140]	; (800f738 <WM_HandlePID+0x364>)
 800f6aa:	7825      	ldrb	r5, [r4, #0]
 800f6ac:	b10d      	cbz	r5, 800f6b2 <WM_HandlePID+0x2de>
 800f6ae:	f7f7 ff5b 	bl	8007568 <WM_ReleaseCapture>
 800f6b2:	4a1e      	ldr	r2, [pc, #120]	; (800f72c <WM_HandlePID+0x358>)
 800f6b4:	6810      	ldr	r0, [r2, #0]
 800f6b6:	eb06 01c0 	add.w	r1, r6, r0, lsl #3
 800f6ba:	2300      	movs	r3, #0
 800f6bc:	604b      	str	r3, [r1, #4]
 800f6be:	ac06      	add	r4, sp, #24
 800f6c0:	9805      	ldr	r0, [sp, #20]
 800f6c2:	9415      	str	r4, [sp, #84]	; 0x54
 800f6c4:	a912      	add	r1, sp, #72	; 0x48
 800f6c6:	f7ff fe68 	bl	800f39a <WM__SendTouchMessage>
 800f6ca:	e017      	b.n	800f6fc <WM_HandlePID+0x328>
 800f6cc:	9a05      	ldr	r2, [sp, #20]
 800f6ce:	2a00      	cmp	r2, #0
 800f6d0:	f43f af23 	beq.w	800f51a <WM_HandlePID+0x146>
 800f6d4:	9805      	ldr	r0, [sp, #20]
 800f6d6:	f7f7 fd2b 	bl	8007130 <WM__IsEnabled>
 800f6da:	2800      	cmp	r0, #0
 800f6dc:	f43f af1d 	beq.w	800f51a <WM_HandlePID+0x146>
 800f6e0:	ad09      	add	r5, sp, #36	; 0x24
 800f6e2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800f6e6:	ab06      	add	r3, sp, #24
 800f6e8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800f6ec:	2010      	movs	r0, #16
 800f6ee:	9012      	str	r0, [sp, #72]	; 0x48
 800f6f0:	a912      	add	r1, sp, #72	; 0x48
 800f6f2:	9805      	ldr	r0, [sp, #20]
 800f6f4:	9315      	str	r3, [sp, #84]	; 0x54
 800f6f6:	f7ff fe50 	bl	800f39a <WM__SendTouchMessage>
 800f6fa:	e000      	b.n	800f6fe <WM_HandlePID+0x32a>
 800f6fc:	2401      	movs	r4, #1
 800f6fe:	4a0b      	ldr	r2, [pc, #44]	; (800f72c <WM_HandlePID+0x358>)
 800f700:	490b      	ldr	r1, [pc, #44]	; (800f730 <WM_HandlePID+0x35c>)
 800f702:	6816      	ldr	r6, [r2, #0]
 800f704:	200c      	movs	r0, #12
 800f706:	ab09      	add	r3, sp, #36	; 0x24
 800f708:	fb00 1506 	mla	r5, r0, r6, r1
 800f70c:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800f710:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 800f714:	4618      	mov	r0, r3
 800f716:	4631      	mov	r1, r6
 800f718:	f000 f8ae 	bl	800f878 <WM_PID__SetPrevState>
 800f71c:	e000      	b.n	800f720 <WM_HandlePID+0x34c>
 800f71e:	2400      	movs	r4, #0
 800f720:	a804      	add	r0, sp, #16
 800f722:	f000 f8e7 	bl	800f8f4 <WM__RemoveCriticalHandle>
 800f726:	4620      	mov	r0, r4
 800f728:	b017      	add	sp, #92	; 0x5c
 800f72a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f72c:	2000e62c 	.word	0x2000e62c
 800f730:	2000e1f4 	.word	0x2000e1f4
 800f734:	2000e758 	.word	0x2000e758
 800f738:	2000e630 	.word	0x2000e630

0800f73c <WM_DeleteTimer>:
 800f73c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f73e:	4605      	mov	r5, r0
 800f740:	b168      	cbz	r0, 800f75e <WM_DeleteTimer+0x22>
 800f742:	f7fe f9fb 	bl	800db3c <GUI_ALLOC_LockH>
 800f746:	ac02      	add	r4, sp, #8
 800f748:	f844 0d04 	str.w	r0, [r4, #-4]!
 800f74c:	6800      	ldr	r0, [r0, #0]
 800f74e:	f7fc fd9f 	bl	800c290 <GUI_TIMER_Delete>
 800f752:	4620      	mov	r0, r4
 800f754:	f7fe fa00 	bl	800db58 <GUI_ALLOC_UnlockH>
 800f758:	4628      	mov	r0, r5
 800f75a:	f7fe fa29 	bl	800dbb0 <GUI_ALLOC_Free>
 800f75e:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

0800f760 <WM__DeleteAssocTimer>:
 800f760:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f762:	4605      	mov	r5, r0
 800f764:	a801      	add	r0, sp, #4
 800f766:	f7fc fd63 	bl	800c230 <GUI_TIMER__GetFirstTimer>
 800f76a:	4604      	mov	r4, r0
 800f76c:	b1dc      	cbz	r4, 800f7a6 <WM__DeleteAssocTimer+0x46>
 800f76e:	4620      	mov	r0, r4
 800f770:	2101      	movs	r1, #1
 800f772:	f7fc fdbd 	bl	800c2f0 <GUI_TIMER_GetFlag>
 800f776:	9b01      	ldr	r3, [sp, #4]
 800f778:	b183      	cbz	r3, 800f79c <WM__DeleteAssocTimer+0x3c>
 800f77a:	b178      	cbz	r0, 800f79c <WM__DeleteAssocTimer+0x3c>
 800f77c:	4618      	mov	r0, r3
 800f77e:	f7fe f9d3 	bl	800db28 <GUI_ALLOC_h2p>
 800f782:	6840      	ldr	r0, [r0, #4]
 800f784:	42a8      	cmp	r0, r5
 800f786:	d109      	bne.n	800f79c <WM__DeleteAssocTimer+0x3c>
 800f788:	4620      	mov	r0, r4
 800f78a:	a901      	add	r1, sp, #4
 800f78c:	9e01      	ldr	r6, [sp, #4]
 800f78e:	f7fc fd65 	bl	800c25c <GUI_TIMER__GetNextTimerLin>
 800f792:	4604      	mov	r4, r0
 800f794:	4630      	mov	r0, r6
 800f796:	f7ff ffd1 	bl	800f73c <WM_DeleteTimer>
 800f79a:	e7e7      	b.n	800f76c <WM__DeleteAssocTimer+0xc>
 800f79c:	4620      	mov	r0, r4
 800f79e:	a901      	add	r1, sp, #4
 800f7a0:	f7fc fd5c 	bl	800c25c <GUI_TIMER__GetNextTimerLin>
 800f7a4:	e7e1      	b.n	800f76a <WM__DeleteAssocTimer+0xa>
 800f7a6:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

0800f7a8 <WM_SendToParent>:
 800f7a8:	b538      	push	{r3, r4, r5, lr}
 800f7aa:	4605      	mov	r5, r0
 800f7ac:	460c      	mov	r4, r1
 800f7ae:	b141      	cbz	r1, 800f7c2 <WM_SendToParent+0x1a>
 800f7b0:	f7f8 f8b9 	bl	8007926 <WM_GetParent>
 800f7b4:	b128      	cbz	r0, 800f7c2 <WM_SendToParent+0x1a>
 800f7b6:	4621      	mov	r1, r4
 800f7b8:	60a5      	str	r5, [r4, #8]
 800f7ba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f7be:	f7f7 bc99 	b.w	80070f4 <WM__SendMessage>
 800f7c2:	bd38      	pop	{r3, r4, r5, pc}

0800f7c4 <WM__IsInWindow>:
 800f7c4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f7c6:	f013 0302 	ands.w	r3, r3, #2
 800f7ca:	d012      	beq.n	800f7f2 <WM__IsInWindow+0x2e>
 800f7cc:	f9b0 3000 	ldrsh.w	r3, [r0]
 800f7d0:	4299      	cmp	r1, r3
 800f7d2:	db10      	blt.n	800f7f6 <WM__IsInWindow+0x32>
 800f7d4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f7d8:	4299      	cmp	r1, r3
 800f7da:	dc0c      	bgt.n	800f7f6 <WM__IsInWindow+0x32>
 800f7dc:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800f7e0:	428a      	cmp	r2, r1
 800f7e2:	db08      	blt.n	800f7f6 <WM__IsInWindow+0x32>
 800f7e4:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800f7e8:	4282      	cmp	r2, r0
 800f7ea:	bfcc      	ite	gt
 800f7ec:	2000      	movgt	r0, #0
 800f7ee:	2001      	movle	r0, #1
 800f7f0:	4770      	bx	lr
 800f7f2:	4618      	mov	r0, r3
 800f7f4:	4770      	bx	lr
 800f7f6:	2000      	movs	r0, #0
 800f7f8:	4770      	bx	lr

0800f7fa <_Screen2hWin>:
 800f7fa:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800f7fe:	460e      	mov	r6, r1
 800f800:	4617      	mov	r7, r2
 800f802:	4698      	mov	r8, r3
 800f804:	4605      	mov	r5, r0
 800f806:	b320      	cbz	r0, 800f852 <_Screen2hWin+0x58>
 800f808:	f7fe f998 	bl	800db3c <GUI_ALLOC_LockH>
 800f80c:	4639      	mov	r1, r7
 800f80e:	4642      	mov	r2, r8
 800f810:	4604      	mov	r4, r0
 800f812:	9001      	str	r0, [sp, #4]
 800f814:	f7ff ffd6 	bl	800f7c4 <WM__IsInWindow>
 800f818:	4681      	mov	r9, r0
 800f81a:	b920      	cbnz	r0, 800f826 <_Screen2hWin+0x2c>
 800f81c:	a801      	add	r0, sp, #4
 800f81e:	f7fe f99b 	bl	800db58 <GUI_ALLOC_UnlockH>
 800f822:	464d      	mov	r5, r9
 800f824:	e015      	b.n	800f852 <_Screen2hWin+0x58>
 800f826:	69e4      	ldr	r4, [r4, #28]
 800f828:	b91c      	cbnz	r4, 800f832 <_Screen2hWin+0x38>
 800f82a:	a801      	add	r0, sp, #4
 800f82c:	f7fe f994 	bl	800db58 <GUI_ALLOC_UnlockH>
 800f830:	e00f      	b.n	800f852 <_Screen2hWin+0x58>
 800f832:	42b4      	cmp	r4, r6
 800f834:	d0f9      	beq.n	800f82a <_Screen2hWin+0x30>
 800f836:	4620      	mov	r0, r4
 800f838:	4631      	mov	r1, r6
 800f83a:	463a      	mov	r2, r7
 800f83c:	4643      	mov	r3, r8
 800f83e:	f7ff ffdc 	bl	800f7fa <_Screen2hWin>
 800f842:	2800      	cmp	r0, #0
 800f844:	bf18      	it	ne
 800f846:	4605      	movne	r5, r0
 800f848:	4620      	mov	r0, r4
 800f84a:	f7fe f96d 	bl	800db28 <GUI_ALLOC_h2p>
 800f84e:	6a04      	ldr	r4, [r0, #32]
 800f850:	e7ea      	b.n	800f828 <_Screen2hWin+0x2e>
 800f852:	4628      	mov	r0, r5
 800f854:	e8bd 83fe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}

0800f858 <WM_Screen2hWin>:
 800f858:	4b06      	ldr	r3, [pc, #24]	; (800f874 <WM_Screen2hWin+0x1c>)
 800f85a:	b570      	push	{r4, r5, r6, lr}
 800f85c:	4605      	mov	r5, r0
 800f85e:	6818      	ldr	r0, [r3, #0]
 800f860:	460c      	mov	r4, r1
 800f862:	f000 f833 	bl	800f8cc <WM_GetDesktopWindowEx>
 800f866:	2100      	movs	r1, #0
 800f868:	462a      	mov	r2, r5
 800f86a:	4623      	mov	r3, r4
 800f86c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f870:	f7ff bfc3 	b.w	800f7fa <_Screen2hWin>
 800f874:	2000e62c 	.word	0x2000e62c

0800f878 <WM_PID__SetPrevState>:
 800f878:	4b03      	ldr	r3, [pc, #12]	; (800f888 <WM_PID__SetPrevState+0x10>)
 800f87a:	220c      	movs	r2, #12
 800f87c:	fb02 3301 	mla	r3, r2, r1, r3
 800f880:	c807      	ldmia	r0, {r0, r1, r2}
 800f882:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800f886:	4770      	bx	lr
 800f888:	2000e20c 	.word	0x2000e20c

0800f88c <WM_OnKey>:
 800f88c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800f88e:	4a09      	ldr	r2, [pc, #36]	; (800f8b4 <WM_OnKey+0x28>)
 800f890:	4603      	mov	r3, r0
 800f892:	6810      	ldr	r0, [r2, #0]
 800f894:	4a08      	ldr	r2, [pc, #32]	; (800f8b8 <WM_OnKey+0x2c>)
 800f896:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 800f89a:	b148      	cbz	r0, 800f8b0 <WM_OnKey+0x24>
 800f89c:	9101      	str	r1, [sp, #4]
 800f89e:	210e      	movs	r1, #14
 800f8a0:	9300      	str	r3, [sp, #0]
 800f8a2:	9102      	str	r1, [sp, #8]
 800f8a4:	ab00      	add	r3, sp, #0
 800f8a6:	a902      	add	r1, sp, #8
 800f8a8:	9305      	str	r3, [sp, #20]
 800f8aa:	f7f7 fc23 	bl	80070f4 <WM__SendMessage>
 800f8ae:	2001      	movs	r0, #1
 800f8b0:	b007      	add	sp, #28
 800f8b2:	bd00      	pop	{pc}
 800f8b4:	2000e62c 	.word	0x2000e62c
 800f8b8:	2000e61c 	.word	0x2000e61c

0800f8bc <WM_GetWindowOrgX>:
 800f8bc:	b508      	push	{r3, lr}
 800f8be:	b120      	cbz	r0, 800f8ca <WM_GetWindowOrgX+0xe>
 800f8c0:	f7fe f932 	bl	800db28 <GUI_ALLOC_h2p>
 800f8c4:	f9b0 0000 	ldrsh.w	r0, [r0]
 800f8c8:	bd08      	pop	{r3, pc}
 800f8ca:	bd08      	pop	{r3, pc}

0800f8cc <WM_GetDesktopWindowEx>:
 800f8cc:	2801      	cmp	r0, #1
 800f8ce:	d803      	bhi.n	800f8d8 <WM_GetDesktopWindowEx+0xc>
 800f8d0:	4b02      	ldr	r3, [pc, #8]	; (800f8dc <WM_GetDesktopWindowEx+0x10>)
 800f8d2:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800f8d6:	4770      	bx	lr
 800f8d8:	2000      	movs	r0, #0
 800f8da:	4770      	bx	lr
 800f8dc:	2000e60c 	.word	0x2000e60c

0800f8e0 <WM_ForEachDesc>:
 800f8e0:	f002 bcc7 	b.w	8012272 <WM__ForEachDesc>

0800f8e4 <WM__AddCriticalHandle>:
 800f8e4:	4b02      	ldr	r3, [pc, #8]	; (800f8f0 <WM__AddCriticalHandle+0xc>)
 800f8e6:	681a      	ldr	r2, [r3, #0]
 800f8e8:	6002      	str	r2, [r0, #0]
 800f8ea:	6018      	str	r0, [r3, #0]
 800f8ec:	4770      	bx	lr
 800f8ee:	bf00      	nop
 800f8f0:	2000e640 	.word	0x2000e640

0800f8f4 <WM__RemoveCriticalHandle>:
 800f8f4:	4b08      	ldr	r3, [pc, #32]	; (800f918 <WM__RemoveCriticalHandle+0x24>)
 800f8f6:	681b      	ldr	r3, [r3, #0]
 800f8f8:	b163      	cbz	r3, 800f914 <WM__RemoveCriticalHandle+0x20>
 800f8fa:	2200      	movs	r2, #0
 800f8fc:	4283      	cmp	r3, r0
 800f8fe:	d104      	bne.n	800f90a <WM__RemoveCriticalHandle+0x16>
 800f900:	6818      	ldr	r0, [r3, #0]
 800f902:	b902      	cbnz	r2, 800f906 <WM__RemoveCriticalHandle+0x12>
 800f904:	4a04      	ldr	r2, [pc, #16]	; (800f918 <WM__RemoveCriticalHandle+0x24>)
 800f906:	6010      	str	r0, [r2, #0]
 800f908:	4770      	bx	lr
 800f90a:	6819      	ldr	r1, [r3, #0]
 800f90c:	461a      	mov	r2, r3
 800f90e:	b109      	cbz	r1, 800f914 <WM__RemoveCriticalHandle+0x20>
 800f910:	460b      	mov	r3, r1
 800f912:	e7f3      	b.n	800f8fc <WM__RemoveCriticalHandle+0x8>
 800f914:	4770      	bx	lr
 800f916:	bf00      	nop
 800f918:	2000e640 	.word	0x2000e640

0800f91c <WM_BringToBottom>:
 800f91c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f920:	4604      	mov	r4, r0
 800f922:	b087      	sub	sp, #28
 800f924:	2800      	cmp	r0, #0
 800f926:	d03a      	beq.n	800f99e <WM_BringToBottom+0x82>
 800f928:	f7fe f908 	bl	800db3c <GUI_ALLOC_LockH>
 800f92c:	4603      	mov	r3, r0
 800f92e:	9001      	str	r0, [sp, #4]
 800f930:	c803      	ldmia	r0, {r0, r1}
 800f932:	ad04      	add	r5, sp, #16
 800f934:	e885 0003 	stmia.w	r5, {r0, r1}
 800f938:	a801      	add	r0, sp, #4
 800f93a:	6a1e      	ldr	r6, [r3, #32]
 800f93c:	f8d3 9028 	ldr.w	r9, [r3, #40]	; 0x28
 800f940:	f7fe f90a 	bl	800db58 <GUI_ALLOC_UnlockH>
 800f944:	4620      	mov	r0, r4
 800f946:	f7ff fc8a 	bl	800f25e <WM__GetPrevSibling>
 800f94a:	4607      	mov	r7, r0
 800f94c:	b338      	cbz	r0, 800f99e <WM_BringToBottom+0x82>
 800f94e:	4620      	mov	r0, r4
 800f950:	f7f7 ffe9 	bl	8007926 <WM_GetParent>
 800f954:	f019 0f02 	tst.w	r9, #2
 800f958:	4680      	mov	r8, r0
 800f95a:	d004      	beq.n	800f966 <WM_BringToBottom+0x4a>
 800f95c:	4628      	mov	r0, r5
 800f95e:	4641      	mov	r1, r8
 800f960:	4632      	mov	r2, r6
 800f962:	f7f8 fccc 	bl	80082fe <WM__InvalidateRectEx>
 800f966:	4620      	mov	r0, r4
 800f968:	f7fe f8e8 	bl	800db3c <GUI_ALLOC_LockH>
 800f96c:	9001      	str	r0, [sp, #4]
 800f96e:	4640      	mov	r0, r8
 800f970:	f7fe f8e4 	bl	800db3c <GUI_ALLOC_LockH>
 800f974:	9003      	str	r0, [sp, #12]
 800f976:	4638      	mov	r0, r7
 800f978:	f7fe f8e0 	bl	800db3c <GUI_ALLOC_LockH>
 800f97c:	9b03      	ldr	r3, [sp, #12]
 800f97e:	6206      	str	r6, [r0, #32]
 800f980:	9002      	str	r0, [sp, #8]
 800f982:	a806      	add	r0, sp, #24
 800f984:	69da      	ldr	r2, [r3, #28]
 800f986:	f850 1d14 	ldr.w	r1, [r0, #-20]!
 800f98a:	61dc      	str	r4, [r3, #28]
 800f98c:	620a      	str	r2, [r1, #32]
 800f98e:	f7fe f8e3 	bl	800db58 <GUI_ALLOC_UnlockH>
 800f992:	a803      	add	r0, sp, #12
 800f994:	f7fe f8e0 	bl	800db58 <GUI_ALLOC_UnlockH>
 800f998:	a802      	add	r0, sp, #8
 800f99a:	f7fe f8dd 	bl	800db58 <GUI_ALLOC_UnlockH>
 800f99e:	b007      	add	sp, #28
 800f9a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800f9a4 <_Convert16>:
 800f9a4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f9a8:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 800f9ac:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 800f9b0:	4605      	mov	r5, r0
 800f9b2:	460e      	mov	r6, r1
 800f9b4:	4690      	mov	r8, r2
 800f9b6:	461f      	mov	r7, r3
 800f9b8:	4614      	mov	r4, r2
 800f9ba:	4689      	mov	r9, r1
 800f9bc:	f835 0b02 	ldrh.w	r0, [r5], #2
 800f9c0:	47d8      	blx	fp
 800f9c2:	47d0      	blx	sl
 800f9c4:	3c01      	subs	r4, #1
 800f9c6:	f849 0b04 	str.w	r0, [r9], #4
 800f9ca:	d1f7      	bne.n	800f9bc <_Convert16+0x18>
 800f9cc:	2f1f      	cmp	r7, #31
 800f9ce:	d806      	bhi.n	800f9de <_Convert16+0x3a>
 800f9d0:	4630      	mov	r0, r6
 800f9d2:	4641      	mov	r1, r8
 800f9d4:	463a      	mov	r2, r7
 800f9d6:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f9da:	f001 bf87 	b.w	80118ec <GUI__CompactPixelIndices>
 800f9de:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f9e2 <_Convert8>:
 800f9e2:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f9e6:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 800f9ea:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 800f9ee:	4605      	mov	r5, r0
 800f9f0:	460e      	mov	r6, r1
 800f9f2:	4690      	mov	r8, r2
 800f9f4:	461f      	mov	r7, r3
 800f9f6:	4689      	mov	r9, r1
 800f9f8:	4604      	mov	r4, r0
 800f9fa:	f814 0b01 	ldrb.w	r0, [r4], #1
 800f9fe:	47d8      	blx	fp
 800fa00:	47d0      	blx	sl
 800fa02:	eb05 0308 	add.w	r3, r5, r8
 800fa06:	429c      	cmp	r4, r3
 800fa08:	f849 0b04 	str.w	r0, [r9], #4
 800fa0c:	d1f5      	bne.n	800f9fa <_Convert8+0x18>
 800fa0e:	2f1f      	cmp	r7, #31
 800fa10:	d806      	bhi.n	800fa20 <_Convert8+0x3e>
 800fa12:	4630      	mov	r0, r6
 800fa14:	4641      	mov	r1, r8
 800fa16:	463a      	mov	r2, r7
 800fa18:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fa1c:	f001 bf66 	b.w	80118ec <GUI__CompactPixelIndices>
 800fa20:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800fa24 <GUI_MEMDEV__WriteToActiveOpaque>:
 800fa24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fa28:	b09d      	sub	sp, #116	; 0x74
 800fa2a:	4680      	mov	r8, r0
 800fa2c:	920d      	str	r2, [sp, #52]	; 0x34
 800fa2e:	9110      	str	r1, [sp, #64]	; 0x40
 800fa30:	f7fe f884 	bl	800db3c <GUI_ALLOC_LockH>
 800fa34:	ab1c      	add	r3, sp, #112	; 0x70
 800fa36:	6944      	ldr	r4, [r0, #20]
 800fa38:	f843 0d1c 	str.w	r0, [r3, #-28]!
 800fa3c:	4618      	mov	r0, r3
 800fa3e:	f7fe f88b 	bl	800db58 <GUI_ALLOC_UnlockH>
 800fa42:	4640      	mov	r0, r8
 800fa44:	f7fa f90c 	bl	8009c60 <GUI_MEMDEV_GetBitsPerPixel>
 800fa48:	2808      	cmp	r0, #8
 800fa4a:	4602      	mov	r2, r0
 800fa4c:	dd02      	ble.n	800fa54 <GUI_MEMDEV__WriteToActiveOpaque+0x30>
 800fa4e:	2c00      	cmp	r4, #0
 800fa50:	f000 81b5 	beq.w	800fdbe <GUI_MEMDEV__WriteToActiveOpaque+0x39a>
 800fa54:	2501      	movs	r5, #1
 800fa56:	2600      	movs	r6, #0
 800fa58:	4640      	mov	r0, r8
 800fa5a:	951b      	str	r5, [sp, #108]	; 0x6c
 800fa5c:	950b      	str	r5, [sp, #44]	; 0x2c
 800fa5e:	961a      	str	r6, [sp, #104]	; 0x68
 800fa60:	f7fe f86c 	bl	800db3c <GUI_ALLOC_LockH>
 800fa64:	a91c      	add	r1, sp, #112	; 0x70
 800fa66:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800fa6a:	f841 0d10 	str.w	r0, [r1, #-16]!
 800fa6e:	6904      	ldr	r4, [r0, #16]
 800fa70:	f8b0 a008 	ldrh.w	sl, [r0, #8]
 800fa74:	6945      	ldr	r5, [r0, #20]
 800fa76:	68c7      	ldr	r7, [r0, #12]
 800fa78:	6800      	ldr	r0, [r0, #0]
 800fa7a:	f8df b5f4 	ldr.w	fp, [pc, #1524]	; 8010070 <GUI_MEMDEV__WriteToActiveOpaque+0x64c>
 800fa7e:	6903      	ldr	r3, [r0, #16]
 800fa80:	f8db 0000 	ldr.w	r0, [fp]
 800fa84:	9212      	str	r2, [sp, #72]	; 0x48
 800fa86:	685a      	ldr	r2, [r3, #4]
 800fa88:	7c40      	ldrb	r0, [r0, #17]
 800fa8a:	9211      	str	r2, [sp, #68]	; 0x44
 800fa8c:	9109      	str	r1, [sp, #36]	; 0x24
 800fa8e:	f7fb fad7 	bl	800b040 <GUI_GetBitsPerPixelEx>
 800fa92:	f8db 1000 	ldr.w	r1, [fp]
 800fa96:	900e      	str	r0, [sp, #56]	; 0x38
 800fa98:	7c48      	ldrb	r0, [r1, #17]
 800fa9a:	f7fb faef 	bl	800b07c <GUI_GetpfIndex2ColorEx>
 800fa9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800faa0:	4602      	mov	r2, r0
 800faa2:	4618      	mov	r0, r3
 800faa4:	920a      	str	r2, [sp, #40]	; 0x28
 800faa6:	f7fe f857 	bl	800db58 <GUI_ALLOC_UnlockH>
 800faaa:	2c08      	cmp	r4, #8
 800faac:	fa0f f98a 	sxth.w	r9, sl
 800fab0:	4658      	mov	r0, fp
 800fab2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800fab4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800fab6:	d904      	bls.n	800fac2 <GUI_MEMDEV__WriteToActiveOpaque+0x9e>
 800fab8:	2c10      	cmp	r4, #16
 800faba:	bf8c      	ite	hi
 800fabc:	2104      	movhi	r1, #4
 800fabe:	2102      	movls	r1, #2
 800fac0:	e004      	b.n	800facc <GUI_MEMDEV__WriteToActiveOpaque+0xa8>
 800fac2:	2c01      	cmp	r4, #1
 800fac4:	d102      	bne.n	800facc <GUI_MEMDEV__WriteToActiveOpaque+0xa8>
 800fac6:	940f      	str	r4, [sp, #60]	; 0x3c
 800fac8:	ae1a      	add	r6, sp, #104	; 0x68
 800faca:	e000      	b.n	800face <GUI_MEMDEV__WriteToActiveOpaque+0xaa>
 800facc:	910f      	str	r1, [sp, #60]	; 0x3c
 800face:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800fad0:	4293      	cmp	r3, r2
 800fad2:	f000 80d9 	beq.w	800fc88 <GUI_MEMDEV__WriteToActiveOpaque+0x264>
 800fad6:	6803      	ldr	r3, [r0, #0]
 800fad8:	7c58      	ldrb	r0, [r3, #17]
 800fada:	f7fb fad7 	bl	800b08c <GUI_GetpfColor2IndexEx>
 800fade:	9013      	str	r0, [sp, #76]	; 0x4c
 800fae0:	fa0f f08a 	sxth.w	r0, sl
 800fae4:	0080      	lsls	r0, r0, #2
 800fae6:	f7fe fa77 	bl	800dfd8 <GUI_ALLOC_AllocNoInit>
 800faea:	900c      	str	r0, [sp, #48]	; 0x30
 800faec:	2800      	cmp	r0, #0
 800faee:	f000 8322 	beq.w	8010136 <GUI_MEMDEV__WriteToActiveOpaque+0x712>
 800faf2:	4640      	mov	r0, r8
 800faf4:	f7f9 fa80 	bl	8008ff8 <GUI_MEMDEV_GetDataPtr>
 800faf8:	4680      	mov	r8, r0
 800fafa:	2d00      	cmp	r5, #0
 800fafc:	f000 80b5 	beq.w	800fc6a <GUI_MEMDEV__WriteToActiveOpaque+0x246>
 800fb00:	4628      	mov	r0, r5
 800fb02:	f7fe f81b 	bl	800db3c <GUI_ALLOC_LockH>
 800fb06:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
 800fb0a:	9019      	str	r0, [sp, #100]	; 0x64
 800fb0c:	f04f 0a00 	mov.w	sl, #0
 800fb10:	9912      	ldr	r1, [sp, #72]	; 0x48
 800fb12:	458a      	cmp	sl, r1
 800fb14:	f280 80a5 	bge.w	800fc62 <GUI_MEMDEV__WriteToActiveOpaque+0x23e>
 800fb18:	9819      	ldr	r0, [sp, #100]	; 0x64
 800fb1a:	6883      	ldr	r3, [r0, #8]
 800fb1c:	2500      	movs	r5, #0
 800fb1e:	9516      	str	r5, [sp, #88]	; 0x58
 800fb20:	a916      	add	r1, sp, #88	; 0x58
 800fb22:	695d      	ldr	r5, [r3, #20]
 800fb24:	4652      	mov	r2, sl
 800fb26:	47a8      	blx	r5
 800fb28:	4548      	cmp	r0, r9
 800fb2a:	4605      	mov	r5, r0
 800fb2c:	d127      	bne.n	800fb7e <GUI_MEMDEV__WriteToActiveOpaque+0x15a>
 800fb2e:	980c      	ldr	r0, [sp, #48]	; 0x30
 800fb30:	f7fe f804 	bl	800db3c <GUI_ALLOC_LockH>
 800fb34:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800fb36:	9017      	str	r0, [sp, #92]	; 0x5c
 800fb38:	4601      	mov	r1, r0
 800fb3a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800fb3c:	9200      	str	r2, [sp, #0]
 800fb3e:	2c08      	cmp	r4, #8
 800fb40:	9001      	str	r0, [sp, #4]
 800fb42:	464a      	mov	r2, r9
 800fb44:	4640      	mov	r0, r8
 800fb46:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fb48:	d902      	bls.n	800fb50 <GUI_MEMDEV__WriteToActiveOpaque+0x12c>
 800fb4a:	f7ff ff2b 	bl	800f9a4 <_Convert16>
 800fb4e:	e001      	b.n	800fb54 <GUI_MEMDEV__WriteToActiveOpaque+0x130>
 800fb50:	f7ff ff47 	bl	800f9e2 <_Convert8>
 800fb54:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800fb56:	9810      	ldr	r0, [sp, #64]	; 0x40
 800fb58:	9502      	str	r5, [sp, #8]
 800fb5a:	2301      	movs	r3, #1
 800fb5c:	2100      	movs	r1, #0
 800fb5e:	ad1c      	add	r5, sp, #112	; 0x70
 800fb60:	9103      	str	r1, [sp, #12]
 800fb62:	9300      	str	r3, [sp, #0]
 800fb64:	9301      	str	r3, [sp, #4]
 800fb66:	f855 2d14 	ldr.w	r2, [r5, #-20]!
 800fb6a:	9605      	str	r6, [sp, #20]
 800fb6c:	9204      	str	r2, [sp, #16]
 800fb6e:	4659      	mov	r1, fp
 800fb70:	464a      	mov	r2, r9
 800fb72:	f7fb fc89 	bl	800b488 <LCD_DrawBitmap>
 800fb76:	4628      	mov	r0, r5
 800fb78:	f7fd ffee 	bl	800db58 <GUI_ALLOC_UnlockH>
 800fb7c:	e06b      	b.n	800fc56 <GUI_MEMDEV__WriteToActiveOpaque+0x232>
 800fb7e:	2c01      	cmp	r4, #1
 800fb80:	d15a      	bne.n	800fc38 <GUI_MEMDEV__WriteToActiveOpaque+0x214>
 800fb82:	2d00      	cmp	r5, #0
 800fb84:	d067      	beq.n	800fc56 <GUI_MEMDEV__WriteToActiveOpaque+0x232>
 800fb86:	9916      	ldr	r1, [sp, #88]	; 0x58
 800fb88:	9703      	str	r7, [sp, #12]
 800fb8a:	2008      	movs	r0, #8
 800fb8c:	fb91 f2f0 	sdiv	r2, r1, r0
 800fb90:	eb08 0002 	add.w	r0, r8, r2
 800fb94:	9004      	str	r0, [sp, #16]
 800fb96:	9810      	ldr	r0, [sp, #64]	; 0x40
 800fb98:	9605      	str	r6, [sp, #20]
 800fb9a:	2301      	movs	r3, #1
 800fb9c:	f001 0207 	and.w	r2, r1, #7
 800fba0:	1840      	adds	r0, r0, r1
 800fba2:	9300      	str	r3, [sp, #0]
 800fba4:	9301      	str	r3, [sp, #4]
 800fba6:	9302      	str	r3, [sp, #8]
 800fba8:	9206      	str	r2, [sp, #24]
 800fbaa:	4659      	mov	r1, fp
 800fbac:	462a      	mov	r2, r5
 800fbae:	f7fb fb8f 	bl	800b2d0 <LCD__DrawBitmap_1bpp>
 800fbb2:	9819      	ldr	r0, [sp, #100]	; 0x64
 800fbb4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800fbb6:	6881      	ldr	r1, [r0, #8]
 800fbb8:	195d      	adds	r5, r3, r5
 800fbba:	9516      	str	r5, [sp, #88]	; 0x58
 800fbbc:	694b      	ldr	r3, [r1, #20]
 800fbbe:	4652      	mov	r2, sl
 800fbc0:	a916      	add	r1, sp, #88	; 0x58
 800fbc2:	4798      	blx	r3
 800fbc4:	4605      	mov	r5, r0
 800fbc6:	e7dc      	b.n	800fb82 <GUI_MEMDEV__WriteToActiveOpaque+0x15e>
 800fbc8:	980c      	ldr	r0, [sp, #48]	; 0x30
 800fbca:	f7fd ffb7 	bl	800db3c <GUI_ALLOC_LockH>
 800fbce:	2c08      	cmp	r4, #8
 800fbd0:	4601      	mov	r1, r0
 800fbd2:	9017      	str	r0, [sp, #92]	; 0x5c
 800fbd4:	9816      	ldr	r0, [sp, #88]	; 0x58
 800fbd6:	d932      	bls.n	800fc3e <GUI_MEMDEV__WriteToActiveOpaque+0x21a>
 800fbd8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800fbda:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800fbdc:	9300      	str	r3, [sp, #0]
 800fbde:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800fbe0:	9201      	str	r2, [sp, #4]
 800fbe2:	fb00 8003 	mla	r0, r0, r3, r8
 800fbe6:	462a      	mov	r2, r5
 800fbe8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fbea:	f7ff fedb 	bl	800f9a4 <_Convert16>
 800fbee:	990e      	ldr	r1, [sp, #56]	; 0x38
 800fbf0:	2301      	movs	r3, #1
 800fbf2:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
 800fbf6:	2000      	movs	r0, #0
 800fbf8:	9300      	str	r3, [sp, #0]
 800fbfa:	9301      	str	r3, [sp, #4]
 800fbfc:	9102      	str	r1, [sp, #8]
 800fbfe:	9003      	str	r0, [sp, #12]
 800fc00:	f85c 2d14 	ldr.w	r2, [ip, #-20]!
 800fc04:	9916      	ldr	r1, [sp, #88]	; 0x58
 800fc06:	9810      	ldr	r0, [sp, #64]	; 0x40
 800fc08:	9204      	str	r2, [sp, #16]
 800fc0a:	1840      	adds	r0, r0, r1
 800fc0c:	462a      	mov	r2, r5
 800fc0e:	4659      	mov	r1, fp
 800fc10:	9605      	str	r6, [sp, #20]
 800fc12:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 800fc16:	f7fb fc37 	bl	800b488 <LCD_DrawBitmap>
 800fc1a:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
 800fc1e:	4660      	mov	r0, ip
 800fc20:	f7fd ff9a 	bl	800db58 <GUI_ALLOC_UnlockH>
 800fc24:	9819      	ldr	r0, [sp, #100]	; 0x64
 800fc26:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800fc28:	6882      	ldr	r2, [r0, #8]
 800fc2a:	195d      	adds	r5, r3, r5
 800fc2c:	9516      	str	r5, [sp, #88]	; 0x58
 800fc2e:	6953      	ldr	r3, [r2, #20]
 800fc30:	a916      	add	r1, sp, #88	; 0x58
 800fc32:	4652      	mov	r2, sl
 800fc34:	4798      	blx	r3
 800fc36:	4605      	mov	r5, r0
 800fc38:	2d00      	cmp	r5, #0
 800fc3a:	d1c5      	bne.n	800fbc8 <GUI_MEMDEV__WriteToActiveOpaque+0x1a4>
 800fc3c:	e00b      	b.n	800fc56 <GUI_MEMDEV__WriteToActiveOpaque+0x232>
 800fc3e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800fc40:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800fc42:	9200      	str	r2, [sp, #0]
 800fc44:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800fc46:	9301      	str	r3, [sp, #4]
 800fc48:	fb00 8002 	mla	r0, r0, r2, r8
 800fc4c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fc4e:	462a      	mov	r2, r5
 800fc50:	f7ff fec7 	bl	800f9e2 <_Convert8>
 800fc54:	e7cb      	b.n	800fbee <GUI_MEMDEV__WriteToActiveOpaque+0x1ca>
 800fc56:	44b8      	add	r8, r7
 800fc58:	f10a 0a01 	add.w	sl, sl, #1
 800fc5c:	f10b 0b01 	add.w	fp, fp, #1
 800fc60:	e756      	b.n	800fb10 <GUI_MEMDEV__WriteToActiveOpaque+0xec>
 800fc62:	a819      	add	r0, sp, #100	; 0x64
 800fc64:	f7fd ff78 	bl	800db58 <GUI_ALLOC_UnlockH>
 800fc68:	e00c      	b.n	800fc84 <GUI_MEMDEV__WriteToActiveOpaque+0x260>
 800fc6a:	2201      	movs	r2, #1
 800fc6c:	9200      	str	r2, [sp, #0]
 800fc6e:	9201      	str	r2, [sp, #4]
 800fc70:	9004      	str	r0, [sp, #16]
 800fc72:	9402      	str	r4, [sp, #8]
 800fc74:	9703      	str	r7, [sp, #12]
 800fc76:	9605      	str	r6, [sp, #20]
 800fc78:	9810      	ldr	r0, [sp, #64]	; 0x40
 800fc7a:	990d      	ldr	r1, [sp, #52]	; 0x34
 800fc7c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800fc7e:	464a      	mov	r2, r9
 800fc80:	f7fb fc02 	bl	800b488 <LCD_DrawBitmap>
 800fc84:	980c      	ldr	r0, [sp, #48]	; 0x30
 800fc86:	e254      	b.n	8010132 <GUI_MEMDEV__WriteToActiveOpaque+0x70e>
 800fc88:	4640      	mov	r0, r8
 800fc8a:	f7f9 f9b5 	bl	8008ff8 <GUI_MEMDEV_GetDataPtr>
 800fc8e:	4680      	mov	r8, r0
 800fc90:	2d00      	cmp	r5, #0
 800fc92:	f000 8087 	beq.w	800fda4 <GUI_MEMDEV__WriteToActiveOpaque+0x380>
 800fc96:	4628      	mov	r0, r5
 800fc98:	f7fd ff50 	bl	800db3c <GUI_ALLOC_LockH>
 800fc9c:	2500      	movs	r5, #0
 800fc9e:	9019      	str	r0, [sp, #100]	; 0x64
 800fca0:	9912      	ldr	r1, [sp, #72]	; 0x48
 800fca2:	428d      	cmp	r5, r1
 800fca4:	da7a      	bge.n	800fd9c <GUI_MEMDEV__WriteToActiveOpaque+0x378>
 800fca6:	9819      	ldr	r0, [sp, #100]	; 0x64
 800fca8:	6883      	ldr	r3, [r0, #8]
 800fcaa:	2200      	movs	r2, #0
 800fcac:	9216      	str	r2, [sp, #88]	; 0x58
 800fcae:	695b      	ldr	r3, [r3, #20]
 800fcb0:	a916      	add	r1, sp, #88	; 0x58
 800fcb2:	462a      	mov	r2, r5
 800fcb4:	4798      	blx	r3
 800fcb6:	4548      	cmp	r0, r9
 800fcb8:	4682      	mov	sl, r0
 800fcba:	d123      	bne.n	800fd04 <GUI_MEMDEV__WriteToActiveOpaque+0x2e0>
 800fcbc:	46aa      	mov	sl, r5
 800fcbe:	9819      	ldr	r0, [sp, #100]	; 0x64
 800fcc0:	6881      	ldr	r1, [r0, #8]
 800fcc2:	f10a 0b01 	add.w	fp, sl, #1
 800fcc6:	694b      	ldr	r3, [r1, #20]
 800fcc8:	465a      	mov	r2, fp
 800fcca:	a916      	add	r1, sp, #88	; 0x58
 800fccc:	4798      	blx	r3
 800fcce:	4548      	cmp	r0, r9
 800fcd0:	d101      	bne.n	800fcd6 <GUI_MEMDEV__WriteToActiveOpaque+0x2b2>
 800fcd2:	46da      	mov	sl, fp
 800fcd4:	e7f3      	b.n	800fcbe <GUI_MEMDEV__WriteToActiveOpaque+0x29a>
 800fcd6:	ebc5 000a 	rsb	r0, r5, sl
 800fcda:	990d      	ldr	r1, [sp, #52]	; 0x34
 800fcdc:	f8cd 8010 	str.w	r8, [sp, #16]
 800fce0:	f100 0b01 	add.w	fp, r0, #1
 800fce4:	2201      	movs	r2, #1
 800fce6:	9200      	str	r2, [sp, #0]
 800fce8:	9201      	str	r2, [sp, #4]
 800fcea:	1949      	adds	r1, r1, r5
 800fcec:	9402      	str	r4, [sp, #8]
 800fcee:	9703      	str	r7, [sp, #12]
 800fcf0:	9605      	str	r6, [sp, #20]
 800fcf2:	9810      	ldr	r0, [sp, #64]	; 0x40
 800fcf4:	464a      	mov	r2, r9
 800fcf6:	465b      	mov	r3, fp
 800fcf8:	f7fb fbc6 	bl	800b488 <LCD_DrawBitmap>
 800fcfc:	fb07 880b 	mla	r8, r7, fp, r8
 800fd00:	4655      	mov	r5, sl
 800fd02:	e049      	b.n	800fd98 <GUI_MEMDEV__WriteToActiveOpaque+0x374>
 800fd04:	2c01      	cmp	r4, #1
 800fd06:	d125      	bne.n	800fd54 <GUI_MEMDEV__WriteToActiveOpaque+0x330>
 800fd08:	f1ba 0f00 	cmp.w	sl, #0
 800fd0c:	d043      	beq.n	800fd96 <GUI_MEMDEV__WriteToActiveOpaque+0x372>
 800fd0e:	9816      	ldr	r0, [sp, #88]	; 0x58
 800fd10:	9703      	str	r7, [sp, #12]
 800fd12:	2208      	movs	r2, #8
 800fd14:	fb90 f1f2 	sdiv	r1, r0, r2
 800fd18:	eb08 0201 	add.w	r2, r8, r1
 800fd1c:	f000 0107 	and.w	r1, r0, #7
 800fd20:	9204      	str	r2, [sp, #16]
 800fd22:	9106      	str	r1, [sp, #24]
 800fd24:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800fd26:	990d      	ldr	r1, [sp, #52]	; 0x34
 800fd28:	9605      	str	r6, [sp, #20]
 800fd2a:	2301      	movs	r3, #1
 800fd2c:	1810      	adds	r0, r2, r0
 800fd2e:	9300      	str	r3, [sp, #0]
 800fd30:	4652      	mov	r2, sl
 800fd32:	9301      	str	r3, [sp, #4]
 800fd34:	9302      	str	r3, [sp, #8]
 800fd36:	1949      	adds	r1, r1, r5
 800fd38:	f7fb faca 	bl	800b2d0 <LCD__DrawBitmap_1bpp>
 800fd3c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800fd3e:	eb03 000a 	add.w	r0, r3, sl
 800fd42:	9016      	str	r0, [sp, #88]	; 0x58
 800fd44:	9819      	ldr	r0, [sp, #100]	; 0x64
 800fd46:	6882      	ldr	r2, [r0, #8]
 800fd48:	a916      	add	r1, sp, #88	; 0x58
 800fd4a:	6953      	ldr	r3, [r2, #20]
 800fd4c:	462a      	mov	r2, r5
 800fd4e:	4798      	blx	r3
 800fd50:	4682      	mov	sl, r0
 800fd52:	e7d9      	b.n	800fd08 <GUI_MEMDEV__WriteToActiveOpaque+0x2e4>
 800fd54:	f1ba 0f00 	cmp.w	sl, #0
 800fd58:	d01d      	beq.n	800fd96 <GUI_MEMDEV__WriteToActiveOpaque+0x372>
 800fd5a:	9816      	ldr	r0, [sp, #88]	; 0x58
 800fd5c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800fd5e:	9402      	str	r4, [sp, #8]
 800fd60:	fb00 8201 	mla	r2, r0, r1, r8
 800fd64:	9204      	str	r2, [sp, #16]
 800fd66:	9910      	ldr	r1, [sp, #64]	; 0x40
 800fd68:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800fd6a:	9703      	str	r7, [sp, #12]
 800fd6c:	2301      	movs	r3, #1
 800fd6e:	1808      	adds	r0, r1, r0
 800fd70:	9300      	str	r3, [sp, #0]
 800fd72:	1951      	adds	r1, r2, r5
 800fd74:	9301      	str	r3, [sp, #4]
 800fd76:	4652      	mov	r2, sl
 800fd78:	9605      	str	r6, [sp, #20]
 800fd7a:	f7fb fb85 	bl	800b488 <LCD_DrawBitmap>
 800fd7e:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800fd80:	eb03 000a 	add.w	r0, r3, sl
 800fd84:	9016      	str	r0, [sp, #88]	; 0x58
 800fd86:	9819      	ldr	r0, [sp, #100]	; 0x64
 800fd88:	6881      	ldr	r1, [r0, #8]
 800fd8a:	462a      	mov	r2, r5
 800fd8c:	694b      	ldr	r3, [r1, #20]
 800fd8e:	a916      	add	r1, sp, #88	; 0x58
 800fd90:	4798      	blx	r3
 800fd92:	4682      	mov	sl, r0
 800fd94:	e7de      	b.n	800fd54 <GUI_MEMDEV__WriteToActiveOpaque+0x330>
 800fd96:	44b8      	add	r8, r7
 800fd98:	3501      	adds	r5, #1
 800fd9a:	e781      	b.n	800fca0 <GUI_MEMDEV__WriteToActiveOpaque+0x27c>
 800fd9c:	a819      	add	r0, sp, #100	; 0x64
 800fd9e:	f7fd fedb 	bl	800db58 <GUI_ALLOC_UnlockH>
 800fda2:	e1c8      	b.n	8010136 <GUI_MEMDEV__WriteToActiveOpaque+0x712>
 800fda4:	2001      	movs	r0, #1
 800fda6:	9000      	str	r0, [sp, #0]
 800fda8:	9001      	str	r0, [sp, #4]
 800fdaa:	9402      	str	r4, [sp, #8]
 800fdac:	9703      	str	r7, [sp, #12]
 800fdae:	f8cd 8010 	str.w	r8, [sp, #16]
 800fdb2:	9605      	str	r6, [sp, #20]
 800fdb4:	9810      	ldr	r0, [sp, #64]	; 0x40
 800fdb6:	990d      	ldr	r1, [sp, #52]	; 0x34
 800fdb8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800fdba:	464a      	mov	r2, r9
 800fdbc:	e03d      	b.n	800fe3a <GUI_MEMDEV__WriteToActiveOpaque+0x416>
 800fdbe:	4640      	mov	r0, r8
 800fdc0:	920a      	str	r2, [sp, #40]	; 0x28
 800fdc2:	f7fd febb 	bl	800db3c <GUI_ALLOC_LockH>
 800fdc6:	4605      	mov	r5, r0
 800fdc8:	a81c      	add	r0, sp, #112	; 0x70
 800fdca:	f8b5 b008 	ldrh.w	fp, [r5, #8]
 800fdce:	f840 5d14 	str.w	r5, [r0, #-20]!
 800fdd2:	682b      	ldr	r3, [r5, #0]
 800fdd4:	8969      	ldrh	r1, [r5, #10]
 800fdd6:	f8d3 9010 	ldr.w	r9, [r3, #16]
 800fdda:	68ee      	ldr	r6, [r5, #12]
 800fddc:	4ca4      	ldr	r4, [pc, #656]	; (8010070 <GUI_MEMDEV__WriteToActiveOpaque+0x64c>)
 800fdde:	9111      	str	r1, [sp, #68]	; 0x44
 800fde0:	fa0f f78b 	sxth.w	r7, fp
 800fde4:	970e      	str	r7, [sp, #56]	; 0x38
 800fde6:	fa0f fa81 	sxth.w	sl, r1
 800fdea:	9609      	str	r6, [sp, #36]	; 0x24
 800fdec:	f7fd feb4 	bl	800db58 <GUI_ALLOC_UnlockH>
 800fdf0:	f8d9 0004 	ldr.w	r0, [r9, #4]
 800fdf4:	6822      	ldr	r2, [r4, #0]
 800fdf6:	900f      	str	r0, [sp, #60]	; 0x3c
 800fdf8:	4f9e      	ldr	r7, [pc, #632]	; (8010074 <GUI_MEMDEV__WriteToActiveOpaque+0x650>)
 800fdfa:	7c50      	ldrb	r0, [r2, #17]
 800fdfc:	f857 1020 	ldr.w	r1, [r7, r0, lsl #2]
 800fe00:	690e      	ldr	r6, [r1, #16]
 800fe02:	6837      	ldr	r7, [r6, #0]
 800fe04:	f7fb f91c 	bl	800b040 <GUI_GetBitsPerPixelEx>
 800fe08:	2808      	cmp	r0, #8
 800fe0a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800fe0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fe0e:	d904      	bls.n	800fe1a <GUI_MEMDEV__WriteToActiveOpaque+0x3f6>
 800fe10:	2810      	cmp	r0, #16
 800fe12:	bf8c      	ite	hi
 800fe14:	2404      	movhi	r4, #4
 800fe16:	2402      	movls	r4, #2
 800fe18:	e000      	b.n	800fe1c <GUI_MEMDEV__WriteToActiveOpaque+0x3f8>
 800fe1a:	2401      	movs	r4, #1
 800fe1c:	45b1      	cmp	r9, r6
 800fe1e:	d10f      	bne.n	800fe40 <GUI_MEMDEV__WriteToActiveOpaque+0x41c>
 800fe20:	2101      	movs	r1, #1
 800fe22:	9100      	str	r1, [sp, #0]
 800fe24:	9101      	str	r1, [sp, #4]
 800fe26:	9202      	str	r2, [sp, #8]
 800fe28:	9303      	str	r3, [sp, #12]
 800fe2a:	3518      	adds	r5, #24
 800fe2c:	2300      	movs	r3, #0
 800fe2e:	9810      	ldr	r0, [sp, #64]	; 0x40
 800fe30:	990d      	ldr	r1, [sp, #52]	; 0x34
 800fe32:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800fe34:	9305      	str	r3, [sp, #20]
 800fe36:	9504      	str	r5, [sp, #16]
 800fe38:	4653      	mov	r3, sl
 800fe3a:	f7fb fb25 	bl	800b488 <LCD_DrawBitmap>
 800fe3e:	e17a      	b.n	8010136 <GUI_MEMDEV__WriteToActiveOpaque+0x712>
 800fe40:	2a20      	cmp	r2, #32
 800fe42:	f040 809c 	bne.w	800ff7e <GUI_MEMDEV__WriteToActiveOpaque+0x55a>
 800fe46:	fa0f f58b 	sxth.w	r5, fp
 800fe4a:	fb05 f004 	mul.w	r0, r5, r4
 800fe4e:	f7fe f8c3 	bl	800dfd8 <GUI_ALLOC_AllocNoInit>
 800fe52:	900f      	str	r0, [sp, #60]	; 0x3c
 800fe54:	2800      	cmp	r0, #0
 800fe56:	f000 816e 	beq.w	8010136 <GUI_MEMDEV__WriteToActiveOpaque+0x712>
 800fe5a:	f7fd fe6f 	bl	800db3c <GUI_ALLOC_LockH>
 800fe5e:	9019      	str	r0, [sp, #100]	; 0x64
 800fe60:	4640      	mov	r0, r8
 800fe62:	f7fd fe6b 	bl	800db3c <GUI_ALLOC_LockH>
 800fe66:	9017      	str	r0, [sp, #92]	; 0x5c
 800fe68:	f100 0b18 	add.w	fp, r0, #24
 800fe6c:	6930      	ldr	r0, [r6, #16]
 800fe6e:	ea4f 0ac4 	mov.w	sl, r4, lsl #3
 800fe72:	b348      	cbz	r0, 800fec8 <GUI_MEMDEV__WriteToActiveOpaque+0x4a4>
 800fe74:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
 800fe78:	ea4f 0985 	mov.w	r9, r5, lsl #2
 800fe7c:	2c02      	cmp	r4, #2
 800fe7e:	d003      	beq.n	800fe88 <GUI_MEMDEV__WriteToActiveOpaque+0x464>
 800fe80:	2c04      	cmp	r4, #4
 800fe82:	d001      	beq.n	800fe88 <GUI_MEMDEV__WriteToActiveOpaque+0x464>
 800fe84:	2c01      	cmp	r4, #1
 800fe86:	d106      	bne.n	800fe96 <GUI_MEMDEV__WriteToActiveOpaque+0x472>
 800fe88:	4658      	mov	r0, fp
 800fe8a:	6937      	ldr	r7, [r6, #16]
 800fe8c:	9919      	ldr	r1, [sp, #100]	; 0x64
 800fe8e:	462a      	mov	r2, r5
 800fe90:	4623      	mov	r3, r4
 800fe92:	47b8      	blx	r7
 800fe94:	44cb      	add	fp, r9
 800fe96:	9919      	ldr	r1, [sp, #100]	; 0x64
 800fe98:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800fe9a:	9104      	str	r1, [sp, #16]
 800fe9c:	2301      	movs	r3, #1
 800fe9e:	2000      	movs	r0, #0
 800fea0:	9300      	str	r3, [sp, #0]
 800fea2:	9301      	str	r3, [sp, #4]
 800fea4:	9003      	str	r0, [sp, #12]
 800fea6:	9005      	str	r0, [sp, #20]
 800fea8:	f8cd a008 	str.w	sl, [sp, #8]
 800feac:	9810      	ldr	r0, [sp, #64]	; 0x40
 800feae:	4641      	mov	r1, r8
 800feb0:	f7fb faea 	bl	800b488 <LCD_DrawBitmap>
 800feb4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800feb6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800feb8:	f108 0701 	add.w	r7, r8, #1
 800febc:	fa02 f083 	sxtah	r0, r2, r3
 800fec0:	42b8      	cmp	r0, r7
 800fec2:	d054      	beq.n	800ff6e <GUI_MEMDEV__WriteToActiveOpaque+0x54a>
 800fec4:	46b8      	mov	r8, r7
 800fec6:	e7d9      	b.n	800fe7c <GUI_MEMDEV__WriteToActiveOpaque+0x458>
 800fec8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800feca:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 800fecc:	2c02      	cmp	r4, #2
 800fece:	9919      	ldr	r1, [sp, #100]	; 0x64
 800fed0:	d010      	beq.n	800fef4 <GUI_MEMDEV__WriteToActiveOpaque+0x4d0>
 800fed2:	2c04      	cmp	r4, #4
 800fed4:	d01c      	beq.n	800ff10 <GUI_MEMDEV__WriteToActiveOpaque+0x4ec>
 800fed6:	2c01      	cmp	r4, #1
 800fed8:	d130      	bne.n	800ff3c <GUI_MEMDEV__WriteToActiveOpaque+0x518>
 800feda:	4689      	mov	r9, r1
 800fedc:	f04f 0800 	mov.w	r8, #0
 800fee0:	f85b 0028 	ldr.w	r0, [fp, r8, lsl #2]
 800fee4:	47b8      	blx	r7
 800fee6:	f809 0008 	strb.w	r0, [r9, r8]
 800feea:	f108 0801 	add.w	r8, r8, #1
 800feee:	4545      	cmp	r5, r8
 800fef0:	d1f6      	bne.n	800fee0 <GUI_MEMDEV__WriteToActiveOpaque+0x4bc>
 800fef2:	e020      	b.n	800ff36 <GUI_MEMDEV__WriteToActiveOpaque+0x512>
 800fef4:	4689      	mov	r9, r1
 800fef6:	465b      	mov	r3, fp
 800fef8:	46a8      	mov	r8, r5
 800fefa:	f853 0b04 	ldr.w	r0, [r3], #4
 800fefe:	9309      	str	r3, [sp, #36]	; 0x24
 800ff00:	47b8      	blx	r7
 800ff02:	f1b8 0801 	subs.w	r8, r8, #1
 800ff06:	f829 0b02 	strh.w	r0, [r9], #2
 800ff0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ff0c:	d1f5      	bne.n	800fefa <GUI_MEMDEV__WriteToActiveOpaque+0x4d6>
 800ff0e:	e00e      	b.n	800ff2e <GUI_MEMDEV__WriteToActiveOpaque+0x50a>
 800ff10:	46a8      	mov	r8, r5
 800ff12:	f04f 0900 	mov.w	r9, #0
 800ff16:	f85b 0009 	ldr.w	r0, [fp, r9]
 800ff1a:	9109      	str	r1, [sp, #36]	; 0x24
 800ff1c:	47b8      	blx	r7
 800ff1e:	9909      	ldr	r1, [sp, #36]	; 0x24
 800ff20:	f1b8 0801 	subs.w	r8, r8, #1
 800ff24:	f841 0009 	str.w	r0, [r1, r9]
 800ff28:	f109 0904 	add.w	r9, r9, #4
 800ff2c:	d1f3      	bne.n	800ff16 <GUI_MEMDEV__WriteToActiveOpaque+0x4f2>
 800ff2e:	eb0b 0b85 	add.w	fp, fp, r5, lsl #2
 800ff32:	4645      	mov	r5, r8
 800ff34:	e002      	b.n	800ff3c <GUI_MEMDEV__WriteToActiveOpaque+0x518>
 800ff36:	eb0b 0b85 	add.w	fp, fp, r5, lsl #2
 800ff3a:	2500      	movs	r5, #0
 800ff3c:	9819      	ldr	r0, [sp, #100]	; 0x64
 800ff3e:	f8cd a008 	str.w	sl, [sp, #8]
 800ff42:	2301      	movs	r3, #1
 800ff44:	2200      	movs	r2, #0
 800ff46:	9300      	str	r3, [sp, #0]
 800ff48:	9301      	str	r3, [sp, #4]
 800ff4a:	9203      	str	r2, [sp, #12]
 800ff4c:	9004      	str	r0, [sp, #16]
 800ff4e:	9205      	str	r2, [sp, #20]
 800ff50:	4631      	mov	r1, r6
 800ff52:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800ff54:	9810      	ldr	r0, [sp, #64]	; 0x40
 800ff56:	f7fb fa97 	bl	800b488 <LCD_DrawBitmap>
 800ff5a:	9911      	ldr	r1, [sp, #68]	; 0x44
 800ff5c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ff5e:	f106 0801 	add.w	r8, r6, #1
 800ff62:	fa03 f281 	sxtah	r2, r3, r1
 800ff66:	4542      	cmp	r2, r8
 800ff68:	d001      	beq.n	800ff6e <GUI_MEMDEV__WriteToActiveOpaque+0x54a>
 800ff6a:	4646      	mov	r6, r8
 800ff6c:	e7ae      	b.n	800fecc <GUI_MEMDEV__WriteToActiveOpaque+0x4a8>
 800ff6e:	a817      	add	r0, sp, #92	; 0x5c
 800ff70:	f7fd fdf2 	bl	800db58 <GUI_ALLOC_UnlockH>
 800ff74:	a819      	add	r0, sp, #100	; 0x64
 800ff76:	f7fd fdef 	bl	800db58 <GUI_ALLOC_UnlockH>
 800ff7a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800ff7c:	e0d9      	b.n	8010132 <GUI_MEMDEV__WriteToActiveOpaque+0x70e>
 800ff7e:	2a10      	cmp	r2, #16
 800ff80:	f040 80d9 	bne.w	8010136 <GUI_MEMDEV__WriteToActiveOpaque+0x712>
 800ff84:	fa0f fa8b 	sxth.w	sl, fp
 800ff88:	fb0a f004 	mul.w	r0, sl, r4
 800ff8c:	f7fe f824 	bl	800dfd8 <GUI_ALLOC_AllocNoInit>
 800ff90:	9012      	str	r0, [sp, #72]	; 0x48
 800ff92:	2800      	cmp	r0, #0
 800ff94:	f000 80cf 	beq.w	8010136 <GUI_MEMDEV__WriteToActiveOpaque+0x712>
 800ff98:	f7fd fdd0 	bl	800db3c <GUI_ALLOC_LockH>
 800ff9c:	9019      	str	r0, [sp, #100]	; 0x64
 800ff9e:	4640      	mov	r0, r8
 800ffa0:	f7fd fdcc 	bl	800db3c <GUI_ALLOC_LockH>
 800ffa4:	9017      	str	r0, [sp, #92]	; 0x5c
 800ffa6:	6931      	ldr	r1, [r6, #16]
 800ffa8:	f100 0518 	add.w	r5, r0, #24
 800ffac:	b111      	cbz	r1, 800ffb4 <GUI_MEMDEV__WriteToActiveOpaque+0x590>
 800ffae:	f8d9 2014 	ldr.w	r2, [r9, #20]
 800ffb2:	b92a      	cbnz	r2, 800ffc0 <GUI_MEMDEV__WriteToActiveOpaque+0x59c>
 800ffb4:	ea4f 0ac4 	mov.w	sl, r4, lsl #3
 800ffb8:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800ffba:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
 800ffbe:	e085      	b.n	80100cc <GUI_MEMDEV__WriteToActiveOpaque+0x6a8>
 800ffc0:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800ffc4:	0088      	lsls	r0, r1, #2
 800ffc6:	f7fe f807 	bl	800dfd8 <GUI_ALLOC_AllocNoInit>
 800ffca:	900f      	str	r0, [sp, #60]	; 0x3c
 800ffcc:	b118      	cbz	r0, 800ffd6 <GUI_MEMDEV__WriteToActiveOpaque+0x5b2>
 800ffce:	f7fd fdb5 	bl	800db3c <GUI_ALLOC_LockH>
 800ffd2:	9018      	str	r0, [sp, #96]	; 0x60
 800ffd4:	e001      	b.n	800ffda <GUI_MEMDEV__WriteToActiveOpaque+0x5b6>
 800ffd6:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800ffd8:	9718      	str	r7, [sp, #96]	; 0x60
 800ffda:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800ffdc:	2b00      	cmp	r3, #0
 800ffde:	f000 80a1 	beq.w	8010124 <GUI_MEMDEV__WriteToActiveOpaque+0x700>
 800ffe2:	fa0f fb8b 	sxth.w	fp, fp
 800ffe6:	ea4f 084b 	mov.w	r8, fp, lsl #1
 800ffea:	00e7      	lsls	r7, r4, #3
 800ffec:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
 800fff0:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 800fff4:	9713      	str	r7, [sp, #76]	; 0x4c
 800fff6:	2c02      	cmp	r4, #2
 800fff8:	f8dd 8064 	ldr.w	r8, [sp, #100]	; 0x64
 800fffc:	d004      	beq.n	8010008 <GUI_MEMDEV__WriteToActiveOpaque+0x5e4>
 800fffe:	2c04      	cmp	r4, #4
 8010000:	d007      	beq.n	8010012 <GUI_MEMDEV__WriteToActiveOpaque+0x5ee>
 8010002:	2c01      	cmp	r4, #1
 8010004:	d114      	bne.n	8010030 <GUI_MEMDEV__WriteToActiveOpaque+0x60c>
 8010006:	e004      	b.n	8010012 <GUI_MEMDEV__WriteToActiveOpaque+0x5ee>
 8010008:	4628      	mov	r0, r5
 801000a:	9918      	ldr	r1, [sp, #96]	; 0x60
 801000c:	4652      	mov	r2, sl
 801000e:	4623      	mov	r3, r4
 8010010:	e003      	b.n	801001a <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
 8010012:	9918      	ldr	r1, [sp, #96]	; 0x60
 8010014:	4628      	mov	r0, r5
 8010016:	4652      	mov	r2, sl
 8010018:	2302      	movs	r3, #2
 801001a:	f8d9 7014 	ldr.w	r7, [r9, #20]
 801001e:	47b8      	blx	r7
 8010020:	4652      	mov	r2, sl
 8010022:	9818      	ldr	r0, [sp, #96]	; 0x60
 8010024:	6937      	ldr	r7, [r6, #16]
 8010026:	4641      	mov	r1, r8
 8010028:	4623      	mov	r3, r4
 801002a:	47b8      	blx	r7
 801002c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801002e:	18ad      	adds	r5, r5, r2
 8010030:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010032:	9919      	ldr	r1, [sp, #100]	; 0x64
 8010034:	9002      	str	r0, [sp, #8]
 8010036:	2301      	movs	r3, #1
 8010038:	2700      	movs	r7, #0
 801003a:	9300      	str	r3, [sp, #0]
 801003c:	9301      	str	r3, [sp, #4]
 801003e:	9703      	str	r7, [sp, #12]
 8010040:	9104      	str	r1, [sp, #16]
 8010042:	9705      	str	r7, [sp, #20]
 8010044:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8010046:	9810      	ldr	r0, [sp, #64]	; 0x40
 8010048:	4659      	mov	r1, fp
 801004a:	f7fb fa1d 	bl	800b488 <LCD_DrawBitmap>
 801004e:	9f11      	ldr	r7, [sp, #68]	; 0x44
 8010050:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010052:	f10b 0801 	add.w	r8, fp, #1
 8010056:	fa03 f287 	sxtah	r2, r3, r7
 801005a:	4542      	cmp	r2, r8
 801005c:	d001      	beq.n	8010062 <GUI_MEMDEV__WriteToActiveOpaque+0x63e>
 801005e:	46c3      	mov	fp, r8
 8010060:	e7c9      	b.n	800fff6 <GUI_MEMDEV__WriteToActiveOpaque+0x5d2>
 8010062:	a818      	add	r0, sp, #96	; 0x60
 8010064:	f7fd fd78 	bl	800db58 <GUI_ALLOC_UnlockH>
 8010068:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801006a:	f7fd fda1 	bl	800dbb0 <GUI_ALLOC_Free>
 801006e:	e059      	b.n	8010124 <GUI_MEMDEV__WriteToActiveOpaque+0x700>
 8010070:	20000278 	.word	0x20000278
 8010074:	2000e67c 	.word	0x2000e67c
 8010078:	4683      	mov	fp, r0
 801007a:	462b      	mov	r3, r5
 801007c:	46b1      	mov	r9, r6
 801007e:	f833 0b02 	ldrh.w	r0, [r3], #2
 8010082:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010084:	9309      	str	r3, [sp, #36]	; 0x24
 8010086:	4790      	blx	r2
 8010088:	47b8      	blx	r7
 801008a:	f1b9 0901 	subs.w	r9, r9, #1
 801008e:	f82b 0b02 	strh.w	r0, [fp], #2
 8010092:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010094:	d1f3      	bne.n	801007e <GUI_MEMDEV__WriteToActiveOpaque+0x65a>
 8010096:	eb05 0546 	add.w	r5, r5, r6, lsl #1
 801009a:	464e      	mov	r6, r9
 801009c:	9919      	ldr	r1, [sp, #100]	; 0x64
 801009e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80100a0:	9104      	str	r1, [sp, #16]
 80100a2:	2301      	movs	r3, #1
 80100a4:	2000      	movs	r0, #0
 80100a6:	9300      	str	r3, [sp, #0]
 80100a8:	9301      	str	r3, [sp, #4]
 80100aa:	9003      	str	r0, [sp, #12]
 80100ac:	9005      	str	r0, [sp, #20]
 80100ae:	f8cd a008 	str.w	sl, [sp, #8]
 80100b2:	9810      	ldr	r0, [sp, #64]	; 0x40
 80100b4:	4641      	mov	r1, r8
 80100b6:	f7fb f9e7 	bl	800b488 <LCD_DrawBitmap>
 80100ba:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80100bc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80100be:	f108 0901 	add.w	r9, r8, #1
 80100c2:	fa02 f083 	sxtah	r0, r2, r3
 80100c6:	4548      	cmp	r0, r9
 80100c8:	d02c      	beq.n	8010124 <GUI_MEMDEV__WriteToActiveOpaque+0x700>
 80100ca:	46c8      	mov	r8, r9
 80100cc:	2c02      	cmp	r4, #2
 80100ce:	9819      	ldr	r0, [sp, #100]	; 0x64
 80100d0:	d0d2      	beq.n	8010078 <GUI_MEMDEV__WriteToActiveOpaque+0x654>
 80100d2:	2c04      	cmp	r4, #4
 80100d4:	d012      	beq.n	80100fc <GUI_MEMDEV__WriteToActiveOpaque+0x6d8>
 80100d6:	2c01      	cmp	r4, #1
 80100d8:	d1e0      	bne.n	801009c <GUI_MEMDEV__WriteToActiveOpaque+0x678>
 80100da:	4683      	mov	fp, r0
 80100dc:	4681      	mov	r9, r0
 80100de:	462a      	mov	r2, r5
 80100e0:	f832 0b02 	ldrh.w	r0, [r2], #2
 80100e4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80100e6:	9209      	str	r2, [sp, #36]	; 0x24
 80100e8:	4798      	blx	r3
 80100ea:	47b8      	blx	r7
 80100ec:	f809 0b01 	strb.w	r0, [r9], #1
 80100f0:	eb0b 0106 	add.w	r1, fp, r6
 80100f4:	4589      	cmp	r9, r1
 80100f6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80100f8:	d1f2      	bne.n	80100e0 <GUI_MEMDEV__WriteToActiveOpaque+0x6bc>
 80100fa:	e00f      	b.n	801011c <GUI_MEMDEV__WriteToActiveOpaque+0x6f8>
 80100fc:	4683      	mov	fp, r0
 80100fe:	4629      	mov	r1, r5
 8010100:	46b1      	mov	r9, r6
 8010102:	f831 0b02 	ldrh.w	r0, [r1], #2
 8010106:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8010108:	9109      	str	r1, [sp, #36]	; 0x24
 801010a:	4798      	blx	r3
 801010c:	47b8      	blx	r7
 801010e:	f1b9 0901 	subs.w	r9, r9, #1
 8010112:	f84b 0b04 	str.w	r0, [fp], #4
 8010116:	9909      	ldr	r1, [sp, #36]	; 0x24
 8010118:	d1f3      	bne.n	8010102 <GUI_MEMDEV__WriteToActiveOpaque+0x6de>
 801011a:	e7bc      	b.n	8010096 <GUI_MEMDEV__WriteToActiveOpaque+0x672>
 801011c:	eb05 0546 	add.w	r5, r5, r6, lsl #1
 8010120:	2600      	movs	r6, #0
 8010122:	e7bb      	b.n	801009c <GUI_MEMDEV__WriteToActiveOpaque+0x678>
 8010124:	a817      	add	r0, sp, #92	; 0x5c
 8010126:	f7fd fd17 	bl	800db58 <GUI_ALLOC_UnlockH>
 801012a:	a819      	add	r0, sp, #100	; 0x64
 801012c:	f7fd fd14 	bl	800db58 <GUI_ALLOC_UnlockH>
 8010130:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010132:	f7fd fd3d 	bl	800dbb0 <GUI_ALLOC_Free>
 8010136:	b01d      	add	sp, #116	; 0x74
 8010138:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801013c <GUI_MEMDEV__WriteToActiveAlpha>:
 801013c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010140:	b093      	sub	sp, #76	; 0x4c
 8010142:	460e      	mov	r6, r1
 8010144:	4615      	mov	r5, r2
 8010146:	900f      	str	r0, [sp, #60]	; 0x3c
 8010148:	f7fd fcf8 	bl	800db3c <GUI_ALLOC_LockH>
 801014c:	4603      	mov	r3, r0
 801014e:	a812      	add	r0, sp, #72	; 0x48
 8010150:	681a      	ldr	r2, [r3, #0]
 8010152:	8919      	ldrh	r1, [r3, #8]
 8010154:	6914      	ldr	r4, [r2, #16]
 8010156:	f840 3d08 	str.w	r3, [r0, #-8]!
 801015a:	895f      	ldrh	r7, [r3, #10]
 801015c:	6863      	ldr	r3, [r4, #4]
 801015e:	4c58      	ldr	r4, [pc, #352]	; (80102c0 <GUI_MEMDEV__WriteToActiveAlpha+0x184>)
 8010160:	910a      	str	r1, [sp, #40]	; 0x28
 8010162:	930c      	str	r3, [sp, #48]	; 0x30
 8010164:	f7fd fcf8 	bl	800db58 <GUI_ALLOC_UnlockH>
 8010168:	6820      	ldr	r0, [r4, #0]
 801016a:	f8df 815c 	ldr.w	r8, [pc, #348]	; 80102c8 <GUI_MEMDEV__WriteToActiveAlpha+0x18c>
 801016e:	7c41      	ldrb	r1, [r0, #17]
 8010170:	f858 0021 	ldr.w	r0, [r8, r1, lsl #2]
 8010174:	68c2      	ldr	r2, [r0, #12]
 8010176:	2108      	movs	r1, #8
 8010178:	6a93      	ldr	r3, [r2, #40]	; 0x28
 801017a:	4798      	blx	r3
 801017c:	2817      	cmp	r0, #23
 801017e:	bf88      	it	hi
 8010180:	2020      	movhi	r0, #32
 8010182:	900b      	str	r0, [sp, #44]	; 0x2c
 8010184:	6820      	ldr	r0, [r4, #0]
 8010186:	7c41      	ldrb	r1, [r0, #17]
 8010188:	f858 2021 	ldr.w	r2, [r8, r1, lsl #2]
 801018c:	6913      	ldr	r3, [r2, #16]
 801018e:	6858      	ldr	r0, [r3, #4]
 8010190:	6819      	ldr	r1, [r3, #0]
 8010192:	900d      	str	r0, [sp, #52]	; 0x34
 8010194:	2000      	movs	r0, #0
 8010196:	9309      	str	r3, [sp, #36]	; 0x24
 8010198:	910e      	str	r1, [sp, #56]	; 0x38
 801019a:	f7fc f80f 	bl	800c1bc <GUI__AllocAlphaBuffer>
 801019e:	2800      	cmp	r0, #0
 80101a0:	f040 808a 	bne.w	80102b8 <GUI_MEMDEV__WriteToActiveAlpha+0x17c>
 80101a4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80101a6:	6823      	ldr	r3, [r4, #0]
 80101a8:	fa0f f882 	sxth.w	r8, r2
 80101ac:	eb06 0408 	add.w	r4, r6, r8
 80101b0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80101b4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80101b8:	1e60      	subs	r0, r4, #1
 80101ba:	1a84      	subs	r4, r0, r2
 80101bc:	2c00      	cmp	r4, #0
 80101be:	bfcc      	ite	gt
 80101c0:	ebc4 0408 	rsbgt	r4, r4, r8
 80101c4:	4644      	movle	r4, r8
 80101c6:	42b1      	cmp	r1, r6
 80101c8:	bfc3      	ittte	gt
 80101ca:	ebc6 0201 	rsbgt	r2, r6, r1
 80101ce:	ebc2 0404 	rsbgt	r4, r2, r4
 80101d2:	460e      	movgt	r6, r1
 80101d4:	2200      	movle	r2, #0
 80101d6:	2c00      	cmp	r4, #0
 80101d8:	dd6e      	ble.n	80102b8 <GUI_MEMDEV__WriteToActiveAlpha+0x17c>
 80101da:	b23f      	sxth	r7, r7
 80101dc:	19e8      	adds	r0, r5, r7
 80101de:	1e41      	subs	r1, r0, #1
 80101e0:	f9b3 000e 	ldrsh.w	r0, [r3, #14]
 80101e4:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 80101e8:	1a09      	subs	r1, r1, r0
 80101ea:	2900      	cmp	r1, #0
 80101ec:	bfc8      	it	gt
 80101ee:	ebc1 0707 	rsbgt	r7, r1, r7
 80101f2:	429d      	cmp	r5, r3
 80101f4:	bfbd      	ittte	lt
 80101f6:	ebc5 0b03 	rsblt	fp, r5, r3
 80101fa:	ebcb 0707 	rsblt	r7, fp, r7
 80101fe:	461d      	movlt	r5, r3
 8010200:	f04f 0b00 	movge.w	fp, #0
 8010204:	2f00      	cmp	r7, #0
 8010206:	dd57      	ble.n	80102b8 <GUI_MEMDEV__WriteToActiveAlpha+0x17c>
 8010208:	fb08 2b0b 	mla	fp, r8, fp, r2
 801020c:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8010210:	46a9      	mov	r9, r5
 8010212:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8010214:	f7f8 fef0 	bl	8008ff8 <GUI_MEMDEV_GetDataPtr>
 8010218:	eb00 020b 	add.w	r2, r0, fp
 801021c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801021e:	a911      	add	r1, sp, #68	; 0x44
 8010220:	9000      	str	r0, [sp, #0]
 8010222:	9101      	str	r1, [sp, #4]
 8010224:	4630      	mov	r0, r6
 8010226:	4649      	mov	r1, r9
 8010228:	4623      	mov	r3, r4
 801022a:	f7fb fee1 	bl	800bff0 <GUI__DoAlphaBlending>
 801022e:	4682      	mov	sl, r0
 8010230:	2800      	cmp	r0, #0
 8010232:	d041      	beq.n	80102b8 <GUI_MEMDEV__WriteToActiveAlpha+0x17c>
 8010234:	4a23      	ldr	r2, [pc, #140]	; (80102c4 <GUI_MEMDEV__WriteToActiveAlpha+0x188>)
 8010236:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010238:	4293      	cmp	r3, r2
 801023a:	d01f      	beq.n	801027c <GUI_MEMDEV__WriteToActiveAlpha+0x140>
 801023c:	4621      	mov	r1, r4
 801023e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8010240:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010242:	f001 fbf4 	bl	8011a2e <GUI__CompactPixelIndicesEx>
 8010246:	b9c8      	cbnz	r0, 801027c <GUI_MEMDEV__WriteToActiveAlpha+0x140>
 8010248:	9809      	ldr	r0, [sp, #36]	; 0x24
 801024a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801024e:	f1bc 0f00 	cmp.w	ip, #0
 8010252:	d006      	beq.n	8010262 <GUI_MEMDEV__WriteToActiveAlpha+0x126>
 8010254:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8010256:	4650      	mov	r0, sl
 8010258:	4651      	mov	r1, sl
 801025a:	b212      	sxth	r2, r2
 801025c:	2304      	movs	r3, #4
 801025e:	47e0      	blx	ip
 8010260:	e00c      	b.n	801027c <GUI_MEMDEV__WriteToActiveAlpha+0x140>
 8010262:	4652      	mov	r2, sl
 8010264:	4641      	mov	r1, r8
 8010266:	6810      	ldr	r0, [r2, #0]
 8010268:	9207      	str	r2, [sp, #28]
 801026a:	9108      	str	r1, [sp, #32]
 801026c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801026e:	4788      	blx	r1
 8010270:	9b08      	ldr	r3, [sp, #32]
 8010272:	9a07      	ldr	r2, [sp, #28]
 8010274:	1e59      	subs	r1, r3, #1
 8010276:	f842 0b04 	str.w	r0, [r2], #4
 801027a:	d1f4      	bne.n	8010266 <GUI_MEMDEV__WriteToActiveAlpha+0x12a>
 801027c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801027e:	f8cd a010 	str.w	sl, [sp, #16]
 8010282:	2301      	movs	r3, #1
 8010284:	2100      	movs	r1, #0
 8010286:	f109 0e01 	add.w	lr, r9, #1
 801028a:	9300      	str	r3, [sp, #0]
 801028c:	9301      	str	r3, [sp, #4]
 801028e:	9002      	str	r0, [sp, #8]
 8010290:	9103      	str	r1, [sp, #12]
 8010292:	9105      	str	r1, [sp, #20]
 8010294:	4630      	mov	r0, r6
 8010296:	4622      	mov	r2, r4
 8010298:	4649      	mov	r1, r9
 801029a:	f8cd e020 	str.w	lr, [sp, #32]
 801029e:	f7fb f8f3 	bl	800b488 <LCD_DrawBitmap>
 80102a2:	f8dd c020 	ldr.w	ip, [sp, #32]
 80102a6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80102a8:	1978      	adds	r0, r7, r5
 80102aa:	2304      	movs	r3, #4
 80102ac:	4560      	cmp	r0, ip
 80102ae:	fb12 bb03 	smlabb	fp, r2, r3, fp
 80102b2:	d001      	beq.n	80102b8 <GUI_MEMDEV__WriteToActiveAlpha+0x17c>
 80102b4:	46e1      	mov	r9, ip
 80102b6:	e7ac      	b.n	8010212 <GUI_MEMDEV__WriteToActiveAlpha+0xd6>
 80102b8:	b013      	add	sp, #76	; 0x4c
 80102ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80102be:	bf00      	nop
 80102c0:	20000278 	.word	0x20000278
 80102c4:	0800e107 	.word	0x0800e107
 80102c8:	2000e67c 	.word	0x2000e67c

080102cc <GUI_MEMDEV_WriteAt>:
 80102cc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80102ce:	460c      	mov	r4, r1
 80102d0:	4615      	mov	r5, r2
 80102d2:	4606      	mov	r6, r0
 80102d4:	b330      	cbz	r0, 8010324 <GUI_MEMDEV_WriteAt+0x58>
 80102d6:	f7fd fc31 	bl	800db3c <GUI_ALLOC_LockH>
 80102da:	4a13      	ldr	r2, [pc, #76]	; (8010328 <GUI_MEMDEV_WriteAt+0x5c>)
 80102dc:	8901      	ldrh	r1, [r0, #8]
 80102de:	9001      	str	r0, [sp, #4]
 80102e0:	4294      	cmp	r4, r2
 80102e2:	bf04      	itt	eq
 80102e4:	f9b0 4004 	ldrsheq.w	r4, [r0, #4]
 80102e8:	f9b0 5006 	ldrsheq.w	r5, [r0, #6]
 80102ec:	8940      	ldrh	r0, [r0, #10]
 80102ee:	f8ad 4008 	strh.w	r4, [sp, #8]
 80102f2:	1e4b      	subs	r3, r1, #1
 80102f4:	1e41      	subs	r1, r0, #1
 80102f6:	191a      	adds	r2, r3, r4
 80102f8:	a801      	add	r0, sp, #4
 80102fa:	194b      	adds	r3, r1, r5
 80102fc:	f8ad 200c 	strh.w	r2, [sp, #12]
 8010300:	f8ad 500a 	strh.w	r5, [sp, #10]
 8010304:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010308:	f7fd fc26 	bl	800db58 <GUI_ALLOC_UnlockH>
 801030c:	a802      	add	r0, sp, #8
 801030e:	f7f8 fabb 	bl	8008888 <WM__InitIVRSearch>
 8010312:	b138      	cbz	r0, 8010324 <GUI_MEMDEV_WriteAt+0x58>
 8010314:	4630      	mov	r0, r6
 8010316:	4621      	mov	r1, r4
 8010318:	462a      	mov	r2, r5
 801031a:	f7f9 fc07 	bl	8009b2c <GUI_MEMDEV__WriteToActiveAt>
 801031e:	f7f8 f9f3 	bl	8008708 <WM__GetNextIVR>
 8010322:	e7f6      	b.n	8010312 <GUI_MEMDEV_WriteAt+0x46>
 8010324:	bd7f      	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
 8010326:	bf00      	nop
 8010328:	fffff001 	.word	0xfffff001

0801032c <GUI_MEMDEV_Write>:
 801032c:	4901      	ldr	r1, [pc, #4]	; (8010334 <GUI_MEMDEV_Write+0x8>)
 801032e:	460a      	mov	r2, r1
 8010330:	f7ff bfcc 	b.w	80102cc <GUI_MEMDEV_WriteAt>
 8010334:	fffff001 	.word	0xfffff001

08010338 <GUI_USAGE_BM_AddPixel>:
 8010338:	4603      	mov	r3, r0
 801033a:	b510      	push	{r4, lr}
 801033c:	f933 4b14 	ldrsh.w	r4, [r3], #20
 8010340:	1b09      	subs	r1, r1, r4
 8010342:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 8010346:	6900      	ldr	r0, [r0, #16]
 8010348:	1b12      	subs	r2, r2, r4
 801034a:	fb00 3302 	mla	r3, r0, r2, r3
 801034e:	10c8      	asrs	r0, r1, #3
 8010350:	2280      	movs	r2, #128	; 0x80
 8010352:	f001 0107 	and.w	r1, r1, #7
 8010356:	fa42 f101 	asr.w	r1, r2, r1
 801035a:	5c1a      	ldrb	r2, [r3, r0]
 801035c:	4311      	orrs	r1, r2
 801035e:	5419      	strb	r1, [r3, r0]
 8010360:	bd10      	pop	{r4, pc}

08010362 <GUI_USAGE_BM_GetNextDirty>:
 8010362:	b570      	push	{r4, r5, r6, lr}
 8010364:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 8010368:	680b      	ldr	r3, [r1, #0]
 801036a:	8886      	ldrh	r6, [r0, #4]
 801036c:	42a2      	cmp	r2, r4
 801036e:	da43      	bge.n	80103f8 <GUI_USAGE_BM_GetNextDirty+0x96>
 8010370:	b236      	sxth	r6, r6
 8010372:	42b3      	cmp	r3, r6
 8010374:	6905      	ldr	r5, [r0, #16]
 8010376:	da3f      	bge.n	80103f8 <GUI_USAGE_BM_GetNextDirty+0x96>
 8010378:	3014      	adds	r0, #20
 801037a:	fb05 0202 	mla	r2, r5, r2, r0
 801037e:	10dc      	asrs	r4, r3, #3
 8010380:	1e70      	subs	r0, r6, #1
 8010382:	1915      	adds	r5, r2, r4
 8010384:	ebc4 00e0 	rsb	r0, r4, r0, asr #3
 8010388:	5d14      	ldrb	r4, [r2, r4]
 801038a:	f003 0207 	and.w	r2, r3, #7
 801038e:	fa04 f402 	lsl.w	r4, r4, r2
 8010392:	b2e4      	uxtb	r4, r4
 8010394:	3501      	adds	r5, #1
 8010396:	b93c      	cbnz	r4, 80103a8 <GUI_USAGE_BM_GetNextDirty+0x46>
 8010398:	b378      	cbz	r0, 80103fa <GUI_USAGE_BM_GetNextDirty+0x98>
 801039a:	3308      	adds	r3, #8
 801039c:	f815 4b01 	ldrb.w	r4, [r5], #1
 80103a0:	3801      	subs	r0, #1
 80103a2:	f023 0307 	bic.w	r3, r3, #7
 80103a6:	e7f6      	b.n	8010396 <GUI_USAGE_BM_GetNextDirty+0x34>
 80103a8:	0622      	lsls	r2, r4, #24
 80103aa:	d403      	bmi.n	80103b4 <GUI_USAGE_BM_GetNextDirty+0x52>
 80103ac:	0062      	lsls	r2, r4, #1
 80103ae:	b2d4      	uxtb	r4, r2
 80103b0:	3301      	adds	r3, #1
 80103b2:	e7f9      	b.n	80103a8 <GUI_USAGE_BM_GetNextDirty+0x46>
 80103b4:	2cff      	cmp	r4, #255	; 0xff
 80103b6:	d008      	beq.n	80103ca <GUI_USAGE_BM_GetNextDirty+0x68>
 80103b8:	461a      	mov	r2, r3
 80103ba:	f004 0640 	and.w	r6, r4, #64	; 0x40
 80103be:	b2f6      	uxtb	r6, r6
 80103c0:	b126      	cbz	r6, 80103cc <GUI_USAGE_BM_GetNextDirty+0x6a>
 80103c2:	0064      	lsls	r4, r4, #1
 80103c4:	b2e4      	uxtb	r4, r4
 80103c6:	3201      	adds	r2, #1
 80103c8:	e7f7      	b.n	80103ba <GUI_USAGE_BM_GetNextDirty+0x58>
 80103ca:	1dda      	adds	r2, r3, #7
 80103cc:	f002 0407 	and.w	r4, r2, #7
 80103d0:	2c07      	cmp	r4, #7
 80103d2:	d10d      	bne.n	80103f0 <GUI_USAGE_BM_GetNextDirty+0x8e>
 80103d4:	3801      	subs	r0, #1
 80103d6:	d40b      	bmi.n	80103f0 <GUI_USAGE_BM_GetNextDirty+0x8e>
 80103d8:	f815 4b01 	ldrb.w	r4, [r5], #1
 80103dc:	2cff      	cmp	r4, #255	; 0xff
 80103de:	d101      	bne.n	80103e4 <GUI_USAGE_BM_GetNextDirty+0x82>
 80103e0:	3208      	adds	r2, #8
 80103e2:	e7f7      	b.n	80103d4 <GUI_USAGE_BM_GetNextDirty+0x72>
 80103e4:	0620      	lsls	r0, r4, #24
 80103e6:	d503      	bpl.n	80103f0 <GUI_USAGE_BM_GetNextDirty+0x8e>
 80103e8:	0060      	lsls	r0, r4, #1
 80103ea:	b2c4      	uxtb	r4, r0
 80103ec:	3201      	adds	r2, #1
 80103ee:	e7f9      	b.n	80103e4 <GUI_USAGE_BM_GetNextDirty+0x82>
 80103f0:	600b      	str	r3, [r1, #0]
 80103f2:	1ad1      	subs	r1, r2, r3
 80103f4:	1c48      	adds	r0, r1, #1
 80103f6:	bd70      	pop	{r4, r5, r6, pc}
 80103f8:	2000      	movs	r0, #0
 80103fa:	bd70      	pop	{r4, r5, r6, pc}

080103fc <_GUI_USAGE_BM_Delete>:
 80103fc:	f7fd bbd8 	b.w	800dbb0 <GUI_ALLOC_Free>

08010400 <GUI_USAGE_BM_Clear>:
 8010400:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8010404:	6902      	ldr	r2, [r0, #16]
 8010406:	2100      	movs	r1, #0
 8010408:	3014      	adds	r0, #20
 801040a:	435a      	muls	r2, r3
 801040c:	f002 bc42 	b.w	8012c94 <memset>

08010410 <GUI_USAGE_BM_AddHLine>:
 8010410:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010412:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010416:	1b09      	subs	r1, r1, r4
 8010418:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 801041c:	42a1      	cmp	r1, r4
 801041e:	da2e      	bge.n	801047e <GUI_USAGE_BM_AddHLine+0x6e>
 8010420:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 8010424:	f100 0614 	add.w	r6, r0, #20
 8010428:	18cb      	adds	r3, r1, r3
 801042a:	6900      	ldr	r0, [r0, #16]
 801042c:	1b52      	subs	r2, r2, r5
 801042e:	1e5d      	subs	r5, r3, #1
 8010430:	fb00 6202 	mla	r2, r0, r2, r6
 8010434:	10cc      	asrs	r4, r1, #3
 8010436:	f001 0607 	and.w	r6, r1, #7
 801043a:	43eb      	mvns	r3, r5
 801043c:	21ff      	movs	r1, #255	; 0xff
 801043e:	fa41 f006 	asr.w	r0, r1, r6
 8010442:	f003 0607 	and.w	r6, r3, #7
 8010446:	fa01 f306 	lsl.w	r3, r1, r6
 801044a:	ebd4 05e5 	rsbs	r5, r4, r5, asr #3
 801044e:	b2de      	uxtb	r6, r3
 8010450:	eb02 0704 	add.w	r7, r2, r4
 8010454:	b2c0      	uxtb	r0, r0
 8010456:	5d13      	ldrb	r3, [r2, r4]
 8010458:	d103      	bne.n	8010462 <GUI_USAGE_BM_AddHLine+0x52>
 801045a:	4006      	ands	r6, r0
 801045c:	4333      	orrs	r3, r6
 801045e:	5513      	strb	r3, [r2, r4]
 8010460:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010462:	4318      	orrs	r0, r3
 8010464:	3d01      	subs	r5, #1
 8010466:	5510      	strb	r0, [r2, r4]
 8010468:	1c7c      	adds	r4, r7, #1
 801046a:	2d00      	cmp	r5, #0
 801046c:	dd04      	ble.n	8010478 <GUI_USAGE_BM_AddHLine+0x68>
 801046e:	4620      	mov	r0, r4
 8010470:	462a      	mov	r2, r5
 8010472:	f002 fc0f 	bl	8012c94 <memset>
 8010476:	1964      	adds	r4, r4, r5
 8010478:	7821      	ldrb	r1, [r4, #0]
 801047a:	430e      	orrs	r6, r1
 801047c:	7026      	strb	r6, [r4, #0]
 801047e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08010480 <GUI_USAGE_BM_Create>:
 8010480:	e92d 4fd3 	stmdb	sp!, {r0, r1, r4, r6, r7, r8, r9, sl, fp, lr}
 8010484:	f102 060f 	add.w	r6, r2, #15
 8010488:	4682      	mov	sl, r0
 801048a:	1130      	asrs	r0, r6, #4
 801048c:	0046      	lsls	r6, r0, #1
 801048e:	fb06 f003 	mul.w	r0, r6, r3
 8010492:	3014      	adds	r0, #20
 8010494:	4689      	mov	r9, r1
 8010496:	4690      	mov	r8, r2
 8010498:	461f      	mov	r7, r3
 801049a:	f7fd fdc3 	bl	800e024 <GUI_ALLOC_AllocZero>
 801049e:	4683      	mov	fp, r0
 80104a0:	b198      	cbz	r0, 80104ca <GUI_USAGE_BM_Create+0x4a>
 80104a2:	f7fd fb4b 	bl	800db3c <GUI_ALLOC_LockH>
 80104a6:	4b0a      	ldr	r3, [pc, #40]	; (80104d0 <GUI_USAGE_BM_Create+0x50>)
 80104a8:	4604      	mov	r4, r0
 80104aa:	a802      	add	r0, sp, #8
 80104ac:	2101      	movs	r1, #1
 80104ae:	f840 4d04 	str.w	r4, [r0, #-4]!
 80104b2:	f8a4 8004 	strh.w	r8, [r4, #4]
 80104b6:	f8a4 a000 	strh.w	sl, [r4]
 80104ba:	f8a4 9002 	strh.w	r9, [r4, #2]
 80104be:	80e7      	strh	r7, [r4, #6]
 80104c0:	60a3      	str	r3, [r4, #8]
 80104c2:	81a1      	strh	r1, [r4, #12]
 80104c4:	6126      	str	r6, [r4, #16]
 80104c6:	f7fd fb47 	bl	800db58 <GUI_ALLOC_UnlockH>
 80104ca:	4658      	mov	r0, fp
 80104cc:	e8bd 8fdc 	ldmia.w	sp!, {r2, r3, r4, r6, r7, r8, r9, sl, fp, pc}
 80104d0:	0802c564 	.word	0x0802c564

080104d4 <GUI_USAGE_DecUseCnt>:
 80104d4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80104d6:	4605      	mov	r5, r0
 80104d8:	f7fd fb30 	bl	800db3c <GUI_ALLOC_LockH>
 80104dc:	4602      	mov	r2, r0
 80104de:	a802      	add	r0, sp, #8
 80104e0:	8994      	ldrh	r4, [r2, #12]
 80104e2:	f840 2d04 	str.w	r2, [r0, #-4]!
 80104e6:	1e61      	subs	r1, r4, #1
 80104e8:	b28c      	uxth	r4, r1
 80104ea:	8194      	strh	r4, [r2, #12]
 80104ec:	f7fd fb34 	bl	800db58 <GUI_ALLOC_UnlockH>
 80104f0:	b914      	cbnz	r4, 80104f8 <GUI_USAGE_DecUseCnt+0x24>
 80104f2:	4628      	mov	r0, r5
 80104f4:	f7fd fb5c 	bl	800dbb0 <GUI_ALLOC_Free>
 80104f8:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

080104fa <GUI_USAGE_AddRect>:
 80104fa:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80104fe:	4605      	mov	r5, r0
 8010500:	4689      	mov	r9, r1
 8010502:	4614      	mov	r4, r2
 8010504:	4698      	mov	r8, r3
 8010506:	68a8      	ldr	r0, [r5, #8]
 8010508:	4649      	mov	r1, r9
 801050a:	6846      	ldr	r6, [r0, #4]
 801050c:	4643      	mov	r3, r8
 801050e:	4628      	mov	r0, r5
 8010510:	1c57      	adds	r7, r2, #1
 8010512:	47b0      	blx	r6
 8010514:	9908      	ldr	r1, [sp, #32]
 8010516:	190b      	adds	r3, r1, r4
 8010518:	42bb      	cmp	r3, r7
 801051a:	463a      	mov	r2, r7
 801051c:	d1f3      	bne.n	8010506 <GUI_USAGE_AddRect+0xc>
 801051e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	...

08010524 <GUI_MEMDEV_ReduceYSize>:
 8010524:	b513      	push	{r0, r1, r4, lr}
 8010526:	460c      	mov	r4, r1
 8010528:	b918      	cbnz	r0, 8010532 <GUI_MEMDEV_ReduceYSize+0xe>
 801052a:	4b08      	ldr	r3, [pc, #32]	; (801054c <GUI_MEMDEV_ReduceYSize+0x28>)
 801052c:	6818      	ldr	r0, [r3, #0]
 801052e:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8010530:	b150      	cbz	r0, 8010548 <GUI_MEMDEV_ReduceYSize+0x24>
 8010532:	f7fd fb03 	bl	800db3c <GUI_ALLOC_LockH>
 8010536:	f9b0 100a 	ldrsh.w	r1, [r0, #10]
 801053a:	9001      	str	r0, [sp, #4]
 801053c:	428c      	cmp	r4, r1
 801053e:	bfb8      	it	lt
 8010540:	8144      	strhlt	r4, [r0, #10]
 8010542:	a801      	add	r0, sp, #4
 8010544:	f7fd fb08 	bl	800db58 <GUI_ALLOC_UnlockH>
 8010548:	bd1c      	pop	{r2, r3, r4, pc}
 801054a:	bf00      	nop
 801054c:	20000278 	.word	0x20000278

08010550 <GUI_MEMDEV_Clear>:
 8010550:	b513      	push	{r0, r1, r4, lr}
 8010552:	b918      	cbnz	r0, 801055c <GUI_MEMDEV_Clear+0xc>
 8010554:	4b0d      	ldr	r3, [pc, #52]	; (801058c <GUI_MEMDEV_Clear+0x3c>)
 8010556:	6818      	ldr	r0, [r3, #0]
 8010558:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801055a:	b1a8      	cbz	r0, 8010588 <GUI_MEMDEV_Clear+0x38>
 801055c:	f7fd faee 	bl	800db3c <GUI_ALLOC_LockH>
 8010560:	a902      	add	r1, sp, #8
 8010562:	6944      	ldr	r4, [r0, #20]
 8010564:	f841 0d08 	str.w	r0, [r1, #-8]!
 8010568:	4668      	mov	r0, sp
 801056a:	f7fd faf5 	bl	800db58 <GUI_ALLOC_UnlockH>
 801056e:	b15c      	cbz	r4, 8010588 <GUI_MEMDEV_Clear+0x38>
 8010570:	4620      	mov	r0, r4
 8010572:	f7fd fae3 	bl	800db3c <GUI_ALLOC_LockH>
 8010576:	ac02      	add	r4, sp, #8
 8010578:	6883      	ldr	r3, [r0, #8]
 801057a:	f844 0d04 	str.w	r0, [r4, #-4]!
 801057e:	6899      	ldr	r1, [r3, #8]
 8010580:	4788      	blx	r1
 8010582:	4620      	mov	r0, r4
 8010584:	f7fd fae8 	bl	800db58 <GUI_ALLOC_UnlockH>
 8010588:	bd1c      	pop	{r2, r3, r4, pc}
 801058a:	bf00      	nop
 801058c:	20000278 	.word	0x20000278

08010590 <_GetDevData>:
 8010590:	4802      	ldr	r0, [pc, #8]	; (801059c <_GetDevData+0xc>)
 8010592:	2901      	cmp	r1, #1
 8010594:	bf18      	it	ne
 8010596:	2000      	movne	r0, #0
 8010598:	4770      	bx	lr
 801059a:	bf00      	nop
 801059c:	0802c5bc 	.word	0x0802c5bc

080105a0 <_GetDevFunc>:
 80105a0:	4802      	ldr	r0, [pc, #8]	; (80105ac <_GetDevFunc+0xc>)
 80105a2:	2916      	cmp	r1, #22
 80105a4:	bf18      	it	ne
 80105a6:	2000      	movne	r0, #0
 80105a8:	4770      	bx	lr
 80105aa:	bf00      	nop
 80105ac:	0800fa25 	.word	0x0800fa25

080105b0 <_SetOrg>:
 80105b0:	6800      	ldr	r0, [r0, #0]
 80105b2:	b508      	push	{r3, lr}
 80105b4:	68c3      	ldr	r3, [r0, #12]
 80105b6:	6a1b      	ldr	r3, [r3, #32]
 80105b8:	4798      	blx	r3
 80105ba:	bd08      	pop	{r3, pc}

080105bc <_GetDevProp>:
 80105bc:	6800      	ldr	r0, [r0, #0]
 80105be:	b508      	push	{r3, lr}
 80105c0:	68c3      	ldr	r3, [r0, #12]
 80105c2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80105c4:	4790      	blx	r2
 80105c6:	bd08      	pop	{r3, pc}

080105c8 <_GetRect>:
 80105c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80105ca:	6880      	ldr	r0, [r0, #8]
 80105cc:	460c      	mov	r4, r1
 80105ce:	f7fd fab5 	bl	800db3c <GUI_ALLOC_LockH>
 80105d2:	4603      	mov	r3, r0
 80105d4:	a802      	add	r0, sp, #8
 80105d6:	8899      	ldrh	r1, [r3, #4]
 80105d8:	891d      	ldrh	r5, [r3, #8]
 80105da:	88da      	ldrh	r2, [r3, #6]
 80105dc:	f840 3d04 	str.w	r3, [r0, #-4]!
 80105e0:	895b      	ldrh	r3, [r3, #10]
 80105e2:	8021      	strh	r1, [r4, #0]
 80105e4:	1949      	adds	r1, r1, r5
 80105e6:	3901      	subs	r1, #1
 80105e8:	8062      	strh	r2, [r4, #2]
 80105ea:	18d2      	adds	r2, r2, r3
 80105ec:	80a1      	strh	r1, [r4, #4]
 80105ee:	1e51      	subs	r1, r2, #1
 80105f0:	80e1      	strh	r1, [r4, #6]
 80105f2:	f7fd fab1 	bl	800db58 <GUI_ALLOC_UnlockH>
 80105f6:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

080105f8 <_XY2PTR>:
 80105f8:	4b0e      	ldr	r3, [pc, #56]	; (8010634 <_XY2PTR+0x3c>)
 80105fa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80105fc:	4605      	mov	r5, r0
 80105fe:	6818      	ldr	r0, [r3, #0]
 8010600:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8010602:	460e      	mov	r6, r1
 8010604:	f7fd fa9a 	bl	800db3c <GUI_ALLOC_LockH>
 8010608:	4602      	mov	r2, r0
 801060a:	a802      	add	r0, sp, #8
 801060c:	f9b2 4006 	ldrsh.w	r4, [r2, #6]
 8010610:	68d3      	ldr	r3, [r2, #12]
 8010612:	f840 2d04 	str.w	r2, [r0, #-4]!
 8010616:	f102 0118 	add.w	r1, r2, #24
 801061a:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 801061e:	1b36      	subs	r6, r6, r4
 8010620:	fb03 1106 	mla	r1, r3, r6, r1
 8010624:	1aad      	subs	r5, r5, r2
 8010626:	eb01 0445 	add.w	r4, r1, r5, lsl #1
 801062a:	f7fd fa95 	bl	800db58 <GUI_ALLOC_UnlockH>
 801062e:	4620      	mov	r0, r4
 8010630:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
 8010632:	bf00      	nop
 8010634:	20000278 	.word	0x20000278

08010638 <_GetPixelIndex>:
 8010638:	b508      	push	{r3, lr}
 801063a:	4608      	mov	r0, r1
 801063c:	4611      	mov	r1, r2
 801063e:	f7ff ffdb 	bl	80105f8 <_XY2PTR>
 8010642:	8800      	ldrh	r0, [r0, #0]
 8010644:	bd08      	pop	{r3, pc}
	...

08010648 <_XorPixel>:
 8010648:	4b14      	ldr	r3, [pc, #80]	; (801069c <_XorPixel+0x54>)
 801064a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801064c:	4607      	mov	r7, r0
 801064e:	6818      	ldr	r0, [r3, #0]
 8010650:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8010652:	4615      	mov	r5, r2
 8010654:	460e      	mov	r6, r1
 8010656:	f7fd fa71 	bl	800db3c <GUI_ALLOC_LockH>
 801065a:	4629      	mov	r1, r5
 801065c:	9000      	str	r0, [sp, #0]
 801065e:	4630      	mov	r0, r6
 8010660:	f7ff ffca 	bl	80105f8 <_XY2PTR>
 8010664:	6939      	ldr	r1, [r7, #16]
 8010666:	4604      	mov	r4, r0
 8010668:	688a      	ldr	r2, [r1, #8]
 801066a:	4790      	blx	r2
 801066c:	8823      	ldrh	r3, [r4, #0]
 801066e:	4058      	eors	r0, r3
 8010670:	8020      	strh	r0, [r4, #0]
 8010672:	9800      	ldr	r0, [sp, #0]
 8010674:	6940      	ldr	r0, [r0, #20]
 8010676:	b160      	cbz	r0, 8010692 <_XorPixel+0x4a>
 8010678:	f7fd fa60 	bl	800db3c <GUI_ALLOC_LockH>
 801067c:	ac02      	add	r4, sp, #8
 801067e:	6882      	ldr	r2, [r0, #8]
 8010680:	f844 0d04 	str.w	r0, [r4, #-4]!
 8010684:	6813      	ldr	r3, [r2, #0]
 8010686:	4631      	mov	r1, r6
 8010688:	462a      	mov	r2, r5
 801068a:	4798      	blx	r3
 801068c:	4620      	mov	r0, r4
 801068e:	f7fd fa63 	bl	800db58 <GUI_ALLOC_UnlockH>
 8010692:	4668      	mov	r0, sp
 8010694:	f7fd fa60 	bl	800db58 <GUI_ALLOC_UnlockH>
 8010698:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 801069a:	bf00      	nop
 801069c:	20000278 	.word	0x20000278

080106a0 <_SetPixelIndex>:
 80106a0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80106a2:	461c      	mov	r4, r3
 80106a4:	4b10      	ldr	r3, [pc, #64]	; (80106e8 <_SetPixelIndex+0x48>)
 80106a6:	6818      	ldr	r0, [r3, #0]
 80106a8:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80106aa:	460e      	mov	r6, r1
 80106ac:	4615      	mov	r5, r2
 80106ae:	f7fd fa45 	bl	800db3c <GUI_ALLOC_LockH>
 80106b2:	4629      	mov	r1, r5
 80106b4:	9000      	str	r0, [sp, #0]
 80106b6:	4630      	mov	r0, r6
 80106b8:	f7ff ff9e 	bl	80105f8 <_XY2PTR>
 80106bc:	9900      	ldr	r1, [sp, #0]
 80106be:	8004      	strh	r4, [r0, #0]
 80106c0:	6948      	ldr	r0, [r1, #20]
 80106c2:	b160      	cbz	r0, 80106de <_SetPixelIndex+0x3e>
 80106c4:	f7fd fa3a 	bl	800db3c <GUI_ALLOC_LockH>
 80106c8:	ac02      	add	r4, sp, #8
 80106ca:	6883      	ldr	r3, [r0, #8]
 80106cc:	f844 0d04 	str.w	r0, [r4, #-4]!
 80106d0:	681b      	ldr	r3, [r3, #0]
 80106d2:	4631      	mov	r1, r6
 80106d4:	462a      	mov	r2, r5
 80106d6:	4798      	blx	r3
 80106d8:	4620      	mov	r0, r4
 80106da:	f7fd fa3d 	bl	800db58 <GUI_ALLOC_UnlockH>
 80106de:	4668      	mov	r0, sp
 80106e0:	f7fd fa3a 	bl	800db58 <GUI_ALLOC_UnlockH>
 80106e4:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
 80106e6:	bf00      	nop
 80106e8:	20000278 	.word	0x20000278

080106ec <_DrawVLine>:
 80106ec:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80106f0:	461e      	mov	r6, r3
 80106f2:	4b2b      	ldr	r3, [pc, #172]	; (80107a0 <_DrawVLine+0xb4>)
 80106f4:	4681      	mov	r9, r0
 80106f6:	6818      	ldr	r0, [r3, #0]
 80106f8:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80106fa:	460f      	mov	r7, r1
 80106fc:	4614      	mov	r4, r2
 80106fe:	f7fd fa1d 	bl	800db3c <GUI_ALLOC_LockH>
 8010702:	9000      	str	r0, [sp, #0]
 8010704:	6940      	ldr	r0, [r0, #20]
 8010706:	b108      	cbz	r0, 801070c <_DrawVLine+0x20>
 8010708:	f7fd fa18 	bl	800db3c <GUI_ALLOC_LockH>
 801070c:	9001      	str	r0, [sp, #4]
 801070e:	4621      	mov	r1, r4
 8010710:	4638      	mov	r0, r7
 8010712:	f7ff ff71 	bl	80105f8 <_XY2PTR>
 8010716:	4a22      	ldr	r2, [pc, #136]	; (80107a0 <_DrawVLine+0xb4>)
 8010718:	9900      	ldr	r1, [sp, #0]
 801071a:	6813      	ldr	r3, [r2, #0]
 801071c:	f8d1 800c 	ldr.w	r8, [r1, #12]
 8010720:	4605      	mov	r5, r0
 8010722:	7c18      	ldrb	r0, [r3, #16]
 8010724:	07c2      	lsls	r2, r0, #31
 8010726:	d51f      	bpl.n	8010768 <_DrawVLine+0x7c>
 8010728:	f8d9 0010 	ldr.w	r0, [r9, #16]
 801072c:	6881      	ldr	r1, [r0, #8]
 801072e:	4788      	blx	r1
 8010730:	fa1f f880 	uxth.w	r8, r0
 8010734:	9801      	ldr	r0, [sp, #4]
 8010736:	b120      	cbz	r0, 8010742 <_DrawVLine+0x56>
 8010738:	6882      	ldr	r2, [r0, #8]
 801073a:	4639      	mov	r1, r7
 801073c:	6813      	ldr	r3, [r2, #0]
 801073e:	4622      	mov	r2, r4
 8010740:	4798      	blx	r3
 8010742:	9a00      	ldr	r2, [sp, #0]
 8010744:	8828      	ldrh	r0, [r5, #0]
 8010746:	68d3      	ldr	r3, [r2, #12]
 8010748:	3401      	adds	r4, #1
 801074a:	ea88 0100 	eor.w	r1, r8, r0
 801074e:	42b4      	cmp	r4, r6
 8010750:	8029      	strh	r1, [r5, #0]
 8010752:	441d      	add	r5, r3
 8010754:	ddee      	ble.n	8010734 <_DrawVLine+0x48>
 8010756:	4668      	mov	r0, sp
 8010758:	f7fd f9fe 	bl	800db58 <GUI_ALLOC_UnlockH>
 801075c:	9801      	ldr	r0, [sp, #4]
 801075e:	b1e8      	cbz	r0, 801079c <_DrawVLine+0xb0>
 8010760:	a801      	add	r0, sp, #4
 8010762:	f7fd f9f9 	bl	800db58 <GUI_ALLOC_UnlockH>
 8010766:	e019      	b.n	801079c <_DrawVLine+0xb0>
 8010768:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 801076a:	9a01      	ldr	r2, [sp, #4]
 801076c:	f8d1 9000 	ldr.w	r9, [r1]
 8010770:	b162      	cbz	r2, 801078c <_DrawVLine+0xa0>
 8010772:	9801      	ldr	r0, [sp, #4]
 8010774:	6883      	ldr	r3, [r0, #8]
 8010776:	4622      	mov	r2, r4
 8010778:	681b      	ldr	r3, [r3, #0]
 801077a:	4639      	mov	r1, r7
 801077c:	3401      	adds	r4, #1
 801077e:	4798      	blx	r3
 8010780:	42b4      	cmp	r4, r6
 8010782:	f8a5 9000 	strh.w	r9, [r5]
 8010786:	4445      	add	r5, r8
 8010788:	ddf3      	ble.n	8010772 <_DrawVLine+0x86>
 801078a:	e7e4      	b.n	8010756 <_DrawVLine+0x6a>
 801078c:	1b34      	subs	r4, r6, r4
 801078e:	3401      	adds	r4, #1
 8010790:	3c01      	subs	r4, #1
 8010792:	f8a5 9000 	strh.w	r9, [r5]
 8010796:	4445      	add	r5, r8
 8010798:	d1fa      	bne.n	8010790 <_DrawVLine+0xa4>
 801079a:	e7dc      	b.n	8010756 <_DrawVLine+0x6a>
 801079c:	e8bd 83fe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
 80107a0:	20000278 	.word	0x20000278

080107a4 <_FillRect>:
 80107a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80107a8:	461e      	mov	r6, r3
 80107aa:	4b29      	ldr	r3, [pc, #164]	; (8010850 <_FillRect+0xac>)
 80107ac:	4614      	mov	r4, r2
 80107ae:	681a      	ldr	r2, [r3, #0]
 80107b0:	460f      	mov	r7, r1
 80107b2:	6bd1      	ldr	r1, [r2, #60]	; 0x3c
 80107b4:	b085      	sub	sp, #20
 80107b6:	4683      	mov	fp, r0
 80107b8:	6e10      	ldr	r0, [r2, #96]	; 0x60
 80107ba:	f8d1 9000 	ldr.w	r9, [r1]
 80107be:	f7fd f9bd 	bl	800db3c <GUI_ALLOC_LockH>
 80107c2:	4621      	mov	r1, r4
 80107c4:	9002      	str	r0, [sp, #8]
 80107c6:	4638      	mov	r0, r7
 80107c8:	f7ff ff16 	bl	80105f8 <_XY2PTR>
 80107cc:	4605      	mov	r5, r0
 80107ce:	9802      	ldr	r0, [sp, #8]
 80107d0:	f8d0 a00c 	ldr.w	sl, [r0, #12]
 80107d4:	6940      	ldr	r0, [r0, #20]
 80107d6:	1bf6      	subs	r6, r6, r7
 80107d8:	3601      	adds	r6, #1
 80107da:	b338      	cbz	r0, 801082c <_FillRect+0x88>
 80107dc:	f7fd f9ae 	bl	800db3c <GUI_ALLOC_LockH>
 80107e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80107e2:	f10d 0810 	add.w	r8, sp, #16
 80107e6:	1b1a      	subs	r2, r3, r4
 80107e8:	f848 0d04 	str.w	r0, [r8, #-4]!
 80107ec:	1c51      	adds	r1, r2, #1
 80107ee:	9100      	str	r1, [sp, #0]
 80107f0:	4622      	mov	r2, r4
 80107f2:	4639      	mov	r1, r7
 80107f4:	4633      	mov	r3, r6
 80107f6:	f7ff fe80 	bl	80104fa <GUI_USAGE_AddRect>
 80107fa:	4640      	mov	r0, r8
 80107fc:	f7fd f9ac 	bl	800db58 <GUI_ALLOC_UnlockH>
 8010800:	e014      	b.n	801082c <_FillRect+0x88>
 8010802:	4b13      	ldr	r3, [pc, #76]	; (8010850 <_FillRect+0xac>)
 8010804:	681a      	ldr	r2, [r3, #0]
 8010806:	7c11      	ldrb	r1, [r2, #16]
 8010808:	07c9      	lsls	r1, r1, #31
 801080a:	d513      	bpl.n	8010834 <_FillRect+0x90>
 801080c:	f8db 0010 	ldr.w	r0, [fp, #16]
 8010810:	6883      	ldr	r3, [r0, #8]
 8010812:	4798      	blx	r3
 8010814:	462a      	mov	r2, r5
 8010816:	b280      	uxth	r0, r0
 8010818:	4633      	mov	r3, r6
 801081a:	8811      	ldrh	r1, [r2, #0]
 801081c:	3b01      	subs	r3, #1
 801081e:	ea81 0100 	eor.w	r1, r1, r0
 8010822:	f822 1b02 	strh.w	r1, [r2], #2
 8010826:	d1f8      	bne.n	801081a <_FillRect+0x76>
 8010828:	4455      	add	r5, sl
 801082a:	3401      	adds	r4, #1
 801082c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801082e:	4284      	cmp	r4, r0
 8010830:	dde7      	ble.n	8010802 <_FillRect+0x5e>
 8010832:	e006      	b.n	8010842 <_FillRect+0x9e>
 8010834:	4628      	mov	r0, r5
 8010836:	fa1f f189 	uxth.w	r1, r9
 801083a:	4632      	mov	r2, r6
 801083c:	f7fa ffff 	bl	800b83e <GUI__memset16>
 8010840:	e7f2      	b.n	8010828 <_FillRect+0x84>
 8010842:	a802      	add	r0, sp, #8
 8010844:	f7fd f988 	bl	800db58 <GUI_ALLOC_UnlockH>
 8010848:	b005      	add	sp, #20
 801084a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801084e:	bf00      	nop
 8010850:	20000278 	.word	0x20000278

08010854 <_DrawHLine>:
 8010854:	b507      	push	{r0, r1, r2, lr}
 8010856:	9200      	str	r2, [sp, #0]
 8010858:	f7ff ffa4 	bl	80107a4 <_FillRect>
 801085c:	bd0e      	pop	{r1, r2, r3, pc}
	...

08010860 <_DrawBitmap>:
 8010860:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010864:	469b      	mov	fp, r3
 8010866:	b095      	sub	sp, #84	; 0x54
 8010868:	4b8c      	ldr	r3, [pc, #560]	; (8010a9c <_DrawBitmap+0x23c>)
 801086a:	900e      	str	r0, [sp, #56]	; 0x38
 801086c:	6818      	ldr	r0, [r3, #0]
 801086e:	920a      	str	r2, [sp, #40]	; 0x28
 8010870:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8010872:	f8dd a084 	ldr.w	sl, [sp, #132]	; 0x84
 8010876:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8010878:	460c      	mov	r4, r1
 801087a:	f7fd f95f 	bl	800db3c <GUI_ALLOC_LockH>
 801087e:	9012      	str	r0, [sp, #72]	; 0x48
 8010880:	6940      	ldr	r0, [r0, #20]
 8010882:	b108      	cbz	r0, 8010888 <_DrawBitmap+0x28>
 8010884:	f7fd f95a 	bl	800db3c <GUI_ALLOC_LockH>
 8010888:	9013      	str	r0, [sp, #76]	; 0x4c
 801088a:	a814      	add	r0, sp, #80	; 0x50
 801088c:	f850 1d08 	ldr.w	r1, [r0, #-8]!
 8010890:	68ca      	ldr	r2, [r1, #12]
 8010892:	920b      	str	r2, [sp, #44]	; 0x2c
 8010894:	f7fd f960 	bl	800db58 <GUI_ALLOC_UnlockH>
 8010898:	9f22      	ldr	r7, [sp, #136]	; 0x88
 801089a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801089c:	19e4      	adds	r4, r4, r7
 801089e:	9406      	str	r4, [sp, #24]
 80108a0:	b158      	cbz	r0, 80108ba <_DrawBitmap+0x5a>
 80108a2:	4b7e      	ldr	r3, [pc, #504]	; (8010a9c <_DrawBitmap+0x23c>)
 80108a4:	6819      	ldr	r1, [r3, #0]
 80108a6:	7c0a      	ldrb	r2, [r1, #16]
 80108a8:	0797      	lsls	r7, r2, #30
 80108aa:	d106      	bne.n	80108ba <_DrawBitmap+0x5a>
 80108ac:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 80108ae:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80108b0:	9700      	str	r7, [sp, #0]
 80108b2:	4621      	mov	r1, r4
 80108b4:	465b      	mov	r3, fp
 80108b6:	f7ff fe20 	bl	80104fa <GUI_USAGE_AddRect>
 80108ba:	9806      	ldr	r0, [sp, #24]
 80108bc:	990a      	ldr	r1, [sp, #40]	; 0x28
 80108be:	f7ff fe9b 	bl	80105f8 <_XY2PTR>
 80108c2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80108c4:	2b10      	cmp	r3, #16
 80108c6:	4604      	mov	r4, r0
 80108c8:	d139      	bne.n	801093e <_DrawBitmap+0xde>
 80108ca:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80108cc:	b11e      	cbz	r6, 80108d6 <_DrawBitmap+0x76>
 80108ce:	ea4f 064b 	mov.w	r6, fp, lsl #1
 80108d2:	2500      	movs	r5, #0
 80108d4:	e014      	b.n	8010900 <_DrawBitmap+0xa0>
 80108d6:	4972      	ldr	r1, [pc, #456]	; (8010aa0 <_DrawBitmap+0x240>)
 80108d8:	680d      	ldr	r5, [r1, #0]
 80108da:	2d00      	cmp	r5, #0
 80108dc:	d0f7      	beq.n	80108ce <_DrawBitmap+0x6e>
 80108de:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80108e0:	9f20      	ldr	r7, [sp, #128]	; 0x80
 80108e2:	9600      	str	r6, [sp, #0]
 80108e4:	9701      	str	r7, [sp, #4]
 80108e6:	4651      	mov	r1, sl
 80108e8:	465a      	mov	r2, fp
 80108ea:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80108ec:	47a8      	blx	r5
 80108ee:	e353      	b.n	8010f98 <_DrawBitmap+0x738>
 80108f0:	f1ba 0f00 	cmp.w	sl, #0
 80108f4:	d10a      	bne.n	801090c <_DrawBitmap+0xac>
 80108f6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80108f8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80108fa:	4492      	add	sl, r2
 80108fc:	1864      	adds	r4, r4, r1
 80108fe:	3501      	adds	r5, #1
 8010900:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8010902:	f8dd 804c 	ldr.w	r8, [sp, #76]	; 0x4c
 8010906:	42bd      	cmp	r5, r7
 8010908:	dbf2      	blt.n	80108f0 <_DrawBitmap+0x90>
 801090a:	e013      	b.n	8010934 <_DrawBitmap+0xd4>
 801090c:	2c00      	cmp	r4, #0
 801090e:	d0f2      	beq.n	80108f6 <_DrawBitmap+0x96>
 8010910:	4620      	mov	r0, r4
 8010912:	4651      	mov	r1, sl
 8010914:	4632      	mov	r2, r6
 8010916:	f7ef fc37 	bl	8000188 <memcpy>
 801091a:	f1b8 0f00 	cmp.w	r8, #0
 801091e:	d0ea      	beq.n	80108f6 <_DrawBitmap+0x96>
 8010920:	f8d8 0008 	ldr.w	r0, [r8, #8]
 8010924:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010926:	6847      	ldr	r7, [r0, #4]
 8010928:	9906      	ldr	r1, [sp, #24]
 801092a:	18ea      	adds	r2, r5, r3
 801092c:	4640      	mov	r0, r8
 801092e:	465b      	mov	r3, fp
 8010930:	47b8      	blx	r7
 8010932:	e7e0      	b.n	80108f6 <_DrawBitmap+0x96>
 8010934:	f1b8 0f00 	cmp.w	r8, #0
 8010938:	f040 832b 	bne.w	8010f92 <_DrawBitmap+0x732>
 801093c:	e32c      	b.n	8010f98 <_DrawBitmap+0x738>
 801093e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8010940:	2817      	cmp	r0, #23
 8010942:	dd39      	ble.n	80109b8 <_DrawBitmap+0x158>
 8010944:	2600      	movs	r6, #0
 8010946:	9f1e      	ldr	r7, [sp, #120]	; 0x78
 8010948:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801094a:	42be      	cmp	r6, r7
 801094c:	f280 80a1 	bge.w	8010a92 <_DrawBitmap+0x232>
 8010950:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8010952:	eb06 0907 	add.w	r9, r6, r7
 8010956:	f1ba 0f00 	cmp.w	sl, #0
 801095a:	d027      	beq.n	80109ac <_DrawBitmap+0x14c>
 801095c:	b334      	cbz	r4, 80109ac <_DrawBitmap+0x14c>
 801095e:	b135      	cbz	r5, 801096e <_DrawBitmap+0x10e>
 8010960:	68aa      	ldr	r2, [r5, #8]
 8010962:	9906      	ldr	r1, [sp, #24]
 8010964:	6857      	ldr	r7, [r2, #4]
 8010966:	4628      	mov	r0, r5
 8010968:	464a      	mov	r2, r9
 801096a:	465b      	mov	r3, fp
 801096c:	47b8      	blx	r7
 801096e:	1ea3      	subs	r3, r4, #2
 8010970:	f10a 0804 	add.w	r8, sl, #4
 8010974:	9307      	str	r3, [sp, #28]
 8010976:	465f      	mov	r7, fp
 8010978:	9806      	ldr	r0, [sp, #24]
 801097a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801097c:	eb00 010b 	add.w	r1, r0, fp
 8010980:	6913      	ldr	r3, [r2, #16]
 8010982:	f858 0c04 	ldr.w	r0, [r8, #-4]
 8010986:	681a      	ldr	r2, [r3, #0]
 8010988:	1bc9      	subs	r1, r1, r7
 801098a:	9105      	str	r1, [sp, #20]
 801098c:	4790      	blx	r2
 801098e:	9907      	ldr	r1, [sp, #28]
 8010990:	f821 0f02 	strh.w	r0, [r1, #2]!
 8010994:	9107      	str	r1, [sp, #28]
 8010996:	9905      	ldr	r1, [sp, #20]
 8010998:	b125      	cbz	r5, 80109a4 <_DrawBitmap+0x144>
 801099a:	68a8      	ldr	r0, [r5, #8]
 801099c:	464a      	mov	r2, r9
 801099e:	6803      	ldr	r3, [r0, #0]
 80109a0:	4628      	mov	r0, r5
 80109a2:	4798      	blx	r3
 80109a4:	3f01      	subs	r7, #1
 80109a6:	f108 0804 	add.w	r8, r8, #4
 80109aa:	d1e5      	bne.n	8010978 <_DrawBitmap+0x118>
 80109ac:	9d20      	ldr	r5, [sp, #128]	; 0x80
 80109ae:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80109b0:	44aa      	add	sl, r5
 80109b2:	18a4      	adds	r4, r4, r2
 80109b4:	3601      	adds	r6, #1
 80109b6:	e7c6      	b.n	8010946 <_DrawBitmap+0xe6>
 80109b8:	991f      	ldr	r1, [sp, #124]	; 0x7c
 80109ba:	2908      	cmp	r1, #8
 80109bc:	d172      	bne.n	8010aa4 <_DrawBitmap+0x244>
 80109be:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80109c0:	3402      	adds	r4, #2
 80109c2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80109c4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80109c6:	1b79      	subs	r1, r7, r5
 80109c8:	1ea0      	subs	r0, r4, #2
 80109ca:	4299      	cmp	r1, r3
 80109cc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80109ce:	da60      	bge.n	8010a92 <_DrawBitmap+0x232>
 80109d0:	4a32      	ldr	r2, [pc, #200]	; (8010a9c <_DrawBitmap+0x23c>)
 80109d2:	6811      	ldr	r1, [r2, #0]
 80109d4:	7c0b      	ldrb	r3, [r1, #16]
 80109d6:	b376      	cbz	r6, 8010a36 <_DrawBitmap+0x1d6>
 80109d8:	f013 0303 	ands.w	r3, r3, #3
 80109dc:	d005      	beq.n	80109ea <_DrawBitmap+0x18a>
 80109de:	2b02      	cmp	r3, #2
 80109e0:	d151      	bne.n	8010a86 <_DrawBitmap+0x226>
 80109e2:	46a1      	mov	r9, r4
 80109e4:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80109e8:	e01d      	b.n	8010a26 <_DrawBitmap+0x1c6>
 80109ea:	f81a 5003 	ldrb.w	r5, [sl, r3]
 80109ee:	f856 2025 	ldr.w	r2, [r6, r5, lsl #2]
 80109f2:	f820 2013 	strh.w	r2, [r0, r3, lsl #1]
 80109f6:	3301      	adds	r3, #1
 80109f8:	455b      	cmp	r3, fp
 80109fa:	d1f6      	bne.n	80109ea <_DrawBitmap+0x18a>
 80109fc:	e043      	b.n	8010a86 <_DrawBitmap+0x226>
 80109fe:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 8010a02:	f829 1c02 	strh.w	r1, [r9, #-2]
 8010a06:	b12d      	cbz	r5, 8010a14 <_DrawBitmap+0x1b4>
 8010a08:	68aa      	ldr	r2, [r5, #8]
 8010a0a:	4628      	mov	r0, r5
 8010a0c:	6813      	ldr	r3, [r2, #0]
 8010a0e:	4641      	mov	r1, r8
 8010a10:	463a      	mov	r2, r7
 8010a12:	4798      	blx	r3
 8010a14:	9806      	ldr	r0, [sp, #24]
 8010a16:	f108 0801 	add.w	r8, r8, #1
 8010a1a:	eb00 010b 	add.w	r1, r0, fp
 8010a1e:	4541      	cmp	r1, r8
 8010a20:	f109 0902 	add.w	r9, r9, #2
 8010a24:	d02f      	beq.n	8010a86 <_DrawBitmap+0x226>
 8010a26:	9a06      	ldr	r2, [sp, #24]
 8010a28:	ebc2 030a 	rsb	r3, r2, sl
 8010a2c:	f813 0008 	ldrb.w	r0, [r3, r8]
 8010a30:	2800      	cmp	r0, #0
 8010a32:	d0ef      	beq.n	8010a14 <_DrawBitmap+0x1b4>
 8010a34:	e7e3      	b.n	80109fe <_DrawBitmap+0x19e>
 8010a36:	f013 0203 	ands.w	r2, r3, #3
 8010a3a:	d005      	beq.n	8010a48 <_DrawBitmap+0x1e8>
 8010a3c:	2a02      	cmp	r2, #2
 8010a3e:	d122      	bne.n	8010a86 <_DrawBitmap+0x226>
 8010a40:	46a1      	mov	r9, r4
 8010a42:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8010a46:	e016      	b.n	8010a76 <_DrawBitmap+0x216>
 8010a48:	4651      	mov	r1, sl
 8010a4a:	465a      	mov	r2, fp
 8010a4c:	f7ef fb9c 	bl	8000188 <memcpy>
 8010a50:	e019      	b.n	8010a86 <_DrawBitmap+0x226>
 8010a52:	f829 3c02 	strh.w	r3, [r9, #-2]
 8010a56:	b12d      	cbz	r5, 8010a64 <_DrawBitmap+0x204>
 8010a58:	68aa      	ldr	r2, [r5, #8]
 8010a5a:	4628      	mov	r0, r5
 8010a5c:	6813      	ldr	r3, [r2, #0]
 8010a5e:	4641      	mov	r1, r8
 8010a60:	463a      	mov	r2, r7
 8010a62:	4798      	blx	r3
 8010a64:	9806      	ldr	r0, [sp, #24]
 8010a66:	f108 0801 	add.w	r8, r8, #1
 8010a6a:	eb00 010b 	add.w	r1, r0, fp
 8010a6e:	4541      	cmp	r1, r8
 8010a70:	f109 0902 	add.w	r9, r9, #2
 8010a74:	d007      	beq.n	8010a86 <_DrawBitmap+0x226>
 8010a76:	9806      	ldr	r0, [sp, #24]
 8010a78:	ebc0 010a 	rsb	r1, r0, sl
 8010a7c:	f811 3008 	ldrb.w	r3, [r1, r8]
 8010a80:	2b00      	cmp	r3, #0
 8010a82:	d0ef      	beq.n	8010a64 <_DrawBitmap+0x204>
 8010a84:	e7e5      	b.n	8010a52 <_DrawBitmap+0x1f2>
 8010a86:	9820      	ldr	r0, [sp, #128]	; 0x80
 8010a88:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8010a8a:	4482      	add	sl, r0
 8010a8c:	3701      	adds	r7, #1
 8010a8e:	1864      	adds	r4, r4, r1
 8010a90:	e797      	b.n	80109c2 <_DrawBitmap+0x162>
 8010a92:	2d00      	cmp	r5, #0
 8010a94:	f040 827d 	bne.w	8010f92 <_DrawBitmap+0x732>
 8010a98:	e27e      	b.n	8010f98 <_DrawBitmap+0x738>
 8010a9a:	bf00      	nop
 8010a9c:	20000278 	.word	0x20000278
 8010aa0:	2000e224 	.word	0x2000e224
 8010aa4:	4a9c      	ldr	r2, [pc, #624]	; (8010d18 <_DrawBitmap+0x4b8>)
 8010aa6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8010aa8:	990a      	ldr	r1, [sp, #40]	; 0x28
 8010aaa:	2e00      	cmp	r6, #0
 8010aac:	bf08      	it	eq
 8010aae:	4616      	moveq	r6, r2
 8010ab0:	9607      	str	r6, [sp, #28]
 8010ab2:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8010ab4:	9109      	str	r1, [sp, #36]	; 0x24
 8010ab6:	0077      	lsls	r7, r6, #1
 8010ab8:	0098      	lsls	r0, r3, #2
 8010aba:	3402      	adds	r4, #2
 8010abc:	970f      	str	r7, [sp, #60]	; 0x3c
 8010abe:	9010      	str	r0, [sp, #64]	; 0x40
 8010ac0:	940c      	str	r4, [sp, #48]	; 0x30
 8010ac2:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8010ac4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8010ac6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8010ac8:	1bf3      	subs	r3, r6, r7
 8010aca:	9e1e      	ldr	r6, [sp, #120]	; 0x78
 8010acc:	1e94      	subs	r4, r2, #2
 8010ace:	42b3      	cmp	r3, r6
 8010ad0:	f280 825d 	bge.w	8010f8e <_DrawBitmap+0x72e>
 8010ad4:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 8010ad6:	2f02      	cmp	r7, #2
 8010ad8:	f000 80dc 	beq.w	8010c94 <_DrawBitmap+0x434>
 8010adc:	2f04      	cmp	r7, #4
 8010ade:	f000 8182 	beq.w	8010de6 <_DrawBitmap+0x586>
 8010ae2:	2f01      	cmp	r7, #1
 8010ae4:	f040 8249 	bne.w	8010f7a <_DrawBitmap+0x71a>
 8010ae8:	f8df 9234 	ldr.w	r9, [pc, #564]	; 8010d20 <_DrawBitmap+0x4c0>
 8010aec:	f8d9 5000 	ldr.w	r5, [r9]
 8010af0:	6e28      	ldr	r0, [r5, #96]	; 0x60
 8010af2:	f7fd f823 	bl	800db3c <GUI_ALLOC_LockH>
 8010af6:	f89a 3000 	ldrb.w	r3, [sl]
 8010afa:	4a88      	ldr	r2, [pc, #544]	; (8010d1c <_DrawBitmap+0x4bc>)
 8010afc:	9922      	ldr	r1, [sp, #136]	; 0x88
 8010afe:	5cd5      	ldrb	r5, [r2, r3]
 8010b00:	9012      	str	r0, [sp, #72]	; 0x48
 8010b02:	f8d9 0000 	ldr.w	r0, [r9]
 8010b06:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 8010b08:	f1c1 0808 	rsb	r8, r1, #8
 8010b0c:	fa45 f501 	asr.w	r5, r5, r1
 8010b10:	7c01      	ldrb	r1, [r0, #16]
 8010b12:	f001 0303 	and.w	r3, r1, #3
 8010b16:	2b02      	cmp	r3, #2
 8010b18:	465e      	mov	r6, fp
 8010b1a:	d021      	beq.n	8010b60 <_DrawBitmap+0x300>
 8010b1c:	2b03      	cmp	r3, #3
 8010b1e:	d05f      	beq.n	8010be0 <_DrawBitmap+0x380>
 8010b20:	2b01      	cmp	r3, #1
 8010b22:	d05d      	beq.n	8010be0 <_DrawBitmap+0x380>
 8010b24:	4652      	mov	r2, sl
 8010b26:	4546      	cmp	r6, r8
 8010b28:	bf38      	it	cc
 8010b2a:	46b0      	movcc	r8, r6
 8010b2c:	ebc8 0606 	rsb	r6, r8, r6
 8010b30:	4643      	mov	r3, r8
 8010b32:	4621      	mov	r1, r4
 8010b34:	f005 0001 	and.w	r0, r5, #1
 8010b38:	9f07      	ldr	r7, [sp, #28]
 8010b3a:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
 8010b3e:	086d      	lsrs	r5, r5, #1
 8010b40:	3b01      	subs	r3, #1
 8010b42:	f821 0b02 	strh.w	r0, [r1], #2
 8010b46:	d1f5      	bne.n	8010b34 <_DrawBitmap+0x2d4>
 8010b48:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 8010b4c:	2e00      	cmp	r6, #0
 8010b4e:	f000 809d 	beq.w	8010c8c <_DrawBitmap+0x42c>
 8010b52:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 8010b56:	4971      	ldr	r1, [pc, #452]	; (8010d1c <_DrawBitmap+0x4bc>)
 8010b58:	f04f 0808 	mov.w	r8, #8
 8010b5c:	5d4d      	ldrb	r5, [r1, r5]
 8010b5e:	e7e2      	b.n	8010b26 <_DrawBitmap+0x2c6>
 8010b60:	9a07      	ldr	r2, [sp, #28]
 8010b62:	f8dd 9018 	ldr.w	r9, [sp, #24]
 8010b66:	f8b2 c004 	ldrh.w	ip, [r2, #4]
 8010b6a:	f8cd a020 	str.w	sl, [sp, #32]
 8010b6e:	4546      	cmp	r6, r8
 8010b70:	bf38      	it	cc
 8010b72:	46b0      	movcc	r8, r6
 8010b74:	ebc8 0606 	rsb	r6, r8, r6
 8010b78:	b31f      	cbz	r7, 8010bc2 <_DrawBitmap+0x362>
 8010b7a:	b91d      	cbnz	r5, 8010b84 <_DrawBitmap+0x324>
 8010b7c:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 8010b80:	44c1      	add	r9, r8
 8010b82:	e022      	b.n	8010bca <_DrawBitmap+0x36a>
 8010b84:	07e9      	lsls	r1, r5, #31
 8010b86:	d50b      	bpl.n	8010ba0 <_DrawBitmap+0x340>
 8010b88:	68bb      	ldr	r3, [r7, #8]
 8010b8a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010b8c:	681b      	ldr	r3, [r3, #0]
 8010b8e:	f8cd c014 	str.w	ip, [sp, #20]
 8010b92:	4638      	mov	r0, r7
 8010b94:	4649      	mov	r1, r9
 8010b96:	4798      	blx	r3
 8010b98:	f8dd c014 	ldr.w	ip, [sp, #20]
 8010b9c:	f8a4 c000 	strh.w	ip, [r4]
 8010ba0:	3402      	adds	r4, #2
 8010ba2:	f1b8 0801 	subs.w	r8, r8, #1
 8010ba6:	f109 0901 	add.w	r9, r9, #1
 8010baa:	d00e      	beq.n	8010bca <_DrawBitmap+0x36a>
 8010bac:	086d      	lsrs	r5, r5, #1
 8010bae:	e7e4      	b.n	8010b7a <_DrawBitmap+0x31a>
 8010bb0:	07ea      	lsls	r2, r5, #31
 8010bb2:	bf48      	it	mi
 8010bb4:	f8a4 c000 	strhmi.w	ip, [r4]
 8010bb8:	3402      	adds	r4, #2
 8010bba:	f1b8 0801 	subs.w	r8, r8, #1
 8010bbe:	d004      	beq.n	8010bca <_DrawBitmap+0x36a>
 8010bc0:	086d      	lsrs	r5, r5, #1
 8010bc2:	2d00      	cmp	r5, #0
 8010bc4:	d1f4      	bne.n	8010bb0 <_DrawBitmap+0x350>
 8010bc6:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 8010bca:	2e00      	cmp	r6, #0
 8010bcc:	d05e      	beq.n	8010c8c <_DrawBitmap+0x42c>
 8010bce:	9d08      	ldr	r5, [sp, #32]
 8010bd0:	4952      	ldr	r1, [pc, #328]	; (8010d1c <_DrawBitmap+0x4bc>)
 8010bd2:	f815 0f01 	ldrb.w	r0, [r5, #1]!
 8010bd6:	f04f 0808 	mov.w	r8, #8
 8010bda:	9508      	str	r5, [sp, #32]
 8010bdc:	5c0d      	ldrb	r5, [r1, r0]
 8010bde:	e7c6      	b.n	8010b6e <_DrawBitmap+0x30e>
 8010be0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8010be2:	6910      	ldr	r0, [r2, #16]
 8010be4:	6883      	ldr	r3, [r0, #8]
 8010be6:	4798      	blx	r3
 8010be8:	f10a 0201 	add.w	r2, sl, #1
 8010bec:	b281      	uxth	r1, r0
 8010bee:	f8dd c018 	ldr.w	ip, [sp, #24]
 8010bf2:	910d      	str	r1, [sp, #52]	; 0x34
 8010bf4:	9208      	str	r2, [sp, #32]
 8010bf6:	4546      	cmp	r6, r8
 8010bf8:	bf38      	it	cc
 8010bfa:	46b0      	movcc	r8, r6
 8010bfc:	ebc8 0606 	rsb	r6, r8, r6
 8010c00:	1ca3      	adds	r3, r4, #2
 8010c02:	b34f      	cbz	r7, 8010c58 <_DrawBitmap+0x3f8>
 8010c04:	9303      	str	r3, [sp, #12]
 8010c06:	46e1      	mov	r9, ip
 8010c08:	07eb      	lsls	r3, r5, #31
 8010c0a:	d514      	bpl.n	8010c36 <_DrawBitmap+0x3d6>
 8010c0c:	68b9      	ldr	r1, [r7, #8]
 8010c0e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010c10:	680b      	ldr	r3, [r1, #0]
 8010c12:	f8cd c014 	str.w	ip, [sp, #20]
 8010c16:	9311      	str	r3, [sp, #68]	; 0x44
 8010c18:	4638      	mov	r0, r7
 8010c1a:	4649      	mov	r1, r9
 8010c1c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8010c1e:	4798      	blx	r3
 8010c20:	9a03      	ldr	r2, [sp, #12]
 8010c22:	990d      	ldr	r1, [sp, #52]	; 0x34
 8010c24:	f832 0c02 	ldrh.w	r0, [r2, #-2]
 8010c28:	9b03      	ldr	r3, [sp, #12]
 8010c2a:	f8dd c014 	ldr.w	ip, [sp, #20]
 8010c2e:	ea81 0200 	eor.w	r2, r1, r0
 8010c32:	f823 2c02 	strh.w	r2, [r3, #-2]
 8010c36:	9803      	ldr	r0, [sp, #12]
 8010c38:	f109 0901 	add.w	r9, r9, #1
 8010c3c:	eb0c 0208 	add.w	r2, ip, r8
 8010c40:	1c81      	adds	r1, r0, #2
 8010c42:	086d      	lsrs	r5, r5, #1
 8010c44:	454a      	cmp	r2, r9
 8010c46:	9103      	str	r1, [sp, #12]
 8010c48:	d1de      	bne.n	8010c08 <_DrawBitmap+0x3a8>
 8010c4a:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 8010c4e:	4694      	mov	ip, r2
 8010c50:	b1e6      	cbz	r6, 8010c8c <_DrawBitmap+0x42c>
 8010c52:	9d08      	ldr	r5, [sp, #32]
 8010c54:	7828      	ldrb	r0, [r5, #0]
 8010c56:	e011      	b.n	8010c7c <_DrawBitmap+0x41c>
 8010c58:	4642      	mov	r2, r8
 8010c5a:	07e8      	lsls	r0, r5, #31
 8010c5c:	d505      	bpl.n	8010c6a <_DrawBitmap+0x40a>
 8010c5e:	f833 1c02 	ldrh.w	r1, [r3, #-2]
 8010c62:	980d      	ldr	r0, [sp, #52]	; 0x34
 8010c64:	4041      	eors	r1, r0
 8010c66:	f823 1c02 	strh.w	r1, [r3, #-2]
 8010c6a:	086d      	lsrs	r5, r5, #1
 8010c6c:	3302      	adds	r3, #2
 8010c6e:	3a01      	subs	r2, #1
 8010c70:	d1f3      	bne.n	8010c5a <_DrawBitmap+0x3fa>
 8010c72:	eb04 0448 	add.w	r4, r4, r8, lsl #1
 8010c76:	b14e      	cbz	r6, 8010c8c <_DrawBitmap+0x42c>
 8010c78:	9d08      	ldr	r5, [sp, #32]
 8010c7a:	7828      	ldrb	r0, [r5, #0]
 8010c7c:	4b27      	ldr	r3, [pc, #156]	; (8010d1c <_DrawBitmap+0x4bc>)
 8010c7e:	5c1d      	ldrb	r5, [r3, r0]
 8010c80:	9808      	ldr	r0, [sp, #32]
 8010c82:	1c41      	adds	r1, r0, #1
 8010c84:	9108      	str	r1, [sp, #32]
 8010c86:	f04f 0808 	mov.w	r8, #8
 8010c8a:	e7b4      	b.n	8010bf6 <_DrawBitmap+0x396>
 8010c8c:	a812      	add	r0, sp, #72	; 0x48
 8010c8e:	f7fc ff63 	bl	800db58 <GUI_ALLOC_UnlockH>
 8010c92:	e172      	b.n	8010f7a <_DrawBitmap+0x71a>
 8010c94:	4922      	ldr	r1, [pc, #136]	; (8010d20 <_DrawBitmap+0x4c0>)
 8010c96:	9822      	ldr	r0, [sp, #136]	; 0x88
 8010c98:	680b      	ldr	r3, [r1, #0]
 8010c9a:	f89a 6000 	ldrb.w	r6, [sl]
 8010c9e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8010ca0:	f8dd c04c 	ldr.w	ip, [sp, #76]	; 0x4c
 8010ca4:	f1c0 0204 	rsb	r2, r0, #4
 8010ca8:	7c18      	ldrb	r0, [r3, #16]
 8010caa:	b2d5      	uxtb	r5, r2
 8010cac:	f000 0203 	and.w	r2, r0, #3
 8010cb0:	fa06 f607 	lsl.w	r6, r6, r7
 8010cb4:	2a01      	cmp	r2, #1
 8010cb6:	b2f6      	uxtb	r6, r6
 8010cb8:	d009      	beq.n	8010cce <_DrawBitmap+0x46e>
 8010cba:	d30b      	bcc.n	8010cd4 <_DrawBitmap+0x474>
 8010cbc:	2a02      	cmp	r2, #2
 8010cbe:	f040 815c 	bne.w	8010f7a <_DrawBitmap+0x71a>
 8010cc2:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 8010cc6:	465f      	mov	r7, fp
 8010cc8:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8010ccc:	e04b      	b.n	8010d66 <_DrawBitmap+0x506>
 8010cce:	4651      	mov	r1, sl
 8010cd0:	465b      	mov	r3, fp
 8010cd2:	e081      	b.n	8010dd8 <_DrawBitmap+0x578>
 8010cd4:	4652      	mov	r2, sl
 8010cd6:	465b      	mov	r3, fp
 8010cd8:	429d      	cmp	r5, r3
 8010cda:	bfc8      	it	gt
 8010cdc:	b2dd      	uxtbgt	r5, r3
 8010cde:	1b5b      	subs	r3, r3, r5
 8010ce0:	4629      	mov	r1, r5
 8010ce2:	4620      	mov	r0, r4
 8010ce4:	ea4f 1e96 	mov.w	lr, r6, lsr #6
 8010ce8:	9f07      	ldr	r7, [sp, #28]
 8010cea:	3901      	subs	r1, #1
 8010cec:	f857 c02e 	ldr.w	ip, [r7, lr, lsl #2]
 8010cf0:	00b6      	lsls	r6, r6, #2
 8010cf2:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 8010cf6:	f820 cb02 	strh.w	ip, [r0], #2
 8010cfa:	b2f6      	uxtb	r6, r6
 8010cfc:	d1f2      	bne.n	8010ce4 <_DrawBitmap+0x484>
 8010cfe:	3d01      	subs	r5, #1
 8010d00:	b2e8      	uxtb	r0, r5
 8010d02:	1c45      	adds	r5, r0, #1
 8010d04:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 8010d08:	2b00      	cmp	r3, #0
 8010d0a:	f000 8136 	beq.w	8010f7a <_DrawBitmap+0x71a>
 8010d0e:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 8010d12:	2504      	movs	r5, #4
 8010d14:	e7e0      	b.n	8010cd8 <_DrawBitmap+0x478>
 8010d16:	bf00      	nop
 8010d18:	0802c57c 	.word	0x0802c57c
 8010d1c:	0802c294 	.word	0x0802c294
 8010d20:	20000278 	.word	0x20000278
 8010d24:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 8010d28:	d125      	bne.n	8010d76 <_DrawBitmap+0x516>
 8010d2a:	9808      	ldr	r0, [sp, #32]
 8010d2c:	f109 0901 	add.w	r9, r9, #1
 8010d30:	eb05 0108 	add.w	r1, r5, r8
 8010d34:	1c82      	adds	r2, r0, #2
 8010d36:	fa5f f389 	uxtb.w	r3, r9
 8010d3a:	b2c8      	uxtb	r0, r1
 8010d3c:	00b6      	lsls	r6, r6, #2
 8010d3e:	4298      	cmp	r0, r3
 8010d40:	b2f6      	uxtb	r6, r6
 8010d42:	9208      	str	r2, [sp, #32]
 8010d44:	d1ee      	bne.n	8010d24 <_DrawBitmap+0x4c4>
 8010d46:	3d01      	subs	r5, #1
 8010d48:	b2ed      	uxtb	r5, r5
 8010d4a:	1c6e      	adds	r6, r5, #1
 8010d4c:	f108 0801 	add.w	r8, r8, #1
 8010d50:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8010d54:	44a8      	add	r8, r5
 8010d56:	2f00      	cmp	r7, #0
 8010d58:	f000 810f 	beq.w	8010f7a <_DrawBitmap+0x71a>
 8010d5c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010d5e:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 8010d62:	2504      	movs	r5, #4
 8010d64:	920d      	str	r2, [sp, #52]	; 0x34
 8010d66:	42bd      	cmp	r5, r7
 8010d68:	bfc8      	it	gt
 8010d6a:	b2fd      	uxtbgt	r5, r7
 8010d6c:	1ca1      	adds	r1, r4, #2
 8010d6e:	1b7f      	subs	r7, r7, r5
 8010d70:	9108      	str	r1, [sp, #32]
 8010d72:	46c1      	mov	r9, r8
 8010d74:	e7d6      	b.n	8010d24 <_DrawBitmap+0x4c4>
 8010d76:	09b3      	lsrs	r3, r6, #6
 8010d78:	9807      	ldr	r0, [sp, #28]
 8010d7a:	9908      	ldr	r1, [sp, #32]
 8010d7c:	f850 2023 	ldr.w	r2, [r0, r3, lsl #2]
 8010d80:	f821 2c02 	strh.w	r2, [r1, #-2]
 8010d84:	f1bc 0f00 	cmp.w	ip, #0
 8010d88:	d0cf      	beq.n	8010d2a <_DrawBitmap+0x4ca>
 8010d8a:	f8dc 3008 	ldr.w	r3, [ip, #8]
 8010d8e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010d90:	681b      	ldr	r3, [r3, #0]
 8010d92:	f8cd c014 	str.w	ip, [sp, #20]
 8010d96:	4660      	mov	r0, ip
 8010d98:	4649      	mov	r1, r9
 8010d9a:	4798      	blx	r3
 8010d9c:	f8dd c014 	ldr.w	ip, [sp, #20]
 8010da0:	e7c3      	b.n	8010d2a <_DrawBitmap+0x4ca>
 8010da2:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 8010da6:	d005      	beq.n	8010db4 <_DrawBitmap+0x554>
 8010da8:	f832 7c02 	ldrh.w	r7, [r2, #-2]
 8010dac:	f087 07ff 	eor.w	r7, r7, #255	; 0xff
 8010db0:	f822 7c02 	strh.w	r7, [r2, #-2]
 8010db4:	3801      	subs	r0, #1
 8010db6:	00b6      	lsls	r6, r6, #2
 8010db8:	3202      	adds	r2, #2
 8010dba:	f010 00ff 	ands.w	r0, r0, #255	; 0xff
 8010dbe:	b2f6      	uxtb	r6, r6
 8010dc0:	d1ef      	bne.n	8010da2 <_DrawBitmap+0x542>
 8010dc2:	3d01      	subs	r5, #1
 8010dc4:	b2ef      	uxtb	r7, r5
 8010dc6:	1c7d      	adds	r5, r7, #1
 8010dc8:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 8010dcc:	2b00      	cmp	r3, #0
 8010dce:	f000 80d4 	beq.w	8010f7a <_DrawBitmap+0x71a>
 8010dd2:	f811 6f01 	ldrb.w	r6, [r1, #1]!
 8010dd6:	2504      	movs	r5, #4
 8010dd8:	429d      	cmp	r5, r3
 8010dda:	bfc8      	it	gt
 8010ddc:	b2dd      	uxtbgt	r5, r3
 8010dde:	1b5b      	subs	r3, r3, r5
 8010de0:	1ca2      	adds	r2, r4, #2
 8010de2:	4628      	mov	r0, r5
 8010de4:	e7dd      	b.n	8010da2 <_DrawBitmap+0x542>
 8010de6:	9f22      	ldr	r7, [sp, #136]	; 0x88
 8010de8:	496d      	ldr	r1, [pc, #436]	; (8010fa0 <_DrawBitmap+0x740>)
 8010dea:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8010dec:	f89a 0000 	ldrb.w	r0, [sl]
 8010df0:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010df2:	f1c7 0202 	rsb	r2, r7, #2
 8010df6:	680f      	ldr	r7, [r1, #0]
 8010df8:	b2d3      	uxtb	r3, r2
 8010dfa:	7c3a      	ldrb	r2, [r7, #16]
 8010dfc:	f002 0103 	and.w	r1, r2, #3
 8010e00:	fa00 f005 	lsl.w	r0, r0, r5
 8010e04:	2901      	cmp	r1, #1
 8010e06:	b2c5      	uxtb	r5, r0
 8010e08:	d004      	beq.n	8010e14 <_DrawBitmap+0x5b4>
 8010e0a:	d306      	bcc.n	8010e1a <_DrawBitmap+0x5ba>
 8010e0c:	2902      	cmp	r1, #2
 8010e0e:	f040 80b4 	bne.w	8010f7a <_DrawBitmap+0x71a>
 8010e12:	e037      	b.n	8010e84 <_DrawBitmap+0x624>
 8010e14:	4650      	mov	r0, sl
 8010e16:	465a      	mov	r2, fp
 8010e18:	e0a8      	b.n	8010f6c <_DrawBitmap+0x70c>
 8010e1a:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8010e1c:	b166      	cbz	r6, 8010e38 <_DrawBitmap+0x5d8>
 8010e1e:	092d      	lsrs	r5, r5, #4
 8010e20:	9907      	ldr	r1, [sp, #28]
 8010e22:	f851 0025 	ldr.w	r0, [r1, r5, lsl #2]
 8010e26:	8020      	strh	r0, [r4, #0]
 8010e28:	f10b 33ff 	add.w	r3, fp, #4294967295
 8010e2c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8010e2e:	f89a 5001 	ldrb.w	r5, [sl, #1]
 8010e32:	f10a 0201 	add.w	r2, sl, #1
 8010e36:	e001      	b.n	8010e3c <_DrawBitmap+0x5dc>
 8010e38:	465b      	mov	r3, fp
 8010e3a:	4652      	mov	r2, sl
 8010e3c:	2b01      	cmp	r3, #1
 8010e3e:	dd18      	ble.n	8010e72 <_DrawBitmap+0x612>
 8010e40:	1058      	asrs	r0, r3, #1
 8010e42:	1d21      	adds	r1, r4, #4
 8010e44:	f003 0301 	and.w	r3, r3, #1
 8010e48:	eb02 0e00 	add.w	lr, r2, r0
 8010e4c:	092f      	lsrs	r7, r5, #4
 8010e4e:	9e07      	ldr	r6, [sp, #28]
 8010e50:	f005 050f 	and.w	r5, r5, #15
 8010e54:	f856 7027 	ldr.w	r7, [r6, r7, lsl #2]
 8010e58:	f856 6025 	ldr.w	r6, [r6, r5, lsl #2]
 8010e5c:	f821 7c04 	strh.w	r7, [r1, #-4]
 8010e60:	f821 6c02 	strh.w	r6, [r1, #-2]
 8010e64:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 8010e68:	3104      	adds	r1, #4
 8010e6a:	4572      	cmp	r2, lr
 8010e6c:	d1ee      	bne.n	8010e4c <_DrawBitmap+0x5ec>
 8010e6e:	eb04 0480 	add.w	r4, r4, r0, lsl #2
 8010e72:	2b00      	cmp	r3, #0
 8010e74:	f000 8081 	beq.w	8010f7a <_DrawBitmap+0x71a>
 8010e78:	092d      	lsrs	r5, r5, #4
 8010e7a:	9a07      	ldr	r2, [sp, #28]
 8010e7c:	f852 0025 	ldr.w	r0, [r2, r5, lsl #2]
 8010e80:	8020      	strh	r0, [r4, #0]
 8010e82:	e07a      	b.n	8010f7a <_DrawBitmap+0x71a>
 8010e84:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8010e86:	b1c3      	cbz	r3, 8010eba <_DrawBitmap+0x65a>
 8010e88:	f010 0ff0 	tst.w	r0, #240	; 0xf0
 8010e8c:	d00b      	beq.n	8010ea6 <_DrawBitmap+0x646>
 8010e8e:	0928      	lsrs	r0, r5, #4
 8010e90:	9d07      	ldr	r5, [sp, #28]
 8010e92:	f855 7020 	ldr.w	r7, [r5, r0, lsl #2]
 8010e96:	8027      	strh	r7, [r4, #0]
 8010e98:	b12e      	cbz	r6, 8010ea6 <_DrawBitmap+0x646>
 8010e9a:	68b4      	ldr	r4, [r6, #8]
 8010e9c:	9906      	ldr	r1, [sp, #24]
 8010e9e:	6823      	ldr	r3, [r4, #0]
 8010ea0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010ea2:	4630      	mov	r0, r6
 8010ea4:	4798      	blx	r3
 8010ea6:	9a06      	ldr	r2, [sp, #24]
 8010ea8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8010eaa:	f89a 5001 	ldrb.w	r5, [sl, #1]
 8010eae:	1c57      	adds	r7, r2, #1
 8010eb0:	f10b 39ff 	add.w	r9, fp, #4294967295
 8010eb4:	f10a 0801 	add.w	r8, sl, #1
 8010eb8:	e00f      	b.n	8010eda <_DrawBitmap+0x67a>
 8010eba:	46d9      	mov	r9, fp
 8010ebc:	46d0      	mov	r8, sl
 8010ebe:	9f06      	ldr	r7, [sp, #24]
 8010ec0:	e00b      	b.n	8010eda <_DrawBitmap+0x67a>
 8010ec2:	f015 0ff0 	tst.w	r5, #240	; 0xf0
 8010ec6:	d10c      	bne.n	8010ee2 <_DrawBitmap+0x682>
 8010ec8:	f015 050f 	ands.w	r5, r5, #15
 8010ecc:	d117      	bne.n	8010efe <_DrawBitmap+0x69e>
 8010ece:	f818 5f01 	ldrb.w	r5, [r8, #1]!
 8010ed2:	3404      	adds	r4, #4
 8010ed4:	3702      	adds	r7, #2
 8010ed6:	f1a9 0902 	sub.w	r9, r9, #2
 8010eda:	f1b9 0f01 	cmp.w	r9, #1
 8010ede:	dcf0      	bgt.n	8010ec2 <_DrawBitmap+0x662>
 8010ee0:	e01a      	b.n	8010f18 <_DrawBitmap+0x6b8>
 8010ee2:	092a      	lsrs	r2, r5, #4
 8010ee4:	9907      	ldr	r1, [sp, #28]
 8010ee6:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8010eea:	8020      	strh	r0, [r4, #0]
 8010eec:	2e00      	cmp	r6, #0
 8010eee:	d0eb      	beq.n	8010ec8 <_DrawBitmap+0x668>
 8010ef0:	68b3      	ldr	r3, [r6, #8]
 8010ef2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010ef4:	681b      	ldr	r3, [r3, #0]
 8010ef6:	4630      	mov	r0, r6
 8010ef8:	4639      	mov	r1, r7
 8010efa:	4798      	blx	r3
 8010efc:	e7e4      	b.n	8010ec8 <_DrawBitmap+0x668>
 8010efe:	9a07      	ldr	r2, [sp, #28]
 8010f00:	f852 1025 	ldr.w	r1, [r2, r5, lsl #2]
 8010f04:	8061      	strh	r1, [r4, #2]
 8010f06:	2e00      	cmp	r6, #0
 8010f08:	d0e1      	beq.n	8010ece <_DrawBitmap+0x66e>
 8010f0a:	68b0      	ldr	r0, [r6, #8]
 8010f0c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010f0e:	6803      	ldr	r3, [r0, #0]
 8010f10:	1c79      	adds	r1, r7, #1
 8010f12:	4630      	mov	r0, r6
 8010f14:	4798      	blx	r3
 8010f16:	e7da      	b.n	8010ece <_DrawBitmap+0x66e>
 8010f18:	f1b9 0f00 	cmp.w	r9, #0
 8010f1c:	d02d      	beq.n	8010f7a <_DrawBitmap+0x71a>
 8010f1e:	092d      	lsrs	r5, r5, #4
 8010f20:	d02b      	beq.n	8010f7a <_DrawBitmap+0x71a>
 8010f22:	9907      	ldr	r1, [sp, #28]
 8010f24:	f851 0025 	ldr.w	r0, [r1, r5, lsl #2]
 8010f28:	8020      	strh	r0, [r4, #0]
 8010f2a:	b336      	cbz	r6, 8010f7a <_DrawBitmap+0x71a>
 8010f2c:	68b4      	ldr	r4, [r6, #8]
 8010f2e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010f30:	6823      	ldr	r3, [r4, #0]
 8010f32:	4630      	mov	r0, r6
 8010f34:	4639      	mov	r1, r7
 8010f36:	4798      	blx	r3
 8010f38:	e01f      	b.n	8010f7a <_DrawBitmap+0x71a>
 8010f3a:	f015 0fc0 	tst.w	r5, #192	; 0xc0
 8010f3e:	d005      	beq.n	8010f4c <_DrawBitmap+0x6ec>
 8010f40:	f831 7c02 	ldrh.w	r7, [r1, #-2]
 8010f44:	f087 07ff 	eor.w	r7, r7, #255	; 0xff
 8010f48:	f821 7c02 	strh.w	r7, [r1, #-2]
 8010f4c:	3e01      	subs	r6, #1
 8010f4e:	012d      	lsls	r5, r5, #4
 8010f50:	3102      	adds	r1, #2
 8010f52:	f016 06ff 	ands.w	r6, r6, #255	; 0xff
 8010f56:	b2ed      	uxtb	r5, r5
 8010f58:	d1ef      	bne.n	8010f3a <_DrawBitmap+0x6da>
 8010f5a:	3b01      	subs	r3, #1
 8010f5c:	b2df      	uxtb	r7, r3
 8010f5e:	1c79      	adds	r1, r7, #1
 8010f60:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8010f64:	b14a      	cbz	r2, 8010f7a <_DrawBitmap+0x71a>
 8010f66:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 8010f6a:	2302      	movs	r3, #2
 8010f6c:	4293      	cmp	r3, r2
 8010f6e:	bfc8      	it	gt
 8010f70:	b2d3      	uxtbgt	r3, r2
 8010f72:	1ad2      	subs	r2, r2, r3
 8010f74:	1ca1      	adds	r1, r4, #2
 8010f76:	461e      	mov	r6, r3
 8010f78:	e7df      	b.n	8010f3a <_DrawBitmap+0x6da>
 8010f7a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8010f7c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8010f7e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8010f80:	9c20      	ldr	r4, [sp, #128]	; 0x80
 8010f82:	1c4b      	adds	r3, r1, #1
 8010f84:	1990      	adds	r0, r2, r6
 8010f86:	44a2      	add	sl, r4
 8010f88:	9309      	str	r3, [sp, #36]	; 0x24
 8010f8a:	900c      	str	r0, [sp, #48]	; 0x30
 8010f8c:	e599      	b.n	8010ac2 <_DrawBitmap+0x262>
 8010f8e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010f90:	b110      	cbz	r0, 8010f98 <_DrawBitmap+0x738>
 8010f92:	a813      	add	r0, sp, #76	; 0x4c
 8010f94:	f7fc fde0 	bl	800db58 <GUI_ALLOC_UnlockH>
 8010f98:	b015      	add	sp, #84	; 0x54
 8010f9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f9e:	bf00      	nop
 8010fa0:	20000278 	.word	0x20000278

08010fa4 <LCD_SelectLCD>:
 8010fa4:	b510      	push	{r4, lr}
 8010fa6:	4b0d      	ldr	r3, [pc, #52]	; (8010fdc <LCD_SelectLCD+0x38>)
 8010fa8:	480d      	ldr	r0, [pc, #52]	; (8010fe0 <LCD_SelectLCD+0x3c>)
 8010faa:	681a      	ldr	r2, [r3, #0]
 8010fac:	7c51      	ldrb	r1, [r2, #17]
 8010fae:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
 8010fb2:	461c      	mov	r4, r3
 8010fb4:	b138      	cbz	r0, 8010fc6 <LCD_SelectLCD+0x22>
 8010fb6:	68c3      	ldr	r3, [r0, #12]
 8010fb8:	681a      	ldr	r2, [r3, #0]
 8010fba:	2a04      	cmp	r2, #4
 8010fbc:	d001      	beq.n	8010fc2 <LCD_SelectLCD+0x1e>
 8010fbe:	6800      	ldr	r0, [r0, #0]
 8010fc0:	e7f8      	b.n	8010fb4 <LCD_SelectLCD+0x10>
 8010fc2:	f7fc f8cf 	bl	800d164 <GUI_DEVICE_Unlink>
 8010fc6:	6821      	ldr	r1, [r4, #0]
 8010fc8:	2000      	movs	r0, #0
 8010fca:	f101 0308 	add.w	r3, r1, #8
 8010fce:	6608      	str	r0, [r1, #96]	; 0x60
 8010fd0:	614b      	str	r3, [r1, #20]
 8010fd2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010fd6:	f7fa bb65 	b.w	800b6a4 <LCD_SetClipRectMax>
 8010fda:	bf00      	nop
 8010fdc:	20000278 	.word	0x20000278
 8010fe0:	2000e67c 	.word	0x2000e67c

08010fe4 <LCD_ReadRectEx>:
 8010fe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010fe8:	b087      	sub	sp, #28
 8010fea:	4690      	mov	r8, r2
 8010fec:	9305      	str	r3, [sp, #20]
 8010fee:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8010ff0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8010ff2:	68da      	ldr	r2, [r3, #12]
 8010ff4:	6a55      	ldr	r5, [r2, #36]	; 0x24
 8010ff6:	f8d2 9014 	ldr.w	r9, [r2, #20]
 8010ffa:	4607      	mov	r7, r0
 8010ffc:	460e      	mov	r6, r1
 8010ffe:	b975      	cbnz	r5, 801101e <LCD_ReadRectEx+0x3a>
 8011000:	486f      	ldr	r0, [pc, #444]	; (80111c0 <LCD_ReadRectEx+0x1dc>)
 8011002:	6801      	ldr	r1, [r0, #0]
 8011004:	7c48      	ldrb	r0, [r1, #17]
 8011006:	f7fa f81b 	bl	800b040 <GUI_GetBitsPerPixelEx>
 801100a:	2808      	cmp	r0, #8
 801100c:	4683      	mov	fp, r0
 801100e:	dd15      	ble.n	801103c <LCD_ReadRectEx+0x58>
 8011010:	2810      	cmp	r0, #16
 8011012:	bfcc      	ite	gt
 8011014:	f04f 0a04 	movgt.w	sl, #4
 8011018:	f04f 0a02 	movle.w	sl, #2
 801101c:	e010      	b.n	8011040 <LCD_ReadRectEx+0x5c>
 801101e:	a811      	add	r0, sp, #68	; 0x44
 8011020:	2101      	movs	r1, #1
 8011022:	47a8      	blx	r5
 8011024:	4605      	mov	r5, r0
 8011026:	2800      	cmp	r0, #0
 8011028:	d0ea      	beq.n	8011000 <LCD_ReadRectEx+0x1c>
 801102a:	9b05      	ldr	r3, [sp, #20]
 801102c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801102e:	e88d 0018 	stmia.w	sp, {r3, r4}
 8011032:	4639      	mov	r1, r7
 8011034:	4632      	mov	r2, r6
 8011036:	4643      	mov	r3, r8
 8011038:	47a8      	blx	r5
 801103a:	e0be      	b.n	80111ba <LCD_ReadRectEx+0x1d6>
 801103c:	f04f 0a01 	mov.w	sl, #1
 8011040:	2500      	movs	r5, #0
 8011042:	9b05      	ldr	r3, [sp, #20]
 8011044:	429e      	cmp	r6, r3
 8011046:	f300 80b8 	bgt.w	80111ba <LCD_ReadRectEx+0x1d6>
 801104a:	f1ba 0f02 	cmp.w	sl, #2
 801104e:	d00a      	beq.n	8011066 <LCD_ReadRectEx+0x82>
 8011050:	f1ba 0f04 	cmp.w	sl, #4
 8011054:	d004      	beq.n	8011060 <LCD_ReadRectEx+0x7c>
 8011056:	f1ba 0f01 	cmp.w	sl, #1
 801105a:	f040 80ac 	bne.w	80111b6 <LCD_ReadRectEx+0x1d2>
 801105e:	e005      	b.n	801106c <LCD_ReadRectEx+0x88>
 8011060:	46a4      	mov	ip, r4
 8011062:	463b      	mov	r3, r7
 8011064:	e094      	b.n	8011190 <LCD_ReadRectEx+0x1ac>
 8011066:	46a4      	mov	ip, r4
 8011068:	463b      	mov	r3, r7
 801106a:	e07e      	b.n	801116a <LCD_ReadRectEx+0x186>
 801106c:	f10b 30ff 	add.w	r0, fp, #4294967295
 8011070:	2807      	cmp	r0, #7
 8011072:	f200 80a0 	bhi.w	80111b6 <LCD_ReadRectEx+0x1d2>
 8011076:	e8df f000 	tbb	[pc, r0]
 801107a:	080a      	.short	0x080a
 801107c:	04040606 	.word	0x04040606
 8011080:	0404      	.short	0x0404
 8011082:	463b      	mov	r3, r7
 8011084:	e059      	b.n	801113a <LCD_ReadRectEx+0x156>
 8011086:	463b      	mov	r3, r7
 8011088:	e03e      	b.n	8011108 <LCD_ReadRectEx+0x124>
 801108a:	463b      	mov	r3, r7
 801108c:	e01e      	b.n	80110cc <LCD_ReadRectEx+0xe8>
 801108e:	463b      	mov	r3, r7
 8011090:	4543      	cmp	r3, r8
 8011092:	f300 8090 	bgt.w	80111b6 <LCD_ReadRectEx+0x1d2>
 8011096:	4619      	mov	r1, r3
 8011098:	4632      	mov	r2, r6
 801109a:	9303      	str	r3, [sp, #12]
 801109c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801109e:	47c8      	blx	r9
 80110a0:	f1c5 0207 	rsb	r2, r5, #7
 80110a4:	fa00 f302 	lsl.w	r3, r0, r2
 80110a8:	f64f 717f 	movw	r1, #65407	; 0xff7f
 80110ac:	7820      	ldrb	r0, [r4, #0]
 80110ae:	fa41 f105 	asr.w	r1, r1, r5
 80110b2:	4001      	ands	r1, r0
 80110b4:	430b      	orrs	r3, r1
 80110b6:	7023      	strb	r3, [r4, #0]
 80110b8:	3501      	adds	r5, #1
 80110ba:	9b03      	ldr	r3, [sp, #12]
 80110bc:	f025 0207 	bic.w	r2, r5, #7
 80110c0:	eb04 04e5 	add.w	r4, r4, r5, asr #3
 80110c4:	3301      	adds	r3, #1
 80110c6:	fa45 f502 	asr.w	r5, r5, r2
 80110ca:	e7e1      	b.n	8011090 <LCD_ReadRectEx+0xac>
 80110cc:	4543      	cmp	r3, r8
 80110ce:	dc72      	bgt.n	80111b6 <LCD_ReadRectEx+0x1d2>
 80110d0:	4619      	mov	r1, r3
 80110d2:	4632      	mov	r2, r6
 80110d4:	9303      	str	r3, [sp, #12]
 80110d6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80110d8:	47c8      	blx	r9
 80110da:	006a      	lsls	r2, r5, #1
 80110dc:	f1c2 0106 	rsb	r1, r2, #6
 80110e0:	fa00 f301 	lsl.w	r3, r0, r1
 80110e4:	7821      	ldrb	r1, [r4, #0]
 80110e6:	f64f 703f 	movw	r0, #65343	; 0xff3f
 80110ea:	fa40 f202 	asr.w	r2, r0, r2
 80110ee:	400a      	ands	r2, r1
 80110f0:	4313      	orrs	r3, r2
 80110f2:	7023      	strb	r3, [r4, #0]
 80110f4:	3501      	adds	r5, #1
 80110f6:	9803      	ldr	r0, [sp, #12]
 80110f8:	f025 0303 	bic.w	r3, r5, #3
 80110fc:	eb04 04a5 	add.w	r4, r4, r5, asr #2
 8011100:	fa45 f503 	asr.w	r5, r5, r3
 8011104:	1c43      	adds	r3, r0, #1
 8011106:	e7e1      	b.n	80110cc <LCD_ReadRectEx+0xe8>
 8011108:	4543      	cmp	r3, r8
 801110a:	dc54      	bgt.n	80111b6 <LCD_ReadRectEx+0x1d2>
 801110c:	4619      	mov	r1, r3
 801110e:	4632      	mov	r2, r6
 8011110:	9303      	str	r3, [sp, #12]
 8011112:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011114:	47c8      	blx	r9
 8011116:	00aa      	lsls	r2, r5, #2
 8011118:	f1c2 0104 	rsb	r1, r2, #4
 801111c:	fa00 f301 	lsl.w	r3, r0, r1
 8011120:	7821      	ldrb	r1, [r4, #0]
 8011122:	200f      	movs	r0, #15
 8011124:	fa00 f202 	lsl.w	r2, r0, r2
 8011128:	400a      	ands	r2, r1
 801112a:	4313      	orrs	r3, r2
 801112c:	7023      	strb	r3, [r4, #0]
 801112e:	9b03      	ldr	r3, [sp, #12]
 8011130:	1964      	adds	r4, r4, r5
 8011132:	3301      	adds	r3, #1
 8011134:	f085 0501 	eor.w	r5, r5, #1
 8011138:	e7e6      	b.n	8011108 <LCD_ReadRectEx+0x124>
 801113a:	1be2      	subs	r2, r4, r7
 801113c:	4543      	cmp	r3, r8
 801113e:	f1c7 0c00 	rsb	ip, r7, #0
 8011142:	eb02 0103 	add.w	r1, r2, r3
 8011146:	dc0e      	bgt.n	8011166 <LCD_ReadRectEx+0x182>
 8011148:	4619      	mov	r1, r3
 801114a:	4632      	mov	r2, r6
 801114c:	9303      	str	r3, [sp, #12]
 801114e:	f8cd c010 	str.w	ip, [sp, #16]
 8011152:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011154:	47c8      	blx	r9
 8011156:	f8dd c010 	ldr.w	ip, [sp, #16]
 801115a:	9b03      	ldr	r3, [sp, #12]
 801115c:	eb04 020c 	add.w	r2, r4, ip
 8011160:	54d0      	strb	r0, [r2, r3]
 8011162:	3301      	adds	r3, #1
 8011164:	e7e9      	b.n	801113a <LCD_ReadRectEx+0x156>
 8011166:	460c      	mov	r4, r1
 8011168:	e025      	b.n	80111b6 <LCD_ReadRectEx+0x1d2>
 801116a:	4543      	cmp	r3, r8
 801116c:	4664      	mov	r4, ip
 801116e:	f10c 0e02 	add.w	lr, ip, #2
 8011172:	dc20      	bgt.n	80111b6 <LCD_ReadRectEx+0x1d2>
 8011174:	4619      	mov	r1, r3
 8011176:	9303      	str	r3, [sp, #12]
 8011178:	9811      	ldr	r0, [sp, #68]	; 0x44
 801117a:	f8cd e010 	str.w	lr, [sp, #16]
 801117e:	4632      	mov	r2, r6
 8011180:	47c8      	blx	r9
 8011182:	f8dd c010 	ldr.w	ip, [sp, #16]
 8011186:	9903      	ldr	r1, [sp, #12]
 8011188:	f82c 0c02 	strh.w	r0, [ip, #-2]
 801118c:	1c4b      	adds	r3, r1, #1
 801118e:	e7ec      	b.n	801116a <LCD_ReadRectEx+0x186>
 8011190:	4543      	cmp	r3, r8
 8011192:	4664      	mov	r4, ip
 8011194:	f10c 0e04 	add.w	lr, ip, #4
 8011198:	dc0d      	bgt.n	80111b6 <LCD_ReadRectEx+0x1d2>
 801119a:	4619      	mov	r1, r3
 801119c:	9303      	str	r3, [sp, #12]
 801119e:	9811      	ldr	r0, [sp, #68]	; 0x44
 80111a0:	f8cd e010 	str.w	lr, [sp, #16]
 80111a4:	4632      	mov	r2, r6
 80111a6:	47c8      	blx	r9
 80111a8:	f8dd c010 	ldr.w	ip, [sp, #16]
 80111ac:	9c03      	ldr	r4, [sp, #12]
 80111ae:	f84c 0c04 	str.w	r0, [ip, #-4]
 80111b2:	1c63      	adds	r3, r4, #1
 80111b4:	e7ec      	b.n	8011190 <LCD_ReadRectEx+0x1ac>
 80111b6:	3601      	adds	r6, #1
 80111b8:	e743      	b.n	8011042 <LCD_ReadRectEx+0x5e>
 80111ba:	b007      	add	sp, #28
 80111bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80111c0:	20000278 	.word	0x20000278

080111c4 <GUI_ReadRectEx>:
 80111c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80111c6:	4d16      	ldr	r5, [pc, #88]	; (8011220 <GUI_ReadRectEx+0x5c>)
 80111c8:	9e05      	ldr	r6, [sp, #20]
 80111ca:	682d      	ldr	r5, [r5, #0]
 80111cc:	9c06      	ldr	r4, [sp, #24]
 80111ce:	f9b5 7008 	ldrsh.w	r7, [r5, #8]
 80111d2:	42b8      	cmp	r0, r7
 80111d4:	bfb8      	it	lt
 80111d6:	4638      	movlt	r0, r7
 80111d8:	f9b5 700c 	ldrsh.w	r7, [r5, #12]
 80111dc:	42ba      	cmp	r2, r7
 80111de:	bfa8      	it	ge
 80111e0:	463a      	movge	r2, r7
 80111e2:	4282      	cmp	r2, r0
 80111e4:	db1b      	blt.n	801121e <GUI_ReadRectEx+0x5a>
 80111e6:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 80111ea:	f9b5 500e 	ldrsh.w	r5, [r5, #14]
 80111ee:	42b9      	cmp	r1, r7
 80111f0:	bfb8      	it	lt
 80111f2:	4639      	movlt	r1, r7
 80111f4:	42ab      	cmp	r3, r5
 80111f6:	bfa8      	it	ge
 80111f8:	462b      	movge	r3, r5
 80111fa:	428b      	cmp	r3, r1
 80111fc:	da05      	bge.n	801120a <GUI_ReadRectEx+0x46>
 80111fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011200:	2d04      	cmp	r5, #4
 8011202:	d006      	beq.n	8011212 <GUI_ReadRectEx+0x4e>
 8011204:	6825      	ldr	r5, [r4, #0]
 8011206:	b125      	cbz	r5, 8011212 <GUI_ReadRectEx+0x4e>
 8011208:	462c      	mov	r4, r5
 801120a:	68e5      	ldr	r5, [r4, #12]
 801120c:	682d      	ldr	r5, [r5, #0]
 801120e:	2d00      	cmp	r5, #0
 8011210:	d1f6      	bne.n	8011200 <GUI_ReadRectEx+0x3c>
 8011212:	9605      	str	r6, [sp, #20]
 8011214:	9406      	str	r4, [sp, #24]
 8011216:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801121a:	f7ff bee3 	b.w	8010fe4 <LCD_ReadRectEx>
 801121e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011220:	20000278 	.word	0x20000278

08011224 <_OnExit>:
 8011224:	b510      	push	{r4, lr}
 8011226:	4c03      	ldr	r4, [pc, #12]	; (8011234 <_OnExit+0x10>)
 8011228:	6820      	ldr	r0, [r4, #0]
 801122a:	f7fc fc73 	bl	800db14 <GUI_ALLOC_FreeFixedBlock>
 801122e:	2300      	movs	r3, #0
 8011230:	6023      	str	r3, [r4, #0]
 8011232:	bd10      	pop	{r4, pc}
 8011234:	2000e778 	.word	0x2000e778

08011238 <LCD_InitColors>:
 8011238:	b538      	push	{r3, r4, r5, lr}
 801123a:	4d09      	ldr	r5, [pc, #36]	; (8011260 <LCD_InitColors+0x28>)
 801123c:	682c      	ldr	r4, [r5, #0]
 801123e:	b95c      	cbnz	r4, 8011258 <LCD_InitColors+0x20>
 8011240:	4b08      	ldr	r3, [pc, #32]	; (8011264 <LCD_InitColors+0x2c>)
 8011242:	6818      	ldr	r0, [r3, #0]
 8011244:	0080      	lsls	r0, r0, #2
 8011246:	f7fc fdff 	bl	800de48 <GUI_ALLOC_GetFixedBlock>
 801124a:	6028      	str	r0, [r5, #0]
 801124c:	b130      	cbz	r0, 801125c <LCD_InitColors+0x24>
 801124e:	4806      	ldr	r0, [pc, #24]	; (8011268 <LCD_InitColors+0x30>)
 8011250:	4906      	ldr	r1, [pc, #24]	; (801126c <LCD_InitColors+0x34>)
 8011252:	6001      	str	r1, [r0, #0]
 8011254:	f7fc f870 	bl	800d338 <GUI__RegisterExit>
 8011258:	2000      	movs	r0, #0
 801125a:	bd38      	pop	{r3, r4, r5, pc}
 801125c:	2001      	movs	r0, #1
 801125e:	bd38      	pop	{r3, r4, r5, pc}
 8011260:	2000e778 	.word	0x2000e778
 8011264:	200002a8 	.word	0x200002a8
 8011268:	2000e228 	.word	0x2000e228
 801126c:	08011225 	.word	0x08011225

08011270 <LCD_GetpPalConvTableUncached>:
 8011270:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011272:	b1e8      	cbz	r0, 80112b0 <LCD_GetpPalConvTableUncached+0x40>
 8011274:	6885      	ldr	r5, [r0, #8]
 8011276:	b1d5      	cbz	r5, 80112ae <LCD_GetpPalConvTableUncached+0x3e>
 8011278:	4b0e      	ldr	r3, [pc, #56]	; (80112b4 <LCD_GetpPalConvTableUncached+0x44>)
 801127a:	6819      	ldr	r1, [r3, #0]
 801127c:	b1b9      	cbz	r1, 80112ae <LCD_GetpPalConvTableUncached+0x3e>
 801127e:	6800      	ldr	r0, [r0, #0]
 8011280:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8011284:	dc13      	bgt.n	80112ae <LCD_GetpPalConvTableUncached+0x3e>
 8011286:	4a0c      	ldr	r2, [pc, #48]	; (80112b8 <LCD_GetpPalConvTableUncached+0x48>)
 8011288:	6817      	ldr	r7, [r2, #0]
 801128a:	2400      	movs	r4, #0
 801128c:	4287      	cmp	r7, r0
 801128e:	bfa8      	it	ge
 8011290:	4607      	movge	r7, r0
 8011292:	42bc      	cmp	r4, r7
 8011294:	4b07      	ldr	r3, [pc, #28]	; (80112b4 <LCD_GetpPalConvTableUncached+0x44>)
 8011296:	da08      	bge.n	80112aa <LCD_GetpPalConvTableUncached+0x3a>
 8011298:	f855 0024 	ldr.w	r0, [r5, r4, lsl #2]
 801129c:	681e      	ldr	r6, [r3, #0]
 801129e:	f7fa fa59 	bl	800b754 <LCD_Color2Index>
 80112a2:	f846 0024 	str.w	r0, [r6, r4, lsl #2]
 80112a6:	3401      	adds	r4, #1
 80112a8:	e7f3      	b.n	8011292 <LCD_GetpPalConvTableUncached+0x22>
 80112aa:	6818      	ldr	r0, [r3, #0]
 80112ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80112ae:	2000      	movs	r0, #0
 80112b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80112b2:	bf00      	nop
 80112b4:	2000e778 	.word	0x2000e778
 80112b8:	200002a8 	.word	0x200002a8

080112bc <LCD_GetpPalConvTableBM>:
 80112bc:	f7ff bfd8 	b.w	8011270 <LCD_GetpPalConvTableUncached>

080112c0 <LCD_InitLUT>:
 80112c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80112c4:	f001 f922 	bl	801250c <LCD_GetNumLayers>
 80112c8:	2400      	movs	r4, #0
 80112ca:	4607      	mov	r7, r0
 80112cc:	42bc      	cmp	r4, r7
 80112ce:	da2b      	bge.n	8011328 <LCD_InitLUT+0x68>
 80112d0:	4620      	mov	r0, r4
 80112d2:	f7fb ff0f 	bl	800d0f4 <GUI_DEVICE__GetpDriver>
 80112d6:	b328      	cbz	r0, 8011324 <LCD_InitLUT+0x64>
 80112d8:	4620      	mov	r0, r4
 80112da:	f7fb f891 	bl	800c400 <GUI_SelectLayer>
 80112de:	4680      	mov	r8, r0
 80112e0:	4620      	mov	r0, r4
 80112e2:	f7f9 fe8e 	bl	800b002 <LCD_GetBitsPerPixelEx>
 80112e6:	2808      	cmp	r0, #8
 80112e8:	dd03      	ble.n	80112f2 <LCD_InitLUT+0x32>
 80112ea:	4640      	mov	r0, r8
 80112ec:	f7fb f888 	bl	800c400 <GUI_SelectLayer>
 80112f0:	e018      	b.n	8011324 <LCD_InitLUT+0x64>
 80112f2:	4b0e      	ldr	r3, [pc, #56]	; (801132c <LCD_InitLUT+0x6c>)
 80112f4:	490e      	ldr	r1, [pc, #56]	; (8011330 <LCD_InitLUT+0x70>)
 80112f6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80112fa:	6902      	ldr	r2, [r0, #16]
 80112fc:	428a      	cmp	r2, r1
 80112fe:	d0f4      	beq.n	80112ea <LCD_InitLUT+0x2a>
 8011300:	4620      	mov	r0, r4
 8011302:	f7f9 fe81 	bl	800b008 <LCD_GetNumColorsEx>
 8011306:	2500      	movs	r5, #0
 8011308:	4681      	mov	r9, r0
 801130a:	454d      	cmp	r5, r9
 801130c:	daed      	bge.n	80112ea <LCD_InitLUT+0x2a>
 801130e:	b2ee      	uxtb	r6, r5
 8011310:	4630      	mov	r0, r6
 8011312:	f7fa fa2f 	bl	800b774 <LCD_Index2Color>
 8011316:	4631      	mov	r1, r6
 8011318:	4602      	mov	r2, r0
 801131a:	4620      	mov	r0, r4
 801131c:	f7f9 fe17 	bl	800af4e <LCD_SetLUTEntryEx>
 8011320:	3501      	adds	r5, #1
 8011322:	e7f2      	b.n	801130a <LCD_InitLUT+0x4a>
 8011324:	3401      	adds	r4, #1
 8011326:	e7d1      	b.n	80112cc <LCD_InitLUT+0xc>
 8011328:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801132c:	2000e67c 	.word	0x2000e67c
 8011330:	0802d688 	.word	0x0802d688

08011334 <LCD_AA_SetAndMask>:
 8011334:	4b02      	ldr	r3, [pc, #8]	; (8011340 <LCD_AA_SetAndMask+0xc>)
 8011336:	681a      	ldr	r2, [r3, #0]
 8011338:	6018      	str	r0, [r3, #0]
 801133a:	4610      	mov	r0, r2
 801133c:	4770      	bx	lr
 801133e:	bf00      	nop
 8011340:	200002ac 	.word	0x200002ac

08011344 <GUI__strcmp>:
 8011344:	b510      	push	{r4, lr}
 8011346:	4b09      	ldr	r3, [pc, #36]	; (801136c <GUI__strcmp+0x28>)
 8011348:	2800      	cmp	r0, #0
 801134a:	bf08      	it	eq
 801134c:	4618      	moveq	r0, r3
 801134e:	2900      	cmp	r1, #0
 8011350:	bf08      	it	eq
 8011352:	4619      	moveq	r1, r3
 8011354:	2300      	movs	r3, #0
 8011356:	5cc4      	ldrb	r4, [r0, r3]
 8011358:	5cca      	ldrb	r2, [r1, r3]
 801135a:	42a2      	cmp	r2, r4
 801135c:	d104      	bne.n	8011368 <GUI__strcmp+0x24>
 801135e:	3301      	adds	r3, #1
 8011360:	2a00      	cmp	r2, #0
 8011362:	d1f8      	bne.n	8011356 <GUI__strcmp+0x12>
 8011364:	4610      	mov	r0, r2
 8011366:	bd10      	pop	{r4, pc}
 8011368:	2001      	movs	r0, #1
 801136a:	bd10      	pop	{r4, pc}
 801136c:	08018880 	.word	0x08018880

08011370 <GUI__strcmp_hp>:
 8011370:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011372:	460d      	mov	r5, r1
 8011374:	b160      	cbz	r0, 8011390 <GUI__strcmp_hp+0x20>
 8011376:	f7fc fbe1 	bl	800db3c <GUI_ALLOC_LockH>
 801137a:	ac02      	add	r4, sp, #8
 801137c:	4629      	mov	r1, r5
 801137e:	f844 0d04 	str.w	r0, [r4, #-4]!
 8011382:	f7ff ffdf 	bl	8011344 <GUI__strcmp>
 8011386:	4605      	mov	r5, r0
 8011388:	4620      	mov	r0, r4
 801138a:	f7fc fbe5 	bl	800db58 <GUI_ALLOC_UnlockH>
 801138e:	e000      	b.n	8011392 <GUI__strcmp_hp+0x22>
 8011390:	2501      	movs	r5, #1
 8011392:	4628      	mov	r0, r5
 8011394:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08011396 <GUI__sqrt32>:
 8011396:	b510      	push	{r4, lr}
 8011398:	2110      	movs	r1, #16
 801139a:	2300      	movs	r3, #0
 801139c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80113a0:	189c      	adds	r4, r3, r2
 80113a2:	4284      	cmp	r4, r0
 80113a4:	bf9c      	itt	ls
 80113a6:	18a3      	addls	r3, r4, r2
 80113a8:	ebc4 0000 	rsbls	r0, r4, r0
 80113ac:	085b      	lsrs	r3, r3, #1
 80113ae:	0892      	lsrs	r2, r2, #2
 80113b0:	3901      	subs	r1, #1
 80113b2:	d1f5      	bne.n	80113a0 <GUI__sqrt32+0xa>
 80113b4:	4618      	mov	r0, r3
 80113b6:	bd10      	pop	{r4, pc}

080113b8 <_GetCharWrap>:
 80113b8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80113ba:	2400      	movs	r4, #0
 80113bc:	9001      	str	r0, [sp, #4]
 80113be:	460e      	mov	r6, r1
 80113c0:	4625      	mov	r5, r4
 80113c2:	a801      	add	r0, sp, #4
 80113c4:	f000 fc50 	bl	8011c68 <GUI_UC__GetCharCodeInc>
 80113c8:	4607      	mov	r7, r0
 80113ca:	b148      	cbz	r0, 80113e0 <_GetCharWrap+0x28>
 80113cc:	f7fc fab4 	bl	800d938 <GUI_GetCharDistX>
 80113d0:	182d      	adds	r5, r5, r0
 80113d2:	b10c      	cbz	r4, 80113d8 <_GetCharWrap+0x20>
 80113d4:	42b5      	cmp	r5, r6
 80113d6:	dc03      	bgt.n	80113e0 <_GetCharWrap+0x28>
 80113d8:	2f0a      	cmp	r7, #10
 80113da:	d001      	beq.n	80113e0 <_GetCharWrap+0x28>
 80113dc:	3401      	adds	r4, #1
 80113de:	e7f0      	b.n	80113c2 <_GetCharWrap+0xa>
 80113e0:	4620      	mov	r0, r4
 80113e2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

080113e4 <_GetWordWrap>:
 80113e4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80113e8:	2400      	movs	r4, #0
 80113ea:	9001      	str	r0, [sp, #4]
 80113ec:	468a      	mov	sl, r1
 80113ee:	4691      	mov	r9, r2
 80113f0:	46a0      	mov	r8, r4
 80113f2:	4626      	mov	r6, r4
 80113f4:	4625      	mov	r5, r4
 80113f6:	4627      	mov	r7, r4
 80113f8:	a801      	add	r0, sp, #4
 80113fa:	f000 fc35 	bl	8011c68 <GUI_UC__GetCharCodeInc>
 80113fe:	2c00      	cmp	r4, #0
 8011400:	bf08      	it	eq
 8011402:	4604      	moveq	r4, r0
 8011404:	b108      	cbz	r0, 801140a <_GetWordWrap+0x26>
 8011406:	280a      	cmp	r0, #10
 8011408:	d10c      	bne.n	8011424 <_GetWordWrap+0x40>
 801140a:	462e      	mov	r6, r5
 801140c:	2e00      	cmp	r6, #0
 801140e:	bf14      	ite	ne
 8011410:	4630      	movne	r0, r6
 8011412:	4628      	moveq	r0, r5
 8011414:	f1b9 0f00 	cmp.w	r9, #0
 8011418:	d016      	beq.n	8011448 <_GetWordWrap+0x64>
 801141a:	ebc8 0707 	rsb	r7, r8, r7
 801141e:	f8c9 7000 	str.w	r7, [r9]
 8011422:	e011      	b.n	8011448 <_GetWordWrap+0x64>
 8011424:	2820      	cmp	r0, #32
 8011426:	d00d      	beq.n	8011444 <_GetWordWrap+0x60>
 8011428:	2c20      	cmp	r4, #32
 801142a:	bf04      	itt	eq
 801142c:	462e      	moveq	r6, r5
 801142e:	2400      	moveq	r4, #0
 8011430:	f7fc fa82 	bl	800d938 <GUI_GetCharDistX>
 8011434:	183f      	adds	r7, r7, r0
 8011436:	4557      	cmp	r7, sl
 8011438:	4680      	mov	r8, r0
 801143a:	dd01      	ble.n	8011440 <_GetWordWrap+0x5c>
 801143c:	2d00      	cmp	r5, #0
 801143e:	d1e5      	bne.n	801140c <_GetWordWrap+0x28>
 8011440:	3501      	adds	r5, #1
 8011442:	e7d9      	b.n	80113f8 <_GetWordWrap+0x14>
 8011444:	462e      	mov	r6, r5
 8011446:	e7f3      	b.n	8011430 <_GetWordWrap+0x4c>
 8011448:	e8bd 87fc 	ldmia.w	sp!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}

0801144c <_WrapGetNumCharsDisp>:
 801144c:	2a01      	cmp	r2, #1
 801144e:	b510      	push	{r4, lr}
 8011450:	d005      	beq.n	801145e <_WrapGetNumCharsDisp+0x12>
 8011452:	2a02      	cmp	r2, #2
 8011454:	d108      	bne.n	8011468 <_WrapGetNumCharsDisp+0x1c>
 8011456:	4b07      	ldr	r3, [pc, #28]	; (8011474 <_WrapGetNumCharsDisp+0x28>)
 8011458:	681a      	ldr	r2, [r3, #0]
 801145a:	4790      	blx	r2
 801145c:	bd10      	pop	{r4, pc}
 801145e:	4c06      	ldr	r4, [pc, #24]	; (8011478 <_WrapGetNumCharsDisp+0x2c>)
 8011460:	461a      	mov	r2, r3
 8011462:	6824      	ldr	r4, [r4, #0]
 8011464:	47a0      	blx	r4
 8011466:	bd10      	pop	{r4, pc}
 8011468:	f647 71ff 	movw	r1, #32767	; 0x7fff
 801146c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011470:	f7fc b996 	b.w	800d7a0 <GUI__GetLineNumChars>
 8011474:	200002b0 	.word	0x200002b0
 8011478:	200002b4 	.word	0x200002b4

0801147c <GUI__WrapGetNumCharsDisp>:
 801147c:	2300      	movs	r3, #0
 801147e:	f7ff bfe5 	b.w	801144c <_WrapGetNumCharsDisp>

08011482 <GUI__WrapGetNumCharsToNextLine>:
 8011482:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011484:	b085      	sub	sp, #20
 8011486:	ab03      	add	r3, sp, #12
 8011488:	4617      	mov	r7, r2
 801148a:	460e      	mov	r6, r1
 801148c:	9001      	str	r0, [sp, #4]
 801148e:	f7ff ffdd 	bl	801144c <_WrapGetNumCharsDisp>
 8011492:	9d01      	ldr	r5, [sp, #4]
 8011494:	4604      	mov	r4, r0
 8011496:	4621      	mov	r1, r4
 8011498:	4628      	mov	r0, r5
 801149a:	f000 fbf9 	bl	8011c90 <GUI_UC__NumChars2NumBytes>
 801149e:	182d      	adds	r5, r5, r0
 80114a0:	a804      	add	r0, sp, #16
 80114a2:	f840 5d0c 	str.w	r5, [r0, #-12]!
 80114a6:	f000 fbdf 	bl	8011c68 <GUI_UC__GetCharCodeInc>
 80114aa:	280a      	cmp	r0, #10
 80114ac:	d101      	bne.n	80114b2 <GUI__WrapGetNumCharsToNextLine+0x30>
 80114ae:	3401      	adds	r4, #1
 80114b0:	e011      	b.n	80114d6 <GUI__WrapGetNumCharsToNextLine+0x54>
 80114b2:	2f01      	cmp	r7, #1
 80114b4:	d10f      	bne.n	80114d6 <GUI__WrapGetNumCharsToNextLine+0x54>
 80114b6:	2820      	cmp	r0, #32
 80114b8:	d10d      	bne.n	80114d6 <GUI__WrapGetNumCharsToNextLine+0x54>
 80114ba:	f7fc fa3d 	bl	800d938 <GUI_GetCharDistX>
 80114be:	4605      	mov	r5, r0
 80114c0:	9803      	ldr	r0, [sp, #12]
 80114c2:	4286      	cmp	r6, r0
 80114c4:	db07      	blt.n	80114d6 <GUI__WrapGetNumCharsToNextLine+0x54>
 80114c6:	1941      	adds	r1, r0, r5
 80114c8:	a801      	add	r0, sp, #4
 80114ca:	9103      	str	r1, [sp, #12]
 80114cc:	f000 fbcc 	bl	8011c68 <GUI_UC__GetCharCodeInc>
 80114d0:	3401      	adds	r4, #1
 80114d2:	2820      	cmp	r0, #32
 80114d4:	d0f4      	beq.n	80114c0 <GUI__WrapGetNumCharsToNextLine+0x3e>
 80114d6:	4620      	mov	r0, r4
 80114d8:	b005      	add	sp, #20
 80114da:	bdf0      	pop	{r4, r5, r6, r7, pc}

080114dc <GUI__WrapGetNumBytesToNextLine>:
 80114dc:	b510      	push	{r4, lr}
 80114de:	4604      	mov	r4, r0
 80114e0:	f7ff ffcf 	bl	8011482 <GUI__WrapGetNumCharsToNextLine>
 80114e4:	4601      	mov	r1, r0
 80114e6:	4620      	mov	r0, r4
 80114e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80114ec:	f000 bbd0 	b.w	8011c90 <GUI_UC__NumChars2NumBytes>

080114f0 <GUI__HandleEOLine>:
 80114f0:	6803      	ldr	r3, [r0, #0]
 80114f2:	781a      	ldrb	r2, [r3, #0]
 80114f4:	b122      	cbz	r2, 8011500 <GUI__HandleEOLine+0x10>
 80114f6:	2a0a      	cmp	r2, #10
 80114f8:	d104      	bne.n	8011504 <GUI__HandleEOLine+0x14>
 80114fa:	1c59      	adds	r1, r3, #1
 80114fc:	6001      	str	r1, [r0, #0]
 80114fe:	e001      	b.n	8011504 <GUI__HandleEOLine+0x14>
 8011500:	2001      	movs	r0, #1
 8011502:	4770      	bx	lr
 8011504:	2000      	movs	r0, #0
 8011506:	4770      	bx	lr

08011508 <GUI__GetNumChars>:
 8011508:	b513      	push	{r0, r1, r4, lr}
 801150a:	4604      	mov	r4, r0
 801150c:	9001      	str	r0, [sp, #4]
 801150e:	b130      	cbz	r0, 801151e <GUI__GetNumChars+0x16>
 8011510:	2400      	movs	r4, #0
 8011512:	a801      	add	r0, sp, #4
 8011514:	f000 fba8 	bl	8011c68 <GUI_UC__GetCharCodeInc>
 8011518:	b108      	cbz	r0, 801151e <GUI__GetNumChars+0x16>
 801151a:	3401      	adds	r4, #1
 801151c:	e7f9      	b.n	8011512 <GUI__GetNumChars+0xa>
 801151e:	4620      	mov	r0, r4
 8011520:	bd1c      	pop	{r2, r3, r4, pc}
	...

08011524 <GUI__GetFontSizeY>:
 8011524:	4b03      	ldr	r3, [pc, #12]	; (8011534 <GUI__GetFontSizeY+0x10>)
 8011526:	6818      	ldr	r0, [r3, #0]
 8011528:	69c1      	ldr	r1, [r0, #28]
 801152a:	7e08      	ldrb	r0, [r1, #24]
 801152c:	7eca      	ldrb	r2, [r1, #27]
 801152e:	4350      	muls	r0, r2
 8011530:	4770      	bx	lr
 8011532:	bf00      	nop
 8011534:	20000278 	.word	0x20000278

08011538 <GUI__ExpandPixelIndicesEx>:
 8011538:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801153c:	1e0c      	subs	r4, r1, #0
 801153e:	4605      	mov	r5, r0
 8011540:	f340 80b0 	ble.w	80116a4 <GUI__ExpandPixelIndicesEx+0x16c>
 8011544:	2a08      	cmp	r2, #8
 8011546:	685f      	ldr	r7, [r3, #4]
 8011548:	dd04      	ble.n	8011554 <GUI__ExpandPixelIndicesEx+0x1c>
 801154a:	2a10      	cmp	r2, #16
 801154c:	f340 8095 	ble.w	801167a <GUI__ExpandPixelIndicesEx+0x142>
 8011550:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011554:	3a01      	subs	r2, #1
 8011556:	2a07      	cmp	r2, #7
 8011558:	f200 80a4 	bhi.w	80116a4 <GUI__ExpandPixelIndicesEx+0x16c>
 801155c:	e8df f002 	tbb	[pc, r2]
 8011560:	53a22a04 	.word	0x53a22a04
 8011564:	7ca2a2a2 	.word	0x7ca2a2a2
 8011568:	1e66      	subs	r6, r4, #1
 801156a:	10f1      	asrs	r1, r6, #3
 801156c:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8011570:	2280      	movs	r2, #128	; 0x80
 8011572:	f006 0607 	and.w	r6, r6, #7
 8011576:	eb05 0e01 	add.w	lr, r5, r1
 801157a:	fa42 f206 	asr.w	r2, r2, r6
 801157e:	f815 9001 	ldrb.w	r9, [r5, r1]
 8011582:	f10e 3aff 	add.w	sl, lr, #4294967295
 8011586:	b2d5      	uxtb	r5, r2
 8011588:	f1c6 0307 	rsb	r3, r6, #7
 801158c:	ea09 0005 	and.w	r0, r9, r5
 8011590:	fa40 f003 	asr.w	r0, r0, r3
 8011594:	47b8      	blx	r7
 8011596:	f848 0904 	str.w	r0, [r8], #-4
 801159a:	b926      	cbnz	r6, 80115a6 <GUI__ExpandPixelIndicesEx+0x6e>
 801159c:	f81a 9901 	ldrb.w	r9, [sl], #-1
 80115a0:	2501      	movs	r5, #1
 80115a2:	2607      	movs	r6, #7
 80115a4:	e002      	b.n	80115ac <GUI__ExpandPixelIndicesEx+0x74>
 80115a6:	0068      	lsls	r0, r5, #1
 80115a8:	3e01      	subs	r6, #1
 80115aa:	b2c5      	uxtb	r5, r0
 80115ac:	3c01      	subs	r4, #1
 80115ae:	d1eb      	bne.n	8011588 <GUI__ExpandPixelIndicesEx+0x50>
 80115b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80115b4:	1e62      	subs	r2, r4, #1
 80115b6:	1093      	asrs	r3, r2, #2
 80115b8:	f002 0603 	and.w	r6, r2, #3
 80115bc:	eb05 0c03 	add.w	ip, r5, r3
 80115c0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80115c4:	f815 9003 	ldrb.w	r9, [r5, r3]
 80115c8:	0070      	lsls	r0, r6, #1
 80115ca:	25c0      	movs	r5, #192	; 0xc0
 80115cc:	fa45 f500 	asr.w	r5, r5, r0
 80115d0:	f10c 3aff 	add.w	sl, ip, #4294967295
 80115d4:	b2ed      	uxtb	r5, r5
 80115d6:	0072      	lsls	r2, r6, #1
 80115d8:	ea09 0105 	and.w	r1, r9, r5
 80115dc:	f1c2 0306 	rsb	r3, r2, #6
 80115e0:	fa41 f003 	asr.w	r0, r1, r3
 80115e4:	b2c0      	uxtb	r0, r0
 80115e6:	47b8      	blx	r7
 80115e8:	f848 0904 	str.w	r0, [r8], #-4
 80115ec:	b926      	cbnz	r6, 80115f8 <GUI__ExpandPixelIndicesEx+0xc0>
 80115ee:	2503      	movs	r5, #3
 80115f0:	f81a 9901 	ldrb.w	r9, [sl], #-1
 80115f4:	462e      	mov	r6, r5
 80115f6:	e002      	b.n	80115fe <GUI__ExpandPixelIndicesEx+0xc6>
 80115f8:	00ad      	lsls	r5, r5, #2
 80115fa:	3e01      	subs	r6, #1
 80115fc:	b2ed      	uxtb	r5, r5
 80115fe:	3c01      	subs	r4, #1
 8011600:	d1e9      	bne.n	80115d6 <GUI__ExpandPixelIndicesEx+0x9e>
 8011602:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011606:	1e66      	subs	r6, r4, #1
 8011608:	1071      	asrs	r1, r6, #1
 801160a:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 801160e:	f006 0601 	and.w	r6, r6, #1
 8011612:	eb05 0a01 	add.w	sl, r5, r1
 8011616:	f815 9001 	ldrb.w	r9, [r5, r1]
 801161a:	00b5      	lsls	r5, r6, #2
 801161c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8011620:	2d00      	cmp	r5, #0
 8011622:	bf14      	ite	ne
 8011624:	250f      	movne	r5, #15
 8011626:	25f0      	moveq	r5, #240	; 0xf0
 8011628:	00b3      	lsls	r3, r6, #2
 801162a:	f1c3 0004 	rsb	r0, r3, #4
 801162e:	ea09 0205 	and.w	r2, r9, r5
 8011632:	fa42 f100 	asr.w	r1, r2, r0
 8011636:	b2c8      	uxtb	r0, r1
 8011638:	47b8      	blx	r7
 801163a:	f848 0904 	str.w	r0, [r8], #-4
 801163e:	b926      	cbnz	r6, 801164a <GUI__ExpandPixelIndicesEx+0x112>
 8011640:	f81a 9901 	ldrb.w	r9, [sl], #-1
 8011644:	250f      	movs	r5, #15
 8011646:	2601      	movs	r6, #1
 8011648:	e002      	b.n	8011650 <GUI__ExpandPixelIndicesEx+0x118>
 801164a:	012e      	lsls	r6, r5, #4
 801164c:	b2f5      	uxtb	r5, r6
 801164e:	2600      	movs	r6, #0
 8011650:	3c01      	subs	r4, #1
 8011652:	d1e9      	bne.n	8011628 <GUI__ExpandPixelIndicesEx+0xf0>
 8011654:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011658:	eb05 0804 	add.w	r8, r5, r4
 801165c:	4646      	mov	r6, r8
 801165e:	eb05 0584 	add.w	r5, r5, r4, lsl #2
 8011662:	f816 0d01 	ldrb.w	r0, [r6, #-1]!
 8011666:	47b8      	blx	r7
 8011668:	ebc8 0304 	rsb	r3, r8, r4
 801166c:	f845 0d04 	str.w	r0, [r5, #-4]!
 8011670:	1998      	adds	r0, r3, r6
 8011672:	2800      	cmp	r0, #0
 8011674:	d1f5      	bne.n	8011662 <GUI__ExpandPixelIndicesEx+0x12a>
 8011676:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801167a:	695e      	ldr	r6, [r3, #20]
 801167c:	b12e      	cbz	r6, 801168a <GUI__ExpandPixelIndicesEx+0x152>
 801167e:	4629      	mov	r1, r5
 8011680:	4622      	mov	r2, r4
 8011682:	2302      	movs	r3, #2
 8011684:	47b0      	blx	r6
 8011686:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801168a:	eb05 0644 	add.w	r6, r5, r4, lsl #1
 801168e:	eb05 0584 	add.w	r5, r5, r4, lsl #2
 8011692:	f836 0d02 	ldrh.w	r0, [r6, #-2]!
 8011696:	47b8      	blx	r7
 8011698:	3c01      	subs	r4, #1
 801169a:	f845 0d04 	str.w	r0, [r5, #-4]!
 801169e:	d1f8      	bne.n	8011692 <GUI__ExpandPixelIndicesEx+0x15a>
 80116a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80116a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080116a8 <GUI__DrawBitmap16bpp>:
 80116a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80116ac:	b08f      	sub	sp, #60	; 0x3c
 80116ae:	460d      	mov	r5, r1
 80116b0:	4693      	mov	fp, r2
 80116b2:	4699      	mov	r9, r3
 80116b4:	9007      	str	r0, [sp, #28]
 80116b6:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80116b8:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 80116ba:	f000 fb42 	bl	8011d42 <GUI_GetColor>
 80116be:	900b      	str	r0, [sp, #44]	; 0x2c
 80116c0:	f000 ff3a 	bl	8012538 <LCD_GetColorIndex>
 80116c4:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 80116c6:	991a      	ldr	r1, [sp, #104]	; 0x68
 80116c8:	430f      	orrs	r7, r1
 80116ca:	ea4f 024b 	mov.w	r2, fp, lsl #1
 80116ce:	2f01      	cmp	r7, #1
 80116d0:	4684      	mov	ip, r0
 80116d2:	9208      	str	r2, [sp, #32]
 80116d4:	d001      	beq.n	80116da <GUI__DrawBitmap16bpp+0x32>
 80116d6:	2700      	movs	r7, #0
 80116d8:	e028      	b.n	801172c <GUI__DrawBitmap16bpp+0x84>
 80116da:	f8df 8208 	ldr.w	r8, [pc, #520]	; 80118e4 <GUI__DrawBitmap16bpp+0x23c>
 80116de:	f8d8 3000 	ldr.w	r3, [r8]
 80116e2:	7c58      	ldrb	r0, [r3, #17]
 80116e4:	f7f9 fcca 	bl	800b07c <GUI_GetpfIndex2ColorEx>
 80116e8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80116ea:	4282      	cmp	r2, r0
 80116ec:	d146      	bne.n	801177c <GUI__DrawBitmap16bpp+0xd4>
 80116ee:	9a08      	ldr	r2, [sp, #32]
 80116f0:	9700      	str	r7, [sp, #0]
 80116f2:	2110      	movs	r1, #16
 80116f4:	2000      	movs	r0, #0
 80116f6:	9102      	str	r1, [sp, #8]
 80116f8:	9203      	str	r2, [sp, #12]
 80116fa:	9005      	str	r0, [sp, #20]
 80116fc:	9701      	str	r7, [sp, #4]
 80116fe:	9404      	str	r4, [sp, #16]
 8011700:	9807      	ldr	r0, [sp, #28]
 8011702:	4629      	mov	r1, r5
 8011704:	465a      	mov	r2, fp
 8011706:	464b      	mov	r3, r9
 8011708:	f7f9 febe 	bl	800b488 <LCD_DrawBitmap>
 801170c:	e0e6      	b.n	80118dc <GUI__DrawBitmap16bpp+0x234>
 801170e:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8011710:	4974      	ldr	r1, [pc, #464]	; (80118e4 <GUI__DrawBitmap16bpp+0x23c>)
 8011712:	182b      	adds	r3, r5, r0
 8011714:	6808      	ldr	r0, [r1, #0]
 8011716:	9309      	str	r3, [sp, #36]	; 0x24
 8011718:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801171c:	f103 3aff 	add.w	sl, r3, #4294967295
 8011720:	4592      	cmp	sl, r2
 8011722:	da06      	bge.n	8011732 <GUI__DrawBitmap16bpp+0x8a>
 8011724:	9d08      	ldr	r5, [sp, #32]
 8011726:	1964      	adds	r4, r4, r5
 8011728:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801172a:	3701      	adds	r7, #1
 801172c:	454f      	cmp	r7, r9
 801172e:	dbee      	blt.n	801170e <GUI__DrawBitmap16bpp+0x66>
 8011730:	e079      	b.n	8011826 <GUI__DrawBitmap16bpp+0x17e>
 8011732:	f9b0 300e 	ldrsh.w	r3, [r0, #14]
 8011736:	429d      	cmp	r5, r3
 8011738:	dcf4      	bgt.n	8011724 <GUI__DrawBitmap16bpp+0x7c>
 801173a:	9a07      	ldr	r2, [sp, #28]
 801173c:	2600      	movs	r6, #0
 801173e:	455e      	cmp	r6, fp
 8011740:	daf0      	bge.n	8011724 <GUI__DrawBitmap16bpp+0x7c>
 8011742:	f834 8016 	ldrh.w	r8, [r4, r6, lsl #1]
 8011746:	45e0      	cmp	r8, ip
 8011748:	d007      	beq.n	801175a <GUI__DrawBitmap16bpp+0xb2>
 801174a:	9206      	str	r2, [sp, #24]
 801174c:	991c      	ldr	r1, [sp, #112]	; 0x70
 801174e:	4640      	mov	r0, r8
 8011750:	4788      	blx	r1
 8011752:	f7fa f863 	bl	800b81c <LCD_SetColor>
 8011756:	9a06      	ldr	r2, [sp, #24]
 8011758:	46c4      	mov	ip, r8
 801175a:	981a      	ldr	r0, [sp, #104]	; 0x68
 801175c:	f8cd c018 	str.w	ip, [sp, #24]
 8011760:	eb02 0800 	add.w	r8, r2, r0
 8011764:	4629      	mov	r1, r5
 8011766:	4610      	mov	r0, r2
 8011768:	4653      	mov	r3, sl
 801176a:	f108 32ff 	add.w	r2, r8, #4294967295
 801176e:	f7f9 fd85 	bl	800b27c <LCD_FillRect>
 8011772:	3601      	adds	r6, #1
 8011774:	4642      	mov	r2, r8
 8011776:	f8dd c018 	ldr.w	ip, [sp, #24]
 801177a:	e7e0      	b.n	801173e <GUI__DrawBitmap16bpp+0x96>
 801177c:	eb05 0109 	add.w	r1, r5, r9
 8011780:	1e48      	subs	r0, r1, #1
 8011782:	9009      	str	r0, [sp, #36]	; 0x24
 8011784:	f8d8 0000 	ldr.w	r0, [r8]
 8011788:	9b07      	ldr	r3, [sp, #28]
 801178a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801178e:	eb03 0a0b 	add.w	sl, r3, fp
 8011792:	4295      	cmp	r5, r2
 8011794:	f10a 3aff 	add.w	sl, sl, #4294967295
 8011798:	da06      	bge.n	80117a8 <GUI__DrawBitmap16bpp+0x100>
 801179a:	9908      	ldr	r1, [sp, #32]
 801179c:	1b55      	subs	r5, r2, r5
 801179e:	fb05 4401 	mla	r4, r5, r1, r4
 80117a2:	ebc5 0909 	rsb	r9, r5, r9
 80117a6:	4615      	mov	r5, r2
 80117a8:	f9b0 300e 	ldrsh.w	r3, [r0, #14]
 80117ac:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80117ae:	1ad1      	subs	r1, r2, r3
 80117b0:	2900      	cmp	r1, #0
 80117b2:	bfc8      	it	gt
 80117b4:	ebc1 0909 	rsbgt	r9, r1, r9
 80117b8:	f1b9 0f00 	cmp.w	r9, #0
 80117bc:	f340 808e 	ble.w	80118dc <GUI__DrawBitmap16bpp+0x234>
 80117c0:	f9b0 300c 	ldrsh.w	r3, [r0, #12]
 80117c4:	9907      	ldr	r1, [sp, #28]
 80117c6:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 80117ca:	ebc3 020a 	rsb	r2, r3, sl
 80117ce:	2a00      	cmp	r2, #0
 80117d0:	bfc8      	it	gt
 80117d2:	ebc2 0b0b 	rsbgt	fp, r2, fp
 80117d6:	4281      	cmp	r1, r0
 80117d8:	da05      	bge.n	80117e6 <GUI__DrawBitmap16bpp+0x13e>
 80117da:	1a43      	subs	r3, r0, r1
 80117dc:	ebc3 0b0b 	rsb	fp, r3, fp
 80117e0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80117e4:	9007      	str	r0, [sp, #28]
 80117e6:	f1bb 0f00 	cmp.w	fp, #0
 80117ea:	dd77      	ble.n	80118dc <GUI__DrawBitmap16bpp+0x234>
 80117ec:	2100      	movs	r1, #0
 80117ee:	910d      	str	r1, [sp, #52]	; 0x34
 80117f0:	b1ee      	cbz	r6, 801182e <GUI__DrawBitmap16bpp+0x186>
 80117f2:	f8d6 8014 	ldr.w	r8, [r6, #20]
 80117f6:	f1b8 0f00 	cmp.w	r8, #0
 80117fa:	d004      	beq.n	8011806 <GUI__DrawBitmap16bpp+0x15e>
 80117fc:	a80d      	add	r0, sp, #52	; 0x34
 80117fe:	460a      	mov	r2, r1
 8011800:	460b      	mov	r3, r1
 8011802:	f7fa fb8d 	bl	800bf20 <GUI__GetAlphaBuffer>
 8011806:	4f37      	ldr	r7, [pc, #220]	; (80118e4 <GUI__DrawBitmap16bpp+0x23c>)
 8011808:	f000 fe66 	bl	80124d8 <LCD_GetNextPixelAPI>
 801180c:	683a      	ldr	r2, [r7, #0]
 801180e:	4606      	mov	r6, r0
 8011810:	7c50      	ldrb	r0, [r2, #17]
 8011812:	f7f9 fc3b 	bl	800b08c <GUI_GetpfColor2IndexEx>
 8011816:	4629      	mov	r1, r5
 8011818:	900a      	str	r0, [sp, #40]	; 0x28
 801181a:	4652      	mov	r2, sl
 801181c:	9807      	ldr	r0, [sp, #28]
 801181e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011820:	6835      	ldr	r5, [r6, #0]
 8011822:	47a8      	blx	r5
 8011824:	b128      	cbz	r0, 8011832 <GUI__DrawBitmap16bpp+0x18a>
 8011826:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8011828:	f7fa fdc2 	bl	800c3b0 <GUI_SetColor>
 801182c:	e056      	b.n	80118dc <GUI__DrawBitmap16bpp+0x234>
 801182e:	46b0      	mov	r8, r6
 8011830:	e7e9      	b.n	8011806 <GUI__DrawBitmap16bpp+0x15e>
 8011832:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8011834:	b91d      	cbnz	r5, 801183e <GUI__DrawBitmap16bpp+0x196>
 8011836:	9f08      	ldr	r7, [sp, #32]
 8011838:	ea4f 084b 	mov.w	r8, fp, lsl #1
 801183c:	e045      	b.n	80118ca <GUI__DrawBitmap16bpp+0x222>
 801183e:	683f      	ldr	r7, [r7, #0]
 8011840:	4929      	ldr	r1, [pc, #164]	; (80118e8 <GUI__DrawBitmap16bpp+0x240>)
 8011842:	7c7d      	ldrb	r5, [r7, #17]
 8011844:	9f08      	ldr	r7, [sp, #32]
 8011846:	f851 3025 	ldr.w	r3, [r1, r5, lsl #2]
 801184a:	691a      	ldr	r2, [r3, #16]
 801184c:	6915      	ldr	r5, [r2, #16]
 801184e:	4620      	mov	r0, r4
 8011850:	990d      	ldr	r1, [sp, #52]	; 0x34
 8011852:	465a      	mov	r2, fp
 8011854:	2302      	movs	r3, #2
 8011856:	47c0      	blx	r8
 8011858:	980d      	ldr	r0, [sp, #52]	; 0x34
 801185a:	b125      	cbz	r5, 8011866 <GUI__DrawBitmap16bpp+0x1be>
 801185c:	4601      	mov	r1, r0
 801185e:	465a      	mov	r2, fp
 8011860:	2304      	movs	r3, #4
 8011862:	47a8      	blx	r5
 8011864:	e00c      	b.n	8011880 <GUI__DrawBitmap16bpp+0x1d8>
 8011866:	4603      	mov	r3, r0
 8011868:	46aa      	mov	sl, r5
 801186a:	6818      	ldr	r0, [r3, #0]
 801186c:	990a      	ldr	r1, [sp, #40]	; 0x28
 801186e:	9306      	str	r3, [sp, #24]
 8011870:	4788      	blx	r1
 8011872:	f10a 0a01 	add.w	sl, sl, #1
 8011876:	9b06      	ldr	r3, [sp, #24]
 8011878:	45da      	cmp	sl, fp
 801187a:	f843 0b04 	str.w	r0, [r3], #4
 801187e:	d1f4      	bne.n	801186a <GUI__DrawBitmap16bpp+0x1c2>
 8011880:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8011882:	f04f 0a00 	mov.w	sl, #0
 8011886:	f852 002a 	ldr.w	r0, [r2, sl, lsl #2]
 801188a:	6871      	ldr	r1, [r6, #4]
 801188c:	9206      	str	r2, [sp, #24]
 801188e:	f10a 0a01 	add.w	sl, sl, #1
 8011892:	4788      	blx	r1
 8011894:	45da      	cmp	sl, fp
 8011896:	9a06      	ldr	r2, [sp, #24]
 8011898:	d1f5      	bne.n	8011886 <GUI__DrawBitmap16bpp+0x1de>
 801189a:	68b0      	ldr	r0, [r6, #8]
 801189c:	4780      	blx	r0
 801189e:	f1b9 0901 	subs.w	r9, r9, #1
 80118a2:	443c      	add	r4, r7
 80118a4:	d1d3      	bne.n	801184e <GUI__DrawBitmap16bpp+0x1a6>
 80118a6:	68f3      	ldr	r3, [r6, #12]
 80118a8:	4798      	blx	r3
 80118aa:	e7bc      	b.n	8011826 <GUI__DrawBitmap16bpp+0x17e>
 80118ac:	991c      	ldr	r1, [sp, #112]	; 0x70
 80118ae:	f839 0b02 	ldrh.w	r0, [r9], #2
 80118b2:	4788      	blx	r1
 80118b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80118b6:	4798      	blx	r3
 80118b8:	6872      	ldr	r2, [r6, #4]
 80118ba:	4790      	blx	r2
 80118bc:	45d1      	cmp	r9, sl
 80118be:	d1f5      	bne.n	80118ac <GUI__DrawBitmap16bpp+0x204>
 80118c0:	b115      	cbz	r5, 80118c8 <GUI__DrawBitmap16bpp+0x220>
 80118c2:	68b0      	ldr	r0, [r6, #8]
 80118c4:	4780      	blx	r0
 80118c6:	19e4      	adds	r4, r4, r7
 80118c8:	46a9      	mov	r9, r5
 80118ca:	f109 35ff 	add.w	r5, r9, #4294967295
 80118ce:	f1b9 0f00 	cmp.w	r9, #0
 80118d2:	d0e8      	beq.n	80118a6 <GUI__DrawBitmap16bpp+0x1fe>
 80118d4:	eb04 0a08 	add.w	sl, r4, r8
 80118d8:	46a1      	mov	r9, r4
 80118da:	e7e7      	b.n	80118ac <GUI__DrawBitmap16bpp+0x204>
 80118dc:	b00f      	add	sp, #60	; 0x3c
 80118de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80118e2:	bf00      	nop
 80118e4:	20000278 	.word	0x20000278
 80118e8:	2000e67c 	.word	0x2000e67c

080118ec <GUI__CompactPixelIndices>:
 80118ec:	2a08      	cmp	r2, #8
 80118ee:	b530      	push	{r4, r5, lr}
 80118f0:	dd0d      	ble.n	801190e <GUI__CompactPixelIndices+0x22>
 80118f2:	2a10      	cmp	r2, #16
 80118f4:	dc09      	bgt.n	801190a <GUI__CompactPixelIndices+0x1e>
 80118f6:	2300      	movs	r3, #0
 80118f8:	f850 2023 	ldr.w	r2, [r0, r3, lsl #2]
 80118fc:	f820 2013 	strh.w	r2, [r0, r3, lsl #1]
 8011900:	3301      	adds	r3, #1
 8011902:	428b      	cmp	r3, r1
 8011904:	d1f8      	bne.n	80118f8 <GUI__CompactPixelIndices+0xc>
 8011906:	2001      	movs	r0, #1
 8011908:	bd30      	pop	{r4, r5, pc}
 801190a:	2000      	movs	r0, #0
 801190c:	bd30      	pop	{r4, r5, pc}
 801190e:	2a02      	cmp	r2, #2
 8011910:	d125      	bne.n	801195e <GUI__CompactPixelIndices+0x72>
 8011912:	4602      	mov	r2, r0
 8011914:	6803      	ldr	r3, [r0, #0]
 8011916:	019c      	lsls	r4, r3, #6
 8011918:	b2e3      	uxtb	r3, r4
 801191a:	1e4c      	subs	r4, r1, #1
 801191c:	d01c      	beq.n	8011958 <GUI__CompactPixelIndices+0x6c>
 801191e:	6845      	ldr	r5, [r0, #4]
 8011920:	3c01      	subs	r4, #1
 8011922:	f005 0503 	and.w	r5, r5, #3
 8011926:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 801192a:	d101      	bne.n	8011930 <GUI__CompactPixelIndices+0x44>
 801192c:	3008      	adds	r0, #8
 801192e:	e014      	b.n	801195a <GUI__CompactPixelIndices+0x6e>
 8011930:	6885      	ldr	r5, [r0, #8]
 8011932:	2c01      	cmp	r4, #1
 8011934:	f005 0503 	and.w	r5, r5, #3
 8011938:	ea43 0385 	orr.w	r3, r3, r5, lsl #2
 801193c:	d101      	bne.n	8011942 <GUI__CompactPixelIndices+0x56>
 801193e:	300c      	adds	r0, #12
 8011940:	e00b      	b.n	801195a <GUI__CompactPixelIndices+0x6e>
 8011942:	68c4      	ldr	r4, [r0, #12]
 8011944:	f004 0403 	and.w	r4, r4, #3
 8011948:	4323      	orrs	r3, r4
 801194a:	3010      	adds	r0, #16
 801194c:	3904      	subs	r1, #4
 801194e:	f802 3b01 	strb.w	r3, [r2], #1
 8011952:	2900      	cmp	r1, #0
 8011954:	d1de      	bne.n	8011914 <GUI__CompactPixelIndices+0x28>
 8011956:	e7d6      	b.n	8011906 <GUI__CompactPixelIndices+0x1a>
 8011958:	3004      	adds	r0, #4
 801195a:	2100      	movs	r1, #0
 801195c:	e7f7      	b.n	801194e <GUI__CompactPixelIndices+0x62>
 801195e:	2a04      	cmp	r2, #4
 8011960:	d112      	bne.n	8011988 <GUI__CompactPixelIndices+0x9c>
 8011962:	4602      	mov	r2, r0
 8011964:	6803      	ldr	r3, [r0, #0]
 8011966:	011b      	lsls	r3, r3, #4
 8011968:	3901      	subs	r1, #1
 801196a:	b2db      	uxtb	r3, r3
 801196c:	d101      	bne.n	8011972 <GUI__CompactPixelIndices+0x86>
 801196e:	3004      	adds	r0, #4
 8011970:	e005      	b.n	801197e <GUI__CompactPixelIndices+0x92>
 8011972:	6844      	ldr	r4, [r0, #4]
 8011974:	f004 040f 	and.w	r4, r4, #15
 8011978:	4323      	orrs	r3, r4
 801197a:	3008      	adds	r0, #8
 801197c:	3901      	subs	r1, #1
 801197e:	f802 3b01 	strb.w	r3, [r2], #1
 8011982:	2900      	cmp	r1, #0
 8011984:	d1ee      	bne.n	8011964 <GUI__CompactPixelIndices+0x78>
 8011986:	e7be      	b.n	8011906 <GUI__CompactPixelIndices+0x1a>
 8011988:	2a01      	cmp	r2, #1
 801198a:	d148      	bne.n	8011a1e <GUI__CompactPixelIndices+0x132>
 801198c:	4604      	mov	r4, r0
 801198e:	6803      	ldr	r3, [r0, #0]
 8011990:	01da      	lsls	r2, r3, #7
 8011992:	b2d3      	uxtb	r3, r2
 8011994:	1e4a      	subs	r2, r1, #1
 8011996:	d03f      	beq.n	8011a18 <GUI__CompactPixelIndices+0x12c>
 8011998:	6845      	ldr	r5, [r0, #4]
 801199a:	3a01      	subs	r2, #1
 801199c:	f005 0501 	and.w	r5, r5, #1
 80119a0:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 80119a4:	d101      	bne.n	80119aa <GUI__CompactPixelIndices+0xbe>
 80119a6:	3008      	adds	r0, #8
 80119a8:	e037      	b.n	8011a1a <GUI__CompactPixelIndices+0x12e>
 80119aa:	6885      	ldr	r5, [r0, #8]
 80119ac:	2a01      	cmp	r2, #1
 80119ae:	f005 0501 	and.w	r5, r5, #1
 80119b2:	ea43 1345 	orr.w	r3, r3, r5, lsl #5
 80119b6:	d101      	bne.n	80119bc <GUI__CompactPixelIndices+0xd0>
 80119b8:	300c      	adds	r0, #12
 80119ba:	e02e      	b.n	8011a1a <GUI__CompactPixelIndices+0x12e>
 80119bc:	68c5      	ldr	r5, [r0, #12]
 80119be:	2a02      	cmp	r2, #2
 80119c0:	f005 0501 	and.w	r5, r5, #1
 80119c4:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 80119c8:	d101      	bne.n	80119ce <GUI__CompactPixelIndices+0xe2>
 80119ca:	3010      	adds	r0, #16
 80119cc:	e025      	b.n	8011a1a <GUI__CompactPixelIndices+0x12e>
 80119ce:	6905      	ldr	r5, [r0, #16]
 80119d0:	2a03      	cmp	r2, #3
 80119d2:	f005 0501 	and.w	r5, r5, #1
 80119d6:	ea43 03c5 	orr.w	r3, r3, r5, lsl #3
 80119da:	d101      	bne.n	80119e0 <GUI__CompactPixelIndices+0xf4>
 80119dc:	3014      	adds	r0, #20
 80119de:	e01c      	b.n	8011a1a <GUI__CompactPixelIndices+0x12e>
 80119e0:	6945      	ldr	r5, [r0, #20]
 80119e2:	2a04      	cmp	r2, #4
 80119e4:	f005 0501 	and.w	r5, r5, #1
 80119e8:	ea43 0385 	orr.w	r3, r3, r5, lsl #2
 80119ec:	d101      	bne.n	80119f2 <GUI__CompactPixelIndices+0x106>
 80119ee:	3018      	adds	r0, #24
 80119f0:	e013      	b.n	8011a1a <GUI__CompactPixelIndices+0x12e>
 80119f2:	6982      	ldr	r2, [r0, #24]
 80119f4:	3907      	subs	r1, #7
 80119f6:	f002 0201 	and.w	r2, r2, #1
 80119fa:	ea43 0342 	orr.w	r3, r3, r2, lsl #1
 80119fe:	d101      	bne.n	8011a04 <GUI__CompactPixelIndices+0x118>
 8011a00:	301c      	adds	r0, #28
 8011a02:	e004      	b.n	8011a0e <GUI__CompactPixelIndices+0x122>
 8011a04:	69c2      	ldr	r2, [r0, #28]
 8011a06:	f002 0201 	and.w	r2, r2, #1
 8011a0a:	4313      	orrs	r3, r2
 8011a0c:	3020      	adds	r0, #32
 8011a0e:	f804 3b01 	strb.w	r3, [r4], #1
 8011a12:	2900      	cmp	r1, #0
 8011a14:	d1bb      	bne.n	801198e <GUI__CompactPixelIndices+0xa2>
 8011a16:	e776      	b.n	8011906 <GUI__CompactPixelIndices+0x1a>
 8011a18:	3004      	adds	r0, #4
 8011a1a:	2100      	movs	r1, #0
 8011a1c:	e7f7      	b.n	8011a0e <GUI__CompactPixelIndices+0x122>
 8011a1e:	2300      	movs	r3, #0
 8011a20:	f850 2023 	ldr.w	r2, [r0, r3, lsl #2]
 8011a24:	54c2      	strb	r2, [r0, r3]
 8011a26:	3301      	adds	r3, #1
 8011a28:	428b      	cmp	r3, r1
 8011a2a:	d1f9      	bne.n	8011a20 <GUI__CompactPixelIndices+0x134>
 8011a2c:	e76b      	b.n	8011906 <GUI__CompactPixelIndices+0x1a>

08011a2e <GUI__CompactPixelIndicesEx>:
 8011a2e:	2a08      	cmp	r2, #8
 8011a30:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011a34:	4604      	mov	r4, r0
 8011a36:	460d      	mov	r5, r1
 8011a38:	681e      	ldr	r6, [r3, #0]
 8011a3a:	dd05      	ble.n	8011a48 <GUI__CompactPixelIndicesEx+0x1a>
 8011a3c:	2a10      	cmp	r2, #16
 8011a3e:	f340 80b1 	ble.w	8011ba4 <GUI__CompactPixelIndicesEx+0x176>
 8011a42:	2000      	movs	r0, #0
 8011a44:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011a48:	3a01      	subs	r2, #1
 8011a4a:	2a07      	cmp	r2, #7
 8011a4c:	f200 80a1 	bhi.w	8011b92 <GUI__CompactPixelIndicesEx+0x164>
 8011a50:	e8df f002 	tbb	[pc, r2]
 8011a54:	7b9f5404 	.word	0x7b9f5404
 8011a58:	909f9f9f 	.word	0x909f9f9f
 8011a5c:	46a1      	mov	r9, r4
 8011a5e:	6820      	ldr	r0, [r4, #0]
 8011a60:	47b0      	blx	r6
 8011a62:	01c1      	lsls	r1, r0, #7
 8011a64:	f1b5 0801 	subs.w	r8, r5, #1
 8011a68:	b2cf      	uxtb	r7, r1
 8011a6a:	f000 8095 	beq.w	8011b98 <GUI__CompactPixelIndicesEx+0x16a>
 8011a6e:	6860      	ldr	r0, [r4, #4]
 8011a70:	47b0      	blx	r6
 8011a72:	f1b8 0801 	subs.w	r8, r8, #1
 8011a76:	ea47 1380 	orr.w	r3, r7, r0, lsl #6
 8011a7a:	b2df      	uxtb	r7, r3
 8011a7c:	d101      	bne.n	8011a82 <GUI__CompactPixelIndicesEx+0x54>
 8011a7e:	3408      	adds	r4, #8
 8011a80:	e08b      	b.n	8011b9a <GUI__CompactPixelIndicesEx+0x16c>
 8011a82:	68a0      	ldr	r0, [r4, #8]
 8011a84:	47b0      	blx	r6
 8011a86:	f1b8 0f01 	cmp.w	r8, #1
 8011a8a:	ea47 1740 	orr.w	r7, r7, r0, lsl #5
 8011a8e:	b2ff      	uxtb	r7, r7
 8011a90:	d101      	bne.n	8011a96 <GUI__CompactPixelIndicesEx+0x68>
 8011a92:	340c      	adds	r4, #12
 8011a94:	e081      	b.n	8011b9a <GUI__CompactPixelIndicesEx+0x16c>
 8011a96:	68e0      	ldr	r0, [r4, #12]
 8011a98:	47b0      	blx	r6
 8011a9a:	f1b8 0f02 	cmp.w	r8, #2
 8011a9e:	ea47 1200 	orr.w	r2, r7, r0, lsl #4
 8011aa2:	b2d7      	uxtb	r7, r2
 8011aa4:	d101      	bne.n	8011aaa <GUI__CompactPixelIndicesEx+0x7c>
 8011aa6:	3410      	adds	r4, #16
 8011aa8:	e077      	b.n	8011b9a <GUI__CompactPixelIndicesEx+0x16c>
 8011aaa:	6920      	ldr	r0, [r4, #16]
 8011aac:	47b0      	blx	r6
 8011aae:	f1b8 0f03 	cmp.w	r8, #3
 8011ab2:	ea47 00c0 	orr.w	r0, r7, r0, lsl #3
 8011ab6:	b2c7      	uxtb	r7, r0
 8011ab8:	d101      	bne.n	8011abe <GUI__CompactPixelIndicesEx+0x90>
 8011aba:	3414      	adds	r4, #20
 8011abc:	e06d      	b.n	8011b9a <GUI__CompactPixelIndicesEx+0x16c>
 8011abe:	6960      	ldr	r0, [r4, #20]
 8011ac0:	47b0      	blx	r6
 8011ac2:	f1b8 0f04 	cmp.w	r8, #4
 8011ac6:	ea47 0180 	orr.w	r1, r7, r0, lsl #2
 8011aca:	b2cf      	uxtb	r7, r1
 8011acc:	d101      	bne.n	8011ad2 <GUI__CompactPixelIndicesEx+0xa4>
 8011ace:	3418      	adds	r4, #24
 8011ad0:	e063      	b.n	8011b9a <GUI__CompactPixelIndicesEx+0x16c>
 8011ad2:	69a0      	ldr	r0, [r4, #24]
 8011ad4:	47b0      	blx	r6
 8011ad6:	f1b8 0f05 	cmp.w	r8, #5
 8011ada:	ea47 0340 	orr.w	r3, r7, r0, lsl #1
 8011ade:	b2df      	uxtb	r7, r3
 8011ae0:	d101      	bne.n	8011ae6 <GUI__CompactPixelIndicesEx+0xb8>
 8011ae2:	341c      	adds	r4, #28
 8011ae4:	e059      	b.n	8011b9a <GUI__CompactPixelIndicesEx+0x16c>
 8011ae6:	69e0      	ldr	r0, [r4, #28]
 8011ae8:	47b0      	blx	r6
 8011aea:	4307      	orrs	r7, r0
 8011aec:	3420      	adds	r4, #32
 8011aee:	b2ff      	uxtb	r7, r7
 8011af0:	3d08      	subs	r5, #8
 8011af2:	f809 7b01 	strb.w	r7, [r9], #1
 8011af6:	2d00      	cmp	r5, #0
 8011af8:	d1b1      	bne.n	8011a5e <GUI__CompactPixelIndicesEx+0x30>
 8011afa:	e04a      	b.n	8011b92 <GUI__CompactPixelIndicesEx+0x164>
 8011afc:	46a0      	mov	r8, r4
 8011afe:	6820      	ldr	r0, [r4, #0]
 8011b00:	47b0      	blx	r6
 8011b02:	0183      	lsls	r3, r0, #6
 8011b04:	f1b5 0901 	subs.w	r9, r5, #1
 8011b08:	b2df      	uxtb	r7, r3
 8011b0a:	d048      	beq.n	8011b9e <GUI__CompactPixelIndicesEx+0x170>
 8011b0c:	6860      	ldr	r0, [r4, #4]
 8011b0e:	47b0      	blx	r6
 8011b10:	f1b9 0901 	subs.w	r9, r9, #1
 8011b14:	ea47 1700 	orr.w	r7, r7, r0, lsl #4
 8011b18:	b2ff      	uxtb	r7, r7
 8011b1a:	d101      	bne.n	8011b20 <GUI__CompactPixelIndicesEx+0xf2>
 8011b1c:	3408      	adds	r4, #8
 8011b1e:	e03f      	b.n	8011ba0 <GUI__CompactPixelIndicesEx+0x172>
 8011b20:	68a0      	ldr	r0, [r4, #8]
 8011b22:	47b0      	blx	r6
 8011b24:	f1b9 0f01 	cmp.w	r9, #1
 8011b28:	ea47 0280 	orr.w	r2, r7, r0, lsl #2
 8011b2c:	b2d7      	uxtb	r7, r2
 8011b2e:	d101      	bne.n	8011b34 <GUI__CompactPixelIndicesEx+0x106>
 8011b30:	340c      	adds	r4, #12
 8011b32:	e035      	b.n	8011ba0 <GUI__CompactPixelIndicesEx+0x172>
 8011b34:	68e0      	ldr	r0, [r4, #12]
 8011b36:	47b0      	blx	r6
 8011b38:	4338      	orrs	r0, r7
 8011b3a:	3410      	adds	r4, #16
 8011b3c:	b2c7      	uxtb	r7, r0
 8011b3e:	3d04      	subs	r5, #4
 8011b40:	f808 7b01 	strb.w	r7, [r8], #1
 8011b44:	2d00      	cmp	r5, #0
 8011b46:	d1da      	bne.n	8011afe <GUI__CompactPixelIndicesEx+0xd0>
 8011b48:	e023      	b.n	8011b92 <GUI__CompactPixelIndicesEx+0x164>
 8011b4a:	46a0      	mov	r8, r4
 8011b4c:	6820      	ldr	r0, [r4, #0]
 8011b4e:	47b0      	blx	r6
 8011b50:	0100      	lsls	r0, r0, #4
 8011b52:	3d01      	subs	r5, #1
 8011b54:	b2c7      	uxtb	r7, r0
 8011b56:	d101      	bne.n	8011b5c <GUI__CompactPixelIndicesEx+0x12e>
 8011b58:	3404      	adds	r4, #4
 8011b5a:	e006      	b.n	8011b6a <GUI__CompactPixelIndicesEx+0x13c>
 8011b5c:	6860      	ldr	r0, [r4, #4]
 8011b5e:	47b0      	blx	r6
 8011b60:	ea47 0100 	orr.w	r1, r7, r0
 8011b64:	3408      	adds	r4, #8
 8011b66:	b2cf      	uxtb	r7, r1
 8011b68:	3d01      	subs	r5, #1
 8011b6a:	f808 7b01 	strb.w	r7, [r8], #1
 8011b6e:	2d00      	cmp	r5, #0
 8011b70:	d1ec      	bne.n	8011b4c <GUI__CompactPixelIndicesEx+0x11e>
 8011b72:	e00e      	b.n	8011b92 <GUI__CompactPixelIndicesEx+0x164>
 8011b74:	691f      	ldr	r7, [r3, #16]
 8011b76:	b12f      	cbz	r7, 8011b84 <GUI__CompactPixelIndicesEx+0x156>
 8011b78:	4620      	mov	r0, r4
 8011b7a:	4621      	mov	r1, r4
 8011b7c:	462a      	mov	r2, r5
 8011b7e:	2301      	movs	r3, #1
 8011b80:	47b8      	blx	r7
 8011b82:	e006      	b.n	8011b92 <GUI__CompactPixelIndicesEx+0x164>
 8011b84:	f854 0027 	ldr.w	r0, [r4, r7, lsl #2]
 8011b88:	47b0      	blx	r6
 8011b8a:	55e0      	strb	r0, [r4, r7]
 8011b8c:	3701      	adds	r7, #1
 8011b8e:	42bd      	cmp	r5, r7
 8011b90:	d1f8      	bne.n	8011b84 <GUI__CompactPixelIndicesEx+0x156>
 8011b92:	2001      	movs	r0, #1
 8011b94:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011b98:	3404      	adds	r4, #4
 8011b9a:	2500      	movs	r5, #0
 8011b9c:	e7a9      	b.n	8011af2 <GUI__CompactPixelIndicesEx+0xc4>
 8011b9e:	3404      	adds	r4, #4
 8011ba0:	2500      	movs	r5, #0
 8011ba2:	e7cd      	b.n	8011b40 <GUI__CompactPixelIndicesEx+0x112>
 8011ba4:	691f      	ldr	r7, [r3, #16]
 8011ba6:	b11f      	cbz	r7, 8011bb0 <GUI__CompactPixelIndicesEx+0x182>
 8011ba8:	4621      	mov	r1, r4
 8011baa:	462a      	mov	r2, r5
 8011bac:	2302      	movs	r3, #2
 8011bae:	e7e7      	b.n	8011b80 <GUI__CompactPixelIndicesEx+0x152>
 8011bb0:	4607      	mov	r7, r0
 8011bb2:	f854 0b04 	ldr.w	r0, [r4], #4
 8011bb6:	47b0      	blx	r6
 8011bb8:	3d01      	subs	r5, #1
 8011bba:	f827 0b02 	strh.w	r0, [r7], #2
 8011bbe:	d1f8      	bne.n	8011bb2 <GUI__CompactPixelIndicesEx+0x184>
 8011bc0:	e7e7      	b.n	8011b92 <GUI__CompactPixelIndicesEx+0x164>

08011bc2 <GUI__CalcTextRect>:
 8011bc2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011bc6:	460c      	mov	r4, r1
 8011bc8:	4615      	mov	r5, r2
 8011bca:	4698      	mov	r8, r3
 8011bcc:	2800      	cmp	r0, #0
 8011bce:	d03b      	beq.n	8011c48 <GUI__CalcTextRect+0x86>
 8011bd0:	f7fa fd8c 	bl	800c6ec <GUI_GetStringDistX>
 8011bd4:	f008 0203 	and.w	r2, r8, #3
 8011bd8:	2a01      	cmp	r2, #1
 8011bda:	4607      	mov	r7, r0
 8011bdc:	d00c      	beq.n	8011bf8 <GUI__CalcTextRect+0x36>
 8011bde:	2a02      	cmp	r2, #2
 8011be0:	f9b4 6000 	ldrsh.w	r6, [r4]
 8011be4:	d10c      	bne.n	8011c00 <GUI__CalcTextRect+0x3e>
 8011be6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8011bea:	1b8b      	subs	r3, r1, r6
 8011bec:	1c58      	adds	r0, r3, #1
 8011bee:	1bc1      	subs	r1, r0, r7
 8011bf0:	fb91 f2f2 	sdiv	r2, r1, r2
 8011bf4:	18b6      	adds	r6, r6, r2
 8011bf6:	e003      	b.n	8011c00 <GUI__CalcTextRect+0x3e>
 8011bf8:	f9b4 6004 	ldrsh.w	r6, [r4, #4]
 8011bfc:	1a33      	subs	r3, r6, r0
 8011bfe:	1c5e      	adds	r6, r3, #1
 8011c00:	f008 080c 	and.w	r8, r8, #12
 8011c04:	f7fb fe90 	bl	800d928 <GUI_GetFontDistY>
 8011c08:	f1b8 0f04 	cmp.w	r8, #4
 8011c0c:	d00e      	beq.n	8011c2c <GUI__CalcTextRect+0x6a>
 8011c0e:	f1b8 0f0c 	cmp.w	r8, #12
 8011c12:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8011c16:	d10d      	bne.n	8011c34 <GUI__CalcTextRect+0x72>
 8011c18:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8011c1c:	1aca      	subs	r2, r1, r3
 8011c1e:	1c51      	adds	r1, r2, #1
 8011c20:	1a0a      	subs	r2, r1, r0
 8011c22:	2102      	movs	r1, #2
 8011c24:	fb92 f2f1 	sdiv	r2, r2, r1
 8011c28:	189b      	adds	r3, r3, r2
 8011c2a:	e003      	b.n	8011c34 <GUI__CalcTextRect+0x72>
 8011c2c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011c30:	1a19      	subs	r1, r3, r0
 8011c32:	1c4b      	adds	r3, r1, #1
 8011c34:	3f01      	subs	r7, #1
 8011c36:	3801      	subs	r0, #1
 8011c38:	802e      	strh	r6, [r5, #0]
 8011c3a:	18c2      	adds	r2, r0, r3
 8011c3c:	19be      	adds	r6, r7, r6
 8011c3e:	806b      	strh	r3, [r5, #2]
 8011c40:	80ae      	strh	r6, [r5, #4]
 8011c42:	80ea      	strh	r2, [r5, #6]
 8011c44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011c48:	680b      	ldr	r3, [r1, #0]
 8011c4a:	6013      	str	r3, [r2, #0]
 8011c4c:	6848      	ldr	r0, [r1, #4]
 8011c4e:	6050      	str	r0, [r2, #4]
 8011c50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011c54 <_GetCharCode>:
 8011c54:	7800      	ldrb	r0, [r0, #0]
 8011c56:	4770      	bx	lr

08011c58 <_GetCharSize>:
 8011c58:	2001      	movs	r0, #1
 8011c5a:	4770      	bx	lr

08011c5c <_CalcSizeOfChar>:
 8011c5c:	2001      	movs	r0, #1
 8011c5e:	4770      	bx	lr

08011c60 <_Encode>:
 8011c60:	7001      	strb	r1, [r0, #0]
 8011c62:	2001      	movs	r0, #1
 8011c64:	4770      	bx	lr
	...

08011c68 <GUI_UC__GetCharCodeInc>:
 8011c68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011c6a:	4e08      	ldr	r6, [pc, #32]	; (8011c8c <GUI_UC__GetCharCodeInc+0x24>)
 8011c6c:	6804      	ldr	r4, [r0, #0]
 8011c6e:	6833      	ldr	r3, [r6, #0]
 8011c70:	4605      	mov	r5, r0
 8011c72:	6819      	ldr	r1, [r3, #0]
 8011c74:	4620      	mov	r0, r4
 8011c76:	4788      	blx	r1
 8011c78:	4607      	mov	r7, r0
 8011c7a:	6830      	ldr	r0, [r6, #0]
 8011c7c:	6842      	ldr	r2, [r0, #4]
 8011c7e:	4620      	mov	r0, r4
 8011c80:	4790      	blx	r2
 8011c82:	1823      	adds	r3, r4, r0
 8011c84:	602b      	str	r3, [r5, #0]
 8011c86:	4638      	mov	r0, r7
 8011c88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011c8a:	bf00      	nop
 8011c8c:	2000e678 	.word	0x2000e678

08011c90 <GUI_UC__NumChars2NumBytes>:
 8011c90:	b570      	push	{r4, r5, r6, lr}
 8011c92:	4604      	mov	r4, r0
 8011c94:	460e      	mov	r6, r1
 8011c96:	2500      	movs	r5, #0
 8011c98:	b146      	cbz	r6, 8011cac <GUI_UC__NumChars2NumBytes+0x1c>
 8011c9a:	4b05      	ldr	r3, [pc, #20]	; (8011cb0 <GUI_UC__NumChars2NumBytes+0x20>)
 8011c9c:	6818      	ldr	r0, [r3, #0]
 8011c9e:	6841      	ldr	r1, [r0, #4]
 8011ca0:	4620      	mov	r0, r4
 8011ca2:	4788      	blx	r1
 8011ca4:	3e01      	subs	r6, #1
 8011ca6:	1824      	adds	r4, r4, r0
 8011ca8:	182d      	adds	r5, r5, r0
 8011caa:	e7f5      	b.n	8011c98 <GUI_UC__NumChars2NumBytes+0x8>
 8011cac:	4628      	mov	r0, r5
 8011cae:	bd70      	pop	{r4, r5, r6, pc}
 8011cb0:	2000e678 	.word	0x2000e678

08011cb4 <GUI_SetTextAlign>:
 8011cb4:	4b03      	ldr	r3, [pc, #12]	; (8011cc4 <GUI_SetTextAlign+0x10>)
 8011cb6:	6819      	ldr	r1, [r3, #0]
 8011cb8:	f9b1 202c 	ldrsh.w	r2, [r1, #44]	; 0x2c
 8011cbc:	8588      	strh	r0, [r1, #44]	; 0x2c
 8011cbe:	4610      	mov	r0, r2
 8011cc0:	4770      	bx	lr
 8011cc2:	bf00      	nop
 8011cc4:	20000278 	.word	0x20000278

08011cc8 <GUI_SetOrg>:
 8011cc8:	b510      	push	{r4, lr}
 8011cca:	460a      	mov	r2, r1
 8011ccc:	4c07      	ldr	r4, [pc, #28]	; (8011cec <GUI_SetOrg+0x24>)
 8011cce:	4908      	ldr	r1, [pc, #32]	; (8011cf0 <GUI_SetOrg+0x28>)
 8011cd0:	4603      	mov	r3, r0
 8011cd2:	8008      	strh	r0, [r1, #0]
 8011cd4:	6821      	ldr	r1, [r4, #0]
 8011cd6:	4807      	ldr	r0, [pc, #28]	; (8011cf4 <GUI_SetOrg+0x2c>)
 8011cd8:	4c07      	ldr	r4, [pc, #28]	; (8011cf8 <GUI_SetOrg+0x30>)
 8011cda:	8002      	strh	r2, [r0, #0]
 8011cdc:	7c48      	ldrb	r0, [r1, #17]
 8011cde:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 8011ce2:	68c1      	ldr	r1, [r0, #12]
 8011ce4:	6a0c      	ldr	r4, [r1, #32]
 8011ce6:	4619      	mov	r1, r3
 8011ce8:	47a0      	blx	r4
 8011cea:	bd10      	pop	{r4, pc}
 8011cec:	20000278 	.word	0x20000278
 8011cf0:	2000e66c 	.word	0x2000e66c
 8011cf4:	2000e664 	.word	0x2000e664
 8011cf8:	2000e67c 	.word	0x2000e67c

08011cfc <GUI_SetLineStyle>:
 8011cfc:	4b02      	ldr	r3, [pc, #8]	; (8011d08 <GUI_SetLineStyle+0xc>)
 8011cfe:	6819      	ldr	r1, [r3, #0]
 8011d00:	7e8a      	ldrb	r2, [r1, #26]
 8011d02:	7688      	strb	r0, [r1, #26]
 8011d04:	4610      	mov	r0, r2
 8011d06:	4770      	bx	lr
 8011d08:	20000278 	.word	0x20000278

08011d0c <GUI_GetFontInfo>:
 8011d0c:	b508      	push	{r3, lr}
 8011d0e:	b910      	cbnz	r0, 8011d16 <GUI_GetFontInfo+0xa>
 8011d10:	4b07      	ldr	r3, [pc, #28]	; (8011d30 <GUI_GetFontInfo+0x24>)
 8011d12:	6818      	ldr	r0, [r3, #0]
 8011d14:	69c0      	ldr	r0, [r0, #28]
 8011d16:	f890 2020 	ldrb.w	r2, [r0, #32]
 8011d1a:	708a      	strb	r2, [r1, #2]
 8011d1c:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8011d20:	710b      	strb	r3, [r1, #4]
 8011d22:	f890 2021 	ldrb.w	r2, [r0, #33]	; 0x21
 8011d26:	70ca      	strb	r2, [r1, #3]
 8011d28:	6883      	ldr	r3, [r0, #8]
 8011d2a:	4798      	blx	r3
 8011d2c:	bd08      	pop	{r3, pc}
 8011d2e:	bf00      	nop
 8011d30:	20000278 	.word	0x20000278

08011d34 <GUI_GetBkColor>:
 8011d34:	b508      	push	{r3, lr}
 8011d36:	f000 fbf7 	bl	8012528 <LCD_GetBkColorIndex>
 8011d3a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011d3e:	f7f9 bd19 	b.w	800b774 <LCD_Index2Color>

08011d42 <GUI_GetColor>:
 8011d42:	b508      	push	{r3, lr}
 8011d44:	f000 fbf8 	bl	8012538 <LCD_GetColorIndex>
 8011d48:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011d4c:	f7f9 bd12 	b.w	800b774 <LCD_Index2Color>

08011d50 <GUI_DrawFocusRect>:
 8011d50:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011d52:	4603      	mov	r3, r0
 8011d54:	460a      	mov	r2, r1
 8011d56:	4668      	mov	r0, sp
 8011d58:	4619      	mov	r1, r3
 8011d5a:	f7f9 fe01 	bl	800b960 <GUI__ReduceRect>
 8011d5e:	4826      	ldr	r0, [pc, #152]	; (8011df8 <GUI_DrawFocusRect+0xa8>)
 8011d60:	f8bd 1000 	ldrh.w	r1, [sp]
 8011d64:	6803      	ldr	r3, [r0, #0]
 8011d66:	f8b3 204c 	ldrh.w	r2, [r3, #76]	; 0x4c
 8011d6a:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8011d6e:	1850      	adds	r0, r2, r1
 8011d70:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 8011d74:	f8ad 0000 	strh.w	r0, [sp]
 8011d78:	1858      	adds	r0, r3, r1
 8011d7a:	f8ad 0002 	strh.w	r0, [sp, #2]
 8011d7e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8011d82:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8011d86:	1852      	adds	r2, r2, r1
 8011d88:	181b      	adds	r3, r3, r0
 8011d8a:	4668      	mov	r0, sp
 8011d8c:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011d90:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011d94:	f7f6 fd78 	bl	8008888 <WM__InitIVRSearch>
 8011d98:	b360      	cbz	r0, 8011df4 <GUI_DrawFocusRect+0xa4>
 8011d9a:	f8bd 6000 	ldrh.w	r6, [sp]
 8011d9e:	2500      	movs	r5, #0
 8011da0:	f9bd 1004 	ldrsh.w	r1, [sp, #4]
 8011da4:	fa05 f486 	sxtah	r4, r5, r6
 8011da8:	3502      	adds	r5, #2
 8011daa:	428c      	cmp	r4, r1
 8011dac:	dc0a      	bgt.n	8011dc4 <GUI_DrawFocusRect+0x74>
 8011dae:	4620      	mov	r0, r4
 8011db0:	f9bd 1002 	ldrsh.w	r1, [sp, #2]
 8011db4:	f7f9 f9e8 	bl	800b188 <LCD_DrawPixel>
 8011db8:	4620      	mov	r0, r4
 8011dba:	f9bd 1006 	ldrsh.w	r1, [sp, #6]
 8011dbe:	f7f9 f9e3 	bl	800b188 <LCD_DrawPixel>
 8011dc2:	e7ed      	b.n	8011da0 <GUI_DrawFocusRect+0x50>
 8011dc4:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 8011dc8:	2500      	movs	r5, #0
 8011dca:	f9bd 2006 	ldrsh.w	r2, [sp, #6]
 8011dce:	fa05 f486 	sxtah	r4, r5, r6
 8011dd2:	3502      	adds	r5, #2
 8011dd4:	4294      	cmp	r4, r2
 8011dd6:	dc0a      	bgt.n	8011dee <GUI_DrawFocusRect+0x9e>
 8011dd8:	f9bd 0000 	ldrsh.w	r0, [sp]
 8011ddc:	4621      	mov	r1, r4
 8011dde:	f7f9 f9d3 	bl	800b188 <LCD_DrawPixel>
 8011de2:	f9bd 0004 	ldrsh.w	r0, [sp, #4]
 8011de6:	4621      	mov	r1, r4
 8011de8:	f7f9 f9ce 	bl	800b188 <LCD_DrawPixel>
 8011dec:	e7ed      	b.n	8011dca <GUI_DrawFocusRect+0x7a>
 8011dee:	f7f6 fc8b 	bl	8008708 <WM__GetNextIVR>
 8011df2:	e7d1      	b.n	8011d98 <GUI_DrawFocusRect+0x48>
 8011df4:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
 8011df6:	bf00      	nop
 8011df8:	20000278 	.word	0x20000278

08011dfc <GUI_CURSOR_SetPositionEx>:
 8011dfc:	b570      	push	{r4, r5, r6, lr}
 8011dfe:	4606      	mov	r6, r0
 8011e00:	4610      	mov	r0, r2
 8011e02:	4614      	mov	r4, r2
 8011e04:	460d      	mov	r5, r1
 8011e06:	f7fa fae7 	bl	800c3d8 <GUI_GetCursorLayer>
 8011e0a:	4b14      	ldr	r3, [pc, #80]	; (8011e5c <GUI_CURSOR_SetPositionEx+0x60>)
 8011e0c:	2214      	movs	r2, #20
 8011e0e:	b148      	cbz	r0, 8011e24 <GUI_CURSOR_SetPositionEx+0x28>
 8011e10:	4354      	muls	r4, r2
 8011e12:	591b      	ldr	r3, [r3, r4]
 8011e14:	6859      	ldr	r1, [r3, #4]
 8011e16:	689a      	ldr	r2, [r3, #8]
 8011e18:	1a71      	subs	r1, r6, r1
 8011e1a:	1aaa      	subs	r2, r5, r2
 8011e1c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011e20:	f7fa bb00 	b.w	800c424 <GUI_SetLayerPosEx>
 8011e24:	fb02 3004 	mla	r0, r2, r4, r3
 8011e28:	68c1      	ldr	r1, [r0, #12]
 8011e2a:	42a9      	cmp	r1, r5
 8011e2c:	d102      	bne.n	8011e34 <GUI_CURSOR_SetPositionEx+0x38>
 8011e2e:	6883      	ldr	r3, [r0, #8]
 8011e30:	42b3      	cmp	r3, r6
 8011e32:	d012      	beq.n	8011e5a <GUI_CURSOR_SetPositionEx+0x5e>
 8011e34:	4a09      	ldr	r2, [pc, #36]	; (8011e5c <GUI_CURSOR_SetPositionEx+0x60>)
 8011e36:	2314      	movs	r3, #20
 8011e38:	4363      	muls	r3, r4
 8011e3a:	18d0      	adds	r0, r2, r3
 8011e3c:	6900      	ldr	r0, [r0, #16]
 8011e3e:	b130      	cbz	r0, 8011e4e <GUI_CURSOR_SetPositionEx+0x52>
 8011e40:	58d2      	ldr	r2, [r2, r3]
 8011e42:	6851      	ldr	r1, [r2, #4]
 8011e44:	6893      	ldr	r3, [r2, #8]
 8011e46:	1a71      	subs	r1, r6, r1
 8011e48:	1aea      	subs	r2, r5, r3
 8011e4a:	f000 fc8d 	bl	8012768 <GUI_SPRITE_SetPosition>
 8011e4e:	4a03      	ldr	r2, [pc, #12]	; (8011e5c <GUI_CURSOR_SetPositionEx+0x60>)
 8011e50:	2014      	movs	r0, #20
 8011e52:	fb00 2404 	mla	r4, r0, r4, r2
 8011e56:	60a6      	str	r6, [r4, #8]
 8011e58:	60e5      	str	r5, [r4, #12]
 8011e5a:	bd70      	pop	{r4, r5, r6, pc}
 8011e5c:	2000e230 	.word	0x2000e230

08011e60 <GUI_Long2Len>:
 8011e60:	b510      	push	{r4, lr}
 8011e62:	ea80 71e0 	eor.w	r1, r0, r0, asr #31
 8011e66:	eba1 71e0 	sub.w	r1, r1, r0, asr #31
 8011e6a:	2200      	movs	r2, #0
 8011e6c:	1c53      	adds	r3, r2, #1
 8011e6e:	2b0a      	cmp	r3, #10
 8011e70:	d006      	beq.n	8011e80 <GUI_Long2Len+0x20>
 8011e72:	4c06      	ldr	r4, [pc, #24]	; (8011e8c <GUI_Long2Len+0x2c>)
 8011e74:	f854 4023 	ldr.w	r4, [r4, r3, lsl #2]
 8011e78:	42a1      	cmp	r1, r4
 8011e7a:	d301      	bcc.n	8011e80 <GUI_Long2Len+0x20>
 8011e7c:	461a      	mov	r2, r3
 8011e7e:	e7f5      	b.n	8011e6c <GUI_Long2Len+0xc>
 8011e80:	2800      	cmp	r0, #0
 8011e82:	bfb8      	it	lt
 8011e84:	1c93      	addlt	r3, r2, #2
 8011e86:	4618      	mov	r0, r3
 8011e88:	bd10      	pop	{r4, pc}
 8011e8a:	bf00      	nop
 8011e8c:	0802d660 	.word	0x0802d660

08011e90 <GUI_AddDecShift>:
 8011e90:	f1b0 4f00 	cmp.w	r0, #2147483648	; 0x80000000
 8011e94:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011e96:	681c      	ldr	r4, [r3, #0]
 8011e98:	d109      	bne.n	8011eae <GUI_AddDecShift+0x1e>
 8011e9a:	202d      	movs	r0, #45	; 0x2d
 8011e9c:	f804 0b01 	strb.w	r0, [r4], #1
 8011ea0:	1e4e      	subs	r6, r1, #1
 8011ea2:	b2f1      	uxtb	r1, r6
 8011ea4:	601c      	str	r4, [r3, #0]
 8011ea6:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8011eaa:	2601      	movs	r6, #1
 8011eac:	e00c      	b.n	8011ec8 <GUI_AddDecShift+0x38>
 8011eae:	2800      	cmp	r0, #0
 8011eb0:	da06      	bge.n	8011ec0 <GUI_AddDecShift+0x30>
 8011eb2:	252d      	movs	r5, #45	; 0x2d
 8011eb4:	f804 5b01 	strb.w	r5, [r4], #1
 8011eb8:	4240      	negs	r0, r0
 8011eba:	601c      	str	r4, [r3, #0]
 8011ebc:	2401      	movs	r4, #1
 8011ebe:	e000      	b.n	8011ec2 <GUI_AddDecShift+0x32>
 8011ec0:	2400      	movs	r4, #0
 8011ec2:	1b09      	subs	r1, r1, r4
 8011ec4:	b2c9      	uxtb	r1, r1
 8011ec6:	2600      	movs	r6, #0
 8011ec8:	b30a      	cbz	r2, 8011f0e <GUI_AddDecShift+0x7e>
 8011eca:	3901      	subs	r1, #1
 8011ecc:	b2c9      	uxtb	r1, r1
 8011ece:	e01e      	b.n	8011f0e <GUI_AddDecShift+0x7e>
 8011ed0:	1e4d      	subs	r5, r1, #1
 8011ed2:	4291      	cmp	r1, r2
 8011ed4:	b2ed      	uxtb	r5, r5
 8011ed6:	d105      	bne.n	8011ee4 <GUI_AddDecShift+0x54>
 8011ed8:	4c12      	ldr	r4, [pc, #72]	; (8011f24 <GUI_AddDecShift+0x94>)
 8011eda:	7827      	ldrb	r7, [r4, #0]
 8011edc:	681c      	ldr	r4, [r3, #0]
 8011ede:	f804 7b01 	strb.w	r7, [r4], #1
 8011ee2:	601c      	str	r4, [r3, #0]
 8011ee4:	4f10      	ldr	r7, [pc, #64]	; (8011f28 <GUI_AddDecShift+0x98>)
 8011ee6:	f857 7025 	ldr.w	r7, [r7, r5, lsl #2]
 8011eea:	fb90 f4f7 	sdiv	r4, r0, r7
 8011eee:	b2e4      	uxtb	r4, r4
 8011ef0:	2c0a      	cmp	r4, #10
 8011ef2:	d80e      	bhi.n	8011f12 <GUI_AddDecShift+0x82>
 8011ef4:	fb07 0014 	mls	r0, r7, r4, r0
 8011ef8:	b17d      	cbz	r5, 8011f1a <GUI_AddDecShift+0x8a>
 8011efa:	2c0a      	cmp	r4, #10
 8011efc:	bf18      	it	ne
 8011efe:	4629      	movne	r1, r5
 8011f00:	681d      	ldr	r5, [r3, #0]
 8011f02:	bf08      	it	eq
 8011f04:	2401      	moveq	r4, #1
 8011f06:	3430      	adds	r4, #48	; 0x30
 8011f08:	f805 4b01 	strb.w	r4, [r5], #1
 8011f0c:	601d      	str	r5, [r3, #0]
 8011f0e:	2900      	cmp	r1, #0
 8011f10:	d1de      	bne.n	8011ed0 <GUI_AddDecShift+0x40>
 8011f12:	681b      	ldr	r3, [r3, #0]
 8011f14:	2200      	movs	r2, #0
 8011f16:	701a      	strb	r2, [r3, #0]
 8011f18:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011f1a:	2e00      	cmp	r6, #0
 8011f1c:	d0ed      	beq.n	8011efa <GUI_AddDecShift+0x6a>
 8011f1e:	3401      	adds	r4, #1
 8011f20:	b2e4      	uxtb	r4, r4
 8011f22:	e7ea      	b.n	8011efa <GUI_AddDecShift+0x6a>
 8011f24:	2000e65a 	.word	0x2000e65a
 8011f28:	0802d660 	.word	0x0802d660

08011f2c <_GetIndexMask_0>:
 8011f2c:	b508      	push	{r3, lr}
 8011f2e:	f7f9 f87f 	bl	800b030 <LCD_GetNumColors>
 8011f32:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8011f36:	d010      	beq.n	8011f5a <_GetIndexMask_0+0x2e>
 8011f38:	287f      	cmp	r0, #127	; 0x7f
 8011f3a:	d810      	bhi.n	8011f5e <_GetIndexMask_0+0x32>
 8011f3c:	283f      	cmp	r0, #63	; 0x3f
 8011f3e:	d810      	bhi.n	8011f62 <_GetIndexMask_0+0x36>
 8011f40:	281f      	cmp	r0, #31
 8011f42:	d810      	bhi.n	8011f66 <_GetIndexMask_0+0x3a>
 8011f44:	280f      	cmp	r0, #15
 8011f46:	d810      	bhi.n	8011f6a <_GetIndexMask_0+0x3e>
 8011f48:	2807      	cmp	r0, #7
 8011f4a:	d810      	bhi.n	8011f6e <_GetIndexMask_0+0x42>
 8011f4c:	2803      	cmp	r0, #3
 8011f4e:	d810      	bhi.n	8011f72 <_GetIndexMask_0+0x46>
 8011f50:	2801      	cmp	r0, #1
 8011f52:	bf94      	ite	ls
 8011f54:	2000      	movls	r0, #0
 8011f56:	2001      	movhi	r0, #1
 8011f58:	e00c      	b.n	8011f74 <_GetIndexMask_0+0x48>
 8011f5a:	2008      	movs	r0, #8
 8011f5c:	e00a      	b.n	8011f74 <_GetIndexMask_0+0x48>
 8011f5e:	2007      	movs	r0, #7
 8011f60:	e008      	b.n	8011f74 <_GetIndexMask_0+0x48>
 8011f62:	2006      	movs	r0, #6
 8011f64:	e006      	b.n	8011f74 <_GetIndexMask_0+0x48>
 8011f66:	2005      	movs	r0, #5
 8011f68:	e004      	b.n	8011f74 <_GetIndexMask_0+0x48>
 8011f6a:	2004      	movs	r0, #4
 8011f6c:	e002      	b.n	8011f74 <_GetIndexMask_0+0x48>
 8011f6e:	2003      	movs	r0, #3
 8011f70:	e000      	b.n	8011f74 <_GetIndexMask_0+0x48>
 8011f72:	2002      	movs	r0, #2
 8011f74:	2301      	movs	r3, #1
 8011f76:	fa03 f000 	lsl.w	r0, r3, r0
 8011f7a:	3801      	subs	r0, #1
 8011f7c:	bd08      	pop	{r3, pc}

08011f7e <_Index2Color_0>:
 8011f7e:	b538      	push	{r3, r4, r5, lr}
 8011f80:	4604      	mov	r4, r0
 8011f82:	f7f9 f855 	bl	800b030 <LCD_GetNumColors>
 8011f86:	4605      	mov	r5, r0
 8011f88:	f7f9 f870 	bl	800b06c <LCD_GetPalette>
 8011f8c:	42ac      	cmp	r4, r5
 8011f8e:	d203      	bcs.n	8011f98 <_Index2Color_0+0x1a>
 8011f90:	b118      	cbz	r0, 8011f9a <_Index2Color_0+0x1c>
 8011f92:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 8011f96:	bd38      	pop	{r3, r4, r5, pc}
 8011f98:	2000      	movs	r0, #0
 8011f9a:	bd38      	pop	{r3, r4, r5, pc}

08011f9c <_Color2Index_0>:
 8011f9c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011fa0:	4680      	mov	r8, r0
 8011fa2:	f7f9 f845 	bl	800b030 <LCD_GetNumColors>
 8011fa6:	4607      	mov	r7, r0
 8011fa8:	f7f9 f860 	bl	800b06c <LCD_GetPalette>
 8011fac:	4606      	mov	r6, r0
 8011fae:	b1c8      	cbz	r0, 8011fe4 <_Color2Index_0+0x48>
 8011fb0:	2300      	movs	r3, #0
 8011fb2:	f856 2023 	ldr.w	r2, [r6, r3, lsl #2]
 8011fb6:	4590      	cmp	r8, r2
 8011fb8:	4618      	mov	r0, r3
 8011fba:	d015      	beq.n	8011fe8 <_Color2Index_0+0x4c>
 8011fbc:	3301      	adds	r3, #1
 8011fbe:	42bb      	cmp	r3, r7
 8011fc0:	dbf7      	blt.n	8011fb2 <_Color2Index_0+0x16>
 8011fc2:	2500      	movs	r5, #0
 8011fc4:	f06f 497f 	mvn.w	r9, #4278190080	; 0xff000000
 8011fc8:	462c      	mov	r4, r5
 8011fca:	f856 1024 	ldr.w	r1, [r6, r4, lsl #2]
 8011fce:	4640      	mov	r0, r8
 8011fd0:	f000 fda3 	bl	8012b1a <GUI_CalcColorDist>
 8011fd4:	4548      	cmp	r0, r9
 8011fd6:	bf3c      	itt	cc
 8011fd8:	4681      	movcc	r9, r0
 8011fda:	4625      	movcc	r5, r4
 8011fdc:	3401      	adds	r4, #1
 8011fde:	42bc      	cmp	r4, r7
 8011fe0:	dbf3      	blt.n	8011fca <_Color2Index_0+0x2e>
 8011fe2:	e000      	b.n	8011fe6 <_Color2Index_0+0x4a>
 8011fe4:	4605      	mov	r5, r0
 8011fe6:	4628      	mov	r0, r5
 8011fe8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08011fec <WIDGET__FillStringInRect>:
 8011fec:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8011ff0:	461e      	mov	r6, r3
 8011ff2:	4b3f      	ldr	r3, [pc, #252]	; (80120f0 <WIDGET__FillStringInRect+0x104>)
 8011ff4:	681b      	ldr	r3, [r3, #0]
 8011ff6:	4690      	mov	r8, r2
 8011ff8:	695a      	ldr	r2, [r3, #20]
 8011ffa:	4607      	mov	r7, r0
 8011ffc:	460c      	mov	r4, r1
 8011ffe:	b90a      	cbnz	r2, 8012004 <WIDGET__FillStringInRect+0x18>
 8012000:	bb1f      	cbnz	r7, 801204a <WIDGET__FillStringInRect+0x5e>
 8012002:	e06f      	b.n	80120e4 <WIDGET__FillStringInRect+0xf8>
 8012004:	6808      	ldr	r0, [r1, #0]
 8012006:	6849      	ldr	r1, [r1, #4]
 8012008:	466d      	mov	r5, sp
 801200a:	c503      	stmia	r5!, {r0, r1}
 801200c:	f8b3 104c 	ldrh.w	r1, [r3, #76]	; 0x4c
 8012010:	f8bd 0000 	ldrh.w	r0, [sp]
 8012014:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8012018:	1808      	adds	r0, r1, r0
 801201a:	f8ad 0000 	strh.w	r0, [sp]
 801201e:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 8012022:	1818      	adds	r0, r3, r0
 8012024:	f8ad 0002 	strh.w	r0, [sp, #2]
 8012028:	f8bd 0004 	ldrh.w	r0, [sp, #4]
 801202c:	1809      	adds	r1, r1, r0
 801202e:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8012032:	f8ad 1004 	strh.w	r1, [sp, #4]
 8012036:	181b      	adds	r3, r3, r0
 8012038:	4669      	mov	r1, sp
 801203a:	4610      	mov	r0, r2
 801203c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012040:	f7fa fa10 	bl	800c464 <GUI_RectsIntersect>
 8012044:	2800      	cmp	r0, #0
 8012046:	d050      	beq.n	80120ea <WIDGET__FillStringInRect+0xfe>
 8012048:	e7da      	b.n	8012000 <WIDGET__FillStringInRect+0x14>
 801204a:	783a      	ldrb	r2, [r7, #0]
 801204c:	2a00      	cmp	r2, #0
 801204e:	d049      	beq.n	80120e4 <WIDGET__FillStringInRect+0xf8>
 8012050:	f7ff fe70 	bl	8011d34 <GUI_GetBkColor>
 8012054:	0e00      	lsrs	r0, r0, #24
 8012056:	d003      	beq.n	8012060 <WIDGET__FillStringInRect+0x74>
 8012058:	2002      	movs	r0, #2
 801205a:	f7fa f971 	bl	800c340 <GUI_SetTextMode>
 801205e:	e032      	b.n	80120c6 <WIDGET__FillStringInRect+0xda>
 8012060:	f7fa f96e 	bl	800c340 <GUI_SetTextMode>
 8012064:	4641      	mov	r1, r8
 8012066:	4632      	mov	r2, r6
 8012068:	a802      	add	r0, sp, #8
 801206a:	f7f9 fcfb 	bl	800ba64 <GUI__IntersectRects>
 801206e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8012072:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012076:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801207a:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801207e:	3b01      	subs	r3, #1
 8012080:	f7fb f918 	bl	800d2b4 <GUI_ClearRect>
 8012084:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8012088:	f9b4 0000 	ldrsh.w	r0, [r4]
 801208c:	f9bd 100a 	ldrsh.w	r1, [sp, #10]
 8012090:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8012094:	3a01      	subs	r2, #1
 8012096:	f7fb f90d 	bl	800d2b4 <GUI_ClearRect>
 801209a:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 801209e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80120a2:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80120a6:	1c48      	adds	r0, r1, #1
 80120a8:	f9bd 100a 	ldrsh.w	r1, [sp, #10]
 80120ac:	f7fb f902 	bl	800d2b4 <GUI_ClearRect>
 80120b0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80120b4:	f9b4 0000 	ldrsh.w	r0, [r4]
 80120b8:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80120bc:	1c59      	adds	r1, r3, #1
 80120be:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80120c2:	f7fb f8f7 	bl	800d2b4 <GUI_ClearRect>
 80120c6:	4640      	mov	r0, r8
 80120c8:	f7f5 f898 	bl	80071fc <WM_SetUserClipRect>
 80120cc:	f9b6 1000 	ldrsh.w	r1, [r6]
 80120d0:	f9b6 2002 	ldrsh.w	r2, [r6, #2]
 80120d4:	4604      	mov	r4, r0
 80120d6:	4638      	mov	r0, r7
 80120d8:	f7fa ff4e 	bl	800cf78 <GUI_DispStringAt>
 80120dc:	4620      	mov	r0, r4
 80120de:	f7f5 f88d 	bl	80071fc <WM_SetUserClipRect>
 80120e2:	e002      	b.n	80120ea <WIDGET__FillStringInRect+0xfe>
 80120e4:	4620      	mov	r0, r4
 80120e6:	f000 fd0d 	bl	8012b04 <GUI_ClearRectEx>
 80120ea:	e8bd 81ff 	ldmia.w	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
 80120ee:	bf00      	nop
 80120f0:	20000278 	.word	0x20000278

080120f4 <_DrawDownRect>:
 80120f4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80120f8:	4c27      	ldr	r4, [pc, #156]	; (8012198 <_DrawDownRect+0xa4>)
 80120fa:	8805      	ldrh	r5, [r0, #0]
 80120fc:	f8b0 8002 	ldrh.w	r8, [r0, #2]
 8012100:	8887      	ldrh	r7, [r0, #4]
 8012102:	88c6      	ldrh	r6, [r0, #6]
 8012104:	6820      	ldr	r0, [r4, #0]
 8012106:	f7f9 fb89 	bl	800b81c <LCD_SetColor>
 801210a:	b22d      	sxth	r5, r5
 801210c:	b23f      	sxth	r7, r7
 801210e:	fa0f f888 	sxth.w	r8, r8
 8012112:	68a0      	ldr	r0, [r4, #8]
 8012114:	f7f9 fb82 	bl	800b81c <LCD_SetColor>
 8012118:	f108 0a01 	add.w	sl, r8, #1
 801211c:	b236      	sxth	r6, r6
 801211e:	4640      	mov	r0, r8
 8012120:	4629      	mov	r1, r5
 8012122:	463a      	mov	r2, r7
 8012124:	f7fa fb8e 	bl	800c844 <GUI_DrawHLine>
 8012128:	4651      	mov	r1, sl
 801212a:	4632      	mov	r2, r6
 801212c:	4628      	mov	r0, r5
 801212e:	f7fa fb47 	bl	800c7c0 <GUI_DrawVLine>
 8012132:	f105 0b01 	add.w	fp, r5, #1
 8012136:	f107 39ff 	add.w	r9, r7, #4294967295
 801213a:	6820      	ldr	r0, [r4, #0]
 801213c:	f7f9 fb6e 	bl	800b81c <LCD_SetColor>
 8012140:	4650      	mov	r0, sl
 8012142:	4659      	mov	r1, fp
 8012144:	464a      	mov	r2, r9
 8012146:	f7fa fb7d 	bl	800c844 <GUI_DrawHLine>
 801214a:	f108 0302 	add.w	r3, r8, #2
 801214e:	f106 38ff 	add.w	r8, r6, #4294967295
 8012152:	4619      	mov	r1, r3
 8012154:	4642      	mov	r2, r8
 8012156:	4658      	mov	r0, fp
 8012158:	9301      	str	r3, [sp, #4]
 801215a:	f7fa fb31 	bl	800c7c0 <GUI_DrawVLine>
 801215e:	6920      	ldr	r0, [r4, #16]
 8012160:	f7f9 fb5c 	bl	800b81c <LCD_SetColor>
 8012164:	4630      	mov	r0, r6
 8012166:	4659      	mov	r1, fp
 8012168:	463a      	mov	r2, r7
 801216a:	f7fa fb6b 	bl	800c844 <GUI_DrawHLine>
 801216e:	4651      	mov	r1, sl
 8012170:	4632      	mov	r2, r6
 8012172:	4638      	mov	r0, r7
 8012174:	f7fa fb24 	bl	800c7c0 <GUI_DrawVLine>
 8012178:	68e0      	ldr	r0, [r4, #12]
 801217a:	f7f9 fb4f 	bl	800b81c <LCD_SetColor>
 801217e:	4640      	mov	r0, r8
 8012180:	1ca9      	adds	r1, r5, #2
 8012182:	464a      	mov	r2, r9
 8012184:	f7fa fb5e 	bl	800c844 <GUI_DrawHLine>
 8012188:	9901      	ldr	r1, [sp, #4]
 801218a:	4648      	mov	r0, r9
 801218c:	4642      	mov	r2, r8
 801218e:	b003      	add	sp, #12
 8012190:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012194:	f7fa bb14 	b.w	800c7c0 <GUI_DrawVLine>
 8012198:	200002b8 	.word	0x200002b8

0801219c <_DrawDown>:
 801219c:	b507      	push	{r0, r1, r2, lr}
 801219e:	4668      	mov	r0, sp
 80121a0:	f7f5 fc42 	bl	8007a28 <WM_GetClientRect>
 80121a4:	4668      	mov	r0, sp
 80121a6:	f7ff ffa5 	bl	80120f4 <_DrawDownRect>
 80121aa:	bd0e      	pop	{r1, r2, r3, pc}

080121ac <_DrawUpRect>:
 80121ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80121b0:	f8b0 8000 	ldrh.w	r8, [r0]
 80121b4:	4c19      	ldr	r4, [pc, #100]	; (801221c <_DrawUpRect+0x70>)
 80121b6:	8847      	ldrh	r7, [r0, #2]
 80121b8:	8886      	ldrh	r6, [r0, #4]
 80121ba:	88c5      	ldrh	r5, [r0, #6]
 80121bc:	6820      	ldr	r0, [r4, #0]
 80121be:	b22d      	sxth	r5, r5
 80121c0:	fa0f f988 	sxth.w	r9, r8
 80121c4:	b236      	sxth	r6, r6
 80121c6:	b23f      	sxth	r7, r7
 80121c8:	f7f9 fb28 	bl	800b81c <LCD_SetColor>
 80121cc:	462b      	mov	r3, r5
 80121ce:	4639      	mov	r1, r7
 80121d0:	4632      	mov	r2, r6
 80121d2:	4648      	mov	r0, r9
 80121d4:	f7fb ff56 	bl	800e084 <GUI_DrawRect>
 80121d8:	f109 0801 	add.w	r8, r9, #1
 80121dc:	3701      	adds	r7, #1
 80121de:	6920      	ldr	r0, [r4, #16]
 80121e0:	f7f9 fb1c 	bl	800b81c <LCD_SetColor>
 80121e4:	f1a5 0902 	sub.w	r9, r5, #2
 80121e8:	1eb2      	subs	r2, r6, #2
 80121ea:	4638      	mov	r0, r7
 80121ec:	4641      	mov	r1, r8
 80121ee:	f7fa fb29 	bl	800c844 <GUI_DrawHLine>
 80121f2:	4639      	mov	r1, r7
 80121f4:	464a      	mov	r2, r9
 80121f6:	4640      	mov	r0, r8
 80121f8:	f7fa fae2 	bl	800c7c0 <GUI_DrawVLine>
 80121fc:	3e01      	subs	r6, #1
 80121fe:	6860      	ldr	r0, [r4, #4]
 8012200:	f7f9 fb0c 	bl	800b81c <LCD_SetColor>
 8012204:	1e68      	subs	r0, r5, #1
 8012206:	4641      	mov	r1, r8
 8012208:	4632      	mov	r2, r6
 801220a:	f7fa fb1b 	bl	800c844 <GUI_DrawHLine>
 801220e:	4630      	mov	r0, r6
 8012210:	4639      	mov	r1, r7
 8012212:	464a      	mov	r2, r9
 8012214:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012218:	f7fa bad2 	b.w	800c7c0 <GUI_DrawVLine>
 801221c:	200002b8 	.word	0x200002b8

08012220 <WIDGET_EFFECT_3D_DrawUp>:
 8012220:	b507      	push	{r0, r1, r2, lr}
 8012222:	4668      	mov	r0, sp
 8012224:	f7f5 fc00 	bl	8007a28 <WM_GetClientRect>
 8012228:	4668      	mov	r0, sp
 801222a:	f7ff ffbf 	bl	80121ac <_DrawUpRect>
 801222e:	bd0e      	pop	{r1, r2, r3, pc}

08012230 <WM__SendMessageIfEnabled>:
 8012230:	b538      	push	{r3, r4, r5, lr}
 8012232:	4604      	mov	r4, r0
 8012234:	460d      	mov	r5, r1
 8012236:	f7f4 ff7b 	bl	8007130 <WM__IsEnabled>
 801223a:	b128      	cbz	r0, 8012248 <WM__SendMessageIfEnabled+0x18>
 801223c:	4620      	mov	r0, r4
 801223e:	4629      	mov	r1, r5
 8012240:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8012244:	f7f4 bf56 	b.w	80070f4 <WM__SendMessage>
 8012248:	bd38      	pop	{r3, r4, r5, pc}

0801224a <WM__IsChild>:
 801224a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801224c:	460d      	mov	r5, r1
 801224e:	4604      	mov	r4, r0
 8012250:	b168      	cbz	r0, 801226e <WM__IsChild+0x24>
 8012252:	f7fb fc73 	bl	800db3c <GUI_ALLOC_LockH>
 8012256:	9001      	str	r0, [sp, #4]
 8012258:	b128      	cbz	r0, 8012266 <WM__IsChild+0x1c>
 801225a:	6984      	ldr	r4, [r0, #24]
 801225c:	1b63      	subs	r3, r4, r5
 801225e:	4258      	negs	r0, r3
 8012260:	eb50 0403 	adcs.w	r4, r0, r3
 8012264:	e000      	b.n	8012268 <WM__IsChild+0x1e>
 8012266:	4604      	mov	r4, r0
 8012268:	a801      	add	r0, sp, #4
 801226a:	f7fb fc75 	bl	800db58 <GUI_ALLOC_UnlockH>
 801226e:	4620      	mov	r0, r4
 8012270:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}

08012272 <WM__ForEachDesc>:
 8012272:	b570      	push	{r4, r5, r6, lr}
 8012274:	460d      	mov	r5, r1
 8012276:	4616      	mov	r6, r2
 8012278:	f7fb fc56 	bl	800db28 <GUI_ALLOC_h2p>
 801227c:	69c4      	ldr	r4, [r0, #28]
 801227e:	b164      	cbz	r4, 801229a <WM__ForEachDesc+0x28>
 8012280:	4620      	mov	r0, r4
 8012282:	4631      	mov	r1, r6
 8012284:	47a8      	blx	r5
 8012286:	4620      	mov	r0, r4
 8012288:	4629      	mov	r1, r5
 801228a:	4632      	mov	r2, r6
 801228c:	f7ff fff1 	bl	8012272 <WM__ForEachDesc>
 8012290:	4620      	mov	r0, r4
 8012292:	f7fb fc49 	bl	800db28 <GUI_ALLOC_h2p>
 8012296:	6a04      	ldr	r4, [r0, #32]
 8012298:	e7f1      	b.n	801227e <WM__ForEachDesc+0xc>
 801229a:	bd70      	pop	{r4, r5, r6, pc}

0801229c <_NextPixel_FlushBuffer>:
 801229c:	b570      	push	{r4, r5, r6, lr}
 801229e:	4b10      	ldr	r3, [pc, #64]	; (80122e0 <_NextPixel_FlushBuffer+0x44>)
 80122a0:	4910      	ldr	r1, [pc, #64]	; (80122e4 <_NextPixel_FlushBuffer+0x48>)
 80122a2:	6818      	ldr	r0, [r3, #0]
 80122a4:	4c10      	ldr	r4, [pc, #64]	; (80122e8 <_NextPixel_FlushBuffer+0x4c>)
 80122a6:	7c42      	ldrb	r2, [r0, #17]
 80122a8:	69e3      	ldr	r3, [r4, #28]
 80122aa:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80122ae:	6922      	ldr	r2, [r4, #16]
 80122b0:	68c6      	ldr	r6, [r0, #12]
 80122b2:	6861      	ldr	r1, [r4, #4]
 80122b4:	b086      	sub	sp, #24
 80122b6:	2501      	movs	r5, #1
 80122b8:	9500      	str	r5, [sp, #0]
 80122ba:	2500      	movs	r5, #0
 80122bc:	9301      	str	r3, [sp, #4]
 80122be:	9203      	str	r2, [sp, #12]
 80122c0:	9502      	str	r5, [sp, #8]
 80122c2:	9504      	str	r5, [sp, #16]
 80122c4:	9505      	str	r5, [sp, #20]
 80122c6:	68a2      	ldr	r2, [r4, #8]
 80122c8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80122ca:	6876      	ldr	r6, [r6, #4]
 80122cc:	47b0      	blx	r6
 80122ce:	6860      	ldr	r0, [r4, #4]
 80122d0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80122d2:	6922      	ldr	r2, [r4, #16]
 80122d4:	6265      	str	r5, [r4, #36]	; 0x24
 80122d6:	1843      	adds	r3, r0, r1
 80122d8:	6063      	str	r3, [r4, #4]
 80122da:	6162      	str	r2, [r4, #20]
 80122dc:	b006      	add	sp, #24
 80122de:	bd70      	pop	{r4, r5, r6, pc}
 80122e0:	20000278 	.word	0x20000278
 80122e4:	2000e67c 	.word	0x2000e67c
 80122e8:	2000e258 	.word	0x2000e258

080122ec <_NextPixel_SetPixel>:
 80122ec:	4b3f      	ldr	r3, [pc, #252]	; (80123ec <_NextPixel_SetPixel+0x100>)
 80122ee:	699a      	ldr	r2, [r3, #24]
 80122f0:	2a02      	cmp	r2, #2
 80122f2:	b530      	push	{r4, r5, lr}
 80122f4:	d066      	beq.n	80123c4 <_NextPixel_SetPixel+0xd8>
 80122f6:	2a04      	cmp	r2, #4
 80122f8:	d068      	beq.n	80123cc <_NextPixel_SetPixel+0xe0>
 80122fa:	2a01      	cmp	r2, #1
 80122fc:	d16a      	bne.n	80123d4 <_NextPixel_SetPixel+0xe8>
 80122fe:	69d9      	ldr	r1, [r3, #28]
 8012300:	695a      	ldr	r2, [r3, #20]
 8012302:	3901      	subs	r1, #1
 8012304:	2907      	cmp	r1, #7
 8012306:	d865      	bhi.n	80123d4 <_NextPixel_SetPixel+0xe8>
 8012308:	e8df f001 	tbb	[pc, r1]
 801230c:	38641e04 	.word	0x38641e04
 8012310:	58646464 	.word	0x58646464
 8012314:	7814      	ldrb	r4, [r2, #0]
 8012316:	f893 5028 	ldrb.w	r5, [r3, #40]	; 0x28
 801231a:	4934      	ldr	r1, [pc, #208]	; (80123ec <_NextPixel_SetPixel+0x100>)
 801231c:	ea24 0405 	bic.w	r4, r4, r5
 8012320:	7014      	strb	r4, [r2, #0]
 8012322:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8012324:	f1c5 0507 	rsb	r5, r5, #7
 8012328:	fa00 f005 	lsl.w	r0, r0, r5
 801232c:	4304      	orrs	r4, r0
 801232e:	7014      	strb	r4, [r2, #0]
 8012330:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8012332:	1c42      	adds	r2, r0, #1
 8012334:	f893 0028 	ldrb.w	r0, [r3, #40]	; 0x28
 8012338:	62da      	str	r2, [r3, #44]	; 0x2c
 801233a:	0840      	lsrs	r0, r0, #1
 801233c:	f883 0028 	strb.w	r0, [r3, #40]	; 0x28
 8012340:	2800      	cmp	r0, #0
 8012342:	d147      	bne.n	80123d4 <_NextPixel_SetPixel+0xe8>
 8012344:	2380      	movs	r3, #128	; 0x80
 8012346:	e032      	b.n	80123ae <_NextPixel_SetPixel+0xc2>
 8012348:	7814      	ldrb	r4, [r2, #0]
 801234a:	f893 5028 	ldrb.w	r5, [r3, #40]	; 0x28
 801234e:	4927      	ldr	r1, [pc, #156]	; (80123ec <_NextPixel_SetPixel+0x100>)
 8012350:	ea24 0405 	bic.w	r4, r4, r5
 8012354:	7014      	strb	r4, [r2, #0]
 8012356:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8012358:	006d      	lsls	r5, r5, #1
 801235a:	f1c5 0506 	rsb	r5, r5, #6
 801235e:	fa00 f005 	lsl.w	r0, r0, r5
 8012362:	4304      	orrs	r4, r0
 8012364:	7014      	strb	r4, [r2, #0]
 8012366:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8012368:	1c50      	adds	r0, r2, #1
 801236a:	f893 2028 	ldrb.w	r2, [r3, #40]	; 0x28
 801236e:	62d8      	str	r0, [r3, #44]	; 0x2c
 8012370:	0890      	lsrs	r0, r2, #2
 8012372:	f883 0028 	strb.w	r0, [r3, #40]	; 0x28
 8012376:	bb68      	cbnz	r0, 80123d4 <_NextPixel_SetPixel+0xe8>
 8012378:	23c0      	movs	r3, #192	; 0xc0
 801237a:	e018      	b.n	80123ae <_NextPixel_SetPixel+0xc2>
 801237c:	7814      	ldrb	r4, [r2, #0]
 801237e:	f893 5028 	ldrb.w	r5, [r3, #40]	; 0x28
 8012382:	491a      	ldr	r1, [pc, #104]	; (80123ec <_NextPixel_SetPixel+0x100>)
 8012384:	ea24 0405 	bic.w	r4, r4, r5
 8012388:	7014      	strb	r4, [r2, #0]
 801238a:	6add      	ldr	r5, [r3, #44]	; 0x2c
 801238c:	00ad      	lsls	r5, r5, #2
 801238e:	f1c5 0504 	rsb	r5, r5, #4
 8012392:	fa00 f005 	lsl.w	r0, r0, r5
 8012396:	4304      	orrs	r4, r0
 8012398:	7014      	strb	r4, [r2, #0]
 801239a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801239c:	1c50      	adds	r0, r2, #1
 801239e:	f893 2028 	ldrb.w	r2, [r3, #40]	; 0x28
 80123a2:	62d8      	str	r0, [r3, #44]	; 0x2c
 80123a4:	0910      	lsrs	r0, r2, #4
 80123a6:	f883 0028 	strb.w	r0, [r3, #40]	; 0x28
 80123aa:	b998      	cbnz	r0, 80123d4 <_NextPixel_SetPixel+0xe8>
 80123ac:	23f0      	movs	r3, #240	; 0xf0
 80123ae:	f881 3028 	strb.w	r3, [r1, #40]	; 0x28
 80123b2:	694b      	ldr	r3, [r1, #20]
 80123b4:	62c8      	str	r0, [r1, #44]	; 0x2c
 80123b6:	1c5a      	adds	r2, r3, #1
 80123b8:	614a      	str	r2, [r1, #20]
 80123ba:	e00b      	b.n	80123d4 <_NextPixel_SetPixel+0xe8>
 80123bc:	7010      	strb	r0, [r2, #0]
 80123be:	6958      	ldr	r0, [r3, #20]
 80123c0:	1c41      	adds	r1, r0, #1
 80123c2:	e006      	b.n	80123d2 <_NextPixel_SetPixel+0xe6>
 80123c4:	6959      	ldr	r1, [r3, #20]
 80123c6:	f821 0b02 	strh.w	r0, [r1], #2
 80123ca:	e002      	b.n	80123d2 <_NextPixel_SetPixel+0xe6>
 80123cc:	6959      	ldr	r1, [r3, #20]
 80123ce:	f841 0b04 	str.w	r0, [r1], #4
 80123d2:	6159      	str	r1, [r3, #20]
 80123d4:	4805      	ldr	r0, [pc, #20]	; (80123ec <_NextPixel_SetPixel+0x100>)
 80123d6:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80123d8:	6a01      	ldr	r1, [r0, #32]
 80123da:	1c5a      	adds	r2, r3, #1
 80123dc:	428a      	cmp	r2, r1
 80123de:	6242      	str	r2, [r0, #36]	; 0x24
 80123e0:	d103      	bne.n	80123ea <_NextPixel_SetPixel+0xfe>
 80123e2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80123e6:	f7ff bf59 	b.w	801229c <_NextPixel_FlushBuffer>
 80123ea:	bd30      	pop	{r4, r5, pc}
 80123ec:	2000e258 	.word	0x2000e258

080123f0 <_NextPixel_NextLine>:
 80123f0:	b510      	push	{r4, lr}
 80123f2:	4c05      	ldr	r4, [pc, #20]	; (8012408 <_NextPixel_NextLine+0x18>)
 80123f4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80123f6:	b10b      	cbz	r3, 80123fc <_NextPixel_NextLine+0xc>
 80123f8:	f7ff ff50 	bl	801229c <_NextPixel_FlushBuffer>
 80123fc:	68a1      	ldr	r1, [r4, #8]
 80123fe:	6820      	ldr	r0, [r4, #0]
 8012400:	1c4a      	adds	r2, r1, #1
 8012402:	6060      	str	r0, [r4, #4]
 8012404:	60a2      	str	r2, [r4, #8]
 8012406:	bd10      	pop	{r4, pc}
 8012408:	2000e258 	.word	0x2000e258

0801240c <_NextPixel_End>:
 801240c:	4b07      	ldr	r3, [pc, #28]	; (801242c <_NextPixel_End+0x20>)
 801240e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8012410:	b510      	push	{r4, lr}
 8012412:	461c      	mov	r4, r3
 8012414:	b10a      	cbz	r2, 801241a <_NextPixel_End+0xe>
 8012416:	f7ff ff41 	bl	801229c <_NextPixel_FlushBuffer>
 801241a:	4805      	ldr	r0, [pc, #20]	; (8012430 <_NextPixel_End+0x24>)
 801241c:	f7fb fb9c 	bl	800db58 <GUI_ALLOC_UnlockH>
 8012420:	68e0      	ldr	r0, [r4, #12]
 8012422:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012426:	f7fb bbc3 	b.w	800dbb0 <GUI_ALLOC_Free>
 801242a:	bf00      	nop
 801242c:	2000e258 	.word	0x2000e258
 8012430:	2000e268 	.word	0x2000e268

08012434 <_NextPixel_Start>:
 8012434:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012438:	4b24      	ldr	r3, [pc, #144]	; (80124cc <_NextPixel_Start+0x98>)
 801243a:	1a12      	subs	r2, r2, r0
 801243c:	4607      	mov	r7, r0
 801243e:	6818      	ldr	r0, [r3, #0]
 8012440:	7c40      	ldrb	r0, [r0, #17]
 8012442:	4689      	mov	r9, r1
 8012444:	f102 0801 	add.w	r8, r2, #1
 8012448:	f7f8 fdfa 	bl	800b040 <GUI_GetBitsPerPixelEx>
 801244c:	4920      	ldr	r1, [pc, #128]	; (80124d0 <_NextPixel_Start+0x9c>)
 801244e:	2818      	cmp	r0, #24
 8012450:	bf08      	it	eq
 8012452:	2020      	moveq	r0, #32
 8012454:	2808      	cmp	r0, #8
 8012456:	61c8      	str	r0, [r1, #28]
 8012458:	dd04      	ble.n	8012464 <_NextPixel_Start+0x30>
 801245a:	2810      	cmp	r0, #16
 801245c:	bfcc      	ite	gt
 801245e:	2504      	movgt	r5, #4
 8012460:	2502      	movle	r5, #2
 8012462:	e000      	b.n	8012466 <_NextPixel_Start+0x32>
 8012464:	2501      	movs	r5, #1
 8012466:	f7fb fcbb 	bl	800dde0 <GUI_ALLOC_GetMaxSize>
 801246a:	fb08 f805 	mul.w	r8, r8, r5
 801246e:	4540      	cmp	r0, r8
 8012470:	d203      	bcs.n	801247a <_NextPixel_Start+0x46>
 8012472:	fbb0 f6f5 	udiv	r6, r0, r5
 8012476:	436e      	muls	r6, r5
 8012478:	e000      	b.n	801247c <_NextPixel_Start+0x48>
 801247a:	4646      	mov	r6, r8
 801247c:	4c14      	ldr	r4, [pc, #80]	; (80124d0 <_NextPixel_Start+0x9c>)
 801247e:	fb96 f2f5 	sdiv	r2, r6, r5
 8012482:	4640      	mov	r0, r8
 8012484:	2600      	movs	r6, #0
 8012486:	6222      	str	r2, [r4, #32]
 8012488:	6266      	str	r6, [r4, #36]	; 0x24
 801248a:	6027      	str	r7, [r4, #0]
 801248c:	6067      	str	r7, [r4, #4]
 801248e:	f8c4 9008 	str.w	r9, [r4, #8]
 8012492:	61a5      	str	r5, [r4, #24]
 8012494:	f7fb fda0 	bl	800dfd8 <GUI_ALLOC_AllocNoInit>
 8012498:	60e0      	str	r0, [r4, #12]
 801249a:	b188      	cbz	r0, 80124c0 <_NextPixel_Start+0x8c>
 801249c:	f7fb fb4e 	bl	800db3c <GUI_ALLOC_LockH>
 80124a0:	6120      	str	r0, [r4, #16]
 80124a2:	6160      	str	r0, [r4, #20]
 80124a4:	69e0      	ldr	r0, [r4, #28]
 80124a6:	2807      	cmp	r0, #7
 80124a8:	dc0d      	bgt.n	80124c6 <_NextPixel_Start+0x92>
 80124aa:	2101      	movs	r1, #1
 80124ac:	4a09      	ldr	r2, [pc, #36]	; (80124d4 <_NextPixel_Start+0xa0>)
 80124ae:	62e6      	str	r6, [r4, #44]	; 0x2c
 80124b0:	fa01 f300 	lsl.w	r3, r1, r0
 80124b4:	18d0      	adds	r0, r2, r3
 80124b6:	f810 1c01 	ldrb.w	r1, [r0, #-1]
 80124ba:	f884 1028 	strb.w	r1, [r4, #40]	; 0x28
 80124be:	e002      	b.n	80124c6 <_NextPixel_Start+0x92>
 80124c0:	2001      	movs	r0, #1
 80124c2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80124c6:	4630      	mov	r0, r6
 80124c8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80124cc:	20000278 	.word	0x20000278
 80124d0:	2000e258 	.word	0x2000e258
 80124d4:	0802c294 	.word	0x0802c294

080124d8 <LCD_GetNextPixelAPI>:
 80124d8:	b507      	push	{r0, r1, r2, lr}
 80124da:	4b09      	ldr	r3, [pc, #36]	; (8012500 <LCD_GetNextPixelAPI+0x28>)
 80124dc:	4909      	ldr	r1, [pc, #36]	; (8012504 <LCD_GetNextPixelAPI+0x2c>)
 80124de:	6818      	ldr	r0, [r3, #0]
 80124e0:	7c42      	ldrb	r2, [r0, #17]
 80124e2:	f851 3022 	ldr.w	r3, [r1, r2, lsl #2]
 80124e6:	68d8      	ldr	r0, [r3, #12]
 80124e8:	9301      	str	r3, [sp, #4]
 80124ea:	6a42      	ldr	r2, [r0, #36]	; 0x24
 80124ec:	b90a      	cbnz	r2, 80124f2 <LCD_GetNextPixelAPI+0x1a>
 80124ee:	4806      	ldr	r0, [pc, #24]	; (8012508 <LCD_GetNextPixelAPI+0x30>)
 80124f0:	e004      	b.n	80124fc <LCD_GetNextPixelAPI+0x24>
 80124f2:	a801      	add	r0, sp, #4
 80124f4:	2108      	movs	r1, #8
 80124f6:	4790      	blx	r2
 80124f8:	2800      	cmp	r0, #0
 80124fa:	d0f8      	beq.n	80124ee <LCD_GetNextPixelAPI+0x16>
 80124fc:	bd0e      	pop	{r1, r2, r3, pc}
 80124fe:	bf00      	nop
 8012500:	20000278 	.word	0x20000278
 8012504:	2000e67c 	.word	0x2000e67c
 8012508:	200002cc 	.word	0x200002cc

0801250c <LCD_GetNumLayers>:
 801250c:	b510      	push	{r4, lr}
 801250e:	2000      	movs	r0, #0
 8012510:	f7fa fdf0 	bl	800d0f4 <GUI_DEVICE__GetpDriver>
 8012514:	1c04      	adds	r4, r0, #0
 8012516:	bf18      	it	ne
 8012518:	2401      	movne	r4, #1
 801251a:	2001      	movs	r0, #1
 801251c:	f7fa fdea 	bl	800d0f4 <GUI_DEVICE__GetpDriver>
 8012520:	b100      	cbz	r0, 8012524 <LCD_GetNumLayers+0x18>
 8012522:	3401      	adds	r4, #1
 8012524:	4620      	mov	r0, r4
 8012526:	bd10      	pop	{r4, pc}

08012528 <LCD_GetBkColorIndex>:
 8012528:	4b02      	ldr	r3, [pc, #8]	; (8012534 <LCD_GetBkColorIndex+0xc>)
 801252a:	6818      	ldr	r0, [r3, #0]
 801252c:	6b81      	ldr	r1, [r0, #56]	; 0x38
 801252e:	6808      	ldr	r0, [r1, #0]
 8012530:	4770      	bx	lr
 8012532:	bf00      	nop
 8012534:	20000278 	.word	0x20000278

08012538 <LCD_GetColorIndex>:
 8012538:	4b02      	ldr	r3, [pc, #8]	; (8012544 <LCD_GetColorIndex+0xc>)
 801253a:	6818      	ldr	r0, [r3, #0]
 801253c:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
 801253e:	6808      	ldr	r0, [r1, #0]
 8012540:	4770      	bx	lr
 8012542:	bf00      	nop
 8012544:	20000278 	.word	0x20000278

08012548 <_CreateBuffer>:
 8012548:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801254a:	6943      	ldr	r3, [r0, #20]
 801254c:	4605      	mov	r5, r0
 801254e:	8818      	ldrh	r0, [r3, #0]
 8012550:	300d      	adds	r0, #13
 8012552:	0080      	lsls	r0, r0, #2
 8012554:	460f      	mov	r7, r1
 8012556:	f7fb fd3f 	bl	800dfd8 <GUI_ALLOC_AllocNoInit>
 801255a:	4606      	mov	r6, r0
 801255c:	2800      	cmp	r0, #0
 801255e:	d03d      	beq.n	80125dc <_CreateBuffer+0x94>
 8012560:	f7fb faec 	bl	800db3c <GUI_ALLOC_LockH>
 8012564:	6829      	ldr	r1, [r5, #0]
 8012566:	4604      	mov	r4, r0
 8012568:	6988      	ldr	r0, [r1, #24]
 801256a:	f7fa fdc3 	bl	800d0f4 <GUI_DEVICE__GetpDriver>
 801256e:	68c2      	ldr	r2, [r0, #12]
 8012570:	2108      	movs	r1, #8
 8012572:	6a93      	ldr	r3, [r2, #40]	; 0x28
 8012574:	4798      	blx	r3
 8012576:	2802      	cmp	r0, #2
 8012578:	dd0b      	ble.n	8012592 <_CreateBuffer+0x4a>
 801257a:	2804      	cmp	r0, #4
 801257c:	dd06      	ble.n	801258c <_CreateBuffer+0x44>
 801257e:	2808      	cmp	r0, #8
 8012580:	dd06      	ble.n	8012590 <_CreateBuffer+0x48>
 8012582:	2810      	cmp	r0, #16
 8012584:	bfd4      	ite	le
 8012586:	2010      	movle	r0, #16
 8012588:	2020      	movgt	r0, #32
 801258a:	e002      	b.n	8012592 <_CreateBuffer+0x4a>
 801258c:	2004      	movs	r0, #4
 801258e:	e000      	b.n	8012592 <_CreateBuffer+0x4a>
 8012590:	2008      	movs	r0, #8
 8012592:	2808      	cmp	r0, #8
 8012594:	61a0      	str	r0, [r4, #24]
 8012596:	dd04      	ble.n	80125a2 <_CreateBuffer+0x5a>
 8012598:	2810      	cmp	r0, #16
 801259a:	bfcc      	ite	gt
 801259c:	2004      	movgt	r0, #4
 801259e:	2002      	movle	r0, #2
 80125a0:	e000      	b.n	80125a4 <_CreateBuffer+0x5c>
 80125a2:	2001      	movs	r0, #1
 80125a4:	6969      	ldr	r1, [r5, #20]
 80125a6:	6120      	str	r0, [r4, #16]
 80125a8:	880a      	ldrh	r2, [r1, #0]
 80125aa:	4350      	muls	r0, r2
 80125ac:	61e2      	str	r2, [r4, #28]
 80125ae:	6160      	str	r0, [r4, #20]
 80125b0:	f7fb fc16 	bl	800dde0 <GUI_ALLOC_GetMaxSize>
 80125b4:	6963      	ldr	r3, [r4, #20]
 80125b6:	60a6      	str	r6, [r4, #8]
 80125b8:	4283      	cmp	r3, r0
 80125ba:	bfc8      	it	gt
 80125bc:	6160      	strgt	r0, [r4, #20]
 80125be:	f104 0334 	add.w	r3, r4, #52	; 0x34
 80125c2:	2000      	movs	r0, #0
 80125c4:	2f01      	cmp	r7, #1
 80125c6:	6023      	str	r3, [r4, #0]
 80125c8:	60e0      	str	r0, [r4, #12]
 80125ca:	f884 7030 	strb.w	r7, [r4, #48]	; 0x30
 80125ce:	d003      	beq.n	80125d8 <_CreateBuffer+0x90>
 80125d0:	69e1      	ldr	r1, [r4, #28]
 80125d2:	1e4a      	subs	r2, r1, #1
 80125d4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80125d8:	6063      	str	r3, [r4, #4]
 80125da:	e000      	b.n	80125de <_CreateBuffer+0x96>
 80125dc:	4604      	mov	r4, r0
 80125de:	4620      	mov	r0, r4
 80125e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080125e2 <_FlushBuffer>:
 80125e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80125e6:	460c      	mov	r4, r1
 80125e8:	68c9      	ldr	r1, [r1, #12]
 80125ea:	b086      	sub	sp, #24
 80125ec:	2900      	cmp	r1, #0
 80125ee:	d02d      	beq.n	801264c <_FlushBuffer+0x6a>
 80125f0:	6807      	ldr	r7, [r0, #0]
 80125f2:	2f00      	cmp	r7, #0
 80125f4:	d02c      	beq.n	8012650 <_FlushBuffer+0x6e>
 80125f6:	f994 3030 	ldrsb.w	r3, [r4, #48]	; 0x30
 80125fa:	2b01      	cmp	r3, #1
 80125fc:	d104      	bne.n	8012608 <_FlushBuffer+0x26>
 80125fe:	6825      	ldr	r5, [r4, #0]
 8012600:	f8d4 8028 	ldr.w	r8, [r4, #40]	; 0x28
 8012604:	6065      	str	r5, [r4, #4]
 8012606:	e009      	b.n	801261c <_FlushBuffer+0x3a>
 8012608:	69e0      	ldr	r0, [r4, #28]
 801260a:	6866      	ldr	r6, [r4, #4]
 801260c:	6823      	ldr	r3, [r4, #0]
 801260e:	f8d4 8020 	ldr.w	r8, [r4, #32]
 8012612:	1e42      	subs	r2, r0, #1
 8012614:	1d35      	adds	r5, r6, #4
 8012616:	eb03 0682 	add.w	r6, r3, r2, lsl #2
 801261a:	6066      	str	r6, [r4, #4]
 801261c:	4628      	mov	r0, r5
 801261e:	69a2      	ldr	r2, [r4, #24]
 8012620:	f7ff f964 	bl	80118ec <GUI__CompactPixelIndices>
 8012624:	69a2      	ldr	r2, [r4, #24]
 8012626:	6963      	ldr	r3, [r4, #20]
 8012628:	68f9      	ldr	r1, [r7, #12]
 801262a:	9503      	str	r5, [sp, #12]
 801262c:	2001      	movs	r0, #1
 801262e:	2500      	movs	r5, #0
 8012630:	9000      	str	r0, [sp, #0]
 8012632:	9201      	str	r2, [sp, #4]
 8012634:	9302      	str	r3, [sp, #8]
 8012636:	9504      	str	r5, [sp, #16]
 8012638:	9505      	str	r5, [sp, #20]
 801263a:	684e      	ldr	r6, [r1, #4]
 801263c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801263e:	68e3      	ldr	r3, [r4, #12]
 8012640:	4638      	mov	r0, r7
 8012642:	4641      	mov	r1, r8
 8012644:	47b0      	blx	r6
 8012646:	60e5      	str	r5, [r4, #12]
 8012648:	4628      	mov	r0, r5
 801264a:	e002      	b.n	8012652 <_FlushBuffer+0x70>
 801264c:	4608      	mov	r0, r1
 801264e:	e000      	b.n	8012652 <_FlushBuffer+0x70>
 8012650:	2001      	movs	r0, #1
 8012652:	b006      	add	sp, #24
 8012654:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012658 <_SetSpriteBkPixel>:
 8012658:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801265a:	9c06      	ldr	r4, [sp, #24]
 801265c:	460d      	mov	r5, r1
 801265e:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8012660:	428d      	cmp	r5, r1
 8012662:	4606      	mov	r6, r0
 8012664:	4617      	mov	r7, r2
 8012666:	d105      	bne.n	8012674 <_SetSpriteBkPixel+0x1c>
 8012668:	f994 2030 	ldrsb.w	r2, [r4, #48]	; 0x30
 801266c:	6a20      	ldr	r0, [r4, #32]
 801266e:	1811      	adds	r1, r2, r0
 8012670:	428e      	cmp	r6, r1
 8012672:	d003      	beq.n	801267c <_SetSpriteBkPixel+0x24>
 8012674:	4618      	mov	r0, r3
 8012676:	4621      	mov	r1, r4
 8012678:	f7ff ffb3 	bl	80125e2 <_FlushBuffer>
 801267c:	6863      	ldr	r3, [r4, #4]
 801267e:	68e1      	ldr	r1, [r4, #12]
 8012680:	601f      	str	r7, [r3, #0]
 8012682:	f994 2030 	ldrsb.w	r2, [r4, #48]	; 0x30
 8012686:	eb03 0082 	add.w	r0, r3, r2, lsl #2
 801268a:	6060      	str	r0, [r4, #4]
 801268c:	b909      	cbnz	r1, 8012692 <_SetSpriteBkPixel+0x3a>
 801268e:	62a6      	str	r6, [r4, #40]	; 0x28
 8012690:	62e5      	str	r5, [r4, #44]	; 0x2c
 8012692:	1c4b      	adds	r3, r1, #1
 8012694:	60e3      	str	r3, [r4, #12]
 8012696:	6226      	str	r6, [r4, #32]
 8012698:	6265      	str	r5, [r4, #36]	; 0x24
 801269a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801269c <_ReleaseBuffer>:
 801269c:	b513      	push	{r0, r1, r4, lr}
 801269e:	6800      	ldr	r0, [r0, #0]
 80126a0:	9101      	str	r1, [sp, #4]
 80126a2:	f7ff ff9e 	bl	80125e2 <_FlushBuffer>
 80126a6:	a802      	add	r0, sp, #8
 80126a8:	f850 2d04 	ldr.w	r2, [r0, #-4]!
 80126ac:	6894      	ldr	r4, [r2, #8]
 80126ae:	f7fb fa53 	bl	800db58 <GUI_ALLOC_UnlockH>
 80126b2:	4620      	mov	r0, r4
 80126b4:	f7fb fa7c 	bl	800dbb0 <GUI_ALLOC_Free>
 80126b8:	bd1c      	pop	{r2, r3, r4, pc}

080126ba <_GetBkPixel>:
 80126ba:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80126be:	f9b3 7004 	ldrsh.w	r7, [r3, #4]
 80126c2:	42b8      	cmp	r0, r7
 80126c4:	4606      	mov	r6, r0
 80126c6:	460d      	mov	r5, r1
 80126c8:	4691      	mov	r9, r2
 80126ca:	461c      	mov	r4, r3
 80126cc:	da04      	bge.n	80126d8 <_GetBkPixel+0x1e>
 80126ce:	f8d9 0000 	ldr.w	r0, [r9]
 80126d2:	bb28      	cbnz	r0, 8012720 <_GetBkPixel+0x66>
 80126d4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80126d8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80126dc:	4298      	cmp	r0, r3
 80126de:	dcf6      	bgt.n	80126ce <_GetBkPixel+0x14>
 80126e0:	f9b4 8006 	ldrsh.w	r8, [r4, #6]
 80126e4:	4541      	cmp	r1, r8
 80126e6:	dbf2      	blt.n	80126ce <_GetBkPixel+0x14>
 80126e8:	f9b4 000a 	ldrsh.w	r0, [r4, #10]
 80126ec:	4281      	cmp	r1, r0
 80126ee:	dcee      	bgt.n	80126ce <_GetBkPixel+0x14>
 80126f0:	ebc8 0801 	rsb	r8, r8, r1
 80126f4:	1bf7      	subs	r7, r6, r7
 80126f6:	6960      	ldr	r0, [r4, #20]
 80126f8:	4639      	mov	r1, r7
 80126fa:	4642      	mov	r2, r8
 80126fc:	f000 f9f6 	bl	8012aec <GUI_GetBitmapPixelIndex>
 8012700:	2800      	cmp	r0, #0
 8012702:	d0e4      	beq.n	80126ce <_GetBkPixel+0x14>
 8012704:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8012708:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801270c:	1a88      	subs	r0, r1, r2
 801270e:	1c41      	adds	r1, r0, #1
 8012710:	f104 0320 	add.w	r3, r4, #32
 8012714:	fb08 7701 	mla	r7, r8, r1, r7
 8012718:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 801271c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012720:	68c3      	ldr	r3, [r0, #12]
 8012722:	4631      	mov	r1, r6
 8012724:	695b      	ldr	r3, [r3, #20]
 8012726:	462a      	mov	r2, r5
 8012728:	4798      	blx	r3
 801272a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	...

08012730 <_GetDeviceRect>:
 8012730:	b538      	push	{r3, r4, r5, lr}
 8012732:	4a0c      	ldr	r2, [pc, #48]	; (8012764 <_GetDeviceRect+0x34>)
 8012734:	6983      	ldr	r3, [r0, #24]
 8012736:	56d2      	ldrsb	r2, [r2, r3]
 8012738:	2a01      	cmp	r2, #1
 801273a:	4605      	mov	r5, r0
 801273c:	460c      	mov	r4, r1
 801273e:	dd0d      	ble.n	801275c <_GetDeviceRect+0x2c>
 8012740:	2000      	movs	r0, #0
 8012742:	8048      	strh	r0, [r1, #2]
 8012744:	8008      	strh	r0, [r1, #0]
 8012746:	4618      	mov	r0, r3
 8012748:	f7f8 fc4f 	bl	800afea <LCD_GetXSizeEx>
 801274c:	1e41      	subs	r1, r0, #1
 801274e:	80a1      	strh	r1, [r4, #4]
 8012750:	69a8      	ldr	r0, [r5, #24]
 8012752:	f7f8 fc4d 	bl	800aff0 <LCD_GetYSizeEx>
 8012756:	1e43      	subs	r3, r0, #1
 8012758:	80e3      	strh	r3, [r4, #6]
 801275a:	bd38      	pop	{r3, r4, r5, pc}
 801275c:	68c3      	ldr	r3, [r0, #12]
 801275e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8012760:	4790      	blx	r2
 8012762:	bd38      	pop	{r3, r4, r5, pc}
 8012764:	2000e658 	.word	0x2000e658

08012768 <GUI_SPRITE_SetPosition>:
 8012768:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801276c:	b0a5      	sub	sp, #148	; 0x94
 801276e:	910b      	str	r1, [sp, #44]	; 0x2c
 8012770:	920c      	str	r2, [sp, #48]	; 0x30
 8012772:	2800      	cmp	r0, #0
 8012774:	f000 8172 	beq.w	8012a5c <GUI_SPRITE_SetPosition+0x2f4>
 8012778:	f7fb f9e0 	bl	800db3c <GUI_ALLOC_LockH>
 801277c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801277e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8012782:	6801      	ldr	r1, [r0, #0]
 8012784:	9021      	str	r0, [sp, #132]	; 0x84
 8012786:	429a      	cmp	r2, r3
 8012788:	9104      	str	r1, [sp, #16]
 801278a:	d106      	bne.n	801279a <GUI_SPRITE_SetPosition+0x32>
 801278c:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8012790:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
 8012794:	4586      	cmp	lr, r0
 8012796:	f000 8149 	beq.w	8012a2c <GUI_SPRITE_SetPosition+0x2c4>
 801279a:	2000      	movs	r0, #0
 801279c:	f7f7 fad0 	bl	8009d40 <GUI_MEMDEV_Select>
 80127a0:	49ad      	ldr	r1, [pc, #692]	; (8012a58 <GUI_SPRITE_SetPosition+0x2f0>)
 80127a2:	9d04      	ldr	r5, [sp, #16]
 80127a4:	680b      	ldr	r3, [r1, #0]
 80127a6:	69af      	ldr	r7, [r5, #24]
 80127a8:	7c5a      	ldrb	r2, [r3, #17]
 80127aa:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80127ac:	901b      	str	r0, [sp, #108]	; 0x6c
 80127ae:	4297      	cmp	r7, r2
 80127b0:	bf18      	it	ne
 80127b2:	745f      	strbne	r7, [r3, #17]
 80127b4:	f9b5 0008 	ldrsh.w	r0, [r5, #8]
 80127b8:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 80127bc:	970d      	str	r7, [sp, #52]	; 0x34
 80127be:	920e      	str	r2, [sp, #56]	; 0x38
 80127c0:	f9b5 7006 	ldrsh.w	r7, [r5, #6]
 80127c4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80127c8:	ebc2 0b00 	rsb	fp, r2, r0
 80127cc:	1bd8      	subs	r0, r3, r7
 80127ce:	8a2b      	ldrh	r3, [r5, #16]
 80127d0:	9005      	str	r0, [sp, #20]
 80127d2:	f10b 0101 	add.w	r1, fp, #1
 80127d6:	9107      	str	r1, [sp, #28]
 80127d8:	1c41      	adds	r1, r0, #1
 80127da:	f003 0002 	and.w	r0, r3, #2
 80127de:	9114      	str	r1, [sp, #80]	; 0x50
 80127e0:	b281      	uxth	r1, r0
 80127e2:	920f      	str	r2, [sp, #60]	; 0x3c
 80127e4:	2900      	cmp	r1, #0
 80127e6:	f000 8105 	beq.w	80129f4 <GUI_SPRITE_SetPosition+0x28c>
 80127ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80127ec:	696c      	ldr	r4, [r5, #20]
 80127ee:	ebc2 0903 	rsb	r9, r2, r3
 80127f2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80127f4:	9415      	str	r4, [sp, #84]	; 0x54
 80127f6:	f1b9 0f00 	cmp.w	r9, #0
 80127fa:	ebc7 0a02 	rsb	sl, r7, r2
 80127fe:	dc09      	bgt.n	8012814 <GUI_SPRITE_SetPosition+0xac>
 8012800:	2000      	movs	r0, #0
 8012802:	f04f 38ff 	mov.w	r8, #4294967295
 8012806:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 801280a:	901a      	str	r0, [sp, #104]	; 0x68
 801280c:	44cb      	add	fp, r9
 801280e:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
 8012812:	e007      	b.n	8012824 <GUI_SPRITE_SetPosition+0xbc>
 8012814:	9907      	ldr	r1, [sp, #28]
 8012816:	f8cd 9068 	str.w	r9, [sp, #104]	; 0x68
 801281a:	2400      	movs	r4, #0
 801281c:	9111      	str	r1, [sp, #68]	; 0x44
 801281e:	f04f 0801 	mov.w	r8, #1
 8012822:	9409      	str	r4, [sp, #36]	; 0x24
 8012824:	f1ba 0f00 	cmp.w	sl, #0
 8012828:	dc0c      	bgt.n	8012844 <GUI_SPRITE_SetPosition+0xdc>
 801282a:	9c05      	ldr	r4, [sp, #20]
 801282c:	f04f 3cff 	mov.w	ip, #4294967295
 8012830:	eb04 020a 	add.w	r2, r4, sl
 8012834:	2000      	movs	r0, #0
 8012836:	9205      	str	r2, [sp, #20]
 8012838:	9018      	str	r0, [sp, #96]	; 0x60
 801283a:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
 801283e:	f8cd c020 	str.w	ip, [sp, #32]
 8012842:	e006      	b.n	8012852 <GUI_SPRITE_SetPosition+0xea>
 8012844:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8012846:	f8cd a060 	str.w	sl, [sp, #96]	; 0x60
 801284a:	2301      	movs	r3, #1
 801284c:	9412      	str	r4, [sp, #72]	; 0x48
 801284e:	9308      	str	r3, [sp, #32]
 8012850:	2400      	movs	r4, #0
 8012852:	68e8      	ldr	r0, [r5, #12]
 8012854:	f7fb f972 	bl	800db3c <GUI_ALLOC_LockH>
 8012858:	a922      	add	r1, sp, #136	; 0x88
 801285a:	9020      	str	r0, [sp, #128]	; 0x80
 801285c:	9804      	ldr	r0, [sp, #16]
 801285e:	f7ff ff67 	bl	8012730 <_GetDeviceRect>
 8012862:	4641      	mov	r1, r8
 8012864:	9821      	ldr	r0, [sp, #132]	; 0x84
 8012866:	f7ff fe6f 	bl	8012548 <_CreateBuffer>
 801286a:	4641      	mov	r1, r8
 801286c:	9016      	str	r0, [sp, #88]	; 0x58
 801286e:	9821      	ldr	r0, [sp, #132]	; 0x84
 8012870:	f7ff fe6a 	bl	8012548 <_CreateBuffer>
 8012874:	9a08      	ldr	r2, [sp, #32]
 8012876:	9017      	str	r0, [sp, #92]	; 0x5c
 8012878:	9807      	ldr	r0, [sp, #28]
 801287a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801287c:	4342      	muls	r2, r0
 801287e:	0091      	lsls	r1, r2, #2
 8012880:	fb00 3204 	mla	r2, r0, r4, r3
 8012884:	911f      	str	r1, [sp, #124]	; 0x7c
 8012886:	eb05 0082 	add.w	r0, r5, r2, lsl #2
 801288a:	193f      	adds	r7, r7, r4
 801288c:	ea4f 0188 	mov.w	r1, r8, lsl #2
 8012890:	9010      	str	r0, [sp, #64]	; 0x40
 8012892:	4457      	add	r7, sl
 8012894:	911e      	str	r1, [sp, #120]	; 0x78
 8012896:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8012898:	429c      	cmp	r4, r3
 801289a:	f000 80a0 	beq.w	80129de <GUI_SPRITE_SetPosition+0x276>
 801289e:	9e18      	ldr	r6, [sp, #96]	; 0x60
 80128a0:	42b4      	cmp	r4, r6
 80128a2:	db06      	blt.n	80128b2 <GUI_SPRITE_SetPosition+0x14a>
 80128a4:	f8dd e014 	ldr.w	lr, [sp, #20]
 80128a8:	4574      	cmp	r4, lr
 80128aa:	bfcc      	ite	gt
 80128ac:	2600      	movgt	r6, #0
 80128ae:	2601      	movle	r6, #1
 80128b0:	e000      	b.n	80128b4 <GUI_SPRITE_SetPosition+0x14c>
 80128b2:	2600      	movs	r6, #0
 80128b4:	b2f5      	uxtb	r5, r6
 80128b6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80128b8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80128ba:	951c      	str	r5, [sp, #112]	; 0x70
 80128bc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80128be:	ebca 0307 	rsb	r3, sl, r7
 80128c2:	1888      	adds	r0, r1, r2
 80128c4:	950a      	str	r5, [sp, #40]	; 0x28
 80128c6:	9313      	str	r3, [sp, #76]	; 0x4c
 80128c8:	eb00 0609 	add.w	r6, r0, r9
 80128cc:	4615      	mov	r5, r2
 80128ce:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 80128d2:	4565      	cmp	r5, ip
 80128d4:	d07b      	beq.n	80129ce <GUI_SPRITE_SetPosition+0x266>
 80128d6:	9815      	ldr	r0, [sp, #84]	; 0x54
 80128d8:	4629      	mov	r1, r5
 80128da:	4622      	mov	r2, r4
 80128dc:	f000 f906 	bl	8012aec <GUI_GetBitmapPixelIndex>
 80128e0:	9019      	str	r0, [sp, #100]	; 0x64
 80128e2:	2800      	cmp	r0, #0
 80128e4:	d06c      	beq.n	80129c0 <GUI_SPRITE_SetPosition+0x258>
 80128e6:	f8dd e068 	ldr.w	lr, [sp, #104]	; 0x68
 80128ea:	4575      	cmp	r5, lr
 80128ec:	ebc9 0c06 	rsb	ip, r9, r6
 80128f0:	db04      	blt.n	80128fc <GUI_SPRITE_SetPosition+0x194>
 80128f2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80128f4:	455d      	cmp	r5, fp
 80128f6:	bfc8      	it	gt
 80128f8:	2300      	movgt	r3, #0
 80128fa:	e000      	b.n	80128fe <GUI_SPRITE_SetPosition+0x196>
 80128fc:	2300      	movs	r3, #0
 80128fe:	f9bd 2088 	ldrsh.w	r2, [sp, #136]	; 0x88
 8012902:	b2d9      	uxtb	r1, r3
 8012904:	4296      	cmp	r6, r2
 8012906:	911d      	str	r1, [sp, #116]	; 0x74
 8012908:	db17      	blt.n	801293a <GUI_SPRITE_SetPosition+0x1d2>
 801290a:	f9bd 308a 	ldrsh.w	r3, [sp, #138]	; 0x8a
 801290e:	429f      	cmp	r7, r3
 8012910:	db16      	blt.n	8012940 <GUI_SPRITE_SetPosition+0x1d8>
 8012912:	f9bd 208c 	ldrsh.w	r2, [sp, #140]	; 0x8c
 8012916:	4296      	cmp	r6, r2
 8012918:	dc15      	bgt.n	8012946 <GUI_SPRITE_SetPosition+0x1de>
 801291a:	f9bd 308e 	ldrsh.w	r3, [sp, #142]	; 0x8e
 801291e:	429f      	cmp	r7, r3
 8012920:	dc14      	bgt.n	801294c <GUI_SPRITE_SetPosition+0x1e4>
 8012922:	4630      	mov	r0, r6
 8012924:	4639      	mov	r1, r7
 8012926:	9a04      	ldr	r2, [sp, #16]
 8012928:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801292a:	f8cd c00c 	str.w	ip, [sp, #12]
 801292e:	f7ff fec4 	bl	80126ba <_GetBkPixel>
 8012932:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8012936:	9006      	str	r0, [sp, #24]
 8012938:	e00a      	b.n	8012950 <GUI_SPRITE_SetPosition+0x1e8>
 801293a:	2000      	movs	r0, #0
 801293c:	9006      	str	r0, [sp, #24]
 801293e:	e007      	b.n	8012950 <GUI_SPRITE_SetPosition+0x1e8>
 8012940:	2100      	movs	r1, #0
 8012942:	9106      	str	r1, [sp, #24]
 8012944:	e004      	b.n	8012950 <GUI_SPRITE_SetPosition+0x1e8>
 8012946:	2000      	movs	r0, #0
 8012948:	9006      	str	r0, [sp, #24]
 801294a:	e001      	b.n	8012950 <GUI_SPRITE_SetPosition+0x1e8>
 801294c:	2100      	movs	r1, #0
 801294e:	9106      	str	r1, [sp, #24]
 8012950:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8012952:	b16a      	cbz	r2, 8012970 <GUI_SPRITE_SetPosition+0x208>
 8012954:	ebb5 0109 	subs.w	r1, r5, r9
 8012958:	d413      	bmi.n	8012982 <GUI_SPRITE_SetPosition+0x21a>
 801295a:	ebb4 020a 	subs.w	r2, r4, sl
 801295e:	d410      	bmi.n	8012982 <GUI_SPRITE_SetPosition+0x21a>
 8012960:	9815      	ldr	r0, [sp, #84]	; 0x54
 8012962:	f8cd c00c 	str.w	ip, [sp, #12]
 8012966:	f000 f8c1 	bl	8012aec <GUI_GetBitmapPixelIndex>
 801296a:	f8dd c00c 	ldr.w	ip, [sp, #12]
 801296e:	b940      	cbnz	r0, 8012982 <GUI_SPRITE_SetPosition+0x21a>
 8012970:	f9bd 0088 	ldrsh.w	r0, [sp, #136]	; 0x88
 8012974:	4584      	cmp	ip, r0
 8012976:	db04      	blt.n	8012982 <GUI_SPRITE_SetPosition+0x21a>
 8012978:	f9bd 308a 	ldrsh.w	r3, [sp, #138]	; 0x8a
 801297c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801297e:	4299      	cmp	r1, r3
 8012980:	da58      	bge.n	8012a34 <GUI_SPRITE_SetPosition+0x2cc>
 8012982:	f9bd 1088 	ldrsh.w	r1, [sp, #136]	; 0x88
 8012986:	428e      	cmp	r6, r1
 8012988:	db17      	blt.n	80129ba <GUI_SPRITE_SetPosition+0x252>
 801298a:	f9bd 008a 	ldrsh.w	r0, [sp, #138]	; 0x8a
 801298e:	4287      	cmp	r7, r0
 8012990:	db13      	blt.n	80129ba <GUI_SPRITE_SetPosition+0x252>
 8012992:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8012996:	429e      	cmp	r6, r3
 8012998:	dc0f      	bgt.n	80129ba <GUI_SPRITE_SetPosition+0x252>
 801299a:	f9bd 208e 	ldrsh.w	r2, [sp, #142]	; 0x8e
 801299e:	4297      	cmp	r7, r2
 80129a0:	dc0b      	bgt.n	80129ba <GUI_SPRITE_SetPosition+0x252>
 80129a2:	9916      	ldr	r1, [sp, #88]	; 0x58
 80129a4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80129a6:	f8dd e064 	ldr.w	lr, [sp, #100]	; 0x64
 80129aa:	9100      	str	r1, [sp, #0]
 80129ac:	f853 202e 	ldr.w	r2, [r3, lr, lsl #2]
 80129b0:	9b04      	ldr	r3, [sp, #16]
 80129b2:	4630      	mov	r0, r6
 80129b4:	4639      	mov	r1, r7
 80129b6:	f7ff fe4f 	bl	8012658 <_SetSpriteBkPixel>
 80129ba:	9806      	ldr	r0, [sp, #24]
 80129bc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80129be:	6210      	str	r0, [r2, #32]
 80129c0:	990a      	ldr	r1, [sp, #40]	; 0x28
 80129c2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80129c4:	18c8      	adds	r0, r1, r3
 80129c6:	4445      	add	r5, r8
 80129c8:	900a      	str	r0, [sp, #40]	; 0x28
 80129ca:	4446      	add	r6, r8
 80129cc:	e77f      	b.n	80128ce <GUI_SPRITE_SetPosition+0x166>
 80129ce:	9910      	ldr	r1, [sp, #64]	; 0x40
 80129d0:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80129d2:	9b08      	ldr	r3, [sp, #32]
 80129d4:	1888      	adds	r0, r1, r2
 80129d6:	18e4      	adds	r4, r4, r3
 80129d8:	9010      	str	r0, [sp, #64]	; 0x40
 80129da:	18ff      	adds	r7, r7, r3
 80129dc:	e75b      	b.n	8012896 <GUI_SPRITE_SetPosition+0x12e>
 80129de:	9821      	ldr	r0, [sp, #132]	; 0x84
 80129e0:	9916      	ldr	r1, [sp, #88]	; 0x58
 80129e2:	f7ff fe5b 	bl	801269c <_ReleaseBuffer>
 80129e6:	9821      	ldr	r0, [sp, #132]	; 0x84
 80129e8:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80129ea:	f7ff fe57 	bl	801269c <_ReleaseBuffer>
 80129ee:	a820      	add	r0, sp, #128	; 0x80
 80129f0:	f7fb f8b2 	bl	800db58 <GUI_ALLOC_UnlockH>
 80129f4:	f8dd e02c 	ldr.w	lr, [sp, #44]	; 0x2c
 80129f8:	9a07      	ldr	r2, [sp, #28]
 80129fa:	f8dd c050 	ldr.w	ip, [sp, #80]	; 0x50
 80129fe:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8012a00:	980c      	ldr	r0, [sp, #48]	; 0x30
 8012a02:	f8a3 e004 	strh.w	lr, [r3, #4]
 8012a06:	eb0e 0102 	add.w	r1, lr, r2
 8012a0a:	1e4a      	subs	r2, r1, #1
 8012a0c:	f10c 31ff 	add.w	r1, ip, #4294967295
 8012a10:	80d8      	strh	r0, [r3, #6]
 8012a12:	1808      	adds	r0, r1, r0
 8012a14:	811a      	strh	r2, [r3, #8]
 8012a16:	8158      	strh	r0, [r3, #10]
 8012a18:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8012a1a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012a1c:	4293      	cmp	r3, r2
 8012a1e:	d002      	beq.n	8012a26 <GUI_SPRITE_SetPosition+0x2be>
 8012a20:	490d      	ldr	r1, [pc, #52]	; (8012a58 <GUI_SPRITE_SetPosition+0x2f0>)
 8012a22:	6808      	ldr	r0, [r1, #0]
 8012a24:	7442      	strb	r2, [r0, #17]
 8012a26:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8012a28:	f7f7 f98a 	bl	8009d40 <GUI_MEMDEV_Select>
 8012a2c:	a821      	add	r0, sp, #132	; 0x84
 8012a2e:	f7fb f893 	bl	800db58 <GUI_ALLOC_UnlockH>
 8012a32:	e013      	b.n	8012a5c <GUI_SPRITE_SetPosition+0x2f4>
 8012a34:	f9bd 208c 	ldrsh.w	r2, [sp, #140]	; 0x8c
 8012a38:	4594      	cmp	ip, r2
 8012a3a:	dca2      	bgt.n	8012982 <GUI_SPRITE_SetPosition+0x21a>
 8012a3c:	f9bd 008e 	ldrsh.w	r0, [sp, #142]	; 0x8e
 8012a40:	4281      	cmp	r1, r0
 8012a42:	dc9e      	bgt.n	8012982 <GUI_SPRITE_SetPosition+0x21a>
 8012a44:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8012a46:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8012a48:	9300      	str	r3, [sp, #0]
 8012a4a:	4660      	mov	r0, ip
 8012a4c:	6a12      	ldr	r2, [r2, #32]
 8012a4e:	9b04      	ldr	r3, [sp, #16]
 8012a50:	f7ff fe02 	bl	8012658 <_SetSpriteBkPixel>
 8012a54:	e795      	b.n	8012982 <GUI_SPRITE_SetPosition+0x21a>
 8012a56:	bf00      	nop
 8012a58:	20000278 	.word	0x20000278
 8012a5c:	b025      	add	sp, #148	; 0x94
 8012a5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012a62:	bf00      	nop

08012a64 <GUI_GetBitmapPixelIndexEx>:
 8012a64:	b510      	push	{r4, lr}
 8012a66:	2804      	cmp	r0, #4
 8012a68:	9c02      	ldr	r4, [sp, #8]
 8012a6a:	d027      	beq.n	8012abc <GUI_GetBitmapPixelIndexEx+0x58>
 8012a6c:	dc10      	bgt.n	8012a90 <GUI_GetBitmapPixelIndexEx+0x2c>
 8012a6e:	2801      	cmp	r0, #1
 8012a70:	d018      	beq.n	8012aa4 <GUI_GetBitmapPixelIndexEx+0x40>
 8012a72:	2802      	cmp	r0, #2
 8012a74:	d138      	bne.n	8012ae8 <GUI_GetBitmapPixelIndexEx+0x84>
 8012a76:	0898      	lsrs	r0, r3, #2
 8012a78:	fb01 2104 	mla	r1, r1, r4, r2
 8012a7c:	ea6f 0343 	mvn.w	r3, r3, lsl #1
 8012a80:	5c0a      	ldrb	r2, [r1, r0]
 8012a82:	f003 0006 	and.w	r0, r3, #6
 8012a86:	fa22 f200 	lsr.w	r2, r2, r0
 8012a8a:	f002 0003 	and.w	r0, r2, #3
 8012a8e:	bd10      	pop	{r4, pc}
 8012a90:	2810      	cmp	r0, #16
 8012a92:	d01d      	beq.n	8012ad0 <GUI_GetBitmapPixelIndexEx+0x6c>
 8012a94:	2820      	cmp	r0, #32
 8012a96:	d021      	beq.n	8012adc <GUI_GetBitmapPixelIndexEx+0x78>
 8012a98:	2808      	cmp	r0, #8
 8012a9a:	d125      	bne.n	8012ae8 <GUI_GetBitmapPixelIndexEx+0x84>
 8012a9c:	fb01 2104 	mla	r1, r1, r4, r2
 8012aa0:	5cc8      	ldrb	r0, [r1, r3]
 8012aa2:	bd10      	pop	{r4, pc}
 8012aa4:	08d8      	lsrs	r0, r3, #3
 8012aa6:	fb01 2104 	mla	r1, r1, r4, r2
 8012aaa:	43db      	mvns	r3, r3
 8012aac:	5c0a      	ldrb	r2, [r1, r0]
 8012aae:	f003 0007 	and.w	r0, r3, #7
 8012ab2:	fa22 f200 	lsr.w	r2, r2, r0
 8012ab6:	f002 0001 	and.w	r0, r2, #1
 8012aba:	bd10      	pop	{r4, pc}
 8012abc:	0858      	lsrs	r0, r3, #1
 8012abe:	fb01 2204 	mla	r2, r1, r4, r2
 8012ac2:	07db      	lsls	r3, r3, #31
 8012ac4:	5c10      	ldrb	r0, [r2, r0]
 8012ac6:	bf4c      	ite	mi
 8012ac8:	f000 000f 	andmi.w	r0, r0, #15
 8012acc:	0900      	lsrpl	r0, r0, #4
 8012ace:	bd10      	pop	{r4, pc}
 8012ad0:	1049      	asrs	r1, r1, #1
 8012ad2:	fb01 3004 	mla	r0, r1, r4, r3
 8012ad6:	f832 0010 	ldrh.w	r0, [r2, r0, lsl #1]
 8012ada:	bd10      	pop	{r4, pc}
 8012adc:	1088      	asrs	r0, r1, #2
 8012ade:	fb00 3304 	mla	r3, r0, r4, r3
 8012ae2:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8012ae6:	bd10      	pop	{r4, pc}
 8012ae8:	2000      	movs	r0, #0
 8012aea:	bd10      	pop	{r4, pc}

08012aec <GUI_GetBitmapPixelIndex>:
 8012aec:	b513      	push	{r0, r1, r4, lr}
 8012aee:	460b      	mov	r3, r1
 8012af0:	4604      	mov	r4, r0
 8012af2:	b130      	cbz	r0, 8012b02 <GUI_GetBitmapPixelIndex+0x16>
 8012af4:	88c0      	ldrh	r0, [r0, #6]
 8012af6:	88a1      	ldrh	r1, [r4, #4]
 8012af8:	9200      	str	r2, [sp, #0]
 8012afa:	68a2      	ldr	r2, [r4, #8]
 8012afc:	f7ff ffb2 	bl	8012a64 <GUI_GetBitmapPixelIndexEx>
 8012b00:	e7ff      	b.n	8012b02 <GUI_GetBitmapPixelIndex+0x16>
 8012b02:	bd1c      	pop	{r2, r3, r4, pc}

08012b04 <GUI_ClearRectEx>:
 8012b04:	4603      	mov	r3, r0
 8012b06:	f9b0 0000 	ldrsh.w	r0, [r0]
 8012b0a:	f9b3 1002 	ldrsh.w	r1, [r3, #2]
 8012b0e:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 8012b12:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8012b16:	f7fa bbcd 	b.w	800d2b4 <GUI_ClearRect>

08012b1a <GUI_CalcColorDist>:
 8012b1a:	b2c2      	uxtb	r2, r0
 8012b1c:	b2cb      	uxtb	r3, r1
 8012b1e:	b510      	push	{r4, lr}
 8012b20:	1ad4      	subs	r4, r2, r3
 8012b22:	b2a2      	uxth	r2, r4
 8012b24:	b293      	uxth	r3, r2
 8012b26:	041c      	lsls	r4, r3, #16
 8012b28:	d501      	bpl.n	8012b2e <GUI_CalcColorDist+0x14>
 8012b2a:	4253      	negs	r3, r2
 8012b2c:	b29b      	uxth	r3, r3
 8012b2e:	fb03 f403 	mul.w	r4, r3, r3
 8012b32:	f3c0 2207 	ubfx	r2, r0, #8, #8
 8012b36:	f3c1 2307 	ubfx	r3, r1, #8, #8
 8012b3a:	1ad2      	subs	r2, r2, r3
 8012b3c:	b292      	uxth	r2, r2
 8012b3e:	b293      	uxth	r3, r2
 8012b40:	f413 4f00 	tst.w	r3, #32768	; 0x8000
 8012b44:	d001      	beq.n	8012b4a <GUI_CalcColorDist+0x30>
 8012b46:	4253      	negs	r3, r2
 8012b48:	b29b      	uxth	r3, r3
 8012b4a:	0c09      	lsrs	r1, r1, #16
 8012b4c:	ebc1 4010 	rsb	r0, r1, r0, lsr #16
 8012b50:	b281      	uxth	r1, r0
 8012b52:	b288      	uxth	r0, r1
 8012b54:	0402      	lsls	r2, r0, #16
 8012b56:	fb03 4303 	mla	r3, r3, r3, r4
 8012b5a:	d501      	bpl.n	8012b60 <GUI_CalcColorDist+0x46>
 8012b5c:	424a      	negs	r2, r1
 8012b5e:	b290      	uxth	r0, r2
 8012b60:	fb00 3000 	mla	r0, r0, r0, r3
 8012b64:	bd10      	pop	{r4, pc}
	...

08012b68 <memcmp>:
 8012b68:	2a03      	cmp	r2, #3
 8012b6a:	b470      	push	{r4, r5, r6}
 8012b6c:	d926      	bls.n	8012bbc <memcmp+0x54>
 8012b6e:	ea40 0301 	orr.w	r3, r0, r1
 8012b72:	079b      	lsls	r3, r3, #30
 8012b74:	d011      	beq.n	8012b9a <memcmp+0x32>
 8012b76:	7804      	ldrb	r4, [r0, #0]
 8012b78:	780d      	ldrb	r5, [r1, #0]
 8012b7a:	42ac      	cmp	r4, r5
 8012b7c:	d122      	bne.n	8012bc4 <memcmp+0x5c>
 8012b7e:	4402      	add	r2, r0
 8012b80:	1c43      	adds	r3, r0, #1
 8012b82:	e005      	b.n	8012b90 <memcmp+0x28>
 8012b84:	f813 4b01 	ldrb.w	r4, [r3], #1
 8012b88:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 8012b8c:	42ac      	cmp	r4, r5
 8012b8e:	d119      	bne.n	8012bc4 <memcmp+0x5c>
 8012b90:	4293      	cmp	r3, r2
 8012b92:	d1f7      	bne.n	8012b84 <memcmp+0x1c>
 8012b94:	2000      	movs	r0, #0
 8012b96:	bc70      	pop	{r4, r5, r6}
 8012b98:	4770      	bx	lr
 8012b9a:	460c      	mov	r4, r1
 8012b9c:	4603      	mov	r3, r0
 8012b9e:	681e      	ldr	r6, [r3, #0]
 8012ba0:	6825      	ldr	r5, [r4, #0]
 8012ba2:	42ae      	cmp	r6, r5
 8012ba4:	4618      	mov	r0, r3
 8012ba6:	4621      	mov	r1, r4
 8012ba8:	f103 0304 	add.w	r3, r3, #4
 8012bac:	f104 0404 	add.w	r4, r4, #4
 8012bb0:	d104      	bne.n	8012bbc <memcmp+0x54>
 8012bb2:	3a04      	subs	r2, #4
 8012bb4:	2a03      	cmp	r2, #3
 8012bb6:	4618      	mov	r0, r3
 8012bb8:	4621      	mov	r1, r4
 8012bba:	d8f0      	bhi.n	8012b9e <memcmp+0x36>
 8012bbc:	2a00      	cmp	r2, #0
 8012bbe:	d1da      	bne.n	8012b76 <memcmp+0xe>
 8012bc0:	4610      	mov	r0, r2
 8012bc2:	e7e8      	b.n	8012b96 <memcmp+0x2e>
 8012bc4:	1b60      	subs	r0, r4, r5
 8012bc6:	bc70      	pop	{r4, r5, r6}
 8012bc8:	4770      	bx	lr
 8012bca:	bf00      	nop

08012bcc <memmove>:
 8012bcc:	4288      	cmp	r0, r1
 8012bce:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012bd0:	d90d      	bls.n	8012bee <memmove+0x22>
 8012bd2:	188b      	adds	r3, r1, r2
 8012bd4:	4298      	cmp	r0, r3
 8012bd6:	d20a      	bcs.n	8012bee <memmove+0x22>
 8012bd8:	1881      	adds	r1, r0, r2
 8012bda:	2a00      	cmp	r2, #0
 8012bdc:	d054      	beq.n	8012c88 <memmove+0xbc>
 8012bde:	1a9a      	subs	r2, r3, r2
 8012be0:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8012be4:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8012be8:	4293      	cmp	r3, r2
 8012bea:	d1f9      	bne.n	8012be0 <memmove+0x14>
 8012bec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012bee:	2a0f      	cmp	r2, #15
 8012bf0:	d948      	bls.n	8012c84 <memmove+0xb8>
 8012bf2:	ea40 0301 	orr.w	r3, r0, r1
 8012bf6:	079b      	lsls	r3, r3, #30
 8012bf8:	d147      	bne.n	8012c8a <memmove+0xbe>
 8012bfa:	f100 0410 	add.w	r4, r0, #16
 8012bfe:	f101 0310 	add.w	r3, r1, #16
 8012c02:	4615      	mov	r5, r2
 8012c04:	f853 6c10 	ldr.w	r6, [r3, #-16]
 8012c08:	f844 6c10 	str.w	r6, [r4, #-16]
 8012c0c:	f853 6c0c 	ldr.w	r6, [r3, #-12]
 8012c10:	f844 6c0c 	str.w	r6, [r4, #-12]
 8012c14:	f853 6c08 	ldr.w	r6, [r3, #-8]
 8012c18:	f844 6c08 	str.w	r6, [r4, #-8]
 8012c1c:	3d10      	subs	r5, #16
 8012c1e:	f853 6c04 	ldr.w	r6, [r3, #-4]
 8012c22:	f844 6c04 	str.w	r6, [r4, #-4]
 8012c26:	2d0f      	cmp	r5, #15
 8012c28:	f103 0310 	add.w	r3, r3, #16
 8012c2c:	f104 0410 	add.w	r4, r4, #16
 8012c30:	d8e8      	bhi.n	8012c04 <memmove+0x38>
 8012c32:	f1a2 0310 	sub.w	r3, r2, #16
 8012c36:	f023 030f 	bic.w	r3, r3, #15
 8012c3a:	f002 0e0f 	and.w	lr, r2, #15
 8012c3e:	3310      	adds	r3, #16
 8012c40:	f1be 0f03 	cmp.w	lr, #3
 8012c44:	4419      	add	r1, r3
 8012c46:	4403      	add	r3, r0
 8012c48:	d921      	bls.n	8012c8e <memmove+0xc2>
 8012c4a:	1f1e      	subs	r6, r3, #4
 8012c4c:	460d      	mov	r5, r1
 8012c4e:	4674      	mov	r4, lr
 8012c50:	3c04      	subs	r4, #4
 8012c52:	f855 7b04 	ldr.w	r7, [r5], #4
 8012c56:	f846 7f04 	str.w	r7, [r6, #4]!
 8012c5a:	2c03      	cmp	r4, #3
 8012c5c:	d8f8      	bhi.n	8012c50 <memmove+0x84>
 8012c5e:	f1ae 0404 	sub.w	r4, lr, #4
 8012c62:	f024 0403 	bic.w	r4, r4, #3
 8012c66:	3404      	adds	r4, #4
 8012c68:	4423      	add	r3, r4
 8012c6a:	4421      	add	r1, r4
 8012c6c:	f002 0203 	and.w	r2, r2, #3
 8012c70:	b152      	cbz	r2, 8012c88 <memmove+0xbc>
 8012c72:	3b01      	subs	r3, #1
 8012c74:	440a      	add	r2, r1
 8012c76:	f811 4b01 	ldrb.w	r4, [r1], #1
 8012c7a:	f803 4f01 	strb.w	r4, [r3, #1]!
 8012c7e:	4291      	cmp	r1, r2
 8012c80:	d1f9      	bne.n	8012c76 <memmove+0xaa>
 8012c82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012c84:	4603      	mov	r3, r0
 8012c86:	e7f3      	b.n	8012c70 <memmove+0xa4>
 8012c88:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012c8a:	4603      	mov	r3, r0
 8012c8c:	e7f1      	b.n	8012c72 <memmove+0xa6>
 8012c8e:	4672      	mov	r2, lr
 8012c90:	e7ee      	b.n	8012c70 <memmove+0xa4>
 8012c92:	bf00      	nop

08012c94 <memset>:
 8012c94:	b470      	push	{r4, r5, r6}
 8012c96:	0784      	lsls	r4, r0, #30
 8012c98:	d046      	beq.n	8012d28 <memset+0x94>
 8012c9a:	1e54      	subs	r4, r2, #1
 8012c9c:	2a00      	cmp	r2, #0
 8012c9e:	d041      	beq.n	8012d24 <memset+0x90>
 8012ca0:	b2cd      	uxtb	r5, r1
 8012ca2:	4603      	mov	r3, r0
 8012ca4:	e002      	b.n	8012cac <memset+0x18>
 8012ca6:	1e62      	subs	r2, r4, #1
 8012ca8:	b3e4      	cbz	r4, 8012d24 <memset+0x90>
 8012caa:	4614      	mov	r4, r2
 8012cac:	f803 5b01 	strb.w	r5, [r3], #1
 8012cb0:	079a      	lsls	r2, r3, #30
 8012cb2:	d1f8      	bne.n	8012ca6 <memset+0x12>
 8012cb4:	2c03      	cmp	r4, #3
 8012cb6:	d92e      	bls.n	8012d16 <memset+0x82>
 8012cb8:	b2cd      	uxtb	r5, r1
 8012cba:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
 8012cbe:	2c0f      	cmp	r4, #15
 8012cc0:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
 8012cc4:	d919      	bls.n	8012cfa <memset+0x66>
 8012cc6:	f103 0210 	add.w	r2, r3, #16
 8012cca:	4626      	mov	r6, r4
 8012ccc:	3e10      	subs	r6, #16
 8012cce:	2e0f      	cmp	r6, #15
 8012cd0:	f842 5c10 	str.w	r5, [r2, #-16]
 8012cd4:	f842 5c0c 	str.w	r5, [r2, #-12]
 8012cd8:	f842 5c08 	str.w	r5, [r2, #-8]
 8012cdc:	f842 5c04 	str.w	r5, [r2, #-4]
 8012ce0:	f102 0210 	add.w	r2, r2, #16
 8012ce4:	d8f2      	bhi.n	8012ccc <memset+0x38>
 8012ce6:	f1a4 0210 	sub.w	r2, r4, #16
 8012cea:	f022 020f 	bic.w	r2, r2, #15
 8012cee:	f004 040f 	and.w	r4, r4, #15
 8012cf2:	3210      	adds	r2, #16
 8012cf4:	2c03      	cmp	r4, #3
 8012cf6:	4413      	add	r3, r2
 8012cf8:	d90d      	bls.n	8012d16 <memset+0x82>
 8012cfa:	461e      	mov	r6, r3
 8012cfc:	4622      	mov	r2, r4
 8012cfe:	3a04      	subs	r2, #4
 8012d00:	2a03      	cmp	r2, #3
 8012d02:	f846 5b04 	str.w	r5, [r6], #4
 8012d06:	d8fa      	bhi.n	8012cfe <memset+0x6a>
 8012d08:	1f22      	subs	r2, r4, #4
 8012d0a:	f022 0203 	bic.w	r2, r2, #3
 8012d0e:	3204      	adds	r2, #4
 8012d10:	4413      	add	r3, r2
 8012d12:	f004 0403 	and.w	r4, r4, #3
 8012d16:	b12c      	cbz	r4, 8012d24 <memset+0x90>
 8012d18:	b2c9      	uxtb	r1, r1
 8012d1a:	441c      	add	r4, r3
 8012d1c:	f803 1b01 	strb.w	r1, [r3], #1
 8012d20:	42a3      	cmp	r3, r4
 8012d22:	d1fb      	bne.n	8012d1c <memset+0x88>
 8012d24:	bc70      	pop	{r4, r5, r6}
 8012d26:	4770      	bx	lr
 8012d28:	4614      	mov	r4, r2
 8012d2a:	4603      	mov	r3, r0
 8012d2c:	e7c2      	b.n	8012cb4 <memset+0x20>
 8012d2e:	bf00      	nop

08012d30 <printf>:
 8012d30:	b40f      	push	{r0, r1, r2, r3}
 8012d32:	b500      	push	{lr}
 8012d34:	4907      	ldr	r1, [pc, #28]	; (8012d54 <printf+0x24>)
 8012d36:	b083      	sub	sp, #12
 8012d38:	ab04      	add	r3, sp, #16
 8012d3a:	6808      	ldr	r0, [r1, #0]
 8012d3c:	f853 2b04 	ldr.w	r2, [r3], #4
 8012d40:	6881      	ldr	r1, [r0, #8]
 8012d42:	9301      	str	r3, [sp, #4]
 8012d44:	f001 fb3a 	bl	80143bc <_vfprintf_r>
 8012d48:	b003      	add	sp, #12
 8012d4a:	f85d eb04 	ldr.w	lr, [sp], #4
 8012d4e:	b004      	add	sp, #16
 8012d50:	4770      	bx	lr
 8012d52:	bf00      	nop
 8012d54:	20000708 	.word	0x20000708

08012d58 <_puts_r>:
 8012d58:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012d5a:	4604      	mov	r4, r0
 8012d5c:	b089      	sub	sp, #36	; 0x24
 8012d5e:	4608      	mov	r0, r1
 8012d60:	460d      	mov	r5, r1
 8012d62:	f000 f8b3 	bl	8012ecc <strlen>
 8012d66:	68a3      	ldr	r3, [r4, #8]
 8012d68:	4f11      	ldr	r7, [pc, #68]	; (8012db0 <_puts_r+0x58>)
 8012d6a:	899a      	ldrh	r2, [r3, #12]
 8012d6c:	9504      	str	r5, [sp, #16]
 8012d6e:	2102      	movs	r1, #2
 8012d70:	f100 0e01 	add.w	lr, r0, #1
 8012d74:	2601      	movs	r6, #1
 8012d76:	ad04      	add	r5, sp, #16
 8012d78:	9102      	str	r1, [sp, #8]
 8012d7a:	0491      	lsls	r1, r2, #18
 8012d7c:	9005      	str	r0, [sp, #20]
 8012d7e:	f8cd e00c 	str.w	lr, [sp, #12]
 8012d82:	9706      	str	r7, [sp, #24]
 8012d84:	9607      	str	r6, [sp, #28]
 8012d86:	9501      	str	r5, [sp, #4]
 8012d88:	d406      	bmi.n	8012d98 <_puts_r+0x40>
 8012d8a:	6e59      	ldr	r1, [r3, #100]	; 0x64
 8012d8c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8012d90:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
 8012d94:	819a      	strh	r2, [r3, #12]
 8012d96:	6659      	str	r1, [r3, #100]	; 0x64
 8012d98:	4620      	mov	r0, r4
 8012d9a:	4619      	mov	r1, r3
 8012d9c:	aa01      	add	r2, sp, #4
 8012d9e:	f003 fff1 	bl	8016d84 <__sfvwrite_r>
 8012da2:	2800      	cmp	r0, #0
 8012da4:	bf14      	ite	ne
 8012da6:	f04f 30ff 	movne.w	r0, #4294967295
 8012daa:	200a      	moveq	r0, #10
 8012dac:	b009      	add	sp, #36	; 0x24
 8012dae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012db0:	0802d6bc 	.word	0x0802d6bc

08012db4 <puts>:
 8012db4:	4b02      	ldr	r3, [pc, #8]	; (8012dc0 <puts+0xc>)
 8012db6:	4601      	mov	r1, r0
 8012db8:	6818      	ldr	r0, [r3, #0]
 8012dba:	f7ff bfcd 	b.w	8012d58 <_puts_r>
 8012dbe:	bf00      	nop
 8012dc0:	20000708 	.word	0x20000708

08012dc4 <sprintf>:
 8012dc4:	b40e      	push	{r1, r2, r3}
 8012dc6:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012dc8:	b09c      	sub	sp, #112	; 0x70
 8012dca:	ab21      	add	r3, sp, #132	; 0x84
 8012dcc:	490f      	ldr	r1, [pc, #60]	; (8012e0c <sprintf+0x48>)
 8012dce:	f853 2b04 	ldr.w	r2, [r3], #4
 8012dd2:	9301      	str	r3, [sp, #4]
 8012dd4:	4605      	mov	r5, r0
 8012dd6:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
 8012dda:	6808      	ldr	r0, [r1, #0]
 8012ddc:	9502      	str	r5, [sp, #8]
 8012dde:	f44f 7702 	mov.w	r7, #520	; 0x208
 8012de2:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8012de6:	a902      	add	r1, sp, #8
 8012de8:	9506      	str	r5, [sp, #24]
 8012dea:	f8ad 7014 	strh.w	r7, [sp, #20]
 8012dee:	9404      	str	r4, [sp, #16]
 8012df0:	9407      	str	r4, [sp, #28]
 8012df2:	f8ad 6016 	strh.w	r6, [sp, #22]
 8012df6:	f000 f897 	bl	8012f28 <_svfprintf_r>
 8012dfa:	9b02      	ldr	r3, [sp, #8]
 8012dfc:	2200      	movs	r2, #0
 8012dfe:	701a      	strb	r2, [r3, #0]
 8012e00:	b01c      	add	sp, #112	; 0x70
 8012e02:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8012e06:	b003      	add	sp, #12
 8012e08:	4770      	bx	lr
 8012e0a:	bf00      	nop
 8012e0c:	20000708 	.word	0x20000708

08012e10 <strcpy>:
 8012e10:	ea80 0201 	eor.w	r2, r0, r1
 8012e14:	4684      	mov	ip, r0
 8012e16:	f012 0f03 	tst.w	r2, #3
 8012e1a:	d14f      	bne.n	8012ebc <strcpy+0xac>
 8012e1c:	f011 0f03 	tst.w	r1, #3
 8012e20:	d132      	bne.n	8012e88 <strcpy+0x78>
 8012e22:	f84d 4d04 	str.w	r4, [sp, #-4]!
 8012e26:	f011 0f04 	tst.w	r1, #4
 8012e2a:	f851 3b04 	ldr.w	r3, [r1], #4
 8012e2e:	d00b      	beq.n	8012e48 <strcpy+0x38>
 8012e30:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
 8012e34:	439a      	bics	r2, r3
 8012e36:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
 8012e3a:	bf04      	itt	eq
 8012e3c:	f84c 3b04 	streq.w	r3, [ip], #4
 8012e40:	f851 3b04 	ldreq.w	r3, [r1], #4
 8012e44:	d116      	bne.n	8012e74 <strcpy+0x64>
 8012e46:	bf00      	nop
 8012e48:	f851 4b04 	ldr.w	r4, [r1], #4
 8012e4c:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
 8012e50:	439a      	bics	r2, r3
 8012e52:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
 8012e56:	f1a4 3201 	sub.w	r2, r4, #16843009	; 0x1010101
 8012e5a:	d10b      	bne.n	8012e74 <strcpy+0x64>
 8012e5c:	f84c 3b04 	str.w	r3, [ip], #4
 8012e60:	43a2      	bics	r2, r4
 8012e62:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
 8012e66:	bf04      	itt	eq
 8012e68:	f851 3b04 	ldreq.w	r3, [r1], #4
 8012e6c:	f84c 4b04 	streq.w	r4, [ip], #4
 8012e70:	d0ea      	beq.n	8012e48 <strcpy+0x38>
 8012e72:	4623      	mov	r3, r4
 8012e74:	f80c 3b01 	strb.w	r3, [ip], #1
 8012e78:	f013 0fff 	tst.w	r3, #255	; 0xff
 8012e7c:	ea4f 2333 	mov.w	r3, r3, ror #8
 8012e80:	d1f8      	bne.n	8012e74 <strcpy+0x64>
 8012e82:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012e86:	4770      	bx	lr
 8012e88:	f011 0f01 	tst.w	r1, #1
 8012e8c:	d006      	beq.n	8012e9c <strcpy+0x8c>
 8012e8e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8012e92:	f80c 2b01 	strb.w	r2, [ip], #1
 8012e96:	2a00      	cmp	r2, #0
 8012e98:	bf08      	it	eq
 8012e9a:	4770      	bxeq	lr
 8012e9c:	f011 0f02 	tst.w	r1, #2
 8012ea0:	d0bf      	beq.n	8012e22 <strcpy+0x12>
 8012ea2:	f831 2b02 	ldrh.w	r2, [r1], #2
 8012ea6:	f012 0fff 	tst.w	r2, #255	; 0xff
 8012eaa:	bf16      	itet	ne
 8012eac:	f82c 2b02 	strhne.w	r2, [ip], #2
 8012eb0:	f88c 2000 	strbeq.w	r2, [ip]
 8012eb4:	f412 4f7f 	tstne.w	r2, #65280	; 0xff00
 8012eb8:	d1b3      	bne.n	8012e22 <strcpy+0x12>
 8012eba:	4770      	bx	lr
 8012ebc:	f811 2b01 	ldrb.w	r2, [r1], #1
 8012ec0:	f80c 2b01 	strb.w	r2, [ip], #1
 8012ec4:	2a00      	cmp	r2, #0
 8012ec6:	d1f9      	bne.n	8012ebc <strcpy+0xac>
 8012ec8:	4770      	bx	lr
 8012eca:	bf00      	nop

08012ecc <strlen>:
 8012ecc:	f020 0103 	bic.w	r1, r0, #3
 8012ed0:	f010 0003 	ands.w	r0, r0, #3
 8012ed4:	f1c0 0000 	rsb	r0, r0, #0
 8012ed8:	f851 3b04 	ldr.w	r3, [r1], #4
 8012edc:	f100 0c04 	add.w	ip, r0, #4
 8012ee0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012ee4:	f06f 0200 	mvn.w	r2, #0
 8012ee8:	bf1c      	itt	ne
 8012eea:	fa22 f20c 	lsrne.w	r2, r2, ip
 8012eee:	4313      	orrne	r3, r2
 8012ef0:	f04f 0c01 	mov.w	ip, #1
 8012ef4:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
 8012ef8:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
 8012efc:	eba3 020c 	sub.w	r2, r3, ip
 8012f00:	ea22 0203 	bic.w	r2, r2, r3
 8012f04:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
 8012f08:	bf04      	itt	eq
 8012f0a:	f851 3b04 	ldreq.w	r3, [r1], #4
 8012f0e:	3004      	addeq	r0, #4
 8012f10:	d0f4      	beq.n	8012efc <strlen+0x30>
 8012f12:	f1c2 0100 	rsb	r1, r2, #0
 8012f16:	ea02 0201 	and.w	r2, r2, r1
 8012f1a:	fab2 f282 	clz	r2, r2
 8012f1e:	f1c2 021f 	rsb	r2, r2, #31
 8012f22:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
 8012f26:	4770      	bx	lr

08012f28 <_svfprintf_r>:
 8012f28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012f2c:	b0c1      	sub	sp, #260	; 0x104
 8012f2e:	4689      	mov	r9, r1
 8012f30:	920a      	str	r2, [sp, #40]	; 0x28
 8012f32:	930e      	str	r3, [sp, #56]	; 0x38
 8012f34:	9008      	str	r0, [sp, #32]
 8012f36:	f004 f8e5 	bl	8017104 <_localeconv_r>
 8012f3a:	6803      	ldr	r3, [r0, #0]
 8012f3c:	9317      	str	r3, [sp, #92]	; 0x5c
 8012f3e:	4618      	mov	r0, r3
 8012f40:	f7ff ffc4 	bl	8012ecc <strlen>
 8012f44:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 8012f48:	9018      	str	r0, [sp, #96]	; 0x60
 8012f4a:	061a      	lsls	r2, r3, #24
 8012f4c:	d504      	bpl.n	8012f58 <_svfprintf_r+0x30>
 8012f4e:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8012f52:	2b00      	cmp	r3, #0
 8012f54:	f001 808c 	beq.w	8014070 <_svfprintf_r+0x1148>
 8012f58:	2300      	movs	r3, #0
 8012f5a:	af30      	add	r7, sp, #192	; 0xc0
 8012f5c:	9313      	str	r3, [sp, #76]	; 0x4c
 8012f5e:	9325      	str	r3, [sp, #148]	; 0x94
 8012f60:	9324      	str	r3, [sp, #144]	; 0x90
 8012f62:	9316      	str	r3, [sp, #88]	; 0x58
 8012f64:	9319      	str	r3, [sp, #100]	; 0x64
 8012f66:	930b      	str	r3, [sp, #44]	; 0x2c
 8012f68:	9723      	str	r7, [sp, #140]	; 0x8c
 8012f6a:	9314      	str	r3, [sp, #80]	; 0x50
 8012f6c:	9315      	str	r3, [sp, #84]	; 0x54
 8012f6e:	463c      	mov	r4, r7
 8012f70:	464e      	mov	r6, r9
 8012f72:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8012f74:	782b      	ldrb	r3, [r5, #0]
 8012f76:	2b00      	cmp	r3, #0
 8012f78:	f000 80a9 	beq.w	80130ce <_svfprintf_r+0x1a6>
 8012f7c:	2b25      	cmp	r3, #37	; 0x25
 8012f7e:	d102      	bne.n	8012f86 <_svfprintf_r+0x5e>
 8012f80:	e0a5      	b.n	80130ce <_svfprintf_r+0x1a6>
 8012f82:	2b25      	cmp	r3, #37	; 0x25
 8012f84:	d003      	beq.n	8012f8e <_svfprintf_r+0x66>
 8012f86:	f815 3f01 	ldrb.w	r3, [r5, #1]!
 8012f8a:	2b00      	cmp	r3, #0
 8012f8c:	d1f9      	bne.n	8012f82 <_svfprintf_r+0x5a>
 8012f8e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012f90:	1aeb      	subs	r3, r5, r3
 8012f92:	b173      	cbz	r3, 8012fb2 <_svfprintf_r+0x8a>
 8012f94:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8012f96:	9925      	ldr	r1, [sp, #148]	; 0x94
 8012f98:	980a      	ldr	r0, [sp, #40]	; 0x28
 8012f9a:	6020      	str	r0, [r4, #0]
 8012f9c:	3201      	adds	r2, #1
 8012f9e:	4419      	add	r1, r3
 8012fa0:	2a07      	cmp	r2, #7
 8012fa2:	6063      	str	r3, [r4, #4]
 8012fa4:	9125      	str	r1, [sp, #148]	; 0x94
 8012fa6:	9224      	str	r2, [sp, #144]	; 0x90
 8012fa8:	dc72      	bgt.n	8013090 <_svfprintf_r+0x168>
 8012faa:	3408      	adds	r4, #8
 8012fac:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012fae:	441a      	add	r2, r3
 8012fb0:	920b      	str	r2, [sp, #44]	; 0x2c
 8012fb2:	782b      	ldrb	r3, [r5, #0]
 8012fb4:	2b00      	cmp	r3, #0
 8012fb6:	f000 87b5 	beq.w	8013f24 <_svfprintf_r+0xffc>
 8012fba:	2300      	movs	r3, #0
 8012fbc:	1c69      	adds	r1, r5, #1
 8012fbe:	786d      	ldrb	r5, [r5, #1]
 8012fc0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8012fc4:	461a      	mov	r2, r3
 8012fc6:	930c      	str	r3, [sp, #48]	; 0x30
 8012fc8:	9307      	str	r3, [sp, #28]
 8012fca:	f04f 3aff 	mov.w	sl, #4294967295
 8012fce:	1c4b      	adds	r3, r1, #1
 8012fd0:	f1a5 0120 	sub.w	r1, r5, #32
 8012fd4:	2958      	cmp	r1, #88	; 0x58
 8012fd6:	f200 83d9 	bhi.w	801378c <_svfprintf_r+0x864>
 8012fda:	e8df f011 	tbh	[pc, r1, lsl #1]
 8012fde:	0270      	.short	0x0270
 8012fe0:	03d703d7 	.word	0x03d703d7
 8012fe4:	03d70374 	.word	0x03d70374
 8012fe8:	03d703d7 	.word	0x03d703d7
 8012fec:	03d703d7 	.word	0x03d703d7
 8012ff0:	02f003d7 	.word	0x02f003d7
 8012ff4:	03d7020d 	.word	0x03d7020d
 8012ff8:	021101f4 	.word	0x021101f4
 8012ffc:	037b03d7 	.word	0x037b03d7
 8013000:	02ba02ba 	.word	0x02ba02ba
 8013004:	02ba02ba 	.word	0x02ba02ba
 8013008:	02ba02ba 	.word	0x02ba02ba
 801300c:	02ba02ba 	.word	0x02ba02ba
 8013010:	03d702ba 	.word	0x03d702ba
 8013014:	03d703d7 	.word	0x03d703d7
 8013018:	03d703d7 	.word	0x03d703d7
 801301c:	03d703d7 	.word	0x03d703d7
 8013020:	03d703d7 	.word	0x03d703d7
 8013024:	02c903d7 	.word	0x02c903d7
 8013028:	03d7038b 	.word	0x03d7038b
 801302c:	03d7038b 	.word	0x03d7038b
 8013030:	03d703d7 	.word	0x03d703d7
 8013034:	036d03d7 	.word	0x036d03d7
 8013038:	03d703d7 	.word	0x03d703d7
 801303c:	03d70305 	.word	0x03d70305
 8013040:	03d703d7 	.word	0x03d703d7
 8013044:	03d703d7 	.word	0x03d703d7
 8013048:	03d70323 	.word	0x03d70323
 801304c:	033d03d7 	.word	0x033d03d7
 8013050:	03d703d7 	.word	0x03d703d7
 8013054:	03d703d7 	.word	0x03d703d7
 8013058:	03d703d7 	.word	0x03d703d7
 801305c:	03d703d7 	.word	0x03d703d7
 8013060:	03d703d7 	.word	0x03d703d7
 8013064:	022c0358 	.word	0x022c0358
 8013068:	038b038b 	.word	0x038b038b
 801306c:	02fe038b 	.word	0x02fe038b
 8013070:	03d7022c 	.word	0x03d7022c
 8013074:	02e603d7 	.word	0x02e603d7
 8013078:	027e03d7 	.word	0x027e03d7
 801307c:	03c001fb 	.word	0x03c001fb
 8013080:	03d70277 	.word	0x03d70277
 8013084:	03d70292 	.word	0x03d70292
 8013088:	03d7007a 	.word	0x03d7007a
 801308c:	024a03d7 	.word	0x024a03d7
 8013090:	9808      	ldr	r0, [sp, #32]
 8013092:	9307      	str	r3, [sp, #28]
 8013094:	4631      	mov	r1, r6
 8013096:	aa23      	add	r2, sp, #140	; 0x8c
 8013098:	f005 f8ee 	bl	8018278 <__ssprint_r>
 801309c:	b950      	cbnz	r0, 80130b4 <_svfprintf_r+0x18c>
 801309e:	463c      	mov	r4, r7
 80130a0:	9b07      	ldr	r3, [sp, #28]
 80130a2:	e783      	b.n	8012fac <_svfprintf_r+0x84>
 80130a4:	9808      	ldr	r0, [sp, #32]
 80130a6:	4631      	mov	r1, r6
 80130a8:	aa23      	add	r2, sp, #140	; 0x8c
 80130aa:	f005 f8e5 	bl	8018278 <__ssprint_r>
 80130ae:	2800      	cmp	r0, #0
 80130b0:	f000 8185 	beq.w	80133be <_svfprintf_r+0x496>
 80130b4:	46b1      	mov	r9, r6
 80130b6:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 80130ba:	f013 0f40 	tst.w	r3, #64	; 0x40
 80130be:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80130c0:	bf18      	it	ne
 80130c2:	f04f 33ff 	movne.w	r3, #4294967295
 80130c6:	4618      	mov	r0, r3
 80130c8:	b041      	add	sp, #260	; 0x104
 80130ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80130ce:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80130d0:	e76f      	b.n	8012fb2 <_svfprintf_r+0x8a>
 80130d2:	930a      	str	r3, [sp, #40]	; 0x28
 80130d4:	9b07      	ldr	r3, [sp, #28]
 80130d6:	0698      	lsls	r0, r3, #26
 80130d8:	f140 82ad 	bpl.w	8013636 <_svfprintf_r+0x70e>
 80130dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80130de:	f103 0907 	add.w	r9, r3, #7
 80130e2:	f029 0307 	bic.w	r3, r9, #7
 80130e6:	f103 0208 	add.w	r2, r3, #8
 80130ea:	e9d3 8900 	ldrd	r8, r9, [r3]
 80130ee:	920e      	str	r2, [sp, #56]	; 0x38
 80130f0:	2301      	movs	r3, #1
 80130f2:	f04f 0c00 	mov.w	ip, #0
 80130f6:	f88d c06f 	strb.w	ip, [sp, #111]	; 0x6f
 80130fa:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
 80130fe:	f1ba 0f00 	cmp.w	sl, #0
 8013102:	db03      	blt.n	801310c <_svfprintf_r+0x1e4>
 8013104:	9a07      	ldr	r2, [sp, #28]
 8013106:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 801310a:	9207      	str	r2, [sp, #28]
 801310c:	ea58 0209 	orrs.w	r2, r8, r9
 8013110:	f040 834c 	bne.w	80137ac <_svfprintf_r+0x884>
 8013114:	f1ba 0f00 	cmp.w	sl, #0
 8013118:	f000 8451 	beq.w	80139be <_svfprintf_r+0xa96>
 801311c:	2b01      	cmp	r3, #1
 801311e:	f000 834f 	beq.w	80137c0 <_svfprintf_r+0x898>
 8013122:	2b02      	cmp	r3, #2
 8013124:	f000 8490 	beq.w	8013a48 <_svfprintf_r+0xb20>
 8013128:	4639      	mov	r1, r7
 801312a:	ea4f 02d8 	mov.w	r2, r8, lsr #3
 801312e:	ea42 7249 	orr.w	r2, r2, r9, lsl #29
 8013132:	ea4f 00d9 	mov.w	r0, r9, lsr #3
 8013136:	f008 0307 	and.w	r3, r8, #7
 801313a:	4681      	mov	r9, r0
 801313c:	4690      	mov	r8, r2
 801313e:	3330      	adds	r3, #48	; 0x30
 8013140:	ea58 0209 	orrs.w	r2, r8, r9
 8013144:	f801 3d01 	strb.w	r3, [r1, #-1]!
 8013148:	d1ef      	bne.n	801312a <_svfprintf_r+0x202>
 801314a:	9a07      	ldr	r2, [sp, #28]
 801314c:	9110      	str	r1, [sp, #64]	; 0x40
 801314e:	07d2      	lsls	r2, r2, #31
 8013150:	f100 8544 	bmi.w	8013bdc <_svfprintf_r+0xcb4>
 8013154:	1a7b      	subs	r3, r7, r1
 8013156:	930d      	str	r3, [sp, #52]	; 0x34
 8013158:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801315a:	4592      	cmp	sl, r2
 801315c:	4653      	mov	r3, sl
 801315e:	bfb8      	it	lt
 8013160:	4613      	movlt	r3, r2
 8013162:	9309      	str	r3, [sp, #36]	; 0x24
 8013164:	2300      	movs	r3, #0
 8013166:	9312      	str	r3, [sp, #72]	; 0x48
 8013168:	f1bc 0f00 	cmp.w	ip, #0
 801316c:	d002      	beq.n	8013174 <_svfprintf_r+0x24c>
 801316e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013170:	3301      	adds	r3, #1
 8013172:	9309      	str	r3, [sp, #36]	; 0x24
 8013174:	9b07      	ldr	r3, [sp, #28]
 8013176:	f013 0302 	ands.w	r3, r3, #2
 801317a:	930f      	str	r3, [sp, #60]	; 0x3c
 801317c:	d002      	beq.n	8013184 <_svfprintf_r+0x25c>
 801317e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013180:	3302      	adds	r3, #2
 8013182:	9309      	str	r3, [sp, #36]	; 0x24
 8013184:	9b07      	ldr	r3, [sp, #28]
 8013186:	f013 0984 	ands.w	r9, r3, #132	; 0x84
 801318a:	f040 830c 	bne.w	80137a6 <_svfprintf_r+0x87e>
 801318e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013190:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013192:	ebc2 0803 	rsb	r8, r2, r3
 8013196:	f1b8 0f00 	cmp.w	r8, #0
 801319a:	f340 8304 	ble.w	80137a6 <_svfprintf_r+0x87e>
 801319e:	f1b8 0f10 	cmp.w	r8, #16
 80131a2:	9925      	ldr	r1, [sp, #148]	; 0x94
 80131a4:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80131a6:	f8df a544 	ldr.w	sl, [pc, #1348]	; 80136ec <_svfprintf_r+0x7c4>
 80131aa:	dd29      	ble.n	8013200 <_svfprintf_r+0x2d8>
 80131ac:	4653      	mov	r3, sl
 80131ae:	f04f 0b10 	mov.w	fp, #16
 80131b2:	46c2      	mov	sl, r8
 80131b4:	46a8      	mov	r8, r5
 80131b6:	461d      	mov	r5, r3
 80131b8:	e006      	b.n	80131c8 <_svfprintf_r+0x2a0>
 80131ba:	f1aa 0a10 	sub.w	sl, sl, #16
 80131be:	f1ba 0f10 	cmp.w	sl, #16
 80131c2:	f104 0408 	add.w	r4, r4, #8
 80131c6:	dd17      	ble.n	80131f8 <_svfprintf_r+0x2d0>
 80131c8:	3201      	adds	r2, #1
 80131ca:	3110      	adds	r1, #16
 80131cc:	2a07      	cmp	r2, #7
 80131ce:	9125      	str	r1, [sp, #148]	; 0x94
 80131d0:	9224      	str	r2, [sp, #144]	; 0x90
 80131d2:	e884 0820 	stmia.w	r4, {r5, fp}
 80131d6:	ddf0      	ble.n	80131ba <_svfprintf_r+0x292>
 80131d8:	9808      	ldr	r0, [sp, #32]
 80131da:	4631      	mov	r1, r6
 80131dc:	aa23      	add	r2, sp, #140	; 0x8c
 80131de:	f005 f84b 	bl	8018278 <__ssprint_r>
 80131e2:	2800      	cmp	r0, #0
 80131e4:	f47f af66 	bne.w	80130b4 <_svfprintf_r+0x18c>
 80131e8:	f1aa 0a10 	sub.w	sl, sl, #16
 80131ec:	f1ba 0f10 	cmp.w	sl, #16
 80131f0:	9925      	ldr	r1, [sp, #148]	; 0x94
 80131f2:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80131f4:	463c      	mov	r4, r7
 80131f6:	dce7      	bgt.n	80131c8 <_svfprintf_r+0x2a0>
 80131f8:	462b      	mov	r3, r5
 80131fa:	4645      	mov	r5, r8
 80131fc:	46d0      	mov	r8, sl
 80131fe:	469a      	mov	sl, r3
 8013200:	3201      	adds	r2, #1
 8013202:	eb08 0b01 	add.w	fp, r8, r1
 8013206:	2a07      	cmp	r2, #7
 8013208:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 801320c:	9224      	str	r2, [sp, #144]	; 0x90
 801320e:	f8c4 a000 	str.w	sl, [r4]
 8013212:	f8c4 8004 	str.w	r8, [r4, #4]
 8013216:	f300 847b 	bgt.w	8013b10 <_svfprintf_r+0xbe8>
 801321a:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
 801321e:	3408      	adds	r4, #8
 8013220:	f1bc 0f00 	cmp.w	ip, #0
 8013224:	d00f      	beq.n	8013246 <_svfprintf_r+0x31e>
 8013226:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8013228:	3301      	adds	r3, #1
 801322a:	f10b 0b01 	add.w	fp, fp, #1
 801322e:	f10d 016f 	add.w	r1, sp, #111	; 0x6f
 8013232:	2201      	movs	r2, #1
 8013234:	2b07      	cmp	r3, #7
 8013236:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 801323a:	9324      	str	r3, [sp, #144]	; 0x90
 801323c:	e884 0006 	stmia.w	r4, {r1, r2}
 8013240:	f300 83da 	bgt.w	80139f8 <_svfprintf_r+0xad0>
 8013244:	3408      	adds	r4, #8
 8013246:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013248:	b173      	cbz	r3, 8013268 <_svfprintf_r+0x340>
 801324a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801324c:	3301      	adds	r3, #1
 801324e:	f10b 0b02 	add.w	fp, fp, #2
 8013252:	a91c      	add	r1, sp, #112	; 0x70
 8013254:	2202      	movs	r2, #2
 8013256:	2b07      	cmp	r3, #7
 8013258:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 801325c:	9324      	str	r3, [sp, #144]	; 0x90
 801325e:	e884 0006 	stmia.w	r4, {r1, r2}
 8013262:	f300 83d5 	bgt.w	8013a10 <_svfprintf_r+0xae8>
 8013266:	3408      	adds	r4, #8
 8013268:	f1b9 0f80 	cmp.w	r9, #128	; 0x80
 801326c:	f000 8311 	beq.w	8013892 <_svfprintf_r+0x96a>
 8013270:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013272:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013274:	ebc2 0a03 	rsb	sl, r2, r3
 8013278:	f1ba 0f00 	cmp.w	sl, #0
 801327c:	dd3c      	ble.n	80132f8 <_svfprintf_r+0x3d0>
 801327e:	f1ba 0f10 	cmp.w	sl, #16
 8013282:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8013284:	f8df 9468 	ldr.w	r9, [pc, #1128]	; 80136f0 <_svfprintf_r+0x7c8>
 8013288:	dd2b      	ble.n	80132e2 <_svfprintf_r+0x3ba>
 801328a:	4649      	mov	r1, r9
 801328c:	465b      	mov	r3, fp
 801328e:	46a9      	mov	r9, r5
 8013290:	f04f 0810 	mov.w	r8, #16
 8013294:	f8dd b020 	ldr.w	fp, [sp, #32]
 8013298:	460d      	mov	r5, r1
 801329a:	e006      	b.n	80132aa <_svfprintf_r+0x382>
 801329c:	f1aa 0a10 	sub.w	sl, sl, #16
 80132a0:	f1ba 0f10 	cmp.w	sl, #16
 80132a4:	f104 0408 	add.w	r4, r4, #8
 80132a8:	dd17      	ble.n	80132da <_svfprintf_r+0x3b2>
 80132aa:	3201      	adds	r2, #1
 80132ac:	3310      	adds	r3, #16
 80132ae:	2a07      	cmp	r2, #7
 80132b0:	9325      	str	r3, [sp, #148]	; 0x94
 80132b2:	9224      	str	r2, [sp, #144]	; 0x90
 80132b4:	e884 0120 	stmia.w	r4, {r5, r8}
 80132b8:	ddf0      	ble.n	801329c <_svfprintf_r+0x374>
 80132ba:	4658      	mov	r0, fp
 80132bc:	4631      	mov	r1, r6
 80132be:	aa23      	add	r2, sp, #140	; 0x8c
 80132c0:	f004 ffda 	bl	8018278 <__ssprint_r>
 80132c4:	2800      	cmp	r0, #0
 80132c6:	f47f aef5 	bne.w	80130b4 <_svfprintf_r+0x18c>
 80132ca:	f1aa 0a10 	sub.w	sl, sl, #16
 80132ce:	f1ba 0f10 	cmp.w	sl, #16
 80132d2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80132d4:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80132d6:	463c      	mov	r4, r7
 80132d8:	dce7      	bgt.n	80132aa <_svfprintf_r+0x382>
 80132da:	469b      	mov	fp, r3
 80132dc:	462b      	mov	r3, r5
 80132de:	464d      	mov	r5, r9
 80132e0:	4699      	mov	r9, r3
 80132e2:	3201      	adds	r2, #1
 80132e4:	44d3      	add	fp, sl
 80132e6:	2a07      	cmp	r2, #7
 80132e8:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 80132ec:	9224      	str	r2, [sp, #144]	; 0x90
 80132ee:	e884 0600 	stmia.w	r4, {r9, sl}
 80132f2:	f300 8375 	bgt.w	80139e0 <_svfprintf_r+0xab8>
 80132f6:	3408      	adds	r4, #8
 80132f8:	9b07      	ldr	r3, [sp, #28]
 80132fa:	05d9      	lsls	r1, r3, #23
 80132fc:	f100 826c 	bmi.w	80137d8 <_svfprintf_r+0x8b0>
 8013300:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8013302:	990d      	ldr	r1, [sp, #52]	; 0x34
 8013304:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013306:	6022      	str	r2, [r4, #0]
 8013308:	3301      	adds	r3, #1
 801330a:	448b      	add	fp, r1
 801330c:	2b07      	cmp	r3, #7
 801330e:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8013312:	6061      	str	r1, [r4, #4]
 8013314:	9324      	str	r3, [sp, #144]	; 0x90
 8013316:	f300 8346 	bgt.w	80139a6 <_svfprintf_r+0xa7e>
 801331a:	3408      	adds	r4, #8
 801331c:	9b07      	ldr	r3, [sp, #28]
 801331e:	075a      	lsls	r2, r3, #29
 8013320:	d541      	bpl.n	80133a6 <_svfprintf_r+0x47e>
 8013322:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013324:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013326:	1a9d      	subs	r5, r3, r2
 8013328:	2d00      	cmp	r5, #0
 801332a:	dd3c      	ble.n	80133a6 <_svfprintf_r+0x47e>
 801332c:	2d10      	cmp	r5, #16
 801332e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8013330:	f8df a3b8 	ldr.w	sl, [pc, #952]	; 80136ec <_svfprintf_r+0x7c4>
 8013334:	dd23      	ble.n	801337e <_svfprintf_r+0x456>
 8013336:	f04f 0810 	mov.w	r8, #16
 801333a:	465a      	mov	r2, fp
 801333c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8013340:	e004      	b.n	801334c <_svfprintf_r+0x424>
 8013342:	3d10      	subs	r5, #16
 8013344:	2d10      	cmp	r5, #16
 8013346:	f104 0408 	add.w	r4, r4, #8
 801334a:	dd17      	ble.n	801337c <_svfprintf_r+0x454>
 801334c:	3301      	adds	r3, #1
 801334e:	3210      	adds	r2, #16
 8013350:	2b07      	cmp	r3, #7
 8013352:	9225      	str	r2, [sp, #148]	; 0x94
 8013354:	9324      	str	r3, [sp, #144]	; 0x90
 8013356:	f8c4 a000 	str.w	sl, [r4]
 801335a:	f8c4 8004 	str.w	r8, [r4, #4]
 801335e:	ddf0      	ble.n	8013342 <_svfprintf_r+0x41a>
 8013360:	4648      	mov	r0, r9
 8013362:	4631      	mov	r1, r6
 8013364:	aa23      	add	r2, sp, #140	; 0x8c
 8013366:	f004 ff87 	bl	8018278 <__ssprint_r>
 801336a:	2800      	cmp	r0, #0
 801336c:	f47f aea2 	bne.w	80130b4 <_svfprintf_r+0x18c>
 8013370:	3d10      	subs	r5, #16
 8013372:	2d10      	cmp	r5, #16
 8013374:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8013376:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8013378:	463c      	mov	r4, r7
 801337a:	dce7      	bgt.n	801334c <_svfprintf_r+0x424>
 801337c:	4693      	mov	fp, r2
 801337e:	3301      	adds	r3, #1
 8013380:	44ab      	add	fp, r5
 8013382:	2b07      	cmp	r3, #7
 8013384:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8013388:	9324      	str	r3, [sp, #144]	; 0x90
 801338a:	f8c4 a000 	str.w	sl, [r4]
 801338e:	6065      	str	r5, [r4, #4]
 8013390:	dd09      	ble.n	80133a6 <_svfprintf_r+0x47e>
 8013392:	9808      	ldr	r0, [sp, #32]
 8013394:	4631      	mov	r1, r6
 8013396:	aa23      	add	r2, sp, #140	; 0x8c
 8013398:	f004 ff6e 	bl	8018278 <__ssprint_r>
 801339c:	2800      	cmp	r0, #0
 801339e:	f47f ae89 	bne.w	80130b4 <_svfprintf_r+0x18c>
 80133a2:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 80133a6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80133a8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80133aa:	990c      	ldr	r1, [sp, #48]	; 0x30
 80133ac:	428a      	cmp	r2, r1
 80133ae:	bfac      	ite	ge
 80133b0:	189b      	addge	r3, r3, r2
 80133b2:	185b      	addlt	r3, r3, r1
 80133b4:	930b      	str	r3, [sp, #44]	; 0x2c
 80133b6:	f1bb 0f00 	cmp.w	fp, #0
 80133ba:	f47f ae73 	bne.w	80130a4 <_svfprintf_r+0x17c>
 80133be:	2300      	movs	r3, #0
 80133c0:	9324      	str	r3, [sp, #144]	; 0x90
 80133c2:	463c      	mov	r4, r7
 80133c4:	e5d5      	b.n	8012f72 <_svfprintf_r+0x4a>
 80133c6:	4619      	mov	r1, r3
 80133c8:	9807      	ldr	r0, [sp, #28]
 80133ca:	781d      	ldrb	r5, [r3, #0]
 80133cc:	f040 0004 	orr.w	r0, r0, #4
 80133d0:	9007      	str	r0, [sp, #28]
 80133d2:	e5fc      	b.n	8012fce <_svfprintf_r+0xa6>
 80133d4:	930a      	str	r3, [sp, #40]	; 0x28
 80133d6:	9b07      	ldr	r3, [sp, #28]
 80133d8:	f013 0320 	ands.w	r3, r3, #32
 80133dc:	f000 810e 	beq.w	80135fc <_svfprintf_r+0x6d4>
 80133e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80133e2:	f103 0907 	add.w	r9, r3, #7
 80133e6:	f029 0307 	bic.w	r3, r9, #7
 80133ea:	f103 0208 	add.w	r2, r3, #8
 80133ee:	e9d3 8900 	ldrd	r8, r9, [r3]
 80133f2:	920e      	str	r2, [sp, #56]	; 0x38
 80133f4:	2300      	movs	r3, #0
 80133f6:	e67c      	b.n	80130f2 <_svfprintf_r+0x1ca>
 80133f8:	781d      	ldrb	r5, [r3, #0]
 80133fa:	4619      	mov	r1, r3
 80133fc:	222b      	movs	r2, #43	; 0x2b
 80133fe:	e5e6      	b.n	8012fce <_svfprintf_r+0xa6>
 8013400:	781d      	ldrb	r5, [r3, #0]
 8013402:	2d2a      	cmp	r5, #42	; 0x2a
 8013404:	f103 0101 	add.w	r1, r3, #1
 8013408:	f000 87ad 	beq.w	8014366 <_svfprintf_r+0x143e>
 801340c:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
 8013410:	2809      	cmp	r0, #9
 8013412:	460b      	mov	r3, r1
 8013414:	f04f 0a00 	mov.w	sl, #0
 8013418:	f63f adda 	bhi.w	8012fd0 <_svfprintf_r+0xa8>
 801341c:	f813 5b01 	ldrb.w	r5, [r3], #1
 8013420:	eb0a 0a8a 	add.w	sl, sl, sl, lsl #2
 8013424:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8013428:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
 801342c:	2809      	cmp	r0, #9
 801342e:	d9f5      	bls.n	801341c <_svfprintf_r+0x4f4>
 8013430:	ea4a 7aea 	orr.w	sl, sl, sl, asr #31
 8013434:	e5cc      	b.n	8012fd0 <_svfprintf_r+0xa8>
 8013436:	930a      	str	r3, [sp, #40]	; 0x28
 8013438:	9b07      	ldr	r3, [sp, #28]
 801343a:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
 801343e:	069b      	lsls	r3, r3, #26
 8013440:	f140 80a1 	bpl.w	8013586 <_svfprintf_r+0x65e>
 8013444:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013446:	f103 0907 	add.w	r9, r3, #7
 801344a:	f029 0907 	bic.w	r9, r9, #7
 801344e:	e9d9 2300 	ldrd	r2, r3, [r9]
 8013452:	f109 0108 	add.w	r1, r9, #8
 8013456:	910e      	str	r1, [sp, #56]	; 0x38
 8013458:	4690      	mov	r8, r2
 801345a:	4699      	mov	r9, r3
 801345c:	2a00      	cmp	r2, #0
 801345e:	f173 0300 	sbcs.w	r3, r3, #0
 8013462:	f2c0 840b 	blt.w	8013c7c <_svfprintf_r+0xd54>
 8013466:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
 801346a:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
 801346e:	2301      	movs	r3, #1
 8013470:	e645      	b.n	80130fe <_svfprintf_r+0x1d6>
 8013472:	930a      	str	r3, [sp, #40]	; 0x28
 8013474:	4b9b      	ldr	r3, [pc, #620]	; (80136e4 <_svfprintf_r+0x7bc>)
 8013476:	9316      	str	r3, [sp, #88]	; 0x58
 8013478:	9b07      	ldr	r3, [sp, #28]
 801347a:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
 801347e:	069b      	lsls	r3, r3, #26
 8013480:	f140 80f3 	bpl.w	801366a <_svfprintf_r+0x742>
 8013484:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013486:	f103 0907 	add.w	r9, r3, #7
 801348a:	f029 0307 	bic.w	r3, r9, #7
 801348e:	e9d3 8900 	ldrd	r8, r9, [r3]
 8013492:	f103 0208 	add.w	r2, r3, #8
 8013496:	920e      	str	r2, [sp, #56]	; 0x38
 8013498:	9b07      	ldr	r3, [sp, #28]
 801349a:	07d9      	lsls	r1, r3, #31
 801349c:	f140 80f5 	bpl.w	801368a <_svfprintf_r+0x762>
 80134a0:	ea58 0309 	orrs.w	r3, r8, r9
 80134a4:	f000 80f1 	beq.w	801368a <_svfprintf_r+0x762>
 80134a8:	9a07      	ldr	r2, [sp, #28]
 80134aa:	f88d 5071 	strb.w	r5, [sp, #113]	; 0x71
 80134ae:	2330      	movs	r3, #48	; 0x30
 80134b0:	f042 0202 	orr.w	r2, r2, #2
 80134b4:	f88d 3070 	strb.w	r3, [sp, #112]	; 0x70
 80134b8:	9207      	str	r2, [sp, #28]
 80134ba:	2302      	movs	r3, #2
 80134bc:	e619      	b.n	80130f2 <_svfprintf_r+0x1ca>
 80134be:	781d      	ldrb	r5, [r3, #0]
 80134c0:	4619      	mov	r1, r3
 80134c2:	2a00      	cmp	r2, #0
 80134c4:	f47f ad83 	bne.w	8012fce <_svfprintf_r+0xa6>
 80134c8:	2220      	movs	r2, #32
 80134ca:	e580      	b.n	8012fce <_svfprintf_r+0xa6>
 80134cc:	9907      	ldr	r1, [sp, #28]
 80134ce:	f041 0120 	orr.w	r1, r1, #32
 80134d2:	9107      	str	r1, [sp, #28]
 80134d4:	781d      	ldrb	r5, [r3, #0]
 80134d6:	4619      	mov	r1, r3
 80134d8:	e579      	b.n	8012fce <_svfprintf_r+0xa6>
 80134da:	930a      	str	r3, [sp, #40]	; 0x28
 80134dc:	9b07      	ldr	r3, [sp, #28]
 80134de:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
 80134e2:	069a      	lsls	r2, r3, #26
 80134e4:	f140 84a1 	bpl.w	8013e2a <_svfprintf_r+0xf02>
 80134e8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80134ea:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80134ec:	ea4f 79e1 	mov.w	r9, r1, asr #31
 80134f0:	6813      	ldr	r3, [r2, #0]
 80134f2:	4608      	mov	r0, r1
 80134f4:	4688      	mov	r8, r1
 80134f6:	3204      	adds	r2, #4
 80134f8:	4649      	mov	r1, r9
 80134fa:	920e      	str	r2, [sp, #56]	; 0x38
 80134fc:	e9c3 0100 	strd	r0, r1, [r3]
 8013500:	e537      	b.n	8012f72 <_svfprintf_r+0x4a>
 8013502:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8013504:	930a      	str	r3, [sp, #40]	; 0x28
 8013506:	6813      	ldr	r3, [r2, #0]
 8013508:	9310      	str	r3, [sp, #64]	; 0x40
 801350a:	f04f 0b00 	mov.w	fp, #0
 801350e:	f88d b06f 	strb.w	fp, [sp, #111]	; 0x6f
 8013512:	f102 0904 	add.w	r9, r2, #4
 8013516:	2b00      	cmp	r3, #0
 8013518:	f000 863b 	beq.w	8014192 <_svfprintf_r+0x126a>
 801351c:	f1ba 0f00 	cmp.w	sl, #0
 8013520:	9810      	ldr	r0, [sp, #64]	; 0x40
 8013522:	f2c0 85e9 	blt.w	80140f8 <_svfprintf_r+0x11d0>
 8013526:	4659      	mov	r1, fp
 8013528:	4652      	mov	r2, sl
 801352a:	f004 f8ed 	bl	8017708 <memchr>
 801352e:	2800      	cmp	r0, #0
 8013530:	f000 866c 	beq.w	801420c <_svfprintf_r+0x12e4>
 8013534:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013536:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
 801353a:	1ac3      	subs	r3, r0, r3
 801353c:	930d      	str	r3, [sp, #52]	; 0x34
 801353e:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8013542:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013546:	9309      	str	r3, [sp, #36]	; 0x24
 8013548:	f8cd b048 	str.w	fp, [sp, #72]	; 0x48
 801354c:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
 8013550:	e60a      	b.n	8013168 <_svfprintf_r+0x240>
 8013552:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
 8013556:	2100      	movs	r1, #0
 8013558:	f813 5b01 	ldrb.w	r5, [r3], #1
 801355c:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8013560:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8013564:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
 8013568:	2809      	cmp	r0, #9
 801356a:	d9f5      	bls.n	8013558 <_svfprintf_r+0x630>
 801356c:	910c      	str	r1, [sp, #48]	; 0x30
 801356e:	e52f      	b.n	8012fd0 <_svfprintf_r+0xa8>
 8013570:	930a      	str	r3, [sp, #40]	; 0x28
 8013572:	9b07      	ldr	r3, [sp, #28]
 8013574:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
 8013578:	f043 0310 	orr.w	r3, r3, #16
 801357c:	9307      	str	r3, [sp, #28]
 801357e:	9b07      	ldr	r3, [sp, #28]
 8013580:	069b      	lsls	r3, r3, #26
 8013582:	f53f af5f 	bmi.w	8013444 <_svfprintf_r+0x51c>
 8013586:	9b07      	ldr	r3, [sp, #28]
 8013588:	06d8      	lsls	r0, r3, #27
 801358a:	f100 8368 	bmi.w	8013c5e <_svfprintf_r+0xd36>
 801358e:	9b07      	ldr	r3, [sp, #28]
 8013590:	0659      	lsls	r1, r3, #25
 8013592:	f140 8364 	bpl.w	8013c5e <_svfprintf_r+0xd36>
 8013596:	990e      	ldr	r1, [sp, #56]	; 0x38
 8013598:	f9b1 8000 	ldrsh.w	r8, [r1]
 801359c:	3104      	adds	r1, #4
 801359e:	ea4f 79e8 	mov.w	r9, r8, asr #31
 80135a2:	4642      	mov	r2, r8
 80135a4:	464b      	mov	r3, r9
 80135a6:	910e      	str	r1, [sp, #56]	; 0x38
 80135a8:	e758      	b.n	801345c <_svfprintf_r+0x534>
 80135aa:	781d      	ldrb	r5, [r3, #0]
 80135ac:	9907      	ldr	r1, [sp, #28]
 80135ae:	2d6c      	cmp	r5, #108	; 0x6c
 80135b0:	f000 84cb 	beq.w	8013f4a <_svfprintf_r+0x1022>
 80135b4:	f041 0110 	orr.w	r1, r1, #16
 80135b8:	9107      	str	r1, [sp, #28]
 80135ba:	4619      	mov	r1, r3
 80135bc:	e507      	b.n	8012fce <_svfprintf_r+0xa6>
 80135be:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80135c0:	6829      	ldr	r1, [r5, #0]
 80135c2:	910c      	str	r1, [sp, #48]	; 0x30
 80135c4:	4608      	mov	r0, r1
 80135c6:	2800      	cmp	r0, #0
 80135c8:	4629      	mov	r1, r5
 80135ca:	f101 0104 	add.w	r1, r1, #4
 80135ce:	f2c0 84b5 	blt.w	8013f3c <_svfprintf_r+0x1014>
 80135d2:	910e      	str	r1, [sp, #56]	; 0x38
 80135d4:	781d      	ldrb	r5, [r3, #0]
 80135d6:	4619      	mov	r1, r3
 80135d8:	e4f9      	b.n	8012fce <_svfprintf_r+0xa6>
 80135da:	9907      	ldr	r1, [sp, #28]
 80135dc:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 80135e0:	9107      	str	r1, [sp, #28]
 80135e2:	781d      	ldrb	r5, [r3, #0]
 80135e4:	4619      	mov	r1, r3
 80135e6:	e4f2      	b.n	8012fce <_svfprintf_r+0xa6>
 80135e8:	930a      	str	r3, [sp, #40]	; 0x28
 80135ea:	9b07      	ldr	r3, [sp, #28]
 80135ec:	f043 0310 	orr.w	r3, r3, #16
 80135f0:	9307      	str	r3, [sp, #28]
 80135f2:	9b07      	ldr	r3, [sp, #28]
 80135f4:	f013 0320 	ands.w	r3, r3, #32
 80135f8:	f47f aef2 	bne.w	80133e0 <_svfprintf_r+0x4b8>
 80135fc:	9a07      	ldr	r2, [sp, #28]
 80135fe:	f012 0210 	ands.w	r2, r2, #16
 8013602:	f040 8319 	bne.w	8013c38 <_svfprintf_r+0xd10>
 8013606:	9b07      	ldr	r3, [sp, #28]
 8013608:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 801360c:	f000 8314 	beq.w	8013c38 <_svfprintf_r+0xd10>
 8013610:	990e      	ldr	r1, [sp, #56]	; 0x38
 8013612:	4613      	mov	r3, r2
 8013614:	460a      	mov	r2, r1
 8013616:	3204      	adds	r2, #4
 8013618:	f8b1 8000 	ldrh.w	r8, [r1]
 801361c:	920e      	str	r2, [sp, #56]	; 0x38
 801361e:	f04f 0900 	mov.w	r9, #0
 8013622:	e566      	b.n	80130f2 <_svfprintf_r+0x1ca>
 8013624:	930a      	str	r3, [sp, #40]	; 0x28
 8013626:	9b07      	ldr	r3, [sp, #28]
 8013628:	f043 0310 	orr.w	r3, r3, #16
 801362c:	9307      	str	r3, [sp, #28]
 801362e:	9b07      	ldr	r3, [sp, #28]
 8013630:	0698      	lsls	r0, r3, #26
 8013632:	f53f ad53 	bmi.w	80130dc <_svfprintf_r+0x1b4>
 8013636:	9b07      	ldr	r3, [sp, #28]
 8013638:	06d9      	lsls	r1, r3, #27
 801363a:	f100 8306 	bmi.w	8013c4a <_svfprintf_r+0xd22>
 801363e:	9b07      	ldr	r3, [sp, #28]
 8013640:	065a      	lsls	r2, r3, #25
 8013642:	f140 8302 	bpl.w	8013c4a <_svfprintf_r+0xd22>
 8013646:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8013648:	f8b2 8000 	ldrh.w	r8, [r2]
 801364c:	3204      	adds	r2, #4
 801364e:	f04f 0900 	mov.w	r9, #0
 8013652:	2301      	movs	r3, #1
 8013654:	920e      	str	r2, [sp, #56]	; 0x38
 8013656:	e54c      	b.n	80130f2 <_svfprintf_r+0x1ca>
 8013658:	930a      	str	r3, [sp, #40]	; 0x28
 801365a:	4b23      	ldr	r3, [pc, #140]	; (80136e8 <_svfprintf_r+0x7c0>)
 801365c:	9316      	str	r3, [sp, #88]	; 0x58
 801365e:	9b07      	ldr	r3, [sp, #28]
 8013660:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
 8013664:	069b      	lsls	r3, r3, #26
 8013666:	f53f af0d 	bmi.w	8013484 <_svfprintf_r+0x55c>
 801366a:	9b07      	ldr	r3, [sp, #28]
 801366c:	06d8      	lsls	r0, r3, #27
 801366e:	f140 83cd 	bpl.w	8013e0c <_svfprintf_r+0xee4>
 8013672:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8013674:	4613      	mov	r3, r2
 8013676:	681b      	ldr	r3, [r3, #0]
 8013678:	4698      	mov	r8, r3
 801367a:	9b07      	ldr	r3, [sp, #28]
 801367c:	3204      	adds	r2, #4
 801367e:	07d9      	lsls	r1, r3, #31
 8013680:	920e      	str	r2, [sp, #56]	; 0x38
 8013682:	f04f 0900 	mov.w	r9, #0
 8013686:	f53f af0b 	bmi.w	80134a0 <_svfprintf_r+0x578>
 801368a:	2302      	movs	r3, #2
 801368c:	e531      	b.n	80130f2 <_svfprintf_r+0x1ca>
 801368e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8013690:	930a      	str	r3, [sp, #40]	; 0x28
 8013692:	680a      	ldr	r2, [r1, #0]
 8013694:	f88d 2098 	strb.w	r2, [sp, #152]	; 0x98
 8013698:	2300      	movs	r3, #0
 801369a:	2201      	movs	r2, #1
 801369c:	3104      	adds	r1, #4
 801369e:	469c      	mov	ip, r3
 80136a0:	9209      	str	r2, [sp, #36]	; 0x24
 80136a2:	910e      	str	r1, [sp, #56]	; 0x38
 80136a4:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 80136a8:	ab26      	add	r3, sp, #152	; 0x98
 80136aa:	f8cd c044 	str.w	ip, [sp, #68]	; 0x44
 80136ae:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
 80136b2:	920d      	str	r2, [sp, #52]	; 0x34
 80136b4:	9310      	str	r3, [sp, #64]	; 0x40
 80136b6:	e55d      	b.n	8013174 <_svfprintf_r+0x24c>
 80136b8:	9907      	ldr	r1, [sp, #28]
 80136ba:	f041 0108 	orr.w	r1, r1, #8
 80136be:	9107      	str	r1, [sp, #28]
 80136c0:	781d      	ldrb	r5, [r3, #0]
 80136c2:	4619      	mov	r1, r3
 80136c4:	e483      	b.n	8012fce <_svfprintf_r+0xa6>
 80136c6:	9907      	ldr	r1, [sp, #28]
 80136c8:	f041 0101 	orr.w	r1, r1, #1
 80136cc:	9107      	str	r1, [sp, #28]
 80136ce:	781d      	ldrb	r5, [r3, #0]
 80136d0:	4619      	mov	r1, r3
 80136d2:	e47c      	b.n	8012fce <_svfprintf_r+0xa6>
 80136d4:	9907      	ldr	r1, [sp, #28]
 80136d6:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80136da:	9107      	str	r1, [sp, #28]
 80136dc:	781d      	ldrb	r5, [r3, #0]
 80136de:	4619      	mov	r1, r3
 80136e0:	e475      	b.n	8012fce <_svfprintf_r+0xa6>
 80136e2:	bf00      	nop
 80136e4:	0802d6f4 	.word	0x0802d6f4
 80136e8:	0802d6e0 	.word	0x0802d6e0
 80136ec:	0802d6c0 	.word	0x0802d6c0
 80136f0:	0802d714 	.word	0x0802d714
 80136f4:	930a      	str	r3, [sp, #40]	; 0x28
 80136f6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80136f8:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
 80136fc:	f103 0907 	add.w	r9, r3, #7
 8013700:	f029 0307 	bic.w	r3, r9, #7
 8013704:	f103 0208 	add.w	r2, r3, #8
 8013708:	920e      	str	r2, [sp, #56]	; 0x38
 801370a:	681a      	ldr	r2, [r3, #0]
 801370c:	9214      	str	r2, [sp, #80]	; 0x50
 801370e:	685b      	ldr	r3, [r3, #4]
 8013710:	9315      	str	r3, [sp, #84]	; 0x54
 8013712:	9915      	ldr	r1, [sp, #84]	; 0x54
 8013714:	9814      	ldr	r0, [sp, #80]	; 0x50
 8013716:	f004 fd2f 	bl	8018178 <__fpclassifyd>
 801371a:	2801      	cmp	r0, #1
 801371c:	46d3      	mov	fp, sl
 801371e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8013720:	9915      	ldr	r1, [sp, #84]	; 0x54
 8013722:	f040 8359 	bne.w	8013dd8 <_svfprintf_r+0xeb0>
 8013726:	2200      	movs	r2, #0
 8013728:	2300      	movs	r3, #0
 801372a:	f7ed f9f1 	bl	8000b10 <__aeabi_dcmplt>
 801372e:	2800      	cmp	r0, #0
 8013730:	f040 8564 	bne.w	80141fc <_svfprintf_r+0x12d4>
 8013734:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
 8013738:	9b07      	ldr	r3, [sp, #28]
 801373a:	4abe      	ldr	r2, [pc, #760]	; (8013a34 <_svfprintf_r+0xb0c>)
 801373c:	f8df e300 	ldr.w	lr, [pc, #768]	; 8013a40 <_svfprintf_r+0xb18>
 8013740:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8013744:	9307      	str	r3, [sp, #28]
 8013746:	4613      	mov	r3, r2
 8013748:	2103      	movs	r1, #3
 801374a:	2000      	movs	r0, #0
 801374c:	2d47      	cmp	r5, #71	; 0x47
 801374e:	bfd8      	it	le
 8013750:	4673      	movle	r3, lr
 8013752:	9109      	str	r1, [sp, #36]	; 0x24
 8013754:	9011      	str	r0, [sp, #68]	; 0x44
 8013756:	9310      	str	r3, [sp, #64]	; 0x40
 8013758:	910d      	str	r1, [sp, #52]	; 0x34
 801375a:	9012      	str	r0, [sp, #72]	; 0x48
 801375c:	e504      	b.n	8013168 <_svfprintf_r+0x240>
 801375e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013760:	9907      	ldr	r1, [sp, #28]
 8013762:	930a      	str	r3, [sp, #40]	; 0x28
 8013764:	2230      	movs	r2, #48	; 0x30
 8013766:	6803      	ldr	r3, [r0, #0]
 8013768:	f88d 2070 	strb.w	r2, [sp, #112]	; 0x70
 801376c:	4602      	mov	r2, r0
 801376e:	2578      	movs	r5, #120	; 0x78
 8013770:	f041 0102 	orr.w	r1, r1, #2
 8013774:	3204      	adds	r2, #4
 8013776:	4698      	mov	r8, r3
 8013778:	4baf      	ldr	r3, [pc, #700]	; (8013a38 <_svfprintf_r+0xb10>)
 801377a:	9316      	str	r3, [sp, #88]	; 0x58
 801377c:	9107      	str	r1, [sp, #28]
 801377e:	920e      	str	r2, [sp, #56]	; 0x38
 8013780:	f04f 0900 	mov.w	r9, #0
 8013784:	f88d 5071 	strb.w	r5, [sp, #113]	; 0x71
 8013788:	2302      	movs	r3, #2
 801378a:	e4b2      	b.n	80130f2 <_svfprintf_r+0x1ca>
 801378c:	930a      	str	r3, [sp, #40]	; 0x28
 801378e:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
 8013792:	2d00      	cmp	r5, #0
 8013794:	f000 83c6 	beq.w	8013f24 <_svfprintf_r+0xffc>
 8013798:	2300      	movs	r3, #0
 801379a:	2201      	movs	r2, #1
 801379c:	469c      	mov	ip, r3
 801379e:	9209      	str	r2, [sp, #36]	; 0x24
 80137a0:	f88d 5098 	strb.w	r5, [sp, #152]	; 0x98
 80137a4:	e77e      	b.n	80136a4 <_svfprintf_r+0x77c>
 80137a6:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 80137aa:	e539      	b.n	8013220 <_svfprintf_r+0x2f8>
 80137ac:	2b01      	cmp	r3, #1
 80137ae:	f47f acb8 	bne.w	8013122 <_svfprintf_r+0x1fa>
 80137b2:	f1b9 0f00 	cmp.w	r9, #0
 80137b6:	bf08      	it	eq
 80137b8:	f1b8 0f0a 	cmpeq.w	r8, #10
 80137bc:	f080 821c 	bcs.w	8013bf8 <_svfprintf_r+0xcd0>
 80137c0:	f50d 7b80 	add.w	fp, sp, #256	; 0x100
 80137c4:	f108 0830 	add.w	r8, r8, #48	; 0x30
 80137c8:	f80b 8d41 	strb.w	r8, [fp, #-65]!
 80137cc:	ebcb 0307 	rsb	r3, fp, r7
 80137d0:	930d      	str	r3, [sp, #52]	; 0x34
 80137d2:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 80137d6:	e4bf      	b.n	8013158 <_svfprintf_r+0x230>
 80137d8:	2d65      	cmp	r5, #101	; 0x65
 80137da:	f340 80a0 	ble.w	801391e <_svfprintf_r+0x9f6>
 80137de:	9814      	ldr	r0, [sp, #80]	; 0x50
 80137e0:	9915      	ldr	r1, [sp, #84]	; 0x54
 80137e2:	2200      	movs	r2, #0
 80137e4:	2300      	movs	r3, #0
 80137e6:	f7ed f989 	bl	8000afc <__aeabi_dcmpeq>
 80137ea:	2800      	cmp	r0, #0
 80137ec:	f000 8145 	beq.w	8013a7a <_svfprintf_r+0xb52>
 80137f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80137f2:	4a92      	ldr	r2, [pc, #584]	; (8013a3c <_svfprintf_r+0xb14>)
 80137f4:	6022      	str	r2, [r4, #0]
 80137f6:	3301      	adds	r3, #1
 80137f8:	f10b 0b01 	add.w	fp, fp, #1
 80137fc:	2201      	movs	r2, #1
 80137fe:	2b07      	cmp	r3, #7
 8013800:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8013804:	9324      	str	r3, [sp, #144]	; 0x90
 8013806:	6062      	str	r2, [r4, #4]
 8013808:	f300 8334 	bgt.w	8013e74 <_svfprintf_r+0xf4c>
 801380c:	3408      	adds	r4, #8
 801380e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8013810:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013812:	4293      	cmp	r3, r2
 8013814:	db03      	blt.n	801381e <_svfprintf_r+0x8f6>
 8013816:	9b07      	ldr	r3, [sp, #28]
 8013818:	07da      	lsls	r2, r3, #31
 801381a:	f57f ad7f 	bpl.w	801331c <_svfprintf_r+0x3f4>
 801381e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8013820:	9918      	ldr	r1, [sp, #96]	; 0x60
 8013822:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8013824:	6022      	str	r2, [r4, #0]
 8013826:	3301      	adds	r3, #1
 8013828:	448b      	add	fp, r1
 801382a:	2b07      	cmp	r3, #7
 801382c:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8013830:	6061      	str	r1, [r4, #4]
 8013832:	9324      	str	r3, [sp, #144]	; 0x90
 8013834:	f300 8390 	bgt.w	8013f58 <_svfprintf_r+0x1030>
 8013838:	3408      	adds	r4, #8
 801383a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801383c:	1e5d      	subs	r5, r3, #1
 801383e:	2d00      	cmp	r5, #0
 8013840:	f77f ad6c 	ble.w	801331c <_svfprintf_r+0x3f4>
 8013844:	2d10      	cmp	r5, #16
 8013846:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8013848:	f8df 91f8 	ldr.w	r9, [pc, #504]	; 8013a44 <_svfprintf_r+0xb1c>
 801384c:	f340 81ba 	ble.w	8013bc4 <_svfprintf_r+0xc9c>
 8013850:	f04f 0810 	mov.w	r8, #16
 8013854:	465a      	mov	r2, fp
 8013856:	f8dd a020 	ldr.w	sl, [sp, #32]
 801385a:	e004      	b.n	8013866 <_svfprintf_r+0x93e>
 801385c:	3408      	adds	r4, #8
 801385e:	3d10      	subs	r5, #16
 8013860:	2d10      	cmp	r5, #16
 8013862:	f340 81ae 	ble.w	8013bc2 <_svfprintf_r+0xc9a>
 8013866:	3301      	adds	r3, #1
 8013868:	3210      	adds	r2, #16
 801386a:	2b07      	cmp	r3, #7
 801386c:	9225      	str	r2, [sp, #148]	; 0x94
 801386e:	9324      	str	r3, [sp, #144]	; 0x90
 8013870:	f8c4 9000 	str.w	r9, [r4]
 8013874:	f8c4 8004 	str.w	r8, [r4, #4]
 8013878:	ddf0      	ble.n	801385c <_svfprintf_r+0x934>
 801387a:	4650      	mov	r0, sl
 801387c:	4631      	mov	r1, r6
 801387e:	aa23      	add	r2, sp, #140	; 0x8c
 8013880:	f004 fcfa 	bl	8018278 <__ssprint_r>
 8013884:	2800      	cmp	r0, #0
 8013886:	f47f ac15 	bne.w	80130b4 <_svfprintf_r+0x18c>
 801388a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801388c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801388e:	463c      	mov	r4, r7
 8013890:	e7e5      	b.n	801385e <_svfprintf_r+0x936>
 8013892:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013894:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013896:	ebc2 0a03 	rsb	sl, r2, r3
 801389a:	f1ba 0f00 	cmp.w	sl, #0
 801389e:	f77f ace7 	ble.w	8013270 <_svfprintf_r+0x348>
 80138a2:	f1ba 0f10 	cmp.w	sl, #16
 80138a6:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80138a8:	f8df 9198 	ldr.w	r9, [pc, #408]	; 8013a44 <_svfprintf_r+0xb1c>
 80138ac:	dd2b      	ble.n	8013906 <_svfprintf_r+0x9de>
 80138ae:	4649      	mov	r1, r9
 80138b0:	465b      	mov	r3, fp
 80138b2:	46a9      	mov	r9, r5
 80138b4:	f04f 0810 	mov.w	r8, #16
 80138b8:	f8dd b020 	ldr.w	fp, [sp, #32]
 80138bc:	460d      	mov	r5, r1
 80138be:	e006      	b.n	80138ce <_svfprintf_r+0x9a6>
 80138c0:	f1aa 0a10 	sub.w	sl, sl, #16
 80138c4:	f1ba 0f10 	cmp.w	sl, #16
 80138c8:	f104 0408 	add.w	r4, r4, #8
 80138cc:	dd17      	ble.n	80138fe <_svfprintf_r+0x9d6>
 80138ce:	3201      	adds	r2, #1
 80138d0:	3310      	adds	r3, #16
 80138d2:	2a07      	cmp	r2, #7
 80138d4:	9325      	str	r3, [sp, #148]	; 0x94
 80138d6:	9224      	str	r2, [sp, #144]	; 0x90
 80138d8:	e884 0120 	stmia.w	r4, {r5, r8}
 80138dc:	ddf0      	ble.n	80138c0 <_svfprintf_r+0x998>
 80138de:	4658      	mov	r0, fp
 80138e0:	4631      	mov	r1, r6
 80138e2:	aa23      	add	r2, sp, #140	; 0x8c
 80138e4:	f004 fcc8 	bl	8018278 <__ssprint_r>
 80138e8:	2800      	cmp	r0, #0
 80138ea:	f47f abe3 	bne.w	80130b4 <_svfprintf_r+0x18c>
 80138ee:	f1aa 0a10 	sub.w	sl, sl, #16
 80138f2:	f1ba 0f10 	cmp.w	sl, #16
 80138f6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80138f8:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80138fa:	463c      	mov	r4, r7
 80138fc:	dce7      	bgt.n	80138ce <_svfprintf_r+0x9a6>
 80138fe:	469b      	mov	fp, r3
 8013900:	462b      	mov	r3, r5
 8013902:	464d      	mov	r5, r9
 8013904:	4699      	mov	r9, r3
 8013906:	3201      	adds	r2, #1
 8013908:	44d3      	add	fp, sl
 801390a:	2a07      	cmp	r2, #7
 801390c:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8013910:	9224      	str	r2, [sp, #144]	; 0x90
 8013912:	e884 0600 	stmia.w	r4, {r9, sl}
 8013916:	f300 8252 	bgt.w	8013dbe <_svfprintf_r+0xe96>
 801391a:	3408      	adds	r4, #8
 801391c:	e4a8      	b.n	8013270 <_svfprintf_r+0x348>
 801391e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8013920:	9d24      	ldr	r5, [sp, #144]	; 0x90
 8013922:	2b01      	cmp	r3, #1
 8013924:	f340 8220 	ble.w	8013d68 <_svfprintf_r+0xe40>
 8013928:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801392a:	6023      	str	r3, [r4, #0]
 801392c:	3501      	adds	r5, #1
 801392e:	f10b 0301 	add.w	r3, fp, #1
 8013932:	2201      	movs	r2, #1
 8013934:	2d07      	cmp	r5, #7
 8013936:	9325      	str	r3, [sp, #148]	; 0x94
 8013938:	9524      	str	r5, [sp, #144]	; 0x90
 801393a:	6062      	str	r2, [r4, #4]
 801393c:	f300 8226 	bgt.w	8013d8c <_svfprintf_r+0xe64>
 8013940:	3408      	adds	r4, #8
 8013942:	9918      	ldr	r1, [sp, #96]	; 0x60
 8013944:	6061      	str	r1, [r4, #4]
 8013946:	3501      	adds	r5, #1
 8013948:	eb03 0b01 	add.w	fp, r3, r1
 801394c:	2d07      	cmp	r5, #7
 801394e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8013950:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8013954:	9524      	str	r5, [sp, #144]	; 0x90
 8013956:	6023      	str	r3, [r4, #0]
 8013958:	f300 8224 	bgt.w	8013da4 <_svfprintf_r+0xe7c>
 801395c:	3408      	adds	r4, #8
 801395e:	2300      	movs	r3, #0
 8013960:	9814      	ldr	r0, [sp, #80]	; 0x50
 8013962:	9915      	ldr	r1, [sp, #84]	; 0x54
 8013964:	2200      	movs	r2, #0
 8013966:	f7ed f8c9 	bl	8000afc <__aeabi_dcmpeq>
 801396a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801396c:	2800      	cmp	r0, #0
 801396e:	f040 80de 	bne.w	8013b2e <_svfprintf_r+0xc06>
 8013972:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013974:	3b01      	subs	r3, #1
 8013976:	3501      	adds	r5, #1
 8013978:	3201      	adds	r2, #1
 801397a:	449b      	add	fp, r3
 801397c:	2d07      	cmp	r5, #7
 801397e:	9524      	str	r5, [sp, #144]	; 0x90
 8013980:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8013984:	6022      	str	r2, [r4, #0]
 8013986:	6063      	str	r3, [r4, #4]
 8013988:	f300 810e 	bgt.w	8013ba8 <_svfprintf_r+0xc80>
 801398c:	3408      	adds	r4, #8
 801398e:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8013990:	6062      	str	r2, [r4, #4]
 8013992:	3501      	adds	r5, #1
 8013994:	4493      	add	fp, r2
 8013996:	ab1f      	add	r3, sp, #124	; 0x7c
 8013998:	2d07      	cmp	r5, #7
 801399a:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 801399e:	9524      	str	r5, [sp, #144]	; 0x90
 80139a0:	6023      	str	r3, [r4, #0]
 80139a2:	f77f acba 	ble.w	801331a <_svfprintf_r+0x3f2>
 80139a6:	9808      	ldr	r0, [sp, #32]
 80139a8:	4631      	mov	r1, r6
 80139aa:	aa23      	add	r2, sp, #140	; 0x8c
 80139ac:	f004 fc64 	bl	8018278 <__ssprint_r>
 80139b0:	2800      	cmp	r0, #0
 80139b2:	f47f ab7f 	bne.w	80130b4 <_svfprintf_r+0x18c>
 80139b6:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 80139ba:	463c      	mov	r4, r7
 80139bc:	e4ae      	b.n	801331c <_svfprintf_r+0x3f4>
 80139be:	2b00      	cmp	r3, #0
 80139c0:	d132      	bne.n	8013a28 <_svfprintf_r+0xb00>
 80139c2:	9b07      	ldr	r3, [sp, #28]
 80139c4:	07d8      	lsls	r0, r3, #31
 80139c6:	d52f      	bpl.n	8013a28 <_svfprintf_r+0xb00>
 80139c8:	f50d 7b80 	add.w	fp, sp, #256	; 0x100
 80139cc:	2330      	movs	r3, #48	; 0x30
 80139ce:	f80b 3d41 	strb.w	r3, [fp, #-65]!
 80139d2:	ebcb 0307 	rsb	r3, fp, r7
 80139d6:	930d      	str	r3, [sp, #52]	; 0x34
 80139d8:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 80139dc:	f7ff bbbc 	b.w	8013158 <_svfprintf_r+0x230>
 80139e0:	9808      	ldr	r0, [sp, #32]
 80139e2:	4631      	mov	r1, r6
 80139e4:	aa23      	add	r2, sp, #140	; 0x8c
 80139e6:	f004 fc47 	bl	8018278 <__ssprint_r>
 80139ea:	2800      	cmp	r0, #0
 80139ec:	f47f ab62 	bne.w	80130b4 <_svfprintf_r+0x18c>
 80139f0:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 80139f4:	463c      	mov	r4, r7
 80139f6:	e47f      	b.n	80132f8 <_svfprintf_r+0x3d0>
 80139f8:	9808      	ldr	r0, [sp, #32]
 80139fa:	4631      	mov	r1, r6
 80139fc:	aa23      	add	r2, sp, #140	; 0x8c
 80139fe:	f004 fc3b 	bl	8018278 <__ssprint_r>
 8013a02:	2800      	cmp	r0, #0
 8013a04:	f47f ab56 	bne.w	80130b4 <_svfprintf_r+0x18c>
 8013a08:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 8013a0c:	463c      	mov	r4, r7
 8013a0e:	e41a      	b.n	8013246 <_svfprintf_r+0x31e>
 8013a10:	9808      	ldr	r0, [sp, #32]
 8013a12:	4631      	mov	r1, r6
 8013a14:	aa23      	add	r2, sp, #140	; 0x8c
 8013a16:	f004 fc2f 	bl	8018278 <__ssprint_r>
 8013a1a:	2800      	cmp	r0, #0
 8013a1c:	f47f ab4a 	bne.w	80130b4 <_svfprintf_r+0x18c>
 8013a20:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 8013a24:	463c      	mov	r4, r7
 8013a26:	e41f      	b.n	8013268 <_svfprintf_r+0x340>
 8013a28:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 8013a2c:	9710      	str	r7, [sp, #64]	; 0x40
 8013a2e:	f7ff bb93 	b.w	8013158 <_svfprintf_r+0x230>
 8013a32:	bf00      	nop
 8013a34:	0802d6d4 	.word	0x0802d6d4
 8013a38:	0802d6f4 	.word	0x0802d6f4
 8013a3c:	0802d710 	.word	0x0802d710
 8013a40:	0802d6d0 	.word	0x0802d6d0
 8013a44:	0802d714 	.word	0x0802d714
 8013a48:	9816      	ldr	r0, [sp, #88]	; 0x58
 8013a4a:	46bb      	mov	fp, r7
 8013a4c:	ea4f 1318 	mov.w	r3, r8, lsr #4
 8013a50:	f008 010f 	and.w	r1, r8, #15
 8013a54:	ea43 7309 	orr.w	r3, r3, r9, lsl #28
 8013a58:	ea4f 1219 	mov.w	r2, r9, lsr #4
 8013a5c:	4698      	mov	r8, r3
 8013a5e:	4691      	mov	r9, r2
 8013a60:	5c43      	ldrb	r3, [r0, r1]
 8013a62:	f80b 3d01 	strb.w	r3, [fp, #-1]!
 8013a66:	ea58 0309 	orrs.w	r3, r8, r9
 8013a6a:	d1ef      	bne.n	8013a4c <_svfprintf_r+0xb24>
 8013a6c:	465b      	mov	r3, fp
 8013a6e:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 8013a72:	1afb      	subs	r3, r7, r3
 8013a74:	930d      	str	r3, [sp, #52]	; 0x34
 8013a76:	f7ff bb6f 	b.w	8013158 <_svfprintf_r+0x230>
 8013a7a:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8013a7c:	2d00      	cmp	r5, #0
 8013a7e:	f340 8205 	ble.w	8013e8c <_svfprintf_r+0xf64>
 8013a82:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013a84:	9912      	ldr	r1, [sp, #72]	; 0x48
 8013a86:	428a      	cmp	r2, r1
 8013a88:	4613      	mov	r3, r2
 8013a8a:	bfa8      	it	ge
 8013a8c:	460b      	movge	r3, r1
 8013a8e:	461d      	mov	r5, r3
 8013a90:	9910      	ldr	r1, [sp, #64]	; 0x40
 8013a92:	2d00      	cmp	r5, #0
 8013a94:	eb01 0a02 	add.w	sl, r1, r2
 8013a98:	dd0b      	ble.n	8013ab2 <_svfprintf_r+0xb8a>
 8013a9a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8013a9c:	6021      	str	r1, [r4, #0]
 8013a9e:	3301      	adds	r3, #1
 8013aa0:	44ab      	add	fp, r5
 8013aa2:	2b07      	cmp	r3, #7
 8013aa4:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8013aa8:	6065      	str	r5, [r4, #4]
 8013aaa:	9324      	str	r3, [sp, #144]	; 0x90
 8013aac:	f300 834d 	bgt.w	801414a <_svfprintf_r+0x1222>
 8013ab0:	3408      	adds	r4, #8
 8013ab2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013ab4:	2d00      	cmp	r5, #0
 8013ab6:	bfa8      	it	ge
 8013ab8:	1b5b      	subge	r3, r3, r5
 8013aba:	2b00      	cmp	r3, #0
 8013abc:	461d      	mov	r5, r3
 8013abe:	f340 80f5 	ble.w	8013cac <_svfprintf_r+0xd84>
 8013ac2:	2d10      	cmp	r5, #16
 8013ac4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8013ac6:	f8df 95f4 	ldr.w	r9, [pc, #1524]	; 80140bc <_svfprintf_r+0x1194>
 8013aca:	f340 81c6 	ble.w	8013e5a <_svfprintf_r+0xf32>
 8013ace:	465a      	mov	r2, fp
 8013ad0:	f04f 0810 	mov.w	r8, #16
 8013ad4:	f8dd b020 	ldr.w	fp, [sp, #32]
 8013ad8:	e004      	b.n	8013ae4 <_svfprintf_r+0xbbc>
 8013ada:	3408      	adds	r4, #8
 8013adc:	3d10      	subs	r5, #16
 8013ade:	2d10      	cmp	r5, #16
 8013ae0:	f340 81ba 	ble.w	8013e58 <_svfprintf_r+0xf30>
 8013ae4:	3301      	adds	r3, #1
 8013ae6:	3210      	adds	r2, #16
 8013ae8:	2b07      	cmp	r3, #7
 8013aea:	9225      	str	r2, [sp, #148]	; 0x94
 8013aec:	9324      	str	r3, [sp, #144]	; 0x90
 8013aee:	f8c4 9000 	str.w	r9, [r4]
 8013af2:	f8c4 8004 	str.w	r8, [r4, #4]
 8013af6:	ddf0      	ble.n	8013ada <_svfprintf_r+0xbb2>
 8013af8:	4658      	mov	r0, fp
 8013afa:	4631      	mov	r1, r6
 8013afc:	aa23      	add	r2, sp, #140	; 0x8c
 8013afe:	f004 fbbb 	bl	8018278 <__ssprint_r>
 8013b02:	2800      	cmp	r0, #0
 8013b04:	f47f aad6 	bne.w	80130b4 <_svfprintf_r+0x18c>
 8013b08:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8013b0a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8013b0c:	463c      	mov	r4, r7
 8013b0e:	e7e5      	b.n	8013adc <_svfprintf_r+0xbb4>
 8013b10:	9808      	ldr	r0, [sp, #32]
 8013b12:	4631      	mov	r1, r6
 8013b14:	aa23      	add	r2, sp, #140	; 0x8c
 8013b16:	f004 fbaf 	bl	8018278 <__ssprint_r>
 8013b1a:	2800      	cmp	r0, #0
 8013b1c:	f47f aaca 	bne.w	80130b4 <_svfprintf_r+0x18c>
 8013b20:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
 8013b24:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 8013b28:	463c      	mov	r4, r7
 8013b2a:	f7ff bb79 	b.w	8013220 <_svfprintf_r+0x2f8>
 8013b2e:	f103 38ff 	add.w	r8, r3, #4294967295
 8013b32:	f1b8 0f00 	cmp.w	r8, #0
 8013b36:	f77f af2a 	ble.w	801398e <_svfprintf_r+0xa66>
 8013b3a:	f1b8 0f10 	cmp.w	r8, #16
 8013b3e:	f8df 957c 	ldr.w	r9, [pc, #1404]	; 80140bc <_svfprintf_r+0x1194>
 8013b42:	dd25      	ble.n	8013b90 <_svfprintf_r+0xc68>
 8013b44:	465b      	mov	r3, fp
 8013b46:	f04f 0a10 	mov.w	sl, #16
 8013b4a:	f8dd b020 	ldr.w	fp, [sp, #32]
 8013b4e:	e006      	b.n	8013b5e <_svfprintf_r+0xc36>
 8013b50:	f1a8 0810 	sub.w	r8, r8, #16
 8013b54:	f1b8 0f10 	cmp.w	r8, #16
 8013b58:	f104 0408 	add.w	r4, r4, #8
 8013b5c:	dd17      	ble.n	8013b8e <_svfprintf_r+0xc66>
 8013b5e:	3501      	adds	r5, #1
 8013b60:	3310      	adds	r3, #16
 8013b62:	2d07      	cmp	r5, #7
 8013b64:	9325      	str	r3, [sp, #148]	; 0x94
 8013b66:	9524      	str	r5, [sp, #144]	; 0x90
 8013b68:	e884 0600 	stmia.w	r4, {r9, sl}
 8013b6c:	ddf0      	ble.n	8013b50 <_svfprintf_r+0xc28>
 8013b6e:	4658      	mov	r0, fp
 8013b70:	4631      	mov	r1, r6
 8013b72:	aa23      	add	r2, sp, #140	; 0x8c
 8013b74:	f004 fb80 	bl	8018278 <__ssprint_r>
 8013b78:	2800      	cmp	r0, #0
 8013b7a:	f47f aa9b 	bne.w	80130b4 <_svfprintf_r+0x18c>
 8013b7e:	f1a8 0810 	sub.w	r8, r8, #16
 8013b82:	f1b8 0f10 	cmp.w	r8, #16
 8013b86:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8013b88:	9d24      	ldr	r5, [sp, #144]	; 0x90
 8013b8a:	463c      	mov	r4, r7
 8013b8c:	dce7      	bgt.n	8013b5e <_svfprintf_r+0xc36>
 8013b8e:	469b      	mov	fp, r3
 8013b90:	3501      	adds	r5, #1
 8013b92:	44c3      	add	fp, r8
 8013b94:	2d07      	cmp	r5, #7
 8013b96:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8013b9a:	9524      	str	r5, [sp, #144]	; 0x90
 8013b9c:	f8c4 9000 	str.w	r9, [r4]
 8013ba0:	f8c4 8004 	str.w	r8, [r4, #4]
 8013ba4:	f77f aef2 	ble.w	801398c <_svfprintf_r+0xa64>
 8013ba8:	9808      	ldr	r0, [sp, #32]
 8013baa:	4631      	mov	r1, r6
 8013bac:	aa23      	add	r2, sp, #140	; 0x8c
 8013bae:	f004 fb63 	bl	8018278 <__ssprint_r>
 8013bb2:	2800      	cmp	r0, #0
 8013bb4:	f47f aa7e 	bne.w	80130b4 <_svfprintf_r+0x18c>
 8013bb8:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 8013bbc:	9d24      	ldr	r5, [sp, #144]	; 0x90
 8013bbe:	463c      	mov	r4, r7
 8013bc0:	e6e5      	b.n	801398e <_svfprintf_r+0xa66>
 8013bc2:	4693      	mov	fp, r2
 8013bc4:	3301      	adds	r3, #1
 8013bc6:	44ab      	add	fp, r5
 8013bc8:	2b07      	cmp	r3, #7
 8013bca:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8013bce:	9324      	str	r3, [sp, #144]	; 0x90
 8013bd0:	f8c4 9000 	str.w	r9, [r4]
 8013bd4:	6065      	str	r5, [r4, #4]
 8013bd6:	f77f aba0 	ble.w	801331a <_svfprintf_r+0x3f2>
 8013bda:	e6e4      	b.n	80139a6 <_svfprintf_r+0xa7e>
 8013bdc:	2b30      	cmp	r3, #48	; 0x30
 8013bde:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013be0:	f43f af47 	beq.w	8013a72 <_svfprintf_r+0xb4a>
 8013be4:	3b01      	subs	r3, #1
 8013be6:	461a      	mov	r2, r3
 8013be8:	9310      	str	r3, [sp, #64]	; 0x40
 8013bea:	1aba      	subs	r2, r7, r2
 8013bec:	2330      	movs	r3, #48	; 0x30
 8013bee:	920d      	str	r2, [sp, #52]	; 0x34
 8013bf0:	f801 3c01 	strb.w	r3, [r1, #-1]
 8013bf4:	f7ff bab0 	b.w	8013158 <_svfprintf_r+0x230>
 8013bf8:	46bb      	mov	fp, r7
 8013bfa:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
 8013bfe:	4640      	mov	r0, r8
 8013c00:	4649      	mov	r1, r9
 8013c02:	220a      	movs	r2, #10
 8013c04:	2300      	movs	r3, #0
 8013c06:	f7ec ffd3 	bl	8000bb0 <__aeabi_uldivmod>
 8013c0a:	3230      	adds	r2, #48	; 0x30
 8013c0c:	4640      	mov	r0, r8
 8013c0e:	4649      	mov	r1, r9
 8013c10:	f80b 2d01 	strb.w	r2, [fp, #-1]!
 8013c14:	2300      	movs	r3, #0
 8013c16:	220a      	movs	r2, #10
 8013c18:	f7ec ffca 	bl	8000bb0 <__aeabi_uldivmod>
 8013c1c:	4680      	mov	r8, r0
 8013c1e:	4689      	mov	r9, r1
 8013c20:	ea58 0309 	orrs.w	r3, r8, r9
 8013c24:	d1eb      	bne.n	8013bfe <_svfprintf_r+0xcd6>
 8013c26:	465b      	mov	r3, fp
 8013c28:	1afb      	subs	r3, r7, r3
 8013c2a:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
 8013c2e:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 8013c32:	930d      	str	r3, [sp, #52]	; 0x34
 8013c34:	f7ff ba90 	b.w	8013158 <_svfprintf_r+0x230>
 8013c38:	990e      	ldr	r1, [sp, #56]	; 0x38
 8013c3a:	680a      	ldr	r2, [r1, #0]
 8013c3c:	3104      	adds	r1, #4
 8013c3e:	910e      	str	r1, [sp, #56]	; 0x38
 8013c40:	4690      	mov	r8, r2
 8013c42:	f04f 0900 	mov.w	r9, #0
 8013c46:	f7ff ba54 	b.w	80130f2 <_svfprintf_r+0x1ca>
 8013c4a:	990e      	ldr	r1, [sp, #56]	; 0x38
 8013c4c:	680a      	ldr	r2, [r1, #0]
 8013c4e:	3104      	adds	r1, #4
 8013c50:	2301      	movs	r3, #1
 8013c52:	910e      	str	r1, [sp, #56]	; 0x38
 8013c54:	4690      	mov	r8, r2
 8013c56:	f04f 0900 	mov.w	r9, #0
 8013c5a:	f7ff ba4a 	b.w	80130f2 <_svfprintf_r+0x1ca>
 8013c5e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8013c60:	6813      	ldr	r3, [r2, #0]
 8013c62:	4698      	mov	r8, r3
 8013c64:	ea4f 79e3 	mov.w	r9, r3, asr #31
 8013c68:	4613      	mov	r3, r2
 8013c6a:	3304      	adds	r3, #4
 8013c6c:	4642      	mov	r2, r8
 8013c6e:	930e      	str	r3, [sp, #56]	; 0x38
 8013c70:	2a00      	cmp	r2, #0
 8013c72:	464b      	mov	r3, r9
 8013c74:	f173 0300 	sbcs.w	r3, r3, #0
 8013c78:	f6bf abf5 	bge.w	8013466 <_svfprintf_r+0x53e>
 8013c7c:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
 8013c80:	f1d8 0800 	rsbs	r8, r8, #0
 8013c84:	eb69 0949 	sbc.w	r9, r9, r9, lsl #1
 8013c88:	f88d c06f 	strb.w	ip, [sp, #111]	; 0x6f
 8013c8c:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
 8013c90:	2301      	movs	r3, #1
 8013c92:	f7ff ba34 	b.w	80130fe <_svfprintf_r+0x1d6>
 8013c96:	9808      	ldr	r0, [sp, #32]
 8013c98:	4631      	mov	r1, r6
 8013c9a:	aa23      	add	r2, sp, #140	; 0x8c
 8013c9c:	f004 faec 	bl	8018278 <__ssprint_r>
 8013ca0:	2800      	cmp	r0, #0
 8013ca2:	f47f aa07 	bne.w	80130b4 <_svfprintf_r+0x18c>
 8013ca6:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 8013caa:	463c      	mov	r4, r7
 8013cac:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013cae:	9912      	ldr	r1, [sp, #72]	; 0x48
 8013cb0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8013cb2:	440a      	add	r2, r1
 8013cb4:	4690      	mov	r8, r2
 8013cb6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013cb8:	4293      	cmp	r3, r2
 8013cba:	db46      	blt.n	8013d4a <_svfprintf_r+0xe22>
 8013cbc:	9a07      	ldr	r2, [sp, #28]
 8013cbe:	07d0      	lsls	r0, r2, #31
 8013cc0:	d443      	bmi.n	8013d4a <_svfprintf_r+0xe22>
 8013cc2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013cc4:	ebc8 050a 	rsb	r5, r8, sl
 8013cc8:	1ad3      	subs	r3, r2, r3
 8013cca:	429d      	cmp	r5, r3
 8013ccc:	bfa8      	it	ge
 8013cce:	461d      	movge	r5, r3
 8013cd0:	2d00      	cmp	r5, #0
 8013cd2:	dd0c      	ble.n	8013cee <_svfprintf_r+0xdc6>
 8013cd4:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8013cd6:	f8c4 8000 	str.w	r8, [r4]
 8013cda:	3201      	adds	r2, #1
 8013cdc:	44ab      	add	fp, r5
 8013cde:	2a07      	cmp	r2, #7
 8013ce0:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8013ce4:	6065      	str	r5, [r4, #4]
 8013ce6:	9224      	str	r2, [sp, #144]	; 0x90
 8013ce8:	f300 8267 	bgt.w	80141ba <_svfprintf_r+0x1292>
 8013cec:	3408      	adds	r4, #8
 8013cee:	2d00      	cmp	r5, #0
 8013cf0:	bfac      	ite	ge
 8013cf2:	1b5d      	subge	r5, r3, r5
 8013cf4:	461d      	movlt	r5, r3
 8013cf6:	2d00      	cmp	r5, #0
 8013cf8:	f77f ab10 	ble.w	801331c <_svfprintf_r+0x3f4>
 8013cfc:	2d10      	cmp	r5, #16
 8013cfe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8013d00:	f8df 93b8 	ldr.w	r9, [pc, #952]	; 80140bc <_svfprintf_r+0x1194>
 8013d04:	f77f af5e 	ble.w	8013bc4 <_svfprintf_r+0xc9c>
 8013d08:	f04f 0810 	mov.w	r8, #16
 8013d0c:	465a      	mov	r2, fp
 8013d0e:	f8dd a020 	ldr.w	sl, [sp, #32]
 8013d12:	e004      	b.n	8013d1e <_svfprintf_r+0xdf6>
 8013d14:	3408      	adds	r4, #8
 8013d16:	3d10      	subs	r5, #16
 8013d18:	2d10      	cmp	r5, #16
 8013d1a:	f77f af52 	ble.w	8013bc2 <_svfprintf_r+0xc9a>
 8013d1e:	3301      	adds	r3, #1
 8013d20:	3210      	adds	r2, #16
 8013d22:	2b07      	cmp	r3, #7
 8013d24:	9225      	str	r2, [sp, #148]	; 0x94
 8013d26:	9324      	str	r3, [sp, #144]	; 0x90
 8013d28:	f8c4 9000 	str.w	r9, [r4]
 8013d2c:	f8c4 8004 	str.w	r8, [r4, #4]
 8013d30:	ddf0      	ble.n	8013d14 <_svfprintf_r+0xdec>
 8013d32:	4650      	mov	r0, sl
 8013d34:	4631      	mov	r1, r6
 8013d36:	aa23      	add	r2, sp, #140	; 0x8c
 8013d38:	f004 fa9e 	bl	8018278 <__ssprint_r>
 8013d3c:	2800      	cmp	r0, #0
 8013d3e:	f47f a9b9 	bne.w	80130b4 <_svfprintf_r+0x18c>
 8013d42:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8013d44:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8013d46:	463c      	mov	r4, r7
 8013d48:	e7e5      	b.n	8013d16 <_svfprintf_r+0xdee>
 8013d4a:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8013d4c:	9818      	ldr	r0, [sp, #96]	; 0x60
 8013d4e:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8013d50:	6021      	str	r1, [r4, #0]
 8013d52:	3201      	adds	r2, #1
 8013d54:	4483      	add	fp, r0
 8013d56:	2a07      	cmp	r2, #7
 8013d58:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8013d5c:	6060      	str	r0, [r4, #4]
 8013d5e:	9224      	str	r2, [sp, #144]	; 0x90
 8013d60:	f300 820a 	bgt.w	8014178 <_svfprintf_r+0x1250>
 8013d64:	3408      	adds	r4, #8
 8013d66:	e7ac      	b.n	8013cc2 <_svfprintf_r+0xd9a>
 8013d68:	9b07      	ldr	r3, [sp, #28]
 8013d6a:	07d9      	lsls	r1, r3, #31
 8013d6c:	f53f addc 	bmi.w	8013928 <_svfprintf_r+0xa00>
 8013d70:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013d72:	6023      	str	r3, [r4, #0]
 8013d74:	3501      	adds	r5, #1
 8013d76:	f10b 0b01 	add.w	fp, fp, #1
 8013d7a:	2301      	movs	r3, #1
 8013d7c:	2d07      	cmp	r5, #7
 8013d7e:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8013d82:	9524      	str	r5, [sp, #144]	; 0x90
 8013d84:	6063      	str	r3, [r4, #4]
 8013d86:	f77f ae01 	ble.w	801398c <_svfprintf_r+0xa64>
 8013d8a:	e70d      	b.n	8013ba8 <_svfprintf_r+0xc80>
 8013d8c:	9808      	ldr	r0, [sp, #32]
 8013d8e:	4631      	mov	r1, r6
 8013d90:	aa23      	add	r2, sp, #140	; 0x8c
 8013d92:	f004 fa71 	bl	8018278 <__ssprint_r>
 8013d96:	2800      	cmp	r0, #0
 8013d98:	f47f a98c 	bne.w	80130b4 <_svfprintf_r+0x18c>
 8013d9c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8013d9e:	9d24      	ldr	r5, [sp, #144]	; 0x90
 8013da0:	463c      	mov	r4, r7
 8013da2:	e5ce      	b.n	8013942 <_svfprintf_r+0xa1a>
 8013da4:	9808      	ldr	r0, [sp, #32]
 8013da6:	4631      	mov	r1, r6
 8013da8:	aa23      	add	r2, sp, #140	; 0x8c
 8013daa:	f004 fa65 	bl	8018278 <__ssprint_r>
 8013dae:	2800      	cmp	r0, #0
 8013db0:	f47f a980 	bne.w	80130b4 <_svfprintf_r+0x18c>
 8013db4:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 8013db8:	9d24      	ldr	r5, [sp, #144]	; 0x90
 8013dba:	463c      	mov	r4, r7
 8013dbc:	e5cf      	b.n	801395e <_svfprintf_r+0xa36>
 8013dbe:	9808      	ldr	r0, [sp, #32]
 8013dc0:	4631      	mov	r1, r6
 8013dc2:	aa23      	add	r2, sp, #140	; 0x8c
 8013dc4:	f004 fa58 	bl	8018278 <__ssprint_r>
 8013dc8:	2800      	cmp	r0, #0
 8013dca:	f47f a973 	bne.w	80130b4 <_svfprintf_r+0x18c>
 8013dce:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 8013dd2:	463c      	mov	r4, r7
 8013dd4:	f7ff ba4c 	b.w	8013270 <_svfprintf_r+0x348>
 8013dd8:	f004 f9ce 	bl	8018178 <__fpclassifyd>
 8013ddc:	2800      	cmp	r0, #0
 8013dde:	f040 80c7 	bne.w	8013f70 <_svfprintf_r+0x1048>
 8013de2:	4686      	mov	lr, r0
 8013de4:	4ab2      	ldr	r2, [pc, #712]	; (80140b0 <_svfprintf_r+0x1188>)
 8013de6:	4bb3      	ldr	r3, [pc, #716]	; (80140b4 <_svfprintf_r+0x118c>)
 8013de8:	9011      	str	r0, [sp, #68]	; 0x44
 8013dea:	9807      	ldr	r0, [sp, #28]
 8013dec:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
 8013df0:	f8cd e048 	str.w	lr, [sp, #72]	; 0x48
 8013df4:	2103      	movs	r1, #3
 8013df6:	f020 0080 	bic.w	r0, r0, #128	; 0x80
 8013dfa:	2d47      	cmp	r5, #71	; 0x47
 8013dfc:	bfd8      	it	le
 8013dfe:	461a      	movle	r2, r3
 8013e00:	9109      	str	r1, [sp, #36]	; 0x24
 8013e02:	9007      	str	r0, [sp, #28]
 8013e04:	9210      	str	r2, [sp, #64]	; 0x40
 8013e06:	910d      	str	r1, [sp, #52]	; 0x34
 8013e08:	f7ff b9ae 	b.w	8013168 <_svfprintf_r+0x240>
 8013e0c:	9b07      	ldr	r3, [sp, #28]
 8013e0e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8013e10:	f013 0f40 	tst.w	r3, #64	; 0x40
 8013e14:	4613      	mov	r3, r2
 8013e16:	f43f ac2e 	beq.w	8013676 <_svfprintf_r+0x74e>
 8013e1a:	3304      	adds	r3, #4
 8013e1c:	f8b2 8000 	ldrh.w	r8, [r2]
 8013e20:	930e      	str	r3, [sp, #56]	; 0x38
 8013e22:	f04f 0900 	mov.w	r9, #0
 8013e26:	f7ff bb37 	b.w	8013498 <_svfprintf_r+0x570>
 8013e2a:	9b07      	ldr	r3, [sp, #28]
 8013e2c:	06db      	lsls	r3, r3, #27
 8013e2e:	d40b      	bmi.n	8013e48 <_svfprintf_r+0xf20>
 8013e30:	9b07      	ldr	r3, [sp, #28]
 8013e32:	065d      	lsls	r5, r3, #25
 8013e34:	d508      	bpl.n	8013e48 <_svfprintf_r+0xf20>
 8013e36:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8013e38:	6813      	ldr	r3, [r2, #0]
 8013e3a:	3204      	adds	r2, #4
 8013e3c:	920e      	str	r2, [sp, #56]	; 0x38
 8013e3e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8013e42:	801a      	strh	r2, [r3, #0]
 8013e44:	f7ff b895 	b.w	8012f72 <_svfprintf_r+0x4a>
 8013e48:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8013e4a:	6813      	ldr	r3, [r2, #0]
 8013e4c:	3204      	adds	r2, #4
 8013e4e:	920e      	str	r2, [sp, #56]	; 0x38
 8013e50:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013e52:	601a      	str	r2, [r3, #0]
 8013e54:	f7ff b88d 	b.w	8012f72 <_svfprintf_r+0x4a>
 8013e58:	4693      	mov	fp, r2
 8013e5a:	3301      	adds	r3, #1
 8013e5c:	44ab      	add	fp, r5
 8013e5e:	2b07      	cmp	r3, #7
 8013e60:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8013e64:	9324      	str	r3, [sp, #144]	; 0x90
 8013e66:	f8c4 9000 	str.w	r9, [r4]
 8013e6a:	6065      	str	r5, [r4, #4]
 8013e6c:	f73f af13 	bgt.w	8013c96 <_svfprintf_r+0xd6e>
 8013e70:	3408      	adds	r4, #8
 8013e72:	e71b      	b.n	8013cac <_svfprintf_r+0xd84>
 8013e74:	9808      	ldr	r0, [sp, #32]
 8013e76:	4631      	mov	r1, r6
 8013e78:	aa23      	add	r2, sp, #140	; 0x8c
 8013e7a:	f004 f9fd 	bl	8018278 <__ssprint_r>
 8013e7e:	2800      	cmp	r0, #0
 8013e80:	f47f a918 	bne.w	80130b4 <_svfprintf_r+0x18c>
 8013e84:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 8013e88:	463c      	mov	r4, r7
 8013e8a:	e4c0      	b.n	801380e <_svfprintf_r+0x8e6>
 8013e8c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8013e8e:	4a8a      	ldr	r2, [pc, #552]	; (80140b8 <_svfprintf_r+0x1190>)
 8013e90:	6022      	str	r2, [r4, #0]
 8013e92:	3301      	adds	r3, #1
 8013e94:	f10b 0b01 	add.w	fp, fp, #1
 8013e98:	2201      	movs	r2, #1
 8013e9a:	2b07      	cmp	r3, #7
 8013e9c:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 8013ea0:	9324      	str	r3, [sp, #144]	; 0x90
 8013ea2:	6062      	str	r2, [r4, #4]
 8013ea4:	f300 80f4 	bgt.w	8014090 <_svfprintf_r+0x1168>
 8013ea8:	3408      	adds	r4, #8
 8013eaa:	b92d      	cbnz	r5, 8013eb8 <_svfprintf_r+0xf90>
 8013eac:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8013eae:	b91b      	cbnz	r3, 8013eb8 <_svfprintf_r+0xf90>
 8013eb0:	9b07      	ldr	r3, [sp, #28]
 8013eb2:	07db      	lsls	r3, r3, #31
 8013eb4:	f57f aa32 	bpl.w	801331c <_svfprintf_r+0x3f4>
 8013eb8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8013eba:	9818      	ldr	r0, [sp, #96]	; 0x60
 8013ebc:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8013ebe:	6022      	str	r2, [r4, #0]
 8013ec0:	3301      	adds	r3, #1
 8013ec2:	eb0b 0100 	add.w	r1, fp, r0
 8013ec6:	2b07      	cmp	r3, #7
 8013ec8:	9125      	str	r1, [sp, #148]	; 0x94
 8013eca:	6060      	str	r0, [r4, #4]
 8013ecc:	9324      	str	r3, [sp, #144]	; 0x90
 8013ece:	f300 81f3 	bgt.w	80142b8 <_svfprintf_r+0x1390>
 8013ed2:	f104 0208 	add.w	r2, r4, #8
 8013ed6:	426d      	negs	r5, r5
 8013ed8:	2d00      	cmp	r5, #0
 8013eda:	f340 80fc 	ble.w	80140d6 <_svfprintf_r+0x11ae>
 8013ede:	2d10      	cmp	r5, #16
 8013ee0:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 80140bc <_svfprintf_r+0x1194>
 8013ee4:	f340 813d 	ble.w	8014162 <_svfprintf_r+0x123a>
 8013ee8:	2410      	movs	r4, #16
 8013eea:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8013eee:	e004      	b.n	8013efa <_svfprintf_r+0xfd2>
 8013ef0:	3208      	adds	r2, #8
 8013ef2:	3d10      	subs	r5, #16
 8013ef4:	2d10      	cmp	r5, #16
 8013ef6:	f340 8134 	ble.w	8014162 <_svfprintf_r+0x123a>
 8013efa:	3301      	adds	r3, #1
 8013efc:	3110      	adds	r1, #16
 8013efe:	2b07      	cmp	r3, #7
 8013f00:	9125      	str	r1, [sp, #148]	; 0x94
 8013f02:	9324      	str	r3, [sp, #144]	; 0x90
 8013f04:	f8c2 9000 	str.w	r9, [r2]
 8013f08:	6054      	str	r4, [r2, #4]
 8013f0a:	ddf1      	ble.n	8013ef0 <_svfprintf_r+0xfc8>
 8013f0c:	4640      	mov	r0, r8
 8013f0e:	4631      	mov	r1, r6
 8013f10:	aa23      	add	r2, sp, #140	; 0x8c
 8013f12:	f004 f9b1 	bl	8018278 <__ssprint_r>
 8013f16:	2800      	cmp	r0, #0
 8013f18:	f47f a8cc 	bne.w	80130b4 <_svfprintf_r+0x18c>
 8013f1c:	9925      	ldr	r1, [sp, #148]	; 0x94
 8013f1e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8013f20:	463a      	mov	r2, r7
 8013f22:	e7e6      	b.n	8013ef2 <_svfprintf_r+0xfca>
 8013f24:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8013f26:	46b1      	mov	r9, r6
 8013f28:	2b00      	cmp	r3, #0
 8013f2a:	f43f a8c4 	beq.w	80130b6 <_svfprintf_r+0x18e>
 8013f2e:	9808      	ldr	r0, [sp, #32]
 8013f30:	4631      	mov	r1, r6
 8013f32:	aa23      	add	r2, sp, #140	; 0x8c
 8013f34:	f004 f9a0 	bl	8018278 <__ssprint_r>
 8013f38:	f7ff b8bd 	b.w	80130b6 <_svfprintf_r+0x18e>
 8013f3c:	980c      	ldr	r0, [sp, #48]	; 0x30
 8013f3e:	910e      	str	r1, [sp, #56]	; 0x38
 8013f40:	4240      	negs	r0, r0
 8013f42:	900c      	str	r0, [sp, #48]	; 0x30
 8013f44:	4619      	mov	r1, r3
 8013f46:	f7ff ba3f 	b.w	80133c8 <_svfprintf_r+0x4a0>
 8013f4a:	f041 0120 	orr.w	r1, r1, #32
 8013f4e:	9107      	str	r1, [sp, #28]
 8013f50:	785d      	ldrb	r5, [r3, #1]
 8013f52:	1c59      	adds	r1, r3, #1
 8013f54:	f7ff b83b 	b.w	8012fce <_svfprintf_r+0xa6>
 8013f58:	9808      	ldr	r0, [sp, #32]
 8013f5a:	4631      	mov	r1, r6
 8013f5c:	aa23      	add	r2, sp, #140	; 0x8c
 8013f5e:	f004 f98b 	bl	8018278 <__ssprint_r>
 8013f62:	2800      	cmp	r0, #0
 8013f64:	f47f a8a6 	bne.w	80130b4 <_svfprintf_r+0x18c>
 8013f68:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 8013f6c:	463c      	mov	r4, r7
 8013f6e:	e464      	b.n	801383a <_svfprintf_r+0x912>
 8013f70:	f025 0320 	bic.w	r3, r5, #32
 8013f74:	f1ba 3fff 	cmp.w	sl, #4294967295
 8013f78:	930d      	str	r3, [sp, #52]	; 0x34
 8013f7a:	f000 8096 	beq.w	80140aa <_svfprintf_r+0x1182>
 8013f7e:	2b47      	cmp	r3, #71	; 0x47
 8013f80:	d105      	bne.n	8013f8e <_svfprintf_r+0x1066>
 8013f82:	f1ba 0f00 	cmp.w	sl, #0
 8013f86:	bf14      	ite	ne
 8013f88:	46d3      	movne	fp, sl
 8013f8a:	f04f 0b01 	moveq.w	fp, #1
 8013f8e:	9b07      	ldr	r3, [sp, #28]
 8013f90:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8013f94:	9311      	str	r3, [sp, #68]	; 0x44
 8013f96:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8013f98:	f1b3 0a00 	subs.w	sl, r3, #0
 8013f9c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8013f9e:	9309      	str	r3, [sp, #36]	; 0x24
 8013fa0:	bfbb      	ittet	lt
 8013fa2:	4653      	movlt	r3, sl
 8013fa4:	f103 4a00 	addlt.w	sl, r3, #2147483648	; 0x80000000
 8013fa8:	2300      	movge	r3, #0
 8013faa:	232d      	movlt	r3, #45	; 0x2d
 8013fac:	2d66      	cmp	r5, #102	; 0x66
 8013fae:	930f      	str	r3, [sp, #60]	; 0x3c
 8013fb0:	f000 80ac 	beq.w	801410c <_svfprintf_r+0x11e4>
 8013fb4:	2d46      	cmp	r5, #70	; 0x46
 8013fb6:	f000 80a9 	beq.w	801410c <_svfprintf_r+0x11e4>
 8013fba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013fbc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013fbe:	2b45      	cmp	r3, #69	; 0x45
 8013fc0:	bf0c      	ite	eq
 8013fc2:	f10b 0901 	addeq.w	r9, fp, #1
 8013fc6:	46d9      	movne	r9, fp
 8013fc8:	2002      	movs	r0, #2
 8013fca:	a91d      	add	r1, sp, #116	; 0x74
 8013fcc:	e88d 0201 	stmia.w	sp, {r0, r9}
 8013fd0:	9102      	str	r1, [sp, #8]
 8013fd2:	a81e      	add	r0, sp, #120	; 0x78
 8013fd4:	a921      	add	r1, sp, #132	; 0x84
 8013fd6:	9003      	str	r0, [sp, #12]
 8013fd8:	4653      	mov	r3, sl
 8013fda:	9104      	str	r1, [sp, #16]
 8013fdc:	9808      	ldr	r0, [sp, #32]
 8013fde:	f001 fd17 	bl	8015a10 <_dtoa_r>
 8013fe2:	2d67      	cmp	r5, #103	; 0x67
 8013fe4:	9010      	str	r0, [sp, #64]	; 0x40
 8013fe6:	d002      	beq.n	8013fee <_svfprintf_r+0x10c6>
 8013fe8:	2d47      	cmp	r5, #71	; 0x47
 8013fea:	f040 809f 	bne.w	801412c <_svfprintf_r+0x1204>
 8013fee:	9b07      	ldr	r3, [sp, #28]
 8013ff0:	07db      	lsls	r3, r3, #31
 8013ff2:	f140 8189 	bpl.w	8014308 <_svfprintf_r+0x13e0>
 8013ff6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013ff8:	eb03 0809 	add.w	r8, r3, r9
 8013ffc:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013ffe:	4651      	mov	r1, sl
 8014000:	2200      	movs	r2, #0
 8014002:	2300      	movs	r3, #0
 8014004:	f7ec fd7a 	bl	8000afc <__aeabi_dcmpeq>
 8014008:	2800      	cmp	r0, #0
 801400a:	f040 80fd 	bne.w	8014208 <_svfprintf_r+0x12e0>
 801400e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8014010:	4598      	cmp	r8, r3
 8014012:	d906      	bls.n	8014022 <_svfprintf_r+0x10fa>
 8014014:	2130      	movs	r1, #48	; 0x30
 8014016:	1c5a      	adds	r2, r3, #1
 8014018:	9221      	str	r2, [sp, #132]	; 0x84
 801401a:	7019      	strb	r1, [r3, #0]
 801401c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801401e:	4598      	cmp	r8, r3
 8014020:	d8f9      	bhi.n	8014016 <_svfprintf_r+0x10ee>
 8014022:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014024:	1a9b      	subs	r3, r3, r2
 8014026:	9313      	str	r3, [sp, #76]	; 0x4c
 8014028:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801402a:	2b47      	cmp	r3, #71	; 0x47
 801402c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801402e:	f000 80de 	beq.w	80141ee <_svfprintf_r+0x12c6>
 8014032:	2d65      	cmp	r5, #101	; 0x65
 8014034:	f340 80f8 	ble.w	8014228 <_svfprintf_r+0x1300>
 8014038:	2d66      	cmp	r5, #102	; 0x66
 801403a:	9312      	str	r3, [sp, #72]	; 0x48
 801403c:	f000 8157 	beq.w	80142ee <_svfprintf_r+0x13c6>
 8014040:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014042:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014044:	4293      	cmp	r3, r2
 8014046:	f300 8144 	bgt.w	80142d2 <_svfprintf_r+0x13aa>
 801404a:	9b07      	ldr	r3, [sp, #28]
 801404c:	07d9      	lsls	r1, r3, #31
 801404e:	f100 8173 	bmi.w	8014338 <_svfprintf_r+0x1410>
 8014052:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8014056:	920d      	str	r2, [sp, #52]	; 0x34
 8014058:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801405a:	2a00      	cmp	r2, #0
 801405c:	f040 80bc 	bne.w	80141d8 <_svfprintf_r+0x12b0>
 8014060:	9309      	str	r3, [sp, #36]	; 0x24
 8014062:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014064:	9307      	str	r3, [sp, #28]
 8014066:	9211      	str	r2, [sp, #68]	; 0x44
 8014068:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
 801406c:	f7ff b87c 	b.w	8013168 <_svfprintf_r+0x240>
 8014070:	9808      	ldr	r0, [sp, #32]
 8014072:	2140      	movs	r1, #64	; 0x40
 8014074:	f003 f8ba 	bl	80171ec <_malloc_r>
 8014078:	f8c9 0000 	str.w	r0, [r9]
 801407c:	f8c9 0010 	str.w	r0, [r9, #16]
 8014080:	2800      	cmp	r0, #0
 8014082:	f000 818c 	beq.w	801439e <_svfprintf_r+0x1476>
 8014086:	2340      	movs	r3, #64	; 0x40
 8014088:	f8c9 3014 	str.w	r3, [r9, #20]
 801408c:	f7fe bf64 	b.w	8012f58 <_svfprintf_r+0x30>
 8014090:	9808      	ldr	r0, [sp, #32]
 8014092:	4631      	mov	r1, r6
 8014094:	aa23      	add	r2, sp, #140	; 0x8c
 8014096:	f004 f8ef 	bl	8018278 <__ssprint_r>
 801409a:	2800      	cmp	r0, #0
 801409c:	f47f a80a 	bne.w	80130b4 <_svfprintf_r+0x18c>
 80140a0:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80140a2:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 80140a6:	463c      	mov	r4, r7
 80140a8:	e6ff      	b.n	8013eaa <_svfprintf_r+0xf82>
 80140aa:	f04f 0b06 	mov.w	fp, #6
 80140ae:	e76e      	b.n	8013f8e <_svfprintf_r+0x1066>
 80140b0:	0802d6dc 	.word	0x0802d6dc
 80140b4:	0802d6d8 	.word	0x0802d6d8
 80140b8:	0802d710 	.word	0x0802d710
 80140bc:	0802d714 	.word	0x0802d714
 80140c0:	9808      	ldr	r0, [sp, #32]
 80140c2:	4631      	mov	r1, r6
 80140c4:	aa23      	add	r2, sp, #140	; 0x8c
 80140c6:	f004 f8d7 	bl	8018278 <__ssprint_r>
 80140ca:	2800      	cmp	r0, #0
 80140cc:	f47e aff2 	bne.w	80130b4 <_svfprintf_r+0x18c>
 80140d0:	9925      	ldr	r1, [sp, #148]	; 0x94
 80140d2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80140d4:	463a      	mov	r2, r7
 80140d6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80140d8:	6054      	str	r4, [r2, #4]
 80140da:	3301      	adds	r3, #1
 80140dc:	eb01 0b04 	add.w	fp, r1, r4
 80140e0:	2b07      	cmp	r3, #7
 80140e2:	9910      	ldr	r1, [sp, #64]	; 0x40
 80140e4:	f8cd b094 	str.w	fp, [sp, #148]	; 0x94
 80140e8:	9324      	str	r3, [sp, #144]	; 0x90
 80140ea:	6011      	str	r1, [r2, #0]
 80140ec:	f73f ac5b 	bgt.w	80139a6 <_svfprintf_r+0xa7e>
 80140f0:	f102 0408 	add.w	r4, r2, #8
 80140f4:	f7ff b912 	b.w	801331c <_svfprintf_r+0x3f4>
 80140f8:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
 80140fc:	f7fe fee6 	bl	8012ecc <strlen>
 8014100:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8014104:	900d      	str	r0, [sp, #52]	; 0x34
 8014106:	4603      	mov	r3, r0
 8014108:	f7ff ba1b 	b.w	8013542 <_svfprintf_r+0x61a>
 801410c:	2003      	movs	r0, #3
 801410e:	a91d      	add	r1, sp, #116	; 0x74
 8014110:	e88d 0801 	stmia.w	sp, {r0, fp}
 8014114:	9102      	str	r1, [sp, #8]
 8014116:	a81e      	add	r0, sp, #120	; 0x78
 8014118:	a921      	add	r1, sp, #132	; 0x84
 801411a:	9003      	str	r0, [sp, #12]
 801411c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801411e:	9104      	str	r1, [sp, #16]
 8014120:	4653      	mov	r3, sl
 8014122:	9808      	ldr	r0, [sp, #32]
 8014124:	f001 fc74 	bl	8015a10 <_dtoa_r>
 8014128:	46d9      	mov	r9, fp
 801412a:	9010      	str	r0, [sp, #64]	; 0x40
 801412c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801412e:	eb03 0809 	add.w	r8, r3, r9
 8014132:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014134:	2b46      	cmp	r3, #70	; 0x46
 8014136:	f47f af61 	bne.w	8013ffc <_svfprintf_r+0x10d4>
 801413a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801413c:	781b      	ldrb	r3, [r3, #0]
 801413e:	2b30      	cmp	r3, #48	; 0x30
 8014140:	f000 80e4 	beq.w	801430c <_svfprintf_r+0x13e4>
 8014144:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8014146:	4498      	add	r8, r3
 8014148:	e758      	b.n	8013ffc <_svfprintf_r+0x10d4>
 801414a:	9808      	ldr	r0, [sp, #32]
 801414c:	4631      	mov	r1, r6
 801414e:	aa23      	add	r2, sp, #140	; 0x8c
 8014150:	f004 f892 	bl	8018278 <__ssprint_r>
 8014154:	2800      	cmp	r0, #0
 8014156:	f47e afad 	bne.w	80130b4 <_svfprintf_r+0x18c>
 801415a:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 801415e:	463c      	mov	r4, r7
 8014160:	e4a7      	b.n	8013ab2 <_svfprintf_r+0xb8a>
 8014162:	3301      	adds	r3, #1
 8014164:	4429      	add	r1, r5
 8014166:	2b07      	cmp	r3, #7
 8014168:	9125      	str	r1, [sp, #148]	; 0x94
 801416a:	9324      	str	r3, [sp, #144]	; 0x90
 801416c:	f8c2 9000 	str.w	r9, [r2]
 8014170:	6055      	str	r5, [r2, #4]
 8014172:	dca5      	bgt.n	80140c0 <_svfprintf_r+0x1198>
 8014174:	3208      	adds	r2, #8
 8014176:	e7ae      	b.n	80140d6 <_svfprintf_r+0x11ae>
 8014178:	9808      	ldr	r0, [sp, #32]
 801417a:	4631      	mov	r1, r6
 801417c:	aa23      	add	r2, sp, #140	; 0x8c
 801417e:	f004 f87b 	bl	8018278 <__ssprint_r>
 8014182:	2800      	cmp	r0, #0
 8014184:	f47e af96 	bne.w	80130b4 <_svfprintf_r+0x18c>
 8014188:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801418a:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 801418e:	463c      	mov	r4, r7
 8014190:	e597      	b.n	8013cc2 <_svfprintf_r+0xd9a>
 8014192:	4653      	mov	r3, sl
 8014194:	2b06      	cmp	r3, #6
 8014196:	bf28      	it	cs
 8014198:	2306      	movcs	r3, #6
 801419a:	930d      	str	r3, [sp, #52]	; 0x34
 801419c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80141a0:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
 80141a4:	9309      	str	r3, [sp, #36]	; 0x24
 80141a6:	4b83      	ldr	r3, [pc, #524]	; (80143b4 <_svfprintf_r+0x148c>)
 80141a8:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80141ac:	f8cd c044 	str.w	ip, [sp, #68]	; 0x44
 80141b0:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
 80141b4:	9310      	str	r3, [sp, #64]	; 0x40
 80141b6:	f7fe bfd7 	b.w	8013168 <_svfprintf_r+0x240>
 80141ba:	9808      	ldr	r0, [sp, #32]
 80141bc:	4631      	mov	r1, r6
 80141be:	aa23      	add	r2, sp, #140	; 0x8c
 80141c0:	f004 f85a 	bl	8018278 <__ssprint_r>
 80141c4:	2800      	cmp	r0, #0
 80141c6:	f47e af75 	bne.w	80130b4 <_svfprintf_r+0x18c>
 80141ca:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80141cc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80141ce:	f8dd b094 	ldr.w	fp, [sp, #148]	; 0x94
 80141d2:	1ad3      	subs	r3, r2, r3
 80141d4:	463c      	mov	r4, r7
 80141d6:	e58a      	b.n	8013cee <_svfprintf_r+0xdc6>
 80141d8:	9309      	str	r3, [sp, #36]	; 0x24
 80141da:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80141dc:	9307      	str	r3, [sp, #28]
 80141de:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
 80141e2:	2300      	movs	r3, #0
 80141e4:	f88d c06f 	strb.w	ip, [sp, #111]	; 0x6f
 80141e8:	9311      	str	r3, [sp, #68]	; 0x44
 80141ea:	f7fe bfc0 	b.w	801316e <_svfprintf_r+0x246>
 80141ee:	1cda      	adds	r2, r3, #3
 80141f0:	db19      	blt.n	8014226 <_svfprintf_r+0x12fe>
 80141f2:	459b      	cmp	fp, r3
 80141f4:	db17      	blt.n	8014226 <_svfprintf_r+0x12fe>
 80141f6:	9312      	str	r3, [sp, #72]	; 0x48
 80141f8:	2567      	movs	r5, #103	; 0x67
 80141fa:	e721      	b.n	8014040 <_svfprintf_r+0x1118>
 80141fc:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
 8014200:	f88d c06f 	strb.w	ip, [sp, #111]	; 0x6f
 8014204:	f7ff ba98 	b.w	8013738 <_svfprintf_r+0x810>
 8014208:	4643      	mov	r3, r8
 801420a:	e70a      	b.n	8014022 <_svfprintf_r+0x10fa>
 801420c:	ea2a 73ea 	bic.w	r3, sl, sl, asr #31
 8014210:	9011      	str	r0, [sp, #68]	; 0x44
 8014212:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8014216:	9012      	str	r0, [sp, #72]	; 0x48
 8014218:	f89d c06f 	ldrb.w	ip, [sp, #111]	; 0x6f
 801421c:	9309      	str	r3, [sp, #36]	; 0x24
 801421e:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 8014222:	f7fe bfa1 	b.w	8013168 <_svfprintf_r+0x240>
 8014226:	3d02      	subs	r5, #2
 8014228:	3b01      	subs	r3, #1
 801422a:	2b00      	cmp	r3, #0
 801422c:	931d      	str	r3, [sp, #116]	; 0x74
 801422e:	bfba      	itte	lt
 8014230:	425b      	neglt	r3, r3
 8014232:	222d      	movlt	r2, #45	; 0x2d
 8014234:	222b      	movge	r2, #43	; 0x2b
 8014236:	2b09      	cmp	r3, #9
 8014238:	f88d 507c 	strb.w	r5, [sp, #124]	; 0x7c
 801423c:	f88d 207d 	strb.w	r2, [sp, #125]	; 0x7d
 8014240:	dd72      	ble.n	8014328 <_svfprintf_r+0x1400>
 8014242:	f10d 0e8b 	add.w	lr, sp, #139	; 0x8b
 8014246:	4670      	mov	r0, lr
 8014248:	4a5b      	ldr	r2, [pc, #364]	; (80143b8 <_svfprintf_r+0x1490>)
 801424a:	fb82 2103 	smull	r2, r1, r2, r3
 801424e:	17da      	asrs	r2, r3, #31
 8014250:	ebc2 02a1 	rsb	r2, r2, r1, asr #2
 8014254:	eb02 0182 	add.w	r1, r2, r2, lsl #2
 8014258:	eba3 0341 	sub.w	r3, r3, r1, lsl #1
 801425c:	f103 0130 	add.w	r1, r3, #48	; 0x30
 8014260:	2a09      	cmp	r2, #9
 8014262:	4613      	mov	r3, r2
 8014264:	f800 1d01 	strb.w	r1, [r0, #-1]!
 8014268:	dcee      	bgt.n	8014248 <_svfprintf_r+0x1320>
 801426a:	4602      	mov	r2, r0
 801426c:	3330      	adds	r3, #48	; 0x30
 801426e:	b2d9      	uxtb	r1, r3
 8014270:	f802 1d01 	strb.w	r1, [r2, #-1]!
 8014274:	4596      	cmp	lr, r2
 8014276:	f240 8099 	bls.w	80143ac <_svfprintf_r+0x1484>
 801427a:	f10d 027e 	add.w	r2, sp, #126	; 0x7e
 801427e:	4603      	mov	r3, r0
 8014280:	e001      	b.n	8014286 <_svfprintf_r+0x135e>
 8014282:	f813 1b01 	ldrb.w	r1, [r3], #1
 8014286:	f802 1b01 	strb.w	r1, [r2], #1
 801428a:	4573      	cmp	r3, lr
 801428c:	d1f9      	bne.n	8014282 <_svfprintf_r+0x135a>
 801428e:	ab23      	add	r3, sp, #140	; 0x8c
 8014290:	1a1b      	subs	r3, r3, r0
 8014292:	f10d 027e 	add.w	r2, sp, #126	; 0x7e
 8014296:	4413      	add	r3, r2
 8014298:	aa1f      	add	r2, sp, #124	; 0x7c
 801429a:	1a9b      	subs	r3, r3, r2
 801429c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801429e:	9319      	str	r3, [sp, #100]	; 0x64
 80142a0:	2a01      	cmp	r2, #1
 80142a2:	4413      	add	r3, r2
 80142a4:	930d      	str	r3, [sp, #52]	; 0x34
 80142a6:	dd6b      	ble.n	8014380 <_svfprintf_r+0x1458>
 80142a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80142aa:	2200      	movs	r2, #0
 80142ac:	3301      	adds	r3, #1
 80142ae:	930d      	str	r3, [sp, #52]	; 0x34
 80142b0:	9212      	str	r2, [sp, #72]	; 0x48
 80142b2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80142b6:	e6cf      	b.n	8014058 <_svfprintf_r+0x1130>
 80142b8:	9808      	ldr	r0, [sp, #32]
 80142ba:	4631      	mov	r1, r6
 80142bc:	aa23      	add	r2, sp, #140	; 0x8c
 80142be:	f003 ffdb 	bl	8018278 <__ssprint_r>
 80142c2:	2800      	cmp	r0, #0
 80142c4:	f47e aef6 	bne.w	80130b4 <_svfprintf_r+0x18c>
 80142c8:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80142ca:	9925      	ldr	r1, [sp, #148]	; 0x94
 80142cc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80142ce:	463a      	mov	r2, r7
 80142d0:	e601      	b.n	8013ed6 <_svfprintf_r+0xfae>
 80142d2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80142d4:	2b00      	cmp	r3, #0
 80142d6:	bfd8      	it	le
 80142d8:	f1c3 0802 	rsble	r8, r3, #2
 80142dc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80142de:	bfc8      	it	gt
 80142e0:	f04f 0801 	movgt.w	r8, #1
 80142e4:	4443      	add	r3, r8
 80142e6:	930d      	str	r3, [sp, #52]	; 0x34
 80142e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80142ec:	e6b4      	b.n	8014058 <_svfprintf_r+0x1130>
 80142ee:	2b00      	cmp	r3, #0
 80142f0:	dd30      	ble.n	8014354 <_svfprintf_r+0x142c>
 80142f2:	f1bb 0f00 	cmp.w	fp, #0
 80142f6:	d125      	bne.n	8014344 <_svfprintf_r+0x141c>
 80142f8:	9b07      	ldr	r3, [sp, #28]
 80142fa:	07db      	lsls	r3, r3, #31
 80142fc:	d422      	bmi.n	8014344 <_svfprintf_r+0x141c>
 80142fe:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014300:	920d      	str	r2, [sp, #52]	; 0x34
 8014302:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8014306:	e6a7      	b.n	8014058 <_svfprintf_r+0x1130>
 8014308:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801430a:	e68a      	b.n	8014022 <_svfprintf_r+0x10fa>
 801430c:	9809      	ldr	r0, [sp, #36]	; 0x24
 801430e:	4651      	mov	r1, sl
 8014310:	2200      	movs	r2, #0
 8014312:	2300      	movs	r3, #0
 8014314:	f7ec fbf2 	bl	8000afc <__aeabi_dcmpeq>
 8014318:	2800      	cmp	r0, #0
 801431a:	f47f af13 	bne.w	8014144 <_svfprintf_r+0x121c>
 801431e:	f1c9 0301 	rsb	r3, r9, #1
 8014322:	931d      	str	r3, [sp, #116]	; 0x74
 8014324:	4498      	add	r8, r3
 8014326:	e669      	b.n	8013ffc <_svfprintf_r+0x10d4>
 8014328:	3330      	adds	r3, #48	; 0x30
 801432a:	2230      	movs	r2, #48	; 0x30
 801432c:	f88d 307f 	strb.w	r3, [sp, #127]	; 0x7f
 8014330:	f88d 207e 	strb.w	r2, [sp, #126]	; 0x7e
 8014334:	ab20      	add	r3, sp, #128	; 0x80
 8014336:	e7af      	b.n	8014298 <_svfprintf_r+0x1370>
 8014338:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801433a:	3301      	adds	r3, #1
 801433c:	930d      	str	r3, [sp, #52]	; 0x34
 801433e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014342:	e689      	b.n	8014058 <_svfprintf_r+0x1130>
 8014344:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014346:	f10b 0801 	add.w	r8, fp, #1
 801434a:	4443      	add	r3, r8
 801434c:	930d      	str	r3, [sp, #52]	; 0x34
 801434e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014352:	e681      	b.n	8014058 <_svfprintf_r+0x1130>
 8014354:	f1bb 0f00 	cmp.w	fp, #0
 8014358:	d11b      	bne.n	8014392 <_svfprintf_r+0x146a>
 801435a:	9b07      	ldr	r3, [sp, #28]
 801435c:	07d8      	lsls	r0, r3, #31
 801435e:	d418      	bmi.n	8014392 <_svfprintf_r+0x146a>
 8014360:	2301      	movs	r3, #1
 8014362:	930d      	str	r3, [sp, #52]	; 0x34
 8014364:	e678      	b.n	8014058 <_svfprintf_r+0x1130>
 8014366:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8014368:	f8d5 a000 	ldr.w	sl, [r5]
 801436c:	4628      	mov	r0, r5
 801436e:	3004      	adds	r0, #4
 8014370:	f1ba 0f00 	cmp.w	sl, #0
 8014374:	785d      	ldrb	r5, [r3, #1]
 8014376:	900e      	str	r0, [sp, #56]	; 0x38
 8014378:	f6be ae29 	bge.w	8012fce <_svfprintf_r+0xa6>
 801437c:	f7fe be25 	b.w	8012fca <_svfprintf_r+0xa2>
 8014380:	9b07      	ldr	r3, [sp, #28]
 8014382:	f013 0301 	ands.w	r3, r3, #1
 8014386:	d18f      	bne.n	80142a8 <_svfprintf_r+0x1380>
 8014388:	9312      	str	r3, [sp, #72]	; 0x48
 801438a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801438c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014390:	e662      	b.n	8014058 <_svfprintf_r+0x1130>
 8014392:	f10b 0302 	add.w	r3, fp, #2
 8014396:	930d      	str	r3, [sp, #52]	; 0x34
 8014398:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801439c:	e65c      	b.n	8014058 <_svfprintf_r+0x1130>
 801439e:	9a08      	ldr	r2, [sp, #32]
 80143a0:	230c      	movs	r3, #12
 80143a2:	6013      	str	r3, [r2, #0]
 80143a4:	f04f 30ff 	mov.w	r0, #4294967295
 80143a8:	f7fe be8e 	b.w	80130c8 <_svfprintf_r+0x1a0>
 80143ac:	f10d 037e 	add.w	r3, sp, #126	; 0x7e
 80143b0:	e772      	b.n	8014298 <_svfprintf_r+0x1370>
 80143b2:	bf00      	nop
 80143b4:	0802d708 	.word	0x0802d708
 80143b8:	66666667 	.word	0x66666667

080143bc <_vfprintf_r>:
 80143bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80143c0:	b0bf      	sub	sp, #252	; 0xfc
 80143c2:	461c      	mov	r4, r3
 80143c4:	4689      	mov	r9, r1
 80143c6:	9208      	str	r2, [sp, #32]
 80143c8:	4607      	mov	r7, r0
 80143ca:	f002 fe9b 	bl	8017104 <_localeconv_r>
 80143ce:	6803      	ldr	r3, [r0, #0]
 80143d0:	9315      	str	r3, [sp, #84]	; 0x54
 80143d2:	4618      	mov	r0, r3
 80143d4:	f7fe fd7a 	bl	8012ecc <strlen>
 80143d8:	940c      	str	r4, [sp, #48]	; 0x30
 80143da:	9016      	str	r0, [sp, #88]	; 0x58
 80143dc:	b11f      	cbz	r7, 80143e6 <_vfprintf_r+0x2a>
 80143de:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80143e0:	2b00      	cmp	r3, #0
 80143e2:	f000 80f3 	beq.w	80145cc <_vfprintf_r+0x210>
 80143e6:	f8b9 200c 	ldrh.w	r2, [r9, #12]
 80143ea:	b293      	uxth	r3, r2
 80143ec:	049d      	lsls	r5, r3, #18
 80143ee:	d40a      	bmi.n	8014406 <_vfprintf_r+0x4a>
 80143f0:	f8d9 1064 	ldr.w	r1, [r9, #100]	; 0x64
 80143f4:	f442 5300 	orr.w	r3, r2, #8192	; 0x2000
 80143f8:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
 80143fc:	f8a9 300c 	strh.w	r3, [r9, #12]
 8014400:	f8c9 1064 	str.w	r1, [r9, #100]	; 0x64
 8014404:	b29b      	uxth	r3, r3
 8014406:	0718      	lsls	r0, r3, #28
 8014408:	f140 80aa 	bpl.w	8014560 <_vfprintf_r+0x1a4>
 801440c:	f8d9 2010 	ldr.w	r2, [r9, #16]
 8014410:	2a00      	cmp	r2, #0
 8014412:	f000 80a5 	beq.w	8014560 <_vfprintf_r+0x1a4>
 8014416:	f003 031a 	and.w	r3, r3, #26
 801441a:	2b0a      	cmp	r3, #10
 801441c:	f000 80ac 	beq.w	8014578 <_vfprintf_r+0x1bc>
 8014420:	2300      	movs	r3, #0
 8014422:	461a      	mov	r2, r3
 8014424:	9311      	str	r3, [sp, #68]	; 0x44
 8014426:	9323      	str	r3, [sp, #140]	; 0x8c
 8014428:	9322      	str	r3, [sp, #136]	; 0x88
 801442a:	9314      	str	r3, [sp, #80]	; 0x50
 801442c:	9317      	str	r3, [sp, #92]	; 0x5c
 801442e:	9309      	str	r3, [sp, #36]	; 0x24
 8014430:	ab2e      	add	r3, sp, #184	; 0xb8
 8014432:	469c      	mov	ip, r3
 8014434:	9321      	str	r3, [sp, #132]	; 0x84
 8014436:	9212      	str	r2, [sp, #72]	; 0x48
 8014438:	9213      	str	r2, [sp, #76]	; 0x4c
 801443a:	4664      	mov	r4, ip
 801443c:	46b8      	mov	r8, r7
 801443e:	9d08      	ldr	r5, [sp, #32]
 8014440:	782b      	ldrb	r3, [r5, #0]
 8014442:	2b00      	cmp	r3, #0
 8014444:	f000 80c6 	beq.w	80145d4 <_vfprintf_r+0x218>
 8014448:	2b25      	cmp	r3, #37	; 0x25
 801444a:	d102      	bne.n	8014452 <_vfprintf_r+0x96>
 801444c:	e0c2      	b.n	80145d4 <_vfprintf_r+0x218>
 801444e:	2b25      	cmp	r3, #37	; 0x25
 8014450:	d003      	beq.n	801445a <_vfprintf_r+0x9e>
 8014452:	f815 3f01 	ldrb.w	r3, [r5, #1]!
 8014456:	2b00      	cmp	r3, #0
 8014458:	d1f9      	bne.n	801444e <_vfprintf_r+0x92>
 801445a:	9b08      	ldr	r3, [sp, #32]
 801445c:	1aee      	subs	r6, r5, r3
 801445e:	b17e      	cbz	r6, 8014480 <_vfprintf_r+0xc4>
 8014460:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8014462:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8014464:	9908      	ldr	r1, [sp, #32]
 8014466:	6021      	str	r1, [r4, #0]
 8014468:	3301      	adds	r3, #1
 801446a:	4432      	add	r2, r6
 801446c:	2b07      	cmp	r3, #7
 801446e:	6066      	str	r6, [r4, #4]
 8014470:	9223      	str	r2, [sp, #140]	; 0x8c
 8014472:	9322      	str	r3, [sp, #136]	; 0x88
 8014474:	f300 8093 	bgt.w	801459e <_vfprintf_r+0x1e2>
 8014478:	3408      	adds	r4, #8
 801447a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801447c:	4433      	add	r3, r6
 801447e:	9309      	str	r3, [sp, #36]	; 0x24
 8014480:	782b      	ldrb	r3, [r5, #0]
 8014482:	2b00      	cmp	r3, #0
 8014484:	f000 8093 	beq.w	80145ae <_vfprintf_r+0x1f2>
 8014488:	2300      	movs	r3, #0
 801448a:	1c69      	adds	r1, r5, #1
 801448c:	f04f 3aff 	mov.w	sl, #4294967295
 8014490:	786d      	ldrb	r5, [r5, #1]
 8014492:	f88d 3067 	strb.w	r3, [sp, #103]	; 0x67
 8014496:	461a      	mov	r2, r3
 8014498:	930a      	str	r3, [sp, #40]	; 0x28
 801449a:	9306      	str	r3, [sp, #24]
 801449c:	4656      	mov	r6, sl
 801449e:	1c4b      	adds	r3, r1, #1
 80144a0:	f1a5 0120 	sub.w	r1, r5, #32
 80144a4:	2958      	cmp	r1, #88	; 0x58
 80144a6:	f200 83c1 	bhi.w	8014c2c <_vfprintf_r+0x870>
 80144aa:	e8df f011 	tbh	[pc, r1, lsl #1]
 80144ae:	0256      	.short	0x0256
 80144b0:	03bf03bf 	.word	0x03bf03bf
 80144b4:	03bf02f6 	.word	0x03bf02f6
 80144b8:	03bf03bf 	.word	0x03bf03bf
 80144bc:	03bf03bf 	.word	0x03bf03bf
 80144c0:	02fd03bf 	.word	0x02fd03bf
 80144c4:	03bf02c6 	.word	0x03bf02c6
 80144c8:	034701f2 	.word	0x034701f2
 80144cc:	02ca03bf 	.word	0x02ca03bf
 80144d0:	02d102d1 	.word	0x02d102d1
 80144d4:	02d102d1 	.word	0x02d102d1
 80144d8:	02d102d1 	.word	0x02d102d1
 80144dc:	02d102d1 	.word	0x02d102d1
 80144e0:	03bf02d1 	.word	0x03bf02d1
 80144e4:	03bf03bf 	.word	0x03bf03bf
 80144e8:	03bf03bf 	.word	0x03bf03bf
 80144ec:	03bf03bf 	.word	0x03bf03bf
 80144f0:	03bf03bf 	.word	0x03bf03bf
 80144f4:	026b03bf 	.word	0x026b03bf
 80144f8:	03bf028d 	.word	0x03bf028d
 80144fc:	03bf028d 	.word	0x03bf028d
 8014500:	03bf03bf 	.word	0x03bf03bf
 8014504:	02bf03bf 	.word	0x02bf03bf
 8014508:	03bf03bf 	.word	0x03bf03bf
 801450c:	03bf0362 	.word	0x03bf0362
 8014510:	03bf03bf 	.word	0x03bf03bf
 8014514:	03bf03bf 	.word	0x03bf03bf
 8014518:	03bf03a9 	.word	0x03bf03a9
 801451c:	037f03bf 	.word	0x037f03bf
 8014520:	03bf03bf 	.word	0x03bf03bf
 8014524:	03bf03bf 	.word	0x03bf03bf
 8014528:	03bf03bf 	.word	0x03bf03bf
 801452c:	03bf03bf 	.word	0x03bf03bf
 8014530:	03bf03bf 	.word	0x03bf03bf
 8014534:	030b0394 	.word	0x030b0394
 8014538:	028d028d 	.word	0x028d028d
 801453c:	0324028d 	.word	0x0324028d
 8014540:	03bf030b 	.word	0x03bf030b
 8014544:	032b03bf 	.word	0x032b03bf
 8014548:	033503bf 	.word	0x033503bf
 801454c:	02e001f9 	.word	0x02e001f9
 8014550:	03bf025d 	.word	0x03bf025d
 8014554:	03bf020b 	.word	0x03bf020b
 8014558:	03bf0095 	.word	0x03bf0095
 801455c:	023003bf 	.word	0x023003bf
 8014560:	4638      	mov	r0, r7
 8014562:	4649      	mov	r1, r9
 8014564:	f001 f95a 	bl	801581c <__swsetup_r>
 8014568:	b9a0      	cbnz	r0, 8014594 <_vfprintf_r+0x1d8>
 801456a:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 801456e:	f003 031a 	and.w	r3, r3, #26
 8014572:	2b0a      	cmp	r3, #10
 8014574:	f47f af54 	bne.w	8014420 <_vfprintf_r+0x64>
 8014578:	f9b9 300e 	ldrsh.w	r3, [r9, #14]
 801457c:	2b00      	cmp	r3, #0
 801457e:	f6ff af4f 	blt.w	8014420 <_vfprintf_r+0x64>
 8014582:	4638      	mov	r0, r7
 8014584:	4649      	mov	r1, r9
 8014586:	9a08      	ldr	r2, [sp, #32]
 8014588:	4623      	mov	r3, r4
 801458a:	f001 f90b 	bl	80157a4 <__sbprintf>
 801458e:	b03f      	add	sp, #252	; 0xfc
 8014590:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014594:	f04f 30ff 	mov.w	r0, #4294967295
 8014598:	b03f      	add	sp, #252	; 0xfc
 801459a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801459e:	4640      	mov	r0, r8
 80145a0:	4649      	mov	r1, r9
 80145a2:	aa21      	add	r2, sp, #132	; 0x84
 80145a4:	f003 ff26 	bl	80183f4 <__sprint_r>
 80145a8:	b940      	cbnz	r0, 80145bc <_vfprintf_r+0x200>
 80145aa:	ac2e      	add	r4, sp, #184	; 0xb8
 80145ac:	e765      	b.n	801447a <_vfprintf_r+0xbe>
 80145ae:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80145b0:	b123      	cbz	r3, 80145bc <_vfprintf_r+0x200>
 80145b2:	4640      	mov	r0, r8
 80145b4:	4649      	mov	r1, r9
 80145b6:	aa21      	add	r2, sp, #132	; 0x84
 80145b8:	f003 ff1c 	bl	80183f4 <__sprint_r>
 80145bc:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 80145c0:	065a      	lsls	r2, r3, #25
 80145c2:	d4e7      	bmi.n	8014594 <_vfprintf_r+0x1d8>
 80145c4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80145c6:	b03f      	add	sp, #252	; 0xfc
 80145c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80145cc:	4638      	mov	r0, r7
 80145ce:	f002 faa9 	bl	8016b24 <__sinit>
 80145d2:	e708      	b.n	80143e6 <_vfprintf_r+0x2a>
 80145d4:	9d08      	ldr	r5, [sp, #32]
 80145d6:	e753      	b.n	8014480 <_vfprintf_r+0xc4>
 80145d8:	9308      	str	r3, [sp, #32]
 80145da:	9b06      	ldr	r3, [sp, #24]
 80145dc:	46b2      	mov	sl, r6
 80145de:	069e      	lsls	r6, r3, #26
 80145e0:	f140 8318 	bpl.w	8014c14 <_vfprintf_r+0x858>
 80145e4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80145e6:	3707      	adds	r7, #7
 80145e8:	f027 0307 	bic.w	r3, r7, #7
 80145ec:	f103 0208 	add.w	r2, r3, #8
 80145f0:	e9d3 6700 	ldrd	r6, r7, [r3]
 80145f4:	920c      	str	r2, [sp, #48]	; 0x30
 80145f6:	2301      	movs	r3, #1
 80145f8:	f04f 0c00 	mov.w	ip, #0
 80145fc:	f88d c067 	strb.w	ip, [sp, #103]	; 0x67
 8014600:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 8014604:	f1ba 0f00 	cmp.w	sl, #0
 8014608:	db03      	blt.n	8014612 <_vfprintf_r+0x256>
 801460a:	9a06      	ldr	r2, [sp, #24]
 801460c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8014610:	9206      	str	r2, [sp, #24]
 8014612:	ea56 0207 	orrs.w	r2, r6, r7
 8014616:	f040 8319 	bne.w	8014c4c <_vfprintf_r+0x890>
 801461a:	f1ba 0f00 	cmp.w	sl, #0
 801461e:	f000 8416 	beq.w	8014e4e <_vfprintf_r+0xa92>
 8014622:	2b01      	cmp	r3, #1
 8014624:	f000 831a 	beq.w	8014c5c <_vfprintf_r+0x8a0>
 8014628:	2b02      	cmp	r3, #2
 801462a:	f000 844c 	beq.w	8014ec6 <_vfprintf_r+0xb0a>
 801462e:	a92e      	add	r1, sp, #184	; 0xb8
 8014630:	08f2      	lsrs	r2, r6, #3
 8014632:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
 8014636:	08f8      	lsrs	r0, r7, #3
 8014638:	f006 0307 	and.w	r3, r6, #7
 801463c:	4607      	mov	r7, r0
 801463e:	4616      	mov	r6, r2
 8014640:	3330      	adds	r3, #48	; 0x30
 8014642:	ea56 0207 	orrs.w	r2, r6, r7
 8014646:	f801 3d01 	strb.w	r3, [r1, #-1]!
 801464a:	d1f1      	bne.n	8014630 <_vfprintf_r+0x274>
 801464c:	9a06      	ldr	r2, [sp, #24]
 801464e:	910e      	str	r1, [sp, #56]	; 0x38
 8014650:	07d0      	lsls	r0, r2, #31
 8014652:	f100 850d 	bmi.w	8015070 <_vfprintf_r+0xcb4>
 8014656:	ab2e      	add	r3, sp, #184	; 0xb8
 8014658:	1a5b      	subs	r3, r3, r1
 801465a:	930b      	str	r3, [sp, #44]	; 0x2c
 801465c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801465e:	4592      	cmp	sl, r2
 8014660:	4653      	mov	r3, sl
 8014662:	bfb8      	it	lt
 8014664:	4613      	movlt	r3, r2
 8014666:	9307      	str	r3, [sp, #28]
 8014668:	2300      	movs	r3, #0
 801466a:	9310      	str	r3, [sp, #64]	; 0x40
 801466c:	f1bc 0f00 	cmp.w	ip, #0
 8014670:	d002      	beq.n	8014678 <_vfprintf_r+0x2bc>
 8014672:	9b07      	ldr	r3, [sp, #28]
 8014674:	3301      	adds	r3, #1
 8014676:	9307      	str	r3, [sp, #28]
 8014678:	9b06      	ldr	r3, [sp, #24]
 801467a:	f013 0302 	ands.w	r3, r3, #2
 801467e:	930d      	str	r3, [sp, #52]	; 0x34
 8014680:	d002      	beq.n	8014688 <_vfprintf_r+0x2cc>
 8014682:	9b07      	ldr	r3, [sp, #28]
 8014684:	3302      	adds	r3, #2
 8014686:	9307      	str	r3, [sp, #28]
 8014688:	9b06      	ldr	r3, [sp, #24]
 801468a:	f013 0684 	ands.w	r6, r3, #132	; 0x84
 801468e:	f040 82da 	bne.w	8014c46 <_vfprintf_r+0x88a>
 8014692:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014694:	9a07      	ldr	r2, [sp, #28]
 8014696:	ebc2 0a03 	rsb	sl, r2, r3
 801469a:	f1ba 0f00 	cmp.w	sl, #0
 801469e:	f340 82d2 	ble.w	8014c46 <_vfprintf_r+0x88a>
 80146a2:	f1ba 0f10 	cmp.w	sl, #16
 80146a6:	9923      	ldr	r1, [sp, #140]	; 0x8c
 80146a8:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80146aa:	4fb3      	ldr	r7, [pc, #716]	; (8014978 <_vfprintf_r+0x5bc>)
 80146ac:	bfc8      	it	gt
 80146ae:	f04f 0b10 	movgt.w	fp, #16
 80146b2:	dc07      	bgt.n	80146c4 <_vfprintf_r+0x308>
 80146b4:	e01e      	b.n	80146f4 <_vfprintf_r+0x338>
 80146b6:	f1aa 0a10 	sub.w	sl, sl, #16
 80146ba:	f1ba 0f10 	cmp.w	sl, #16
 80146be:	f104 0408 	add.w	r4, r4, #8
 80146c2:	dd17      	ble.n	80146f4 <_vfprintf_r+0x338>
 80146c4:	3201      	adds	r2, #1
 80146c6:	3110      	adds	r1, #16
 80146c8:	2a07      	cmp	r2, #7
 80146ca:	9123      	str	r1, [sp, #140]	; 0x8c
 80146cc:	9222      	str	r2, [sp, #136]	; 0x88
 80146ce:	e884 0880 	stmia.w	r4, {r7, fp}
 80146d2:	ddf0      	ble.n	80146b6 <_vfprintf_r+0x2fa>
 80146d4:	4640      	mov	r0, r8
 80146d6:	4649      	mov	r1, r9
 80146d8:	aa21      	add	r2, sp, #132	; 0x84
 80146da:	f003 fe8b 	bl	80183f4 <__sprint_r>
 80146de:	2800      	cmp	r0, #0
 80146e0:	f47f af6c 	bne.w	80145bc <_vfprintf_r+0x200>
 80146e4:	f1aa 0a10 	sub.w	sl, sl, #16
 80146e8:	f1ba 0f10 	cmp.w	sl, #16
 80146ec:	9923      	ldr	r1, [sp, #140]	; 0x8c
 80146ee:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80146f0:	ac2e      	add	r4, sp, #184	; 0xb8
 80146f2:	dce7      	bgt.n	80146c4 <_vfprintf_r+0x308>
 80146f4:	3201      	adds	r2, #1
 80146f6:	eb0a 0b01 	add.w	fp, sl, r1
 80146fa:	2a07      	cmp	r2, #7
 80146fc:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 8014700:	9222      	str	r2, [sp, #136]	; 0x88
 8014702:	e884 0480 	stmia.w	r4, {r7, sl}
 8014706:	f300 8443 	bgt.w	8014f90 <_vfprintf_r+0xbd4>
 801470a:	f89d c067 	ldrb.w	ip, [sp, #103]	; 0x67
 801470e:	3408      	adds	r4, #8
 8014710:	f1bc 0f00 	cmp.w	ip, #0
 8014714:	d00f      	beq.n	8014736 <_vfprintf_r+0x37a>
 8014716:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8014718:	3301      	adds	r3, #1
 801471a:	f10b 0b01 	add.w	fp, fp, #1
 801471e:	f10d 0167 	add.w	r1, sp, #103	; 0x67
 8014722:	2201      	movs	r2, #1
 8014724:	2b07      	cmp	r3, #7
 8014726:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 801472a:	9322      	str	r3, [sp, #136]	; 0x88
 801472c:	e884 0006 	stmia.w	r4, {r1, r2}
 8014730:	f300 83b7 	bgt.w	8014ea2 <_vfprintf_r+0xae6>
 8014734:	3408      	adds	r4, #8
 8014736:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014738:	b173      	cbz	r3, 8014758 <_vfprintf_r+0x39c>
 801473a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801473c:	3301      	adds	r3, #1
 801473e:	f10b 0b02 	add.w	fp, fp, #2
 8014742:	a91a      	add	r1, sp, #104	; 0x68
 8014744:	2202      	movs	r2, #2
 8014746:	2b07      	cmp	r3, #7
 8014748:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 801474c:	9322      	str	r3, [sp, #136]	; 0x88
 801474e:	e884 0006 	stmia.w	r4, {r1, r2}
 8014752:	f300 839a 	bgt.w	8014e8a <_vfprintf_r+0xace>
 8014756:	3408      	adds	r4, #8
 8014758:	2e80      	cmp	r6, #128	; 0x80
 801475a:	f000 82ea 	beq.w	8014d32 <_vfprintf_r+0x976>
 801475e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014760:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014762:	ebc2 0a03 	rsb	sl, r2, r3
 8014766:	f1ba 0f00 	cmp.w	sl, #0
 801476a:	dd32      	ble.n	80147d2 <_vfprintf_r+0x416>
 801476c:	f1ba 0f10 	cmp.w	sl, #16
 8014770:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8014772:	4f82      	ldr	r7, [pc, #520]	; (801497c <_vfprintf_r+0x5c0>)
 8014774:	dd22      	ble.n	80147bc <_vfprintf_r+0x400>
 8014776:	2610      	movs	r6, #16
 8014778:	465b      	mov	r3, fp
 801477a:	e006      	b.n	801478a <_vfprintf_r+0x3ce>
 801477c:	f1aa 0a10 	sub.w	sl, sl, #16
 8014780:	f1ba 0f10 	cmp.w	sl, #16
 8014784:	f104 0408 	add.w	r4, r4, #8
 8014788:	dd17      	ble.n	80147ba <_vfprintf_r+0x3fe>
 801478a:	3201      	adds	r2, #1
 801478c:	3310      	adds	r3, #16
 801478e:	2a07      	cmp	r2, #7
 8014790:	9323      	str	r3, [sp, #140]	; 0x8c
 8014792:	9222      	str	r2, [sp, #136]	; 0x88
 8014794:	6027      	str	r7, [r4, #0]
 8014796:	6066      	str	r6, [r4, #4]
 8014798:	ddf0      	ble.n	801477c <_vfprintf_r+0x3c0>
 801479a:	4640      	mov	r0, r8
 801479c:	4649      	mov	r1, r9
 801479e:	aa21      	add	r2, sp, #132	; 0x84
 80147a0:	f003 fe28 	bl	80183f4 <__sprint_r>
 80147a4:	2800      	cmp	r0, #0
 80147a6:	f47f af09 	bne.w	80145bc <_vfprintf_r+0x200>
 80147aa:	f1aa 0a10 	sub.w	sl, sl, #16
 80147ae:	f1ba 0f10 	cmp.w	sl, #16
 80147b2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80147b4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80147b6:	ac2e      	add	r4, sp, #184	; 0xb8
 80147b8:	dce7      	bgt.n	801478a <_vfprintf_r+0x3ce>
 80147ba:	469b      	mov	fp, r3
 80147bc:	3201      	adds	r2, #1
 80147be:	44d3      	add	fp, sl
 80147c0:	2a07      	cmp	r2, #7
 80147c2:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 80147c6:	9222      	str	r2, [sp, #136]	; 0x88
 80147c8:	e884 0480 	stmia.w	r4, {r7, sl}
 80147cc:	f300 8351 	bgt.w	8014e72 <_vfprintf_r+0xab6>
 80147d0:	3408      	adds	r4, #8
 80147d2:	9b06      	ldr	r3, [sp, #24]
 80147d4:	05db      	lsls	r3, r3, #23
 80147d6:	f100 8255 	bmi.w	8014c84 <_vfprintf_r+0x8c8>
 80147da:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80147dc:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80147de:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80147e0:	6022      	str	r2, [r4, #0]
 80147e2:	3301      	adds	r3, #1
 80147e4:	448b      	add	fp, r1
 80147e6:	2b07      	cmp	r3, #7
 80147e8:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 80147ec:	6061      	str	r1, [r4, #4]
 80147ee:	9322      	str	r3, [sp, #136]	; 0x88
 80147f0:	f300 8317 	bgt.w	8014e22 <_vfprintf_r+0xa66>
 80147f4:	3408      	adds	r4, #8
 80147f6:	9b06      	ldr	r3, [sp, #24]
 80147f8:	0759      	lsls	r1, r3, #29
 80147fa:	d53a      	bpl.n	8014872 <_vfprintf_r+0x4b6>
 80147fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80147fe:	9a07      	ldr	r2, [sp, #28]
 8014800:	1a9d      	subs	r5, r3, r2
 8014802:	2d00      	cmp	r5, #0
 8014804:	dd35      	ble.n	8014872 <_vfprintf_r+0x4b6>
 8014806:	2d10      	cmp	r5, #16
 8014808:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801480a:	4f5b      	ldr	r7, [pc, #364]	; (8014978 <_vfprintf_r+0x5bc>)
 801480c:	dd1e      	ble.n	801484c <_vfprintf_r+0x490>
 801480e:	2610      	movs	r6, #16
 8014810:	465a      	mov	r2, fp
 8014812:	e004      	b.n	801481e <_vfprintf_r+0x462>
 8014814:	3d10      	subs	r5, #16
 8014816:	2d10      	cmp	r5, #16
 8014818:	f104 0408 	add.w	r4, r4, #8
 801481c:	dd15      	ble.n	801484a <_vfprintf_r+0x48e>
 801481e:	3301      	adds	r3, #1
 8014820:	3210      	adds	r2, #16
 8014822:	2b07      	cmp	r3, #7
 8014824:	9223      	str	r2, [sp, #140]	; 0x8c
 8014826:	9322      	str	r3, [sp, #136]	; 0x88
 8014828:	6027      	str	r7, [r4, #0]
 801482a:	6066      	str	r6, [r4, #4]
 801482c:	ddf2      	ble.n	8014814 <_vfprintf_r+0x458>
 801482e:	4640      	mov	r0, r8
 8014830:	4649      	mov	r1, r9
 8014832:	aa21      	add	r2, sp, #132	; 0x84
 8014834:	f003 fdde 	bl	80183f4 <__sprint_r>
 8014838:	2800      	cmp	r0, #0
 801483a:	f47f aebf 	bne.w	80145bc <_vfprintf_r+0x200>
 801483e:	3d10      	subs	r5, #16
 8014840:	2d10      	cmp	r5, #16
 8014842:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8014844:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8014846:	ac2e      	add	r4, sp, #184	; 0xb8
 8014848:	dce9      	bgt.n	801481e <_vfprintf_r+0x462>
 801484a:	4693      	mov	fp, r2
 801484c:	3301      	adds	r3, #1
 801484e:	44ab      	add	fp, r5
 8014850:	2b07      	cmp	r3, #7
 8014852:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 8014856:	9322      	str	r3, [sp, #136]	; 0x88
 8014858:	6027      	str	r7, [r4, #0]
 801485a:	6065      	str	r5, [r4, #4]
 801485c:	dd09      	ble.n	8014872 <_vfprintf_r+0x4b6>
 801485e:	4640      	mov	r0, r8
 8014860:	4649      	mov	r1, r9
 8014862:	aa21      	add	r2, sp, #132	; 0x84
 8014864:	f003 fdc6 	bl	80183f4 <__sprint_r>
 8014868:	2800      	cmp	r0, #0
 801486a:	f47f aea7 	bne.w	80145bc <_vfprintf_r+0x200>
 801486e:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 8014872:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014874:	9a07      	ldr	r2, [sp, #28]
 8014876:	990a      	ldr	r1, [sp, #40]	; 0x28
 8014878:	428a      	cmp	r2, r1
 801487a:	bfac      	ite	ge
 801487c:	189b      	addge	r3, r3, r2
 801487e:	185b      	addlt	r3, r3, r1
 8014880:	9309      	str	r3, [sp, #36]	; 0x24
 8014882:	f1bb 0f00 	cmp.w	fp, #0
 8014886:	f040 82d8 	bne.w	8014e3a <_vfprintf_r+0xa7e>
 801488a:	2300      	movs	r3, #0
 801488c:	9322      	str	r3, [sp, #136]	; 0x88
 801488e:	ac2e      	add	r4, sp, #184	; 0xb8
 8014890:	e5d5      	b.n	801443e <_vfprintf_r+0x82>
 8014892:	4619      	mov	r1, r3
 8014894:	9806      	ldr	r0, [sp, #24]
 8014896:	781d      	ldrb	r5, [r3, #0]
 8014898:	f040 0004 	orr.w	r0, r0, #4
 801489c:	9006      	str	r0, [sp, #24]
 801489e:	e5fe      	b.n	801449e <_vfprintf_r+0xe2>
 80148a0:	9308      	str	r3, [sp, #32]
 80148a2:	9b06      	ldr	r3, [sp, #24]
 80148a4:	f013 0320 	ands.w	r3, r3, #32
 80148a8:	46b2      	mov	sl, r6
 80148aa:	f000 816d 	beq.w	8014b88 <_vfprintf_r+0x7cc>
 80148ae:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80148b0:	3707      	adds	r7, #7
 80148b2:	f027 0307 	bic.w	r3, r7, #7
 80148b6:	f103 0208 	add.w	r2, r3, #8
 80148ba:	e9d3 6700 	ldrd	r6, r7, [r3]
 80148be:	920c      	str	r2, [sp, #48]	; 0x30
 80148c0:	2300      	movs	r3, #0
 80148c2:	e699      	b.n	80145f8 <_vfprintf_r+0x23c>
 80148c4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80148c6:	9308      	str	r3, [sp, #32]
 80148c8:	6813      	ldr	r3, [r2, #0]
 80148ca:	930e      	str	r3, [sp, #56]	; 0x38
 80148cc:	f04f 0b00 	mov.w	fp, #0
 80148d0:	f88d b067 	strb.w	fp, [sp, #103]	; 0x67
 80148d4:	1d17      	adds	r7, r2, #4
 80148d6:	2b00      	cmp	r3, #0
 80148d8:	f000 864f 	beq.w	801557a <_vfprintf_r+0x11be>
 80148dc:	2e00      	cmp	r6, #0
 80148de:	980e      	ldr	r0, [sp, #56]	; 0x38
 80148e0:	f2c0 8601 	blt.w	80154e6 <_vfprintf_r+0x112a>
 80148e4:	4659      	mov	r1, fp
 80148e6:	4632      	mov	r2, r6
 80148e8:	f002 ff0e 	bl	8017708 <memchr>
 80148ec:	2800      	cmp	r0, #0
 80148ee:	f000 8680 	beq.w	80155f2 <_vfprintf_r+0x1236>
 80148f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80148f4:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
 80148f8:	1ac3      	subs	r3, r0, r3
 80148fa:	930b      	str	r3, [sp, #44]	; 0x2c
 80148fc:	970c      	str	r7, [sp, #48]	; 0x30
 80148fe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014902:	9307      	str	r3, [sp, #28]
 8014904:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 8014908:	f89d c067 	ldrb.w	ip, [sp, #103]	; 0x67
 801490c:	e6ae      	b.n	801466c <_vfprintf_r+0x2b0>
 801490e:	9308      	str	r3, [sp, #32]
 8014910:	4b1b      	ldr	r3, [pc, #108]	; (8014980 <_vfprintf_r+0x5c4>)
 8014912:	9314      	str	r3, [sp, #80]	; 0x50
 8014914:	9b06      	ldr	r3, [sp, #24]
 8014916:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 801491a:	0699      	lsls	r1, r3, #26
 801491c:	46b2      	mov	sl, r6
 801491e:	f140 814f 	bpl.w	8014bc0 <_vfprintf_r+0x804>
 8014922:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8014924:	3707      	adds	r7, #7
 8014926:	f027 0307 	bic.w	r3, r7, #7
 801492a:	e9d3 6700 	ldrd	r6, r7, [r3]
 801492e:	f103 0208 	add.w	r2, r3, #8
 8014932:	920c      	str	r2, [sp, #48]	; 0x30
 8014934:	9b06      	ldr	r3, [sp, #24]
 8014936:	07db      	lsls	r3, r3, #31
 8014938:	f140 82de 	bpl.w	8014ef8 <_vfprintf_r+0xb3c>
 801493c:	ea56 0307 	orrs.w	r3, r6, r7
 8014940:	f000 82da 	beq.w	8014ef8 <_vfprintf_r+0xb3c>
 8014944:	9a06      	ldr	r2, [sp, #24]
 8014946:	f88d 5069 	strb.w	r5, [sp, #105]	; 0x69
 801494a:	2330      	movs	r3, #48	; 0x30
 801494c:	f042 0202 	orr.w	r2, r2, #2
 8014950:	f88d 3068 	strb.w	r3, [sp, #104]	; 0x68
 8014954:	9206      	str	r2, [sp, #24]
 8014956:	2302      	movs	r3, #2
 8014958:	e64e      	b.n	80145f8 <_vfprintf_r+0x23c>
 801495a:	781d      	ldrb	r5, [r3, #0]
 801495c:	4619      	mov	r1, r3
 801495e:	2a00      	cmp	r2, #0
 8014960:	f47f ad9d 	bne.w	801449e <_vfprintf_r+0xe2>
 8014964:	2220      	movs	r2, #32
 8014966:	e59a      	b.n	801449e <_vfprintf_r+0xe2>
 8014968:	9906      	ldr	r1, [sp, #24]
 801496a:	f041 0120 	orr.w	r1, r1, #32
 801496e:	9106      	str	r1, [sp, #24]
 8014970:	781d      	ldrb	r5, [r3, #0]
 8014972:	4619      	mov	r1, r3
 8014974:	e593      	b.n	801449e <_vfprintf_r+0xe2>
 8014976:	bf00      	nop
 8014978:	0802d734 	.word	0x0802d734
 801497c:	0802d724 	.word	0x0802d724
 8014980:	0802d6f4 	.word	0x0802d6f4
 8014984:	9308      	str	r3, [sp, #32]
 8014986:	9b06      	ldr	r3, [sp, #24]
 8014988:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 801498c:	f043 0310 	orr.w	r3, r3, #16
 8014990:	9306      	str	r3, [sp, #24]
 8014992:	9b06      	ldr	r3, [sp, #24]
 8014994:	0699      	lsls	r1, r3, #26
 8014996:	46b2      	mov	sl, r6
 8014998:	f140 809c 	bpl.w	8014ad4 <_vfprintf_r+0x718>
 801499c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801499e:	3707      	adds	r7, #7
 80149a0:	f027 0707 	bic.w	r7, r7, #7
 80149a4:	e9d7 2300 	ldrd	r2, r3, [r7]
 80149a8:	f107 0108 	add.w	r1, r7, #8
 80149ac:	910c      	str	r1, [sp, #48]	; 0x30
 80149ae:	4616      	mov	r6, r2
 80149b0:	461f      	mov	r7, r3
 80149b2:	2a00      	cmp	r2, #0
 80149b4:	f173 0300 	sbcs.w	r3, r3, #0
 80149b8:	f2c0 8415 	blt.w	80151e6 <_vfprintf_r+0xe2a>
 80149bc:	f89d c067 	ldrb.w	ip, [sp, #103]	; 0x67
 80149c0:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 80149c4:	2301      	movs	r3, #1
 80149c6:	e61d      	b.n	8014604 <_vfprintf_r+0x248>
 80149c8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80149ca:	9308      	str	r3, [sp, #32]
 80149cc:	3707      	adds	r7, #7
 80149ce:	f027 0307 	bic.w	r3, r7, #7
 80149d2:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 80149d6:	f103 0208 	add.w	r2, r3, #8
 80149da:	920c      	str	r2, [sp, #48]	; 0x30
 80149dc:	681a      	ldr	r2, [r3, #0]
 80149de:	9212      	str	r2, [sp, #72]	; 0x48
 80149e0:	685b      	ldr	r3, [r3, #4]
 80149e2:	9313      	str	r3, [sp, #76]	; 0x4c
 80149e4:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80149e6:	9812      	ldr	r0, [sp, #72]	; 0x48
 80149e8:	f003 fbc6 	bl	8018178 <__fpclassifyd>
 80149ec:	2801      	cmp	r0, #1
 80149ee:	46b3      	mov	fp, r6
 80149f0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80149f2:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80149f4:	f040 8406 	bne.w	8015204 <_vfprintf_r+0xe48>
 80149f8:	2200      	movs	r2, #0
 80149fa:	2300      	movs	r3, #0
 80149fc:	f7ec f888 	bl	8000b10 <__aeabi_dcmplt>
 8014a00:	2800      	cmp	r0, #0
 8014a02:	f040 85ee 	bne.w	80155e2 <_vfprintf_r+0x1226>
 8014a06:	f89d c067 	ldrb.w	ip, [sp, #103]	; 0x67
 8014a0a:	9e06      	ldr	r6, [sp, #24]
 8014a0c:	4a99      	ldr	r2, [pc, #612]	; (8014c74 <_vfprintf_r+0x8b8>)
 8014a0e:	4b9a      	ldr	r3, [pc, #616]	; (8014c78 <_vfprintf_r+0x8bc>)
 8014a10:	2103      	movs	r1, #3
 8014a12:	2000      	movs	r0, #0
 8014a14:	f026 0680 	bic.w	r6, r6, #128	; 0x80
 8014a18:	2d47      	cmp	r5, #71	; 0x47
 8014a1a:	bfd8      	it	le
 8014a1c:	461a      	movle	r2, r3
 8014a1e:	9107      	str	r1, [sp, #28]
 8014a20:	900f      	str	r0, [sp, #60]	; 0x3c
 8014a22:	9606      	str	r6, [sp, #24]
 8014a24:	920e      	str	r2, [sp, #56]	; 0x38
 8014a26:	910b      	str	r1, [sp, #44]	; 0x2c
 8014a28:	9010      	str	r0, [sp, #64]	; 0x40
 8014a2a:	e61f      	b.n	801466c <_vfprintf_r+0x2b0>
 8014a2c:	9906      	ldr	r1, [sp, #24]
 8014a2e:	f041 0108 	orr.w	r1, r1, #8
 8014a32:	9106      	str	r1, [sp, #24]
 8014a34:	781d      	ldrb	r5, [r3, #0]
 8014a36:	4619      	mov	r1, r3
 8014a38:	e531      	b.n	801449e <_vfprintf_r+0xe2>
 8014a3a:	781d      	ldrb	r5, [r3, #0]
 8014a3c:	4619      	mov	r1, r3
 8014a3e:	222b      	movs	r2, #43	; 0x2b
 8014a40:	e52d      	b.n	801449e <_vfprintf_r+0xe2>
 8014a42:	9906      	ldr	r1, [sp, #24]
 8014a44:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8014a48:	9106      	str	r1, [sp, #24]
 8014a4a:	781d      	ldrb	r5, [r3, #0]
 8014a4c:	4619      	mov	r1, r3
 8014a4e:	e526      	b.n	801449e <_vfprintf_r+0xe2>
 8014a50:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
 8014a54:	2100      	movs	r1, #0
 8014a56:	f813 5b01 	ldrb.w	r5, [r3], #1
 8014a5a:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8014a5e:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8014a62:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
 8014a66:	2809      	cmp	r0, #9
 8014a68:	d9f5      	bls.n	8014a56 <_vfprintf_r+0x69a>
 8014a6a:	910a      	str	r1, [sp, #40]	; 0x28
 8014a6c:	e518      	b.n	80144a0 <_vfprintf_r+0xe4>
 8014a6e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014a70:	9308      	str	r3, [sp, #32]
 8014a72:	2330      	movs	r3, #48	; 0x30
 8014a74:	9a06      	ldr	r2, [sp, #24]
 8014a76:	f88d 3068 	strb.w	r3, [sp, #104]	; 0x68
 8014a7a:	460b      	mov	r3, r1
 8014a7c:	3304      	adds	r3, #4
 8014a7e:	2578      	movs	r5, #120	; 0x78
 8014a80:	f042 0202 	orr.w	r2, r2, #2
 8014a84:	930c      	str	r3, [sp, #48]	; 0x30
 8014a86:	4b7d      	ldr	r3, [pc, #500]	; (8014c7c <_vfprintf_r+0x8c0>)
 8014a88:	9314      	str	r3, [sp, #80]	; 0x50
 8014a8a:	46b2      	mov	sl, r6
 8014a8c:	9206      	str	r2, [sp, #24]
 8014a8e:	680e      	ldr	r6, [r1, #0]
 8014a90:	f88d 5069 	strb.w	r5, [sp, #105]	; 0x69
 8014a94:	2700      	movs	r7, #0
 8014a96:	2302      	movs	r3, #2
 8014a98:	e5ae      	b.n	80145f8 <_vfprintf_r+0x23c>
 8014a9a:	9906      	ldr	r1, [sp, #24]
 8014a9c:	f041 0101 	orr.w	r1, r1, #1
 8014aa0:	9106      	str	r1, [sp, #24]
 8014aa2:	781d      	ldrb	r5, [r3, #0]
 8014aa4:	4619      	mov	r1, r3
 8014aa6:	e4fa      	b.n	801449e <_vfprintf_r+0xe2>
 8014aa8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8014aaa:	6829      	ldr	r1, [r5, #0]
 8014aac:	910a      	str	r1, [sp, #40]	; 0x28
 8014aae:	4608      	mov	r0, r1
 8014ab0:	2800      	cmp	r0, #0
 8014ab2:	4629      	mov	r1, r5
 8014ab4:	f101 0104 	add.w	r1, r1, #4
 8014ab8:	f2c0 84e3 	blt.w	8015482 <_vfprintf_r+0x10c6>
 8014abc:	910c      	str	r1, [sp, #48]	; 0x30
 8014abe:	781d      	ldrb	r5, [r3, #0]
 8014ac0:	4619      	mov	r1, r3
 8014ac2:	e4ec      	b.n	801449e <_vfprintf_r+0xe2>
 8014ac4:	9308      	str	r3, [sp, #32]
 8014ac6:	9b06      	ldr	r3, [sp, #24]
 8014ac8:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 8014acc:	0699      	lsls	r1, r3, #26
 8014ace:	46b2      	mov	sl, r6
 8014ad0:	f53f af64 	bmi.w	801499c <_vfprintf_r+0x5e0>
 8014ad4:	9b06      	ldr	r3, [sp, #24]
 8014ad6:	06da      	lsls	r2, r3, #27
 8014ad8:	f100 8292 	bmi.w	8015000 <_vfprintf_r+0xc44>
 8014adc:	9b06      	ldr	r3, [sp, #24]
 8014ade:	065b      	lsls	r3, r3, #25
 8014ae0:	f140 828e 	bpl.w	8015000 <_vfprintf_r+0xc44>
 8014ae4:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014ae6:	f9b1 6000 	ldrsh.w	r6, [r1]
 8014aea:	3104      	adds	r1, #4
 8014aec:	17f7      	asrs	r7, r6, #31
 8014aee:	4632      	mov	r2, r6
 8014af0:	463b      	mov	r3, r7
 8014af2:	910c      	str	r1, [sp, #48]	; 0x30
 8014af4:	e75d      	b.n	80149b2 <_vfprintf_r+0x5f6>
 8014af6:	9906      	ldr	r1, [sp, #24]
 8014af8:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8014afc:	9106      	str	r1, [sp, #24]
 8014afe:	781d      	ldrb	r5, [r3, #0]
 8014b00:	4619      	mov	r1, r3
 8014b02:	e4cc      	b.n	801449e <_vfprintf_r+0xe2>
 8014b04:	781d      	ldrb	r5, [r3, #0]
 8014b06:	9906      	ldr	r1, [sp, #24]
 8014b08:	2d6c      	cmp	r5, #108	; 0x6c
 8014b0a:	f000 84b3 	beq.w	8015474 <_vfprintf_r+0x10b8>
 8014b0e:	f041 0110 	orr.w	r1, r1, #16
 8014b12:	9106      	str	r1, [sp, #24]
 8014b14:	4619      	mov	r1, r3
 8014b16:	e4c2      	b.n	801449e <_vfprintf_r+0xe2>
 8014b18:	9308      	str	r3, [sp, #32]
 8014b1a:	9b06      	ldr	r3, [sp, #24]
 8014b1c:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 8014b20:	069a      	lsls	r2, r3, #26
 8014b22:	f140 8400 	bpl.w	8015326 <_vfprintf_r+0xf6a>
 8014b26:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014b28:	9909      	ldr	r1, [sp, #36]	; 0x24
 8014b2a:	6813      	ldr	r3, [r2, #0]
 8014b2c:	17cf      	asrs	r7, r1, #31
 8014b2e:	4608      	mov	r0, r1
 8014b30:	3204      	adds	r2, #4
 8014b32:	4639      	mov	r1, r7
 8014b34:	920c      	str	r2, [sp, #48]	; 0x30
 8014b36:	e9c3 0100 	strd	r0, r1, [r3]
 8014b3a:	e480      	b.n	801443e <_vfprintf_r+0x82>
 8014b3c:	781d      	ldrb	r5, [r3, #0]
 8014b3e:	2d2a      	cmp	r5, #42	; 0x2a
 8014b40:	f103 0101 	add.w	r1, r3, #1
 8014b44:	f000 860e 	beq.w	8015764 <_vfprintf_r+0x13a8>
 8014b48:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
 8014b4c:	2809      	cmp	r0, #9
 8014b4e:	460b      	mov	r3, r1
 8014b50:	f04f 0600 	mov.w	r6, #0
 8014b54:	f63f aca4 	bhi.w	80144a0 <_vfprintf_r+0xe4>
 8014b58:	f813 5b01 	ldrb.w	r5, [r3], #1
 8014b5c:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 8014b60:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8014b64:	f1a5 0030 	sub.w	r0, r5, #48	; 0x30
 8014b68:	2809      	cmp	r0, #9
 8014b6a:	d9f5      	bls.n	8014b58 <_vfprintf_r+0x79c>
 8014b6c:	ea46 76e6 	orr.w	r6, r6, r6, asr #31
 8014b70:	e496      	b.n	80144a0 <_vfprintf_r+0xe4>
 8014b72:	9308      	str	r3, [sp, #32]
 8014b74:	9b06      	ldr	r3, [sp, #24]
 8014b76:	f043 0310 	orr.w	r3, r3, #16
 8014b7a:	9306      	str	r3, [sp, #24]
 8014b7c:	9b06      	ldr	r3, [sp, #24]
 8014b7e:	f013 0320 	ands.w	r3, r3, #32
 8014b82:	46b2      	mov	sl, r6
 8014b84:	f47f ae93 	bne.w	80148ae <_vfprintf_r+0x4f2>
 8014b88:	9a06      	ldr	r2, [sp, #24]
 8014b8a:	f012 0210 	ands.w	r2, r2, #16
 8014b8e:	f040 8240 	bne.w	8015012 <_vfprintf_r+0xc56>
 8014b92:	9b06      	ldr	r3, [sp, #24]
 8014b94:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8014b98:	f000 823b 	beq.w	8015012 <_vfprintf_r+0xc56>
 8014b9c:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014b9e:	4613      	mov	r3, r2
 8014ba0:	460a      	mov	r2, r1
 8014ba2:	3204      	adds	r2, #4
 8014ba4:	880e      	ldrh	r6, [r1, #0]
 8014ba6:	920c      	str	r2, [sp, #48]	; 0x30
 8014ba8:	2700      	movs	r7, #0
 8014baa:	e525      	b.n	80145f8 <_vfprintf_r+0x23c>
 8014bac:	9308      	str	r3, [sp, #32]
 8014bae:	4b34      	ldr	r3, [pc, #208]	; (8014c80 <_vfprintf_r+0x8c4>)
 8014bb0:	9314      	str	r3, [sp, #80]	; 0x50
 8014bb2:	9b06      	ldr	r3, [sp, #24]
 8014bb4:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 8014bb8:	0699      	lsls	r1, r3, #26
 8014bba:	46b2      	mov	sl, r6
 8014bbc:	f53f aeb1 	bmi.w	8014922 <_vfprintf_r+0x566>
 8014bc0:	9b06      	ldr	r3, [sp, #24]
 8014bc2:	06da      	lsls	r2, r3, #27
 8014bc4:	f140 83c6 	bpl.w	8015354 <_vfprintf_r+0xf98>
 8014bc8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014bca:	4613      	mov	r3, r2
 8014bcc:	3304      	adds	r3, #4
 8014bce:	6816      	ldr	r6, [r2, #0]
 8014bd0:	930c      	str	r3, [sp, #48]	; 0x30
 8014bd2:	2700      	movs	r7, #0
 8014bd4:	e6ae      	b.n	8014934 <_vfprintf_r+0x578>
 8014bd6:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014bd8:	9308      	str	r3, [sp, #32]
 8014bda:	680a      	ldr	r2, [r1, #0]
 8014bdc:	f88d 2090 	strb.w	r2, [sp, #144]	; 0x90
 8014be0:	2300      	movs	r3, #0
 8014be2:	2201      	movs	r2, #1
 8014be4:	3104      	adds	r1, #4
 8014be6:	469c      	mov	ip, r3
 8014be8:	9207      	str	r2, [sp, #28]
 8014bea:	910c      	str	r1, [sp, #48]	; 0x30
 8014bec:	f88d 3067 	strb.w	r3, [sp, #103]	; 0x67
 8014bf0:	ab24      	add	r3, sp, #144	; 0x90
 8014bf2:	f8cd c03c 	str.w	ip, [sp, #60]	; 0x3c
 8014bf6:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
 8014bfa:	920b      	str	r2, [sp, #44]	; 0x2c
 8014bfc:	930e      	str	r3, [sp, #56]	; 0x38
 8014bfe:	e53b      	b.n	8014678 <_vfprintf_r+0x2bc>
 8014c00:	9308      	str	r3, [sp, #32]
 8014c02:	9b06      	ldr	r3, [sp, #24]
 8014c04:	f043 0310 	orr.w	r3, r3, #16
 8014c08:	9306      	str	r3, [sp, #24]
 8014c0a:	9b06      	ldr	r3, [sp, #24]
 8014c0c:	46b2      	mov	sl, r6
 8014c0e:	069e      	lsls	r6, r3, #26
 8014c10:	f53f ace8 	bmi.w	80145e4 <_vfprintf_r+0x228>
 8014c14:	9b06      	ldr	r3, [sp, #24]
 8014c16:	06d8      	lsls	r0, r3, #27
 8014c18:	f140 8377 	bpl.w	801530a <_vfprintf_r+0xf4e>
 8014c1c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014c1e:	4613      	mov	r3, r2
 8014c20:	3204      	adds	r2, #4
 8014c22:	681e      	ldr	r6, [r3, #0]
 8014c24:	920c      	str	r2, [sp, #48]	; 0x30
 8014c26:	2301      	movs	r3, #1
 8014c28:	2700      	movs	r7, #0
 8014c2a:	e4e5      	b.n	80145f8 <_vfprintf_r+0x23c>
 8014c2c:	9308      	str	r3, [sp, #32]
 8014c2e:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 8014c32:	2d00      	cmp	r5, #0
 8014c34:	f43f acbb 	beq.w	80145ae <_vfprintf_r+0x1f2>
 8014c38:	2300      	movs	r3, #0
 8014c3a:	2201      	movs	r2, #1
 8014c3c:	469c      	mov	ip, r3
 8014c3e:	9207      	str	r2, [sp, #28]
 8014c40:	f88d 5090 	strb.w	r5, [sp, #144]	; 0x90
 8014c44:	e7d2      	b.n	8014bec <_vfprintf_r+0x830>
 8014c46:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 8014c4a:	e561      	b.n	8014710 <_vfprintf_r+0x354>
 8014c4c:	2b01      	cmp	r3, #1
 8014c4e:	f47f aceb 	bne.w	8014628 <_vfprintf_r+0x26c>
 8014c52:	2f00      	cmp	r7, #0
 8014c54:	bf08      	it	eq
 8014c56:	2e0a      	cmpeq	r6, #10
 8014c58:	f080 81ef 	bcs.w	801503a <_vfprintf_r+0xc7e>
 8014c5c:	f10d 0bf8 	add.w	fp, sp, #248	; 0xf8
 8014c60:	3630      	adds	r6, #48	; 0x30
 8014c62:	f80b 6d41 	strb.w	r6, [fp, #-65]!
 8014c66:	ab2e      	add	r3, sp, #184	; 0xb8
 8014c68:	ebcb 0303 	rsb	r3, fp, r3
 8014c6c:	930b      	str	r3, [sp, #44]	; 0x2c
 8014c6e:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
 8014c72:	e4f3      	b.n	801465c <_vfprintf_r+0x2a0>
 8014c74:	0802d6d4 	.word	0x0802d6d4
 8014c78:	0802d6d0 	.word	0x0802d6d0
 8014c7c:	0802d6f4 	.word	0x0802d6f4
 8014c80:	0802d6e0 	.word	0x0802d6e0
 8014c84:	2d65      	cmp	r5, #101	; 0x65
 8014c86:	f340 808a 	ble.w	8014d9e <_vfprintf_r+0x9e2>
 8014c8a:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014c8c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8014c8e:	2200      	movs	r2, #0
 8014c90:	2300      	movs	r3, #0
 8014c92:	f7eb ff33 	bl	8000afc <__aeabi_dcmpeq>
 8014c96:	2800      	cmp	r0, #0
 8014c98:	f000 8131 	beq.w	8014efe <_vfprintf_r+0xb42>
 8014c9c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8014c9e:	4aba      	ldr	r2, [pc, #744]	; (8014f88 <_vfprintf_r+0xbcc>)
 8014ca0:	6022      	str	r2, [r4, #0]
 8014ca2:	3301      	adds	r3, #1
 8014ca4:	f10b 0b01 	add.w	fp, fp, #1
 8014ca8:	2201      	movs	r2, #1
 8014caa:	2b07      	cmp	r3, #7
 8014cac:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 8014cb0:	9322      	str	r3, [sp, #136]	; 0x88
 8014cb2:	6062      	str	r2, [r4, #4]
 8014cb4:	f300 8367 	bgt.w	8015386 <_vfprintf_r+0xfca>
 8014cb8:	3408      	adds	r4, #8
 8014cba:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8014cbc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014cbe:	4293      	cmp	r3, r2
 8014cc0:	db03      	blt.n	8014cca <_vfprintf_r+0x90e>
 8014cc2:	9b06      	ldr	r3, [sp, #24]
 8014cc4:	07df      	lsls	r7, r3, #31
 8014cc6:	f57f ad96 	bpl.w	80147f6 <_vfprintf_r+0x43a>
 8014cca:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8014ccc:	9916      	ldr	r1, [sp, #88]	; 0x58
 8014cce:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8014cd0:	6022      	str	r2, [r4, #0]
 8014cd2:	3301      	adds	r3, #1
 8014cd4:	448b      	add	fp, r1
 8014cd6:	2b07      	cmp	r3, #7
 8014cd8:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 8014cdc:	6061      	str	r1, [r4, #4]
 8014cde:	9322      	str	r3, [sp, #136]	; 0x88
 8014ce0:	f300 83d6 	bgt.w	8015490 <_vfprintf_r+0x10d4>
 8014ce4:	3408      	adds	r4, #8
 8014ce6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014ce8:	1e5d      	subs	r5, r3, #1
 8014cea:	2d00      	cmp	r5, #0
 8014cec:	f77f ad83 	ble.w	80147f6 <_vfprintf_r+0x43a>
 8014cf0:	2d10      	cmp	r5, #16
 8014cf2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8014cf4:	4fa5      	ldr	r7, [pc, #660]	; (8014f8c <_vfprintf_r+0xbd0>)
 8014cf6:	f340 8195 	ble.w	8015024 <_vfprintf_r+0xc68>
 8014cfa:	2610      	movs	r6, #16
 8014cfc:	465a      	mov	r2, fp
 8014cfe:	e004      	b.n	8014d0a <_vfprintf_r+0x94e>
 8014d00:	3408      	adds	r4, #8
 8014d02:	3d10      	subs	r5, #16
 8014d04:	2d10      	cmp	r5, #16
 8014d06:	f340 818c 	ble.w	8015022 <_vfprintf_r+0xc66>
 8014d0a:	3301      	adds	r3, #1
 8014d0c:	3210      	adds	r2, #16
 8014d0e:	2b07      	cmp	r3, #7
 8014d10:	9223      	str	r2, [sp, #140]	; 0x8c
 8014d12:	9322      	str	r3, [sp, #136]	; 0x88
 8014d14:	6027      	str	r7, [r4, #0]
 8014d16:	6066      	str	r6, [r4, #4]
 8014d18:	ddf2      	ble.n	8014d00 <_vfprintf_r+0x944>
 8014d1a:	4640      	mov	r0, r8
 8014d1c:	4649      	mov	r1, r9
 8014d1e:	aa21      	add	r2, sp, #132	; 0x84
 8014d20:	f003 fb68 	bl	80183f4 <__sprint_r>
 8014d24:	2800      	cmp	r0, #0
 8014d26:	f47f ac49 	bne.w	80145bc <_vfprintf_r+0x200>
 8014d2a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8014d2c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8014d2e:	ac2e      	add	r4, sp, #184	; 0xb8
 8014d30:	e7e7      	b.n	8014d02 <_vfprintf_r+0x946>
 8014d32:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014d34:	9a07      	ldr	r2, [sp, #28]
 8014d36:	1a9e      	subs	r6, r3, r2
 8014d38:	2e00      	cmp	r6, #0
 8014d3a:	f77f ad10 	ble.w	801475e <_vfprintf_r+0x3a2>
 8014d3e:	2e10      	cmp	r6, #16
 8014d40:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8014d42:	4f92      	ldr	r7, [pc, #584]	; (8014f8c <_vfprintf_r+0xbd0>)
 8014d44:	dd1f      	ble.n	8014d86 <_vfprintf_r+0x9ca>
 8014d46:	f04f 0a10 	mov.w	sl, #16
 8014d4a:	465b      	mov	r3, fp
 8014d4c:	e004      	b.n	8014d58 <_vfprintf_r+0x99c>
 8014d4e:	3e10      	subs	r6, #16
 8014d50:	2e10      	cmp	r6, #16
 8014d52:	f104 0408 	add.w	r4, r4, #8
 8014d56:	dd15      	ble.n	8014d84 <_vfprintf_r+0x9c8>
 8014d58:	3201      	adds	r2, #1
 8014d5a:	3310      	adds	r3, #16
 8014d5c:	2a07      	cmp	r2, #7
 8014d5e:	9323      	str	r3, [sp, #140]	; 0x8c
 8014d60:	9222      	str	r2, [sp, #136]	; 0x88
 8014d62:	e884 0480 	stmia.w	r4, {r7, sl}
 8014d66:	ddf2      	ble.n	8014d4e <_vfprintf_r+0x992>
 8014d68:	4640      	mov	r0, r8
 8014d6a:	4649      	mov	r1, r9
 8014d6c:	aa21      	add	r2, sp, #132	; 0x84
 8014d6e:	f003 fb41 	bl	80183f4 <__sprint_r>
 8014d72:	2800      	cmp	r0, #0
 8014d74:	f47f ac22 	bne.w	80145bc <_vfprintf_r+0x200>
 8014d78:	3e10      	subs	r6, #16
 8014d7a:	2e10      	cmp	r6, #16
 8014d7c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8014d7e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8014d80:	ac2e      	add	r4, sp, #184	; 0xb8
 8014d82:	dce9      	bgt.n	8014d58 <_vfprintf_r+0x99c>
 8014d84:	469b      	mov	fp, r3
 8014d86:	3201      	adds	r2, #1
 8014d88:	44b3      	add	fp, r6
 8014d8a:	2a07      	cmp	r2, #7
 8014d8c:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 8014d90:	9222      	str	r2, [sp, #136]	; 0x88
 8014d92:	6027      	str	r7, [r4, #0]
 8014d94:	6066      	str	r6, [r4, #4]
 8014d96:	f300 8219 	bgt.w	80151cc <_vfprintf_r+0xe10>
 8014d9a:	3408      	adds	r4, #8
 8014d9c:	e4df      	b.n	801475e <_vfprintf_r+0x3a2>
 8014d9e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014da0:	9d22      	ldr	r5, [sp, #136]	; 0x88
 8014da2:	2b01      	cmp	r3, #1
 8014da4:	f340 81d4 	ble.w	8015150 <_vfprintf_r+0xd94>
 8014da8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014daa:	6023      	str	r3, [r4, #0]
 8014dac:	3501      	adds	r5, #1
 8014dae:	f10b 0601 	add.w	r6, fp, #1
 8014db2:	2301      	movs	r3, #1
 8014db4:	2d07      	cmp	r5, #7
 8014db6:	9623      	str	r6, [sp, #140]	; 0x8c
 8014db8:	9522      	str	r5, [sp, #136]	; 0x88
 8014dba:	6063      	str	r3, [r4, #4]
 8014dbc:	f300 81e4 	bgt.w	8015188 <_vfprintf_r+0xdcc>
 8014dc0:	3408      	adds	r4, #8
 8014dc2:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8014dc4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014dc6:	6023      	str	r3, [r4, #0]
 8014dc8:	3501      	adds	r5, #1
 8014dca:	4416      	add	r6, r2
 8014dcc:	2d07      	cmp	r5, #7
 8014dce:	9623      	str	r6, [sp, #140]	; 0x8c
 8014dd0:	9522      	str	r5, [sp, #136]	; 0x88
 8014dd2:	6062      	str	r2, [r4, #4]
 8014dd4:	f300 81e4 	bgt.w	80151a0 <_vfprintf_r+0xde4>
 8014dd8:	3408      	adds	r4, #8
 8014dda:	2300      	movs	r3, #0
 8014ddc:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014dde:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8014de0:	2200      	movs	r2, #0
 8014de2:	f7eb fe8b 	bl	8000afc <__aeabi_dcmpeq>
 8014de6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014de8:	2800      	cmp	r0, #0
 8014dea:	f040 80e0 	bne.w	8014fae <_vfprintf_r+0xbf2>
 8014dee:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014df0:	3b01      	subs	r3, #1
 8014df2:	3501      	adds	r5, #1
 8014df4:	3201      	adds	r2, #1
 8014df6:	441e      	add	r6, r3
 8014df8:	2d07      	cmp	r5, #7
 8014dfa:	9522      	str	r5, [sp, #136]	; 0x88
 8014dfc:	9623      	str	r6, [sp, #140]	; 0x8c
 8014dfe:	6022      	str	r2, [r4, #0]
 8014e00:	6063      	str	r3, [r4, #4]
 8014e02:	f300 81b5 	bgt.w	8015170 <_vfprintf_r+0xdb4>
 8014e06:	3408      	adds	r4, #8
 8014e08:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8014e0a:	6062      	str	r2, [r4, #4]
 8014e0c:	3501      	adds	r5, #1
 8014e0e:	eb06 0b02 	add.w	fp, r6, r2
 8014e12:	ab1d      	add	r3, sp, #116	; 0x74
 8014e14:	2d07      	cmp	r5, #7
 8014e16:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 8014e1a:	9522      	str	r5, [sp, #136]	; 0x88
 8014e1c:	6023      	str	r3, [r4, #0]
 8014e1e:	f77f ace9 	ble.w	80147f4 <_vfprintf_r+0x438>
 8014e22:	4640      	mov	r0, r8
 8014e24:	4649      	mov	r1, r9
 8014e26:	aa21      	add	r2, sp, #132	; 0x84
 8014e28:	f003 fae4 	bl	80183f4 <__sprint_r>
 8014e2c:	2800      	cmp	r0, #0
 8014e2e:	f47f abc5 	bne.w	80145bc <_vfprintf_r+0x200>
 8014e32:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 8014e36:	ac2e      	add	r4, sp, #184	; 0xb8
 8014e38:	e4dd      	b.n	80147f6 <_vfprintf_r+0x43a>
 8014e3a:	4640      	mov	r0, r8
 8014e3c:	4649      	mov	r1, r9
 8014e3e:	aa21      	add	r2, sp, #132	; 0x84
 8014e40:	f003 fad8 	bl	80183f4 <__sprint_r>
 8014e44:	2800      	cmp	r0, #0
 8014e46:	f43f ad20 	beq.w	801488a <_vfprintf_r+0x4ce>
 8014e4a:	f7ff bbb7 	b.w	80145bc <_vfprintf_r+0x200>
 8014e4e:	2b00      	cmp	r3, #0
 8014e50:	d133      	bne.n	8014eba <_vfprintf_r+0xafe>
 8014e52:	9b06      	ldr	r3, [sp, #24]
 8014e54:	07da      	lsls	r2, r3, #31
 8014e56:	d530      	bpl.n	8014eba <_vfprintf_r+0xafe>
 8014e58:	f10d 0bf8 	add.w	fp, sp, #248	; 0xf8
 8014e5c:	2330      	movs	r3, #48	; 0x30
 8014e5e:	f80b 3d41 	strb.w	r3, [fp, #-65]!
 8014e62:	ab2e      	add	r3, sp, #184	; 0xb8
 8014e64:	ebcb 0303 	rsb	r3, fp, r3
 8014e68:	930b      	str	r3, [sp, #44]	; 0x2c
 8014e6a:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
 8014e6e:	f7ff bbf5 	b.w	801465c <_vfprintf_r+0x2a0>
 8014e72:	4640      	mov	r0, r8
 8014e74:	4649      	mov	r1, r9
 8014e76:	aa21      	add	r2, sp, #132	; 0x84
 8014e78:	f003 fabc 	bl	80183f4 <__sprint_r>
 8014e7c:	2800      	cmp	r0, #0
 8014e7e:	f47f ab9d 	bne.w	80145bc <_vfprintf_r+0x200>
 8014e82:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 8014e86:	ac2e      	add	r4, sp, #184	; 0xb8
 8014e88:	e4a3      	b.n	80147d2 <_vfprintf_r+0x416>
 8014e8a:	4640      	mov	r0, r8
 8014e8c:	4649      	mov	r1, r9
 8014e8e:	aa21      	add	r2, sp, #132	; 0x84
 8014e90:	f003 fab0 	bl	80183f4 <__sprint_r>
 8014e94:	2800      	cmp	r0, #0
 8014e96:	f47f ab91 	bne.w	80145bc <_vfprintf_r+0x200>
 8014e9a:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 8014e9e:	ac2e      	add	r4, sp, #184	; 0xb8
 8014ea0:	e45a      	b.n	8014758 <_vfprintf_r+0x39c>
 8014ea2:	4640      	mov	r0, r8
 8014ea4:	4649      	mov	r1, r9
 8014ea6:	aa21      	add	r2, sp, #132	; 0x84
 8014ea8:	f003 faa4 	bl	80183f4 <__sprint_r>
 8014eac:	2800      	cmp	r0, #0
 8014eae:	f47f ab85 	bne.w	80145bc <_vfprintf_r+0x200>
 8014eb2:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 8014eb6:	ac2e      	add	r4, sp, #184	; 0xb8
 8014eb8:	e43d      	b.n	8014736 <_vfprintf_r+0x37a>
 8014eba:	ab2e      	add	r3, sp, #184	; 0xb8
 8014ebc:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
 8014ec0:	930e      	str	r3, [sp, #56]	; 0x38
 8014ec2:	f7ff bbcb 	b.w	801465c <_vfprintf_r+0x2a0>
 8014ec6:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014ec8:	f10d 0bb8 	add.w	fp, sp, #184	; 0xb8
 8014ecc:	0933      	lsrs	r3, r6, #4
 8014ece:	f006 010f 	and.w	r1, r6, #15
 8014ed2:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
 8014ed6:	093a      	lsrs	r2, r7, #4
 8014ed8:	461e      	mov	r6, r3
 8014eda:	4617      	mov	r7, r2
 8014edc:	5c43      	ldrb	r3, [r0, r1]
 8014ede:	f80b 3d01 	strb.w	r3, [fp, #-1]!
 8014ee2:	ea56 0307 	orrs.w	r3, r6, r7
 8014ee6:	d1f1      	bne.n	8014ecc <_vfprintf_r+0xb10>
 8014ee8:	465a      	mov	r2, fp
 8014eea:	ab2e      	add	r3, sp, #184	; 0xb8
 8014eec:	1a9b      	subs	r3, r3, r2
 8014eee:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
 8014ef2:	930b      	str	r3, [sp, #44]	; 0x2c
 8014ef4:	f7ff bbb2 	b.w	801465c <_vfprintf_r+0x2a0>
 8014ef8:	2302      	movs	r3, #2
 8014efa:	f7ff bb7d 	b.w	80145f8 <_vfprintf_r+0x23c>
 8014efe:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8014f00:	2d00      	cmp	r5, #0
 8014f02:	f340 824c 	ble.w	801539e <_vfprintf_r+0xfe2>
 8014f06:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014f08:	9910      	ldr	r1, [sp, #64]	; 0x40
 8014f0a:	428a      	cmp	r2, r1
 8014f0c:	4613      	mov	r3, r2
 8014f0e:	bfa8      	it	ge
 8014f10:	460b      	movge	r3, r1
 8014f12:	461d      	mov	r5, r3
 8014f14:	990e      	ldr	r1, [sp, #56]	; 0x38
 8014f16:	2d00      	cmp	r5, #0
 8014f18:	eb01 0a02 	add.w	sl, r1, r2
 8014f1c:	dd0b      	ble.n	8014f36 <_vfprintf_r+0xb7a>
 8014f1e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8014f20:	6021      	str	r1, [r4, #0]
 8014f22:	3301      	adds	r3, #1
 8014f24:	44ab      	add	fp, r5
 8014f26:	2b07      	cmp	r3, #7
 8014f28:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 8014f2c:	6065      	str	r5, [r4, #4]
 8014f2e:	9322      	str	r3, [sp, #136]	; 0x88
 8014f30:	f300 8300 	bgt.w	8015534 <_vfprintf_r+0x1178>
 8014f34:	3408      	adds	r4, #8
 8014f36:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014f38:	2d00      	cmp	r5, #0
 8014f3a:	bfa8      	it	ge
 8014f3c:	1b5b      	subge	r3, r3, r5
 8014f3e:	2b00      	cmp	r3, #0
 8014f40:	461d      	mov	r5, r3
 8014f42:	f340 80af 	ble.w	80150a4 <_vfprintf_r+0xce8>
 8014f46:	2d10      	cmp	r5, #16
 8014f48:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8014f4a:	4f10      	ldr	r7, [pc, #64]	; (8014f8c <_vfprintf_r+0xbd0>)
 8014f4c:	f340 820f 	ble.w	801536e <_vfprintf_r+0xfb2>
 8014f50:	2610      	movs	r6, #16
 8014f52:	465a      	mov	r2, fp
 8014f54:	e004      	b.n	8014f60 <_vfprintf_r+0xba4>
 8014f56:	3408      	adds	r4, #8
 8014f58:	3d10      	subs	r5, #16
 8014f5a:	2d10      	cmp	r5, #16
 8014f5c:	f340 8206 	ble.w	801536c <_vfprintf_r+0xfb0>
 8014f60:	3301      	adds	r3, #1
 8014f62:	3210      	adds	r2, #16
 8014f64:	2b07      	cmp	r3, #7
 8014f66:	9223      	str	r2, [sp, #140]	; 0x8c
 8014f68:	9322      	str	r3, [sp, #136]	; 0x88
 8014f6a:	6027      	str	r7, [r4, #0]
 8014f6c:	6066      	str	r6, [r4, #4]
 8014f6e:	ddf2      	ble.n	8014f56 <_vfprintf_r+0xb9a>
 8014f70:	4640      	mov	r0, r8
 8014f72:	4649      	mov	r1, r9
 8014f74:	aa21      	add	r2, sp, #132	; 0x84
 8014f76:	f003 fa3d 	bl	80183f4 <__sprint_r>
 8014f7a:	2800      	cmp	r0, #0
 8014f7c:	f47f ab1e 	bne.w	80145bc <_vfprintf_r+0x200>
 8014f80:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8014f82:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8014f84:	ac2e      	add	r4, sp, #184	; 0xb8
 8014f86:	e7e7      	b.n	8014f58 <_vfprintf_r+0xb9c>
 8014f88:	0802d710 	.word	0x0802d710
 8014f8c:	0802d724 	.word	0x0802d724
 8014f90:	4640      	mov	r0, r8
 8014f92:	4649      	mov	r1, r9
 8014f94:	aa21      	add	r2, sp, #132	; 0x84
 8014f96:	f003 fa2d 	bl	80183f4 <__sprint_r>
 8014f9a:	2800      	cmp	r0, #0
 8014f9c:	f47f ab0e 	bne.w	80145bc <_vfprintf_r+0x200>
 8014fa0:	f89d c067 	ldrb.w	ip, [sp, #103]	; 0x67
 8014fa4:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 8014fa8:	ac2e      	add	r4, sp, #184	; 0xb8
 8014faa:	f7ff bbb1 	b.w	8014710 <_vfprintf_r+0x354>
 8014fae:	f103 3aff 	add.w	sl, r3, #4294967295
 8014fb2:	f1ba 0f00 	cmp.w	sl, #0
 8014fb6:	f77f af27 	ble.w	8014e08 <_vfprintf_r+0xa4c>
 8014fba:	f1ba 0f10 	cmp.w	sl, #16
 8014fbe:	4f90      	ldr	r7, [pc, #576]	; (8015200 <_vfprintf_r+0xe44>)
 8014fc0:	bfc8      	it	gt
 8014fc2:	f04f 0b10 	movgt.w	fp, #16
 8014fc6:	dc07      	bgt.n	8014fd8 <_vfprintf_r+0xc1c>
 8014fc8:	e0f6      	b.n	80151b8 <_vfprintf_r+0xdfc>
 8014fca:	3408      	adds	r4, #8
 8014fcc:	f1aa 0a10 	sub.w	sl, sl, #16
 8014fd0:	f1ba 0f10 	cmp.w	sl, #16
 8014fd4:	f340 80f0 	ble.w	80151b8 <_vfprintf_r+0xdfc>
 8014fd8:	3501      	adds	r5, #1
 8014fda:	3610      	adds	r6, #16
 8014fdc:	2d07      	cmp	r5, #7
 8014fde:	9623      	str	r6, [sp, #140]	; 0x8c
 8014fe0:	9522      	str	r5, [sp, #136]	; 0x88
 8014fe2:	e884 0880 	stmia.w	r4, {r7, fp}
 8014fe6:	ddf0      	ble.n	8014fca <_vfprintf_r+0xc0e>
 8014fe8:	4640      	mov	r0, r8
 8014fea:	4649      	mov	r1, r9
 8014fec:	aa21      	add	r2, sp, #132	; 0x84
 8014fee:	f003 fa01 	bl	80183f4 <__sprint_r>
 8014ff2:	2800      	cmp	r0, #0
 8014ff4:	f47f aae2 	bne.w	80145bc <_vfprintf_r+0x200>
 8014ff8:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8014ffa:	9d22      	ldr	r5, [sp, #136]	; 0x88
 8014ffc:	ac2e      	add	r4, sp, #184	; 0xb8
 8014ffe:	e7e5      	b.n	8014fcc <_vfprintf_r+0xc10>
 8015000:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8015002:	6816      	ldr	r6, [r2, #0]
 8015004:	4613      	mov	r3, r2
 8015006:	3304      	adds	r3, #4
 8015008:	17f7      	asrs	r7, r6, #31
 801500a:	930c      	str	r3, [sp, #48]	; 0x30
 801500c:	4632      	mov	r2, r6
 801500e:	463b      	mov	r3, r7
 8015010:	e4cf      	b.n	80149b2 <_vfprintf_r+0x5f6>
 8015012:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015014:	460a      	mov	r2, r1
 8015016:	3204      	adds	r2, #4
 8015018:	680e      	ldr	r6, [r1, #0]
 801501a:	920c      	str	r2, [sp, #48]	; 0x30
 801501c:	2700      	movs	r7, #0
 801501e:	f7ff baeb 	b.w	80145f8 <_vfprintf_r+0x23c>
 8015022:	4693      	mov	fp, r2
 8015024:	3301      	adds	r3, #1
 8015026:	44ab      	add	fp, r5
 8015028:	2b07      	cmp	r3, #7
 801502a:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 801502e:	9322      	str	r3, [sp, #136]	; 0x88
 8015030:	6027      	str	r7, [r4, #0]
 8015032:	6065      	str	r5, [r4, #4]
 8015034:	f77f abde 	ble.w	80147f4 <_vfprintf_r+0x438>
 8015038:	e6f3      	b.n	8014e22 <_vfprintf_r+0xa66>
 801503a:	f10d 0bb8 	add.w	fp, sp, #184	; 0xb8
 801503e:	f8cd c01c 	str.w	ip, [sp, #28]
 8015042:	4630      	mov	r0, r6
 8015044:	4639      	mov	r1, r7
 8015046:	220a      	movs	r2, #10
 8015048:	2300      	movs	r3, #0
 801504a:	f7eb fdb1 	bl	8000bb0 <__aeabi_uldivmod>
 801504e:	3230      	adds	r2, #48	; 0x30
 8015050:	4630      	mov	r0, r6
 8015052:	4639      	mov	r1, r7
 8015054:	f80b 2d01 	strb.w	r2, [fp, #-1]!
 8015058:	2300      	movs	r3, #0
 801505a:	220a      	movs	r2, #10
 801505c:	f7eb fda8 	bl	8000bb0 <__aeabi_uldivmod>
 8015060:	4606      	mov	r6, r0
 8015062:	460f      	mov	r7, r1
 8015064:	ea56 0307 	orrs.w	r3, r6, r7
 8015068:	d1eb      	bne.n	8015042 <_vfprintf_r+0xc86>
 801506a:	f8dd c01c 	ldr.w	ip, [sp, #28]
 801506e:	e73b      	b.n	8014ee8 <_vfprintf_r+0xb2c>
 8015070:	2b30      	cmp	r3, #48	; 0x30
 8015072:	f000 8219 	beq.w	80154a8 <_vfprintf_r+0x10ec>
 8015076:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015078:	3b01      	subs	r3, #1
 801507a:	461a      	mov	r2, r3
 801507c:	a82e      	add	r0, sp, #184	; 0xb8
 801507e:	930e      	str	r3, [sp, #56]	; 0x38
 8015080:	1a82      	subs	r2, r0, r2
 8015082:	2330      	movs	r3, #48	; 0x30
 8015084:	920b      	str	r2, [sp, #44]	; 0x2c
 8015086:	f801 3c01 	strb.w	r3, [r1, #-1]
 801508a:	f7ff bae7 	b.w	801465c <_vfprintf_r+0x2a0>
 801508e:	4640      	mov	r0, r8
 8015090:	4649      	mov	r1, r9
 8015092:	aa21      	add	r2, sp, #132	; 0x84
 8015094:	f003 f9ae 	bl	80183f4 <__sprint_r>
 8015098:	2800      	cmp	r0, #0
 801509a:	f47f aa8f 	bne.w	80145bc <_vfprintf_r+0x200>
 801509e:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 80150a2:	ac2e      	add	r4, sp, #184	; 0xb8
 80150a4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80150a6:	9910      	ldr	r1, [sp, #64]	; 0x40
 80150a8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80150aa:	440a      	add	r2, r1
 80150ac:	4616      	mov	r6, r2
 80150ae:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80150b0:	4293      	cmp	r3, r2
 80150b2:	db3e      	blt.n	8015132 <_vfprintf_r+0xd76>
 80150b4:	9a06      	ldr	r2, [sp, #24]
 80150b6:	07d5      	lsls	r5, r2, #31
 80150b8:	d43b      	bmi.n	8015132 <_vfprintf_r+0xd76>
 80150ba:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80150bc:	ebc6 050a 	rsb	r5, r6, sl
 80150c0:	1ad3      	subs	r3, r2, r3
 80150c2:	429d      	cmp	r5, r3
 80150c4:	bfa8      	it	ge
 80150c6:	461d      	movge	r5, r3
 80150c8:	2d00      	cmp	r5, #0
 80150ca:	462f      	mov	r7, r5
 80150cc:	dd0b      	ble.n	80150e6 <_vfprintf_r+0xd2a>
 80150ce:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80150d0:	6026      	str	r6, [r4, #0]
 80150d2:	3201      	adds	r2, #1
 80150d4:	44ab      	add	fp, r5
 80150d6:	2a07      	cmp	r2, #7
 80150d8:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 80150dc:	6065      	str	r5, [r4, #4]
 80150de:	9222      	str	r2, [sp, #136]	; 0x88
 80150e0:	f300 825e 	bgt.w	80155a0 <_vfprintf_r+0x11e4>
 80150e4:	3408      	adds	r4, #8
 80150e6:	2f00      	cmp	r7, #0
 80150e8:	bfac      	ite	ge
 80150ea:	1bdd      	subge	r5, r3, r7
 80150ec:	461d      	movlt	r5, r3
 80150ee:	2d00      	cmp	r5, #0
 80150f0:	f77f ab81 	ble.w	80147f6 <_vfprintf_r+0x43a>
 80150f4:	2d10      	cmp	r5, #16
 80150f6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80150f8:	4f41      	ldr	r7, [pc, #260]	; (8015200 <_vfprintf_r+0xe44>)
 80150fa:	dd93      	ble.n	8015024 <_vfprintf_r+0xc68>
 80150fc:	2610      	movs	r6, #16
 80150fe:	465a      	mov	r2, fp
 8015100:	e003      	b.n	801510a <_vfprintf_r+0xd4e>
 8015102:	3408      	adds	r4, #8
 8015104:	3d10      	subs	r5, #16
 8015106:	2d10      	cmp	r5, #16
 8015108:	dd8b      	ble.n	8015022 <_vfprintf_r+0xc66>
 801510a:	3301      	adds	r3, #1
 801510c:	3210      	adds	r2, #16
 801510e:	2b07      	cmp	r3, #7
 8015110:	9223      	str	r2, [sp, #140]	; 0x8c
 8015112:	9322      	str	r3, [sp, #136]	; 0x88
 8015114:	6027      	str	r7, [r4, #0]
 8015116:	6066      	str	r6, [r4, #4]
 8015118:	ddf3      	ble.n	8015102 <_vfprintf_r+0xd46>
 801511a:	4640      	mov	r0, r8
 801511c:	4649      	mov	r1, r9
 801511e:	aa21      	add	r2, sp, #132	; 0x84
 8015120:	f003 f968 	bl	80183f4 <__sprint_r>
 8015124:	2800      	cmp	r0, #0
 8015126:	f47f aa49 	bne.w	80145bc <_vfprintf_r+0x200>
 801512a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801512c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801512e:	ac2e      	add	r4, sp, #184	; 0xb8
 8015130:	e7e8      	b.n	8015104 <_vfprintf_r+0xd48>
 8015132:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8015134:	9816      	ldr	r0, [sp, #88]	; 0x58
 8015136:	9915      	ldr	r1, [sp, #84]	; 0x54
 8015138:	6021      	str	r1, [r4, #0]
 801513a:	3201      	adds	r2, #1
 801513c:	4483      	add	fp, r0
 801513e:	2a07      	cmp	r2, #7
 8015140:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 8015144:	6060      	str	r0, [r4, #4]
 8015146:	9222      	str	r2, [sp, #136]	; 0x88
 8015148:	f300 820a 	bgt.w	8015560 <_vfprintf_r+0x11a4>
 801514c:	3408      	adds	r4, #8
 801514e:	e7b4      	b.n	80150ba <_vfprintf_r+0xcfe>
 8015150:	9b06      	ldr	r3, [sp, #24]
 8015152:	07d8      	lsls	r0, r3, #31
 8015154:	f53f ae28 	bmi.w	8014da8 <_vfprintf_r+0x9ec>
 8015158:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801515a:	6023      	str	r3, [r4, #0]
 801515c:	3501      	adds	r5, #1
 801515e:	f10b 0601 	add.w	r6, fp, #1
 8015162:	2301      	movs	r3, #1
 8015164:	2d07      	cmp	r5, #7
 8015166:	9623      	str	r6, [sp, #140]	; 0x8c
 8015168:	9522      	str	r5, [sp, #136]	; 0x88
 801516a:	6063      	str	r3, [r4, #4]
 801516c:	f77f ae4b 	ble.w	8014e06 <_vfprintf_r+0xa4a>
 8015170:	4640      	mov	r0, r8
 8015172:	4649      	mov	r1, r9
 8015174:	aa21      	add	r2, sp, #132	; 0x84
 8015176:	f003 f93d 	bl	80183f4 <__sprint_r>
 801517a:	2800      	cmp	r0, #0
 801517c:	f47f aa1e 	bne.w	80145bc <_vfprintf_r+0x200>
 8015180:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8015182:	9d22      	ldr	r5, [sp, #136]	; 0x88
 8015184:	ac2e      	add	r4, sp, #184	; 0xb8
 8015186:	e63f      	b.n	8014e08 <_vfprintf_r+0xa4c>
 8015188:	4640      	mov	r0, r8
 801518a:	4649      	mov	r1, r9
 801518c:	aa21      	add	r2, sp, #132	; 0x84
 801518e:	f003 f931 	bl	80183f4 <__sprint_r>
 8015192:	2800      	cmp	r0, #0
 8015194:	f47f aa12 	bne.w	80145bc <_vfprintf_r+0x200>
 8015198:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801519a:	9d22      	ldr	r5, [sp, #136]	; 0x88
 801519c:	ac2e      	add	r4, sp, #184	; 0xb8
 801519e:	e610      	b.n	8014dc2 <_vfprintf_r+0xa06>
 80151a0:	4640      	mov	r0, r8
 80151a2:	4649      	mov	r1, r9
 80151a4:	aa21      	add	r2, sp, #132	; 0x84
 80151a6:	f003 f925 	bl	80183f4 <__sprint_r>
 80151aa:	2800      	cmp	r0, #0
 80151ac:	f47f aa06 	bne.w	80145bc <_vfprintf_r+0x200>
 80151b0:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 80151b2:	9d22      	ldr	r5, [sp, #136]	; 0x88
 80151b4:	ac2e      	add	r4, sp, #184	; 0xb8
 80151b6:	e610      	b.n	8014dda <_vfprintf_r+0xa1e>
 80151b8:	3501      	adds	r5, #1
 80151ba:	4456      	add	r6, sl
 80151bc:	2d07      	cmp	r5, #7
 80151be:	9623      	str	r6, [sp, #140]	; 0x8c
 80151c0:	9522      	str	r5, [sp, #136]	; 0x88
 80151c2:	e884 0480 	stmia.w	r4, {r7, sl}
 80151c6:	f77f ae1e 	ble.w	8014e06 <_vfprintf_r+0xa4a>
 80151ca:	e7d1      	b.n	8015170 <_vfprintf_r+0xdb4>
 80151cc:	4640      	mov	r0, r8
 80151ce:	4649      	mov	r1, r9
 80151d0:	aa21      	add	r2, sp, #132	; 0x84
 80151d2:	f003 f90f 	bl	80183f4 <__sprint_r>
 80151d6:	2800      	cmp	r0, #0
 80151d8:	f47f a9f0 	bne.w	80145bc <_vfprintf_r+0x200>
 80151dc:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 80151e0:	ac2e      	add	r4, sp, #184	; 0xb8
 80151e2:	f7ff babc 	b.w	801475e <_vfprintf_r+0x3a2>
 80151e6:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
 80151ea:	4276      	negs	r6, r6
 80151ec:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
 80151f0:	f88d c067 	strb.w	ip, [sp, #103]	; 0x67
 80151f4:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 80151f8:	2301      	movs	r3, #1
 80151fa:	f7ff ba03 	b.w	8014604 <_vfprintf_r+0x248>
 80151fe:	bf00      	nop
 8015200:	0802d724 	.word	0x0802d724
 8015204:	f002 ffb8 	bl	8018178 <__fpclassifyd>
 8015208:	2800      	cmp	r0, #0
 801520a:	f000 810d 	beq.w	8015428 <_vfprintf_r+0x106c>
 801520e:	f025 0320 	bic.w	r3, r5, #32
 8015212:	f1b6 3fff 	cmp.w	r6, #4294967295
 8015216:	930b      	str	r3, [sp, #44]	; 0x2c
 8015218:	f000 8258 	beq.w	80156cc <_vfprintf_r+0x1310>
 801521c:	2b47      	cmp	r3, #71	; 0x47
 801521e:	d104      	bne.n	801522a <_vfprintf_r+0xe6e>
 8015220:	2e00      	cmp	r6, #0
 8015222:	bf14      	ite	ne
 8015224:	46b3      	movne	fp, r6
 8015226:	f04f 0b01 	moveq.w	fp, #1
 801522a:	9b06      	ldr	r3, [sp, #24]
 801522c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8015230:	930f      	str	r3, [sp, #60]	; 0x3c
 8015232:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015234:	f1b3 0a00 	subs.w	sl, r3, #0
 8015238:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801523a:	9307      	str	r3, [sp, #28]
 801523c:	bfbb      	ittet	lt
 801523e:	4653      	movlt	r3, sl
 8015240:	f103 4a00 	addlt.w	sl, r3, #2147483648	; 0x80000000
 8015244:	2300      	movge	r3, #0
 8015246:	232d      	movlt	r3, #45	; 0x2d
 8015248:	2d66      	cmp	r5, #102	; 0x66
 801524a:	930d      	str	r3, [sp, #52]	; 0x34
 801524c:	f000 8154 	beq.w	80154f8 <_vfprintf_r+0x113c>
 8015250:	2d46      	cmp	r5, #70	; 0x46
 8015252:	f000 8151 	beq.w	80154f8 <_vfprintf_r+0x113c>
 8015256:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015258:	9a07      	ldr	r2, [sp, #28]
 801525a:	2b45      	cmp	r3, #69	; 0x45
 801525c:	bf0c      	ite	eq
 801525e:	f10b 0701 	addeq.w	r7, fp, #1
 8015262:	465f      	movne	r7, fp
 8015264:	2002      	movs	r0, #2
 8015266:	a91b      	add	r1, sp, #108	; 0x6c
 8015268:	e88d 0081 	stmia.w	sp, {r0, r7}
 801526c:	9102      	str	r1, [sp, #8]
 801526e:	a81c      	add	r0, sp, #112	; 0x70
 8015270:	a91f      	add	r1, sp, #124	; 0x7c
 8015272:	9003      	str	r0, [sp, #12]
 8015274:	4653      	mov	r3, sl
 8015276:	9104      	str	r1, [sp, #16]
 8015278:	4640      	mov	r0, r8
 801527a:	f000 fbc9 	bl	8015a10 <_dtoa_r>
 801527e:	2d67      	cmp	r5, #103	; 0x67
 8015280:	900e      	str	r0, [sp, #56]	; 0x38
 8015282:	d002      	beq.n	801528a <_vfprintf_r+0xece>
 8015284:	2d47      	cmp	r5, #71	; 0x47
 8015286:	f040 8147 	bne.w	8015518 <_vfprintf_r+0x115c>
 801528a:	9b06      	ldr	r3, [sp, #24]
 801528c:	07db      	lsls	r3, r3, #31
 801528e:	f140 823a 	bpl.w	8015706 <_vfprintf_r+0x134a>
 8015292:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015294:	19de      	adds	r6, r3, r7
 8015296:	9807      	ldr	r0, [sp, #28]
 8015298:	4651      	mov	r1, sl
 801529a:	2200      	movs	r2, #0
 801529c:	2300      	movs	r3, #0
 801529e:	f7eb fc2d 	bl	8000afc <__aeabi_dcmpeq>
 80152a2:	2800      	cmp	r0, #0
 80152a4:	f040 81a3 	bne.w	80155ee <_vfprintf_r+0x1232>
 80152a8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80152aa:	429e      	cmp	r6, r3
 80152ac:	d906      	bls.n	80152bc <_vfprintf_r+0xf00>
 80152ae:	2130      	movs	r1, #48	; 0x30
 80152b0:	1c5a      	adds	r2, r3, #1
 80152b2:	921f      	str	r2, [sp, #124]	; 0x7c
 80152b4:	7019      	strb	r1, [r3, #0]
 80152b6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80152b8:	429e      	cmp	r6, r3
 80152ba:	d8f9      	bhi.n	80152b0 <_vfprintf_r+0xef4>
 80152bc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80152be:	1a9b      	subs	r3, r3, r2
 80152c0:	9311      	str	r3, [sp, #68]	; 0x44
 80152c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80152c4:	2b47      	cmp	r3, #71	; 0x47
 80152c6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80152c8:	f000 8179 	beq.w	80155be <_vfprintf_r+0x1202>
 80152cc:	2d65      	cmp	r5, #101	; 0x65
 80152ce:	f340 819c 	ble.w	801560a <_vfprintf_r+0x124e>
 80152d2:	2d66      	cmp	r5, #102	; 0x66
 80152d4:	9310      	str	r3, [sp, #64]	; 0x40
 80152d6:	f000 8209 	beq.w	80156ec <_vfprintf_r+0x1330>
 80152da:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80152dc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80152de:	4293      	cmp	r3, r2
 80152e0:	f300 81f7 	bgt.w	80156d2 <_vfprintf_r+0x1316>
 80152e4:	9b06      	ldr	r3, [sp, #24]
 80152e6:	07d9      	lsls	r1, r3, #31
 80152e8:	f100 8217 	bmi.w	801571a <_vfprintf_r+0x135e>
 80152ec:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 80152f0:	920b      	str	r2, [sp, #44]	; 0x2c
 80152f2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80152f4:	2a00      	cmp	r2, #0
 80152f6:	f040 8169 	bne.w	80155cc <_vfprintf_r+0x1210>
 80152fa:	9307      	str	r3, [sp, #28]
 80152fc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80152fe:	9306      	str	r3, [sp, #24]
 8015300:	920f      	str	r2, [sp, #60]	; 0x3c
 8015302:	f89d c067 	ldrb.w	ip, [sp, #103]	; 0x67
 8015306:	f7ff b9b1 	b.w	801466c <_vfprintf_r+0x2b0>
 801530a:	9b06      	ldr	r3, [sp, #24]
 801530c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801530e:	f013 0f40 	tst.w	r3, #64	; 0x40
 8015312:	4613      	mov	r3, r2
 8015314:	f43f ac84 	beq.w	8014c20 <_vfprintf_r+0x864>
 8015318:	8816      	ldrh	r6, [r2, #0]
 801531a:	3204      	adds	r2, #4
 801531c:	2700      	movs	r7, #0
 801531e:	2301      	movs	r3, #1
 8015320:	920c      	str	r2, [sp, #48]	; 0x30
 8015322:	f7ff b969 	b.w	80145f8 <_vfprintf_r+0x23c>
 8015326:	9b06      	ldr	r3, [sp, #24]
 8015328:	06db      	lsls	r3, r3, #27
 801532a:	d40b      	bmi.n	8015344 <_vfprintf_r+0xf88>
 801532c:	9b06      	ldr	r3, [sp, #24]
 801532e:	065f      	lsls	r7, r3, #25
 8015330:	d508      	bpl.n	8015344 <_vfprintf_r+0xf88>
 8015332:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8015334:	6813      	ldr	r3, [r2, #0]
 8015336:	3204      	adds	r2, #4
 8015338:	920c      	str	r2, [sp, #48]	; 0x30
 801533a:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 801533e:	801a      	strh	r2, [r3, #0]
 8015340:	f7ff b87d 	b.w	801443e <_vfprintf_r+0x82>
 8015344:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8015346:	6813      	ldr	r3, [r2, #0]
 8015348:	3204      	adds	r2, #4
 801534a:	920c      	str	r2, [sp, #48]	; 0x30
 801534c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801534e:	601a      	str	r2, [r3, #0]
 8015350:	f7ff b875 	b.w	801443e <_vfprintf_r+0x82>
 8015354:	9b06      	ldr	r3, [sp, #24]
 8015356:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8015358:	f013 0f40 	tst.w	r3, #64	; 0x40
 801535c:	4613      	mov	r3, r2
 801535e:	d076      	beq.n	801544e <_vfprintf_r+0x1092>
 8015360:	3304      	adds	r3, #4
 8015362:	8816      	ldrh	r6, [r2, #0]
 8015364:	930c      	str	r3, [sp, #48]	; 0x30
 8015366:	2700      	movs	r7, #0
 8015368:	f7ff bae4 	b.w	8014934 <_vfprintf_r+0x578>
 801536c:	4693      	mov	fp, r2
 801536e:	3301      	adds	r3, #1
 8015370:	44ab      	add	fp, r5
 8015372:	2b07      	cmp	r3, #7
 8015374:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 8015378:	9322      	str	r3, [sp, #136]	; 0x88
 801537a:	6027      	str	r7, [r4, #0]
 801537c:	6065      	str	r5, [r4, #4]
 801537e:	f73f ae86 	bgt.w	801508e <_vfprintf_r+0xcd2>
 8015382:	3408      	adds	r4, #8
 8015384:	e68e      	b.n	80150a4 <_vfprintf_r+0xce8>
 8015386:	4640      	mov	r0, r8
 8015388:	4649      	mov	r1, r9
 801538a:	aa21      	add	r2, sp, #132	; 0x84
 801538c:	f003 f832 	bl	80183f4 <__sprint_r>
 8015390:	2800      	cmp	r0, #0
 8015392:	f47f a913 	bne.w	80145bc <_vfprintf_r+0x200>
 8015396:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 801539a:	ac2e      	add	r4, sp, #184	; 0xb8
 801539c:	e48d      	b.n	8014cba <_vfprintf_r+0x8fe>
 801539e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80153a0:	4ab0      	ldr	r2, [pc, #704]	; (8015664 <_vfprintf_r+0x12a8>)
 80153a2:	6022      	str	r2, [r4, #0]
 80153a4:	3301      	adds	r3, #1
 80153a6:	f10b 0b01 	add.w	fp, fp, #1
 80153aa:	2201      	movs	r2, #1
 80153ac:	2b07      	cmp	r3, #7
 80153ae:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 80153b2:	9322      	str	r3, [sp, #136]	; 0x88
 80153b4:	6062      	str	r2, [r4, #4]
 80153b6:	dc50      	bgt.n	801545a <_vfprintf_r+0x109e>
 80153b8:	3408      	adds	r4, #8
 80153ba:	b92d      	cbnz	r5, 80153c8 <_vfprintf_r+0x100c>
 80153bc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80153be:	b91b      	cbnz	r3, 80153c8 <_vfprintf_r+0x100c>
 80153c0:	9b06      	ldr	r3, [sp, #24]
 80153c2:	07de      	lsls	r6, r3, #31
 80153c4:	f57f aa17 	bpl.w	80147f6 <_vfprintf_r+0x43a>
 80153c8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80153ca:	9916      	ldr	r1, [sp, #88]	; 0x58
 80153cc:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80153ce:	6022      	str	r2, [r4, #0]
 80153d0:	3301      	adds	r3, #1
 80153d2:	eb0b 0201 	add.w	r2, fp, r1
 80153d6:	2b07      	cmp	r3, #7
 80153d8:	9223      	str	r2, [sp, #140]	; 0x8c
 80153da:	6061      	str	r1, [r4, #4]
 80153dc:	9322      	str	r3, [sp, #136]	; 0x88
 80153de:	f300 8168 	bgt.w	80156b2 <_vfprintf_r+0x12f6>
 80153e2:	3408      	adds	r4, #8
 80153e4:	426d      	negs	r5, r5
 80153e6:	2d00      	cmp	r5, #0
 80153e8:	dd6f      	ble.n	80154ca <_vfprintf_r+0x110e>
 80153ea:	2d10      	cmp	r5, #16
 80153ec:	4f9e      	ldr	r7, [pc, #632]	; (8015668 <_vfprintf_r+0x12ac>)
 80153ee:	bfc8      	it	gt
 80153f0:	2610      	movgt	r6, #16
 80153f2:	dc05      	bgt.n	8015400 <_vfprintf_r+0x1044>
 80153f4:	e0aa      	b.n	801554c <_vfprintf_r+0x1190>
 80153f6:	3408      	adds	r4, #8
 80153f8:	3d10      	subs	r5, #16
 80153fa:	2d10      	cmp	r5, #16
 80153fc:	f340 80a6 	ble.w	801554c <_vfprintf_r+0x1190>
 8015400:	3301      	adds	r3, #1
 8015402:	3210      	adds	r2, #16
 8015404:	2b07      	cmp	r3, #7
 8015406:	9223      	str	r2, [sp, #140]	; 0x8c
 8015408:	9322      	str	r3, [sp, #136]	; 0x88
 801540a:	6027      	str	r7, [r4, #0]
 801540c:	6066      	str	r6, [r4, #4]
 801540e:	ddf2      	ble.n	80153f6 <_vfprintf_r+0x103a>
 8015410:	4640      	mov	r0, r8
 8015412:	4649      	mov	r1, r9
 8015414:	aa21      	add	r2, sp, #132	; 0x84
 8015416:	f002 ffed 	bl	80183f4 <__sprint_r>
 801541a:	2800      	cmp	r0, #0
 801541c:	f47f a8ce 	bne.w	80145bc <_vfprintf_r+0x200>
 8015420:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8015422:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8015424:	ac2e      	add	r4, sp, #184	; 0xb8
 8015426:	e7e7      	b.n	80153f8 <_vfprintf_r+0x103c>
 8015428:	9e06      	ldr	r6, [sp, #24]
 801542a:	4a90      	ldr	r2, [pc, #576]	; (801566c <_vfprintf_r+0x12b0>)
 801542c:	4b90      	ldr	r3, [pc, #576]	; (8015670 <_vfprintf_r+0x12b4>)
 801542e:	f89d c067 	ldrb.w	ip, [sp, #103]	; 0x67
 8015432:	900f      	str	r0, [sp, #60]	; 0x3c
 8015434:	2103      	movs	r1, #3
 8015436:	f026 0680 	bic.w	r6, r6, #128	; 0x80
 801543a:	2d47      	cmp	r5, #71	; 0x47
 801543c:	bfd8      	it	le
 801543e:	461a      	movle	r2, r3
 8015440:	9107      	str	r1, [sp, #28]
 8015442:	9606      	str	r6, [sp, #24]
 8015444:	9010      	str	r0, [sp, #64]	; 0x40
 8015446:	920e      	str	r2, [sp, #56]	; 0x38
 8015448:	910b      	str	r1, [sp, #44]	; 0x2c
 801544a:	f7ff b90f 	b.w	801466c <_vfprintf_r+0x2b0>
 801544e:	3304      	adds	r3, #4
 8015450:	6816      	ldr	r6, [r2, #0]
 8015452:	930c      	str	r3, [sp, #48]	; 0x30
 8015454:	2700      	movs	r7, #0
 8015456:	f7ff ba6d 	b.w	8014934 <_vfprintf_r+0x578>
 801545a:	4640      	mov	r0, r8
 801545c:	4649      	mov	r1, r9
 801545e:	aa21      	add	r2, sp, #132	; 0x84
 8015460:	f002 ffc8 	bl	80183f4 <__sprint_r>
 8015464:	2800      	cmp	r0, #0
 8015466:	f47f a8a9 	bne.w	80145bc <_vfprintf_r+0x200>
 801546a:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 801546c:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 8015470:	ac2e      	add	r4, sp, #184	; 0xb8
 8015472:	e7a2      	b.n	80153ba <_vfprintf_r+0xffe>
 8015474:	f041 0120 	orr.w	r1, r1, #32
 8015478:	9106      	str	r1, [sp, #24]
 801547a:	785d      	ldrb	r5, [r3, #1]
 801547c:	1c59      	adds	r1, r3, #1
 801547e:	f7ff b80e 	b.w	801449e <_vfprintf_r+0xe2>
 8015482:	980a      	ldr	r0, [sp, #40]	; 0x28
 8015484:	910c      	str	r1, [sp, #48]	; 0x30
 8015486:	4240      	negs	r0, r0
 8015488:	900a      	str	r0, [sp, #40]	; 0x28
 801548a:	4619      	mov	r1, r3
 801548c:	f7ff ba02 	b.w	8014894 <_vfprintf_r+0x4d8>
 8015490:	4640      	mov	r0, r8
 8015492:	4649      	mov	r1, r9
 8015494:	aa21      	add	r2, sp, #132	; 0x84
 8015496:	f002 ffad 	bl	80183f4 <__sprint_r>
 801549a:	2800      	cmp	r0, #0
 801549c:	f47f a88e 	bne.w	80145bc <_vfprintf_r+0x200>
 80154a0:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 80154a4:	ac2e      	add	r4, sp, #184	; 0xb8
 80154a6:	e41e      	b.n	8014ce6 <_vfprintf_r+0x92a>
 80154a8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80154aa:	ab2e      	add	r3, sp, #184	; 0xb8
 80154ac:	1a9b      	subs	r3, r3, r2
 80154ae:	930b      	str	r3, [sp, #44]	; 0x2c
 80154b0:	f7ff b8d4 	b.w	801465c <_vfprintf_r+0x2a0>
 80154b4:	4640      	mov	r0, r8
 80154b6:	4649      	mov	r1, r9
 80154b8:	aa21      	add	r2, sp, #132	; 0x84
 80154ba:	f002 ff9b 	bl	80183f4 <__sprint_r>
 80154be:	2800      	cmp	r0, #0
 80154c0:	f47f a87c 	bne.w	80145bc <_vfprintf_r+0x200>
 80154c4:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80154c6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80154c8:	ac2e      	add	r4, sp, #184	; 0xb8
 80154ca:	9811      	ldr	r0, [sp, #68]	; 0x44
 80154cc:	6060      	str	r0, [r4, #4]
 80154ce:	3301      	adds	r3, #1
 80154d0:	eb02 0b00 	add.w	fp, r2, r0
 80154d4:	2b07      	cmp	r3, #7
 80154d6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80154d8:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 80154dc:	9322      	str	r3, [sp, #136]	; 0x88
 80154de:	6022      	str	r2, [r4, #0]
 80154e0:	f77f a988 	ble.w	80147f4 <_vfprintf_r+0x438>
 80154e4:	e49d      	b.n	8014e22 <_vfprintf_r+0xa66>
 80154e6:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
 80154ea:	f7fd fcef 	bl	8012ecc <strlen>
 80154ee:	970c      	str	r7, [sp, #48]	; 0x30
 80154f0:	900b      	str	r0, [sp, #44]	; 0x2c
 80154f2:	4603      	mov	r3, r0
 80154f4:	f7ff ba03 	b.w	80148fe <_vfprintf_r+0x542>
 80154f8:	2003      	movs	r0, #3
 80154fa:	a91b      	add	r1, sp, #108	; 0x6c
 80154fc:	e88d 0801 	stmia.w	sp, {r0, fp}
 8015500:	9102      	str	r1, [sp, #8]
 8015502:	a81c      	add	r0, sp, #112	; 0x70
 8015504:	a91f      	add	r1, sp, #124	; 0x7c
 8015506:	9003      	str	r0, [sp, #12]
 8015508:	9a07      	ldr	r2, [sp, #28]
 801550a:	9104      	str	r1, [sp, #16]
 801550c:	4653      	mov	r3, sl
 801550e:	4640      	mov	r0, r8
 8015510:	f000 fa7e 	bl	8015a10 <_dtoa_r>
 8015514:	465f      	mov	r7, fp
 8015516:	900e      	str	r0, [sp, #56]	; 0x38
 8015518:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801551a:	19de      	adds	r6, r3, r7
 801551c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801551e:	2b46      	cmp	r3, #70	; 0x46
 8015520:	f47f aeb9 	bne.w	8015296 <_vfprintf_r+0xeda>
 8015524:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015526:	781b      	ldrb	r3, [r3, #0]
 8015528:	2b30      	cmp	r3, #48	; 0x30
 801552a:	f000 80fc 	beq.w	8015726 <_vfprintf_r+0x136a>
 801552e:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8015530:	443e      	add	r6, r7
 8015532:	e6b0      	b.n	8015296 <_vfprintf_r+0xeda>
 8015534:	4640      	mov	r0, r8
 8015536:	4649      	mov	r1, r9
 8015538:	aa21      	add	r2, sp, #132	; 0x84
 801553a:	f002 ff5b 	bl	80183f4 <__sprint_r>
 801553e:	2800      	cmp	r0, #0
 8015540:	f47f a83c 	bne.w	80145bc <_vfprintf_r+0x200>
 8015544:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 8015548:	ac2e      	add	r4, sp, #184	; 0xb8
 801554a:	e4f4      	b.n	8014f36 <_vfprintf_r+0xb7a>
 801554c:	3301      	adds	r3, #1
 801554e:	442a      	add	r2, r5
 8015550:	2b07      	cmp	r3, #7
 8015552:	9223      	str	r2, [sp, #140]	; 0x8c
 8015554:	9322      	str	r3, [sp, #136]	; 0x88
 8015556:	6027      	str	r7, [r4, #0]
 8015558:	6065      	str	r5, [r4, #4]
 801555a:	dcab      	bgt.n	80154b4 <_vfprintf_r+0x10f8>
 801555c:	3408      	adds	r4, #8
 801555e:	e7b4      	b.n	80154ca <_vfprintf_r+0x110e>
 8015560:	4640      	mov	r0, r8
 8015562:	4649      	mov	r1, r9
 8015564:	aa21      	add	r2, sp, #132	; 0x84
 8015566:	f002 ff45 	bl	80183f4 <__sprint_r>
 801556a:	2800      	cmp	r0, #0
 801556c:	f47f a826 	bne.w	80145bc <_vfprintf_r+0x200>
 8015570:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8015572:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 8015576:	ac2e      	add	r4, sp, #184	; 0xb8
 8015578:	e59f      	b.n	80150ba <_vfprintf_r+0xcfe>
 801557a:	2e06      	cmp	r6, #6
 801557c:	4633      	mov	r3, r6
 801557e:	bf28      	it	cs
 8015580:	2306      	movcs	r3, #6
 8015582:	930b      	str	r3, [sp, #44]	; 0x2c
 8015584:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015588:	f8dd c038 	ldr.w	ip, [sp, #56]	; 0x38
 801558c:	9307      	str	r3, [sp, #28]
 801558e:	4b39      	ldr	r3, [pc, #228]	; (8015674 <_vfprintf_r+0x12b8>)
 8015590:	970c      	str	r7, [sp, #48]	; 0x30
 8015592:	f8cd c03c 	str.w	ip, [sp, #60]	; 0x3c
 8015596:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
 801559a:	930e      	str	r3, [sp, #56]	; 0x38
 801559c:	f7ff b866 	b.w	801466c <_vfprintf_r+0x2b0>
 80155a0:	4640      	mov	r0, r8
 80155a2:	4649      	mov	r1, r9
 80155a4:	aa21      	add	r2, sp, #132	; 0x84
 80155a6:	f002 ff25 	bl	80183f4 <__sprint_r>
 80155aa:	2800      	cmp	r0, #0
 80155ac:	f47f a806 	bne.w	80145bc <_vfprintf_r+0x200>
 80155b0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80155b2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80155b4:	f8dd b08c 	ldr.w	fp, [sp, #140]	; 0x8c
 80155b8:	1ad3      	subs	r3, r2, r3
 80155ba:	ac2e      	add	r4, sp, #184	; 0xb8
 80155bc:	e593      	b.n	80150e6 <_vfprintf_r+0xd2a>
 80155be:	1cdf      	adds	r7, r3, #3
 80155c0:	db22      	blt.n	8015608 <_vfprintf_r+0x124c>
 80155c2:	459b      	cmp	fp, r3
 80155c4:	db20      	blt.n	8015608 <_vfprintf_r+0x124c>
 80155c6:	9310      	str	r3, [sp, #64]	; 0x40
 80155c8:	2567      	movs	r5, #103	; 0x67
 80155ca:	e686      	b.n	80152da <_vfprintf_r+0xf1e>
 80155cc:	9307      	str	r3, [sp, #28]
 80155ce:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80155d0:	9306      	str	r3, [sp, #24]
 80155d2:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
 80155d6:	2300      	movs	r3, #0
 80155d8:	f88d c067 	strb.w	ip, [sp, #103]	; 0x67
 80155dc:	930f      	str	r3, [sp, #60]	; 0x3c
 80155de:	f7ff b848 	b.w	8014672 <_vfprintf_r+0x2b6>
 80155e2:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
 80155e6:	f88d c067 	strb.w	ip, [sp, #103]	; 0x67
 80155ea:	f7ff ba0e 	b.w	8014a0a <_vfprintf_r+0x64e>
 80155ee:	4633      	mov	r3, r6
 80155f0:	e664      	b.n	80152bc <_vfprintf_r+0xf00>
 80155f2:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
 80155f6:	900f      	str	r0, [sp, #60]	; 0x3c
 80155f8:	970c      	str	r7, [sp, #48]	; 0x30
 80155fa:	9010      	str	r0, [sp, #64]	; 0x40
 80155fc:	f89d c067 	ldrb.w	ip, [sp, #103]	; 0x67
 8015600:	9307      	str	r3, [sp, #28]
 8015602:	960b      	str	r6, [sp, #44]	; 0x2c
 8015604:	f7ff b832 	b.w	801466c <_vfprintf_r+0x2b0>
 8015608:	3d02      	subs	r5, #2
 801560a:	3b01      	subs	r3, #1
 801560c:	2b00      	cmp	r3, #0
 801560e:	931b      	str	r3, [sp, #108]	; 0x6c
 8015610:	bfba      	itte	lt
 8015612:	425b      	neglt	r3, r3
 8015614:	222d      	movlt	r2, #45	; 0x2d
 8015616:	222b      	movge	r2, #43	; 0x2b
 8015618:	2b09      	cmp	r3, #9
 801561a:	f88d 5074 	strb.w	r5, [sp, #116]	; 0x74
 801561e:	f88d 2075 	strb.w	r2, [sp, #117]	; 0x75
 8015622:	dd72      	ble.n	801570a <_vfprintf_r+0x134e>
 8015624:	f10d 0683 	add.w	r6, sp, #131	; 0x83
 8015628:	4630      	mov	r0, r6
 801562a:	4a13      	ldr	r2, [pc, #76]	; (8015678 <_vfprintf_r+0x12bc>)
 801562c:	fb82 2103 	smull	r2, r1, r2, r3
 8015630:	17da      	asrs	r2, r3, #31
 8015632:	ebc2 02a1 	rsb	r2, r2, r1, asr #2
 8015636:	eb02 0182 	add.w	r1, r2, r2, lsl #2
 801563a:	eba3 0341 	sub.w	r3, r3, r1, lsl #1
 801563e:	f103 0130 	add.w	r1, r3, #48	; 0x30
 8015642:	2a09      	cmp	r2, #9
 8015644:	4613      	mov	r3, r2
 8015646:	f800 1d01 	strb.w	r1, [r0, #-1]!
 801564a:	dcee      	bgt.n	801562a <_vfprintf_r+0x126e>
 801564c:	4602      	mov	r2, r0
 801564e:	3330      	adds	r3, #48	; 0x30
 8015650:	b2d9      	uxtb	r1, r3
 8015652:	f802 1d01 	strb.w	r1, [r2, #-1]!
 8015656:	4296      	cmp	r6, r2
 8015658:	f240 80a0 	bls.w	801579c <_vfprintf_r+0x13e0>
 801565c:	f10d 0276 	add.w	r2, sp, #118	; 0x76
 8015660:	4603      	mov	r3, r0
 8015662:	e00d      	b.n	8015680 <_vfprintf_r+0x12c4>
 8015664:	0802d710 	.word	0x0802d710
 8015668:	0802d724 	.word	0x0802d724
 801566c:	0802d6dc 	.word	0x0802d6dc
 8015670:	0802d6d8 	.word	0x0802d6d8
 8015674:	0802d708 	.word	0x0802d708
 8015678:	66666667 	.word	0x66666667
 801567c:	f813 1b01 	ldrb.w	r1, [r3], #1
 8015680:	f802 1b01 	strb.w	r1, [r2], #1
 8015684:	42b3      	cmp	r3, r6
 8015686:	d1f9      	bne.n	801567c <_vfprintf_r+0x12c0>
 8015688:	ab21      	add	r3, sp, #132	; 0x84
 801568a:	1a1b      	subs	r3, r3, r0
 801568c:	f10d 0276 	add.w	r2, sp, #118	; 0x76
 8015690:	4413      	add	r3, r2
 8015692:	aa1d      	add	r2, sp, #116	; 0x74
 8015694:	1a9b      	subs	r3, r3, r2
 8015696:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015698:	9317      	str	r3, [sp, #92]	; 0x5c
 801569a:	2a01      	cmp	r2, #1
 801569c:	4413      	add	r3, r2
 801569e:	930b      	str	r3, [sp, #44]	; 0x2c
 80156a0:	dd6d      	ble.n	801577e <_vfprintf_r+0x13c2>
 80156a2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80156a4:	2200      	movs	r2, #0
 80156a6:	3301      	adds	r3, #1
 80156a8:	930b      	str	r3, [sp, #44]	; 0x2c
 80156aa:	9210      	str	r2, [sp, #64]	; 0x40
 80156ac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80156b0:	e61f      	b.n	80152f2 <_vfprintf_r+0xf36>
 80156b2:	4640      	mov	r0, r8
 80156b4:	4649      	mov	r1, r9
 80156b6:	aa21      	add	r2, sp, #132	; 0x84
 80156b8:	f002 fe9c 	bl	80183f4 <__sprint_r>
 80156bc:	2800      	cmp	r0, #0
 80156be:	f47e af7d 	bne.w	80145bc <_vfprintf_r+0x200>
 80156c2:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 80156c4:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80156c6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80156c8:	ac2e      	add	r4, sp, #184	; 0xb8
 80156ca:	e68b      	b.n	80153e4 <_vfprintf_r+0x1028>
 80156cc:	f04f 0b06 	mov.w	fp, #6
 80156d0:	e5ab      	b.n	801522a <_vfprintf_r+0xe6e>
 80156d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80156d4:	2b00      	cmp	r3, #0
 80156d6:	bfd8      	it	le
 80156d8:	f1c3 0602 	rsble	r6, r3, #2
 80156dc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80156de:	bfc8      	it	gt
 80156e0:	2601      	movgt	r6, #1
 80156e2:	18f3      	adds	r3, r6, r3
 80156e4:	930b      	str	r3, [sp, #44]	; 0x2c
 80156e6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80156ea:	e602      	b.n	80152f2 <_vfprintf_r+0xf36>
 80156ec:	2b00      	cmp	r3, #0
 80156ee:	dd30      	ble.n	8015752 <_vfprintf_r+0x1396>
 80156f0:	f1bb 0f00 	cmp.w	fp, #0
 80156f4:	d125      	bne.n	8015742 <_vfprintf_r+0x1386>
 80156f6:	9b06      	ldr	r3, [sp, #24]
 80156f8:	07de      	lsls	r6, r3, #31
 80156fa:	d422      	bmi.n	8015742 <_vfprintf_r+0x1386>
 80156fc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80156fe:	920b      	str	r2, [sp, #44]	; 0x2c
 8015700:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8015704:	e5f5      	b.n	80152f2 <_vfprintf_r+0xf36>
 8015706:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8015708:	e5d8      	b.n	80152bc <_vfprintf_r+0xf00>
 801570a:	3330      	adds	r3, #48	; 0x30
 801570c:	2230      	movs	r2, #48	; 0x30
 801570e:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
 8015712:	f88d 2076 	strb.w	r2, [sp, #118]	; 0x76
 8015716:	ab1e      	add	r3, sp, #120	; 0x78
 8015718:	e7bb      	b.n	8015692 <_vfprintf_r+0x12d6>
 801571a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801571c:	3301      	adds	r3, #1
 801571e:	930b      	str	r3, [sp, #44]	; 0x2c
 8015720:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015724:	e5e5      	b.n	80152f2 <_vfprintf_r+0xf36>
 8015726:	9807      	ldr	r0, [sp, #28]
 8015728:	4651      	mov	r1, sl
 801572a:	2200      	movs	r2, #0
 801572c:	2300      	movs	r3, #0
 801572e:	f7eb f9e5 	bl	8000afc <__aeabi_dcmpeq>
 8015732:	2800      	cmp	r0, #0
 8015734:	f47f aefb 	bne.w	801552e <_vfprintf_r+0x1172>
 8015738:	f1c7 0701 	rsb	r7, r7, #1
 801573c:	971b      	str	r7, [sp, #108]	; 0x6c
 801573e:	443e      	add	r6, r7
 8015740:	e5a9      	b.n	8015296 <_vfprintf_r+0xeda>
 8015742:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015744:	f10b 0601 	add.w	r6, fp, #1
 8015748:	4433      	add	r3, r6
 801574a:	930b      	str	r3, [sp, #44]	; 0x2c
 801574c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015750:	e5cf      	b.n	80152f2 <_vfprintf_r+0xf36>
 8015752:	f1bb 0f00 	cmp.w	fp, #0
 8015756:	d11b      	bne.n	8015790 <_vfprintf_r+0x13d4>
 8015758:	9b06      	ldr	r3, [sp, #24]
 801575a:	07d8      	lsls	r0, r3, #31
 801575c:	d418      	bmi.n	8015790 <_vfprintf_r+0x13d4>
 801575e:	2301      	movs	r3, #1
 8015760:	930b      	str	r3, [sp, #44]	; 0x2c
 8015762:	e5c6      	b.n	80152f2 <_vfprintf_r+0xf36>
 8015764:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8015766:	682e      	ldr	r6, [r5, #0]
 8015768:	4628      	mov	r0, r5
 801576a:	3004      	adds	r0, #4
 801576c:	2e00      	cmp	r6, #0
 801576e:	785d      	ldrb	r5, [r3, #1]
 8015770:	900c      	str	r0, [sp, #48]	; 0x30
 8015772:	f6be ae94 	bge.w	801449e <_vfprintf_r+0xe2>
 8015776:	f04f 36ff 	mov.w	r6, #4294967295
 801577a:	f7fe be90 	b.w	801449e <_vfprintf_r+0xe2>
 801577e:	9b06      	ldr	r3, [sp, #24]
 8015780:	f013 0301 	ands.w	r3, r3, #1
 8015784:	d18d      	bne.n	80156a2 <_vfprintf_r+0x12e6>
 8015786:	9310      	str	r3, [sp, #64]	; 0x40
 8015788:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801578a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801578e:	e5b0      	b.n	80152f2 <_vfprintf_r+0xf36>
 8015790:	f10b 0302 	add.w	r3, fp, #2
 8015794:	930b      	str	r3, [sp, #44]	; 0x2c
 8015796:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801579a:	e5aa      	b.n	80152f2 <_vfprintf_r+0xf36>
 801579c:	f10d 0376 	add.w	r3, sp, #118	; 0x76
 80157a0:	e777      	b.n	8015692 <_vfprintf_r+0x12d6>
 80157a2:	bf00      	nop

080157a4 <__sbprintf>:
 80157a4:	e92d 42f0 	stmdb	sp!, {r4, r5, r6, r7, r9, lr}
 80157a8:	460c      	mov	r4, r1
 80157aa:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
 80157ae:	f8b1 e00c 	ldrh.w	lr, [r1, #12]
 80157b2:	69e7      	ldr	r7, [r4, #28]
 80157b4:	6e49      	ldr	r1, [r1, #100]	; 0x64
 80157b6:	f8b4 900e 	ldrh.w	r9, [r4, #14]
 80157ba:	9119      	str	r1, [sp, #100]	; 0x64
 80157bc:	ad1a      	add	r5, sp, #104	; 0x68
 80157be:	f44f 6680 	mov.w	r6, #1024	; 0x400
 80157c2:	f02e 0e02 	bic.w	lr, lr, #2
 80157c6:	f04f 0c00 	mov.w	ip, #0
 80157ca:	9707      	str	r7, [sp, #28]
 80157cc:	4669      	mov	r1, sp
 80157ce:	6a67      	ldr	r7, [r4, #36]	; 0x24
 80157d0:	9500      	str	r5, [sp, #0]
 80157d2:	9504      	str	r5, [sp, #16]
 80157d4:	9602      	str	r6, [sp, #8]
 80157d6:	9605      	str	r6, [sp, #20]
 80157d8:	f8ad e00c 	strh.w	lr, [sp, #12]
 80157dc:	f8ad 900e 	strh.w	r9, [sp, #14]
 80157e0:	9709      	str	r7, [sp, #36]	; 0x24
 80157e2:	f8cd c018 	str.w	ip, [sp, #24]
 80157e6:	4606      	mov	r6, r0
 80157e8:	f7fe fde8 	bl	80143bc <_vfprintf_r>
 80157ec:	1e05      	subs	r5, r0, #0
 80157ee:	db07      	blt.n	8015800 <__sbprintf+0x5c>
 80157f0:	4630      	mov	r0, r6
 80157f2:	4669      	mov	r1, sp
 80157f4:	f001 f902 	bl	80169fc <_fflush_r>
 80157f8:	2800      	cmp	r0, #0
 80157fa:	bf18      	it	ne
 80157fc:	f04f 35ff 	movne.w	r5, #4294967295
 8015800:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8015804:	065b      	lsls	r3, r3, #25
 8015806:	d503      	bpl.n	8015810 <__sbprintf+0x6c>
 8015808:	89a3      	ldrh	r3, [r4, #12]
 801580a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801580e:	81a3      	strh	r3, [r4, #12]
 8015810:	4628      	mov	r0, r5
 8015812:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
 8015816:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
 801581a:	bf00      	nop

0801581c <__swsetup_r>:
 801581c:	b538      	push	{r3, r4, r5, lr}
 801581e:	4b2f      	ldr	r3, [pc, #188]	; (80158dc <__swsetup_r+0xc0>)
 8015820:	681b      	ldr	r3, [r3, #0]
 8015822:	4605      	mov	r5, r0
 8015824:	460c      	mov	r4, r1
 8015826:	b113      	cbz	r3, 801582e <__swsetup_r+0x12>
 8015828:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 801582a:	2a00      	cmp	r2, #0
 801582c:	d036      	beq.n	801589c <__swsetup_r+0x80>
 801582e:	89a2      	ldrh	r2, [r4, #12]
 8015830:	b293      	uxth	r3, r2
 8015832:	0718      	lsls	r0, r3, #28
 8015834:	d50c      	bpl.n	8015850 <__swsetup_r+0x34>
 8015836:	6920      	ldr	r0, [r4, #16]
 8015838:	b1a8      	cbz	r0, 8015866 <__swsetup_r+0x4a>
 801583a:	f013 0201 	ands.w	r2, r3, #1
 801583e:	d01e      	beq.n	801587e <__swsetup_r+0x62>
 8015840:	6963      	ldr	r3, [r4, #20]
 8015842:	2200      	movs	r2, #0
 8015844:	425b      	negs	r3, r3
 8015846:	61a3      	str	r3, [r4, #24]
 8015848:	60a2      	str	r2, [r4, #8]
 801584a:	b1f0      	cbz	r0, 801588a <__swsetup_r+0x6e>
 801584c:	2000      	movs	r0, #0
 801584e:	bd38      	pop	{r3, r4, r5, pc}
 8015850:	06d9      	lsls	r1, r3, #27
 8015852:	d53b      	bpl.n	80158cc <__swsetup_r+0xb0>
 8015854:	0758      	lsls	r0, r3, #29
 8015856:	d425      	bmi.n	80158a4 <__swsetup_r+0x88>
 8015858:	6920      	ldr	r0, [r4, #16]
 801585a:	f042 0308 	orr.w	r3, r2, #8
 801585e:	81a3      	strh	r3, [r4, #12]
 8015860:	b29b      	uxth	r3, r3
 8015862:	2800      	cmp	r0, #0
 8015864:	d1e9      	bne.n	801583a <__swsetup_r+0x1e>
 8015866:	f403 7220 	and.w	r2, r3, #640	; 0x280
 801586a:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801586e:	d0e4      	beq.n	801583a <__swsetup_r+0x1e>
 8015870:	4628      	mov	r0, r5
 8015872:	4621      	mov	r1, r4
 8015874:	f001 fc4a 	bl	801710c <__smakebuf_r>
 8015878:	89a3      	ldrh	r3, [r4, #12]
 801587a:	6920      	ldr	r0, [r4, #16]
 801587c:	e7dd      	b.n	801583a <__swsetup_r+0x1e>
 801587e:	0799      	lsls	r1, r3, #30
 8015880:	bf58      	it	pl
 8015882:	6962      	ldrpl	r2, [r4, #20]
 8015884:	60a2      	str	r2, [r4, #8]
 8015886:	2800      	cmp	r0, #0
 8015888:	d1e0      	bne.n	801584c <__swsetup_r+0x30>
 801588a:	89a3      	ldrh	r3, [r4, #12]
 801588c:	061a      	lsls	r2, r3, #24
 801588e:	d5de      	bpl.n	801584e <__swsetup_r+0x32>
 8015890:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8015894:	81a3      	strh	r3, [r4, #12]
 8015896:	f04f 30ff 	mov.w	r0, #4294967295
 801589a:	bd38      	pop	{r3, r4, r5, pc}
 801589c:	4618      	mov	r0, r3
 801589e:	f001 f941 	bl	8016b24 <__sinit>
 80158a2:	e7c4      	b.n	801582e <__swsetup_r+0x12>
 80158a4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80158a6:	b149      	cbz	r1, 80158bc <__swsetup_r+0xa0>
 80158a8:	f104 0340 	add.w	r3, r4, #64	; 0x40
 80158ac:	4299      	cmp	r1, r3
 80158ae:	d003      	beq.n	80158b8 <__swsetup_r+0x9c>
 80158b0:	4628      	mov	r0, r5
 80158b2:	f001 f98f 	bl	8016bd4 <_free_r>
 80158b6:	89a2      	ldrh	r2, [r4, #12]
 80158b8:	2300      	movs	r3, #0
 80158ba:	6323      	str	r3, [r4, #48]	; 0x30
 80158bc:	f022 0224 	bic.w	r2, r2, #36	; 0x24
 80158c0:	2300      	movs	r3, #0
 80158c2:	6920      	ldr	r0, [r4, #16]
 80158c4:	6063      	str	r3, [r4, #4]
 80158c6:	b292      	uxth	r2, r2
 80158c8:	6020      	str	r0, [r4, #0]
 80158ca:	e7c6      	b.n	801585a <__swsetup_r+0x3e>
 80158cc:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80158d0:	2309      	movs	r3, #9
 80158d2:	602b      	str	r3, [r5, #0]
 80158d4:	f04f 30ff 	mov.w	r0, #4294967295
 80158d8:	81a2      	strh	r2, [r4, #12]
 80158da:	bd38      	pop	{r3, r4, r5, pc}
 80158dc:	20000708 	.word	0x20000708

080158e0 <quorem>:
 80158e0:	6902      	ldr	r2, [r0, #16]
 80158e2:	690b      	ldr	r3, [r1, #16]
 80158e4:	4293      	cmp	r3, r2
 80158e6:	f300 808f 	bgt.w	8015a08 <quorem+0x128>
 80158ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80158ee:	f103 38ff 	add.w	r8, r3, #4294967295
 80158f2:	f101 0714 	add.w	r7, r1, #20
 80158f6:	f100 0b14 	add.w	fp, r0, #20
 80158fa:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
 80158fe:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
 8015902:	ea4f 0488 	mov.w	r4, r8, lsl #2
 8015906:	b083      	sub	sp, #12
 8015908:	3201      	adds	r2, #1
 801590a:	fbb3 f9f2 	udiv	r9, r3, r2
 801590e:	eb0b 0304 	add.w	r3, fp, r4
 8015912:	9400      	str	r4, [sp, #0]
 8015914:	eb07 0a04 	add.w	sl, r7, r4
 8015918:	9301      	str	r3, [sp, #4]
 801591a:	f1b9 0f00 	cmp.w	r9, #0
 801591e:	d03b      	beq.n	8015998 <quorem+0xb8>
 8015920:	2600      	movs	r6, #0
 8015922:	4632      	mov	r2, r6
 8015924:	46bc      	mov	ip, r7
 8015926:	46de      	mov	lr, fp
 8015928:	4634      	mov	r4, r6
 801592a:	f85c 6b04 	ldr.w	r6, [ip], #4
 801592e:	f8de 5000 	ldr.w	r5, [lr]
 8015932:	b2b3      	uxth	r3, r6
 8015934:	0c36      	lsrs	r6, r6, #16
 8015936:	fb03 4409 	mla	r4, r3, r9, r4
 801593a:	fb06 f609 	mul.w	r6, r6, r9
 801593e:	eb06 4614 	add.w	r6, r6, r4, lsr #16
 8015942:	b2a3      	uxth	r3, r4
 8015944:	1ad3      	subs	r3, r2, r3
 8015946:	b2b4      	uxth	r4, r6
 8015948:	fa13 f385 	uxtah	r3, r3, r5
 801594c:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
 8015950:	eb04 4423 	add.w	r4, r4, r3, asr #16
 8015954:	b29b      	uxth	r3, r3
 8015956:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 801595a:	45e2      	cmp	sl, ip
 801595c:	ea4f 4224 	mov.w	r2, r4, asr #16
 8015960:	f84e 3b04 	str.w	r3, [lr], #4
 8015964:	ea4f 4416 	mov.w	r4, r6, lsr #16
 8015968:	d2df      	bcs.n	801592a <quorem+0x4a>
 801596a:	9b00      	ldr	r3, [sp, #0]
 801596c:	f85b 3003 	ldr.w	r3, [fp, r3]
 8015970:	b993      	cbnz	r3, 8015998 <quorem+0xb8>
 8015972:	9c01      	ldr	r4, [sp, #4]
 8015974:	1f23      	subs	r3, r4, #4
 8015976:	459b      	cmp	fp, r3
 8015978:	d20c      	bcs.n	8015994 <quorem+0xb4>
 801597a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 801597e:	b94b      	cbnz	r3, 8015994 <quorem+0xb4>
 8015980:	f1a4 0308 	sub.w	r3, r4, #8
 8015984:	e002      	b.n	801598c <quorem+0xac>
 8015986:	681a      	ldr	r2, [r3, #0]
 8015988:	3b04      	subs	r3, #4
 801598a:	b91a      	cbnz	r2, 8015994 <quorem+0xb4>
 801598c:	459b      	cmp	fp, r3
 801598e:	f108 38ff 	add.w	r8, r8, #4294967295
 8015992:	d3f8      	bcc.n	8015986 <quorem+0xa6>
 8015994:	f8c0 8010 	str.w	r8, [r0, #16]
 8015998:	4604      	mov	r4, r0
 801599a:	f002 f90d 	bl	8017bb8 <__mcmp>
 801599e:	2800      	cmp	r0, #0
 80159a0:	db2e      	blt.n	8015a00 <quorem+0x120>
 80159a2:	f109 0901 	add.w	r9, r9, #1
 80159a6:	465d      	mov	r5, fp
 80159a8:	2300      	movs	r3, #0
 80159aa:	f857 1b04 	ldr.w	r1, [r7], #4
 80159ae:	6828      	ldr	r0, [r5, #0]
 80159b0:	b28a      	uxth	r2, r1
 80159b2:	1a9a      	subs	r2, r3, r2
 80159b4:	0c09      	lsrs	r1, r1, #16
 80159b6:	fa12 f280 	uxtah	r2, r2, r0
 80159ba:	ebc1 4310 	rsb	r3, r1, r0, lsr #16
 80159be:	eb03 4322 	add.w	r3, r3, r2, asr #16
 80159c2:	b291      	uxth	r1, r2
 80159c4:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80159c8:	45ba      	cmp	sl, r7
 80159ca:	f845 1b04 	str.w	r1, [r5], #4
 80159ce:	ea4f 4323 	mov.w	r3, r3, asr #16
 80159d2:	d2ea      	bcs.n	80159aa <quorem+0xca>
 80159d4:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
 80159d8:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
 80159dc:	b982      	cbnz	r2, 8015a00 <quorem+0x120>
 80159de:	1f1a      	subs	r2, r3, #4
 80159e0:	4593      	cmp	fp, r2
 80159e2:	d20b      	bcs.n	80159fc <quorem+0x11c>
 80159e4:	f853 2c04 	ldr.w	r2, [r3, #-4]
 80159e8:	b942      	cbnz	r2, 80159fc <quorem+0x11c>
 80159ea:	3b08      	subs	r3, #8
 80159ec:	e002      	b.n	80159f4 <quorem+0x114>
 80159ee:	681a      	ldr	r2, [r3, #0]
 80159f0:	3b04      	subs	r3, #4
 80159f2:	b91a      	cbnz	r2, 80159fc <quorem+0x11c>
 80159f4:	459b      	cmp	fp, r3
 80159f6:	f108 38ff 	add.w	r8, r8, #4294967295
 80159fa:	d3f8      	bcc.n	80159ee <quorem+0x10e>
 80159fc:	f8c4 8010 	str.w	r8, [r4, #16]
 8015a00:	4648      	mov	r0, r9
 8015a02:	b003      	add	sp, #12
 8015a04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015a08:	2000      	movs	r0, #0
 8015a0a:	4770      	bx	lr
 8015a0c:	0000      	movs	r0, r0
	...

08015a10 <_dtoa_r>:
 8015a10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a14:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8015a16:	b097      	sub	sp, #92	; 0x5c
 8015a18:	4604      	mov	r4, r0
 8015a1a:	9d23      	ldr	r5, [sp, #140]	; 0x8c
 8015a1c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8015a20:	b141      	cbz	r1, 8015a34 <_dtoa_r+0x24>
 8015a22:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8015a24:	604a      	str	r2, [r1, #4]
 8015a26:	2301      	movs	r3, #1
 8015a28:	4093      	lsls	r3, r2
 8015a2a:	608b      	str	r3, [r1, #8]
 8015a2c:	f001 fee0 	bl	80177f0 <_Bfree>
 8015a30:	2300      	movs	r3, #0
 8015a32:	6423      	str	r3, [r4, #64]	; 0x40
 8015a34:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8015a38:	2b00      	cmp	r3, #0
 8015a3a:	4699      	mov	r9, r3
 8015a3c:	db36      	blt.n	8015aac <_dtoa_r+0x9c>
 8015a3e:	2300      	movs	r3, #0
 8015a40:	602b      	str	r3, [r5, #0]
 8015a42:	4ba5      	ldr	r3, [pc, #660]	; (8015cd8 <_dtoa_r+0x2c8>)
 8015a44:	461a      	mov	r2, r3
 8015a46:	ea09 0303 	and.w	r3, r9, r3
 8015a4a:	4293      	cmp	r3, r2
 8015a4c:	d017      	beq.n	8015a7e <_dtoa_r+0x6e>
 8015a4e:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8015a52:	2200      	movs	r2, #0
 8015a54:	4630      	mov	r0, r6
 8015a56:	4639      	mov	r1, r7
 8015a58:	2300      	movs	r3, #0
 8015a5a:	f7eb f84f 	bl	8000afc <__aeabi_dcmpeq>
 8015a5e:	4680      	mov	r8, r0
 8015a60:	2800      	cmp	r0, #0
 8015a62:	d02b      	beq.n	8015abc <_dtoa_r+0xac>
 8015a64:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8015a66:	2301      	movs	r3, #1
 8015a68:	6013      	str	r3, [r2, #0]
 8015a6a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015a6c:	2b00      	cmp	r3, #0
 8015a6e:	f000 80cb 	beq.w	8015c08 <_dtoa_r+0x1f8>
 8015a72:	489a      	ldr	r0, [pc, #616]	; (8015cdc <_dtoa_r+0x2cc>)
 8015a74:	6018      	str	r0, [r3, #0]
 8015a76:	3801      	subs	r0, #1
 8015a78:	b017      	add	sp, #92	; 0x5c
 8015a7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015a7e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8015a80:	f242 730f 	movw	r3, #9999	; 0x270f
 8015a84:	6013      	str	r3, [r2, #0]
 8015a86:	9b02      	ldr	r3, [sp, #8]
 8015a88:	2b00      	cmp	r3, #0
 8015a8a:	f000 80a6 	beq.w	8015bda <_dtoa_r+0x1ca>
 8015a8e:	4894      	ldr	r0, [pc, #592]	; (8015ce0 <_dtoa_r+0x2d0>)
 8015a90:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015a92:	2b00      	cmp	r3, #0
 8015a94:	d0f0      	beq.n	8015a78 <_dtoa_r+0x68>
 8015a96:	78c3      	ldrb	r3, [r0, #3]
 8015a98:	2b00      	cmp	r3, #0
 8015a9a:	f000 80b7 	beq.w	8015c0c <_dtoa_r+0x1fc>
 8015a9e:	f100 0308 	add.w	r3, r0, #8
 8015aa2:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8015aa4:	6013      	str	r3, [r2, #0]
 8015aa6:	b017      	add	sp, #92	; 0x5c
 8015aa8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015aac:	9a03      	ldr	r2, [sp, #12]
 8015aae:	2301      	movs	r3, #1
 8015ab0:	f022 4900 	bic.w	r9, r2, #2147483648	; 0x80000000
 8015ab4:	602b      	str	r3, [r5, #0]
 8015ab6:	f8cd 900c 	str.w	r9, [sp, #12]
 8015aba:	e7c2      	b.n	8015a42 <_dtoa_r+0x32>
 8015abc:	aa15      	add	r2, sp, #84	; 0x54
 8015abe:	ab14      	add	r3, sp, #80	; 0x50
 8015ac0:	e88d 000c 	stmia.w	sp, {r2, r3}
 8015ac4:	4620      	mov	r0, r4
 8015ac6:	4632      	mov	r2, r6
 8015ac8:	463b      	mov	r3, r7
 8015aca:	f002 f903 	bl	8017cd4 <__d2b>
 8015ace:	ea5f 5519 	movs.w	r5, r9, lsr #20
 8015ad2:	4683      	mov	fp, r0
 8015ad4:	f040 808a 	bne.w	8015bec <_dtoa_r+0x1dc>
 8015ad8:	f8dd 8050 	ldr.w	r8, [sp, #80]	; 0x50
 8015adc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8015ade:	f46f 6382 	mvn.w	r3, #1040	; 0x410
 8015ae2:	4445      	add	r5, r8
 8015ae4:	429d      	cmp	r5, r3
 8015ae6:	f2c0 8297 	blt.w	8016018 <_dtoa_r+0x608>
 8015aea:	4a7e      	ldr	r2, [pc, #504]	; (8015ce4 <_dtoa_r+0x2d4>)
 8015aec:	1b52      	subs	r2, r2, r5
 8015aee:	fa09 f902 	lsl.w	r9, r9, r2
 8015af2:	9a02      	ldr	r2, [sp, #8]
 8015af4:	f205 4312 	addw	r3, r5, #1042	; 0x412
 8015af8:	fa22 f003 	lsr.w	r0, r2, r3
 8015afc:	ea49 0000 	orr.w	r0, r9, r0
 8015b00:	f7ea fd1e 	bl	8000540 <__aeabi_ui2d>
 8015b04:	2301      	movs	r3, #1
 8015b06:	3d01      	subs	r5, #1
 8015b08:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 8015b0c:	930d      	str	r3, [sp, #52]	; 0x34
 8015b0e:	2200      	movs	r2, #0
 8015b10:	4b75      	ldr	r3, [pc, #468]	; (8015ce8 <_dtoa_r+0x2d8>)
 8015b12:	f7ea fbd7 	bl	80002c4 <__aeabi_dsub>
 8015b16:	a36a      	add	r3, pc, #424	; (adr r3, 8015cc0 <_dtoa_r+0x2b0>)
 8015b18:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015b1c:	f7ea fd86 	bl	800062c <__aeabi_dmul>
 8015b20:	a369      	add	r3, pc, #420	; (adr r3, 8015cc8 <_dtoa_r+0x2b8>)
 8015b22:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015b26:	f7ea fbcf 	bl	80002c8 <__adddf3>
 8015b2a:	4606      	mov	r6, r0
 8015b2c:	4628      	mov	r0, r5
 8015b2e:	460f      	mov	r7, r1
 8015b30:	f7ea fd16 	bl	8000560 <__aeabi_i2d>
 8015b34:	a366      	add	r3, pc, #408	; (adr r3, 8015cd0 <_dtoa_r+0x2c0>)
 8015b36:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015b3a:	f7ea fd77 	bl	800062c <__aeabi_dmul>
 8015b3e:	4602      	mov	r2, r0
 8015b40:	460b      	mov	r3, r1
 8015b42:	4630      	mov	r0, r6
 8015b44:	4639      	mov	r1, r7
 8015b46:	f7ea fbbf 	bl	80002c8 <__adddf3>
 8015b4a:	4606      	mov	r6, r0
 8015b4c:	460f      	mov	r7, r1
 8015b4e:	f7eb f807 	bl	8000b60 <__aeabi_d2iz>
 8015b52:	4639      	mov	r1, r7
 8015b54:	9004      	str	r0, [sp, #16]
 8015b56:	2200      	movs	r2, #0
 8015b58:	4630      	mov	r0, r6
 8015b5a:	2300      	movs	r3, #0
 8015b5c:	f7ea ffd8 	bl	8000b10 <__aeabi_dcmplt>
 8015b60:	2800      	cmp	r0, #0
 8015b62:	f040 81a6 	bne.w	8015eb2 <_dtoa_r+0x4a2>
 8015b66:	9b04      	ldr	r3, [sp, #16]
 8015b68:	2b16      	cmp	r3, #22
 8015b6a:	f200 819f 	bhi.w	8015eac <_dtoa_r+0x49c>
 8015b6e:	9a04      	ldr	r2, [sp, #16]
 8015b70:	4b5e      	ldr	r3, [pc, #376]	; (8015cec <_dtoa_r+0x2dc>)
 8015b72:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8015b76:	e9d3 0100 	ldrd	r0, r1, [r3]
 8015b7a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8015b7e:	f7ea ffe5 	bl	8000b4c <__aeabi_dcmpgt>
 8015b82:	2800      	cmp	r0, #0
 8015b84:	f000 824e 	beq.w	8016024 <_dtoa_r+0x614>
 8015b88:	9b04      	ldr	r3, [sp, #16]
 8015b8a:	3b01      	subs	r3, #1
 8015b8c:	9304      	str	r3, [sp, #16]
 8015b8e:	2300      	movs	r3, #0
 8015b90:	930b      	str	r3, [sp, #44]	; 0x2c
 8015b92:	ebc5 0508 	rsb	r5, r5, r8
 8015b96:	f1b5 0a01 	subs.w	sl, r5, #1
 8015b9a:	f100 81a1 	bmi.w	8015ee0 <_dtoa_r+0x4d0>
 8015b9e:	2300      	movs	r3, #0
 8015ba0:	9305      	str	r3, [sp, #20]
 8015ba2:	9b04      	ldr	r3, [sp, #16]
 8015ba4:	2b00      	cmp	r3, #0
 8015ba6:	f2c0 8192 	blt.w	8015ece <_dtoa_r+0x4be>
 8015baa:	449a      	add	sl, r3
 8015bac:	930a      	str	r3, [sp, #40]	; 0x28
 8015bae:	2300      	movs	r3, #0
 8015bb0:	9308      	str	r3, [sp, #32]
 8015bb2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015bb4:	2b09      	cmp	r3, #9
 8015bb6:	d82b      	bhi.n	8015c10 <_dtoa_r+0x200>
 8015bb8:	2b05      	cmp	r3, #5
 8015bba:	f340 8670 	ble.w	801689e <_dtoa_r+0xe8e>
 8015bbe:	3b04      	subs	r3, #4
 8015bc0:	9320      	str	r3, [sp, #128]	; 0x80
 8015bc2:	2500      	movs	r5, #0
 8015bc4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015bc6:	3b02      	subs	r3, #2
 8015bc8:	2b03      	cmp	r3, #3
 8015bca:	f200 864e 	bhi.w	801686a <_dtoa_r+0xe5a>
 8015bce:	e8df f013 	tbh	[pc, r3, lsl #1]
 8015bd2:	03cc      	.short	0x03cc
 8015bd4:	02b203be 	.word	0x02b203be
 8015bd8:	0663      	.short	0x0663
 8015bda:	4b41      	ldr	r3, [pc, #260]	; (8015ce0 <_dtoa_r+0x2d0>)
 8015bdc:	4a44      	ldr	r2, [pc, #272]	; (8015cf0 <_dtoa_r+0x2e0>)
 8015bde:	f3c9 0013 	ubfx	r0, r9, #0, #20
 8015be2:	2800      	cmp	r0, #0
 8015be4:	bf14      	ite	ne
 8015be6:	4618      	movne	r0, r3
 8015be8:	4610      	moveq	r0, r2
 8015bea:	e751      	b.n	8015a90 <_dtoa_r+0x80>
 8015bec:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8015bf0:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 8015bf4:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
 8015bf8:	4630      	mov	r0, r6
 8015bfa:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8015bfe:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 8015c02:	f8dd 8050 	ldr.w	r8, [sp, #80]	; 0x50
 8015c06:	e782      	b.n	8015b0e <_dtoa_r+0xfe>
 8015c08:	483a      	ldr	r0, [pc, #232]	; (8015cf4 <_dtoa_r+0x2e4>)
 8015c0a:	e735      	b.n	8015a78 <_dtoa_r+0x68>
 8015c0c:	1cc3      	adds	r3, r0, #3
 8015c0e:	e748      	b.n	8015aa2 <_dtoa_r+0x92>
 8015c10:	2100      	movs	r1, #0
 8015c12:	6461      	str	r1, [r4, #68]	; 0x44
 8015c14:	4620      	mov	r0, r4
 8015c16:	9120      	str	r1, [sp, #128]	; 0x80
 8015c18:	f001 fdc4 	bl	80177a4 <_Balloc>
 8015c1c:	f04f 33ff 	mov.w	r3, #4294967295
 8015c20:	9306      	str	r3, [sp, #24]
 8015c22:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8015c24:	930c      	str	r3, [sp, #48]	; 0x30
 8015c26:	2301      	movs	r3, #1
 8015c28:	9007      	str	r0, [sp, #28]
 8015c2a:	9221      	str	r2, [sp, #132]	; 0x84
 8015c2c:	6420      	str	r0, [r4, #64]	; 0x40
 8015c2e:	9309      	str	r3, [sp, #36]	; 0x24
 8015c30:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8015c32:	2b00      	cmp	r3, #0
 8015c34:	f2c0 80d2 	blt.w	8015ddc <_dtoa_r+0x3cc>
 8015c38:	9a04      	ldr	r2, [sp, #16]
 8015c3a:	2a0e      	cmp	r2, #14
 8015c3c:	f300 80ce 	bgt.w	8015ddc <_dtoa_r+0x3cc>
 8015c40:	4b2a      	ldr	r3, [pc, #168]	; (8015cec <_dtoa_r+0x2dc>)
 8015c42:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8015c46:	e9d3 8900 	ldrd	r8, r9, [r3]
 8015c4a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8015c4c:	2b00      	cmp	r3, #0
 8015c4e:	f2c0 838f 	blt.w	8016370 <_dtoa_r+0x960>
 8015c52:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8015c56:	4642      	mov	r2, r8
 8015c58:	464b      	mov	r3, r9
 8015c5a:	4630      	mov	r0, r6
 8015c5c:	4639      	mov	r1, r7
 8015c5e:	f7ea fe0f 	bl	8000880 <__aeabi_ddiv>
 8015c62:	f7ea ff7d 	bl	8000b60 <__aeabi_d2iz>
 8015c66:	4682      	mov	sl, r0
 8015c68:	f7ea fc7a 	bl	8000560 <__aeabi_i2d>
 8015c6c:	4642      	mov	r2, r8
 8015c6e:	464b      	mov	r3, r9
 8015c70:	f7ea fcdc 	bl	800062c <__aeabi_dmul>
 8015c74:	460b      	mov	r3, r1
 8015c76:	4602      	mov	r2, r0
 8015c78:	4639      	mov	r1, r7
 8015c7a:	4630      	mov	r0, r6
 8015c7c:	f7ea fb22 	bl	80002c4 <__aeabi_dsub>
 8015c80:	9d07      	ldr	r5, [sp, #28]
 8015c82:	f10a 0330 	add.w	r3, sl, #48	; 0x30
 8015c86:	702b      	strb	r3, [r5, #0]
 8015c88:	9b06      	ldr	r3, [sp, #24]
 8015c8a:	2b01      	cmp	r3, #1
 8015c8c:	4606      	mov	r6, r0
 8015c8e:	460f      	mov	r7, r1
 8015c90:	f105 0501 	add.w	r5, r5, #1
 8015c94:	d062      	beq.n	8015d5c <_dtoa_r+0x34c>
 8015c96:	2200      	movs	r2, #0
 8015c98:	4b17      	ldr	r3, [pc, #92]	; (8015cf8 <_dtoa_r+0x2e8>)
 8015c9a:	f7ea fcc7 	bl	800062c <__aeabi_dmul>
 8015c9e:	2200      	movs	r2, #0
 8015ca0:	2300      	movs	r3, #0
 8015ca2:	4606      	mov	r6, r0
 8015ca4:	460f      	mov	r7, r1
 8015ca6:	f7ea ff29 	bl	8000afc <__aeabi_dcmpeq>
 8015caa:	2800      	cmp	r0, #0
 8015cac:	f040 8083 	bne.w	8015db6 <_dtoa_r+0x3a6>
 8015cb0:	f8cd b008 	str.w	fp, [sp, #8]
 8015cb4:	9405      	str	r4, [sp, #20]
 8015cb6:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8015cba:	9c06      	ldr	r4, [sp, #24]
 8015cbc:	e029      	b.n	8015d12 <_dtoa_r+0x302>
 8015cbe:	bf00      	nop
 8015cc0:	636f4361 	.word	0x636f4361
 8015cc4:	3fd287a7 	.word	0x3fd287a7
 8015cc8:	8b60c8b3 	.word	0x8b60c8b3
 8015ccc:	3fc68a28 	.word	0x3fc68a28
 8015cd0:	509f79fb 	.word	0x509f79fb
 8015cd4:	3fd34413 	.word	0x3fd34413
 8015cd8:	7ff00000 	.word	0x7ff00000
 8015cdc:	0802d711 	.word	0x0802d711
 8015ce0:	0802d750 	.word	0x0802d750
 8015ce4:	fffffc0e 	.word	0xfffffc0e
 8015ce8:	3ff80000 	.word	0x3ff80000
 8015cec:	0802d768 	.word	0x0802d768
 8015cf0:	0802d744 	.word	0x0802d744
 8015cf4:	0802d710 	.word	0x0802d710
 8015cf8:	40240000 	.word	0x40240000
 8015cfc:	f7ea fc96 	bl	800062c <__aeabi_dmul>
 8015d00:	2200      	movs	r2, #0
 8015d02:	2300      	movs	r3, #0
 8015d04:	4606      	mov	r6, r0
 8015d06:	460f      	mov	r7, r1
 8015d08:	f7ea fef8 	bl	8000afc <__aeabi_dcmpeq>
 8015d0c:	2800      	cmp	r0, #0
 8015d0e:	f040 83de 	bne.w	80164ce <_dtoa_r+0xabe>
 8015d12:	4642      	mov	r2, r8
 8015d14:	464b      	mov	r3, r9
 8015d16:	4630      	mov	r0, r6
 8015d18:	4639      	mov	r1, r7
 8015d1a:	f7ea fdb1 	bl	8000880 <__aeabi_ddiv>
 8015d1e:	f7ea ff1f 	bl	8000b60 <__aeabi_d2iz>
 8015d22:	4682      	mov	sl, r0
 8015d24:	f7ea fc1c 	bl	8000560 <__aeabi_i2d>
 8015d28:	4642      	mov	r2, r8
 8015d2a:	464b      	mov	r3, r9
 8015d2c:	f7ea fc7e 	bl	800062c <__aeabi_dmul>
 8015d30:	4602      	mov	r2, r0
 8015d32:	460b      	mov	r3, r1
 8015d34:	4630      	mov	r0, r6
 8015d36:	4639      	mov	r1, r7
 8015d38:	f7ea fac4 	bl	80002c4 <__aeabi_dsub>
 8015d3c:	f10a 0e30 	add.w	lr, sl, #48	; 0x30
 8015d40:	f805 eb01 	strb.w	lr, [r5], #1
 8015d44:	ebcb 0e05 	rsb	lr, fp, r5
 8015d48:	4574      	cmp	r4, lr
 8015d4a:	4606      	mov	r6, r0
 8015d4c:	460f      	mov	r7, r1
 8015d4e:	f04f 0200 	mov.w	r2, #0
 8015d52:	4bb5      	ldr	r3, [pc, #724]	; (8016028 <_dtoa_r+0x618>)
 8015d54:	d1d2      	bne.n	8015cfc <_dtoa_r+0x2ec>
 8015d56:	f8dd b008 	ldr.w	fp, [sp, #8]
 8015d5a:	9c05      	ldr	r4, [sp, #20]
 8015d5c:	4632      	mov	r2, r6
 8015d5e:	463b      	mov	r3, r7
 8015d60:	4630      	mov	r0, r6
 8015d62:	4639      	mov	r1, r7
 8015d64:	f7ea fab0 	bl	80002c8 <__adddf3>
 8015d68:	4606      	mov	r6, r0
 8015d6a:	460f      	mov	r7, r1
 8015d6c:	4640      	mov	r0, r8
 8015d6e:	4649      	mov	r1, r9
 8015d70:	4632      	mov	r2, r6
 8015d72:	463b      	mov	r3, r7
 8015d74:	f7ea fecc 	bl	8000b10 <__aeabi_dcmplt>
 8015d78:	b948      	cbnz	r0, 8015d8e <_dtoa_r+0x37e>
 8015d7a:	4640      	mov	r0, r8
 8015d7c:	4649      	mov	r1, r9
 8015d7e:	4632      	mov	r2, r6
 8015d80:	463b      	mov	r3, r7
 8015d82:	f7ea febb 	bl	8000afc <__aeabi_dcmpeq>
 8015d86:	b1b0      	cbz	r0, 8015db6 <_dtoa_r+0x3a6>
 8015d88:	f01a 0f01 	tst.w	sl, #1
 8015d8c:	d013      	beq.n	8015db6 <_dtoa_r+0x3a6>
 8015d8e:	f815 8c01 	ldrb.w	r8, [r5, #-1]
 8015d92:	9907      	ldr	r1, [sp, #28]
 8015d94:	1e6b      	subs	r3, r5, #1
 8015d96:	e004      	b.n	8015da2 <_dtoa_r+0x392>
 8015d98:	428b      	cmp	r3, r1
 8015d9a:	f000 8440 	beq.w	801661e <_dtoa_r+0xc0e>
 8015d9e:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
 8015da2:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8015da6:	f103 0501 	add.w	r5, r3, #1
 8015daa:	461a      	mov	r2, r3
 8015dac:	d0f4      	beq.n	8015d98 <_dtoa_r+0x388>
 8015dae:	f108 0301 	add.w	r3, r8, #1
 8015db2:	b2db      	uxtb	r3, r3
 8015db4:	7013      	strb	r3, [r2, #0]
 8015db6:	4620      	mov	r0, r4
 8015db8:	4659      	mov	r1, fp
 8015dba:	f001 fd19 	bl	80177f0 <_Bfree>
 8015dbe:	2200      	movs	r2, #0
 8015dc0:	9b04      	ldr	r3, [sp, #16]
 8015dc2:	702a      	strb	r2, [r5, #0]
 8015dc4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8015dc6:	3301      	adds	r3, #1
 8015dc8:	6013      	str	r3, [r2, #0]
 8015dca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015dcc:	2b00      	cmp	r3, #0
 8015dce:	f000 8345 	beq.w	801645c <_dtoa_r+0xa4c>
 8015dd2:	9807      	ldr	r0, [sp, #28]
 8015dd4:	601d      	str	r5, [r3, #0]
 8015dd6:	b017      	add	sp, #92	; 0x5c
 8015dd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015ddc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015dde:	2a00      	cmp	r2, #0
 8015de0:	f000 8084 	beq.w	8015eec <_dtoa_r+0x4dc>
 8015de4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8015de6:	2a01      	cmp	r2, #1
 8015de8:	f340 8304 	ble.w	80163f4 <_dtoa_r+0x9e4>
 8015dec:	9b06      	ldr	r3, [sp, #24]
 8015dee:	1e5f      	subs	r7, r3, #1
 8015df0:	9b08      	ldr	r3, [sp, #32]
 8015df2:	42bb      	cmp	r3, r7
 8015df4:	f2c0 83a9 	blt.w	801654a <_dtoa_r+0xb3a>
 8015df8:	1bdf      	subs	r7, r3, r7
 8015dfa:	9b06      	ldr	r3, [sp, #24]
 8015dfc:	2b00      	cmp	r3, #0
 8015dfe:	f2c0 849c 	blt.w	801673a <_dtoa_r+0xd2a>
 8015e02:	9d05      	ldr	r5, [sp, #20]
 8015e04:	9b06      	ldr	r3, [sp, #24]
 8015e06:	9a05      	ldr	r2, [sp, #20]
 8015e08:	4620      	mov	r0, r4
 8015e0a:	441a      	add	r2, r3
 8015e0c:	2101      	movs	r1, #1
 8015e0e:	9205      	str	r2, [sp, #20]
 8015e10:	449a      	add	sl, r3
 8015e12:	f001 fd87 	bl	8017924 <__i2b>
 8015e16:	4606      	mov	r6, r0
 8015e18:	b165      	cbz	r5, 8015e34 <_dtoa_r+0x424>
 8015e1a:	f1ba 0f00 	cmp.w	sl, #0
 8015e1e:	dd09      	ble.n	8015e34 <_dtoa_r+0x424>
 8015e20:	45aa      	cmp	sl, r5
 8015e22:	9a05      	ldr	r2, [sp, #20]
 8015e24:	4653      	mov	r3, sl
 8015e26:	bfa8      	it	ge
 8015e28:	462b      	movge	r3, r5
 8015e2a:	1ad2      	subs	r2, r2, r3
 8015e2c:	9205      	str	r2, [sp, #20]
 8015e2e:	1aed      	subs	r5, r5, r3
 8015e30:	ebc3 0a0a 	rsb	sl, r3, sl
 8015e34:	9b08      	ldr	r3, [sp, #32]
 8015e36:	2b00      	cmp	r3, #0
 8015e38:	dd1a      	ble.n	8015e70 <_dtoa_r+0x460>
 8015e3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015e3c:	2b00      	cmp	r3, #0
 8015e3e:	f000 837d 	beq.w	801653c <_dtoa_r+0xb2c>
 8015e42:	2f00      	cmp	r7, #0
 8015e44:	dd10      	ble.n	8015e68 <_dtoa_r+0x458>
 8015e46:	4631      	mov	r1, r6
 8015e48:	463a      	mov	r2, r7
 8015e4a:	4620      	mov	r0, r4
 8015e4c:	f001 fe0e 	bl	8017a6c <__pow5mult>
 8015e50:	4606      	mov	r6, r0
 8015e52:	465a      	mov	r2, fp
 8015e54:	4631      	mov	r1, r6
 8015e56:	4620      	mov	r0, r4
 8015e58:	f001 fd6e 	bl	8017938 <__multiply>
 8015e5c:	4659      	mov	r1, fp
 8015e5e:	4680      	mov	r8, r0
 8015e60:	4620      	mov	r0, r4
 8015e62:	f001 fcc5 	bl	80177f0 <_Bfree>
 8015e66:	46c3      	mov	fp, r8
 8015e68:	9b08      	ldr	r3, [sp, #32]
 8015e6a:	1bda      	subs	r2, r3, r7
 8015e6c:	f040 82a2 	bne.w	80163b4 <_dtoa_r+0x9a4>
 8015e70:	4620      	mov	r0, r4
 8015e72:	2101      	movs	r1, #1
 8015e74:	f001 fd56 	bl	8017924 <__i2b>
 8015e78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015e7a:	2b00      	cmp	r3, #0
 8015e7c:	4680      	mov	r8, r0
 8015e7e:	dd39      	ble.n	8015ef4 <_dtoa_r+0x4e4>
 8015e80:	4601      	mov	r1, r0
 8015e82:	461a      	mov	r2, r3
 8015e84:	4620      	mov	r0, r4
 8015e86:	f001 fdf1 	bl	8017a6c <__pow5mult>
 8015e8a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015e8c:	2b01      	cmp	r3, #1
 8015e8e:	4680      	mov	r8, r0
 8015e90:	f340 8296 	ble.w	80163c0 <_dtoa_r+0x9b0>
 8015e94:	f04f 0900 	mov.w	r9, #0
 8015e98:	f8d8 3010 	ldr.w	r3, [r8, #16]
 8015e9c:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 8015ea0:	6918      	ldr	r0, [r3, #16]
 8015ea2:	f001 fcf1 	bl	8017888 <__hi0bits>
 8015ea6:	f1c0 0020 	rsb	r0, r0, #32
 8015eaa:	e02d      	b.n	8015f08 <_dtoa_r+0x4f8>
 8015eac:	2301      	movs	r3, #1
 8015eae:	930b      	str	r3, [sp, #44]	; 0x2c
 8015eb0:	e66f      	b.n	8015b92 <_dtoa_r+0x182>
 8015eb2:	9804      	ldr	r0, [sp, #16]
 8015eb4:	f7ea fb54 	bl	8000560 <__aeabi_i2d>
 8015eb8:	4632      	mov	r2, r6
 8015eba:	463b      	mov	r3, r7
 8015ebc:	f7ea fe1e 	bl	8000afc <__aeabi_dcmpeq>
 8015ec0:	2800      	cmp	r0, #0
 8015ec2:	f47f ae50 	bne.w	8015b66 <_dtoa_r+0x156>
 8015ec6:	9b04      	ldr	r3, [sp, #16]
 8015ec8:	3b01      	subs	r3, #1
 8015eca:	9304      	str	r3, [sp, #16]
 8015ecc:	e64b      	b.n	8015b66 <_dtoa_r+0x156>
 8015ece:	9a05      	ldr	r2, [sp, #20]
 8015ed0:	9b04      	ldr	r3, [sp, #16]
 8015ed2:	1ad2      	subs	r2, r2, r3
 8015ed4:	425b      	negs	r3, r3
 8015ed6:	9308      	str	r3, [sp, #32]
 8015ed8:	2300      	movs	r3, #0
 8015eda:	9205      	str	r2, [sp, #20]
 8015edc:	930a      	str	r3, [sp, #40]	; 0x28
 8015ede:	e668      	b.n	8015bb2 <_dtoa_r+0x1a2>
 8015ee0:	f1ca 0300 	rsb	r3, sl, #0
 8015ee4:	9305      	str	r3, [sp, #20]
 8015ee6:	f04f 0a00 	mov.w	sl, #0
 8015eea:	e65a      	b.n	8015ba2 <_dtoa_r+0x192>
 8015eec:	9f08      	ldr	r7, [sp, #32]
 8015eee:	9d05      	ldr	r5, [sp, #20]
 8015ef0:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8015ef2:	e791      	b.n	8015e18 <_dtoa_r+0x408>
 8015ef4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015ef6:	2b01      	cmp	r3, #1
 8015ef8:	f340 82b3 	ble.w	8016462 <_dtoa_r+0xa52>
 8015efc:	f04f 0900 	mov.w	r9, #0
 8015f00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015f02:	2b00      	cmp	r3, #0
 8015f04:	d1c8      	bne.n	8015e98 <_dtoa_r+0x488>
 8015f06:	2001      	movs	r0, #1
 8015f08:	4450      	add	r0, sl
 8015f0a:	f010 001f 	ands.w	r0, r0, #31
 8015f0e:	f000 8081 	beq.w	8016014 <_dtoa_r+0x604>
 8015f12:	f1c0 0320 	rsb	r3, r0, #32
 8015f16:	2b04      	cmp	r3, #4
 8015f18:	f340 84b8 	ble.w	801688c <_dtoa_r+0xe7c>
 8015f1c:	f1c0 001c 	rsb	r0, r0, #28
 8015f20:	9b05      	ldr	r3, [sp, #20]
 8015f22:	4403      	add	r3, r0
 8015f24:	9305      	str	r3, [sp, #20]
 8015f26:	4405      	add	r5, r0
 8015f28:	4482      	add	sl, r0
 8015f2a:	9b05      	ldr	r3, [sp, #20]
 8015f2c:	2b00      	cmp	r3, #0
 8015f2e:	dd05      	ble.n	8015f3c <_dtoa_r+0x52c>
 8015f30:	4659      	mov	r1, fp
 8015f32:	461a      	mov	r2, r3
 8015f34:	4620      	mov	r0, r4
 8015f36:	f001 fde9 	bl	8017b0c <__lshift>
 8015f3a:	4683      	mov	fp, r0
 8015f3c:	f1ba 0f00 	cmp.w	sl, #0
 8015f40:	dd05      	ble.n	8015f4e <_dtoa_r+0x53e>
 8015f42:	4641      	mov	r1, r8
 8015f44:	4652      	mov	r2, sl
 8015f46:	4620      	mov	r0, r4
 8015f48:	f001 fde0 	bl	8017b0c <__lshift>
 8015f4c:	4680      	mov	r8, r0
 8015f4e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015f50:	2b00      	cmp	r3, #0
 8015f52:	f040 8268 	bne.w	8016426 <_dtoa_r+0xa16>
 8015f56:	9b06      	ldr	r3, [sp, #24]
 8015f58:	2b00      	cmp	r3, #0
 8015f5a:	f340 8295 	ble.w	8016488 <_dtoa_r+0xa78>
 8015f5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015f60:	2b00      	cmp	r3, #0
 8015f62:	d171      	bne.n	8016048 <_dtoa_r+0x638>
 8015f64:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8015f68:	9f06      	ldr	r7, [sp, #24]
 8015f6a:	464d      	mov	r5, r9
 8015f6c:	e002      	b.n	8015f74 <_dtoa_r+0x564>
 8015f6e:	f001 fc49 	bl	8017804 <__multadd>
 8015f72:	4683      	mov	fp, r0
 8015f74:	4641      	mov	r1, r8
 8015f76:	4658      	mov	r0, fp
 8015f78:	f7ff fcb2 	bl	80158e0 <quorem>
 8015f7c:	f100 0c30 	add.w	ip, r0, #48	; 0x30
 8015f80:	f805 cb01 	strb.w	ip, [r5], #1
 8015f84:	ebc9 0305 	rsb	r3, r9, r5
 8015f88:	42bb      	cmp	r3, r7
 8015f8a:	4620      	mov	r0, r4
 8015f8c:	4659      	mov	r1, fp
 8015f8e:	f04f 020a 	mov.w	r2, #10
 8015f92:	f04f 0300 	mov.w	r3, #0
 8015f96:	dbea      	blt.n	8015f6e <_dtoa_r+0x55e>
 8015f98:	9b07      	ldr	r3, [sp, #28]
 8015f9a:	9a06      	ldr	r2, [sp, #24]
 8015f9c:	2a01      	cmp	r2, #1
 8015f9e:	bfac      	ite	ge
 8015fa0:	189b      	addge	r3, r3, r2
 8015fa2:	3301      	addlt	r3, #1
 8015fa4:	461d      	mov	r5, r3
 8015fa6:	f04f 0a00 	mov.w	sl, #0
 8015faa:	4659      	mov	r1, fp
 8015fac:	2201      	movs	r2, #1
 8015fae:	4620      	mov	r0, r4
 8015fb0:	f8cd c008 	str.w	ip, [sp, #8]
 8015fb4:	f001 fdaa 	bl	8017b0c <__lshift>
 8015fb8:	4641      	mov	r1, r8
 8015fba:	4683      	mov	fp, r0
 8015fbc:	f001 fdfc 	bl	8017bb8 <__mcmp>
 8015fc0:	2800      	cmp	r0, #0
 8015fc2:	f8dd c008 	ldr.w	ip, [sp, #8]
 8015fc6:	f340 82f6 	ble.w	80165b6 <_dtoa_r+0xba6>
 8015fca:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8015fce:	9907      	ldr	r1, [sp, #28]
 8015fd0:	1e6b      	subs	r3, r5, #1
 8015fd2:	e004      	b.n	8015fde <_dtoa_r+0x5ce>
 8015fd4:	428b      	cmp	r3, r1
 8015fd6:	f000 8273 	beq.w	80164c0 <_dtoa_r+0xab0>
 8015fda:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8015fde:	2a39      	cmp	r2, #57	; 0x39
 8015fe0:	f103 0501 	add.w	r5, r3, #1
 8015fe4:	d0f6      	beq.n	8015fd4 <_dtoa_r+0x5c4>
 8015fe6:	3201      	adds	r2, #1
 8015fe8:	701a      	strb	r2, [r3, #0]
 8015fea:	4641      	mov	r1, r8
 8015fec:	4620      	mov	r0, r4
 8015fee:	f001 fbff 	bl	80177f0 <_Bfree>
 8015ff2:	2e00      	cmp	r6, #0
 8015ff4:	f43f aedf 	beq.w	8015db6 <_dtoa_r+0x3a6>
 8015ff8:	f1ba 0f00 	cmp.w	sl, #0
 8015ffc:	d005      	beq.n	801600a <_dtoa_r+0x5fa>
 8015ffe:	45b2      	cmp	sl, r6
 8016000:	d003      	beq.n	801600a <_dtoa_r+0x5fa>
 8016002:	4651      	mov	r1, sl
 8016004:	4620      	mov	r0, r4
 8016006:	f001 fbf3 	bl	80177f0 <_Bfree>
 801600a:	4631      	mov	r1, r6
 801600c:	4620      	mov	r0, r4
 801600e:	f001 fbef 	bl	80177f0 <_Bfree>
 8016012:	e6d0      	b.n	8015db6 <_dtoa_r+0x3a6>
 8016014:	201c      	movs	r0, #28
 8016016:	e783      	b.n	8015f20 <_dtoa_r+0x510>
 8016018:	4b04      	ldr	r3, [pc, #16]	; (801602c <_dtoa_r+0x61c>)
 801601a:	9a02      	ldr	r2, [sp, #8]
 801601c:	1b5b      	subs	r3, r3, r5
 801601e:	fa02 f003 	lsl.w	r0, r2, r3
 8016022:	e56d      	b.n	8015b00 <_dtoa_r+0xf0>
 8016024:	900b      	str	r0, [sp, #44]	; 0x2c
 8016026:	e5b4      	b.n	8015b92 <_dtoa_r+0x182>
 8016028:	40240000 	.word	0x40240000
 801602c:	fffffbee 	.word	0xfffffbee
 8016030:	4631      	mov	r1, r6
 8016032:	2300      	movs	r3, #0
 8016034:	4620      	mov	r0, r4
 8016036:	220a      	movs	r2, #10
 8016038:	f001 fbe4 	bl	8017804 <__multadd>
 801603c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801603e:	2b00      	cmp	r3, #0
 8016040:	4606      	mov	r6, r0
 8016042:	f340 840c 	ble.w	801685e <_dtoa_r+0xe4e>
 8016046:	9306      	str	r3, [sp, #24]
 8016048:	2d00      	cmp	r5, #0
 801604a:	dd05      	ble.n	8016058 <_dtoa_r+0x648>
 801604c:	4631      	mov	r1, r6
 801604e:	462a      	mov	r2, r5
 8016050:	4620      	mov	r0, r4
 8016052:	f001 fd5b 	bl	8017b0c <__lshift>
 8016056:	4606      	mov	r6, r0
 8016058:	f1b9 0f00 	cmp.w	r9, #0
 801605c:	f040 82e9 	bne.w	8016632 <_dtoa_r+0xc22>
 8016060:	46b1      	mov	r9, r6
 8016062:	9b06      	ldr	r3, [sp, #24]
 8016064:	9a07      	ldr	r2, [sp, #28]
 8016066:	3b01      	subs	r3, #1
 8016068:	18d3      	adds	r3, r2, r3
 801606a:	9308      	str	r3, [sp, #32]
 801606c:	9b02      	ldr	r3, [sp, #8]
 801606e:	f003 0301 	and.w	r3, r3, #1
 8016072:	9309      	str	r3, [sp, #36]	; 0x24
 8016074:	4617      	mov	r7, r2
 8016076:	4641      	mov	r1, r8
 8016078:	4658      	mov	r0, fp
 801607a:	f7ff fc31 	bl	80158e0 <quorem>
 801607e:	4631      	mov	r1, r6
 8016080:	4605      	mov	r5, r0
 8016082:	4658      	mov	r0, fp
 8016084:	f001 fd98 	bl	8017bb8 <__mcmp>
 8016088:	464a      	mov	r2, r9
 801608a:	4682      	mov	sl, r0
 801608c:	4641      	mov	r1, r8
 801608e:	4620      	mov	r0, r4
 8016090:	f001 fdb6 	bl	8017c00 <__mdiff>
 8016094:	68c2      	ldr	r2, [r0, #12]
 8016096:	4603      	mov	r3, r0
 8016098:	f105 0c30 	add.w	ip, r5, #48	; 0x30
 801609c:	2a00      	cmp	r2, #0
 801609e:	f040 81b8 	bne.w	8016412 <_dtoa_r+0xa02>
 80160a2:	4619      	mov	r1, r3
 80160a4:	4658      	mov	r0, fp
 80160a6:	f8cd c018 	str.w	ip, [sp, #24]
 80160aa:	9305      	str	r3, [sp, #20]
 80160ac:	f001 fd84 	bl	8017bb8 <__mcmp>
 80160b0:	9b05      	ldr	r3, [sp, #20]
 80160b2:	9002      	str	r0, [sp, #8]
 80160b4:	4619      	mov	r1, r3
 80160b6:	4620      	mov	r0, r4
 80160b8:	f001 fb9a 	bl	80177f0 <_Bfree>
 80160bc:	9a02      	ldr	r2, [sp, #8]
 80160be:	f8dd c018 	ldr.w	ip, [sp, #24]
 80160c2:	b92a      	cbnz	r2, 80160d0 <_dtoa_r+0x6c0>
 80160c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80160c6:	b91b      	cbnz	r3, 80160d0 <_dtoa_r+0x6c0>
 80160c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80160ca:	2b00      	cmp	r3, #0
 80160cc:	f000 83a7 	beq.w	801681e <_dtoa_r+0xe0e>
 80160d0:	f1ba 0f00 	cmp.w	sl, #0
 80160d4:	f2c0 8251 	blt.w	801657a <_dtoa_r+0xb6a>
 80160d8:	d105      	bne.n	80160e6 <_dtoa_r+0x6d6>
 80160da:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80160dc:	b91b      	cbnz	r3, 80160e6 <_dtoa_r+0x6d6>
 80160de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80160e0:	2b00      	cmp	r3, #0
 80160e2:	f000 824a 	beq.w	801657a <_dtoa_r+0xb6a>
 80160e6:	2a00      	cmp	r2, #0
 80160e8:	f300 82b7 	bgt.w	801665a <_dtoa_r+0xc4a>
 80160ec:	9b08      	ldr	r3, [sp, #32]
 80160ee:	f887 c000 	strb.w	ip, [r7]
 80160f2:	f107 0a01 	add.w	sl, r7, #1
 80160f6:	429f      	cmp	r7, r3
 80160f8:	4655      	mov	r5, sl
 80160fa:	f000 82ba 	beq.w	8016672 <_dtoa_r+0xc62>
 80160fe:	4659      	mov	r1, fp
 8016100:	220a      	movs	r2, #10
 8016102:	2300      	movs	r3, #0
 8016104:	4620      	mov	r0, r4
 8016106:	f001 fb7d 	bl	8017804 <__multadd>
 801610a:	454e      	cmp	r6, r9
 801610c:	4683      	mov	fp, r0
 801610e:	4631      	mov	r1, r6
 8016110:	4620      	mov	r0, r4
 8016112:	f04f 020a 	mov.w	r2, #10
 8016116:	f04f 0300 	mov.w	r3, #0
 801611a:	f000 8174 	beq.w	8016406 <_dtoa_r+0x9f6>
 801611e:	f001 fb71 	bl	8017804 <__multadd>
 8016122:	4649      	mov	r1, r9
 8016124:	4606      	mov	r6, r0
 8016126:	220a      	movs	r2, #10
 8016128:	4620      	mov	r0, r4
 801612a:	2300      	movs	r3, #0
 801612c:	f001 fb6a 	bl	8017804 <__multadd>
 8016130:	4657      	mov	r7, sl
 8016132:	4681      	mov	r9, r0
 8016134:	e79f      	b.n	8016076 <_dtoa_r+0x666>
 8016136:	2301      	movs	r3, #1
 8016138:	9309      	str	r3, [sp, #36]	; 0x24
 801613a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801613c:	2b00      	cmp	r3, #0
 801613e:	f340 8213 	ble.w	8016568 <_dtoa_r+0xb58>
 8016142:	461f      	mov	r7, r3
 8016144:	461e      	mov	r6, r3
 8016146:	930c      	str	r3, [sp, #48]	; 0x30
 8016148:	9306      	str	r3, [sp, #24]
 801614a:	2100      	movs	r1, #0
 801614c:	2f17      	cmp	r7, #23
 801614e:	6461      	str	r1, [r4, #68]	; 0x44
 8016150:	d90a      	bls.n	8016168 <_dtoa_r+0x758>
 8016152:	2201      	movs	r2, #1
 8016154:	2304      	movs	r3, #4
 8016156:	005b      	lsls	r3, r3, #1
 8016158:	f103 0014 	add.w	r0, r3, #20
 801615c:	4287      	cmp	r7, r0
 801615e:	4611      	mov	r1, r2
 8016160:	f102 0201 	add.w	r2, r2, #1
 8016164:	d2f7      	bcs.n	8016156 <_dtoa_r+0x746>
 8016166:	6461      	str	r1, [r4, #68]	; 0x44
 8016168:	4620      	mov	r0, r4
 801616a:	f001 fb1b 	bl	80177a4 <_Balloc>
 801616e:	2e0e      	cmp	r6, #14
 8016170:	9007      	str	r0, [sp, #28]
 8016172:	6420      	str	r0, [r4, #64]	; 0x40
 8016174:	f63f ad5c 	bhi.w	8015c30 <_dtoa_r+0x220>
 8016178:	2d00      	cmp	r5, #0
 801617a:	f43f ad59 	beq.w	8015c30 <_dtoa_r+0x220>
 801617e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8016182:	9904      	ldr	r1, [sp, #16]
 8016184:	2900      	cmp	r1, #0
 8016186:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 801618a:	f340 8221 	ble.w	80165d0 <_dtoa_r+0xbc0>
 801618e:	4bb7      	ldr	r3, [pc, #732]	; (801646c <_dtoa_r+0xa5c>)
 8016190:	f001 020f 	and.w	r2, r1, #15
 8016194:	110d      	asrs	r5, r1, #4
 8016196:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801619a:	06e9      	lsls	r1, r5, #27
 801619c:	e9d3 6700 	ldrd	r6, r7, [r3]
 80161a0:	f140 81db 	bpl.w	801655a <_dtoa_r+0xb4a>
 80161a4:	4bb2      	ldr	r3, [pc, #712]	; (8016470 <_dtoa_r+0xa60>)
 80161a6:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 80161aa:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80161ae:	f7ea fb67 	bl	8000880 <__aeabi_ddiv>
 80161b2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80161b6:	f005 050f 	and.w	r5, r5, #15
 80161ba:	f04f 0803 	mov.w	r8, #3
 80161be:	b18d      	cbz	r5, 80161e4 <_dtoa_r+0x7d4>
 80161c0:	f8df 92ac 	ldr.w	r9, [pc, #684]	; 8016470 <_dtoa_r+0xa60>
 80161c4:	4630      	mov	r0, r6
 80161c6:	4639      	mov	r1, r7
 80161c8:	07ea      	lsls	r2, r5, #31
 80161ca:	d505      	bpl.n	80161d8 <_dtoa_r+0x7c8>
 80161cc:	e9d9 2300 	ldrd	r2, r3, [r9]
 80161d0:	f108 0801 	add.w	r8, r8, #1
 80161d4:	f7ea fa2a 	bl	800062c <__aeabi_dmul>
 80161d8:	106d      	asrs	r5, r5, #1
 80161da:	f109 0908 	add.w	r9, r9, #8
 80161de:	d1f3      	bne.n	80161c8 <_dtoa_r+0x7b8>
 80161e0:	4606      	mov	r6, r0
 80161e2:	460f      	mov	r7, r1
 80161e4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80161e8:	4632      	mov	r2, r6
 80161ea:	463b      	mov	r3, r7
 80161ec:	f7ea fb48 	bl	8000880 <__aeabi_ddiv>
 80161f0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80161f4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80161f6:	b143      	cbz	r3, 801620a <_dtoa_r+0x7fa>
 80161f8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80161fc:	2200      	movs	r2, #0
 80161fe:	4b9d      	ldr	r3, [pc, #628]	; (8016474 <_dtoa_r+0xa64>)
 8016200:	f7ea fc86 	bl	8000b10 <__aeabi_dcmplt>
 8016204:	2800      	cmp	r0, #0
 8016206:	f040 82ac 	bne.w	8016762 <_dtoa_r+0xd52>
 801620a:	4640      	mov	r0, r8
 801620c:	f7ea f9a8 	bl	8000560 <__aeabi_i2d>
 8016210:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8016214:	f7ea fa0a 	bl	800062c <__aeabi_dmul>
 8016218:	4b97      	ldr	r3, [pc, #604]	; (8016478 <_dtoa_r+0xa68>)
 801621a:	2200      	movs	r2, #0
 801621c:	f7ea f854 	bl	80002c8 <__adddf3>
 8016220:	9b06      	ldr	r3, [sp, #24]
 8016222:	4606      	mov	r6, r0
 8016224:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
 8016228:	2b00      	cmp	r3, #0
 801622a:	f000 8162 	beq.w	80164f2 <_dtoa_r+0xae2>
 801622e:	9b04      	ldr	r3, [sp, #16]
 8016230:	f8dd 9018 	ldr.w	r9, [sp, #24]
 8016234:	9312      	str	r3, [sp, #72]	; 0x48
 8016236:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016238:	2b00      	cmp	r3, #0
 801623a:	f000 8221 	beq.w	8016680 <_dtoa_r+0xc70>
 801623e:	4b8b      	ldr	r3, [pc, #556]	; (801646c <_dtoa_r+0xa5c>)
 8016240:	498e      	ldr	r1, [pc, #568]	; (801647c <_dtoa_r+0xa6c>)
 8016242:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
 8016246:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 801624a:	2000      	movs	r0, #0
 801624c:	f7ea fb18 	bl	8000880 <__aeabi_ddiv>
 8016250:	4632      	mov	r2, r6
 8016252:	463b      	mov	r3, r7
 8016254:	f7ea f836 	bl	80002c4 <__aeabi_dsub>
 8016258:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 801625c:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8016260:	4639      	mov	r1, r7
 8016262:	4630      	mov	r0, r6
 8016264:	f7ea fc7c 	bl	8000b60 <__aeabi_d2iz>
 8016268:	4605      	mov	r5, r0
 801626a:	f7ea f979 	bl	8000560 <__aeabi_i2d>
 801626e:	3530      	adds	r5, #48	; 0x30
 8016270:	4602      	mov	r2, r0
 8016272:	460b      	mov	r3, r1
 8016274:	4630      	mov	r0, r6
 8016276:	4639      	mov	r1, r7
 8016278:	f7ea f824 	bl	80002c4 <__aeabi_dsub>
 801627c:	fa5f f885 	uxtb.w	r8, r5
 8016280:	9d07      	ldr	r5, [sp, #28]
 8016282:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8016286:	f885 8000 	strb.w	r8, [r5]
 801628a:	4606      	mov	r6, r0
 801628c:	460f      	mov	r7, r1
 801628e:	3501      	adds	r5, #1
 8016290:	f7ea fc3e 	bl	8000b10 <__aeabi_dcmplt>
 8016294:	2800      	cmp	r0, #0
 8016296:	f040 82b2 	bne.w	80167fe <_dtoa_r+0xdee>
 801629a:	4632      	mov	r2, r6
 801629c:	463b      	mov	r3, r7
 801629e:	2000      	movs	r0, #0
 80162a0:	4974      	ldr	r1, [pc, #464]	; (8016474 <_dtoa_r+0xa64>)
 80162a2:	f7ea f80f 	bl	80002c4 <__aeabi_dsub>
 80162a6:	4602      	mov	r2, r0
 80162a8:	460b      	mov	r3, r1
 80162aa:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80162ae:	f7ea fc4d 	bl	8000b4c <__aeabi_dcmpgt>
 80162b2:	2800      	cmp	r0, #0
 80162b4:	f040 82ac 	bne.w	8016810 <_dtoa_r+0xe00>
 80162b8:	f1b9 0f01 	cmp.w	r9, #1
 80162bc:	f340 8138 	ble.w	8016530 <_dtoa_r+0xb20>
 80162c0:	9b07      	ldr	r3, [sp, #28]
 80162c2:	f8cd a04c 	str.w	sl, [sp, #76]	; 0x4c
 80162c6:	f8cd b008 	str.w	fp, [sp, #8]
 80162ca:	4499      	add	r9, r3
 80162cc:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
 80162d0:	46a0      	mov	r8, r4
 80162d2:	e00d      	b.n	80162f0 <_dtoa_r+0x8e0>
 80162d4:	2000      	movs	r0, #0
 80162d6:	4967      	ldr	r1, [pc, #412]	; (8016474 <_dtoa_r+0xa64>)
 80162d8:	f7e9 fff4 	bl	80002c4 <__aeabi_dsub>
 80162dc:	4652      	mov	r2, sl
 80162de:	465b      	mov	r3, fp
 80162e0:	f7ea fc16 	bl	8000b10 <__aeabi_dcmplt>
 80162e4:	2800      	cmp	r0, #0
 80162e6:	f040 828e 	bne.w	8016806 <_dtoa_r+0xdf6>
 80162ea:	454d      	cmp	r5, r9
 80162ec:	f000 811b 	beq.w	8016526 <_dtoa_r+0xb16>
 80162f0:	4650      	mov	r0, sl
 80162f2:	4659      	mov	r1, fp
 80162f4:	2200      	movs	r2, #0
 80162f6:	4b62      	ldr	r3, [pc, #392]	; (8016480 <_dtoa_r+0xa70>)
 80162f8:	f7ea f998 	bl	800062c <__aeabi_dmul>
 80162fc:	2200      	movs	r2, #0
 80162fe:	4b60      	ldr	r3, [pc, #384]	; (8016480 <_dtoa_r+0xa70>)
 8016300:	4682      	mov	sl, r0
 8016302:	468b      	mov	fp, r1
 8016304:	4630      	mov	r0, r6
 8016306:	4639      	mov	r1, r7
 8016308:	f7ea f990 	bl	800062c <__aeabi_dmul>
 801630c:	460f      	mov	r7, r1
 801630e:	4606      	mov	r6, r0
 8016310:	f7ea fc26 	bl	8000b60 <__aeabi_d2iz>
 8016314:	4604      	mov	r4, r0
 8016316:	f7ea f923 	bl	8000560 <__aeabi_i2d>
 801631a:	4602      	mov	r2, r0
 801631c:	460b      	mov	r3, r1
 801631e:	4630      	mov	r0, r6
 8016320:	4639      	mov	r1, r7
 8016322:	f7e9 ffcf 	bl	80002c4 <__aeabi_dsub>
 8016326:	3430      	adds	r4, #48	; 0x30
 8016328:	b2e4      	uxtb	r4, r4
 801632a:	4652      	mov	r2, sl
 801632c:	465b      	mov	r3, fp
 801632e:	f805 4b01 	strb.w	r4, [r5], #1
 8016332:	4606      	mov	r6, r0
 8016334:	460f      	mov	r7, r1
 8016336:	f7ea fbeb 	bl	8000b10 <__aeabi_dcmplt>
 801633a:	4632      	mov	r2, r6
 801633c:	463b      	mov	r3, r7
 801633e:	2800      	cmp	r0, #0
 8016340:	d0c8      	beq.n	80162d4 <_dtoa_r+0x8c4>
 8016342:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016344:	f8dd b008 	ldr.w	fp, [sp, #8]
 8016348:	9304      	str	r3, [sp, #16]
 801634a:	4644      	mov	r4, r8
 801634c:	e533      	b.n	8015db6 <_dtoa_r+0x3a6>
 801634e:	2300      	movs	r3, #0
 8016350:	9309      	str	r3, [sp, #36]	; 0x24
 8016352:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8016354:	9a04      	ldr	r2, [sp, #16]
 8016356:	4413      	add	r3, r2
 8016358:	930c      	str	r3, [sp, #48]	; 0x30
 801635a:	3301      	adds	r3, #1
 801635c:	2b00      	cmp	r3, #0
 801635e:	9306      	str	r3, [sp, #24]
 8016360:	f340 8109 	ble.w	8016576 <_dtoa_r+0xb66>
 8016364:	9e06      	ldr	r6, [sp, #24]
 8016366:	4637      	mov	r7, r6
 8016368:	e6ef      	b.n	801614a <_dtoa_r+0x73a>
 801636a:	2300      	movs	r3, #0
 801636c:	9309      	str	r3, [sp, #36]	; 0x24
 801636e:	e6e4      	b.n	801613a <_dtoa_r+0x72a>
 8016370:	9b06      	ldr	r3, [sp, #24]
 8016372:	2b00      	cmp	r3, #0
 8016374:	f73f ac6d 	bgt.w	8015c52 <_dtoa_r+0x242>
 8016378:	f040 8262 	bne.w	8016840 <_dtoa_r+0xe30>
 801637c:	4640      	mov	r0, r8
 801637e:	2200      	movs	r2, #0
 8016380:	4b40      	ldr	r3, [pc, #256]	; (8016484 <_dtoa_r+0xa74>)
 8016382:	4649      	mov	r1, r9
 8016384:	f7ea f952 	bl	800062c <__aeabi_dmul>
 8016388:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801638c:	f7ea fbd4 	bl	8000b38 <__aeabi_dcmpge>
 8016390:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8016394:	4646      	mov	r6, r8
 8016396:	2800      	cmp	r0, #0
 8016398:	f000 808a 	beq.w	80164b0 <_dtoa_r+0xaa0>
 801639c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801639e:	9d07      	ldr	r5, [sp, #28]
 80163a0:	43db      	mvns	r3, r3
 80163a2:	9304      	str	r3, [sp, #16]
 80163a4:	4641      	mov	r1, r8
 80163a6:	4620      	mov	r0, r4
 80163a8:	f001 fa22 	bl	80177f0 <_Bfree>
 80163ac:	2e00      	cmp	r6, #0
 80163ae:	f47f ae2c 	bne.w	801600a <_dtoa_r+0x5fa>
 80163b2:	e500      	b.n	8015db6 <_dtoa_r+0x3a6>
 80163b4:	4659      	mov	r1, fp
 80163b6:	4620      	mov	r0, r4
 80163b8:	f001 fb58 	bl	8017a6c <__pow5mult>
 80163bc:	4683      	mov	fp, r0
 80163be:	e557      	b.n	8015e70 <_dtoa_r+0x460>
 80163c0:	9b02      	ldr	r3, [sp, #8]
 80163c2:	2b00      	cmp	r3, #0
 80163c4:	f47f ad66 	bne.w	8015e94 <_dtoa_r+0x484>
 80163c8:	9b03      	ldr	r3, [sp, #12]
 80163ca:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80163ce:	2b00      	cmp	r3, #0
 80163d0:	f47f ad94 	bne.w	8015efc <_dtoa_r+0x4ec>
 80163d4:	9b03      	ldr	r3, [sp, #12]
 80163d6:	f023 4700 	bic.w	r7, r3, #2147483648	; 0x80000000
 80163da:	0d3f      	lsrs	r7, r7, #20
 80163dc:	053f      	lsls	r7, r7, #20
 80163de:	2f00      	cmp	r7, #0
 80163e0:	f000 821a 	beq.w	8016818 <_dtoa_r+0xe08>
 80163e4:	9b05      	ldr	r3, [sp, #20]
 80163e6:	3301      	adds	r3, #1
 80163e8:	9305      	str	r3, [sp, #20]
 80163ea:	f10a 0a01 	add.w	sl, sl, #1
 80163ee:	f04f 0901 	mov.w	r9, #1
 80163f2:	e585      	b.n	8015f00 <_dtoa_r+0x4f0>
 80163f4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80163f6:	2a00      	cmp	r2, #0
 80163f8:	f000 81a5 	beq.w	8016746 <_dtoa_r+0xd36>
 80163fc:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8016400:	9f08      	ldr	r7, [sp, #32]
 8016402:	9d05      	ldr	r5, [sp, #20]
 8016404:	e4ff      	b.n	8015e06 <_dtoa_r+0x3f6>
 8016406:	f001 f9fd 	bl	8017804 <__multadd>
 801640a:	4657      	mov	r7, sl
 801640c:	4606      	mov	r6, r0
 801640e:	4681      	mov	r9, r0
 8016410:	e631      	b.n	8016076 <_dtoa_r+0x666>
 8016412:	4601      	mov	r1, r0
 8016414:	4620      	mov	r0, r4
 8016416:	f8cd c008 	str.w	ip, [sp, #8]
 801641a:	f001 f9e9 	bl	80177f0 <_Bfree>
 801641e:	2201      	movs	r2, #1
 8016420:	f8dd c008 	ldr.w	ip, [sp, #8]
 8016424:	e654      	b.n	80160d0 <_dtoa_r+0x6c0>
 8016426:	4658      	mov	r0, fp
 8016428:	4641      	mov	r1, r8
 801642a:	f001 fbc5 	bl	8017bb8 <__mcmp>
 801642e:	2800      	cmp	r0, #0
 8016430:	f6bf ad91 	bge.w	8015f56 <_dtoa_r+0x546>
 8016434:	9f04      	ldr	r7, [sp, #16]
 8016436:	4659      	mov	r1, fp
 8016438:	2300      	movs	r3, #0
 801643a:	4620      	mov	r0, r4
 801643c:	220a      	movs	r2, #10
 801643e:	3f01      	subs	r7, #1
 8016440:	9704      	str	r7, [sp, #16]
 8016442:	f001 f9df 	bl	8017804 <__multadd>
 8016446:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016448:	4683      	mov	fp, r0
 801644a:	2b00      	cmp	r3, #0
 801644c:	f47f adf0 	bne.w	8016030 <_dtoa_r+0x620>
 8016450:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016452:	2b00      	cmp	r3, #0
 8016454:	f340 81f8 	ble.w	8016848 <_dtoa_r+0xe38>
 8016458:	9306      	str	r3, [sp, #24]
 801645a:	e583      	b.n	8015f64 <_dtoa_r+0x554>
 801645c:	9807      	ldr	r0, [sp, #28]
 801645e:	f7ff bb0b 	b.w	8015a78 <_dtoa_r+0x68>
 8016462:	9b02      	ldr	r3, [sp, #8]
 8016464:	2b00      	cmp	r3, #0
 8016466:	f47f ad49 	bne.w	8015efc <_dtoa_r+0x4ec>
 801646a:	e7ad      	b.n	80163c8 <_dtoa_r+0x9b8>
 801646c:	0802d768 	.word	0x0802d768
 8016470:	0802d830 	.word	0x0802d830
 8016474:	3ff00000 	.word	0x3ff00000
 8016478:	401c0000 	.word	0x401c0000
 801647c:	3fe00000 	.word	0x3fe00000
 8016480:	40240000 	.word	0x40240000
 8016484:	40140000 	.word	0x40140000
 8016488:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801648a:	2b02      	cmp	r3, #2
 801648c:	f77f ad67 	ble.w	8015f5e <_dtoa_r+0x54e>
 8016490:	9b06      	ldr	r3, [sp, #24]
 8016492:	2b00      	cmp	r3, #0
 8016494:	d182      	bne.n	801639c <_dtoa_r+0x98c>
 8016496:	4641      	mov	r1, r8
 8016498:	2205      	movs	r2, #5
 801649a:	4620      	mov	r0, r4
 801649c:	f001 f9b2 	bl	8017804 <__multadd>
 80164a0:	4680      	mov	r8, r0
 80164a2:	4641      	mov	r1, r8
 80164a4:	4658      	mov	r0, fp
 80164a6:	f001 fb87 	bl	8017bb8 <__mcmp>
 80164aa:	2800      	cmp	r0, #0
 80164ac:	f77f af76 	ble.w	801639c <_dtoa_r+0x98c>
 80164b0:	9a04      	ldr	r2, [sp, #16]
 80164b2:	9907      	ldr	r1, [sp, #28]
 80164b4:	2331      	movs	r3, #49	; 0x31
 80164b6:	3201      	adds	r2, #1
 80164b8:	9204      	str	r2, [sp, #16]
 80164ba:	700b      	strb	r3, [r1, #0]
 80164bc:	1c4d      	adds	r5, r1, #1
 80164be:	e771      	b.n	80163a4 <_dtoa_r+0x994>
 80164c0:	9a04      	ldr	r2, [sp, #16]
 80164c2:	3201      	adds	r2, #1
 80164c4:	9204      	str	r2, [sp, #16]
 80164c6:	9a07      	ldr	r2, [sp, #28]
 80164c8:	2331      	movs	r3, #49	; 0x31
 80164ca:	7013      	strb	r3, [r2, #0]
 80164cc:	e58d      	b.n	8015fea <_dtoa_r+0x5da>
 80164ce:	f8dd b008 	ldr.w	fp, [sp, #8]
 80164d2:	9c05      	ldr	r4, [sp, #20]
 80164d4:	e46f      	b.n	8015db6 <_dtoa_r+0x3a6>
 80164d6:	4640      	mov	r0, r8
 80164d8:	f7ea f842 	bl	8000560 <__aeabi_i2d>
 80164dc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80164e0:	f7ea f8a4 	bl	800062c <__aeabi_dmul>
 80164e4:	2200      	movs	r2, #0
 80164e6:	4bbc      	ldr	r3, [pc, #752]	; (80167d8 <_dtoa_r+0xdc8>)
 80164e8:	f7e9 feee 	bl	80002c8 <__adddf3>
 80164ec:	4606      	mov	r6, r0
 80164ee:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
 80164f2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80164f6:	2200      	movs	r2, #0
 80164f8:	4bb8      	ldr	r3, [pc, #736]	; (80167dc <_dtoa_r+0xdcc>)
 80164fa:	f7e9 fee3 	bl	80002c4 <__aeabi_dsub>
 80164fe:	4632      	mov	r2, r6
 8016500:	463b      	mov	r3, r7
 8016502:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8016506:	f7ea fb21 	bl	8000b4c <__aeabi_dcmpgt>
 801650a:	4680      	mov	r8, r0
 801650c:	2800      	cmp	r0, #0
 801650e:	f040 80b3 	bne.w	8016678 <_dtoa_r+0xc68>
 8016512:	4632      	mov	r2, r6
 8016514:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
 8016518:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801651c:	f7ea faf8 	bl	8000b10 <__aeabi_dcmplt>
 8016520:	b130      	cbz	r0, 8016530 <_dtoa_r+0xb20>
 8016522:	4646      	mov	r6, r8
 8016524:	e73a      	b.n	801639c <_dtoa_r+0x98c>
 8016526:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 801652a:	f8dd b008 	ldr.w	fp, [sp, #8]
 801652e:	4644      	mov	r4, r8
 8016530:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 8016534:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8016538:	f7ff bb7a 	b.w	8015c30 <_dtoa_r+0x220>
 801653c:	4659      	mov	r1, fp
 801653e:	9a08      	ldr	r2, [sp, #32]
 8016540:	4620      	mov	r0, r4
 8016542:	f001 fa93 	bl	8017a6c <__pow5mult>
 8016546:	4683      	mov	fp, r0
 8016548:	e492      	b.n	8015e70 <_dtoa_r+0x460>
 801654a:	9b08      	ldr	r3, [sp, #32]
 801654c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801654e:	9708      	str	r7, [sp, #32]
 8016550:	1afb      	subs	r3, r7, r3
 8016552:	441a      	add	r2, r3
 8016554:	920a      	str	r2, [sp, #40]	; 0x28
 8016556:	2700      	movs	r7, #0
 8016558:	e44f      	b.n	8015dfa <_dtoa_r+0x3ea>
 801655a:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 801655e:	f04f 0802 	mov.w	r8, #2
 8016562:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8016566:	e62a      	b.n	80161be <_dtoa_r+0x7ae>
 8016568:	2601      	movs	r6, #1
 801656a:	9621      	str	r6, [sp, #132]	; 0x84
 801656c:	960c      	str	r6, [sp, #48]	; 0x30
 801656e:	9606      	str	r6, [sp, #24]
 8016570:	2100      	movs	r1, #0
 8016572:	6461      	str	r1, [r4, #68]	; 0x44
 8016574:	e5f8      	b.n	8016168 <_dtoa_r+0x758>
 8016576:	461e      	mov	r6, r3
 8016578:	e7fa      	b.n	8016570 <_dtoa_r+0xb60>
 801657a:	2a00      	cmp	r2, #0
 801657c:	dd15      	ble.n	80165aa <_dtoa_r+0xb9a>
 801657e:	4659      	mov	r1, fp
 8016580:	2201      	movs	r2, #1
 8016582:	4620      	mov	r0, r4
 8016584:	f8cd c008 	str.w	ip, [sp, #8]
 8016588:	f001 fac0 	bl	8017b0c <__lshift>
 801658c:	4641      	mov	r1, r8
 801658e:	4683      	mov	fp, r0
 8016590:	f001 fb12 	bl	8017bb8 <__mcmp>
 8016594:	2800      	cmp	r0, #0
 8016596:	f8dd c008 	ldr.w	ip, [sp, #8]
 801659a:	f340 814a 	ble.w	8016832 <_dtoa_r+0xe22>
 801659e:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
 80165a2:	f000 8106 	beq.w	80167b2 <_dtoa_r+0xda2>
 80165a6:	f10c 0c01 	add.w	ip, ip, #1
 80165aa:	46b2      	mov	sl, r6
 80165ac:	f887 c000 	strb.w	ip, [r7]
 80165b0:	1c7d      	adds	r5, r7, #1
 80165b2:	464e      	mov	r6, r9
 80165b4:	e519      	b.n	8015fea <_dtoa_r+0x5da>
 80165b6:	d104      	bne.n	80165c2 <_dtoa_r+0xbb2>
 80165b8:	f01c 0f01 	tst.w	ip, #1
 80165bc:	d001      	beq.n	80165c2 <_dtoa_r+0xbb2>
 80165be:	e504      	b.n	8015fca <_dtoa_r+0x5ba>
 80165c0:	4615      	mov	r5, r2
 80165c2:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 80165c6:	2b30      	cmp	r3, #48	; 0x30
 80165c8:	f105 32ff 	add.w	r2, r5, #4294967295
 80165cc:	d0f8      	beq.n	80165c0 <_dtoa_r+0xbb0>
 80165ce:	e50c      	b.n	8015fea <_dtoa_r+0x5da>
 80165d0:	9b04      	ldr	r3, [sp, #16]
 80165d2:	425d      	negs	r5, r3
 80165d4:	2d00      	cmp	r5, #0
 80165d6:	f000 80bd 	beq.w	8016754 <_dtoa_r+0xd44>
 80165da:	4b81      	ldr	r3, [pc, #516]	; (80167e0 <_dtoa_r+0xdd0>)
 80165dc:	f005 020f 	and.w	r2, r5, #15
 80165e0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80165e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80165e8:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 80165ec:	f7ea f81e 	bl	800062c <__aeabi_dmul>
 80165f0:	112d      	asrs	r5, r5, #4
 80165f2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80165f6:	f000 812c 	beq.w	8016852 <_dtoa_r+0xe42>
 80165fa:	4e7a      	ldr	r6, [pc, #488]	; (80167e4 <_dtoa_r+0xdd4>)
 80165fc:	f04f 0802 	mov.w	r8, #2
 8016600:	07eb      	lsls	r3, r5, #31
 8016602:	d505      	bpl.n	8016610 <_dtoa_r+0xc00>
 8016604:	e9d6 2300 	ldrd	r2, r3, [r6]
 8016608:	f108 0801 	add.w	r8, r8, #1
 801660c:	f7ea f80e 	bl	800062c <__aeabi_dmul>
 8016610:	106d      	asrs	r5, r5, #1
 8016612:	f106 0608 	add.w	r6, r6, #8
 8016616:	d1f3      	bne.n	8016600 <_dtoa_r+0xbf0>
 8016618:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801661c:	e5ea      	b.n	80161f4 <_dtoa_r+0x7e4>
 801661e:	9a04      	ldr	r2, [sp, #16]
 8016620:	3201      	adds	r2, #1
 8016622:	9204      	str	r2, [sp, #16]
 8016624:	9a07      	ldr	r2, [sp, #28]
 8016626:	2330      	movs	r3, #48	; 0x30
 8016628:	7013      	strb	r3, [r2, #0]
 801662a:	2331      	movs	r3, #49	; 0x31
 801662c:	7013      	strb	r3, [r2, #0]
 801662e:	f7ff bbc2 	b.w	8015db6 <_dtoa_r+0x3a6>
 8016632:	6871      	ldr	r1, [r6, #4]
 8016634:	4620      	mov	r0, r4
 8016636:	f001 f8b5 	bl	80177a4 <_Balloc>
 801663a:	6933      	ldr	r3, [r6, #16]
 801663c:	1c9a      	adds	r2, r3, #2
 801663e:	4605      	mov	r5, r0
 8016640:	0092      	lsls	r2, r2, #2
 8016642:	f106 010c 	add.w	r1, r6, #12
 8016646:	300c      	adds	r0, #12
 8016648:	f7e9 fd9e 	bl	8000188 <memcpy>
 801664c:	4620      	mov	r0, r4
 801664e:	4629      	mov	r1, r5
 8016650:	2201      	movs	r2, #1
 8016652:	f001 fa5b 	bl	8017b0c <__lshift>
 8016656:	4681      	mov	r9, r0
 8016658:	e503      	b.n	8016062 <_dtoa_r+0x652>
 801665a:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
 801665e:	f000 80a8 	beq.w	80167b2 <_dtoa_r+0xda2>
 8016662:	f10c 0c01 	add.w	ip, ip, #1
 8016666:	46b2      	mov	sl, r6
 8016668:	f887 c000 	strb.w	ip, [r7]
 801666c:	1c7d      	adds	r5, r7, #1
 801666e:	464e      	mov	r6, r9
 8016670:	e4bb      	b.n	8015fea <_dtoa_r+0x5da>
 8016672:	46b2      	mov	sl, r6
 8016674:	464e      	mov	r6, r9
 8016676:	e498      	b.n	8015faa <_dtoa_r+0x59a>
 8016678:	f04f 0800 	mov.w	r8, #0
 801667c:	4646      	mov	r6, r8
 801667e:	e717      	b.n	80164b0 <_dtoa_r+0xaa0>
 8016680:	4957      	ldr	r1, [pc, #348]	; (80167e0 <_dtoa_r+0xdd0>)
 8016682:	f109 33ff 	add.w	r3, r9, #4294967295
 8016686:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 801668a:	4632      	mov	r2, r6
 801668c:	9313      	str	r3, [sp, #76]	; 0x4c
 801668e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8016692:	463b      	mov	r3, r7
 8016694:	f7e9 ffca 	bl	800062c <__aeabi_dmul>
 8016698:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 801669c:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80166a0:	4639      	mov	r1, r7
 80166a2:	4630      	mov	r0, r6
 80166a4:	f7ea fa5c 	bl	8000b60 <__aeabi_d2iz>
 80166a8:	4605      	mov	r5, r0
 80166aa:	f7e9 ff59 	bl	8000560 <__aeabi_i2d>
 80166ae:	4602      	mov	r2, r0
 80166b0:	460b      	mov	r3, r1
 80166b2:	4630      	mov	r0, r6
 80166b4:	4639      	mov	r1, r7
 80166b6:	f7e9 fe05 	bl	80002c4 <__aeabi_dsub>
 80166ba:	9a07      	ldr	r2, [sp, #28]
 80166bc:	3530      	adds	r5, #48	; 0x30
 80166be:	f1b9 0f01 	cmp.w	r9, #1
 80166c2:	7015      	strb	r5, [r2, #0]
 80166c4:	4606      	mov	r6, r0
 80166c6:	460f      	mov	r7, r1
 80166c8:	f102 0501 	add.w	r5, r2, #1
 80166cc:	d023      	beq.n	8016716 <_dtoa_r+0xd06>
 80166ce:	9b07      	ldr	r3, [sp, #28]
 80166d0:	f8cd a008 	str.w	sl, [sp, #8]
 80166d4:	444b      	add	r3, r9
 80166d6:	465e      	mov	r6, fp
 80166d8:	469a      	mov	sl, r3
 80166da:	46ab      	mov	fp, r5
 80166dc:	2200      	movs	r2, #0
 80166de:	4b42      	ldr	r3, [pc, #264]	; (80167e8 <_dtoa_r+0xdd8>)
 80166e0:	f7e9 ffa4 	bl	800062c <__aeabi_dmul>
 80166e4:	4689      	mov	r9, r1
 80166e6:	4680      	mov	r8, r0
 80166e8:	f7ea fa3a 	bl	8000b60 <__aeabi_d2iz>
 80166ec:	4607      	mov	r7, r0
 80166ee:	f7e9 ff37 	bl	8000560 <__aeabi_i2d>
 80166f2:	3730      	adds	r7, #48	; 0x30
 80166f4:	4602      	mov	r2, r0
 80166f6:	460b      	mov	r3, r1
 80166f8:	4640      	mov	r0, r8
 80166fa:	4649      	mov	r1, r9
 80166fc:	f7e9 fde2 	bl	80002c4 <__aeabi_dsub>
 8016700:	f80b 7b01 	strb.w	r7, [fp], #1
 8016704:	45d3      	cmp	fp, sl
 8016706:	d1e9      	bne.n	80166dc <_dtoa_r+0xccc>
 8016708:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801670a:	f8dd a008 	ldr.w	sl, [sp, #8]
 801670e:	46b3      	mov	fp, r6
 8016710:	460f      	mov	r7, r1
 8016712:	4606      	mov	r6, r0
 8016714:	441d      	add	r5, r3
 8016716:	2200      	movs	r2, #0
 8016718:	4b34      	ldr	r3, [pc, #208]	; (80167ec <_dtoa_r+0xddc>)
 801671a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 801671e:	f7e9 fdd3 	bl	80002c8 <__adddf3>
 8016722:	4632      	mov	r2, r6
 8016724:	463b      	mov	r3, r7
 8016726:	f7ea f9f3 	bl	8000b10 <__aeabi_dcmplt>
 801672a:	2800      	cmp	r0, #0
 801672c:	d047      	beq.n	80167be <_dtoa_r+0xdae>
 801672e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016730:	9304      	str	r3, [sp, #16]
 8016732:	f815 8c01 	ldrb.w	r8, [r5, #-1]
 8016736:	f7ff bb2c 	b.w	8015d92 <_dtoa_r+0x382>
 801673a:	9b05      	ldr	r3, [sp, #20]
 801673c:	9a06      	ldr	r2, [sp, #24]
 801673e:	1a9d      	subs	r5, r3, r2
 8016740:	2300      	movs	r3, #0
 8016742:	f7ff bb60 	b.w	8015e06 <_dtoa_r+0x3f6>
 8016746:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8016748:	9f08      	ldr	r7, [sp, #32]
 801674a:	9d05      	ldr	r5, [sp, #20]
 801674c:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8016750:	f7ff bb59 	b.w	8015e06 <_dtoa_r+0x3f6>
 8016754:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 8016758:	f04f 0802 	mov.w	r8, #2
 801675c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8016760:	e548      	b.n	80161f4 <_dtoa_r+0x7e4>
 8016762:	9b06      	ldr	r3, [sp, #24]
 8016764:	2b00      	cmp	r3, #0
 8016766:	f43f aeb6 	beq.w	80164d6 <_dtoa_r+0xac6>
 801676a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801676c:	2d00      	cmp	r5, #0
 801676e:	f77f aedf 	ble.w	8016530 <_dtoa_r+0xb20>
 8016772:	2200      	movs	r2, #0
 8016774:	4b1c      	ldr	r3, [pc, #112]	; (80167e8 <_dtoa_r+0xdd8>)
 8016776:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801677a:	f7e9 ff57 	bl	800062c <__aeabi_dmul>
 801677e:	4606      	mov	r6, r0
 8016780:	460f      	mov	r7, r1
 8016782:	f108 0001 	add.w	r0, r8, #1
 8016786:	e9cd 6702 	strd	r6, r7, [sp, #8]
 801678a:	f7e9 fee9 	bl	8000560 <__aeabi_i2d>
 801678e:	4602      	mov	r2, r0
 8016790:	460b      	mov	r3, r1
 8016792:	4630      	mov	r0, r6
 8016794:	4639      	mov	r1, r7
 8016796:	f7e9 ff49 	bl	800062c <__aeabi_dmul>
 801679a:	4b0f      	ldr	r3, [pc, #60]	; (80167d8 <_dtoa_r+0xdc8>)
 801679c:	2200      	movs	r2, #0
 801679e:	f7e9 fd93 	bl	80002c8 <__adddf3>
 80167a2:	9b04      	ldr	r3, [sp, #16]
 80167a4:	3b01      	subs	r3, #1
 80167a6:	4606      	mov	r6, r0
 80167a8:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
 80167ac:	9312      	str	r3, [sp, #72]	; 0x48
 80167ae:	46a9      	mov	r9, r5
 80167b0:	e541      	b.n	8016236 <_dtoa_r+0x826>
 80167b2:	2239      	movs	r2, #57	; 0x39
 80167b4:	46b2      	mov	sl, r6
 80167b6:	703a      	strb	r2, [r7, #0]
 80167b8:	464e      	mov	r6, r9
 80167ba:	1c7d      	adds	r5, r7, #1
 80167bc:	e407      	b.n	8015fce <_dtoa_r+0x5be>
 80167be:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80167c2:	2000      	movs	r0, #0
 80167c4:	4909      	ldr	r1, [pc, #36]	; (80167ec <_dtoa_r+0xddc>)
 80167c6:	f7e9 fd7d 	bl	80002c4 <__aeabi_dsub>
 80167ca:	4632      	mov	r2, r6
 80167cc:	463b      	mov	r3, r7
 80167ce:	f7ea f9bd 	bl	8000b4c <__aeabi_dcmpgt>
 80167d2:	b970      	cbnz	r0, 80167f2 <_dtoa_r+0xde2>
 80167d4:	e6ac      	b.n	8016530 <_dtoa_r+0xb20>
 80167d6:	bf00      	nop
 80167d8:	401c0000 	.word	0x401c0000
 80167dc:	40140000 	.word	0x40140000
 80167e0:	0802d768 	.word	0x0802d768
 80167e4:	0802d830 	.word	0x0802d830
 80167e8:	40240000 	.word	0x40240000
 80167ec:	3fe00000 	.word	0x3fe00000
 80167f0:	4615      	mov	r5, r2
 80167f2:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 80167f6:	2b30      	cmp	r3, #48	; 0x30
 80167f8:	f105 32ff 	add.w	r2, r5, #4294967295
 80167fc:	d0f8      	beq.n	80167f0 <_dtoa_r+0xde0>
 80167fe:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016800:	9304      	str	r3, [sp, #16]
 8016802:	f7ff bad8 	b.w	8015db6 <_dtoa_r+0x3a6>
 8016806:	4643      	mov	r3, r8
 8016808:	f8dd b008 	ldr.w	fp, [sp, #8]
 801680c:	46a0      	mov	r8, r4
 801680e:	461c      	mov	r4, r3
 8016810:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016812:	9304      	str	r3, [sp, #16]
 8016814:	f7ff babd 	b.w	8015d92 <_dtoa_r+0x382>
 8016818:	46b9      	mov	r9, r7
 801681a:	f7ff bb71 	b.w	8015f00 <_dtoa_r+0x4f0>
 801681e:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
 8016822:	d0c6      	beq.n	80167b2 <_dtoa_r+0xda2>
 8016824:	f1ba 0f00 	cmp.w	sl, #0
 8016828:	f77f aebf 	ble.w	80165aa <_dtoa_r+0xb9a>
 801682c:	f105 0c31 	add.w	ip, r5, #49	; 0x31
 8016830:	e6bb      	b.n	80165aa <_dtoa_r+0xb9a>
 8016832:	f47f aeba 	bne.w	80165aa <_dtoa_r+0xb9a>
 8016836:	f01c 0f01 	tst.w	ip, #1
 801683a:	f43f aeb6 	beq.w	80165aa <_dtoa_r+0xb9a>
 801683e:	e6ae      	b.n	801659e <_dtoa_r+0xb8e>
 8016840:	f04f 0800 	mov.w	r8, #0
 8016844:	4646      	mov	r6, r8
 8016846:	e5a9      	b.n	801639c <_dtoa_r+0x98c>
 8016848:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801684a:	2b02      	cmp	r3, #2
 801684c:	dc04      	bgt.n	8016858 <_dtoa_r+0xe48>
 801684e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016850:	e602      	b.n	8016458 <_dtoa_r+0xa48>
 8016852:	f04f 0802 	mov.w	r8, #2
 8016856:	e4cd      	b.n	80161f4 <_dtoa_r+0x7e4>
 8016858:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801685a:	9306      	str	r3, [sp, #24]
 801685c:	e618      	b.n	8016490 <_dtoa_r+0xa80>
 801685e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016860:	2b02      	cmp	r3, #2
 8016862:	dcf9      	bgt.n	8016858 <_dtoa_r+0xe48>
 8016864:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016866:	f7ff bbee 	b.w	8016046 <_dtoa_r+0x636>
 801686a:	2500      	movs	r5, #0
 801686c:	6465      	str	r5, [r4, #68]	; 0x44
 801686e:	4629      	mov	r1, r5
 8016870:	4620      	mov	r0, r4
 8016872:	f000 ff97 	bl	80177a4 <_Balloc>
 8016876:	f04f 33ff 	mov.w	r3, #4294967295
 801687a:	9306      	str	r3, [sp, #24]
 801687c:	930c      	str	r3, [sp, #48]	; 0x30
 801687e:	2301      	movs	r3, #1
 8016880:	9007      	str	r0, [sp, #28]
 8016882:	9521      	str	r5, [sp, #132]	; 0x84
 8016884:	6420      	str	r0, [r4, #64]	; 0x40
 8016886:	9309      	str	r3, [sp, #36]	; 0x24
 8016888:	f7ff b9d2 	b.w	8015c30 <_dtoa_r+0x220>
 801688c:	f43f ab4d 	beq.w	8015f2a <_dtoa_r+0x51a>
 8016890:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
 8016894:	f7ff bb44 	b.w	8015f20 <_dtoa_r+0x510>
 8016898:	2301      	movs	r3, #1
 801689a:	9309      	str	r3, [sp, #36]	; 0x24
 801689c:	e559      	b.n	8016352 <_dtoa_r+0x942>
 801689e:	2501      	movs	r5, #1
 80168a0:	f7ff b990 	b.w	8015bc4 <_dtoa_r+0x1b4>
 80168a4:	f3af 8000 	nop.w

080168a8 <__sflush_r>:
 80168a8:	898b      	ldrh	r3, [r1, #12]
 80168aa:	b29a      	uxth	r2, r3
 80168ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80168b0:	460d      	mov	r5, r1
 80168b2:	0711      	lsls	r1, r2, #28
 80168b4:	4680      	mov	r8, r0
 80168b6:	d43c      	bmi.n	8016932 <__sflush_r+0x8a>
 80168b8:	686a      	ldr	r2, [r5, #4]
 80168ba:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80168be:	2a00      	cmp	r2, #0
 80168c0:	81ab      	strh	r3, [r5, #12]
 80168c2:	dd65      	ble.n	8016990 <__sflush_r+0xe8>
 80168c4:	6aae      	ldr	r6, [r5, #40]	; 0x28
 80168c6:	2e00      	cmp	r6, #0
 80168c8:	d04b      	beq.n	8016962 <__sflush_r+0xba>
 80168ca:	b29b      	uxth	r3, r3
 80168cc:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
 80168d0:	2100      	movs	r1, #0
 80168d2:	b292      	uxth	r2, r2
 80168d4:	f8d8 4000 	ldr.w	r4, [r8]
 80168d8:	f8c8 1000 	str.w	r1, [r8]
 80168dc:	2a00      	cmp	r2, #0
 80168de:	d05b      	beq.n	8016998 <__sflush_r+0xf0>
 80168e0:	6d2a      	ldr	r2, [r5, #80]	; 0x50
 80168e2:	075f      	lsls	r7, r3, #29
 80168e4:	d505      	bpl.n	80168f2 <__sflush_r+0x4a>
 80168e6:	6869      	ldr	r1, [r5, #4]
 80168e8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80168ea:	1a52      	subs	r2, r2, r1
 80168ec:	b10b      	cbz	r3, 80168f2 <__sflush_r+0x4a>
 80168ee:	6beb      	ldr	r3, [r5, #60]	; 0x3c
 80168f0:	1ad2      	subs	r2, r2, r3
 80168f2:	4640      	mov	r0, r8
 80168f4:	69e9      	ldr	r1, [r5, #28]
 80168f6:	2300      	movs	r3, #0
 80168f8:	47b0      	blx	r6
 80168fa:	1c46      	adds	r6, r0, #1
 80168fc:	d056      	beq.n	80169ac <__sflush_r+0x104>
 80168fe:	89ab      	ldrh	r3, [r5, #12]
 8016900:	692a      	ldr	r2, [r5, #16]
 8016902:	602a      	str	r2, [r5, #0]
 8016904:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8016908:	b29b      	uxth	r3, r3
 801690a:	2200      	movs	r2, #0
 801690c:	606a      	str	r2, [r5, #4]
 801690e:	04da      	lsls	r2, r3, #19
 8016910:	81ab      	strh	r3, [r5, #12]
 8016912:	d43b      	bmi.n	801698c <__sflush_r+0xe4>
 8016914:	6b29      	ldr	r1, [r5, #48]	; 0x30
 8016916:	f8c8 4000 	str.w	r4, [r8]
 801691a:	b311      	cbz	r1, 8016962 <__sflush_r+0xba>
 801691c:	f105 0340 	add.w	r3, r5, #64	; 0x40
 8016920:	4299      	cmp	r1, r3
 8016922:	d002      	beq.n	801692a <__sflush_r+0x82>
 8016924:	4640      	mov	r0, r8
 8016926:	f000 f955 	bl	8016bd4 <_free_r>
 801692a:	2000      	movs	r0, #0
 801692c:	6328      	str	r0, [r5, #48]	; 0x30
 801692e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016932:	692e      	ldr	r6, [r5, #16]
 8016934:	b1ae      	cbz	r6, 8016962 <__sflush_r+0xba>
 8016936:	682c      	ldr	r4, [r5, #0]
 8016938:	602e      	str	r6, [r5, #0]
 801693a:	0791      	lsls	r1, r2, #30
 801693c:	bf0c      	ite	eq
 801693e:	696b      	ldreq	r3, [r5, #20]
 8016940:	2300      	movne	r3, #0
 8016942:	1ba4      	subs	r4, r4, r6
 8016944:	60ab      	str	r3, [r5, #8]
 8016946:	e00a      	b.n	801695e <__sflush_r+0xb6>
 8016948:	4632      	mov	r2, r6
 801694a:	4623      	mov	r3, r4
 801694c:	6a6f      	ldr	r7, [r5, #36]	; 0x24
 801694e:	69e9      	ldr	r1, [r5, #28]
 8016950:	4640      	mov	r0, r8
 8016952:	47b8      	blx	r7
 8016954:	2800      	cmp	r0, #0
 8016956:	eba4 0400 	sub.w	r4, r4, r0
 801695a:	4406      	add	r6, r0
 801695c:	dd04      	ble.n	8016968 <__sflush_r+0xc0>
 801695e:	2c00      	cmp	r4, #0
 8016960:	dcf2      	bgt.n	8016948 <__sflush_r+0xa0>
 8016962:	2000      	movs	r0, #0
 8016964:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016968:	89ab      	ldrh	r3, [r5, #12]
 801696a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801696e:	81ab      	strh	r3, [r5, #12]
 8016970:	f04f 30ff 	mov.w	r0, #4294967295
 8016974:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016978:	89ab      	ldrh	r3, [r5, #12]
 801697a:	692a      	ldr	r2, [r5, #16]
 801697c:	6069      	str	r1, [r5, #4]
 801697e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8016982:	b29b      	uxth	r3, r3
 8016984:	81ab      	strh	r3, [r5, #12]
 8016986:	04db      	lsls	r3, r3, #19
 8016988:	602a      	str	r2, [r5, #0]
 801698a:	d5c3      	bpl.n	8016914 <__sflush_r+0x6c>
 801698c:	6528      	str	r0, [r5, #80]	; 0x50
 801698e:	e7c1      	b.n	8016914 <__sflush_r+0x6c>
 8016990:	6bea      	ldr	r2, [r5, #60]	; 0x3c
 8016992:	2a00      	cmp	r2, #0
 8016994:	dc96      	bgt.n	80168c4 <__sflush_r+0x1c>
 8016996:	e7e4      	b.n	8016962 <__sflush_r+0xba>
 8016998:	2301      	movs	r3, #1
 801699a:	4640      	mov	r0, r8
 801699c:	69e9      	ldr	r1, [r5, #28]
 801699e:	47b0      	blx	r6
 80169a0:	1c43      	adds	r3, r0, #1
 80169a2:	4602      	mov	r2, r0
 80169a4:	d019      	beq.n	80169da <__sflush_r+0x132>
 80169a6:	89ab      	ldrh	r3, [r5, #12]
 80169a8:	6aae      	ldr	r6, [r5, #40]	; 0x28
 80169aa:	e79a      	b.n	80168e2 <__sflush_r+0x3a>
 80169ac:	f8d8 1000 	ldr.w	r1, [r8]
 80169b0:	2900      	cmp	r1, #0
 80169b2:	d0e1      	beq.n	8016978 <__sflush_r+0xd0>
 80169b4:	291d      	cmp	r1, #29
 80169b6:	d007      	beq.n	80169c8 <__sflush_r+0x120>
 80169b8:	2916      	cmp	r1, #22
 80169ba:	d005      	beq.n	80169c8 <__sflush_r+0x120>
 80169bc:	89ab      	ldrh	r3, [r5, #12]
 80169be:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80169c2:	81ab      	strh	r3, [r5, #12]
 80169c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80169c8:	89ab      	ldrh	r3, [r5, #12]
 80169ca:	692a      	ldr	r2, [r5, #16]
 80169cc:	602a      	str	r2, [r5, #0]
 80169ce:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80169d2:	2200      	movs	r2, #0
 80169d4:	81ab      	strh	r3, [r5, #12]
 80169d6:	606a      	str	r2, [r5, #4]
 80169d8:	e79c      	b.n	8016914 <__sflush_r+0x6c>
 80169da:	f8d8 3000 	ldr.w	r3, [r8]
 80169de:	2b00      	cmp	r3, #0
 80169e0:	d0e1      	beq.n	80169a6 <__sflush_r+0xfe>
 80169e2:	2b1d      	cmp	r3, #29
 80169e4:	d007      	beq.n	80169f6 <__sflush_r+0x14e>
 80169e6:	2b16      	cmp	r3, #22
 80169e8:	d005      	beq.n	80169f6 <__sflush_r+0x14e>
 80169ea:	89ab      	ldrh	r3, [r5, #12]
 80169ec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80169f0:	81ab      	strh	r3, [r5, #12]
 80169f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80169f6:	f8c8 4000 	str.w	r4, [r8]
 80169fa:	e7b2      	b.n	8016962 <__sflush_r+0xba>

080169fc <_fflush_r>:
 80169fc:	b510      	push	{r4, lr}
 80169fe:	4604      	mov	r4, r0
 8016a00:	b082      	sub	sp, #8
 8016a02:	b108      	cbz	r0, 8016a08 <_fflush_r+0xc>
 8016a04:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8016a06:	b153      	cbz	r3, 8016a1e <_fflush_r+0x22>
 8016a08:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
 8016a0c:	b908      	cbnz	r0, 8016a12 <_fflush_r+0x16>
 8016a0e:	b002      	add	sp, #8
 8016a10:	bd10      	pop	{r4, pc}
 8016a12:	4620      	mov	r0, r4
 8016a14:	b002      	add	sp, #8
 8016a16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016a1a:	f7ff bf45 	b.w	80168a8 <__sflush_r>
 8016a1e:	9101      	str	r1, [sp, #4]
 8016a20:	f000 f880 	bl	8016b24 <__sinit>
 8016a24:	9901      	ldr	r1, [sp, #4]
 8016a26:	e7ef      	b.n	8016a08 <_fflush_r+0xc>

08016a28 <_cleanup_r>:
 8016a28:	4901      	ldr	r1, [pc, #4]	; (8016a30 <_cleanup_r+0x8>)
 8016a2a:	f000 bb37 	b.w	801709c <_fwalk_reent>
 8016a2e:	bf00      	nop
 8016a30:	080184b9 	.word	0x080184b9

08016a34 <__sinit.part.1>:
 8016a34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016a38:	4b35      	ldr	r3, [pc, #212]	; (8016b10 <__sinit.part.1+0xdc>)
 8016a3a:	6845      	ldr	r5, [r0, #4]
 8016a3c:	63c3      	str	r3, [r0, #60]	; 0x3c
 8016a3e:	2400      	movs	r4, #0
 8016a40:	4607      	mov	r7, r0
 8016a42:	f500 723b 	add.w	r2, r0, #748	; 0x2ec
 8016a46:	2304      	movs	r3, #4
 8016a48:	2103      	movs	r1, #3
 8016a4a:	f8c0 12e4 	str.w	r1, [r0, #740]	; 0x2e4
 8016a4e:	f8c0 22e8 	str.w	r2, [r0, #744]	; 0x2e8
 8016a52:	f8c0 42e0 	str.w	r4, [r0, #736]	; 0x2e0
 8016a56:	b083      	sub	sp, #12
 8016a58:	602c      	str	r4, [r5, #0]
 8016a5a:	606c      	str	r4, [r5, #4]
 8016a5c:	60ac      	str	r4, [r5, #8]
 8016a5e:	666c      	str	r4, [r5, #100]	; 0x64
 8016a60:	81ec      	strh	r4, [r5, #14]
 8016a62:	612c      	str	r4, [r5, #16]
 8016a64:	616c      	str	r4, [r5, #20]
 8016a66:	61ac      	str	r4, [r5, #24]
 8016a68:	81ab      	strh	r3, [r5, #12]
 8016a6a:	4621      	mov	r1, r4
 8016a6c:	f105 005c 	add.w	r0, r5, #92	; 0x5c
 8016a70:	2208      	movs	r2, #8
 8016a72:	f7fc f90f 	bl	8012c94 <memset>
 8016a76:	68be      	ldr	r6, [r7, #8]
 8016a78:	f8df b098 	ldr.w	fp, [pc, #152]	; 8016b14 <__sinit.part.1+0xe0>
 8016a7c:	f8df a098 	ldr.w	sl, [pc, #152]	; 8016b18 <__sinit.part.1+0xe4>
 8016a80:	f8df 9098 	ldr.w	r9, [pc, #152]	; 8016b1c <__sinit.part.1+0xe8>
 8016a84:	f8df 8098 	ldr.w	r8, [pc, #152]	; 8016b20 <__sinit.part.1+0xec>
 8016a88:	f8c5 b020 	str.w	fp, [r5, #32]
 8016a8c:	2301      	movs	r3, #1
 8016a8e:	2209      	movs	r2, #9
 8016a90:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
 8016a94:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
 8016a98:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
 8016a9c:	61ed      	str	r5, [r5, #28]
 8016a9e:	4621      	mov	r1, r4
 8016aa0:	81f3      	strh	r3, [r6, #14]
 8016aa2:	81b2      	strh	r2, [r6, #12]
 8016aa4:	f106 005c 	add.w	r0, r6, #92	; 0x5c
 8016aa8:	6034      	str	r4, [r6, #0]
 8016aaa:	6074      	str	r4, [r6, #4]
 8016aac:	60b4      	str	r4, [r6, #8]
 8016aae:	6674      	str	r4, [r6, #100]	; 0x64
 8016ab0:	6134      	str	r4, [r6, #16]
 8016ab2:	6174      	str	r4, [r6, #20]
 8016ab4:	61b4      	str	r4, [r6, #24]
 8016ab6:	2208      	movs	r2, #8
 8016ab8:	9301      	str	r3, [sp, #4]
 8016aba:	f7fc f8eb 	bl	8012c94 <memset>
 8016abe:	68fd      	ldr	r5, [r7, #12]
 8016ac0:	61f6      	str	r6, [r6, #28]
 8016ac2:	2012      	movs	r0, #18
 8016ac4:	2202      	movs	r2, #2
 8016ac6:	f8c6 b020 	str.w	fp, [r6, #32]
 8016aca:	f8c6 a024 	str.w	sl, [r6, #36]	; 0x24
 8016ace:	f8c6 9028 	str.w	r9, [r6, #40]	; 0x28
 8016ad2:	f8c6 802c 	str.w	r8, [r6, #44]	; 0x2c
 8016ad6:	4621      	mov	r1, r4
 8016ad8:	81a8      	strh	r0, [r5, #12]
 8016ada:	81ea      	strh	r2, [r5, #14]
 8016adc:	602c      	str	r4, [r5, #0]
 8016ade:	606c      	str	r4, [r5, #4]
 8016ae0:	60ac      	str	r4, [r5, #8]
 8016ae2:	666c      	str	r4, [r5, #100]	; 0x64
 8016ae4:	612c      	str	r4, [r5, #16]
 8016ae6:	616c      	str	r4, [r5, #20]
 8016ae8:	61ac      	str	r4, [r5, #24]
 8016aea:	f105 005c 	add.w	r0, r5, #92	; 0x5c
 8016aee:	2208      	movs	r2, #8
 8016af0:	f7fc f8d0 	bl	8012c94 <memset>
 8016af4:	9b01      	ldr	r3, [sp, #4]
 8016af6:	61ed      	str	r5, [r5, #28]
 8016af8:	f8c5 b020 	str.w	fp, [r5, #32]
 8016afc:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
 8016b00:	f8c5 9028 	str.w	r9, [r5, #40]	; 0x28
 8016b04:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
 8016b08:	63bb      	str	r3, [r7, #56]	; 0x38
 8016b0a:	b003      	add	sp, #12
 8016b0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016b10:	08016a29 	.word	0x08016a29
 8016b14:	080181f5 	.word	0x080181f5
 8016b18:	08018219 	.word	0x08018219
 8016b1c:	08018251 	.word	0x08018251
 8016b20:	08018271 	.word	0x08018271

08016b24 <__sinit>:
 8016b24:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8016b26:	b103      	cbz	r3, 8016b2a <__sinit+0x6>
 8016b28:	4770      	bx	lr
 8016b2a:	f7ff bf83 	b.w	8016a34 <__sinit.part.1>
 8016b2e:	bf00      	nop

08016b30 <__sfp_lock_acquire>:
 8016b30:	4770      	bx	lr
 8016b32:	bf00      	nop

08016b34 <__sfp_lock_release>:
 8016b34:	4770      	bx	lr
 8016b36:	bf00      	nop

08016b38 <_malloc_trim_r>:
 8016b38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016b3a:	4f23      	ldr	r7, [pc, #140]	; (8016bc8 <_malloc_trim_r+0x90>)
 8016b3c:	460c      	mov	r4, r1
 8016b3e:	4606      	mov	r6, r0
 8016b40:	f000 fe2c 	bl	801779c <__malloc_lock>
 8016b44:	68bb      	ldr	r3, [r7, #8]
 8016b46:	685d      	ldr	r5, [r3, #4]
 8016b48:	f025 0503 	bic.w	r5, r5, #3
 8016b4c:	1b29      	subs	r1, r5, r4
 8016b4e:	f601 71ef 	addw	r1, r1, #4079	; 0xfef
 8016b52:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
 8016b56:	f021 010f 	bic.w	r1, r1, #15
 8016b5a:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
 8016b5e:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
 8016b62:	db07      	blt.n	8016b74 <_malloc_trim_r+0x3c>
 8016b64:	4630      	mov	r0, r6
 8016b66:	2100      	movs	r1, #0
 8016b68:	f001 fb32 	bl	80181d0 <_sbrk_r>
 8016b6c:	68bb      	ldr	r3, [r7, #8]
 8016b6e:	442b      	add	r3, r5
 8016b70:	4298      	cmp	r0, r3
 8016b72:	d004      	beq.n	8016b7e <_malloc_trim_r+0x46>
 8016b74:	4630      	mov	r0, r6
 8016b76:	f000 fe13 	bl	80177a0 <__malloc_unlock>
 8016b7a:	2000      	movs	r0, #0
 8016b7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016b7e:	4630      	mov	r0, r6
 8016b80:	4261      	negs	r1, r4
 8016b82:	f001 fb25 	bl	80181d0 <_sbrk_r>
 8016b86:	3001      	adds	r0, #1
 8016b88:	d00d      	beq.n	8016ba6 <_malloc_trim_r+0x6e>
 8016b8a:	4b10      	ldr	r3, [pc, #64]	; (8016bcc <_malloc_trim_r+0x94>)
 8016b8c:	68ba      	ldr	r2, [r7, #8]
 8016b8e:	6819      	ldr	r1, [r3, #0]
 8016b90:	1b2d      	subs	r5, r5, r4
 8016b92:	f045 0501 	orr.w	r5, r5, #1
 8016b96:	4630      	mov	r0, r6
 8016b98:	1b09      	subs	r1, r1, r4
 8016b9a:	6055      	str	r5, [r2, #4]
 8016b9c:	6019      	str	r1, [r3, #0]
 8016b9e:	f000 fdff 	bl	80177a0 <__malloc_unlock>
 8016ba2:	2001      	movs	r0, #1
 8016ba4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016ba6:	4630      	mov	r0, r6
 8016ba8:	2100      	movs	r1, #0
 8016baa:	f001 fb11 	bl	80181d0 <_sbrk_r>
 8016bae:	68ba      	ldr	r2, [r7, #8]
 8016bb0:	1a83      	subs	r3, r0, r2
 8016bb2:	2b0f      	cmp	r3, #15
 8016bb4:	ddde      	ble.n	8016b74 <_malloc_trim_r+0x3c>
 8016bb6:	4c06      	ldr	r4, [pc, #24]	; (8016bd0 <_malloc_trim_r+0x98>)
 8016bb8:	4904      	ldr	r1, [pc, #16]	; (8016bcc <_malloc_trim_r+0x94>)
 8016bba:	6824      	ldr	r4, [r4, #0]
 8016bbc:	f043 0301 	orr.w	r3, r3, #1
 8016bc0:	1b00      	subs	r0, r0, r4
 8016bc2:	6053      	str	r3, [r2, #4]
 8016bc4:	6008      	str	r0, [r1, #0]
 8016bc6:	e7d5      	b.n	8016b74 <_malloc_trim_r+0x3c>
 8016bc8:	20000768 	.word	0x20000768
 8016bcc:	2000e294 	.word	0x2000e294
 8016bd0:	20000b74 	.word	0x20000b74

08016bd4 <_free_r>:
 8016bd4:	2900      	cmp	r1, #0
 8016bd6:	d04e      	beq.n	8016c76 <_free_r+0xa2>
 8016bd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016bdc:	460c      	mov	r4, r1
 8016bde:	4680      	mov	r8, r0
 8016be0:	f000 fddc 	bl	801779c <__malloc_lock>
 8016be4:	f854 7c04 	ldr.w	r7, [r4, #-4]
 8016be8:	4962      	ldr	r1, [pc, #392]	; (8016d74 <_free_r+0x1a0>)
 8016bea:	f027 0201 	bic.w	r2, r7, #1
 8016bee:	f1a4 0508 	sub.w	r5, r4, #8
 8016bf2:	18ab      	adds	r3, r5, r2
 8016bf4:	688e      	ldr	r6, [r1, #8]
 8016bf6:	6858      	ldr	r0, [r3, #4]
 8016bf8:	429e      	cmp	r6, r3
 8016bfa:	f020 0003 	bic.w	r0, r0, #3
 8016bfe:	d05a      	beq.n	8016cb6 <_free_r+0xe2>
 8016c00:	07fe      	lsls	r6, r7, #31
 8016c02:	6058      	str	r0, [r3, #4]
 8016c04:	d40b      	bmi.n	8016c1e <_free_r+0x4a>
 8016c06:	f854 7c08 	ldr.w	r7, [r4, #-8]
 8016c0a:	1bed      	subs	r5, r5, r7
 8016c0c:	f101 0e08 	add.w	lr, r1, #8
 8016c10:	68ac      	ldr	r4, [r5, #8]
 8016c12:	4574      	cmp	r4, lr
 8016c14:	443a      	add	r2, r7
 8016c16:	d067      	beq.n	8016ce8 <_free_r+0x114>
 8016c18:	68ef      	ldr	r7, [r5, #12]
 8016c1a:	60e7      	str	r7, [r4, #12]
 8016c1c:	60bc      	str	r4, [r7, #8]
 8016c1e:	181c      	adds	r4, r3, r0
 8016c20:	6864      	ldr	r4, [r4, #4]
 8016c22:	07e4      	lsls	r4, r4, #31
 8016c24:	d40c      	bmi.n	8016c40 <_free_r+0x6c>
 8016c26:	4f54      	ldr	r7, [pc, #336]	; (8016d78 <_free_r+0x1a4>)
 8016c28:	689c      	ldr	r4, [r3, #8]
 8016c2a:	42bc      	cmp	r4, r7
 8016c2c:	4402      	add	r2, r0
 8016c2e:	d07c      	beq.n	8016d2a <_free_r+0x156>
 8016c30:	68d8      	ldr	r0, [r3, #12]
 8016c32:	60e0      	str	r0, [r4, #12]
 8016c34:	f042 0301 	orr.w	r3, r2, #1
 8016c38:	6084      	str	r4, [r0, #8]
 8016c3a:	606b      	str	r3, [r5, #4]
 8016c3c:	50aa      	str	r2, [r5, r2]
 8016c3e:	e003      	b.n	8016c48 <_free_r+0x74>
 8016c40:	f042 0301 	orr.w	r3, r2, #1
 8016c44:	606b      	str	r3, [r5, #4]
 8016c46:	50aa      	str	r2, [r5, r2]
 8016c48:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 8016c4c:	d214      	bcs.n	8016c78 <_free_r+0xa4>
 8016c4e:	08d2      	lsrs	r2, r2, #3
 8016c50:	eb01 03c2 	add.w	r3, r1, r2, lsl #3
 8016c54:	6848      	ldr	r0, [r1, #4]
 8016c56:	689f      	ldr	r7, [r3, #8]
 8016c58:	60af      	str	r7, [r5, #8]
 8016c5a:	1092      	asrs	r2, r2, #2
 8016c5c:	2401      	movs	r4, #1
 8016c5e:	fa04 f202 	lsl.w	r2, r4, r2
 8016c62:	4310      	orrs	r0, r2
 8016c64:	60eb      	str	r3, [r5, #12]
 8016c66:	6048      	str	r0, [r1, #4]
 8016c68:	609d      	str	r5, [r3, #8]
 8016c6a:	60fd      	str	r5, [r7, #12]
 8016c6c:	4640      	mov	r0, r8
 8016c6e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8016c72:	f000 bd95 	b.w	80177a0 <__malloc_unlock>
 8016c76:	4770      	bx	lr
 8016c78:	0a53      	lsrs	r3, r2, #9
 8016c7a:	2b04      	cmp	r3, #4
 8016c7c:	d847      	bhi.n	8016d0e <_free_r+0x13a>
 8016c7e:	0993      	lsrs	r3, r2, #6
 8016c80:	f103 0438 	add.w	r4, r3, #56	; 0x38
 8016c84:	0060      	lsls	r0, r4, #1
 8016c86:	eb01 0080 	add.w	r0, r1, r0, lsl #2
 8016c8a:	493a      	ldr	r1, [pc, #232]	; (8016d74 <_free_r+0x1a0>)
 8016c8c:	6883      	ldr	r3, [r0, #8]
 8016c8e:	4283      	cmp	r3, r0
 8016c90:	d043      	beq.n	8016d1a <_free_r+0x146>
 8016c92:	6859      	ldr	r1, [r3, #4]
 8016c94:	f021 0103 	bic.w	r1, r1, #3
 8016c98:	4291      	cmp	r1, r2
 8016c9a:	d902      	bls.n	8016ca2 <_free_r+0xce>
 8016c9c:	689b      	ldr	r3, [r3, #8]
 8016c9e:	4298      	cmp	r0, r3
 8016ca0:	d1f7      	bne.n	8016c92 <_free_r+0xbe>
 8016ca2:	68da      	ldr	r2, [r3, #12]
 8016ca4:	60ea      	str	r2, [r5, #12]
 8016ca6:	60ab      	str	r3, [r5, #8]
 8016ca8:	4640      	mov	r0, r8
 8016caa:	6095      	str	r5, [r2, #8]
 8016cac:	60dd      	str	r5, [r3, #12]
 8016cae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8016cb2:	f000 bd75 	b.w	80177a0 <__malloc_unlock>
 8016cb6:	07ff      	lsls	r7, r7, #31
 8016cb8:	4402      	add	r2, r0
 8016cba:	d407      	bmi.n	8016ccc <_free_r+0xf8>
 8016cbc:	f854 3c08 	ldr.w	r3, [r4, #-8]
 8016cc0:	1aed      	subs	r5, r5, r3
 8016cc2:	441a      	add	r2, r3
 8016cc4:	68a8      	ldr	r0, [r5, #8]
 8016cc6:	68eb      	ldr	r3, [r5, #12]
 8016cc8:	60c3      	str	r3, [r0, #12]
 8016cca:	6098      	str	r0, [r3, #8]
 8016ccc:	4b2b      	ldr	r3, [pc, #172]	; (8016d7c <_free_r+0x1a8>)
 8016cce:	681b      	ldr	r3, [r3, #0]
 8016cd0:	f042 0001 	orr.w	r0, r2, #1
 8016cd4:	429a      	cmp	r2, r3
 8016cd6:	6068      	str	r0, [r5, #4]
 8016cd8:	608d      	str	r5, [r1, #8]
 8016cda:	d3c7      	bcc.n	8016c6c <_free_r+0x98>
 8016cdc:	4b28      	ldr	r3, [pc, #160]	; (8016d80 <_free_r+0x1ac>)
 8016cde:	4640      	mov	r0, r8
 8016ce0:	6819      	ldr	r1, [r3, #0]
 8016ce2:	f7ff ff29 	bl	8016b38 <_malloc_trim_r>
 8016ce6:	e7c1      	b.n	8016c6c <_free_r+0x98>
 8016ce8:	1819      	adds	r1, r3, r0
 8016cea:	6849      	ldr	r1, [r1, #4]
 8016cec:	07c9      	lsls	r1, r1, #31
 8016cee:	d409      	bmi.n	8016d04 <_free_r+0x130>
 8016cf0:	68d9      	ldr	r1, [r3, #12]
 8016cf2:	689b      	ldr	r3, [r3, #8]
 8016cf4:	4402      	add	r2, r0
 8016cf6:	f042 0001 	orr.w	r0, r2, #1
 8016cfa:	60d9      	str	r1, [r3, #12]
 8016cfc:	608b      	str	r3, [r1, #8]
 8016cfe:	6068      	str	r0, [r5, #4]
 8016d00:	50aa      	str	r2, [r5, r2]
 8016d02:	e7b3      	b.n	8016c6c <_free_r+0x98>
 8016d04:	f042 0301 	orr.w	r3, r2, #1
 8016d08:	606b      	str	r3, [r5, #4]
 8016d0a:	50aa      	str	r2, [r5, r2]
 8016d0c:	e7ae      	b.n	8016c6c <_free_r+0x98>
 8016d0e:	2b14      	cmp	r3, #20
 8016d10:	d814      	bhi.n	8016d3c <_free_r+0x168>
 8016d12:	f103 045b 	add.w	r4, r3, #91	; 0x5b
 8016d16:	0060      	lsls	r0, r4, #1
 8016d18:	e7b5      	b.n	8016c86 <_free_r+0xb2>
 8016d1a:	684a      	ldr	r2, [r1, #4]
 8016d1c:	10a4      	asrs	r4, r4, #2
 8016d1e:	2001      	movs	r0, #1
 8016d20:	40a0      	lsls	r0, r4
 8016d22:	4302      	orrs	r2, r0
 8016d24:	604a      	str	r2, [r1, #4]
 8016d26:	461a      	mov	r2, r3
 8016d28:	e7bc      	b.n	8016ca4 <_free_r+0xd0>
 8016d2a:	f042 0301 	orr.w	r3, r2, #1
 8016d2e:	614d      	str	r5, [r1, #20]
 8016d30:	610d      	str	r5, [r1, #16]
 8016d32:	60ec      	str	r4, [r5, #12]
 8016d34:	60ac      	str	r4, [r5, #8]
 8016d36:	606b      	str	r3, [r5, #4]
 8016d38:	50aa      	str	r2, [r5, r2]
 8016d3a:	e797      	b.n	8016c6c <_free_r+0x98>
 8016d3c:	2b54      	cmp	r3, #84	; 0x54
 8016d3e:	d804      	bhi.n	8016d4a <_free_r+0x176>
 8016d40:	0b13      	lsrs	r3, r2, #12
 8016d42:	f103 046e 	add.w	r4, r3, #110	; 0x6e
 8016d46:	0060      	lsls	r0, r4, #1
 8016d48:	e79d      	b.n	8016c86 <_free_r+0xb2>
 8016d4a:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
 8016d4e:	d804      	bhi.n	8016d5a <_free_r+0x186>
 8016d50:	0bd3      	lsrs	r3, r2, #15
 8016d52:	f103 0477 	add.w	r4, r3, #119	; 0x77
 8016d56:	0060      	lsls	r0, r4, #1
 8016d58:	e795      	b.n	8016c86 <_free_r+0xb2>
 8016d5a:	f240 5054 	movw	r0, #1364	; 0x554
 8016d5e:	4283      	cmp	r3, r0
 8016d60:	d804      	bhi.n	8016d6c <_free_r+0x198>
 8016d62:	0c93      	lsrs	r3, r2, #18
 8016d64:	f103 047c 	add.w	r4, r3, #124	; 0x7c
 8016d68:	0060      	lsls	r0, r4, #1
 8016d6a:	e78c      	b.n	8016c86 <_free_r+0xb2>
 8016d6c:	20fc      	movs	r0, #252	; 0xfc
 8016d6e:	247e      	movs	r4, #126	; 0x7e
 8016d70:	e789      	b.n	8016c86 <_free_r+0xb2>
 8016d72:	bf00      	nop
 8016d74:	20000768 	.word	0x20000768
 8016d78:	20000770 	.word	0x20000770
 8016d7c:	20000b70 	.word	0x20000b70
 8016d80:	2000e290 	.word	0x2000e290

08016d84 <__sfvwrite_r>:
 8016d84:	6893      	ldr	r3, [r2, #8]
 8016d86:	2b00      	cmp	r3, #0
 8016d88:	d07a      	beq.n	8016e80 <__sfvwrite_r+0xfc>
 8016d8a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016d8e:	f8b1 e00c 	ldrh.w	lr, [r1, #12]
 8016d92:	f01e 0f08 	tst.w	lr, #8
 8016d96:	b083      	sub	sp, #12
 8016d98:	460c      	mov	r4, r1
 8016d9a:	4681      	mov	r9, r0
 8016d9c:	4616      	mov	r6, r2
 8016d9e:	d026      	beq.n	8016dee <__sfvwrite_r+0x6a>
 8016da0:	690b      	ldr	r3, [r1, #16]
 8016da2:	b323      	cbz	r3, 8016dee <__sfvwrite_r+0x6a>
 8016da4:	f00e 0802 	and.w	r8, lr, #2
 8016da8:	fa1f f088 	uxth.w	r0, r8
 8016dac:	6835      	ldr	r5, [r6, #0]
 8016dae:	b370      	cbz	r0, 8016e0e <__sfvwrite_r+0x8a>
 8016db0:	f04f 0a00 	mov.w	sl, #0
 8016db4:	f8df b2e0 	ldr.w	fp, [pc, #736]	; 8017098 <__sfvwrite_r+0x314>
 8016db8:	46d0      	mov	r8, sl
 8016dba:	45d8      	cmp	r8, fp
 8016dbc:	4643      	mov	r3, r8
 8016dbe:	4652      	mov	r2, sl
 8016dc0:	bf28      	it	cs
 8016dc2:	465b      	movcs	r3, fp
 8016dc4:	4648      	mov	r0, r9
 8016dc6:	f1b8 0f00 	cmp.w	r8, #0
 8016dca:	d053      	beq.n	8016e74 <__sfvwrite_r+0xf0>
 8016dcc:	69e1      	ldr	r1, [r4, #28]
 8016dce:	6a67      	ldr	r7, [r4, #36]	; 0x24
 8016dd0:	47b8      	blx	r7
 8016dd2:	2800      	cmp	r0, #0
 8016dd4:	dd73      	ble.n	8016ebe <__sfvwrite_r+0x13a>
 8016dd6:	68b3      	ldr	r3, [r6, #8]
 8016dd8:	1a1b      	subs	r3, r3, r0
 8016dda:	4482      	add	sl, r0
 8016ddc:	ebc0 0808 	rsb	r8, r0, r8
 8016de0:	60b3      	str	r3, [r6, #8]
 8016de2:	2b00      	cmp	r3, #0
 8016de4:	d1e9      	bne.n	8016dba <__sfvwrite_r+0x36>
 8016de6:	2000      	movs	r0, #0
 8016de8:	b003      	add	sp, #12
 8016dea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016dee:	4648      	mov	r0, r9
 8016df0:	4621      	mov	r1, r4
 8016df2:	f7fe fd13 	bl	801581c <__swsetup_r>
 8016df6:	2800      	cmp	r0, #0
 8016df8:	f040 8145 	bne.w	8017086 <__sfvwrite_r+0x302>
 8016dfc:	f8b4 e00c 	ldrh.w	lr, [r4, #12]
 8016e00:	6835      	ldr	r5, [r6, #0]
 8016e02:	f00e 0802 	and.w	r8, lr, #2
 8016e06:	fa1f f088 	uxth.w	r0, r8
 8016e0a:	2800      	cmp	r0, #0
 8016e0c:	d1d0      	bne.n	8016db0 <__sfvwrite_r+0x2c>
 8016e0e:	f01e 0b01 	ands.w	fp, lr, #1
 8016e12:	d15d      	bne.n	8016ed0 <__sfvwrite_r+0x14c>
 8016e14:	46d8      	mov	r8, fp
 8016e16:	f1b8 0f00 	cmp.w	r8, #0
 8016e1a:	d025      	beq.n	8016e68 <__sfvwrite_r+0xe4>
 8016e1c:	f41e 7f00 	tst.w	lr, #512	; 0x200
 8016e20:	68a7      	ldr	r7, [r4, #8]
 8016e22:	d02f      	beq.n	8016e84 <__sfvwrite_r+0x100>
 8016e24:	45b8      	cmp	r8, r7
 8016e26:	46ba      	mov	sl, r7
 8016e28:	f0c0 80a9 	bcc.w	8016f7e <__sfvwrite_r+0x1fa>
 8016e2c:	f41e 6f90 	tst.w	lr, #1152	; 0x480
 8016e30:	f040 80b6 	bne.w	8016fa0 <__sfvwrite_r+0x21c>
 8016e34:	6820      	ldr	r0, [r4, #0]
 8016e36:	4652      	mov	r2, sl
 8016e38:	4659      	mov	r1, fp
 8016e3a:	f7fb fec7 	bl	8012bcc <memmove>
 8016e3e:	68a0      	ldr	r0, [r4, #8]
 8016e40:	6822      	ldr	r2, [r4, #0]
 8016e42:	1bc0      	subs	r0, r0, r7
 8016e44:	eb02 030a 	add.w	r3, r2, sl
 8016e48:	60a0      	str	r0, [r4, #8]
 8016e4a:	6023      	str	r3, [r4, #0]
 8016e4c:	4640      	mov	r0, r8
 8016e4e:	68b3      	ldr	r3, [r6, #8]
 8016e50:	1a1b      	subs	r3, r3, r0
 8016e52:	4483      	add	fp, r0
 8016e54:	ebc0 0808 	rsb	r8, r0, r8
 8016e58:	60b3      	str	r3, [r6, #8]
 8016e5a:	2b00      	cmp	r3, #0
 8016e5c:	d0c3      	beq.n	8016de6 <__sfvwrite_r+0x62>
 8016e5e:	f8b4 e00c 	ldrh.w	lr, [r4, #12]
 8016e62:	f1b8 0f00 	cmp.w	r8, #0
 8016e66:	d1d9      	bne.n	8016e1c <__sfvwrite_r+0x98>
 8016e68:	f8d5 b000 	ldr.w	fp, [r5]
 8016e6c:	f8d5 8004 	ldr.w	r8, [r5, #4]
 8016e70:	3508      	adds	r5, #8
 8016e72:	e7d0      	b.n	8016e16 <__sfvwrite_r+0x92>
 8016e74:	f8d5 a000 	ldr.w	sl, [r5]
 8016e78:	f8d5 8004 	ldr.w	r8, [r5, #4]
 8016e7c:	3508      	adds	r5, #8
 8016e7e:	e79c      	b.n	8016dba <__sfvwrite_r+0x36>
 8016e80:	2000      	movs	r0, #0
 8016e82:	4770      	bx	lr
 8016e84:	6820      	ldr	r0, [r4, #0]
 8016e86:	6923      	ldr	r3, [r4, #16]
 8016e88:	4298      	cmp	r0, r3
 8016e8a:	d803      	bhi.n	8016e94 <__sfvwrite_r+0x110>
 8016e8c:	6962      	ldr	r2, [r4, #20]
 8016e8e:	4590      	cmp	r8, r2
 8016e90:	f080 80b9 	bcs.w	8017006 <__sfvwrite_r+0x282>
 8016e94:	4547      	cmp	r7, r8
 8016e96:	bf28      	it	cs
 8016e98:	4647      	movcs	r7, r8
 8016e9a:	463a      	mov	r2, r7
 8016e9c:	4659      	mov	r1, fp
 8016e9e:	f7fb fe95 	bl	8012bcc <memmove>
 8016ea2:	68a3      	ldr	r3, [r4, #8]
 8016ea4:	6822      	ldr	r2, [r4, #0]
 8016ea6:	1bdb      	subs	r3, r3, r7
 8016ea8:	443a      	add	r2, r7
 8016eaa:	60a3      	str	r3, [r4, #8]
 8016eac:	6022      	str	r2, [r4, #0]
 8016eae:	2b00      	cmp	r3, #0
 8016eb0:	d14a      	bne.n	8016f48 <__sfvwrite_r+0x1c4>
 8016eb2:	4648      	mov	r0, r9
 8016eb4:	4621      	mov	r1, r4
 8016eb6:	f7ff fda1 	bl	80169fc <_fflush_r>
 8016eba:	2800      	cmp	r0, #0
 8016ebc:	d044      	beq.n	8016f48 <__sfvwrite_r+0x1c4>
 8016ebe:	89a3      	ldrh	r3, [r4, #12]
 8016ec0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8016ec4:	f04f 30ff 	mov.w	r0, #4294967295
 8016ec8:	81a3      	strh	r3, [r4, #12]
 8016eca:	b003      	add	sp, #12
 8016ecc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016ed0:	4680      	mov	r8, r0
 8016ed2:	9000      	str	r0, [sp, #0]
 8016ed4:	4683      	mov	fp, r0
 8016ed6:	4682      	mov	sl, r0
 8016ed8:	f1ba 0f00 	cmp.w	sl, #0
 8016edc:	d02c      	beq.n	8016f38 <__sfvwrite_r+0x1b4>
 8016ede:	9b00      	ldr	r3, [sp, #0]
 8016ee0:	2b00      	cmp	r3, #0
 8016ee2:	d050      	beq.n	8016f86 <__sfvwrite_r+0x202>
 8016ee4:	6820      	ldr	r0, [r4, #0]
 8016ee6:	6921      	ldr	r1, [r4, #16]
 8016ee8:	f8d4 e008 	ldr.w	lr, [r4, #8]
 8016eec:	6962      	ldr	r2, [r4, #20]
 8016eee:	45d0      	cmp	r8, sl
 8016ef0:	4643      	mov	r3, r8
 8016ef2:	bf28      	it	cs
 8016ef4:	4653      	movcs	r3, sl
 8016ef6:	4288      	cmp	r0, r1
 8016ef8:	461f      	mov	r7, r3
 8016efa:	d904      	bls.n	8016f06 <__sfvwrite_r+0x182>
 8016efc:	eb0e 0c02 	add.w	ip, lr, r2
 8016f00:	4563      	cmp	r3, ip
 8016f02:	f300 8092 	bgt.w	801702a <__sfvwrite_r+0x2a6>
 8016f06:	4293      	cmp	r3, r2
 8016f08:	db20      	blt.n	8016f4c <__sfvwrite_r+0x1c8>
 8016f0a:	4613      	mov	r3, r2
 8016f0c:	6a67      	ldr	r7, [r4, #36]	; 0x24
 8016f0e:	69e1      	ldr	r1, [r4, #28]
 8016f10:	4648      	mov	r0, r9
 8016f12:	465a      	mov	r2, fp
 8016f14:	47b8      	blx	r7
 8016f16:	1e07      	subs	r7, r0, #0
 8016f18:	ddd1      	ble.n	8016ebe <__sfvwrite_r+0x13a>
 8016f1a:	ebb8 0807 	subs.w	r8, r8, r7
 8016f1e:	d025      	beq.n	8016f6c <__sfvwrite_r+0x1e8>
 8016f20:	68b3      	ldr	r3, [r6, #8]
 8016f22:	1bdb      	subs	r3, r3, r7
 8016f24:	44bb      	add	fp, r7
 8016f26:	ebc7 0a0a 	rsb	sl, r7, sl
 8016f2a:	60b3      	str	r3, [r6, #8]
 8016f2c:	2b00      	cmp	r3, #0
 8016f2e:	f43f af5a 	beq.w	8016de6 <__sfvwrite_r+0x62>
 8016f32:	f1ba 0f00 	cmp.w	sl, #0
 8016f36:	d1d2      	bne.n	8016ede <__sfvwrite_r+0x15a>
 8016f38:	2300      	movs	r3, #0
 8016f3a:	f8d5 b000 	ldr.w	fp, [r5]
 8016f3e:	f8d5 a004 	ldr.w	sl, [r5, #4]
 8016f42:	9300      	str	r3, [sp, #0]
 8016f44:	3508      	adds	r5, #8
 8016f46:	e7c7      	b.n	8016ed8 <__sfvwrite_r+0x154>
 8016f48:	4638      	mov	r0, r7
 8016f4a:	e780      	b.n	8016e4e <__sfvwrite_r+0xca>
 8016f4c:	461a      	mov	r2, r3
 8016f4e:	4659      	mov	r1, fp
 8016f50:	9301      	str	r3, [sp, #4]
 8016f52:	f7fb fe3b 	bl	8012bcc <memmove>
 8016f56:	68a2      	ldr	r2, [r4, #8]
 8016f58:	6821      	ldr	r1, [r4, #0]
 8016f5a:	9b01      	ldr	r3, [sp, #4]
 8016f5c:	ebb8 0807 	subs.w	r8, r8, r7
 8016f60:	eba2 0203 	sub.w	r2, r2, r3
 8016f64:	440b      	add	r3, r1
 8016f66:	60a2      	str	r2, [r4, #8]
 8016f68:	6023      	str	r3, [r4, #0]
 8016f6a:	d1d9      	bne.n	8016f20 <__sfvwrite_r+0x19c>
 8016f6c:	4648      	mov	r0, r9
 8016f6e:	4621      	mov	r1, r4
 8016f70:	f7ff fd44 	bl	80169fc <_fflush_r>
 8016f74:	2800      	cmp	r0, #0
 8016f76:	d1a2      	bne.n	8016ebe <__sfvwrite_r+0x13a>
 8016f78:	f8cd 8000 	str.w	r8, [sp]
 8016f7c:	e7d0      	b.n	8016f20 <__sfvwrite_r+0x19c>
 8016f7e:	6820      	ldr	r0, [r4, #0]
 8016f80:	4647      	mov	r7, r8
 8016f82:	46c2      	mov	sl, r8
 8016f84:	e757      	b.n	8016e36 <__sfvwrite_r+0xb2>
 8016f86:	4658      	mov	r0, fp
 8016f88:	210a      	movs	r1, #10
 8016f8a:	4652      	mov	r2, sl
 8016f8c:	f000 fbbc 	bl	8017708 <memchr>
 8016f90:	2800      	cmp	r0, #0
 8016f92:	d073      	beq.n	801707c <__sfvwrite_r+0x2f8>
 8016f94:	3001      	adds	r0, #1
 8016f96:	2301      	movs	r3, #1
 8016f98:	ebcb 0800 	rsb	r8, fp, r0
 8016f9c:	9300      	str	r3, [sp, #0]
 8016f9e:	e7a1      	b.n	8016ee4 <__sfvwrite_r+0x160>
 8016fa0:	6967      	ldr	r7, [r4, #20]
 8016fa2:	6921      	ldr	r1, [r4, #16]
 8016fa4:	6823      	ldr	r3, [r4, #0]
 8016fa6:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8016faa:	1a5b      	subs	r3, r3, r1
 8016fac:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
 8016fb0:	1c58      	adds	r0, r3, #1
 8016fb2:	107f      	asrs	r7, r7, #1
 8016fb4:	4440      	add	r0, r8
 8016fb6:	4287      	cmp	r7, r0
 8016fb8:	463a      	mov	r2, r7
 8016fba:	bf3c      	itt	cc
 8016fbc:	4607      	movcc	r7, r0
 8016fbe:	463a      	movcc	r2, r7
 8016fc0:	f41e 6f80 	tst.w	lr, #1024	; 0x400
 8016fc4:	9300      	str	r3, [sp, #0]
 8016fc6:	d046      	beq.n	8017056 <__sfvwrite_r+0x2d2>
 8016fc8:	4611      	mov	r1, r2
 8016fca:	4648      	mov	r0, r9
 8016fcc:	f000 f90e 	bl	80171ec <_malloc_r>
 8016fd0:	9b00      	ldr	r3, [sp, #0]
 8016fd2:	4682      	mov	sl, r0
 8016fd4:	2800      	cmp	r0, #0
 8016fd6:	d059      	beq.n	801708c <__sfvwrite_r+0x308>
 8016fd8:	461a      	mov	r2, r3
 8016fda:	6921      	ldr	r1, [r4, #16]
 8016fdc:	9300      	str	r3, [sp, #0]
 8016fde:	f7e9 f8d3 	bl	8000188 <memcpy>
 8016fe2:	89a2      	ldrh	r2, [r4, #12]
 8016fe4:	9b00      	ldr	r3, [sp, #0]
 8016fe6:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 8016fea:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8016fee:	81a2      	strh	r2, [r4, #12]
 8016ff0:	eb0a 0003 	add.w	r0, sl, r3
 8016ff4:	1afb      	subs	r3, r7, r3
 8016ff6:	f8c4 a010 	str.w	sl, [r4, #16]
 8016ffa:	6167      	str	r7, [r4, #20]
 8016ffc:	6020      	str	r0, [r4, #0]
 8016ffe:	60a3      	str	r3, [r4, #8]
 8017000:	4647      	mov	r7, r8
 8017002:	46c2      	mov	sl, r8
 8017004:	e717      	b.n	8016e36 <__sfvwrite_r+0xb2>
 8017006:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 801700a:	4543      	cmp	r3, r8
 801700c:	bf28      	it	cs
 801700e:	4643      	movcs	r3, r8
 8017010:	6a67      	ldr	r7, [r4, #36]	; 0x24
 8017012:	fb93 f3f2 	sdiv	r3, r3, r2
 8017016:	4648      	mov	r0, r9
 8017018:	fb03 f302 	mul.w	r3, r3, r2
 801701c:	69e1      	ldr	r1, [r4, #28]
 801701e:	465a      	mov	r2, fp
 8017020:	47b8      	blx	r7
 8017022:	2800      	cmp	r0, #0
 8017024:	f73f af13 	bgt.w	8016e4e <__sfvwrite_r+0xca>
 8017028:	e749      	b.n	8016ebe <__sfvwrite_r+0x13a>
 801702a:	4662      	mov	r2, ip
 801702c:	4659      	mov	r1, fp
 801702e:	f8cd c004 	str.w	ip, [sp, #4]
 8017032:	f7fb fdcb 	bl	8012bcc <memmove>
 8017036:	6823      	ldr	r3, [r4, #0]
 8017038:	f8dd c004 	ldr.w	ip, [sp, #4]
 801703c:	4463      	add	r3, ip
 801703e:	6023      	str	r3, [r4, #0]
 8017040:	4648      	mov	r0, r9
 8017042:	4621      	mov	r1, r4
 8017044:	f7ff fcda 	bl	80169fc <_fflush_r>
 8017048:	f8dd c004 	ldr.w	ip, [sp, #4]
 801704c:	2800      	cmp	r0, #0
 801704e:	f47f af36 	bne.w	8016ebe <__sfvwrite_r+0x13a>
 8017052:	4667      	mov	r7, ip
 8017054:	e761      	b.n	8016f1a <__sfvwrite_r+0x196>
 8017056:	4648      	mov	r0, r9
 8017058:	f000 fe98 	bl	8017d8c <_realloc_r>
 801705c:	9b00      	ldr	r3, [sp, #0]
 801705e:	4682      	mov	sl, r0
 8017060:	2800      	cmp	r0, #0
 8017062:	d1c5      	bne.n	8016ff0 <__sfvwrite_r+0x26c>
 8017064:	4648      	mov	r0, r9
 8017066:	6921      	ldr	r1, [r4, #16]
 8017068:	f7ff fdb4 	bl	8016bd4 <_free_r>
 801706c:	89a3      	ldrh	r3, [r4, #12]
 801706e:	220c      	movs	r2, #12
 8017070:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8017074:	b29b      	uxth	r3, r3
 8017076:	f8c9 2000 	str.w	r2, [r9]
 801707a:	e721      	b.n	8016ec0 <__sfvwrite_r+0x13c>
 801707c:	2301      	movs	r3, #1
 801707e:	f10a 0801 	add.w	r8, sl, #1
 8017082:	9300      	str	r3, [sp, #0]
 8017084:	e72e      	b.n	8016ee4 <__sfvwrite_r+0x160>
 8017086:	f04f 30ff 	mov.w	r0, #4294967295
 801708a:	e6ad      	b.n	8016de8 <__sfvwrite_r+0x64>
 801708c:	230c      	movs	r3, #12
 801708e:	f8c9 3000 	str.w	r3, [r9]
 8017092:	89a3      	ldrh	r3, [r4, #12]
 8017094:	e714      	b.n	8016ec0 <__sfvwrite_r+0x13c>
 8017096:	bf00      	nop
 8017098:	7ffffc00 	.word	0x7ffffc00

0801709c <_fwalk_reent>:
 801709c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80170a0:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
 80170a4:	d01f      	beq.n	80170e6 <_fwalk_reent+0x4a>
 80170a6:	4688      	mov	r8, r1
 80170a8:	4606      	mov	r6, r0
 80170aa:	f04f 0900 	mov.w	r9, #0
 80170ae:	687d      	ldr	r5, [r7, #4]
 80170b0:	68bc      	ldr	r4, [r7, #8]
 80170b2:	3d01      	subs	r5, #1
 80170b4:	d411      	bmi.n	80170da <_fwalk_reent+0x3e>
 80170b6:	89a3      	ldrh	r3, [r4, #12]
 80170b8:	2b01      	cmp	r3, #1
 80170ba:	f105 35ff 	add.w	r5, r5, #4294967295
 80170be:	d908      	bls.n	80170d2 <_fwalk_reent+0x36>
 80170c0:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80170c4:	3301      	adds	r3, #1
 80170c6:	4621      	mov	r1, r4
 80170c8:	4630      	mov	r0, r6
 80170ca:	d002      	beq.n	80170d2 <_fwalk_reent+0x36>
 80170cc:	47c0      	blx	r8
 80170ce:	ea49 0900 	orr.w	r9, r9, r0
 80170d2:	1c6b      	adds	r3, r5, #1
 80170d4:	f104 0468 	add.w	r4, r4, #104	; 0x68
 80170d8:	d1ed      	bne.n	80170b6 <_fwalk_reent+0x1a>
 80170da:	683f      	ldr	r7, [r7, #0]
 80170dc:	2f00      	cmp	r7, #0
 80170de:	d1e6      	bne.n	80170ae <_fwalk_reent+0x12>
 80170e0:	4648      	mov	r0, r9
 80170e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80170e6:	46b9      	mov	r9, r7
 80170e8:	4648      	mov	r0, r9
 80170ea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80170ee:	bf00      	nop

080170f0 <__locale_charset>:
 80170f0:	4800      	ldr	r0, [pc, #0]	; (80170f4 <__locale_charset+0x4>)
 80170f2:	4770      	bx	lr
 80170f4:	20000744 	.word	0x20000744

080170f8 <__locale_mb_cur_max>:
 80170f8:	4b01      	ldr	r3, [pc, #4]	; (8017100 <__locale_mb_cur_max+0x8>)
 80170fa:	6818      	ldr	r0, [r3, #0]
 80170fc:	4770      	bx	lr
 80170fe:	bf00      	nop
 8017100:	20000764 	.word	0x20000764

08017104 <_localeconv_r>:
 8017104:	4800      	ldr	r0, [pc, #0]	; (8017108 <_localeconv_r+0x4>)
 8017106:	4770      	bx	lr
 8017108:	2000070c 	.word	0x2000070c

0801710c <__smakebuf_r>:
 801710c:	898b      	ldrh	r3, [r1, #12]
 801710e:	b29a      	uxth	r2, r3
 8017110:	f012 0f02 	tst.w	r2, #2
 8017114:	d13c      	bne.n	8017190 <__smakebuf_r+0x84>
 8017116:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017118:	460c      	mov	r4, r1
 801711a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801711e:	2900      	cmp	r1, #0
 8017120:	b091      	sub	sp, #68	; 0x44
 8017122:	4605      	mov	r5, r0
 8017124:	db19      	blt.n	801715a <__smakebuf_r+0x4e>
 8017126:	aa01      	add	r2, sp, #4
 8017128:	f001 fa6a 	bl	8018600 <_fstat_r>
 801712c:	2800      	cmp	r0, #0
 801712e:	db12      	blt.n	8017156 <__smakebuf_r+0x4a>
 8017130:	9b02      	ldr	r3, [sp, #8]
 8017132:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 8017136:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 801713a:	f5a3 5700 	sub.w	r7, r3, #8192	; 0x2000
 801713e:	fab7 f787 	clz	r7, r7
 8017142:	ea4f 1757 	mov.w	r7, r7, lsr #5
 8017146:	d02a      	beq.n	801719e <__smakebuf_r+0x92>
 8017148:	89a3      	ldrh	r3, [r4, #12]
 801714a:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 801714e:	81a3      	strh	r3, [r4, #12]
 8017150:	f44f 6680 	mov.w	r6, #1024	; 0x400
 8017154:	e00b      	b.n	801716e <__smakebuf_r+0x62>
 8017156:	89a3      	ldrh	r3, [r4, #12]
 8017158:	b29a      	uxth	r2, r3
 801715a:	f012 0f80 	tst.w	r2, #128	; 0x80
 801715e:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8017162:	81a3      	strh	r3, [r4, #12]
 8017164:	bf0c      	ite	eq
 8017166:	f44f 6680 	moveq.w	r6, #1024	; 0x400
 801716a:	2640      	movne	r6, #64	; 0x40
 801716c:	2700      	movs	r7, #0
 801716e:	4628      	mov	r0, r5
 8017170:	4631      	mov	r1, r6
 8017172:	f000 f83b 	bl	80171ec <_malloc_r>
 8017176:	89a3      	ldrh	r3, [r4, #12]
 8017178:	b340      	cbz	r0, 80171cc <__smakebuf_r+0xc0>
 801717a:	4a1a      	ldr	r2, [pc, #104]	; (80171e4 <__smakebuf_r+0xd8>)
 801717c:	63ea      	str	r2, [r5, #60]	; 0x3c
 801717e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8017182:	81a3      	strh	r3, [r4, #12]
 8017184:	6020      	str	r0, [r4, #0]
 8017186:	6120      	str	r0, [r4, #16]
 8017188:	6166      	str	r6, [r4, #20]
 801718a:	b99f      	cbnz	r7, 80171b4 <__smakebuf_r+0xa8>
 801718c:	b011      	add	sp, #68	; 0x44
 801718e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017190:	f101 0343 	add.w	r3, r1, #67	; 0x43
 8017194:	2201      	movs	r2, #1
 8017196:	600b      	str	r3, [r1, #0]
 8017198:	610b      	str	r3, [r1, #16]
 801719a:	614a      	str	r2, [r1, #20]
 801719c:	4770      	bx	lr
 801719e:	4b12      	ldr	r3, [pc, #72]	; (80171e8 <__smakebuf_r+0xdc>)
 80171a0:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80171a2:	429a      	cmp	r2, r3
 80171a4:	d1d0      	bne.n	8017148 <__smakebuf_r+0x3c>
 80171a6:	89a3      	ldrh	r3, [r4, #12]
 80171a8:	f44f 6680 	mov.w	r6, #1024	; 0x400
 80171ac:	4333      	orrs	r3, r6
 80171ae:	81a3      	strh	r3, [r4, #12]
 80171b0:	64e6      	str	r6, [r4, #76]	; 0x4c
 80171b2:	e7dc      	b.n	801716e <__smakebuf_r+0x62>
 80171b4:	4628      	mov	r0, r5
 80171b6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80171ba:	f001 fa35 	bl	8018628 <_isatty_r>
 80171be:	2800      	cmp	r0, #0
 80171c0:	d0e4      	beq.n	801718c <__smakebuf_r+0x80>
 80171c2:	89a3      	ldrh	r3, [r4, #12]
 80171c4:	f043 0301 	orr.w	r3, r3, #1
 80171c8:	81a3      	strh	r3, [r4, #12]
 80171ca:	e7df      	b.n	801718c <__smakebuf_r+0x80>
 80171cc:	059a      	lsls	r2, r3, #22
 80171ce:	d4dd      	bmi.n	801718c <__smakebuf_r+0x80>
 80171d0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80171d4:	f043 0302 	orr.w	r3, r3, #2
 80171d8:	2101      	movs	r1, #1
 80171da:	81a3      	strh	r3, [r4, #12]
 80171dc:	6022      	str	r2, [r4, #0]
 80171de:	6122      	str	r2, [r4, #16]
 80171e0:	6161      	str	r1, [r4, #20]
 80171e2:	e7d3      	b.n	801718c <__smakebuf_r+0x80>
 80171e4:	08016a29 	.word	0x08016a29
 80171e8:	08018251 	.word	0x08018251

080171ec <_malloc_r>:
 80171ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80171f0:	f101 050b 	add.w	r5, r1, #11
 80171f4:	2d16      	cmp	r5, #22
 80171f6:	b083      	sub	sp, #12
 80171f8:	4606      	mov	r6, r0
 80171fa:	d927      	bls.n	801724c <_malloc_r+0x60>
 80171fc:	f035 0507 	bics.w	r5, r5, #7
 8017200:	f100 80b6 	bmi.w	8017370 <_malloc_r+0x184>
 8017204:	42a9      	cmp	r1, r5
 8017206:	f200 80b3 	bhi.w	8017370 <_malloc_r+0x184>
 801720a:	f000 fac7 	bl	801779c <__malloc_lock>
 801720e:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
 8017212:	d222      	bcs.n	801725a <_malloc_r+0x6e>
 8017214:	4fc2      	ldr	r7, [pc, #776]	; (8017520 <_malloc_r+0x334>)
 8017216:	08e8      	lsrs	r0, r5, #3
 8017218:	eb07 03c0 	add.w	r3, r7, r0, lsl #3
 801721c:	68dc      	ldr	r4, [r3, #12]
 801721e:	429c      	cmp	r4, r3
 8017220:	f000 81c9 	beq.w	80175b6 <_malloc_r+0x3ca>
 8017224:	6863      	ldr	r3, [r4, #4]
 8017226:	68e1      	ldr	r1, [r4, #12]
 8017228:	68a5      	ldr	r5, [r4, #8]
 801722a:	f023 0303 	bic.w	r3, r3, #3
 801722e:	4423      	add	r3, r4
 8017230:	4630      	mov	r0, r6
 8017232:	685a      	ldr	r2, [r3, #4]
 8017234:	60e9      	str	r1, [r5, #12]
 8017236:	f042 0201 	orr.w	r2, r2, #1
 801723a:	608d      	str	r5, [r1, #8]
 801723c:	605a      	str	r2, [r3, #4]
 801723e:	f000 faaf 	bl	80177a0 <__malloc_unlock>
 8017242:	3408      	adds	r4, #8
 8017244:	4620      	mov	r0, r4
 8017246:	b003      	add	sp, #12
 8017248:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801724c:	2910      	cmp	r1, #16
 801724e:	f200 808f 	bhi.w	8017370 <_malloc_r+0x184>
 8017252:	f000 faa3 	bl	801779c <__malloc_lock>
 8017256:	2510      	movs	r5, #16
 8017258:	e7dc      	b.n	8017214 <_malloc_r+0x28>
 801725a:	0a68      	lsrs	r0, r5, #9
 801725c:	f000 808f 	beq.w	801737e <_malloc_r+0x192>
 8017260:	2804      	cmp	r0, #4
 8017262:	f200 8154 	bhi.w	801750e <_malloc_r+0x322>
 8017266:	09a8      	lsrs	r0, r5, #6
 8017268:	3038      	adds	r0, #56	; 0x38
 801726a:	0041      	lsls	r1, r0, #1
 801726c:	4fac      	ldr	r7, [pc, #688]	; (8017520 <_malloc_r+0x334>)
 801726e:	eb07 0181 	add.w	r1, r7, r1, lsl #2
 8017272:	68cc      	ldr	r4, [r1, #12]
 8017274:	42a1      	cmp	r1, r4
 8017276:	d106      	bne.n	8017286 <_malloc_r+0x9a>
 8017278:	e00c      	b.n	8017294 <_malloc_r+0xa8>
 801727a:	2a00      	cmp	r2, #0
 801727c:	f280 8082 	bge.w	8017384 <_malloc_r+0x198>
 8017280:	68e4      	ldr	r4, [r4, #12]
 8017282:	42a1      	cmp	r1, r4
 8017284:	d006      	beq.n	8017294 <_malloc_r+0xa8>
 8017286:	6863      	ldr	r3, [r4, #4]
 8017288:	f023 0303 	bic.w	r3, r3, #3
 801728c:	1b5a      	subs	r2, r3, r5
 801728e:	2a0f      	cmp	r2, #15
 8017290:	ddf3      	ble.n	801727a <_malloc_r+0x8e>
 8017292:	3801      	subs	r0, #1
 8017294:	3001      	adds	r0, #1
 8017296:	49a2      	ldr	r1, [pc, #648]	; (8017520 <_malloc_r+0x334>)
 8017298:	693c      	ldr	r4, [r7, #16]
 801729a:	f101 0e08 	add.w	lr, r1, #8
 801729e:	4574      	cmp	r4, lr
 80172a0:	f000 817e 	beq.w	80175a0 <_malloc_r+0x3b4>
 80172a4:	6863      	ldr	r3, [r4, #4]
 80172a6:	f023 0303 	bic.w	r3, r3, #3
 80172aa:	1b5a      	subs	r2, r3, r5
 80172ac:	2a0f      	cmp	r2, #15
 80172ae:	f300 8164 	bgt.w	801757a <_malloc_r+0x38e>
 80172b2:	2a00      	cmp	r2, #0
 80172b4:	f8c1 e014 	str.w	lr, [r1, #20]
 80172b8:	f8c1 e010 	str.w	lr, [r1, #16]
 80172bc:	da73      	bge.n	80173a6 <_malloc_r+0x1ba>
 80172be:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80172c2:	f080 8139 	bcs.w	8017538 <_malloc_r+0x34c>
 80172c6:	08db      	lsrs	r3, r3, #3
 80172c8:	eb01 08c3 	add.w	r8, r1, r3, lsl #3
 80172cc:	ea4f 0ca3 	mov.w	ip, r3, asr #2
 80172d0:	684a      	ldr	r2, [r1, #4]
 80172d2:	f8d8 9008 	ldr.w	r9, [r8, #8]
 80172d6:	f8c4 9008 	str.w	r9, [r4, #8]
 80172da:	2301      	movs	r3, #1
 80172dc:	fa03 f30c 	lsl.w	r3, r3, ip
 80172e0:	4313      	orrs	r3, r2
 80172e2:	f8c4 800c 	str.w	r8, [r4, #12]
 80172e6:	604b      	str	r3, [r1, #4]
 80172e8:	f8c8 4008 	str.w	r4, [r8, #8]
 80172ec:	f8c9 400c 	str.w	r4, [r9, #12]
 80172f0:	1082      	asrs	r2, r0, #2
 80172f2:	2401      	movs	r4, #1
 80172f4:	4094      	lsls	r4, r2
 80172f6:	429c      	cmp	r4, r3
 80172f8:	d862      	bhi.n	80173c0 <_malloc_r+0x1d4>
 80172fa:	4223      	tst	r3, r4
 80172fc:	d106      	bne.n	801730c <_malloc_r+0x120>
 80172fe:	f020 0003 	bic.w	r0, r0, #3
 8017302:	0064      	lsls	r4, r4, #1
 8017304:	4223      	tst	r3, r4
 8017306:	f100 0004 	add.w	r0, r0, #4
 801730a:	d0fa      	beq.n	8017302 <_malloc_r+0x116>
 801730c:	eb07 08c0 	add.w	r8, r7, r0, lsl #3
 8017310:	46c4      	mov	ip, r8
 8017312:	4681      	mov	r9, r0
 8017314:	f8dc 300c 	ldr.w	r3, [ip, #12]
 8017318:	459c      	cmp	ip, r3
 801731a:	d107      	bne.n	801732c <_malloc_r+0x140>
 801731c:	e142      	b.n	80175a4 <_malloc_r+0x3b8>
 801731e:	2900      	cmp	r1, #0
 8017320:	f280 8152 	bge.w	80175c8 <_malloc_r+0x3dc>
 8017324:	68db      	ldr	r3, [r3, #12]
 8017326:	459c      	cmp	ip, r3
 8017328:	f000 813c 	beq.w	80175a4 <_malloc_r+0x3b8>
 801732c:	685a      	ldr	r2, [r3, #4]
 801732e:	f022 0203 	bic.w	r2, r2, #3
 8017332:	1b51      	subs	r1, r2, r5
 8017334:	290f      	cmp	r1, #15
 8017336:	ddf2      	ble.n	801731e <_malloc_r+0x132>
 8017338:	461c      	mov	r4, r3
 801733a:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 801733e:	f854 8f08 	ldr.w	r8, [r4, #8]!
 8017342:	195a      	adds	r2, r3, r5
 8017344:	f045 0901 	orr.w	r9, r5, #1
 8017348:	f041 0501 	orr.w	r5, r1, #1
 801734c:	f8c3 9004 	str.w	r9, [r3, #4]
 8017350:	4630      	mov	r0, r6
 8017352:	f8c8 c00c 	str.w	ip, [r8, #12]
 8017356:	f8cc 8008 	str.w	r8, [ip, #8]
 801735a:	617a      	str	r2, [r7, #20]
 801735c:	613a      	str	r2, [r7, #16]
 801735e:	f8c2 e00c 	str.w	lr, [r2, #12]
 8017362:	f8c2 e008 	str.w	lr, [r2, #8]
 8017366:	6055      	str	r5, [r2, #4]
 8017368:	5051      	str	r1, [r2, r1]
 801736a:	f000 fa19 	bl	80177a0 <__malloc_unlock>
 801736e:	e769      	b.n	8017244 <_malloc_r+0x58>
 8017370:	2400      	movs	r4, #0
 8017372:	230c      	movs	r3, #12
 8017374:	4620      	mov	r0, r4
 8017376:	6033      	str	r3, [r6, #0]
 8017378:	b003      	add	sp, #12
 801737a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801737e:	217e      	movs	r1, #126	; 0x7e
 8017380:	203f      	movs	r0, #63	; 0x3f
 8017382:	e773      	b.n	801726c <_malloc_r+0x80>
 8017384:	4423      	add	r3, r4
 8017386:	68e1      	ldr	r1, [r4, #12]
 8017388:	685a      	ldr	r2, [r3, #4]
 801738a:	68a5      	ldr	r5, [r4, #8]
 801738c:	f042 0201 	orr.w	r2, r2, #1
 8017390:	60e9      	str	r1, [r5, #12]
 8017392:	4630      	mov	r0, r6
 8017394:	608d      	str	r5, [r1, #8]
 8017396:	605a      	str	r2, [r3, #4]
 8017398:	f000 fa02 	bl	80177a0 <__malloc_unlock>
 801739c:	3408      	adds	r4, #8
 801739e:	4620      	mov	r0, r4
 80173a0:	b003      	add	sp, #12
 80173a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80173a6:	4423      	add	r3, r4
 80173a8:	4630      	mov	r0, r6
 80173aa:	685a      	ldr	r2, [r3, #4]
 80173ac:	f042 0201 	orr.w	r2, r2, #1
 80173b0:	605a      	str	r2, [r3, #4]
 80173b2:	f000 f9f5 	bl	80177a0 <__malloc_unlock>
 80173b6:	3408      	adds	r4, #8
 80173b8:	4620      	mov	r0, r4
 80173ba:	b003      	add	sp, #12
 80173bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80173c0:	68bc      	ldr	r4, [r7, #8]
 80173c2:	6863      	ldr	r3, [r4, #4]
 80173c4:	f023 0803 	bic.w	r8, r3, #3
 80173c8:	4545      	cmp	r5, r8
 80173ca:	d804      	bhi.n	80173d6 <_malloc_r+0x1ea>
 80173cc:	ebc5 0308 	rsb	r3, r5, r8
 80173d0:	2b0f      	cmp	r3, #15
 80173d2:	f300 808c 	bgt.w	80174ee <_malloc_r+0x302>
 80173d6:	4b53      	ldr	r3, [pc, #332]	; (8017524 <_malloc_r+0x338>)
 80173d8:	f8df a158 	ldr.w	sl, [pc, #344]	; 8017534 <_malloc_r+0x348>
 80173dc:	681a      	ldr	r2, [r3, #0]
 80173de:	f8da 3000 	ldr.w	r3, [sl]
 80173e2:	3301      	adds	r3, #1
 80173e4:	442a      	add	r2, r5
 80173e6:	eb04 0b08 	add.w	fp, r4, r8
 80173ea:	f000 8150 	beq.w	801768e <_malloc_r+0x4a2>
 80173ee:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 80173f2:	320f      	adds	r2, #15
 80173f4:	f422 627f 	bic.w	r2, r2, #4080	; 0xff0
 80173f8:	f022 020f 	bic.w	r2, r2, #15
 80173fc:	4611      	mov	r1, r2
 80173fe:	4630      	mov	r0, r6
 8017400:	9201      	str	r2, [sp, #4]
 8017402:	f000 fee5 	bl	80181d0 <_sbrk_r>
 8017406:	f1b0 3fff 	cmp.w	r0, #4294967295
 801740a:	4681      	mov	r9, r0
 801740c:	9a01      	ldr	r2, [sp, #4]
 801740e:	f000 80f5 	beq.w	80175fc <_malloc_r+0x410>
 8017412:	4583      	cmp	fp, r0
 8017414:	f200 80ef 	bhi.w	80175f6 <_malloc_r+0x40a>
 8017418:	4b43      	ldr	r3, [pc, #268]	; (8017528 <_malloc_r+0x33c>)
 801741a:	6819      	ldr	r1, [r3, #0]
 801741c:	45cb      	cmp	fp, r9
 801741e:	4411      	add	r1, r2
 8017420:	6019      	str	r1, [r3, #0]
 8017422:	f000 813d 	beq.w	80176a0 <_malloc_r+0x4b4>
 8017426:	f8da 0000 	ldr.w	r0, [sl]
 801742a:	f8df e108 	ldr.w	lr, [pc, #264]	; 8017534 <_malloc_r+0x348>
 801742e:	3001      	adds	r0, #1
 8017430:	bf1b      	ittet	ne
 8017432:	ebcb 0b09 	rsbne	fp, fp, r9
 8017436:	4459      	addne	r1, fp
 8017438:	f8ce 9000 	streq.w	r9, [lr]
 801743c:	6019      	strne	r1, [r3, #0]
 801743e:	f019 0107 	ands.w	r1, r9, #7
 8017442:	f000 8107 	beq.w	8017654 <_malloc_r+0x468>
 8017446:	f1c1 0008 	rsb	r0, r1, #8
 801744a:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
 801744e:	4481      	add	r9, r0
 8017450:	3108      	adds	r1, #8
 8017452:	444a      	add	r2, r9
 8017454:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8017458:	ebc2 0a01 	rsb	sl, r2, r1
 801745c:	4651      	mov	r1, sl
 801745e:	4630      	mov	r0, r6
 8017460:	9301      	str	r3, [sp, #4]
 8017462:	f000 feb5 	bl	80181d0 <_sbrk_r>
 8017466:	1c43      	adds	r3, r0, #1
 8017468:	9b01      	ldr	r3, [sp, #4]
 801746a:	f000 8127 	beq.w	80176bc <_malloc_r+0x4d0>
 801746e:	ebc9 0200 	rsb	r2, r9, r0
 8017472:	4452      	add	r2, sl
 8017474:	f042 0201 	orr.w	r2, r2, #1
 8017478:	6819      	ldr	r1, [r3, #0]
 801747a:	f8c7 9008 	str.w	r9, [r7, #8]
 801747e:	4451      	add	r1, sl
 8017480:	42bc      	cmp	r4, r7
 8017482:	f8c9 2004 	str.w	r2, [r9, #4]
 8017486:	6019      	str	r1, [r3, #0]
 8017488:	f8df a09c 	ldr.w	sl, [pc, #156]	; 8017528 <_malloc_r+0x33c>
 801748c:	d016      	beq.n	80174bc <_malloc_r+0x2d0>
 801748e:	f1b8 0f0f 	cmp.w	r8, #15
 8017492:	f240 80e2 	bls.w	801765a <_malloc_r+0x46e>
 8017496:	6862      	ldr	r2, [r4, #4]
 8017498:	f1a8 030c 	sub.w	r3, r8, #12
 801749c:	f023 0307 	bic.w	r3, r3, #7
 80174a0:	18e0      	adds	r0, r4, r3
 80174a2:	f002 0201 	and.w	r2, r2, #1
 80174a6:	f04f 0e05 	mov.w	lr, #5
 80174aa:	431a      	orrs	r2, r3
 80174ac:	2b0f      	cmp	r3, #15
 80174ae:	6062      	str	r2, [r4, #4]
 80174b0:	f8c0 e004 	str.w	lr, [r0, #4]
 80174b4:	f8c0 e008 	str.w	lr, [r0, #8]
 80174b8:	f200 8104 	bhi.w	80176c4 <_malloc_r+0x4d8>
 80174bc:	4b1b      	ldr	r3, [pc, #108]	; (801752c <_malloc_r+0x340>)
 80174be:	68bc      	ldr	r4, [r7, #8]
 80174c0:	681a      	ldr	r2, [r3, #0]
 80174c2:	4291      	cmp	r1, r2
 80174c4:	bf88      	it	hi
 80174c6:	6019      	strhi	r1, [r3, #0]
 80174c8:	4b19      	ldr	r3, [pc, #100]	; (8017530 <_malloc_r+0x344>)
 80174ca:	681a      	ldr	r2, [r3, #0]
 80174cc:	4291      	cmp	r1, r2
 80174ce:	6862      	ldr	r2, [r4, #4]
 80174d0:	bf88      	it	hi
 80174d2:	6019      	strhi	r1, [r3, #0]
 80174d4:	f022 0203 	bic.w	r2, r2, #3
 80174d8:	4295      	cmp	r5, r2
 80174da:	eba2 0305 	sub.w	r3, r2, r5
 80174de:	d801      	bhi.n	80174e4 <_malloc_r+0x2f8>
 80174e0:	2b0f      	cmp	r3, #15
 80174e2:	dc04      	bgt.n	80174ee <_malloc_r+0x302>
 80174e4:	4630      	mov	r0, r6
 80174e6:	f000 f95b 	bl	80177a0 <__malloc_unlock>
 80174ea:	2400      	movs	r4, #0
 80174ec:	e6aa      	b.n	8017244 <_malloc_r+0x58>
 80174ee:	1962      	adds	r2, r4, r5
 80174f0:	f043 0301 	orr.w	r3, r3, #1
 80174f4:	f045 0501 	orr.w	r5, r5, #1
 80174f8:	6065      	str	r5, [r4, #4]
 80174fa:	4630      	mov	r0, r6
 80174fc:	60ba      	str	r2, [r7, #8]
 80174fe:	6053      	str	r3, [r2, #4]
 8017500:	f000 f94e 	bl	80177a0 <__malloc_unlock>
 8017504:	3408      	adds	r4, #8
 8017506:	4620      	mov	r0, r4
 8017508:	b003      	add	sp, #12
 801750a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801750e:	2814      	cmp	r0, #20
 8017510:	d969      	bls.n	80175e6 <_malloc_r+0x3fa>
 8017512:	2854      	cmp	r0, #84	; 0x54
 8017514:	f200 8097 	bhi.w	8017646 <_malloc_r+0x45a>
 8017518:	0b28      	lsrs	r0, r5, #12
 801751a:	306e      	adds	r0, #110	; 0x6e
 801751c:	0041      	lsls	r1, r0, #1
 801751e:	e6a5      	b.n	801726c <_malloc_r+0x80>
 8017520:	20000768 	.word	0x20000768
 8017524:	2000e290 	.word	0x2000e290
 8017528:	2000e294 	.word	0x2000e294
 801752c:	2000e28c 	.word	0x2000e28c
 8017530:	2000e288 	.word	0x2000e288
 8017534:	20000b74 	.word	0x20000b74
 8017538:	0a5a      	lsrs	r2, r3, #9
 801753a:	2a04      	cmp	r2, #4
 801753c:	d956      	bls.n	80175ec <_malloc_r+0x400>
 801753e:	2a14      	cmp	r2, #20
 8017540:	f200 80a7 	bhi.w	8017692 <_malloc_r+0x4a6>
 8017544:	325b      	adds	r2, #91	; 0x5b
 8017546:	ea4f 0c42 	mov.w	ip, r2, lsl #1
 801754a:	eb07 0c8c 	add.w	ip, r7, ip, lsl #2
 801754e:	f8df 81b4 	ldr.w	r8, [pc, #436]	; 8017704 <_malloc_r+0x518>
 8017552:	f8dc 1008 	ldr.w	r1, [ip, #8]
 8017556:	4561      	cmp	r1, ip
 8017558:	f000 8085 	beq.w	8017666 <_malloc_r+0x47a>
 801755c:	684a      	ldr	r2, [r1, #4]
 801755e:	f022 0203 	bic.w	r2, r2, #3
 8017562:	4293      	cmp	r3, r2
 8017564:	d202      	bcs.n	801756c <_malloc_r+0x380>
 8017566:	6889      	ldr	r1, [r1, #8]
 8017568:	458c      	cmp	ip, r1
 801756a:	d1f7      	bne.n	801755c <_malloc_r+0x370>
 801756c:	68ca      	ldr	r2, [r1, #12]
 801756e:	687b      	ldr	r3, [r7, #4]
 8017570:	60e2      	str	r2, [r4, #12]
 8017572:	60a1      	str	r1, [r4, #8]
 8017574:	6094      	str	r4, [r2, #8]
 8017576:	60cc      	str	r4, [r1, #12]
 8017578:	e6ba      	b.n	80172f0 <_malloc_r+0x104>
 801757a:	1963      	adds	r3, r4, r5
 801757c:	f042 0701 	orr.w	r7, r2, #1
 8017580:	f045 0501 	orr.w	r5, r5, #1
 8017584:	6065      	str	r5, [r4, #4]
 8017586:	4630      	mov	r0, r6
 8017588:	614b      	str	r3, [r1, #20]
 801758a:	610b      	str	r3, [r1, #16]
 801758c:	f8c3 e00c 	str.w	lr, [r3, #12]
 8017590:	f8c3 e008 	str.w	lr, [r3, #8]
 8017594:	605f      	str	r7, [r3, #4]
 8017596:	509a      	str	r2, [r3, r2]
 8017598:	3408      	adds	r4, #8
 801759a:	f000 f901 	bl	80177a0 <__malloc_unlock>
 801759e:	e651      	b.n	8017244 <_malloc_r+0x58>
 80175a0:	684b      	ldr	r3, [r1, #4]
 80175a2:	e6a5      	b.n	80172f0 <_malloc_r+0x104>
 80175a4:	f109 0901 	add.w	r9, r9, #1
 80175a8:	f019 0f03 	tst.w	r9, #3
 80175ac:	f10c 0c08 	add.w	ip, ip, #8
 80175b0:	f47f aeb0 	bne.w	8017314 <_malloc_r+0x128>
 80175b4:	e02b      	b.n	801760e <_malloc_r+0x422>
 80175b6:	f104 0308 	add.w	r3, r4, #8
 80175ba:	6964      	ldr	r4, [r4, #20]
 80175bc:	42a3      	cmp	r3, r4
 80175be:	bf08      	it	eq
 80175c0:	3002      	addeq	r0, #2
 80175c2:	f43f ae68 	beq.w	8017296 <_malloc_r+0xaa>
 80175c6:	e62d      	b.n	8017224 <_malloc_r+0x38>
 80175c8:	441a      	add	r2, r3
 80175ca:	461c      	mov	r4, r3
 80175cc:	6851      	ldr	r1, [r2, #4]
 80175ce:	68db      	ldr	r3, [r3, #12]
 80175d0:	f854 5f08 	ldr.w	r5, [r4, #8]!
 80175d4:	f041 0101 	orr.w	r1, r1, #1
 80175d8:	6051      	str	r1, [r2, #4]
 80175da:	4630      	mov	r0, r6
 80175dc:	60eb      	str	r3, [r5, #12]
 80175de:	609d      	str	r5, [r3, #8]
 80175e0:	f000 f8de 	bl	80177a0 <__malloc_unlock>
 80175e4:	e62e      	b.n	8017244 <_malloc_r+0x58>
 80175e6:	305b      	adds	r0, #91	; 0x5b
 80175e8:	0041      	lsls	r1, r0, #1
 80175ea:	e63f      	b.n	801726c <_malloc_r+0x80>
 80175ec:	099a      	lsrs	r2, r3, #6
 80175ee:	3238      	adds	r2, #56	; 0x38
 80175f0:	ea4f 0c42 	mov.w	ip, r2, lsl #1
 80175f4:	e7a9      	b.n	801754a <_malloc_r+0x35e>
 80175f6:	42bc      	cmp	r4, r7
 80175f8:	f43f af0e 	beq.w	8017418 <_malloc_r+0x22c>
 80175fc:	68bc      	ldr	r4, [r7, #8]
 80175fe:	6862      	ldr	r2, [r4, #4]
 8017600:	f022 0203 	bic.w	r2, r2, #3
 8017604:	e768      	b.n	80174d8 <_malloc_r+0x2ec>
 8017606:	f8d8 8000 	ldr.w	r8, [r8]
 801760a:	4598      	cmp	r8, r3
 801760c:	d177      	bne.n	80176fe <_malloc_r+0x512>
 801760e:	f010 0f03 	tst.w	r0, #3
 8017612:	f1a8 0308 	sub.w	r3, r8, #8
 8017616:	f100 30ff 	add.w	r0, r0, #4294967295
 801761a:	d1f4      	bne.n	8017606 <_malloc_r+0x41a>
 801761c:	687b      	ldr	r3, [r7, #4]
 801761e:	ea23 0304 	bic.w	r3, r3, r4
 8017622:	607b      	str	r3, [r7, #4]
 8017624:	0064      	lsls	r4, r4, #1
 8017626:	429c      	cmp	r4, r3
 8017628:	f63f aeca 	bhi.w	80173c0 <_malloc_r+0x1d4>
 801762c:	2c00      	cmp	r4, #0
 801762e:	f43f aec7 	beq.w	80173c0 <_malloc_r+0x1d4>
 8017632:	4223      	tst	r3, r4
 8017634:	4648      	mov	r0, r9
 8017636:	f47f ae69 	bne.w	801730c <_malloc_r+0x120>
 801763a:	0064      	lsls	r4, r4, #1
 801763c:	4223      	tst	r3, r4
 801763e:	f100 0004 	add.w	r0, r0, #4
 8017642:	d0fa      	beq.n	801763a <_malloc_r+0x44e>
 8017644:	e662      	b.n	801730c <_malloc_r+0x120>
 8017646:	f5b0 7faa 	cmp.w	r0, #340	; 0x154
 801764a:	d818      	bhi.n	801767e <_malloc_r+0x492>
 801764c:	0be8      	lsrs	r0, r5, #15
 801764e:	3077      	adds	r0, #119	; 0x77
 8017650:	0041      	lsls	r1, r0, #1
 8017652:	e60b      	b.n	801726c <_malloc_r+0x80>
 8017654:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8017658:	e6fb      	b.n	8017452 <_malloc_r+0x266>
 801765a:	2301      	movs	r3, #1
 801765c:	f8c9 3004 	str.w	r3, [r9, #4]
 8017660:	464c      	mov	r4, r9
 8017662:	2200      	movs	r2, #0
 8017664:	e738      	b.n	80174d8 <_malloc_r+0x2ec>
 8017666:	f8d8 3004 	ldr.w	r3, [r8, #4]
 801766a:	1092      	asrs	r2, r2, #2
 801766c:	f04f 0c01 	mov.w	ip, #1
 8017670:	fa0c f202 	lsl.w	r2, ip, r2
 8017674:	4313      	orrs	r3, r2
 8017676:	f8c8 3004 	str.w	r3, [r8, #4]
 801767a:	460a      	mov	r2, r1
 801767c:	e778      	b.n	8017570 <_malloc_r+0x384>
 801767e:	f240 5354 	movw	r3, #1364	; 0x554
 8017682:	4298      	cmp	r0, r3
 8017684:	d817      	bhi.n	80176b6 <_malloc_r+0x4ca>
 8017686:	0ca8      	lsrs	r0, r5, #18
 8017688:	307c      	adds	r0, #124	; 0x7c
 801768a:	0041      	lsls	r1, r0, #1
 801768c:	e5ee      	b.n	801726c <_malloc_r+0x80>
 801768e:	3210      	adds	r2, #16
 8017690:	e6b4      	b.n	80173fc <_malloc_r+0x210>
 8017692:	2a54      	cmp	r2, #84	; 0x54
 8017694:	d81e      	bhi.n	80176d4 <_malloc_r+0x4e8>
 8017696:	0b1a      	lsrs	r2, r3, #12
 8017698:	326e      	adds	r2, #110	; 0x6e
 801769a:	ea4f 0c42 	mov.w	ip, r2, lsl #1
 801769e:	e754      	b.n	801754a <_malloc_r+0x35e>
 80176a0:	f3cb 000b 	ubfx	r0, fp, #0, #12
 80176a4:	2800      	cmp	r0, #0
 80176a6:	f47f aebe 	bne.w	8017426 <_malloc_r+0x23a>
 80176aa:	4442      	add	r2, r8
 80176ac:	68bb      	ldr	r3, [r7, #8]
 80176ae:	f042 0201 	orr.w	r2, r2, #1
 80176b2:	605a      	str	r2, [r3, #4]
 80176b4:	e702      	b.n	80174bc <_malloc_r+0x2d0>
 80176b6:	21fc      	movs	r1, #252	; 0xfc
 80176b8:	207e      	movs	r0, #126	; 0x7e
 80176ba:	e5d7      	b.n	801726c <_malloc_r+0x80>
 80176bc:	2201      	movs	r2, #1
 80176be:	f04f 0a00 	mov.w	sl, #0
 80176c2:	e6d9      	b.n	8017478 <_malloc_r+0x28c>
 80176c4:	f104 0108 	add.w	r1, r4, #8
 80176c8:	4630      	mov	r0, r6
 80176ca:	f7ff fa83 	bl	8016bd4 <_free_r>
 80176ce:	f8da 1000 	ldr.w	r1, [sl]
 80176d2:	e6f3      	b.n	80174bc <_malloc_r+0x2d0>
 80176d4:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 80176d8:	d804      	bhi.n	80176e4 <_malloc_r+0x4f8>
 80176da:	0bda      	lsrs	r2, r3, #15
 80176dc:	3277      	adds	r2, #119	; 0x77
 80176de:	ea4f 0c42 	mov.w	ip, r2, lsl #1
 80176e2:	e732      	b.n	801754a <_malloc_r+0x35e>
 80176e4:	f240 5154 	movw	r1, #1364	; 0x554
 80176e8:	428a      	cmp	r2, r1
 80176ea:	d804      	bhi.n	80176f6 <_malloc_r+0x50a>
 80176ec:	0c9a      	lsrs	r2, r3, #18
 80176ee:	327c      	adds	r2, #124	; 0x7c
 80176f0:	ea4f 0c42 	mov.w	ip, r2, lsl #1
 80176f4:	e729      	b.n	801754a <_malloc_r+0x35e>
 80176f6:	f04f 0cfc 	mov.w	ip, #252	; 0xfc
 80176fa:	227e      	movs	r2, #126	; 0x7e
 80176fc:	e725      	b.n	801754a <_malloc_r+0x35e>
 80176fe:	687b      	ldr	r3, [r7, #4]
 8017700:	e790      	b.n	8017624 <_malloc_r+0x438>
 8017702:	bf00      	nop
 8017704:	20000768 	.word	0x20000768

08017708 <memchr>:
 8017708:	0783      	lsls	r3, r0, #30
 801770a:	b470      	push	{r4, r5, r6}
 801770c:	b2c9      	uxtb	r1, r1
 801770e:	d040      	beq.n	8017792 <memchr+0x8a>
 8017710:	1e54      	subs	r4, r2, #1
 8017712:	2a00      	cmp	r2, #0
 8017714:	d03f      	beq.n	8017796 <memchr+0x8e>
 8017716:	7803      	ldrb	r3, [r0, #0]
 8017718:	428b      	cmp	r3, r1
 801771a:	bf18      	it	ne
 801771c:	1c43      	addne	r3, r0, #1
 801771e:	d106      	bne.n	801772e <memchr+0x26>
 8017720:	e01d      	b.n	801775e <memchr+0x56>
 8017722:	b1f4      	cbz	r4, 8017762 <memchr+0x5a>
 8017724:	7802      	ldrb	r2, [r0, #0]
 8017726:	428a      	cmp	r2, r1
 8017728:	f104 34ff 	add.w	r4, r4, #4294967295
 801772c:	d017      	beq.n	801775e <memchr+0x56>
 801772e:	f013 0f03 	tst.w	r3, #3
 8017732:	4618      	mov	r0, r3
 8017734:	f103 0301 	add.w	r3, r3, #1
 8017738:	d1f3      	bne.n	8017722 <memchr+0x1a>
 801773a:	2c03      	cmp	r4, #3
 801773c:	d814      	bhi.n	8017768 <memchr+0x60>
 801773e:	b184      	cbz	r4, 8017762 <memchr+0x5a>
 8017740:	7803      	ldrb	r3, [r0, #0]
 8017742:	428b      	cmp	r3, r1
 8017744:	d00b      	beq.n	801775e <memchr+0x56>
 8017746:	1905      	adds	r5, r0, r4
 8017748:	1c43      	adds	r3, r0, #1
 801774a:	e002      	b.n	8017752 <memchr+0x4a>
 801774c:	7802      	ldrb	r2, [r0, #0]
 801774e:	428a      	cmp	r2, r1
 8017750:	d005      	beq.n	801775e <memchr+0x56>
 8017752:	42ab      	cmp	r3, r5
 8017754:	4618      	mov	r0, r3
 8017756:	f103 0301 	add.w	r3, r3, #1
 801775a:	d1f7      	bne.n	801774c <memchr+0x44>
 801775c:	2000      	movs	r0, #0
 801775e:	bc70      	pop	{r4, r5, r6}
 8017760:	4770      	bx	lr
 8017762:	4620      	mov	r0, r4
 8017764:	bc70      	pop	{r4, r5, r6}
 8017766:	4770      	bx	lr
 8017768:	ea41 2601 	orr.w	r6, r1, r1, lsl #8
 801776c:	4602      	mov	r2, r0
 801776e:	ea46 4606 	orr.w	r6, r6, r6, lsl #16
 8017772:	4610      	mov	r0, r2
 8017774:	3204      	adds	r2, #4
 8017776:	6803      	ldr	r3, [r0, #0]
 8017778:	4073      	eors	r3, r6
 801777a:	f1a3 3501 	sub.w	r5, r3, #16843009	; 0x1010101
 801777e:	ea25 0303 	bic.w	r3, r5, r3
 8017782:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
 8017786:	d1da      	bne.n	801773e <memchr+0x36>
 8017788:	3c04      	subs	r4, #4
 801778a:	2c03      	cmp	r4, #3
 801778c:	4610      	mov	r0, r2
 801778e:	d8f0      	bhi.n	8017772 <memchr+0x6a>
 8017790:	e7d5      	b.n	801773e <memchr+0x36>
 8017792:	4614      	mov	r4, r2
 8017794:	e7d1      	b.n	801773a <memchr+0x32>
 8017796:	4610      	mov	r0, r2
 8017798:	e7e1      	b.n	801775e <memchr+0x56>
 801779a:	bf00      	nop

0801779c <__malloc_lock>:
 801779c:	4770      	bx	lr
 801779e:	bf00      	nop

080177a0 <__malloc_unlock>:
 80177a0:	4770      	bx	lr
 80177a2:	bf00      	nop

080177a4 <_Balloc>:
 80177a4:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 80177a6:	b570      	push	{r4, r5, r6, lr}
 80177a8:	4605      	mov	r5, r0
 80177aa:	460c      	mov	r4, r1
 80177ac:	b14b      	cbz	r3, 80177c2 <_Balloc+0x1e>
 80177ae:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80177b2:	b180      	cbz	r0, 80177d6 <_Balloc+0x32>
 80177b4:	6802      	ldr	r2, [r0, #0]
 80177b6:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 80177ba:	2300      	movs	r3, #0
 80177bc:	6103      	str	r3, [r0, #16]
 80177be:	60c3      	str	r3, [r0, #12]
 80177c0:	bd70      	pop	{r4, r5, r6, pc}
 80177c2:	2104      	movs	r1, #4
 80177c4:	2221      	movs	r2, #33	; 0x21
 80177c6:	f000 fe35 	bl	8018434 <_calloc_r>
 80177ca:	64e8      	str	r0, [r5, #76]	; 0x4c
 80177cc:	4603      	mov	r3, r0
 80177ce:	2800      	cmp	r0, #0
 80177d0:	d1ed      	bne.n	80177ae <_Balloc+0xa>
 80177d2:	2000      	movs	r0, #0
 80177d4:	bd70      	pop	{r4, r5, r6, pc}
 80177d6:	2101      	movs	r1, #1
 80177d8:	fa01 f604 	lsl.w	r6, r1, r4
 80177dc:	1d72      	adds	r2, r6, #5
 80177de:	4628      	mov	r0, r5
 80177e0:	0092      	lsls	r2, r2, #2
 80177e2:	f000 fe27 	bl	8018434 <_calloc_r>
 80177e6:	2800      	cmp	r0, #0
 80177e8:	d0f3      	beq.n	80177d2 <_Balloc+0x2e>
 80177ea:	6044      	str	r4, [r0, #4]
 80177ec:	6086      	str	r6, [r0, #8]
 80177ee:	e7e4      	b.n	80177ba <_Balloc+0x16>

080177f0 <_Bfree>:
 80177f0:	b131      	cbz	r1, 8017800 <_Bfree+0x10>
 80177f2:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 80177f4:	684a      	ldr	r2, [r1, #4]
 80177f6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80177fa:	6008      	str	r0, [r1, #0]
 80177fc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8017800:	4770      	bx	lr
 8017802:	bf00      	nop

08017804 <__multadd>:
 8017804:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017806:	690c      	ldr	r4, [r1, #16]
 8017808:	b083      	sub	sp, #12
 801780a:	460d      	mov	r5, r1
 801780c:	4606      	mov	r6, r0
 801780e:	f101 0e14 	add.w	lr, r1, #20
 8017812:	2700      	movs	r7, #0
 8017814:	f8de 1000 	ldr.w	r1, [lr]
 8017818:	b288      	uxth	r0, r1
 801781a:	0c09      	lsrs	r1, r1, #16
 801781c:	fb02 3300 	mla	r3, r2, r0, r3
 8017820:	fb02 f101 	mul.w	r1, r2, r1
 8017824:	eb01 4113 	add.w	r1, r1, r3, lsr #16
 8017828:	3701      	adds	r7, #1
 801782a:	b29b      	uxth	r3, r3
 801782c:	eb03 4301 	add.w	r3, r3, r1, lsl #16
 8017830:	42bc      	cmp	r4, r7
 8017832:	f84e 3b04 	str.w	r3, [lr], #4
 8017836:	ea4f 4311 	mov.w	r3, r1, lsr #16
 801783a:	dceb      	bgt.n	8017814 <__multadd+0x10>
 801783c:	b13b      	cbz	r3, 801784e <__multadd+0x4a>
 801783e:	68aa      	ldr	r2, [r5, #8]
 8017840:	4294      	cmp	r4, r2
 8017842:	da07      	bge.n	8017854 <__multadd+0x50>
 8017844:	eb05 0284 	add.w	r2, r5, r4, lsl #2
 8017848:	3401      	adds	r4, #1
 801784a:	6153      	str	r3, [r2, #20]
 801784c:	612c      	str	r4, [r5, #16]
 801784e:	4628      	mov	r0, r5
 8017850:	b003      	add	sp, #12
 8017852:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017854:	6869      	ldr	r1, [r5, #4]
 8017856:	9301      	str	r3, [sp, #4]
 8017858:	3101      	adds	r1, #1
 801785a:	4630      	mov	r0, r6
 801785c:	f7ff ffa2 	bl	80177a4 <_Balloc>
 8017860:	692a      	ldr	r2, [r5, #16]
 8017862:	3202      	adds	r2, #2
 8017864:	f105 010c 	add.w	r1, r5, #12
 8017868:	4607      	mov	r7, r0
 801786a:	0092      	lsls	r2, r2, #2
 801786c:	300c      	adds	r0, #12
 801786e:	f7e8 fc8b 	bl	8000188 <memcpy>
 8017872:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
 8017874:	6869      	ldr	r1, [r5, #4]
 8017876:	9b01      	ldr	r3, [sp, #4]
 8017878:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 801787c:	6028      	str	r0, [r5, #0]
 801787e:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
 8017882:	463d      	mov	r5, r7
 8017884:	e7de      	b.n	8017844 <__multadd+0x40>
 8017886:	bf00      	nop

08017888 <__hi0bits>:
 8017888:	0c03      	lsrs	r3, r0, #16
 801788a:	041b      	lsls	r3, r3, #16
 801788c:	b9b3      	cbnz	r3, 80178bc <__hi0bits+0x34>
 801788e:	0400      	lsls	r0, r0, #16
 8017890:	2310      	movs	r3, #16
 8017892:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8017896:	bf04      	itt	eq
 8017898:	0200      	lsleq	r0, r0, #8
 801789a:	3308      	addeq	r3, #8
 801789c:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 80178a0:	bf04      	itt	eq
 80178a2:	0100      	lsleq	r0, r0, #4
 80178a4:	3304      	addeq	r3, #4
 80178a6:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 80178aa:	bf04      	itt	eq
 80178ac:	0080      	lsleq	r0, r0, #2
 80178ae:	3302      	addeq	r3, #2
 80178b0:	2800      	cmp	r0, #0
 80178b2:	db07      	blt.n	80178c4 <__hi0bits+0x3c>
 80178b4:	0042      	lsls	r2, r0, #1
 80178b6:	d403      	bmi.n	80178c0 <__hi0bits+0x38>
 80178b8:	2020      	movs	r0, #32
 80178ba:	4770      	bx	lr
 80178bc:	2300      	movs	r3, #0
 80178be:	e7e8      	b.n	8017892 <__hi0bits+0xa>
 80178c0:	1c58      	adds	r0, r3, #1
 80178c2:	4770      	bx	lr
 80178c4:	4618      	mov	r0, r3
 80178c6:	4770      	bx	lr

080178c8 <__lo0bits>:
 80178c8:	6803      	ldr	r3, [r0, #0]
 80178ca:	f013 0207 	ands.w	r2, r3, #7
 80178ce:	d007      	beq.n	80178e0 <__lo0bits+0x18>
 80178d0:	07d9      	lsls	r1, r3, #31
 80178d2:	d420      	bmi.n	8017916 <__lo0bits+0x4e>
 80178d4:	079a      	lsls	r2, r3, #30
 80178d6:	d420      	bmi.n	801791a <__lo0bits+0x52>
 80178d8:	089b      	lsrs	r3, r3, #2
 80178da:	6003      	str	r3, [r0, #0]
 80178dc:	2002      	movs	r0, #2
 80178de:	4770      	bx	lr
 80178e0:	b299      	uxth	r1, r3
 80178e2:	b909      	cbnz	r1, 80178e8 <__lo0bits+0x20>
 80178e4:	0c1b      	lsrs	r3, r3, #16
 80178e6:	2210      	movs	r2, #16
 80178e8:	f013 0fff 	tst.w	r3, #255	; 0xff
 80178ec:	bf04      	itt	eq
 80178ee:	0a1b      	lsreq	r3, r3, #8
 80178f0:	3208      	addeq	r2, #8
 80178f2:	0719      	lsls	r1, r3, #28
 80178f4:	bf04      	itt	eq
 80178f6:	091b      	lsreq	r3, r3, #4
 80178f8:	3204      	addeq	r2, #4
 80178fa:	0799      	lsls	r1, r3, #30
 80178fc:	bf04      	itt	eq
 80178fe:	089b      	lsreq	r3, r3, #2
 8017900:	3202      	addeq	r2, #2
 8017902:	07d9      	lsls	r1, r3, #31
 8017904:	d404      	bmi.n	8017910 <__lo0bits+0x48>
 8017906:	085b      	lsrs	r3, r3, #1
 8017908:	d101      	bne.n	801790e <__lo0bits+0x46>
 801790a:	2020      	movs	r0, #32
 801790c:	4770      	bx	lr
 801790e:	3201      	adds	r2, #1
 8017910:	6003      	str	r3, [r0, #0]
 8017912:	4610      	mov	r0, r2
 8017914:	4770      	bx	lr
 8017916:	2000      	movs	r0, #0
 8017918:	4770      	bx	lr
 801791a:	085b      	lsrs	r3, r3, #1
 801791c:	6003      	str	r3, [r0, #0]
 801791e:	2001      	movs	r0, #1
 8017920:	4770      	bx	lr
 8017922:	bf00      	nop

08017924 <__i2b>:
 8017924:	b510      	push	{r4, lr}
 8017926:	460c      	mov	r4, r1
 8017928:	2101      	movs	r1, #1
 801792a:	f7ff ff3b 	bl	80177a4 <_Balloc>
 801792e:	2201      	movs	r2, #1
 8017930:	6144      	str	r4, [r0, #20]
 8017932:	6102      	str	r2, [r0, #16]
 8017934:	bd10      	pop	{r4, pc}
 8017936:	bf00      	nop

08017938 <__multiply>:
 8017938:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801793c:	690f      	ldr	r7, [r1, #16]
 801793e:	6916      	ldr	r6, [r2, #16]
 8017940:	42b7      	cmp	r7, r6
 8017942:	b083      	sub	sp, #12
 8017944:	460d      	mov	r5, r1
 8017946:	4614      	mov	r4, r2
 8017948:	f2c0 808d 	blt.w	8017a66 <__multiply+0x12e>
 801794c:	4633      	mov	r3, r6
 801794e:	463e      	mov	r6, r7
 8017950:	461f      	mov	r7, r3
 8017952:	68ab      	ldr	r3, [r5, #8]
 8017954:	6869      	ldr	r1, [r5, #4]
 8017956:	eb06 0807 	add.w	r8, r6, r7
 801795a:	4598      	cmp	r8, r3
 801795c:	bfc8      	it	gt
 801795e:	3101      	addgt	r1, #1
 8017960:	f7ff ff20 	bl	80177a4 <_Balloc>
 8017964:	f100 0c14 	add.w	ip, r0, #20
 8017968:	eb0c 0988 	add.w	r9, ip, r8, lsl #2
 801796c:	45cc      	cmp	ip, r9
 801796e:	9000      	str	r0, [sp, #0]
 8017970:	d205      	bcs.n	801797e <__multiply+0x46>
 8017972:	4663      	mov	r3, ip
 8017974:	2100      	movs	r1, #0
 8017976:	f843 1b04 	str.w	r1, [r3], #4
 801797a:	4599      	cmp	r9, r3
 801797c:	d8fb      	bhi.n	8017976 <__multiply+0x3e>
 801797e:	f104 0214 	add.w	r2, r4, #20
 8017982:	eb02 0a87 	add.w	sl, r2, r7, lsl #2
 8017986:	f105 0314 	add.w	r3, r5, #20
 801798a:	4552      	cmp	r2, sl
 801798c:	eb03 0e86 	add.w	lr, r3, r6, lsl #2
 8017990:	d254      	bcs.n	8017a3c <__multiply+0x104>
 8017992:	f8cd 9004 	str.w	r9, [sp, #4]
 8017996:	4699      	mov	r9, r3
 8017998:	f852 3b04 	ldr.w	r3, [r2], #4
 801799c:	fa1f fb83 	uxth.w	fp, r3
 80179a0:	f1bb 0f00 	cmp.w	fp, #0
 80179a4:	d020      	beq.n	80179e8 <__multiply+0xb0>
 80179a6:	2000      	movs	r0, #0
 80179a8:	464f      	mov	r7, r9
 80179aa:	4666      	mov	r6, ip
 80179ac:	4605      	mov	r5, r0
 80179ae:	e000      	b.n	80179b2 <__multiply+0x7a>
 80179b0:	461e      	mov	r6, r3
 80179b2:	f857 4b04 	ldr.w	r4, [r7], #4
 80179b6:	6830      	ldr	r0, [r6, #0]
 80179b8:	b2a1      	uxth	r1, r4
 80179ba:	b283      	uxth	r3, r0
 80179bc:	fb0b 3101 	mla	r1, fp, r1, r3
 80179c0:	0c24      	lsrs	r4, r4, #16
 80179c2:	0c00      	lsrs	r0, r0, #16
 80179c4:	194b      	adds	r3, r1, r5
 80179c6:	fb0b 0004 	mla	r0, fp, r4, r0
 80179ca:	eb00 4013 	add.w	r0, r0, r3, lsr #16
 80179ce:	b299      	uxth	r1, r3
 80179d0:	4633      	mov	r3, r6
 80179d2:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 80179d6:	45be      	cmp	lr, r7
 80179d8:	ea4f 4510 	mov.w	r5, r0, lsr #16
 80179dc:	f843 1b04 	str.w	r1, [r3], #4
 80179e0:	d8e6      	bhi.n	80179b0 <__multiply+0x78>
 80179e2:	6075      	str	r5, [r6, #4]
 80179e4:	f852 3c04 	ldr.w	r3, [r2, #-4]
 80179e8:	ea5f 4b13 	movs.w	fp, r3, lsr #16
 80179ec:	d020      	beq.n	8017a30 <__multiply+0xf8>
 80179ee:	f8dc 3000 	ldr.w	r3, [ip]
 80179f2:	4667      	mov	r7, ip
 80179f4:	4618      	mov	r0, r3
 80179f6:	464d      	mov	r5, r9
 80179f8:	2100      	movs	r1, #0
 80179fa:	e000      	b.n	80179fe <__multiply+0xc6>
 80179fc:	4637      	mov	r7, r6
 80179fe:	882c      	ldrh	r4, [r5, #0]
 8017a00:	0c00      	lsrs	r0, r0, #16
 8017a02:	fb0b 0004 	mla	r0, fp, r4, r0
 8017a06:	4401      	add	r1, r0
 8017a08:	b29c      	uxth	r4, r3
 8017a0a:	463e      	mov	r6, r7
 8017a0c:	ea44 4301 	orr.w	r3, r4, r1, lsl #16
 8017a10:	f846 3b04 	str.w	r3, [r6], #4
 8017a14:	6878      	ldr	r0, [r7, #4]
 8017a16:	f855 4b04 	ldr.w	r4, [r5], #4
 8017a1a:	b283      	uxth	r3, r0
 8017a1c:	0c24      	lsrs	r4, r4, #16
 8017a1e:	fb0b 3404 	mla	r4, fp, r4, r3
 8017a22:	eb04 4311 	add.w	r3, r4, r1, lsr #16
 8017a26:	45ae      	cmp	lr, r5
 8017a28:	ea4f 4113 	mov.w	r1, r3, lsr #16
 8017a2c:	d8e6      	bhi.n	80179fc <__multiply+0xc4>
 8017a2e:	607b      	str	r3, [r7, #4]
 8017a30:	4592      	cmp	sl, r2
 8017a32:	f10c 0c04 	add.w	ip, ip, #4
 8017a36:	d8af      	bhi.n	8017998 <__multiply+0x60>
 8017a38:	f8dd 9004 	ldr.w	r9, [sp, #4]
 8017a3c:	f1b8 0f00 	cmp.w	r8, #0
 8017a40:	dd0b      	ble.n	8017a5a <__multiply+0x122>
 8017a42:	f859 3c04 	ldr.w	r3, [r9, #-4]
 8017a46:	f1a9 0904 	sub.w	r9, r9, #4
 8017a4a:	b11b      	cbz	r3, 8017a54 <__multiply+0x11c>
 8017a4c:	e005      	b.n	8017a5a <__multiply+0x122>
 8017a4e:	f859 3d04 	ldr.w	r3, [r9, #-4]!
 8017a52:	b913      	cbnz	r3, 8017a5a <__multiply+0x122>
 8017a54:	f1b8 0801 	subs.w	r8, r8, #1
 8017a58:	d1f9      	bne.n	8017a4e <__multiply+0x116>
 8017a5a:	9800      	ldr	r0, [sp, #0]
 8017a5c:	f8c0 8010 	str.w	r8, [r0, #16]
 8017a60:	b003      	add	sp, #12
 8017a62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017a66:	4615      	mov	r5, r2
 8017a68:	460c      	mov	r4, r1
 8017a6a:	e772      	b.n	8017952 <__multiply+0x1a>

08017a6c <__pow5mult>:
 8017a6c:	f012 0303 	ands.w	r3, r2, #3
 8017a70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017a74:	4614      	mov	r4, r2
 8017a76:	4607      	mov	r7, r0
 8017a78:	460e      	mov	r6, r1
 8017a7a:	d12d      	bne.n	8017ad8 <__pow5mult+0x6c>
 8017a7c:	10a4      	asrs	r4, r4, #2
 8017a7e:	d01c      	beq.n	8017aba <__pow5mult+0x4e>
 8017a80:	6cbd      	ldr	r5, [r7, #72]	; 0x48
 8017a82:	b395      	cbz	r5, 8017aea <__pow5mult+0x7e>
 8017a84:	07e3      	lsls	r3, r4, #31
 8017a86:	f04f 0800 	mov.w	r8, #0
 8017a8a:	d406      	bmi.n	8017a9a <__pow5mult+0x2e>
 8017a8c:	1064      	asrs	r4, r4, #1
 8017a8e:	d014      	beq.n	8017aba <__pow5mult+0x4e>
 8017a90:	6828      	ldr	r0, [r5, #0]
 8017a92:	b1a8      	cbz	r0, 8017ac0 <__pow5mult+0x54>
 8017a94:	4605      	mov	r5, r0
 8017a96:	07e3      	lsls	r3, r4, #31
 8017a98:	d5f8      	bpl.n	8017a8c <__pow5mult+0x20>
 8017a9a:	4638      	mov	r0, r7
 8017a9c:	4631      	mov	r1, r6
 8017a9e:	462a      	mov	r2, r5
 8017aa0:	f7ff ff4a 	bl	8017938 <__multiply>
 8017aa4:	b1b6      	cbz	r6, 8017ad4 <__pow5mult+0x68>
 8017aa6:	6872      	ldr	r2, [r6, #4]
 8017aa8:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8017aaa:	1064      	asrs	r4, r4, #1
 8017aac:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8017ab0:	6031      	str	r1, [r6, #0]
 8017ab2:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
 8017ab6:	4606      	mov	r6, r0
 8017ab8:	d1ea      	bne.n	8017a90 <__pow5mult+0x24>
 8017aba:	4630      	mov	r0, r6
 8017abc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017ac0:	4629      	mov	r1, r5
 8017ac2:	462a      	mov	r2, r5
 8017ac4:	4638      	mov	r0, r7
 8017ac6:	f7ff ff37 	bl	8017938 <__multiply>
 8017aca:	6028      	str	r0, [r5, #0]
 8017acc:	f8c0 8000 	str.w	r8, [r0]
 8017ad0:	4605      	mov	r5, r0
 8017ad2:	e7e0      	b.n	8017a96 <__pow5mult+0x2a>
 8017ad4:	4606      	mov	r6, r0
 8017ad6:	e7d9      	b.n	8017a8c <__pow5mult+0x20>
 8017ad8:	1e5a      	subs	r2, r3, #1
 8017ada:	4d0b      	ldr	r5, [pc, #44]	; (8017b08 <__pow5mult+0x9c>)
 8017adc:	2300      	movs	r3, #0
 8017ade:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8017ae2:	f7ff fe8f 	bl	8017804 <__multadd>
 8017ae6:	4606      	mov	r6, r0
 8017ae8:	e7c8      	b.n	8017a7c <__pow5mult+0x10>
 8017aea:	2101      	movs	r1, #1
 8017aec:	4638      	mov	r0, r7
 8017aee:	f7ff fe59 	bl	80177a4 <_Balloc>
 8017af2:	f240 2171 	movw	r1, #625	; 0x271
 8017af6:	2201      	movs	r2, #1
 8017af8:	2300      	movs	r3, #0
 8017afa:	6141      	str	r1, [r0, #20]
 8017afc:	6102      	str	r2, [r0, #16]
 8017afe:	4605      	mov	r5, r0
 8017b00:	64b8      	str	r0, [r7, #72]	; 0x48
 8017b02:	6003      	str	r3, [r0, #0]
 8017b04:	e7be      	b.n	8017a84 <__pow5mult+0x18>
 8017b06:	bf00      	nop
 8017b08:	0802d858 	.word	0x0802d858

08017b0c <__lshift>:
 8017b0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017b10:	690f      	ldr	r7, [r1, #16]
 8017b12:	688b      	ldr	r3, [r1, #8]
 8017b14:	ea4f 1962 	mov.w	r9, r2, asr #5
 8017b18:	444f      	add	r7, r9
 8017b1a:	1c7d      	adds	r5, r7, #1
 8017b1c:	429d      	cmp	r5, r3
 8017b1e:	460e      	mov	r6, r1
 8017b20:	4614      	mov	r4, r2
 8017b22:	6849      	ldr	r1, [r1, #4]
 8017b24:	4680      	mov	r8, r0
 8017b26:	dd04      	ble.n	8017b32 <__lshift+0x26>
 8017b28:	005b      	lsls	r3, r3, #1
 8017b2a:	429d      	cmp	r5, r3
 8017b2c:	f101 0101 	add.w	r1, r1, #1
 8017b30:	dcfa      	bgt.n	8017b28 <__lshift+0x1c>
 8017b32:	4640      	mov	r0, r8
 8017b34:	f7ff fe36 	bl	80177a4 <_Balloc>
 8017b38:	f1b9 0f00 	cmp.w	r9, #0
 8017b3c:	f100 0114 	add.w	r1, r0, #20
 8017b40:	dd09      	ble.n	8017b56 <__lshift+0x4a>
 8017b42:	2300      	movs	r3, #0
 8017b44:	469e      	mov	lr, r3
 8017b46:	460a      	mov	r2, r1
 8017b48:	3301      	adds	r3, #1
 8017b4a:	454b      	cmp	r3, r9
 8017b4c:	f842 eb04 	str.w	lr, [r2], #4
 8017b50:	d1fa      	bne.n	8017b48 <__lshift+0x3c>
 8017b52:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8017b56:	6932      	ldr	r2, [r6, #16]
 8017b58:	f106 0314 	add.w	r3, r6, #20
 8017b5c:	f014 0c1f 	ands.w	ip, r4, #31
 8017b60:	eb03 0e82 	add.w	lr, r3, r2, lsl #2
 8017b64:	d01f      	beq.n	8017ba6 <__lshift+0x9a>
 8017b66:	f1cc 0920 	rsb	r9, ip, #32
 8017b6a:	2200      	movs	r2, #0
 8017b6c:	681c      	ldr	r4, [r3, #0]
 8017b6e:	fa04 f40c 	lsl.w	r4, r4, ip
 8017b72:	4314      	orrs	r4, r2
 8017b74:	468a      	mov	sl, r1
 8017b76:	f841 4b04 	str.w	r4, [r1], #4
 8017b7a:	f853 4b04 	ldr.w	r4, [r3], #4
 8017b7e:	459e      	cmp	lr, r3
 8017b80:	fa24 f209 	lsr.w	r2, r4, r9
 8017b84:	d8f2      	bhi.n	8017b6c <__lshift+0x60>
 8017b86:	f8ca 2004 	str.w	r2, [sl, #4]
 8017b8a:	b102      	cbz	r2, 8017b8e <__lshift+0x82>
 8017b8c:	1cbd      	adds	r5, r7, #2
 8017b8e:	f8d8 304c 	ldr.w	r3, [r8, #76]	; 0x4c
 8017b92:	6872      	ldr	r2, [r6, #4]
 8017b94:	3d01      	subs	r5, #1
 8017b96:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8017b9a:	6105      	str	r5, [r0, #16]
 8017b9c:	6031      	str	r1, [r6, #0]
 8017b9e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
 8017ba2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017ba6:	3904      	subs	r1, #4
 8017ba8:	f853 2b04 	ldr.w	r2, [r3], #4
 8017bac:	f841 2f04 	str.w	r2, [r1, #4]!
 8017bb0:	459e      	cmp	lr, r3
 8017bb2:	d8f9      	bhi.n	8017ba8 <__lshift+0x9c>
 8017bb4:	e7eb      	b.n	8017b8e <__lshift+0x82>
 8017bb6:	bf00      	nop

08017bb8 <__mcmp>:
 8017bb8:	6902      	ldr	r2, [r0, #16]
 8017bba:	690b      	ldr	r3, [r1, #16]
 8017bbc:	1ad2      	subs	r2, r2, r3
 8017bbe:	d113      	bne.n	8017be8 <__mcmp+0x30>
 8017bc0:	009b      	lsls	r3, r3, #2
 8017bc2:	3014      	adds	r0, #20
 8017bc4:	3114      	adds	r1, #20
 8017bc6:	4419      	add	r1, r3
 8017bc8:	b410      	push	{r4}
 8017bca:	4403      	add	r3, r0
 8017bcc:	e001      	b.n	8017bd2 <__mcmp+0x1a>
 8017bce:	4298      	cmp	r0, r3
 8017bd0:	d20c      	bcs.n	8017bec <__mcmp+0x34>
 8017bd2:	f853 4d04 	ldr.w	r4, [r3, #-4]!
 8017bd6:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8017bda:	4294      	cmp	r4, r2
 8017bdc:	d0f7      	beq.n	8017bce <__mcmp+0x16>
 8017bde:	d309      	bcc.n	8017bf4 <__mcmp+0x3c>
 8017be0:	2001      	movs	r0, #1
 8017be2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017be6:	4770      	bx	lr
 8017be8:	4610      	mov	r0, r2
 8017bea:	4770      	bx	lr
 8017bec:	2000      	movs	r0, #0
 8017bee:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017bf2:	4770      	bx	lr
 8017bf4:	f04f 30ff 	mov.w	r0, #4294967295
 8017bf8:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017bfc:	4770      	bx	lr
 8017bfe:	bf00      	nop

08017c00 <__mdiff>:
 8017c00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017c04:	460e      	mov	r6, r1
 8017c06:	4605      	mov	r5, r0
 8017c08:	4611      	mov	r1, r2
 8017c0a:	4630      	mov	r0, r6
 8017c0c:	4614      	mov	r4, r2
 8017c0e:	f7ff ffd3 	bl	8017bb8 <__mcmp>
 8017c12:	1e07      	subs	r7, r0, #0
 8017c14:	d054      	beq.n	8017cc0 <__mdiff+0xc0>
 8017c16:	db4d      	blt.n	8017cb4 <__mdiff+0xb4>
 8017c18:	f04f 0800 	mov.w	r8, #0
 8017c1c:	6871      	ldr	r1, [r6, #4]
 8017c1e:	4628      	mov	r0, r5
 8017c20:	f7ff fdc0 	bl	80177a4 <_Balloc>
 8017c24:	6937      	ldr	r7, [r6, #16]
 8017c26:	6923      	ldr	r3, [r4, #16]
 8017c28:	f8c0 800c 	str.w	r8, [r0, #12]
 8017c2c:	3614      	adds	r6, #20
 8017c2e:	f104 0214 	add.w	r2, r4, #20
 8017c32:	eb02 0c83 	add.w	ip, r2, r3, lsl #2
 8017c36:	f100 0514 	add.w	r5, r0, #20
 8017c3a:	eb06 0e87 	add.w	lr, r6, r7, lsl #2
 8017c3e:	2300      	movs	r3, #0
 8017c40:	f856 8b04 	ldr.w	r8, [r6], #4
 8017c44:	f852 4b04 	ldr.w	r4, [r2], #4
 8017c48:	fa13 f388 	uxtah	r3, r3, r8
 8017c4c:	b2a1      	uxth	r1, r4
 8017c4e:	0c24      	lsrs	r4, r4, #16
 8017c50:	1a59      	subs	r1, r3, r1
 8017c52:	ebc4 4318 	rsb	r3, r4, r8, lsr #16
 8017c56:	eb03 4321 	add.w	r3, r3, r1, asr #16
 8017c5a:	b289      	uxth	r1, r1
 8017c5c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8017c60:	4594      	cmp	ip, r2
 8017c62:	f845 1b04 	str.w	r1, [r5], #4
 8017c66:	ea4f 4323 	mov.w	r3, r3, asr #16
 8017c6a:	4634      	mov	r4, r6
 8017c6c:	d8e8      	bhi.n	8017c40 <__mdiff+0x40>
 8017c6e:	45b6      	cmp	lr, r6
 8017c70:	46ac      	mov	ip, r5
 8017c72:	d915      	bls.n	8017ca0 <__mdiff+0xa0>
 8017c74:	f854 2b04 	ldr.w	r2, [r4], #4
 8017c78:	fa13 f182 	uxtah	r1, r3, r2
 8017c7c:	0c13      	lsrs	r3, r2, #16
 8017c7e:	eb03 4321 	add.w	r3, r3, r1, asr #16
 8017c82:	b289      	uxth	r1, r1
 8017c84:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8017c88:	45a6      	cmp	lr, r4
 8017c8a:	f845 1b04 	str.w	r1, [r5], #4
 8017c8e:	ea4f 4323 	mov.w	r3, r3, asr #16
 8017c92:	d8ef      	bhi.n	8017c74 <__mdiff+0x74>
 8017c94:	43f6      	mvns	r6, r6
 8017c96:	4476      	add	r6, lr
 8017c98:	f026 0503 	bic.w	r5, r6, #3
 8017c9c:	3504      	adds	r5, #4
 8017c9e:	4465      	add	r5, ip
 8017ca0:	3d04      	subs	r5, #4
 8017ca2:	b921      	cbnz	r1, 8017cae <__mdiff+0xae>
 8017ca4:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 8017ca8:	3f01      	subs	r7, #1
 8017caa:	2b00      	cmp	r3, #0
 8017cac:	d0fa      	beq.n	8017ca4 <__mdiff+0xa4>
 8017cae:	6107      	str	r7, [r0, #16]
 8017cb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017cb4:	4633      	mov	r3, r6
 8017cb6:	f04f 0801 	mov.w	r8, #1
 8017cba:	4626      	mov	r6, r4
 8017cbc:	461c      	mov	r4, r3
 8017cbe:	e7ad      	b.n	8017c1c <__mdiff+0x1c>
 8017cc0:	4628      	mov	r0, r5
 8017cc2:	4639      	mov	r1, r7
 8017cc4:	f7ff fd6e 	bl	80177a4 <_Balloc>
 8017cc8:	2301      	movs	r3, #1
 8017cca:	6147      	str	r7, [r0, #20]
 8017ccc:	6103      	str	r3, [r0, #16]
 8017cce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017cd2:	bf00      	nop

08017cd4 <__d2b>:
 8017cd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017cd8:	b082      	sub	sp, #8
 8017cda:	2101      	movs	r1, #1
 8017cdc:	461c      	mov	r4, r3
 8017cde:	f3c3 570a 	ubfx	r7, r3, #20, #11
 8017ce2:	4615      	mov	r5, r2
 8017ce4:	9e08      	ldr	r6, [sp, #32]
 8017ce6:	f7ff fd5d 	bl	80177a4 <_Balloc>
 8017cea:	f3c4 0413 	ubfx	r4, r4, #0, #20
 8017cee:	4680      	mov	r8, r0
 8017cf0:	b10f      	cbz	r7, 8017cf6 <__d2b+0x22>
 8017cf2:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
 8017cf6:	9401      	str	r4, [sp, #4]
 8017cf8:	b31d      	cbz	r5, 8017d42 <__d2b+0x6e>
 8017cfa:	a802      	add	r0, sp, #8
 8017cfc:	f840 5d08 	str.w	r5, [r0, #-8]!
 8017d00:	f7ff fde2 	bl	80178c8 <__lo0bits>
 8017d04:	2800      	cmp	r0, #0
 8017d06:	d134      	bne.n	8017d72 <__d2b+0x9e>
 8017d08:	e89d 000c 	ldmia.w	sp, {r2, r3}
 8017d0c:	f8c8 2014 	str.w	r2, [r8, #20]
 8017d10:	2b00      	cmp	r3, #0
 8017d12:	bf14      	ite	ne
 8017d14:	2402      	movne	r4, #2
 8017d16:	2401      	moveq	r4, #1
 8017d18:	f8c8 3018 	str.w	r3, [r8, #24]
 8017d1c:	f8c8 4010 	str.w	r4, [r8, #16]
 8017d20:	b9df      	cbnz	r7, 8017d5a <__d2b+0x86>
 8017d22:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 8017d26:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8017d2a:	6030      	str	r0, [r6, #0]
 8017d2c:	6918      	ldr	r0, [r3, #16]
 8017d2e:	f7ff fdab 	bl	8017888 <__hi0bits>
 8017d32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017d34:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
 8017d38:	6018      	str	r0, [r3, #0]
 8017d3a:	4640      	mov	r0, r8
 8017d3c:	b002      	add	sp, #8
 8017d3e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017d42:	a801      	add	r0, sp, #4
 8017d44:	f7ff fdc0 	bl	80178c8 <__lo0bits>
 8017d48:	2401      	movs	r4, #1
 8017d4a:	9b01      	ldr	r3, [sp, #4]
 8017d4c:	f8c8 3014 	str.w	r3, [r8, #20]
 8017d50:	3020      	adds	r0, #32
 8017d52:	f8c8 4010 	str.w	r4, [r8, #16]
 8017d56:	2f00      	cmp	r7, #0
 8017d58:	d0e3      	beq.n	8017d22 <__d2b+0x4e>
 8017d5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017d5c:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
 8017d60:	4407      	add	r7, r0
 8017d62:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8017d66:	6037      	str	r7, [r6, #0]
 8017d68:	6018      	str	r0, [r3, #0]
 8017d6a:	4640      	mov	r0, r8
 8017d6c:	b002      	add	sp, #8
 8017d6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017d72:	e89d 000c 	ldmia.w	sp, {r2, r3}
 8017d76:	f1c0 0120 	rsb	r1, r0, #32
 8017d7a:	fa03 f101 	lsl.w	r1, r3, r1
 8017d7e:	430a      	orrs	r2, r1
 8017d80:	40c3      	lsrs	r3, r0
 8017d82:	9301      	str	r3, [sp, #4]
 8017d84:	f8c8 2014 	str.w	r2, [r8, #20]
 8017d88:	e7c2      	b.n	8017d10 <__d2b+0x3c>
 8017d8a:	bf00      	nop

08017d8c <_realloc_r>:
 8017d8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017d90:	4617      	mov	r7, r2
 8017d92:	b083      	sub	sp, #12
 8017d94:	460e      	mov	r6, r1
 8017d96:	2900      	cmp	r1, #0
 8017d98:	f000 80e7 	beq.w	8017f6a <_realloc_r+0x1de>
 8017d9c:	4681      	mov	r9, r0
 8017d9e:	f107 050b 	add.w	r5, r7, #11
 8017da2:	f7ff fcfb 	bl	801779c <__malloc_lock>
 8017da6:	f856 3c04 	ldr.w	r3, [r6, #-4]
 8017daa:	2d16      	cmp	r5, #22
 8017dac:	f023 0403 	bic.w	r4, r3, #3
 8017db0:	f1a6 0808 	sub.w	r8, r6, #8
 8017db4:	d84c      	bhi.n	8017e50 <_realloc_r+0xc4>
 8017db6:	2210      	movs	r2, #16
 8017db8:	4615      	mov	r5, r2
 8017dba:	42af      	cmp	r7, r5
 8017dbc:	d84d      	bhi.n	8017e5a <_realloc_r+0xce>
 8017dbe:	4294      	cmp	r4, r2
 8017dc0:	f280 8084 	bge.w	8017ecc <_realloc_r+0x140>
 8017dc4:	f8df b3ac 	ldr.w	fp, [pc, #940]	; 8018174 <_realloc_r+0x3e8>
 8017dc8:	f8db 0008 	ldr.w	r0, [fp, #8]
 8017dcc:	eb08 0104 	add.w	r1, r8, r4
 8017dd0:	4288      	cmp	r0, r1
 8017dd2:	f000 80d6 	beq.w	8017f82 <_realloc_r+0x1f6>
 8017dd6:	6848      	ldr	r0, [r1, #4]
 8017dd8:	f020 0e01 	bic.w	lr, r0, #1
 8017ddc:	448e      	add	lr, r1
 8017dde:	f8de e004 	ldr.w	lr, [lr, #4]
 8017de2:	f01e 0f01 	tst.w	lr, #1
 8017de6:	d13f      	bne.n	8017e68 <_realloc_r+0xdc>
 8017de8:	f020 0003 	bic.w	r0, r0, #3
 8017dec:	4420      	add	r0, r4
 8017dee:	4290      	cmp	r0, r2
 8017df0:	f280 80c1 	bge.w	8017f76 <_realloc_r+0x1ea>
 8017df4:	07db      	lsls	r3, r3, #31
 8017df6:	f100 808f 	bmi.w	8017f18 <_realloc_r+0x18c>
 8017dfa:	f856 3c08 	ldr.w	r3, [r6, #-8]
 8017dfe:	ebc3 0a08 	rsb	sl, r3, r8
 8017e02:	f8da 3004 	ldr.w	r3, [sl, #4]
 8017e06:	f023 0303 	bic.w	r3, r3, #3
 8017e0a:	eb00 0e03 	add.w	lr, r0, r3
 8017e0e:	4596      	cmp	lr, r2
 8017e10:	db34      	blt.n	8017e7c <_realloc_r+0xf0>
 8017e12:	68cb      	ldr	r3, [r1, #12]
 8017e14:	688a      	ldr	r2, [r1, #8]
 8017e16:	4657      	mov	r7, sl
 8017e18:	60d3      	str	r3, [r2, #12]
 8017e1a:	609a      	str	r2, [r3, #8]
 8017e1c:	f857 1f08 	ldr.w	r1, [r7, #8]!
 8017e20:	f8da 300c 	ldr.w	r3, [sl, #12]
 8017e24:	60cb      	str	r3, [r1, #12]
 8017e26:	1f22      	subs	r2, r4, #4
 8017e28:	2a24      	cmp	r2, #36	; 0x24
 8017e2a:	6099      	str	r1, [r3, #8]
 8017e2c:	f200 8136 	bhi.w	801809c <_realloc_r+0x310>
 8017e30:	2a13      	cmp	r2, #19
 8017e32:	f240 80fd 	bls.w	8018030 <_realloc_r+0x2a4>
 8017e36:	6833      	ldr	r3, [r6, #0]
 8017e38:	f8ca 3008 	str.w	r3, [sl, #8]
 8017e3c:	6873      	ldr	r3, [r6, #4]
 8017e3e:	f8ca 300c 	str.w	r3, [sl, #12]
 8017e42:	2a1b      	cmp	r2, #27
 8017e44:	f200 8140 	bhi.w	80180c8 <_realloc_r+0x33c>
 8017e48:	3608      	adds	r6, #8
 8017e4a:	f10a 0310 	add.w	r3, sl, #16
 8017e4e:	e0f0      	b.n	8018032 <_realloc_r+0x2a6>
 8017e50:	f025 0507 	bic.w	r5, r5, #7
 8017e54:	2d00      	cmp	r5, #0
 8017e56:	462a      	mov	r2, r5
 8017e58:	daaf      	bge.n	8017dba <_realloc_r+0x2e>
 8017e5a:	230c      	movs	r3, #12
 8017e5c:	2000      	movs	r0, #0
 8017e5e:	f8c9 3000 	str.w	r3, [r9]
 8017e62:	b003      	add	sp, #12
 8017e64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017e68:	07d9      	lsls	r1, r3, #31
 8017e6a:	d455      	bmi.n	8017f18 <_realloc_r+0x18c>
 8017e6c:	f856 3c08 	ldr.w	r3, [r6, #-8]
 8017e70:	ebc3 0a08 	rsb	sl, r3, r8
 8017e74:	f8da 3004 	ldr.w	r3, [sl, #4]
 8017e78:	f023 0303 	bic.w	r3, r3, #3
 8017e7c:	4423      	add	r3, r4
 8017e7e:	4293      	cmp	r3, r2
 8017e80:	db4a      	blt.n	8017f18 <_realloc_r+0x18c>
 8017e82:	4657      	mov	r7, sl
 8017e84:	f8da 100c 	ldr.w	r1, [sl, #12]
 8017e88:	f857 0f08 	ldr.w	r0, [r7, #8]!
 8017e8c:	1f22      	subs	r2, r4, #4
 8017e8e:	2a24      	cmp	r2, #36	; 0x24
 8017e90:	60c1      	str	r1, [r0, #12]
 8017e92:	6088      	str	r0, [r1, #8]
 8017e94:	f200 810e 	bhi.w	80180b4 <_realloc_r+0x328>
 8017e98:	2a13      	cmp	r2, #19
 8017e9a:	f240 8109 	bls.w	80180b0 <_realloc_r+0x324>
 8017e9e:	6831      	ldr	r1, [r6, #0]
 8017ea0:	f8ca 1008 	str.w	r1, [sl, #8]
 8017ea4:	6871      	ldr	r1, [r6, #4]
 8017ea6:	f8ca 100c 	str.w	r1, [sl, #12]
 8017eaa:	2a1b      	cmp	r2, #27
 8017eac:	f200 8121 	bhi.w	80180f2 <_realloc_r+0x366>
 8017eb0:	3608      	adds	r6, #8
 8017eb2:	f10a 0210 	add.w	r2, sl, #16
 8017eb6:	6831      	ldr	r1, [r6, #0]
 8017eb8:	6011      	str	r1, [r2, #0]
 8017eba:	6871      	ldr	r1, [r6, #4]
 8017ebc:	6051      	str	r1, [r2, #4]
 8017ebe:	68b1      	ldr	r1, [r6, #8]
 8017ec0:	6091      	str	r1, [r2, #8]
 8017ec2:	461c      	mov	r4, r3
 8017ec4:	f8da 3004 	ldr.w	r3, [sl, #4]
 8017ec8:	463e      	mov	r6, r7
 8017eca:	46d0      	mov	r8, sl
 8017ecc:	1b62      	subs	r2, r4, r5
 8017ece:	2a0f      	cmp	r2, #15
 8017ed0:	f003 0301 	and.w	r3, r3, #1
 8017ed4:	d80e      	bhi.n	8017ef4 <_realloc_r+0x168>
 8017ed6:	4323      	orrs	r3, r4
 8017ed8:	4444      	add	r4, r8
 8017eda:	f8c8 3004 	str.w	r3, [r8, #4]
 8017ede:	6863      	ldr	r3, [r4, #4]
 8017ee0:	f043 0301 	orr.w	r3, r3, #1
 8017ee4:	6063      	str	r3, [r4, #4]
 8017ee6:	4648      	mov	r0, r9
 8017ee8:	f7ff fc5a 	bl	80177a0 <__malloc_unlock>
 8017eec:	4630      	mov	r0, r6
 8017eee:	b003      	add	sp, #12
 8017ef0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017ef4:	eb08 0105 	add.w	r1, r8, r5
 8017ef8:	431d      	orrs	r5, r3
 8017efa:	f042 0301 	orr.w	r3, r2, #1
 8017efe:	440a      	add	r2, r1
 8017f00:	f8c8 5004 	str.w	r5, [r8, #4]
 8017f04:	604b      	str	r3, [r1, #4]
 8017f06:	6853      	ldr	r3, [r2, #4]
 8017f08:	f043 0301 	orr.w	r3, r3, #1
 8017f0c:	3108      	adds	r1, #8
 8017f0e:	6053      	str	r3, [r2, #4]
 8017f10:	4648      	mov	r0, r9
 8017f12:	f7fe fe5f 	bl	8016bd4 <_free_r>
 8017f16:	e7e6      	b.n	8017ee6 <_realloc_r+0x15a>
 8017f18:	4639      	mov	r1, r7
 8017f1a:	4648      	mov	r0, r9
 8017f1c:	f7ff f966 	bl	80171ec <_malloc_r>
 8017f20:	4607      	mov	r7, r0
 8017f22:	b1d8      	cbz	r0, 8017f5c <_realloc_r+0x1d0>
 8017f24:	f856 3c04 	ldr.w	r3, [r6, #-4]
 8017f28:	f023 0201 	bic.w	r2, r3, #1
 8017f2c:	4442      	add	r2, r8
 8017f2e:	f1a0 0108 	sub.w	r1, r0, #8
 8017f32:	4291      	cmp	r1, r2
 8017f34:	f000 80ac 	beq.w	8018090 <_realloc_r+0x304>
 8017f38:	1f22      	subs	r2, r4, #4
 8017f3a:	2a24      	cmp	r2, #36	; 0x24
 8017f3c:	f200 8099 	bhi.w	8018072 <_realloc_r+0x2e6>
 8017f40:	2a13      	cmp	r2, #19
 8017f42:	d86a      	bhi.n	801801a <_realloc_r+0x28e>
 8017f44:	4603      	mov	r3, r0
 8017f46:	4632      	mov	r2, r6
 8017f48:	6811      	ldr	r1, [r2, #0]
 8017f4a:	6019      	str	r1, [r3, #0]
 8017f4c:	6851      	ldr	r1, [r2, #4]
 8017f4e:	6059      	str	r1, [r3, #4]
 8017f50:	6892      	ldr	r2, [r2, #8]
 8017f52:	609a      	str	r2, [r3, #8]
 8017f54:	4631      	mov	r1, r6
 8017f56:	4648      	mov	r0, r9
 8017f58:	f7fe fe3c 	bl	8016bd4 <_free_r>
 8017f5c:	4648      	mov	r0, r9
 8017f5e:	f7ff fc1f 	bl	80177a0 <__malloc_unlock>
 8017f62:	4638      	mov	r0, r7
 8017f64:	b003      	add	sp, #12
 8017f66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017f6a:	4611      	mov	r1, r2
 8017f6c:	b003      	add	sp, #12
 8017f6e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f72:	f7ff b93b 	b.w	80171ec <_malloc_r>
 8017f76:	68ca      	ldr	r2, [r1, #12]
 8017f78:	6889      	ldr	r1, [r1, #8]
 8017f7a:	4604      	mov	r4, r0
 8017f7c:	60ca      	str	r2, [r1, #12]
 8017f7e:	6091      	str	r1, [r2, #8]
 8017f80:	e7a4      	b.n	8017ecc <_realloc_r+0x140>
 8017f82:	6841      	ldr	r1, [r0, #4]
 8017f84:	f021 0103 	bic.w	r1, r1, #3
 8017f88:	4421      	add	r1, r4
 8017f8a:	f105 0010 	add.w	r0, r5, #16
 8017f8e:	4281      	cmp	r1, r0
 8017f90:	da5b      	bge.n	801804a <_realloc_r+0x2be>
 8017f92:	07db      	lsls	r3, r3, #31
 8017f94:	d4c0      	bmi.n	8017f18 <_realloc_r+0x18c>
 8017f96:	f856 3c08 	ldr.w	r3, [r6, #-8]
 8017f9a:	ebc3 0a08 	rsb	sl, r3, r8
 8017f9e:	f8da 3004 	ldr.w	r3, [sl, #4]
 8017fa2:	f023 0303 	bic.w	r3, r3, #3
 8017fa6:	eb01 0c03 	add.w	ip, r1, r3
 8017faa:	4560      	cmp	r0, ip
 8017fac:	f73f af66 	bgt.w	8017e7c <_realloc_r+0xf0>
 8017fb0:	4657      	mov	r7, sl
 8017fb2:	f8da 300c 	ldr.w	r3, [sl, #12]
 8017fb6:	f857 1f08 	ldr.w	r1, [r7, #8]!
 8017fba:	1f22      	subs	r2, r4, #4
 8017fbc:	2a24      	cmp	r2, #36	; 0x24
 8017fbe:	60cb      	str	r3, [r1, #12]
 8017fc0:	6099      	str	r1, [r3, #8]
 8017fc2:	f200 80b8 	bhi.w	8018136 <_realloc_r+0x3aa>
 8017fc6:	2a13      	cmp	r2, #19
 8017fc8:	f240 80a9 	bls.w	801811e <_realloc_r+0x392>
 8017fcc:	6833      	ldr	r3, [r6, #0]
 8017fce:	f8ca 3008 	str.w	r3, [sl, #8]
 8017fd2:	6873      	ldr	r3, [r6, #4]
 8017fd4:	f8ca 300c 	str.w	r3, [sl, #12]
 8017fd8:	2a1b      	cmp	r2, #27
 8017fda:	f200 80b5 	bhi.w	8018148 <_realloc_r+0x3bc>
 8017fde:	3608      	adds	r6, #8
 8017fe0:	f10a 0310 	add.w	r3, sl, #16
 8017fe4:	6832      	ldr	r2, [r6, #0]
 8017fe6:	601a      	str	r2, [r3, #0]
 8017fe8:	6872      	ldr	r2, [r6, #4]
 8017fea:	605a      	str	r2, [r3, #4]
 8017fec:	68b2      	ldr	r2, [r6, #8]
 8017fee:	609a      	str	r2, [r3, #8]
 8017ff0:	eb0a 0205 	add.w	r2, sl, r5
 8017ff4:	ebc5 030c 	rsb	r3, r5, ip
 8017ff8:	f043 0301 	orr.w	r3, r3, #1
 8017ffc:	f8cb 2008 	str.w	r2, [fp, #8]
 8018000:	6053      	str	r3, [r2, #4]
 8018002:	f8da 3004 	ldr.w	r3, [sl, #4]
 8018006:	f003 0301 	and.w	r3, r3, #1
 801800a:	431d      	orrs	r5, r3
 801800c:	4648      	mov	r0, r9
 801800e:	f8ca 5004 	str.w	r5, [sl, #4]
 8018012:	f7ff fbc5 	bl	80177a0 <__malloc_unlock>
 8018016:	4638      	mov	r0, r7
 8018018:	e769      	b.n	8017eee <_realloc_r+0x162>
 801801a:	6833      	ldr	r3, [r6, #0]
 801801c:	6003      	str	r3, [r0, #0]
 801801e:	6873      	ldr	r3, [r6, #4]
 8018020:	6043      	str	r3, [r0, #4]
 8018022:	2a1b      	cmp	r2, #27
 8018024:	d829      	bhi.n	801807a <_realloc_r+0x2ee>
 8018026:	f100 0308 	add.w	r3, r0, #8
 801802a:	f106 0208 	add.w	r2, r6, #8
 801802e:	e78b      	b.n	8017f48 <_realloc_r+0x1bc>
 8018030:	463b      	mov	r3, r7
 8018032:	6832      	ldr	r2, [r6, #0]
 8018034:	601a      	str	r2, [r3, #0]
 8018036:	6872      	ldr	r2, [r6, #4]
 8018038:	605a      	str	r2, [r3, #4]
 801803a:	68b2      	ldr	r2, [r6, #8]
 801803c:	609a      	str	r2, [r3, #8]
 801803e:	463e      	mov	r6, r7
 8018040:	4674      	mov	r4, lr
 8018042:	f8da 3004 	ldr.w	r3, [sl, #4]
 8018046:	46d0      	mov	r8, sl
 8018048:	e740      	b.n	8017ecc <_realloc_r+0x140>
 801804a:	eb08 0205 	add.w	r2, r8, r5
 801804e:	1b4b      	subs	r3, r1, r5
 8018050:	f043 0301 	orr.w	r3, r3, #1
 8018054:	f8cb 2008 	str.w	r2, [fp, #8]
 8018058:	6053      	str	r3, [r2, #4]
 801805a:	f856 3c04 	ldr.w	r3, [r6, #-4]
 801805e:	f003 0301 	and.w	r3, r3, #1
 8018062:	431d      	orrs	r5, r3
 8018064:	4648      	mov	r0, r9
 8018066:	f846 5c04 	str.w	r5, [r6, #-4]
 801806a:	f7ff fb99 	bl	80177a0 <__malloc_unlock>
 801806e:	4630      	mov	r0, r6
 8018070:	e73d      	b.n	8017eee <_realloc_r+0x162>
 8018072:	4631      	mov	r1, r6
 8018074:	f7fa fdaa 	bl	8012bcc <memmove>
 8018078:	e76c      	b.n	8017f54 <_realloc_r+0x1c8>
 801807a:	68b3      	ldr	r3, [r6, #8]
 801807c:	6083      	str	r3, [r0, #8]
 801807e:	68f3      	ldr	r3, [r6, #12]
 8018080:	60c3      	str	r3, [r0, #12]
 8018082:	2a24      	cmp	r2, #36	; 0x24
 8018084:	d02c      	beq.n	80180e0 <_realloc_r+0x354>
 8018086:	f100 0310 	add.w	r3, r0, #16
 801808a:	f106 0210 	add.w	r2, r6, #16
 801808e:	e75b      	b.n	8017f48 <_realloc_r+0x1bc>
 8018090:	f850 2c04 	ldr.w	r2, [r0, #-4]
 8018094:	f022 0203 	bic.w	r2, r2, #3
 8018098:	4414      	add	r4, r2
 801809a:	e717      	b.n	8017ecc <_realloc_r+0x140>
 801809c:	4631      	mov	r1, r6
 801809e:	4638      	mov	r0, r7
 80180a0:	4674      	mov	r4, lr
 80180a2:	463e      	mov	r6, r7
 80180a4:	f7fa fd92 	bl	8012bcc <memmove>
 80180a8:	46d0      	mov	r8, sl
 80180aa:	f8da 3004 	ldr.w	r3, [sl, #4]
 80180ae:	e70d      	b.n	8017ecc <_realloc_r+0x140>
 80180b0:	463a      	mov	r2, r7
 80180b2:	e700      	b.n	8017eb6 <_realloc_r+0x12a>
 80180b4:	4631      	mov	r1, r6
 80180b6:	4638      	mov	r0, r7
 80180b8:	461c      	mov	r4, r3
 80180ba:	463e      	mov	r6, r7
 80180bc:	f7fa fd86 	bl	8012bcc <memmove>
 80180c0:	46d0      	mov	r8, sl
 80180c2:	f8da 3004 	ldr.w	r3, [sl, #4]
 80180c6:	e701      	b.n	8017ecc <_realloc_r+0x140>
 80180c8:	68b3      	ldr	r3, [r6, #8]
 80180ca:	f8ca 3010 	str.w	r3, [sl, #16]
 80180ce:	68f3      	ldr	r3, [r6, #12]
 80180d0:	f8ca 3014 	str.w	r3, [sl, #20]
 80180d4:	2a24      	cmp	r2, #36	; 0x24
 80180d6:	d018      	beq.n	801810a <_realloc_r+0x37e>
 80180d8:	3610      	adds	r6, #16
 80180da:	f10a 0318 	add.w	r3, sl, #24
 80180de:	e7a8      	b.n	8018032 <_realloc_r+0x2a6>
 80180e0:	6933      	ldr	r3, [r6, #16]
 80180e2:	6103      	str	r3, [r0, #16]
 80180e4:	6973      	ldr	r3, [r6, #20]
 80180e6:	6143      	str	r3, [r0, #20]
 80180e8:	f106 0218 	add.w	r2, r6, #24
 80180ec:	f100 0318 	add.w	r3, r0, #24
 80180f0:	e72a      	b.n	8017f48 <_realloc_r+0x1bc>
 80180f2:	68b1      	ldr	r1, [r6, #8]
 80180f4:	f8ca 1010 	str.w	r1, [sl, #16]
 80180f8:	68f1      	ldr	r1, [r6, #12]
 80180fa:	f8ca 1014 	str.w	r1, [sl, #20]
 80180fe:	2a24      	cmp	r2, #36	; 0x24
 8018100:	d00f      	beq.n	8018122 <_realloc_r+0x396>
 8018102:	3610      	adds	r6, #16
 8018104:	f10a 0218 	add.w	r2, sl, #24
 8018108:	e6d5      	b.n	8017eb6 <_realloc_r+0x12a>
 801810a:	6933      	ldr	r3, [r6, #16]
 801810c:	f8ca 3018 	str.w	r3, [sl, #24]
 8018110:	6973      	ldr	r3, [r6, #20]
 8018112:	f8ca 301c 	str.w	r3, [sl, #28]
 8018116:	3618      	adds	r6, #24
 8018118:	f10a 0320 	add.w	r3, sl, #32
 801811c:	e789      	b.n	8018032 <_realloc_r+0x2a6>
 801811e:	463b      	mov	r3, r7
 8018120:	e760      	b.n	8017fe4 <_realloc_r+0x258>
 8018122:	6932      	ldr	r2, [r6, #16]
 8018124:	f8ca 2018 	str.w	r2, [sl, #24]
 8018128:	6972      	ldr	r2, [r6, #20]
 801812a:	f8ca 201c 	str.w	r2, [sl, #28]
 801812e:	3618      	adds	r6, #24
 8018130:	f10a 0220 	add.w	r2, sl, #32
 8018134:	e6bf      	b.n	8017eb6 <_realloc_r+0x12a>
 8018136:	4631      	mov	r1, r6
 8018138:	4638      	mov	r0, r7
 801813a:	f8cd c004 	str.w	ip, [sp, #4]
 801813e:	f7fa fd45 	bl	8012bcc <memmove>
 8018142:	f8dd c004 	ldr.w	ip, [sp, #4]
 8018146:	e753      	b.n	8017ff0 <_realloc_r+0x264>
 8018148:	68b3      	ldr	r3, [r6, #8]
 801814a:	f8ca 3010 	str.w	r3, [sl, #16]
 801814e:	68f3      	ldr	r3, [r6, #12]
 8018150:	f8ca 3014 	str.w	r3, [sl, #20]
 8018154:	2a24      	cmp	r2, #36	; 0x24
 8018156:	d003      	beq.n	8018160 <_realloc_r+0x3d4>
 8018158:	3610      	adds	r6, #16
 801815a:	f10a 0318 	add.w	r3, sl, #24
 801815e:	e741      	b.n	8017fe4 <_realloc_r+0x258>
 8018160:	6933      	ldr	r3, [r6, #16]
 8018162:	f8ca 3018 	str.w	r3, [sl, #24]
 8018166:	6973      	ldr	r3, [r6, #20]
 8018168:	f8ca 301c 	str.w	r3, [sl, #28]
 801816c:	3618      	adds	r6, #24
 801816e:	f10a 0320 	add.w	r3, sl, #32
 8018172:	e737      	b.n	8017fe4 <_realloc_r+0x258>
 8018174:	20000768 	.word	0x20000768

08018178 <__fpclassifyd>:
 8018178:	b410      	push	{r4}
 801817a:	f031 4400 	bics.w	r4, r1, #2147483648	; 0x80000000
 801817e:	d008      	beq.n	8018192 <__fpclassifyd+0x1a>
 8018180:	4b11      	ldr	r3, [pc, #68]	; (80181c8 <__fpclassifyd+0x50>)
 8018182:	f5a1 1280 	sub.w	r2, r1, #1048576	; 0x100000
 8018186:	429a      	cmp	r2, r3
 8018188:	d808      	bhi.n	801819c <__fpclassifyd+0x24>
 801818a:	2004      	movs	r0, #4
 801818c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018190:	4770      	bx	lr
 8018192:	b918      	cbnz	r0, 801819c <__fpclassifyd+0x24>
 8018194:	2002      	movs	r0, #2
 8018196:	f85d 4b04 	ldr.w	r4, [sp], #4
 801819a:	4770      	bx	lr
 801819c:	f101 41ff 	add.w	r1, r1, #2139095040	; 0x7f800000
 80181a0:	4b09      	ldr	r3, [pc, #36]	; (80181c8 <__fpclassifyd+0x50>)
 80181a2:	f501 01e0 	add.w	r1, r1, #7340032	; 0x700000
 80181a6:	4299      	cmp	r1, r3
 80181a8:	d9ef      	bls.n	801818a <__fpclassifyd+0x12>
 80181aa:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
 80181ae:	d201      	bcs.n	80181b4 <__fpclassifyd+0x3c>
 80181b0:	2003      	movs	r0, #3
 80181b2:	e7eb      	b.n	801818c <__fpclassifyd+0x14>
 80181b4:	4b05      	ldr	r3, [pc, #20]	; (80181cc <__fpclassifyd+0x54>)
 80181b6:	429c      	cmp	r4, r3
 80181b8:	d001      	beq.n	80181be <__fpclassifyd+0x46>
 80181ba:	2000      	movs	r0, #0
 80181bc:	e7e6      	b.n	801818c <__fpclassifyd+0x14>
 80181be:	fab0 f080 	clz	r0, r0
 80181c2:	0940      	lsrs	r0, r0, #5
 80181c4:	e7e2      	b.n	801818c <__fpclassifyd+0x14>
 80181c6:	bf00      	nop
 80181c8:	7fdfffff 	.word	0x7fdfffff
 80181cc:	7ff00000 	.word	0x7ff00000

080181d0 <_sbrk_r>:
 80181d0:	b538      	push	{r3, r4, r5, lr}
 80181d2:	4c07      	ldr	r4, [pc, #28]	; (80181f0 <_sbrk_r+0x20>)
 80181d4:	2300      	movs	r3, #0
 80181d6:	4605      	mov	r5, r0
 80181d8:	4608      	mov	r0, r1
 80181da:	6023      	str	r3, [r4, #0]
 80181dc:	f7e9 fab2 	bl	8001744 <_sbrk>
 80181e0:	1c43      	adds	r3, r0, #1
 80181e2:	d000      	beq.n	80181e6 <_sbrk_r+0x16>
 80181e4:	bd38      	pop	{r3, r4, r5, pc}
 80181e6:	6823      	ldr	r3, [r4, #0]
 80181e8:	2b00      	cmp	r3, #0
 80181ea:	d0fb      	beq.n	80181e4 <_sbrk_r+0x14>
 80181ec:	602b      	str	r3, [r5, #0]
 80181ee:	bd38      	pop	{r3, r4, r5, pc}
 80181f0:	2000e77c 	.word	0x2000e77c

080181f4 <__sread>:
 80181f4:	b510      	push	{r4, lr}
 80181f6:	460c      	mov	r4, r1
 80181f8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80181fc:	f000 fa3a 	bl	8018674 <_read_r>
 8018200:	2800      	cmp	r0, #0
 8018202:	db03      	blt.n	801820c <__sread+0x18>
 8018204:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8018206:	4403      	add	r3, r0
 8018208:	6523      	str	r3, [r4, #80]	; 0x50
 801820a:	bd10      	pop	{r4, pc}
 801820c:	89a3      	ldrh	r3, [r4, #12]
 801820e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8018212:	81a3      	strh	r3, [r4, #12]
 8018214:	bd10      	pop	{r4, pc}
 8018216:	bf00      	nop

08018218 <__swrite>:
 8018218:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801821c:	4616      	mov	r6, r2
 801821e:	898a      	ldrh	r2, [r1, #12]
 8018220:	461d      	mov	r5, r3
 8018222:	05d3      	lsls	r3, r2, #23
 8018224:	460c      	mov	r4, r1
 8018226:	4607      	mov	r7, r0
 8018228:	d506      	bpl.n	8018238 <__swrite+0x20>
 801822a:	2200      	movs	r2, #0
 801822c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8018230:	2302      	movs	r3, #2
 8018232:	f000 fa0b 	bl	801864c <_lseek_r>
 8018236:	89a2      	ldrh	r2, [r4, #12]
 8018238:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801823c:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8018240:	81a2      	strh	r2, [r4, #12]
 8018242:	4638      	mov	r0, r7
 8018244:	4632      	mov	r2, r6
 8018246:	462b      	mov	r3, r5
 8018248:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801824c:	f000 b8de 	b.w	801840c <_write_r>

08018250 <__sseek>:
 8018250:	b510      	push	{r4, lr}
 8018252:	460c      	mov	r4, r1
 8018254:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8018258:	f000 f9f8 	bl	801864c <_lseek_r>
 801825c:	89a3      	ldrh	r3, [r4, #12]
 801825e:	1c42      	adds	r2, r0, #1
 8018260:	bf0e      	itee	eq
 8018262:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8018266:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801826a:	6520      	strne	r0, [r4, #80]	; 0x50
 801826c:	81a3      	strh	r3, [r4, #12]
 801826e:	bd10      	pop	{r4, pc}

08018270 <__sclose>:
 8018270:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8018274:	f000 b90e 	b.w	8018494 <_close_r>

08018278 <__ssprint_r>:
 8018278:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801827c:	6893      	ldr	r3, [r2, #8]
 801827e:	f8d2 8000 	ldr.w	r8, [r2]
 8018282:	b083      	sub	sp, #12
 8018284:	4691      	mov	r9, r2
 8018286:	2b00      	cmp	r3, #0
 8018288:	d072      	beq.n	8018370 <__ssprint_r+0xf8>
 801828a:	4607      	mov	r7, r0
 801828c:	f04f 0b00 	mov.w	fp, #0
 8018290:	6808      	ldr	r0, [r1, #0]
 8018292:	688b      	ldr	r3, [r1, #8]
 8018294:	460d      	mov	r5, r1
 8018296:	465c      	mov	r4, fp
 8018298:	2c00      	cmp	r4, #0
 801829a:	d045      	beq.n	8018328 <__ssprint_r+0xb0>
 801829c:	429c      	cmp	r4, r3
 801829e:	461e      	mov	r6, r3
 80182a0:	469a      	mov	sl, r3
 80182a2:	d348      	bcc.n	8018336 <__ssprint_r+0xbe>
 80182a4:	89ab      	ldrh	r3, [r5, #12]
 80182a6:	f413 6f90 	tst.w	r3, #1152	; 0x480
 80182aa:	d02d      	beq.n	8018308 <__ssprint_r+0x90>
 80182ac:	696e      	ldr	r6, [r5, #20]
 80182ae:	6929      	ldr	r1, [r5, #16]
 80182b0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80182b4:	ebc1 0a00 	rsb	sl, r1, r0
 80182b8:	eb06 76d6 	add.w	r6, r6, r6, lsr #31
 80182bc:	1c60      	adds	r0, r4, #1
 80182be:	1076      	asrs	r6, r6, #1
 80182c0:	4450      	add	r0, sl
 80182c2:	4286      	cmp	r6, r0
 80182c4:	4632      	mov	r2, r6
 80182c6:	bf3c      	itt	cc
 80182c8:	4606      	movcc	r6, r0
 80182ca:	4632      	movcc	r2, r6
 80182cc:	055b      	lsls	r3, r3, #21
 80182ce:	d535      	bpl.n	801833c <__ssprint_r+0xc4>
 80182d0:	4611      	mov	r1, r2
 80182d2:	4638      	mov	r0, r7
 80182d4:	f7fe ff8a 	bl	80171ec <_malloc_r>
 80182d8:	2800      	cmp	r0, #0
 80182da:	d039      	beq.n	8018350 <__ssprint_r+0xd8>
 80182dc:	4652      	mov	r2, sl
 80182de:	6929      	ldr	r1, [r5, #16]
 80182e0:	9001      	str	r0, [sp, #4]
 80182e2:	f7e7 ff51 	bl	8000188 <memcpy>
 80182e6:	89aa      	ldrh	r2, [r5, #12]
 80182e8:	9b01      	ldr	r3, [sp, #4]
 80182ea:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 80182ee:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80182f2:	81aa      	strh	r2, [r5, #12]
 80182f4:	ebca 0206 	rsb	r2, sl, r6
 80182f8:	eb03 000a 	add.w	r0, r3, sl
 80182fc:	616e      	str	r6, [r5, #20]
 80182fe:	612b      	str	r3, [r5, #16]
 8018300:	6028      	str	r0, [r5, #0]
 8018302:	60aa      	str	r2, [r5, #8]
 8018304:	4626      	mov	r6, r4
 8018306:	46a2      	mov	sl, r4
 8018308:	4652      	mov	r2, sl
 801830a:	4659      	mov	r1, fp
 801830c:	f7fa fc5e 	bl	8012bcc <memmove>
 8018310:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8018314:	68ab      	ldr	r3, [r5, #8]
 8018316:	6828      	ldr	r0, [r5, #0]
 8018318:	1b9b      	subs	r3, r3, r6
 801831a:	4450      	add	r0, sl
 801831c:	1b14      	subs	r4, r2, r4
 801831e:	60ab      	str	r3, [r5, #8]
 8018320:	6028      	str	r0, [r5, #0]
 8018322:	f8c9 4008 	str.w	r4, [r9, #8]
 8018326:	b31c      	cbz	r4, 8018370 <__ssprint_r+0xf8>
 8018328:	f8d8 b000 	ldr.w	fp, [r8]
 801832c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8018330:	f108 0808 	add.w	r8, r8, #8
 8018334:	e7b0      	b.n	8018298 <__ssprint_r+0x20>
 8018336:	4626      	mov	r6, r4
 8018338:	46a2      	mov	sl, r4
 801833a:	e7e5      	b.n	8018308 <__ssprint_r+0x90>
 801833c:	4638      	mov	r0, r7
 801833e:	f7ff fd25 	bl	8017d8c <_realloc_r>
 8018342:	4603      	mov	r3, r0
 8018344:	2800      	cmp	r0, #0
 8018346:	d1d5      	bne.n	80182f4 <__ssprint_r+0x7c>
 8018348:	4638      	mov	r0, r7
 801834a:	6929      	ldr	r1, [r5, #16]
 801834c:	f7fe fc42 	bl	8016bd4 <_free_r>
 8018350:	230c      	movs	r3, #12
 8018352:	603b      	str	r3, [r7, #0]
 8018354:	89ab      	ldrh	r3, [r5, #12]
 8018356:	2200      	movs	r2, #0
 8018358:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801835c:	f04f 30ff 	mov.w	r0, #4294967295
 8018360:	81ab      	strh	r3, [r5, #12]
 8018362:	f8c9 2008 	str.w	r2, [r9, #8]
 8018366:	f8c9 2004 	str.w	r2, [r9, #4]
 801836a:	b003      	add	sp, #12
 801836c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018370:	2000      	movs	r0, #0
 8018372:	f8c9 0004 	str.w	r0, [r9, #4]
 8018376:	b003      	add	sp, #12
 8018378:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801837c <__sprint_r.part.0>:
 801837c:	6e4b      	ldr	r3, [r1, #100]	; 0x64
 801837e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018382:	049c      	lsls	r4, r3, #18
 8018384:	460f      	mov	r7, r1
 8018386:	4692      	mov	sl, r2
 8018388:	d52b      	bpl.n	80183e2 <__sprint_r.part.0+0x66>
 801838a:	6893      	ldr	r3, [r2, #8]
 801838c:	6812      	ldr	r2, [r2, #0]
 801838e:	b333      	cbz	r3, 80183de <__sprint_r.part.0+0x62>
 8018390:	4680      	mov	r8, r0
 8018392:	f102 0908 	add.w	r9, r2, #8
 8018396:	e919 0060 	ldmdb	r9, {r5, r6}
 801839a:	08b6      	lsrs	r6, r6, #2
 801839c:	d017      	beq.n	80183ce <__sprint_r.part.0+0x52>
 801839e:	3d04      	subs	r5, #4
 80183a0:	2400      	movs	r4, #0
 80183a2:	e001      	b.n	80183a8 <__sprint_r.part.0+0x2c>
 80183a4:	42a6      	cmp	r6, r4
 80183a6:	d010      	beq.n	80183ca <__sprint_r.part.0+0x4e>
 80183a8:	4640      	mov	r0, r8
 80183aa:	f855 1f04 	ldr.w	r1, [r5, #4]!
 80183ae:	463a      	mov	r2, r7
 80183b0:	f000 f8c4 	bl	801853c <_fputwc_r>
 80183b4:	1c43      	adds	r3, r0, #1
 80183b6:	f104 0401 	add.w	r4, r4, #1
 80183ba:	d1f3      	bne.n	80183a4 <__sprint_r.part.0+0x28>
 80183bc:	2300      	movs	r3, #0
 80183be:	f8ca 3008 	str.w	r3, [sl, #8]
 80183c2:	f8ca 3004 	str.w	r3, [sl, #4]
 80183c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80183ca:	f8da 3008 	ldr.w	r3, [sl, #8]
 80183ce:	eba3 0386 	sub.w	r3, r3, r6, lsl #2
 80183d2:	f8ca 3008 	str.w	r3, [sl, #8]
 80183d6:	f109 0908 	add.w	r9, r9, #8
 80183da:	2b00      	cmp	r3, #0
 80183dc:	d1db      	bne.n	8018396 <__sprint_r.part.0+0x1a>
 80183de:	2000      	movs	r0, #0
 80183e0:	e7ec      	b.n	80183bc <__sprint_r.part.0+0x40>
 80183e2:	f7fe fccf 	bl	8016d84 <__sfvwrite_r>
 80183e6:	2300      	movs	r3, #0
 80183e8:	f8ca 3008 	str.w	r3, [sl, #8]
 80183ec:	f8ca 3004 	str.w	r3, [sl, #4]
 80183f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080183f4 <__sprint_r>:
 80183f4:	6893      	ldr	r3, [r2, #8]
 80183f6:	b410      	push	{r4}
 80183f8:	b11b      	cbz	r3, 8018402 <__sprint_r+0xe>
 80183fa:	f85d 4b04 	ldr.w	r4, [sp], #4
 80183fe:	f7ff bfbd 	b.w	801837c <__sprint_r.part.0>
 8018402:	4618      	mov	r0, r3
 8018404:	6053      	str	r3, [r2, #4]
 8018406:	f85d 4b04 	ldr.w	r4, [sp], #4
 801840a:	4770      	bx	lr

0801840c <_write_r>:
 801840c:	b570      	push	{r4, r5, r6, lr}
 801840e:	4c08      	ldr	r4, [pc, #32]	; (8018430 <_write_r+0x24>)
 8018410:	4606      	mov	r6, r0
 8018412:	2500      	movs	r5, #0
 8018414:	4608      	mov	r0, r1
 8018416:	4611      	mov	r1, r2
 8018418:	461a      	mov	r2, r3
 801841a:	6025      	str	r5, [r4, #0]
 801841c:	f7e9 f978 	bl	8001710 <_write>
 8018420:	1c43      	adds	r3, r0, #1
 8018422:	d000      	beq.n	8018426 <_write_r+0x1a>
 8018424:	bd70      	pop	{r4, r5, r6, pc}
 8018426:	6823      	ldr	r3, [r4, #0]
 8018428:	2b00      	cmp	r3, #0
 801842a:	d0fb      	beq.n	8018424 <_write_r+0x18>
 801842c:	6033      	str	r3, [r6, #0]
 801842e:	bd70      	pop	{r4, r5, r6, pc}
 8018430:	2000e77c 	.word	0x2000e77c

08018434 <_calloc_r>:
 8018434:	b510      	push	{r4, lr}
 8018436:	fb02 f101 	mul.w	r1, r2, r1
 801843a:	f7fe fed7 	bl	80171ec <_malloc_r>
 801843e:	4604      	mov	r4, r0
 8018440:	b168      	cbz	r0, 801845e <_calloc_r+0x2a>
 8018442:	f850 2c04 	ldr.w	r2, [r0, #-4]
 8018446:	f022 0203 	bic.w	r2, r2, #3
 801844a:	3a04      	subs	r2, #4
 801844c:	2a24      	cmp	r2, #36	; 0x24
 801844e:	d818      	bhi.n	8018482 <_calloc_r+0x4e>
 8018450:	2a13      	cmp	r2, #19
 8018452:	d806      	bhi.n	8018462 <_calloc_r+0x2e>
 8018454:	4603      	mov	r3, r0
 8018456:	2200      	movs	r2, #0
 8018458:	601a      	str	r2, [r3, #0]
 801845a:	605a      	str	r2, [r3, #4]
 801845c:	609a      	str	r2, [r3, #8]
 801845e:	4620      	mov	r0, r4
 8018460:	bd10      	pop	{r4, pc}
 8018462:	2300      	movs	r3, #0
 8018464:	2a1b      	cmp	r2, #27
 8018466:	6003      	str	r3, [r0, #0]
 8018468:	6043      	str	r3, [r0, #4]
 801846a:	d90f      	bls.n	801848c <_calloc_r+0x58>
 801846c:	2a24      	cmp	r2, #36	; 0x24
 801846e:	6083      	str	r3, [r0, #8]
 8018470:	60c3      	str	r3, [r0, #12]
 8018472:	bf05      	ittet	eq
 8018474:	6103      	streq	r3, [r0, #16]
 8018476:	6143      	streq	r3, [r0, #20]
 8018478:	f100 0310 	addne.w	r3, r0, #16
 801847c:	f100 0318 	addeq.w	r3, r0, #24
 8018480:	e7e9      	b.n	8018456 <_calloc_r+0x22>
 8018482:	2100      	movs	r1, #0
 8018484:	f7fa fc06 	bl	8012c94 <memset>
 8018488:	4620      	mov	r0, r4
 801848a:	bd10      	pop	{r4, pc}
 801848c:	f100 0308 	add.w	r3, r0, #8
 8018490:	e7e1      	b.n	8018456 <_calloc_r+0x22>
 8018492:	bf00      	nop

08018494 <_close_r>:
 8018494:	b538      	push	{r3, r4, r5, lr}
 8018496:	4c07      	ldr	r4, [pc, #28]	; (80184b4 <_close_r+0x20>)
 8018498:	2300      	movs	r3, #0
 801849a:	4605      	mov	r5, r0
 801849c:	4608      	mov	r0, r1
 801849e:	6023      	str	r3, [r4, #0]
 80184a0:	f7e9 f907 	bl	80016b2 <_close>
 80184a4:	1c43      	adds	r3, r0, #1
 80184a6:	d000      	beq.n	80184aa <_close_r+0x16>
 80184a8:	bd38      	pop	{r3, r4, r5, pc}
 80184aa:	6823      	ldr	r3, [r4, #0]
 80184ac:	2b00      	cmp	r3, #0
 80184ae:	d0fb      	beq.n	80184a8 <_close_r+0x14>
 80184b0:	602b      	str	r3, [r5, #0]
 80184b2:	bd38      	pop	{r3, r4, r5, pc}
 80184b4:	2000e77c 	.word	0x2000e77c

080184b8 <_fclose_r>:
 80184b8:	2900      	cmp	r1, #0
 80184ba:	d03d      	beq.n	8018538 <_fclose_r+0x80>
 80184bc:	b570      	push	{r4, r5, r6, lr}
 80184be:	4605      	mov	r5, r0
 80184c0:	460c      	mov	r4, r1
 80184c2:	b108      	cbz	r0, 80184c8 <_fclose_r+0x10>
 80184c4:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80184c6:	b37b      	cbz	r3, 8018528 <_fclose_r+0x70>
 80184c8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80184cc:	b90b      	cbnz	r3, 80184d2 <_fclose_r+0x1a>
 80184ce:	2000      	movs	r0, #0
 80184d0:	bd70      	pop	{r4, r5, r6, pc}
 80184d2:	4628      	mov	r0, r5
 80184d4:	4621      	mov	r1, r4
 80184d6:	f7fe f9e7 	bl	80168a8 <__sflush_r>
 80184da:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80184dc:	4606      	mov	r6, r0
 80184de:	b133      	cbz	r3, 80184ee <_fclose_r+0x36>
 80184e0:	4628      	mov	r0, r5
 80184e2:	69e1      	ldr	r1, [r4, #28]
 80184e4:	4798      	blx	r3
 80184e6:	2800      	cmp	r0, #0
 80184e8:	bfb8      	it	lt
 80184ea:	f04f 36ff 	movlt.w	r6, #4294967295
 80184ee:	89a3      	ldrh	r3, [r4, #12]
 80184f0:	061b      	lsls	r3, r3, #24
 80184f2:	d41c      	bmi.n	801852e <_fclose_r+0x76>
 80184f4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80184f6:	b141      	cbz	r1, 801850a <_fclose_r+0x52>
 80184f8:	f104 0340 	add.w	r3, r4, #64	; 0x40
 80184fc:	4299      	cmp	r1, r3
 80184fe:	d002      	beq.n	8018506 <_fclose_r+0x4e>
 8018500:	4628      	mov	r0, r5
 8018502:	f7fe fb67 	bl	8016bd4 <_free_r>
 8018506:	2300      	movs	r3, #0
 8018508:	6323      	str	r3, [r4, #48]	; 0x30
 801850a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 801850c:	b121      	cbz	r1, 8018518 <_fclose_r+0x60>
 801850e:	4628      	mov	r0, r5
 8018510:	f7fe fb60 	bl	8016bd4 <_free_r>
 8018514:	2300      	movs	r3, #0
 8018516:	6463      	str	r3, [r4, #68]	; 0x44
 8018518:	f7fe fb0a 	bl	8016b30 <__sfp_lock_acquire>
 801851c:	2300      	movs	r3, #0
 801851e:	81a3      	strh	r3, [r4, #12]
 8018520:	f7fe fb08 	bl	8016b34 <__sfp_lock_release>
 8018524:	4630      	mov	r0, r6
 8018526:	bd70      	pop	{r4, r5, r6, pc}
 8018528:	f7fe fafc 	bl	8016b24 <__sinit>
 801852c:	e7cc      	b.n	80184c8 <_fclose_r+0x10>
 801852e:	4628      	mov	r0, r5
 8018530:	6921      	ldr	r1, [r4, #16]
 8018532:	f7fe fb4f 	bl	8016bd4 <_free_r>
 8018536:	e7dd      	b.n	80184f4 <_fclose_r+0x3c>
 8018538:	2000      	movs	r0, #0
 801853a:	4770      	bx	lr

0801853c <_fputwc_r>:
 801853c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018540:	8993      	ldrh	r3, [r2, #12]
 8018542:	4614      	mov	r4, r2
 8018544:	049a      	lsls	r2, r3, #18
 8018546:	b082      	sub	sp, #8
 8018548:	4607      	mov	r7, r0
 801854a:	460e      	mov	r6, r1
 801854c:	d406      	bmi.n	801855c <_fputwc_r+0x20>
 801854e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8018550:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8018554:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8018558:	81a3      	strh	r3, [r4, #12]
 801855a:	6662      	str	r2, [r4, #100]	; 0x64
 801855c:	f7fe fdcc 	bl	80170f8 <__locale_mb_cur_max>
 8018560:	2801      	cmp	r0, #1
 8018562:	d041      	beq.n	80185e8 <_fputwc_r+0xac>
 8018564:	4638      	mov	r0, r7
 8018566:	a901      	add	r1, sp, #4
 8018568:	4632      	mov	r2, r6
 801856a:	f104 035c 	add.w	r3, r4, #92	; 0x5c
 801856e:	f000 f8e9 	bl	8018744 <_wcrtomb_r>
 8018572:	f1b0 3fff 	cmp.w	r0, #4294967295
 8018576:	4680      	mov	r8, r0
 8018578:	d02f      	beq.n	80185da <_fputwc_r+0x9e>
 801857a:	2800      	cmp	r0, #0
 801857c:	d03c      	beq.n	80185f8 <_fputwc_r+0xbc>
 801857e:	f89d 1004 	ldrb.w	r1, [sp, #4]
 8018582:	2500      	movs	r5, #0
 8018584:	e009      	b.n	801859a <_fputwc_r+0x5e>
 8018586:	6823      	ldr	r3, [r4, #0]
 8018588:	7019      	strb	r1, [r3, #0]
 801858a:	6823      	ldr	r3, [r4, #0]
 801858c:	3301      	adds	r3, #1
 801858e:	6023      	str	r3, [r4, #0]
 8018590:	3501      	adds	r5, #1
 8018592:	45a8      	cmp	r8, r5
 8018594:	d930      	bls.n	80185f8 <_fputwc_r+0xbc>
 8018596:	ab01      	add	r3, sp, #4
 8018598:	5d59      	ldrb	r1, [r3, r5]
 801859a:	68a3      	ldr	r3, [r4, #8]
 801859c:	3b01      	subs	r3, #1
 801859e:	2b00      	cmp	r3, #0
 80185a0:	60a3      	str	r3, [r4, #8]
 80185a2:	daf0      	bge.n	8018586 <_fputwc_r+0x4a>
 80185a4:	69a2      	ldr	r2, [r4, #24]
 80185a6:	4293      	cmp	r3, r2
 80185a8:	db07      	blt.n	80185ba <_fputwc_r+0x7e>
 80185aa:	6823      	ldr	r3, [r4, #0]
 80185ac:	7019      	strb	r1, [r3, #0]
 80185ae:	6823      	ldr	r3, [r4, #0]
 80185b0:	7819      	ldrb	r1, [r3, #0]
 80185b2:	290a      	cmp	r1, #10
 80185b4:	f103 0301 	add.w	r3, r3, #1
 80185b8:	d1e9      	bne.n	801858e <_fputwc_r+0x52>
 80185ba:	4638      	mov	r0, r7
 80185bc:	4622      	mov	r2, r4
 80185be:	f000 f86d 	bl	801869c <__swbuf_r>
 80185c2:	f1a0 30ff 	sub.w	r0, r0, #4294967295
 80185c6:	fab0 f080 	clz	r0, r0
 80185ca:	0940      	lsrs	r0, r0, #5
 80185cc:	2800      	cmp	r0, #0
 80185ce:	d0df      	beq.n	8018590 <_fputwc_r+0x54>
 80185d0:	f04f 30ff 	mov.w	r0, #4294967295
 80185d4:	b002      	add	sp, #8
 80185d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80185da:	89a3      	ldrh	r3, [r4, #12]
 80185dc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80185e0:	81a3      	strh	r3, [r4, #12]
 80185e2:	b002      	add	sp, #8
 80185e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80185e8:	1e73      	subs	r3, r6, #1
 80185ea:	2bfe      	cmp	r3, #254	; 0xfe
 80185ec:	d8ba      	bhi.n	8018564 <_fputwc_r+0x28>
 80185ee:	b2f1      	uxtb	r1, r6
 80185f0:	4680      	mov	r8, r0
 80185f2:	f88d 1004 	strb.w	r1, [sp, #4]
 80185f6:	e7c4      	b.n	8018582 <_fputwc_r+0x46>
 80185f8:	4630      	mov	r0, r6
 80185fa:	b002      	add	sp, #8
 80185fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08018600 <_fstat_r>:
 8018600:	b538      	push	{r3, r4, r5, lr}
 8018602:	4c08      	ldr	r4, [pc, #32]	; (8018624 <_fstat_r+0x24>)
 8018604:	2300      	movs	r3, #0
 8018606:	4605      	mov	r5, r0
 8018608:	4608      	mov	r0, r1
 801860a:	4611      	mov	r1, r2
 801860c:	6023      	str	r3, [r4, #0]
 801860e:	f7e9 f853 	bl	80016b8 <_fstat>
 8018612:	1c43      	adds	r3, r0, #1
 8018614:	d000      	beq.n	8018618 <_fstat_r+0x18>
 8018616:	bd38      	pop	{r3, r4, r5, pc}
 8018618:	6823      	ldr	r3, [r4, #0]
 801861a:	2b00      	cmp	r3, #0
 801861c:	d0fb      	beq.n	8018616 <_fstat_r+0x16>
 801861e:	602b      	str	r3, [r5, #0]
 8018620:	bd38      	pop	{r3, r4, r5, pc}
 8018622:	bf00      	nop
 8018624:	2000e77c 	.word	0x2000e77c

08018628 <_isatty_r>:
 8018628:	b538      	push	{r3, r4, r5, lr}
 801862a:	4c07      	ldr	r4, [pc, #28]	; (8018648 <_isatty_r+0x20>)
 801862c:	2300      	movs	r3, #0
 801862e:	4605      	mov	r5, r0
 8018630:	4608      	mov	r0, r1
 8018632:	6023      	str	r3, [r4, #0]
 8018634:	f7e9 f846 	bl	80016c4 <_isatty>
 8018638:	1c43      	adds	r3, r0, #1
 801863a:	d000      	beq.n	801863e <_isatty_r+0x16>
 801863c:	bd38      	pop	{r3, r4, r5, pc}
 801863e:	6823      	ldr	r3, [r4, #0]
 8018640:	2b00      	cmp	r3, #0
 8018642:	d0fb      	beq.n	801863c <_isatty_r+0x14>
 8018644:	602b      	str	r3, [r5, #0]
 8018646:	bd38      	pop	{r3, r4, r5, pc}
 8018648:	2000e77c 	.word	0x2000e77c

0801864c <_lseek_r>:
 801864c:	b570      	push	{r4, r5, r6, lr}
 801864e:	4c08      	ldr	r4, [pc, #32]	; (8018670 <_lseek_r+0x24>)
 8018650:	4606      	mov	r6, r0
 8018652:	2500      	movs	r5, #0
 8018654:	4608      	mov	r0, r1
 8018656:	4611      	mov	r1, r2
 8018658:	461a      	mov	r2, r3
 801865a:	6025      	str	r5, [r4, #0]
 801865c:	f7e9 f83e 	bl	80016dc <_lseek>
 8018660:	1c43      	adds	r3, r0, #1
 8018662:	d000      	beq.n	8018666 <_lseek_r+0x1a>
 8018664:	bd70      	pop	{r4, r5, r6, pc}
 8018666:	6823      	ldr	r3, [r4, #0]
 8018668:	2b00      	cmp	r3, #0
 801866a:	d0fb      	beq.n	8018664 <_lseek_r+0x18>
 801866c:	6033      	str	r3, [r6, #0]
 801866e:	bd70      	pop	{r4, r5, r6, pc}
 8018670:	2000e77c 	.word	0x2000e77c

08018674 <_read_r>:
 8018674:	b570      	push	{r4, r5, r6, lr}
 8018676:	4c08      	ldr	r4, [pc, #32]	; (8018698 <_read_r+0x24>)
 8018678:	4606      	mov	r6, r0
 801867a:	2500      	movs	r5, #0
 801867c:	4608      	mov	r0, r1
 801867e:	4611      	mov	r1, r2
 8018680:	461a      	mov	r2, r3
 8018682:	6025      	str	r5, [r4, #0]
 8018684:	f7e9 f82c 	bl	80016e0 <_read>
 8018688:	1c43      	adds	r3, r0, #1
 801868a:	d000      	beq.n	801868e <_read_r+0x1a>
 801868c:	bd70      	pop	{r4, r5, r6, pc}
 801868e:	6823      	ldr	r3, [r4, #0]
 8018690:	2b00      	cmp	r3, #0
 8018692:	d0fb      	beq.n	801868c <_read_r+0x18>
 8018694:	6033      	str	r3, [r6, #0]
 8018696:	bd70      	pop	{r4, r5, r6, pc}
 8018698:	2000e77c 	.word	0x2000e77c

0801869c <__swbuf_r>:
 801869c:	b570      	push	{r4, r5, r6, lr}
 801869e:	460d      	mov	r5, r1
 80186a0:	4614      	mov	r4, r2
 80186a2:	4606      	mov	r6, r0
 80186a4:	b110      	cbz	r0, 80186ac <__swbuf_r+0x10>
 80186a6:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80186a8:	2b00      	cmp	r3, #0
 80186aa:	d048      	beq.n	801873e <__swbuf_r+0xa2>
 80186ac:	89a2      	ldrh	r2, [r4, #12]
 80186ae:	69a3      	ldr	r3, [r4, #24]
 80186b0:	60a3      	str	r3, [r4, #8]
 80186b2:	b291      	uxth	r1, r2
 80186b4:	0708      	lsls	r0, r1, #28
 80186b6:	d538      	bpl.n	801872a <__swbuf_r+0x8e>
 80186b8:	6923      	ldr	r3, [r4, #16]
 80186ba:	2b00      	cmp	r3, #0
 80186bc:	d035      	beq.n	801872a <__swbuf_r+0x8e>
 80186be:	0489      	lsls	r1, r1, #18
 80186c0:	b2ed      	uxtb	r5, r5
 80186c2:	d515      	bpl.n	80186f0 <__swbuf_r+0x54>
 80186c4:	6822      	ldr	r2, [r4, #0]
 80186c6:	6961      	ldr	r1, [r4, #20]
 80186c8:	1ad3      	subs	r3, r2, r3
 80186ca:	428b      	cmp	r3, r1
 80186cc:	da1c      	bge.n	8018708 <__swbuf_r+0x6c>
 80186ce:	3301      	adds	r3, #1
 80186d0:	68a1      	ldr	r1, [r4, #8]
 80186d2:	1c50      	adds	r0, r2, #1
 80186d4:	3901      	subs	r1, #1
 80186d6:	60a1      	str	r1, [r4, #8]
 80186d8:	6020      	str	r0, [r4, #0]
 80186da:	7015      	strb	r5, [r2, #0]
 80186dc:	6962      	ldr	r2, [r4, #20]
 80186de:	429a      	cmp	r2, r3
 80186e0:	d01a      	beq.n	8018718 <__swbuf_r+0x7c>
 80186e2:	89a3      	ldrh	r3, [r4, #12]
 80186e4:	07db      	lsls	r3, r3, #31
 80186e6:	d501      	bpl.n	80186ec <__swbuf_r+0x50>
 80186e8:	2d0a      	cmp	r5, #10
 80186ea:	d015      	beq.n	8018718 <__swbuf_r+0x7c>
 80186ec:	4628      	mov	r0, r5
 80186ee:	bd70      	pop	{r4, r5, r6, pc}
 80186f0:	6e61      	ldr	r1, [r4, #100]	; 0x64
 80186f2:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80186f6:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
 80186fa:	81a2      	strh	r2, [r4, #12]
 80186fc:	6822      	ldr	r2, [r4, #0]
 80186fe:	6661      	str	r1, [r4, #100]	; 0x64
 8018700:	6961      	ldr	r1, [r4, #20]
 8018702:	1ad3      	subs	r3, r2, r3
 8018704:	428b      	cmp	r3, r1
 8018706:	dbe2      	blt.n	80186ce <__swbuf_r+0x32>
 8018708:	4630      	mov	r0, r6
 801870a:	4621      	mov	r1, r4
 801870c:	f7fe f976 	bl	80169fc <_fflush_r>
 8018710:	b940      	cbnz	r0, 8018724 <__swbuf_r+0x88>
 8018712:	6822      	ldr	r2, [r4, #0]
 8018714:	2301      	movs	r3, #1
 8018716:	e7db      	b.n	80186d0 <__swbuf_r+0x34>
 8018718:	4630      	mov	r0, r6
 801871a:	4621      	mov	r1, r4
 801871c:	f7fe f96e 	bl	80169fc <_fflush_r>
 8018720:	2800      	cmp	r0, #0
 8018722:	d0e3      	beq.n	80186ec <__swbuf_r+0x50>
 8018724:	f04f 30ff 	mov.w	r0, #4294967295
 8018728:	bd70      	pop	{r4, r5, r6, pc}
 801872a:	4630      	mov	r0, r6
 801872c:	4621      	mov	r1, r4
 801872e:	f7fd f875 	bl	801581c <__swsetup_r>
 8018732:	2800      	cmp	r0, #0
 8018734:	d1f6      	bne.n	8018724 <__swbuf_r+0x88>
 8018736:	89a2      	ldrh	r2, [r4, #12]
 8018738:	6923      	ldr	r3, [r4, #16]
 801873a:	b291      	uxth	r1, r2
 801873c:	e7bf      	b.n	80186be <__swbuf_r+0x22>
 801873e:	f7fe f9f1 	bl	8016b24 <__sinit>
 8018742:	e7b3      	b.n	80186ac <__swbuf_r+0x10>

08018744 <_wcrtomb_r>:
 8018744:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018748:	4605      	mov	r5, r0
 801874a:	b086      	sub	sp, #24
 801874c:	461e      	mov	r6, r3
 801874e:	460c      	mov	r4, r1
 8018750:	b1a1      	cbz	r1, 801877c <_wcrtomb_r+0x38>
 8018752:	4b10      	ldr	r3, [pc, #64]	; (8018794 <_wcrtomb_r+0x50>)
 8018754:	4617      	mov	r7, r2
 8018756:	f8d3 8000 	ldr.w	r8, [r3]
 801875a:	f7fe fcc9 	bl	80170f0 <__locale_charset>
 801875e:	9600      	str	r6, [sp, #0]
 8018760:	4603      	mov	r3, r0
 8018762:	4621      	mov	r1, r4
 8018764:	463a      	mov	r2, r7
 8018766:	4628      	mov	r0, r5
 8018768:	47c0      	blx	r8
 801876a:	1c43      	adds	r3, r0, #1
 801876c:	d103      	bne.n	8018776 <_wcrtomb_r+0x32>
 801876e:	2200      	movs	r2, #0
 8018770:	238a      	movs	r3, #138	; 0x8a
 8018772:	6032      	str	r2, [r6, #0]
 8018774:	602b      	str	r3, [r5, #0]
 8018776:	b006      	add	sp, #24
 8018778:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801877c:	4b05      	ldr	r3, [pc, #20]	; (8018794 <_wcrtomb_r+0x50>)
 801877e:	681f      	ldr	r7, [r3, #0]
 8018780:	f7fe fcb6 	bl	80170f0 <__locale_charset>
 8018784:	9600      	str	r6, [sp, #0]
 8018786:	4603      	mov	r3, r0
 8018788:	4622      	mov	r2, r4
 801878a:	4628      	mov	r0, r5
 801878c:	a903      	add	r1, sp, #12
 801878e:	47b8      	blx	r7
 8018790:	e7eb      	b.n	801876a <_wcrtomb_r+0x26>
 8018792:	bf00      	nop
 8018794:	20000b78 	.word	0x20000b78

08018798 <__ascii_wctomb>:
 8018798:	b121      	cbz	r1, 80187a4 <__ascii_wctomb+0xc>
 801879a:	2aff      	cmp	r2, #255	; 0xff
 801879c:	d804      	bhi.n	80187a8 <__ascii_wctomb+0x10>
 801879e:	700a      	strb	r2, [r1, #0]
 80187a0:	2001      	movs	r0, #1
 80187a2:	4770      	bx	lr
 80187a4:	4608      	mov	r0, r1
 80187a6:	4770      	bx	lr
 80187a8:	238a      	movs	r3, #138	; 0x8a
 80187aa:	6003      	str	r3, [r0, #0]
 80187ac:	f04f 30ff 	mov.w	r0, #4294967295
 80187b0:	4770      	bx	lr
 80187b2:	bf00      	nop
